{"version":3,"file":"xabber.main.js","mappings":"UAAIA,ECCAC,EADAC,ECAAC,EACAC,E,8DCDJ,8txC,6DCAA,muZ,6DCAA,oR,6DCAA,25D,6DCAA,igC,6DCAA,kqE,6DCAA,81B,4DCAA,moB,6DCAA,2jF,6DCAA,iT,6DCAA,kuB,4DCAA,iY,6DCAA,8uB,6DCAA,klB,6DCAA,soH,6DCAA,w9E,6DCAA,k6B,2DCAA,o2B,6DCAA,6vK,6DCAA,22jB,6DCAA,0yqC,6DCAA,yP,6DCAA,+rB,6DCAA,m7B,6DCAA,6gB,6DCAA,0sC,6DCAA,m7lB,6DCAA,4mG,4DCAA,qjC,6DCAA,wkC,6DCAA,kmB,6DCAA,8jI,6DCAA,ooE,6DCAA,k7B,6DCAA,8qJ,6DCAA,62D,6DCAA,i2C,6DCAA,gwI,6DCAA,y5C,6DCAA,s9E,6DCAA,0pE,4DCAA,w9B,6DCAA,ue,6DCAA,4a,6DCAA,o2E,6DCAA,we,6DCAA,quC,6DCAA,o7pD,6DCAA,whjE,6DCAA,0/I,6DCAA,uS,6DCAA,qpO,6DCAA,k6C,4DCAA,6hD,6DCAA,8H,6DCAA,orO,6DCAA,06D,4DCAA,yF,6DCAA,oxD,6DCAA,8K,6DCAA,6S,6DCAA,kT,6DCAA,24B,6DCAA,ijM,4DCAA,2+B,6DCAA,8T,6DCAA,iE,6DCAA,sgB,6DCAA,6V,6DCAA,ivC,6DCAA,mkB,6DCAA,oR,6DCAA,mwB,6DCAA,of,6DCAA,oZ,6DCAA,28E,6DCAA,muC,6DCAA,2xB,6DCAA,+Z,6DCAA,kpB,6DCAA,20B,6DCAA,6jC,6DCAA,2jD,6DCAA,w8B,6DCAA,u/C,6DCAA,0qE,6DCAA,6e,6DCAA,0J,6DCAA,8yF,6DCAA,4hB,6DCAA,uhC,6DCAA,oY,4DCAA,yjB,6DCAA,y3B,6DCAA,+nC,6DCAA,87C,6DCAA,slE,6DCAA,woB,6DCAA,iE,6DCAA,0yG,6DCAA,ghE,6DCAA,2hB,6DCAA,8H,6DCAA,myB,6DCAA,6yB,6DCAA,q1E,6DCAA,yS,6DCAA,8U,6DCAA,iR,6DCAA,ujI,6DCAA,6xO,6DCAA,2R,6DCAA,4F,6DCAA,oS,6DCAA,y3H,4DCAA,guU,6DCAA,kX,6DCAA,6zB,6DCAA,yrB,6DCAA,g3C,6DCAA,0Q,6DCAA,0C,6DCAA,qjK,6DCAA,07R,6DCAA,q4F,6DCAA,qoG,6DCAA,0tK,6DCAA,+wD,6DCAA,qxE,6DCAA,wmB,6DCAA,ga,6DCAA,6pB,6DCAA,y2B,6DCAA,qkB,6DCAA,8iB,6DCAA,q1I,6DCAA,0jO,4DCAA,+sF,6DCAA,wH,6DCAA,ulD,6DCAA,06C,6DCAA,i9B,6DCAA,4uD,6DCAA,mvE,6DCAA,iY,6DCAA,8jB,6DCAA,i0B,6DCAA,yL,6DCAA,qV,6DCAA,6R,6DCAA,q6E,6DCAA,kT,6DCAA,2d,6DCAA,46B,6DCAA,4X,6DCAA,+e,6DCAA,gsD,6DCAA,oQ,4DCAA,4Z,6DCAA,ygD,6DCAA,4mB,6DCAA,u6D,6DCAA,slB,6DCAA,sgD,6DCAA,2F,6DCAA,+hE,6DCAA,kX,4DCAA,kH,6DCAA,ouG,6DCAA,g7B,6DCAA,u0B,6DCAA,ggC,6DCAA,+3B,6DCAA,iuC,6DCAA,o3B,6DCAA,ogC,6DCAA,88B,6DCAA,g3B,6DCAA,soC,6DCAA,ytC,6DCAA,0pC,6DCAA,k8B,6DCAA,qpC,6DCAA,qnD,6DCAA,qiC,6DCAA,m9B,4DCAA,s6B,6DCAA,koC,6DCAA,ioC,6DCAA,o3B,6DCAA,qrB,6DCAA,6uB,6DCAA,2hB,6DCAA,2iB,6DCAA,2nB,6DCAA,yjB,6DCAA,i8B,6DCAA,w0B,4DCAA,izB,6DCAA,o3B,6DCAA,klB,6DCAA,0uB,6DCAA,yxB,6DCAA,k+B,6DCAA,6lC,6DCAA,01B,6DCAA,6tC,6DCAA,wyB,6DCAA,2uB,6DCAA,isB,6DCAA,mqB,6DCAA,q/B,4DCAA,ktB,6DCAA,6pB,6DCAA,8/B,6DCAA,84B,6DCAA,ovB,6DCAA,woB,6DCAA,iqB,6DCAA,kpB,6DCAA,k0B,4DCAA,ynB,6DCAA,4sB,4DCAA,wwC,6DCAA,22B,6DCAA,gwB,6DCAA,ixB,6DCAA,knB,6DCAA,wiC,6DCAA,igC,6DCAA,kiD,6DCAA,+xB,6DCAA,64E,6DCAA,0hC,6DCAA,+3B,6DCAA,s8B,4DCAA,w0F,6DCAA,0gB,6DCAA,+8B,6DCAA,myB,6DCAA,kqB,4DCAA,krD,6DCAA,s2B,6DCAA,8uB,6DCAA,+oC,6DCAA,y5B,6DCAA,wtB,6DCAA,yzB,6DCAA,i2B,6DCAA,m3B,6DCAA,u7B,4DCAA,wgC,4DCAA,24B,6DCAA,+9C,4DCAA,y+B,6DCAA,mgC,6DCAA,k4B,4DCAA,i4C,4DCAA,8rB,6DCAA,svB,6DCAA,ogB,6DCAA,yoB,6DCAA,61C,6DCAA,6hB,6DCAA,qvB,6DCAA,07B,6DCAA,gvB,6DCAA,i8B,4DCAA,k6B,6DCAA,2f,6DCAA,+4B,6DCAA,ikC,6DCAA,qpB,6DCAA,wuB,6DCAA,gmB,6DCAA,6xL,6DCAA,68B,6DCAA,o8C,6DCAA,o4B,6DCAA,wtC,6DCAA,ktC,6DCAA,y9B,6DCAA,2oB,6DCAA,uwB,4DCAA,2kC,6DCAA,m6B,2DCAA,0uB,4DCAA,inC,4DCAA,q7B,6DCAA,2tB,6DCAA,k5B,6DCAA,0nB,6DCAA,6qB,6DCAA,4uB,4DCAA,4hB,6DCAA,u6B,4DCAA,6mD,6DCAA,y4C,6DCAA,6lC,6DCAA,8wB,6DCAA,86Q,6DCAA,ypY,6DCAA,07V,6DCAA,uN,6DCAA,shf,6DCAA,IAAIC,EAAY,CAEZC,kBAAmB,KACnBC,aAAc,iBACdC,gBAAiB,KAEjBC,kBAAmB,oBAEnBC,gBAAiB,4BACjBC,qBAAsB,iCACtBC,gBAAiB,oCACjBC,iBAAkB,+BAElBC,aAAc,KACdC,aAAc,KACdC,WAAY,KAEZC,gBAAiB,EACjBC,gBAAiB,EACjBC,eAAgB,EAChBC,eAAgB,EAChBC,gBAAiB,EAEjBC,UAAW,QAEXC,cAAe,EACfC,QAAS,EACTC,UAAW,GACXC,UAAW,GACXC,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,eAAgB,GAChBC,aAAc,GACdC,gBAAiB,GACjBC,eAAgB,GAChBC,WAAY,GACZC,kBAAmB,GACnBC,OAAQ,GAERC,eAAgB,IAEhBC,aAAcC,OAAOC,aAAa,MAElCC,eAAgB,KAEhBC,cAAe,CACX,EAAG,QACH,EAAG,aACH,EAAG,WACH,EAAG,iBACH,EAAG,WACH,EAAG,YACH,EAAG,eACH,EAAG,gBACH,EAAG,WA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A,iBACA,cACA,aACA,eAEJC,SAAU,CACN,WACA,WACA,WACA,YACA,6BACA,aACA,WACA,WACA,gBACA,sCACA,kBACA,0CACA,8CACA,sBAEJC,IAAK,CACD,mBAEJC,MAAO,CACH,iDACA,4BAEJC,QAAS,CACL,kBACA,mBACA,+BACA,oBACA,+BAEJC,aAAc,CACV,gCACA,oDAIRC,UAAW,CACP,GAAM,UACN,GAAI,sBACJ,QAAS,UACT,QAAS,eACT,QAAS,aACT,QAAS,YACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,UACT,QAAS,QACT,QAAS,UACT,QAAS,WACT,MAAS,wBACT,QAAS,UACT,QAAS,QACT,QAAS,QACT,QAAS,QACT,SAAU,WACV,QAAS,WACT,QAAS,UACT,GAAM,QACN,QAAS,SACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,mBACT,QAAS,WACT,QAAS,WACT,QAAS,MACT,QAAS,UACT,SAAU,mBACV,QAAS,MACT,QAAS,QACT,QAAS,WACT,QAAS,SACT,QAAS,gBACT,QAAS,WACT,QAAS,aACT,QAAS,SACT,QAAS,QACT,QAAS,gBACT,QAAS,iBACT,QAAS,SACT,QAAS,aACT,QAAS,kBACT,QAAS,UACT,QAAS,mBACT,QAAS,SACT,QAAS,wBACT,QAAS,YACT,SAAU,SACV,QAAS,SACT,QAAS,UACT,SAAU,QACV,QAAS,QACT,QAAS,aACT,QAAS,cACT,QAAS,QACT,aAAc,yBACd,QAAS,kBACT,QAAS,UACT,QAAS,YACT,QAAS,QACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,SAAU,UACV,QAAS,SACT,QAAS,aACT,QAAS,sBACT,QAAS,aACT,QAAS,SACT,QAAS,OACT,QAAS,QACT,QAAS,WAGbC,0BAA2B,CACvB,MAAS,WACT,QAAS,MAGbC,kBAAmB,CAAC,EAEpBC,mBAAoB,iCACpBC,gBAAiB,gCACjBC,iBAAiB,EACjBC,uBAAuB,EACvBC,0BAA2B,8CAC3BC,eAAe,EACfC,qBAAsB,OAEtBC,cAAe,eACfC,YAAa,0CACbC,wBAAyB,iBACzBC,gBAAiBC,KAAKC,IAAI,EAAG,IAE7BC,WAAY,GACZC,iBAAkB,IAClBC,mBAAoB,GAEpBC,WAAY,MACZC,YAAa,iBACbC,kBAAmB,SACnBC,yBAA0B,+BAC1BC,YAAa,mCACbC,aAAc,gCACdC,uBAAuB,EACvBC,cAAc,EACdC,0BAA2B,gGAC3BC,4BAA6B,kGAC7BC,cAAe,0BACfC,kBAAmB,4CACnBC,oBAAqB,qCACrBC,0BAA2B,gEAG/BzM,iBAA6B,CAAC,GAC9BA,EAAU0M,iBAAiB1M,EAAU8E,mBAAqB,SAC1D9E,EAAU0M,iBAAiB1M,EAAU6E,oBAAsB,UAC3D7E,EAAU0M,iBAAiB1M,EAAU+E,mBAAqB,SAE1D/E,EAAU2M,UAAY,CAAC,EACvB3M,EAAU2M,UAAU3M,EAAUiF,WAAa,QAC3CjF,EAAU2M,UAAU3M,EAAUkF,aAAe,UAC7ClF,EAAU2M,UAAU3M,EAAUmF,UAAY,OAC1CnF,EAAU2M,UAAU3M,EAAUoF,eAAiB,YAC/CpF,EAAU2M,UAAU3M,EAAUqF,eAAiB,YAC/CrF,EAAU2M,UAAU3M,EAAUsF,cAAgB,WAC9CtF,EAAU2M,UAAU3M,EAAUgF,aAAe,cAC7ChF,EAAU2M,UAAU3M,EAAUuF,WAAa,QAE3CvF,EAAU4M,kBAAoB,CAAC,EAC/B5M,EAAU4M,kBAAkB5M,EAAUiF,WAAa,mCACnDjF,EAAU4M,kBAAkB5M,EAAUkF,aAAe,qCACrDlF,EAAU4M,kBAAkB5M,EAAUmF,UAAY,kCAClDnF,EAAU4M,kBAAkB5M,EAAUoF,eAAiB,uCACvDpF,EAAU4M,kBAAkB5M,EAAUqF,eAAiB,uCACvDrF,EAAU4M,kBAAkB5M,EAAUsF,cAAgB,sCACtDtF,EAAU4M,kBAAkB5M,EAAUgF,aAAe,mCACrDhF,EAAU4M,kBAAkB5M,EAAUuF,WAAa,mCAEnD,S,qdCrcA,QAAe,WAAS,CACpBsH,EAAG,IACHC,EAAG,IACHC,OAAQ,IACRC,WAAY,IACZC,KAAMC,EAAA,EACNC,MAAO,IACPC,UAAW,IACXC,KAAM,IACNC,KAAM,IACNC,OAAQ,IACRC,aAAc,IACdC,wBAAyB,IACzBC,eAAgB,IAChBC,uBAAwB,IACxBC,OAAQ,IACRC,UAAW,IACXC,cAAe,IACfC,QAAS,KACV,K,eCvDC,qBAAqB,CACjBC,SAAW,sBACXC,YAAc,uBAGlB,IAAIC,EAAY,CAAC,EAcbC,EAAe,SAAUC,EAAMC,GAC/BA,IAAYA,EAAU,CAAC,GACvB,IAAIC,EAAOF,EAAKG,MAAM,KAClBC,EAAM,aAAW,SAAQ,KAA0BF,EAAKG,KAAK,KAAK,SAASC,SAC3EC,EAAWL,EAAKjG,MAChBuG,EAAMV,EACV,SAAOI,GAAM,SAAUO,GACnBD,EAAIC,KAAUD,EAAIC,GAAQ,CAAC,GAC3BD,EAAMA,EAAIC,EACd,IACIR,EAAQS,OACRF,EAAID,GAAYH,EAEhBI,EAAID,GAAY,SAAUI,GACtB,OA1BI,SAAUC,GACtB,IAAIC,EAAQ,IAAE,UAAUD,KAAKA,GAQ7B,OAPAC,EAAMC,KAAK,qBAAqBC,MAAK,WACjC,IAAIC,EAAM,IAAEC,MACRC,EAAWF,EAAIL,KAAK,WACxBK,EAAIG,YAAY,oBAAoBC,SAAS,OAAOF,GAC/CT,KAAK,eAAgB,MAC1BO,EAAIJ,KAAKd,EAAUuB,IAAIH,KAC3B,IACOL,EAAMD,MACjB,CAgBmBU,CAAUlB,EAAIO,GACzB,CAER,EAcIY,EAAc,SAAUvB,GACxBD,EAAaC,EAAM,CAACU,QAAQ,GAChC,EAEIc,EAAiB,SAAUxB,GAC3BD,EAAaC,EAAM,CAACU,QAAQ,GAChC,EAGAa,EAAY,eACZA,EAAY,qBACZA,EAAY,6BACZA,EAAY,yBACZA,EAAY,iCACZA,EAAY,+BACZA,EAAY,0BACZA,EAAY,qBACZA,EAAY,gBACZA,EAAY,iBACZA,EAAY,uBACZA,EAAY,cACZA,EAAY,qBACZA,EAAY,4BACZA,EAAY,qBACZA,EAAY,qBAEZA,EAAY,4BACZA,EAAY,qCACZA,EAAY,kCACZA,EAAY,8BACZA,EAAY,iCACZA,EAAY,6BACZA,EAAY,0CAEZA,EAAY,uBACZA,EAAY,wBACZA,EAAY,4BACZA,EAAY,yBACZA,EAAY,uCACZA,EAAY,kCACZA,EAAY,0BACZA,EAAY,2BACZA,EAAY,0CACZA,EAAY,mCACZA,EAAY,oCACZA,EAAY,qBACZA,EAAY,2BACZA,EAAY,yBACZA,EAAY,wBACZA,EAAY,yBACZA,EAAY,8BACZA,EAAY,iCACZA,EAAY,uCACZA,EAAY,0BACZA,EAAY,uBACZA,EAAY,6BACZA,EAAY,+BACZA,EAAY,qCACZA,EAAY,gCACZA,EAAY,4BACZA,EAAY,wCAEZA,EAAY,eACZA,EAAY,qBACZA,EAAY,oBACZA,EAAY,0BACZA,EAAY,qBAEZA,EAAY,4BACZA,EAAY,oCACZA,EAAY,qCACZA,EAAY,6CAEZA,EAAY,yBACZA,EAAY,wBACZA,EAAY,iCACZA,EAAY,gCACZA,EAAY,wBACZA,EAAY,uBACZA,EAAY,wBACZA,EAAY,+BACZA,EAAY,8BACZA,EAAY,iCACZA,EAAY,4BACZA,EAAY,kCACZA,EAAY,4BACZA,EAAY,2BACZA,EAAY,iCACZA,EAAY,yCACZA,EAAY,6BACZA,EAAY,wBACZA,EAAY,qCACZA,EAAY,gCACZA,EAAY,mBACZA,EAAY,yBACZA,EAAY,uBACZA,EAAY,sBACZA,EAAY,uBACZA,EAAY,8BACZA,EAAY,gCACZA,EAAY,8CACZA,EAAY,oDACZA,EAAY,2CACZA,EAAY,iDACZA,EAAY,mCACZA,EAAY,mDACZA,EAAY,6CACZA,EAAY,mDACZA,EAAY,0CACZA,EAAY,gDACZA,EAAY,iDACZA,EAAY,gDACZA,EAAY,uDACZA,EAAY,4CACZA,EAAY,qDACZA,EAAY,kDACZA,EAAY,2CACZA,EAAY,yCACZA,EAAY,8CACZA,EAAY,uCACZA,EAAY,uDACZA,EAAY,iDACZA,EAAY,qCACZA,EAAY,iDACZA,EAAY,wCACZA,EAAY,oDACZA,EAAY,+DACZA,EAAY,mCACZA,EAAY,oCACZA,EAAY,qCACZA,EAAY,2CACZA,EAAY,kCAEZA,EAAY,qBACZA,EAAY,+BACZA,EAAY,mBACZA,EAAY,mBACZA,EAAY,oBACZA,EAAY,yBACZA,EAAY,sBACZA,EAAY,kCACZA,EAAY,8BACZA,EAAY,qBACZA,EAAY,uBACZA,EAAY,wBACZA,EAAY,8BACZA,EAAY,uBACZA,EAAY,0BACZA,EAAY,sBACZA,EAAY,uBACZA,EAAY,2BACZA,EAAY,4BACZA,EAAY,yBACZA,EAAY,8BACZA,EAAY,iCACZA,EAAY,uBACZA,EAAY,+BACZA,EAAY,iCACZA,EAAY,sCACZA,EAAY,gCACZA,EAAY,wBACZA,EAAY,2BACZA,EAAY,6BACZA,EAAY,sCACZA,EAAY,+BACZA,EAAY,gCACZA,EAAY,iCACZA,EAAY,iCACZA,EAAY,iCACZA,EAAY,iCACZA,EAAY,iCACZA,EAAY,wCACZA,EAAY,wCACZA,EAAY,wCACZA,EAAY,wCACZA,EAAY,wCACZA,EAAY,iCACZA,EAAY,6BACZA,EAAY,0CACZA,EAAY,oCACZA,EAAY,2CACZA,EAAY,kCACZA,EAAY,4BACZA,EAAY,oCAGZA,EAAY,2BACZA,EAAY,iCACZA,EAAY,yBAEZC,EAAe,iBACfA,EAAe,YACfA,EAAe,uBACfA,EAAe,cACfA,EAAe,kBACfA,EAAe,qBACfA,EAAe,aACfA,EAAe,4BACfA,EAAe,eACfA,EAAe,oBACfA,EAAe,qBACfA,EAAe,0BACfA,EAAe,sBACfA,EAAe,6BACfA,EAAe,4BACfA,EAAe,uBACfA,EAAe,yBACfA,EAAe,aACfA,EAAe,kBACfA,EAAe,kBACfA,EAAe,qBACfA,EAAe,yBACfA,EAAe,gBACfA,EAAe,YACfA,EAAe,gBACfA,EAAe,aACfA,EAAe,YACfA,EAAe,mCACfA,EAAe,uCACfA,EAAe,oCACfA,EAAe,aACfA,EAAe,kBACfA,EAAe,mBACfA,EAAe,YACfA,EAAe,YACfA,EAAe,oBACfA,EAAe,mBACfA,EAAe,2BACfA,EAAe,mBACfA,EAAe,gCACfA,EAAe,YACfA,EAAe,aACfA,EAAe,cACfA,EAAe,cACfA,EAAe,sBACfA,EAAe,gBACfA,EAAe,wBACfA,EAAe,WACfA,EAAe,YACfA,EAAe,WACfA,EAAe,mBACfA,EAAe,eACfA,EAAe,uBACfA,EAAe,aACfA,EAAe,qBACfA,EAAe,mBACfA,EAAe,2BACfA,EAAe,mBACfA,EAAe,aACfA,EAAe,oBACfA,EAAe,YACfA,EAAe,cACfA,EAAe,wBACfA,EAAe,sBACfA,EAAe,sBACfA,EAAe,qBACfA,EAAe,kBACfA,EAAe,eACfA,EAAe,YACfA,EAAe,kBACfA,EAAe,gBACfA,EAAe,cACfA,EAAe,aACfA,EAAe,cACfA,EAAe,sBACfA,EAAe,qBACfA,EAAe,aACfA,EAAe,WACfA,EAAe,aACfA,EAAe,WACfA,EAAe,eACfA,EAAe,oBACfA,EAAe,gBACfA,EAAe,YACfA,EAAe,oBACfA,EAAe,oBACfA,EAAe,mBACfA,EAAe,2BACfA,EAAe,mBACfA,EAAe,gBACfA,EAAe,wBACfA,EAAe,aACfA,EAAe,oBACfA,EAAe,eACfA,EAAe,WACfA,EAAe,mBACfA,EAAe,uBACfA,EAAe,oBACfA,EAAe,oBACfA,EAAe,YACfA,EAAe,qBACfA,EAAe,eACfA,EAAe,WACfA,EAAe,mBACfA,EAAe,cACfA,EAAe,0BACfA,EAAe,qBACfA,EAAe,sBACfA,EAAe,qBACfA,EAAe,sBACfA,EAAe,eACfA,EAAe,YACfA,EAAe,iBACfA,EAAe,kBACfA,EAAe,UACfA,EAAe,eACfA,EAAe,gBACfA,EAAe,YACfA,EAAe,iBACfA,EAAe,kBACfA,EAAe,kBACfA,EAAe,kBACfA,EAAe,qBACfA,EAAe,eACfA,EAAe,iBACfA,EAAe,aACfA,EAAe,sBACfA,EAAe,2BACfA,EAAe,kBACfA,EAAe,0BACfA,EAAe,kBACfA,EAAe,aA7UO,SAAUxB,GAC5B,IAAIE,EAAOF,EAAKG,MAAM,KAClBC,EAAM,SAAQ,KAAeF,EAAKG,KAAK,KAAK,SAC5CE,EAAWL,EAAKjG,MAChBuG,EAAMV,EACV,SAAOI,GAAM,SAAUO,GACnBD,EAAIC,KAAUD,EAAIC,GAAQ,CAAC,GAC3BD,EAAMA,EAAIC,EACd,IACAD,EAAID,GAAYH,CACpB,CAqUAqB,CAAgB,mBAEhB,UCtXJ,IAAIC,EAAW,CACX,kBAAqB,CAAC,CAACC,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAC5+I,iBAAoB,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IACtkF,mBAAsB,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IACzzF,gBAAmB,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IACp7E,kBAAqB,CAAC,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAA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AG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EA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AQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAA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E,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,SAAS,EAAE,GAAK,GAAG,GAAK,GAAG,GAAK,EAAE,GAAK,GAAG,GAAK,EAAE,QAAQ,GAAG,QAAQ,GAAG,GAAK,QAAuF,KAAnD,OAAsBsY,GAA6B,6B,iBCApvB,IAAIwQ,EAAM,CACT,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,IACA,KAED,UAAW,CACV,MACA,MAED,cAAe,CACd,MACA,MAED,aAAc,CACb,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,KAED,eAAgB,C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","sources":["webpack://xabber.web/webpack/runtime/chunk loaded","webpack://xabber.web/webpack/runtime/create fake namespace object","webpack://xabber.web/webpack/runtime/load script","webpack://xabber.web/./templates/accounts/account_settings_modal.html","webpack://xabber.web/./templates/accounts/add_account.html","webpack://xabber.web/./templates/accounts/audio_file_waveform.html","webpack://xabber.web/./templates/accounts/avatars_gallery.html","webpack://xabber.web/./templates/accounts/change_password.html","webpack://xabber.web/./templates/accounts/change_status.html","webpack://xabber.web/./templates/accounts/current_token_item.html","webpack://xabber.web/./templates/accounts/current_token_item_modal.html","webpack://xabber.web/./templates/accounts/emoji_panel.html","webpack://xabber.web/./templates/accounts/emoji_picker.html","webpack://xabber.web/./templates/accounts/emoji_picker_tabs.html","webpack://xabber.web/./templates/accounts/existing_groupchat_item.html","webpack://xabber.web/./templates/accounts/global_settings_item.html","webpack://xabber.web/./templates/accounts/global_settings_item_modal.html","webpack://xabber.web/./templates/accounts/media_gallery_account.html","webpack://xabber.web/./templates/accounts/media_gallery_account_file.html","webpack://xabber.web/./templates/accounts/resource.html","webpack://xabber.web/./templates/accounts/resource_right.html","webpack://xabber.web/./templates/accounts/settings_left.html","webpack://xabber.web/./templates/accounts/settings_right.html","webpack://xabber.web/./templates/accounts/single_account_settings_modal.html","webpack://xabber.web/./templates/accounts/status_message_input_widget.html","webpack://xabber.web/./templates/accounts/token_item.html","webpack://xabber.web/./templates/accounts/token_item_modal.html","webpack://xabber.web/./templates/accounts/toolbar_item.html","webpack://xabber.web/./templates/accounts/webcam_panel.html","webpack://xabber.web/./templates/accounts/xmpp_login.html","webpack://xabber.web/./templates/api_service/add_xabber_account.html","webpack://xabber.web/./templates/api_service/linked_email_item.html","webpack://xabber.web/./templates/api_service/sync_settings.html","webpack://xabber.web/./templates/api_service/sync_settings_account_item.html","webpack://xabber.web/./templates/api_service/xabber_account.html","webpack://xabber.web/./templates/api_service/xabber_login.html","webpack://xabber.web/./templates/api_service/xabber_login_by_email.html","webpack://xabber.web/./templates/base/about.html","webpack://xabber.web/./templates/base/backgrounds_gallery.html","webpack://xabber.web/./templates/base/color_picker.html","webpack://xabber.web/./templates/base/color_scheme.html","webpack://xabber.web/./templates/base/dialog.html","webpack://xabber.web/./templates/base/fingerprint_devices_item.html","webpack://xabber.web/./templates/base/fingerprint_item.html","webpack://xabber.web/./templates/base/fingerprints.html","webpack://xabber.web/./templates/base/fingerprints_devices.html","webpack://xabber.web/./templates/base/input_widget.html","webpack://xabber.web/./templates/base/jingle_message_calling.html","webpack://xabber.web/./templates/base/omemo_enable.html","webpack://xabber.web/./templates/base/plyr_player_popup.html","webpack://xabber.web/./templates/base/settings.html","webpack://xabber.web/./templates/base/settings_modal.html","webpack://xabber.web/./templates/base/toolbar.html","webpack://xabber.web/./templates/chats/add_chat_account_item.html","webpack://xabber.web/./templates/chats/chat_bottom.html","webpack://xabber.web/./templates/chats/chat_content.html","webpack://xabber.web/./templates/chats/chat_content_contact.html","webpack://xabber.web/./templates/chats/chat_content_placeholder.html","webpack://xabber.web/./templates/chats/chat_head.html","webpack://xabber.web/./templates/chats/chat_item.html","webpack://xabber.web/./templates/chats/chat_placeholder.html","webpack://xabber.web/./templates/chats/chats_panel.html","webpack://xabber.web/./templates/chats/checkbox.html","webpack://xabber.web/./templates/chats/content_encryption_warning.html","webpack://xabber.web/./templates/chats/encryption_warning.html","webpack://xabber.web/./templates/chats/forward_panel.html","webpack://xabber.web/./templates/chats/group_chats/add_group_chat.html","webpack://xabber.web/./templates/chats/group_chats/invitation_panel_view.html","webpack://xabber.web/./templates/chats/group_chats/mention_item.html","webpack://xabber.web/./templates/chats/group_chats/pinned_message_panel.html","webpack://xabber.web/./templates/chats/location_popup.html","webpack://xabber.web/./templates/chats/message_item.html","webpack://xabber.web/./templates/chats/messages/attached_file.html","webpack://xabber.web/./templates/chats/messages/audio_file.html","webpack://xabber.web/./templates/chats/messages/audio_file_waveform.html","webpack://xabber.web/./templates/chats/messages/auth_request.html","webpack://xabber.web/./templates/chats/messages/file.html","webpack://xabber.web/./templates/chats/messages/file_loading.html","webpack://xabber.web/./templates/chats/messages/file_upload.html","webpack://xabber.web/./templates/chats/messages/forwarded.html","webpack://xabber.web/./templates/chats/messages/group_request.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-2.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-3.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-4.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-5.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-6.html","webpack://xabber.web/./templates/chats/messages/images_details.html","webpack://xabber.web/./templates/chats/messages/link_reference.html","webpack://xabber.web/./templates/chats/messages/link_reference_chat.html","webpack://xabber.web/./templates/chats/messages/loading_circle.html","webpack://xabber.web/./templates/chats/messages/location.html","webpack://xabber.web/./templates/chats/messages/main.html","webpack://xabber.web/./templates/chats/messages/saved_main.html","webpack://xabber.web/./templates/chats/messages/searched.html","webpack://xabber.web/./templates/chats/messages/system.html","webpack://xabber.web/./templates/chats/messages/template-for-2.html","webpack://xabber.web/./templates/chats/messages/template-for-3.html","webpack://xabber.web/./templates/chats/messages/template-for-4.html","webpack://xabber.web/./templates/chats/messages/template-for-5.html","webpack://xabber.web/./templates/chats/messages/template-for-6.html","webpack://xabber.web/./templates/chats/messages/video.html","webpack://xabber.web/./templates/chats/messages/voice_message.html","webpack://xabber.web/./templates/chats/saved_chat_head.html","webpack://xabber.web/./templates/chats/send_media.html","webpack://xabber.web/./templates/chats/subscription_buttons.html","webpack://xabber.web/./templates/chats/unread_marker.html","webpack://xabber.web/./templates/contacts/account_roster_left.html","webpack://xabber.web/./templates/contacts/account_roster_right.html","webpack://xabber.web/./templates/contacts/add_contact.html","webpack://xabber.web/./templates/contacts/add_contact_account_item.html","webpack://xabber.web/./templates/contacts/audio_file_waveform.html","webpack://xabber.web/./templates/contacts/contact_blocked_item.html","webpack://xabber.web/./templates/contacts/contact_details.html","webpack://xabber.web/./templates/contacts/contact_details_right.html","webpack://xabber.web/./templates/contacts/contact_left_item.html","webpack://xabber.web/./templates/contacts/contact_placeholder.html","webpack://xabber.web/./templates/contacts/contact_right_item.html","webpack://xabber.web/./templates/contacts/edit_contact.html","webpack://xabber.web/./templates/contacts/edit_group.html","webpack://xabber.web/./templates/contacts/group_chats/add_blocked_participant_form.html","webpack://xabber.web/./templates/contacts/group_chats/badge_edit_view.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions_right.html","webpack://xabber.web/./templates/contacts/group_chats/description_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/file_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_edit.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_name_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/group_status.html","webpack://xabber.web/./templates/contacts/group_chats/group_status_right.html","webpack://xabber.web/./templates/contacts/group_chats/invitation.html","webpack://xabber.web/./templates/contacts/group_chats/invited_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_badge_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_rights.html","webpack://xabber.web/./templates/contacts/group_chats/participants.html","webpack://xabber.web/./templates/contacts/group_chats/participants_right_panel.html","webpack://xabber.web/./templates/contacts/group_chats/pinned_message.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/restriction_item.html","webpack://xabber.web/./templates/contacts/group_chats/right_expire_variants.html","webpack://xabber.web/./templates/contacts/group_chats/set_status.html","webpack://xabber.web/./templates/contacts/group_chats/status_item.html","webpack://xabber.web/./templates/contacts/group_left.html","webpack://xabber.web/./templates/contacts/group_right.html","webpack://xabber.web/./templates/contacts/group_settings.html","webpack://xabber.web/./templates/contacts/groups.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list_contact.html","webpack://xabber.web/./templates/contacts/groups_list.html","webpack://xabber.web/./templates/contacts/groups_new_group.html","webpack://xabber.web/./templates/contacts/media_item.html","webpack://xabber.web/./templates/contacts/media_items_empty.html","webpack://xabber.web/./templates/contacts/preloader.html","webpack://xabber.web/./templates/contacts/roster_left.html","webpack://xabber.web/./templates/contacts/roster_right.html","webpack://xabber.web/./templates/contacts/roster_settings.html","webpack://xabber.web/./templates/mentions/mention_item.html","webpack://xabber.web/./templates/mentions/mentions_panel.html","webpack://xabber.web/./templates/mentions/mentions_placeholder.html","webpack://xabber.web/./templates/searching/existing_groupchat_details_view.html","webpack://xabber.web/./templates/searching/existing_groupchat_item.html","webpack://xabber.web/./templates/searching/searching_account_item.html","webpack://xabber.web/./templates/searching/searching_wide.html","webpack://xabber.web/./templates/svg/account-outline.html","webpack://xabber.web/./templates/svg/account.html","webpack://xabber.web/./templates/svg/address-outline.html","webpack://xabber.web/./templates/svg/address.html","webpack://xabber.web/./templates/svg/alarm-bell.html","webpack://xabber.web/./templates/svg/alert-circle.html","webpack://xabber.web/./templates/svg/bell-off.html","webpack://xabber.web/./templates/svg/bell-sleep.html","webpack://xabber.web/./templates/svg/bell.html","webpack://xabber.web/./templates/svg/birthday-outline.html","webpack://xabber.web/./templates/svg/birthday.html","webpack://xabber.web/./templates/svg/blocked-add.html","webpack://xabber.web/./templates/svg/blocked.html","webpack://xabber.web/./templates/svg/bot-variant.html","webpack://xabber.web/./templates/svg/bot.html","webpack://xabber.web/./templates/svg/bug.html","webpack://xabber.web/./templates/svg/call-outline.html","webpack://xabber.web/./templates/svg/call.html","webpack://xabber.web/./templates/svg/camera-retake.html","webpack://xabber.web/./templates/svg/cancel.html","webpack://xabber.web/./templates/svg/channel.html","webpack://xabber.web/./templates/svg/chat.html","webpack://xabber.web/./templates/svg/check-circle.html","webpack://xabber.web/./templates/svg/check.html","webpack://xabber.web/./templates/svg/chevron-down.html","webpack://xabber.web/./templates/svg/chevron-left-variant.html","webpack://xabber.web/./templates/svg/chevron-right-variant.html","webpack://xabber.web/./templates/svg/circles.html","webpack://xabber.web/./templates/svg/client-outline.html","webpack://xabber.web/./templates/svg/client.html","webpack://xabber.web/./templates/svg/clock-outline.html","webpack://xabber.web/./templates/svg/close.html","webpack://xabber.web/./templates/svg/cloud.html","webpack://xabber.web/./templates/svg/contact-add.html","webpack://xabber.web/./templates/svg/crosshairs-gps.html","webpack://xabber.web/./templates/svg/crosshairs-question.html","webpack://xabber.web/./templates/svg/crosshairs.html","webpack://xabber.web/./templates/svg/database-lock.html","webpack://xabber.web/./templates/svg/database.html","webpack://xabber.web/./templates/svg/description-outline.html","webpack://xabber.web/./templates/svg/description.html","webpack://xabber.web/./templates/svg/device-cellphone.html","webpack://xabber.web/./templates/svg/device-console.html","webpack://xabber.web/./templates/svg/device-desktop.html","webpack://xabber.web/./templates/svg/device-tablet.html","webpack://xabber.web/./templates/svg/device-web.html","webpack://xabber.web/./templates/svg/devices.html","webpack://xabber.web/./templates/svg/edit-outline.html","webpack://xabber.web/./templates/svg/edit.html","webpack://xabber.web/./templates/svg/email-outline.html","webpack://xabber.web/./templates/svg/email.html","webpack://xabber.web/./templates/svg/expires.html","webpack://xabber.web/./templates/svg/file-audio.html","webpack://xabber.web/./templates/svg/file-document.html","webpack://xabber.web/./templates/svg/file-pdf.html","webpack://xabber.web/./templates/svg/file-presentation.html","webpack://xabber.web/./templates/svg/file-video.html","webpack://xabber.web/./templates/svg/file-zip.html","webpack://xabber.web/./templates/svg/file.html","webpack://xabber.web/./templates/svg/fullname-outline.html","webpack://xabber.web/./templates/svg/fullname.html","webpack://xabber.web/./templates/svg/group-incognito.html","webpack://xabber.web/./templates/svg/group-invite.html","webpack://xabber.web/./templates/svg/group-private.html","webpack://xabber.web/./templates/svg/group-public.html","webpack://xabber.web/./templates/svg/history.html","webpack://xabber.web/./templates/svg/ic-at.html","webpack://xabber.web/./templates/svg/ic-jabber.html","webpack://xabber.web/./templates/svg/ic-searching.html","webpack://xabber.web/./templates/svg/id-outline.html","webpack://xabber.web/./templates/svg/id.html","webpack://xabber.web/./templates/svg/image.html","webpack://xabber.web/./templates/svg/index.html","webpack://xabber.web/./templates/svg/information-outline.html","webpack://xabber.web/./templates/svg/information.html","webpack://xabber.web/./templates/svg/invite-outline.html","webpack://xabber.web/./templates/svg/job-outline.html","webpack://xabber.web/./templates/svg/job.html","webpack://xabber.web/./templates/svg/key.html","webpack://xabber.web/./templates/svg/link.html","webpack://xabber.web/./templates/svg/lock-alert.html","webpack://xabber.web/./templates/svg/lock-check.html","webpack://xabber.web/./templates/svg/lock-cross.html","webpack://xabber.web/./templates/svg/lock-open.html","webpack://xabber.web/./templates/svg/lock-question.html","webpack://xabber.web/./templates/svg/lock.html","webpack://xabber.web/./templates/svg/map-marker-outline.html","webpack://xabber.web/./templates/svg/map-marker.html","webpack://xabber.web/./templates/svg/membership-outline.html","webpack://xabber.web/./templates/svg/message-bookmark-outline.html","webpack://xabber.web/./templates/svg/message-group.html","webpack://xabber.web/./templates/svg/minus.html","webpack://xabber.web/./templates/svg/mobile.html","webpack://xabber.web/./templates/svg/palette.html","webpack://xabber.web/./templates/svg/pause.html","webpack://xabber.web/./templates/svg/picture-in-picture-bottom-right.html","webpack://xabber.web/./templates/svg/picture-in-picture-minimize.html","webpack://xabber.web/./templates/svg/picture-in-picture-top-right.html","webpack://xabber.web/./templates/svg/pinned-circle-small.html","webpack://xabber.web/./templates/svg/pinned.html","webpack://xabber.web/./templates/svg/play.html","webpack://xabber.web/./templates/svg/player-float.html","webpack://xabber.web/./templates/svg/player-full.html","webpack://xabber.web/./templates/svg/player-mini-variant.html","webpack://xabber.web/./templates/svg/player-mini.html","webpack://xabber.web/./templates/svg/plus.html","webpack://xabber.web/./templates/svg/plyr.html","webpack://xabber.web/./templates/svg/qrcode.html","webpack://xabber.web/./templates/svg/restrictions-outline.html","webpack://xabber.web/./templates/svg/rss-variant.html","webpack://xabber.web/./templates/svg/rss.html","webpack://xabber.web/./templates/svg/saved-messages.html","webpack://xabber.web/./templates/svg/search.html","webpack://xabber.web/./templates/svg/security.html","webpack://xabber.web/./templates/svg/server.html","webpack://xabber.web/./templates/svg/star-face.html","webpack://xabber.web/./templates/svg/status-outline.html","webpack://xabber.web/./templates/svg/status.html","webpack://xabber.web/./templates/svg/subscription-from.html","webpack://xabber.web/./templates/svg/subscription-to.html","webpack://xabber.web/./templates/svg/task.html","webpack://xabber.web/./templates/svg/translate.html","webpack://xabber.web/./templates/svg/trash.html","webpack://xabber.web/./templates/svg/video.html","webpack://xabber.web/./templates/svg/volume-high.html","webpack://xabber.web/./templates/svg/volume-off-variant.html","webpack://xabber.web/./templates/svg/volume-off.html","webpack://xabber.web/./templates/svg/web.html","webpack://xabber.web/./templates/svg/xabber-offline.html","webpack://xabber.web/./templates/svg/xabber-online.html","webpack://xabber.web/./templates/svg/xmpp.html","webpack://xabber.web/./templates/vcard/vcard.html","webpack://xabber.web/./templates/vcard/vcard_edit.html","webpack://xabber.web/./templates/vcard/vcard_edit_modal.html","webpack://xabber.web/./templates/vcard/vcard_modal.html","webpack://xabber.web/./templates/vcard/vcard_right.html","webpack://xabber.web/./src/constants.js","webpack://xabber.web/./src/dependencies.js","webpack://xabber.web/./src/templates.js","webpack://xabber.web/./src/utils/emoji.js","webpack://xabber.web/./src/utils/images.js","webpack://xabber.web/./src/utils/modals.js","webpack://xabber.web/./src/utils/textarea.js","webpack://xabber.web/./src/utils/utils.js","webpack://xabber.web/./src/environment.js","webpack://xabber.web/./src/core.js","webpack://xabber.web/./src/views.js","webpack://xabber.web/./src/api-service.js","webpack://xabber.web/./src/strophe.js","webpack://xabber.web/./src/vcard.js","webpack://xabber.web/./src/accounts.js","webpack://xabber.web/./src/discovery.js","webpack://xabber.web/./src/contacts.js","webpack://xabber.web/./src/chats.js","webpack://xabber.web/./src/searching.js","webpack://xabber.web/./src/mentions.js","webpack://xabber.web/./src/ui.js","webpack://xabber.web/./src/omemo.js","webpack://xabber.web/./src/xabber.js","webpack://xabber.web/./templates/ sync ^\\.\\/.*\\.json$","webpack://xabber.web/ ^\\.\\/.*\\.html$","webpack://xabber.web/./translations/translation_progress.js","webpack://xabber.web/./translations/ lazy ^\\.\\/.*\\.js$ namespace object","webpack://xabber.web/./version.js","webpack://xabber.web/webpack/bootstrap","webpack://xabber.web/webpack/runtime/amd options","webpack://xabber.web/webpack/runtime/compat get default export","webpack://xabber.web/webpack/runtime/define property getters","webpack://xabber.web/webpack/runtime/ensure chunk","webpack://xabber.web/webpack/runtime/get javascript chunk filename","webpack://xabber.web/webpack/runtime/get mini-css chunk filename","webpack://xabber.web/webpack/runtime/global","webpack://xabber.web/webpack/runtime/harmony module decorator","webpack://xabber.web/webpack/runtime/hasOwnProperty shorthand","webpack://xabber.web/webpack/runtime/make namespace object","webpack://xabber.web/webpack/runtime/node module decorator","webpack://xabber.web/webpack/runtime/publicPath","webpack://xabber.web/webpack/runtime/jsonp chunk loading","webpack://xabber.web/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"xabber.web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","export default \"<div class=\\\"background-overlay\\\"></div>\\n<div class=\\\"settings-panel\\\">\\n    <div class=\\\"settings-transition-wrap\\\">\\n        <div class=\\\"left-column settings-column noselect\\\">\\n            <div class=\\\"settings-account-head\\\">\\n                <i class=\\\"btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <div class=\\\"name one-line\\\"></div>\\n                <svg class=\\\"btn-color-picker dropdown-button mdi mdi-24px mdi-svg-template\\\" data-activates=\\\"color-picker-dropdown\\\" data-svgname=\\\"palette\\\"></svg>\\n                <ul id=\\\"color-picker-dropdown\\\" class=\\\"dropdown-content color-picker-dropdown bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"red\\\">\\n                        <span class=\\\"one-line text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"pink\\\">\\n                        <span class=\\\"one-line text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"purple\\\">\\n                        <span class=\\\"one-line text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-purple\\\">\\n                        <span class=\\\"one-line text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"indigo\\\">\\n                        <span class=\\\"one-line text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue\\\">\\n                        <span class=\\\"one-line text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-blue\\\">\\n                        <span class=\\\"one-line text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"cyan\\\">\\n                        <span class=\\\"one-line text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"teal\\\">\\n                        <span class=\\\"one-line text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"green\\\">\\n                        <span class=\\\"one-line text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-green\\\">\\n                        <span class=\\\"one-line text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"lime\\\">\\n                        <span class=\\\"one-line text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"amber\\\">\\n                        <span class=\\\"one-line text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"orange\\\">\\n                        <span class=\\\"one-line text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-orange\\\">\\n                        <span class=\\\"one-line text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"brown\\\">\\n                        <span class=\\\"one-line text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue-grey\\\">\\n                        <span class=\\\"one-line text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <svg class=\\\"btn-qr-code mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n            </div>\\n            <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n                <div class=\\\"picture-wrap\\\">\\n                    <div class=\\\"avatar-wrap\\\">\\n                        <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                            <img/>\\n                            <input type=\\\"file\\\"/>\\n                            <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                                <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                                </div>\\n                                <div class=\\\"btn-selfie property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                                </div>\\n                                <div class=\\\"btn-choose-image property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                                </div>\\n                            </ul>\\n                            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                            </svg>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"name one-line\\\"></div>\\n                <div class=\\\"jid one-line\\\"></div>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap\\\">\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"profile\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__profile_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cloud\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"encryption\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}</div>\\n                    <div class=\\\"settings-block-label hidden label-encryption-enabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_enabled_label\\\"))]}</div>\\n                    <div class=\\\"settings-block-label label-encryption-disabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_disabled_label\\\"))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"devices-wrap hidden\\\">\\n                <div class=\\\"device-encryption-warning hidden\\\" data-not-trusted-count=\\\"0\\\">\\n                    <svg class=\\\"device-encryption-icon mdi mdi-40px mdi-svg-template\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n                    <div class=\\\"device-encryption-warning-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_warning_header\\\"))]}</div>\\n                    <div class=\\\"device-encryption-warning-label\\\"></div>\\n                </div>\\n                <div class=\\\"tokens-wrap\\\">\\n                    <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n                    <div class=\\\"current-token-wrap\\\">\\n                        <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                        <div class=\\\"btn-revoke-all-tokens settings-button-devices\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg>\\n                            <div class=\\\"settings-button-devices-label\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-panel-label active-sessions-label\\\">{[print(xabber.getString(\\\"settings_account__label_active_sessions\\\"))]}</div>\\n                    <div class=\\\"all-sessions-wrap\\\">\\n                        <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                    </div>\\n                    <div class=\\\"orphaned-fingerprints hidden\\\">\\n                        <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                        <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap\\\">\\n                <div class=\\\"settings-tab settings-deletion-button delete-account\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                    </div>\\n                    <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__button_quit_account\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"right-column settings-column noselect\\\">\\n            <div class=\\\"settings-panel-head\\\">\\n                <i class=\\\"btn-back-settings mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <i class=\\\"btn-back-subsettings mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n                <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n                <div class=\\\"btn-more media-gallery-button dropdown-button\\\" data-activates=\\\"storage-actions\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                </div>\\n                <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant btn-delete-files-variants\\\" data-activates=\\\"storage-delete-files\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_delete_files\\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <ul id=\\\"storage-delete-files\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_15_days\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"30\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_30_days\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"60\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_60_days\\\"))]}</span>\\n                    </div>\\n                </ul>\\n            </div>\\n\\n            <div class=\\\"panel-content-wrap\\\">\\n                <div class=\\\"panel-content details-panel\\\">\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap profile\\\">\\n                        <div class=\\\"settings-tabs-wrap\\\">\\n                            <div class=\\\"settings-tab settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"status\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"vcard-tab\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"password\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"blocklist\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"circles-groups\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"capabitilies\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab disabled settings-deletion-button settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"delete-account\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name settings-block-name-single one-line\\\">{[print(xabber.getString(\\\"settings_account__delete_account_subheader\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}' class=\\\"settings-block-wrap status\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"status-wrap setting\\\"></div>\\n                            <div class=\\\"status\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}' class=\\\"settings-block-wrap vcard-tab\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"vcard\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__password_subheader\\\"))]}' class=\\\"settings-block-wrap password\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting connection-wrap\\\">\\n                                <div class=\\\"change-password-container\\\">\\n                                    <div class=\\\"change-password-fields\\\">\\n                                        <div class=\\\"block-subheader\\\">\\n                                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"hint_old_pass\\\"))]}</span>\\n                                        </div>\\n                                        <div class=\\\"change-password-field\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                                            <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_old_pass\\\"))]}' id=\\\"old_password\\\" type=\\\"password\\\" name=\\\"old_password\\\">\\n                                            <span class=\\\"errors fixed\\\"></span>\\n                                        </div>\\n                                        <div class=\\\"block-subheader\\\">\\n                                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"hint_new_pass\\\"))]}</span>\\n                                        </div>\\n                                        <div class=\\\"change-password-field\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                                            <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_new_pass\\\"))]}' id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n                                            <span class=\\\"errors fixed\\\"></span>\\n                                        </div>\\n                                        <div class=\\\"change-password-field\\\">\\n                                            <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_confirm_pass\\\"))]}' id=\\\"password_confirm\\\" type=\\\"password\\\" name=\\\"password_confirm\\\">\\n                                            <span class=\\\"errors fixed\\\"></span>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"buttons-wrap\\\">\\n                                        <button class=\\\"btn-change btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_change_pass\\\"))]}</button>\\n                                        <button class=\\\"btn-change-password btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_set_pass\\\"))]}</button>\\n                                        <button class=\\\"btn-reconnect btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"settings_account__button_reconnect\\\"))]}</button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_subheader\\\"))]}' class=\\\"settings-block-wrap blocklist\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"blocklist-info\\\">\\n                                <div class=\\\"blocklist-wrap\\\">\\n                                    <div class=\\\"buttons-wrap\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                        <button class=\\\"btn-deselect-blocked btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                        <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                    </div>\\n                                    <div class=\\\"blocked-items\\\">\\n                                        <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                                        <div class=\\\"blocklist-tabs-wrap\\\">\\n                                            <ul class=\\\"tabs\\\">\\n                                                <li class=\\\"blocked-item contacts-item hidden\\\" data-tab-name=\\\"blocked-contacts-wrap\\\">\\n                                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__contacts\\\"))]}</a>\\n                                                </li>\\n                                                <li class=\\\"blocked-item domains-item hidden\\\" data-tab-name=\\\"blocked-domains-wrap\\\">\\n                                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__domains\\\"))]}</a>\\n                                                </li>\\n                                                <li class=\\\"blocked-item invitations-item hidden\\\" data-tab-name=\\\"blocked-invitations-wrap\\\">\\n                                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__invitations\\\"))]}</a>\\n                                                </li>\\n                                            </ul>\\n                                        </div>\\n                                        <div class=\\\"blocked-items-container blocked-contacts-wrap hidden\\\" data-tab-name=\\\"contacts-item\\\">\\n                                            <div class=\\\"blocked-contacts blocked-list\\\"/>\\n                                        </div>\\n                                        <div class=\\\"blocked-items-container blocked-domains-wrap hidden\\\" data-tab-name=\\\"domains-item\\\">\\n                                            <div class=\\\"blocked-domains blocked-list\\\"/>\\n                                        </div>\\n                                        <div class=\\\"blocked-items-container blocked-invitations-wrap hidden\\\" data-tab-name=\\\"invitations-item\\\">\\n                                            <div class=\\\"blocked-invitations blocked-list\\\"/>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap circles-groups\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"groups-info\\\">\\n                                <div class=\\\"groups-wrap\\\">\\n                                    <div class=\\\"groups\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}' class=\\\"settings-block-wrap capabitilies\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"server-info\\\">\\n                                <div class=\\\"capabilities-wrap\\\">\\n                                    <div class=\\\"capabilities\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                        <div class=\\\"color-scheme-wrap\\\">\\n                            <div class=\\\"account-color\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                            <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                            <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                            <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                            <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                            <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                            <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                            <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                            <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                            <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                            <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                            <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                            <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                            <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                            <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                            <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                            <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                            <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}' class=\\\"settings-block-wrap encryption\\\">\\n                        <div class=\\\"btn-more device-more-button dropdown-button\\\" data-activates=\\\"device-omemo-actions\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                        </div>\\n                        <ul id=\\\"device-omemo-actions\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                            <div class=\\\"property-variant btn-manage-devices\\\">\\n                                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"property-variant btn-purge-keys\\\">\\n                                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</span>\\n                            </div>\\n                        </ul>\\n                        <div class=\\\"omemo-settings-wrap\\\">\\n                            <div class=\\\"settings\\\">\\n                                <div class=\\\"setting-wrap omemo-enable\\\">\\n                                    <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                                    <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                        <label class=\\\"field-value\\\">\\n                                            <input type=\\\"checkbox\\\">\\n                                            <span class=\\\"lever\\\"></span>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"setting-wrap send-chat-states\\\">\\n                                    <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                                    <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                        <label class=\\\"field-value\\\">\\n                                            <input type=\\\"checkbox\\\">\\n                                            <span class=\\\"lever\\\"></span>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}' class=\\\"settings-block-wrap device-information\\\">\\n                        <div class=\\\"device-information-wrap\\\">\\n                            <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}</div>\\n                            <div class=\\\"device-information-items-wrap device-information-basic\\\">\\n                                <div class=\\\"device-information-item device-information-status\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"status-outline\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-last-seen\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label_last_seen\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-client\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"id\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__client__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-ip\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__ip__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-expires\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"expires\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__expire__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-panel-label device-information-security-label\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>\\n                            <div class=\\\"device-information-items-wrap device-information-encryption\\\">\\n                                <div class=\\\"device-information-item device-information-device-id\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"settings_account__device_information_device_id\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-fingerprint hidden\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"lock\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text device-information-fingerprint-text\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab btn-revoke-token settings-deletion-button\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"device__info__terminate_session__button\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_add\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid\\\">\\n                        <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                        <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                            <div class=\\\"select-auth-xmpp-server\\\">\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                                <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                    <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"sign_in_domain\\\">\\n                                </div>\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                                </div>\\n                            </div>\\n                            <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                                <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"input-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-error login-password-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-description\\\"></div>\\n                <div class=\\\"login-step-wrap hidden\\\">\\n                    <div class=\\\"login-step connecting-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                    <div class=\\\"login-step credentials-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"login-form-server-features hidden\\\">\\n            <div class=\\\"register-form-step-wrap\\\">\\n                <div class=\\\"register-form-step-header\\\"></div>\\n            </div>\\n            <div class=\\\"login-server-features-wrap\\\">\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"server-features-error\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main one-line hidden btn-finish-log-in\\\"></button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__dialog_change_password__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row login-form-field\\\">\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"jid\\\" type=\\\"text\\\" class=\\\"input-glow\\\" name=\\\"jid\\\" disabled readonly>\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"input-glow\\\" placeholder=\\\"{[print(xabber.getString('account_password'))]}\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-change\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"status_editor\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <li data-value=\\\"chat\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"chat\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"chat\\\"></span>\\n        </li>\\n        <li data-value=\\\"online\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"online\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"online\\\"></span>\\n        </li>\\n        <li data-value=\\\"away\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"away\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"away\\\"></span>\\n        </li>\\n        <li data-value=\\\"xa\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"xa\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"xa\\\"></span>\\n        </li>\\n        <li data-value=\\\"dnd\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"dnd\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"dnd\\\"></span>\\n        </li>\\n        <li data-value=\\\"offline\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"unavailable\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"offline\\\"></span>\\n        </li>\\n    </ul>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field status-message-wrap\\\">\\n                <span class=\\\"static-label\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_custom_status\\\"))]}</span>\\n                <input type=\\\"text\\\" class=\\\"status-message input-glow\\\">\\n                <i class=\\\"clear-input mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n            <div class=\\\"input-field checkbox-field no-padding\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in apply-to-all\\\" id=\\\"{{view.cid}}_apply_to_all\\\"/>\\n                <label for=\\\"{{view.cid}}_apply_to_all\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_apply_to_all\\\"))]}</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"client one-line\\\">{{client}}</div>\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n    </div>\\n    <div class=\\\"last-auth text-color-700\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n    <div class=\\\"ip-address\\\">{{ip}}</div>\\n    <div class=\\\"device-encryption one-line {[if (is_omemo) {]} active is-own text-color-green-500{[}]}\\\">\\n        <i class=\\\"mdi mdi-lock mdi-14px{[if (!is_omemo) {]} hidden{[}]}\\\"></i>\\n        <span>\\n            {[if (is_omemo) {]}\\n                {[print(xabber.getString(\\\"settings_account__omemo_enabled\\\"))]}\\n            {[} else {]}\\n                {[print(xabber.getString(\\\"settings_account__omemo_not_enabled\\\"))]}\\n            {[}]}\\n        </span>\\n    </div>\\n</div>\";","export default \"<div class=\\\"token-wrap settings-tab\\\" data-subblock-parent-name=\\\"devices\\\" data-block-name=\\\"device-information\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-icon-wrap\\\">\\n        <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-web\\\"></svg>\\n    </div>\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n        <div class=\\\"ip-address\\\">{{ip}}</div>\\n    </div>\\n    {[if (is_omemo) {]}\\n    <div class=\\\"device-encryption one-line active is-own\\\">\\n        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"security\\\"></svg>\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{[print(xabber.getString(\\\"account_emoji_profile_image_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"emoji-profile-image\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar ground-color-green-100\\\" data-value=\\\"green\\\">\\n                <div class=\\\"chosen-emoji\\\" data-value=\\\"🐈\\\">🐈</div>\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"emoji-profile-colors\\\">\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-green-500 outline-color-green-500 chosen-background-color\\\" data-value=\\\"green\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-save\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n        <i class=\\\"close-modal mdi mdi-close mdi-24px\\\"></i>\\n    </div>\\n    <div class=\\\"emoji-picker-wrap no-select\\\">\\n\\n    </div>\\n</div>\\n\";","export default \"\\n{[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-tab{[if (i === 0){]} chosen-emoji-tab{[} else {]} hidden{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {[ for (var y = 0; y < tab.emojis.length; y++) { var emoji = tab.emojis[y] ]}\\n            <div class=\\\"emoji-picker-emoji\\\" data-value=\\\"{{emoji[0]}}\\\">\\n                <div>{{emoji[0]}}</div>\\n            </div>\\n        {[ } ]}\\n    </div>\\n{[ } ]}\\n<div class=\\\"emoji-picker-tabs\\\">\\n    {[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-bottom-tab-selector{[if (i === 0){]} chosen-emoji-selector{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {{tab.emojis[0][0]}}\\n    </div>\\n    {[ } ]}\\n</div>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n    <button class=\\\"btn-join-existing-chat btn-flat btn-dark btn-main\\\">join</button>\\n</div>\";","export default \"<div class=\\\"move-account-to-this droppable\\\"></div>\\n<div class=\\\"account-info-wrap\\\">\\n    <i class=\\\"drag-item drag-handle mdi mdi-28px mdi-drag-vertical\\\"></i>\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"text-info-wrap\\\">\\n        <div class=\\\"jid-wrap\\\">\\n            <div class=\\\"jid text-color-700 one-line\\\"></div>\\n        </div>\\n        <div class=\\\"conn-status one-line\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"sync-marker-wrap hidden\\\">\\n    <i class=\\\"sync-marker mdi mdi-20px mdi-cloud-check\\\"></i>\\n</div>\\n<div class=\\\"field clickable-field enabled-state switch normal\\\">\\n    <label class=\\\"field-value\\\">\\n        <input type=\\\"checkbox\\\">\\n        <span class=\\\"lever\\\"></span>\\n    </label>\\n</div>\\n\";","export default \"<div class=\\\"account-info-wrap\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <!--<div class=\\\"status\\\"/>-->\\n    <div class=\\\"text-info-wrap\\\">\\n        <div class=\\\"nickname-wrap\\\">\\n            <div class=\\\"nickname one-line\\\"></div>\\n        </div>\\n        <div class=\\\"jid-wrap\\\">\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"field clickable-field enabled-state switch normal\\\">\\n    <label class=\\\"field-value\\\">\\n        <input type=\\\"checkbox\\\">\\n        <span class=\\\"lever\\\"></span>\\n    </label>\\n</div>\\n\";","export default \"<div class=\\\"gallery-wrap\\\">\\n    <!--<svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>-->\\n    <div class=\\\"gallery-storage-wrap\\\">\\n        <div class=\\\"storage-usage\\\"></div>\\n        <div class=\\\"storage-progress-bar\\\">\\n            <div class=\\\"storage-progress-images\\\"></div>\\n            <div class=\\\"storage-progress-videos\\\"></div>\\n            <div class=\\\"storage-progress-voices\\\"></div>\\n            <div class=\\\"storage-progress-files\\\"></div>\\n        </div>\\n        <div class=\\\"storage-labels\\\">\\n            <div class=\\\"storage-label storage-label-images\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"images\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-videos\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-voices\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-files\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"files\\\"))]}</div></div>\\n        </div>\\n        <div class=\\\"storage-usages\\\">\\n            <div class=\\\"storage-category-usage storage-usage-images\\\">\\n                {[print(xabber.getString(\\\"images\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-videos\\\">\\n                {[print(xabber.getString(\\\"videos\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-voices\\\">\\n                {[print(xabber.getString(\\\"vcard_type_voice\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-files\\\">\\n                {[print(xabber.getString(\\\"files\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <ul class=\\\"tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"file\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n        <li data-value=\\\"avatars\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"list-managment-wrap\\\">\\n        <button class=\\\"btn-sorting dropdown-button btn-flat btn-main text-color-700 hover-ground-color-300\\\" data-activates=\\\"storage-file-sorting\\\">\\n            {[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}\\n        </button>\\n    </div>\\n    <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n        </div>\\n        <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n        </div>\\n    </ul>\\n    <div class=\\\"gallery-files zoom-gallery\\\">\\n    </div>\\n</div>\\n\\n\";","export default \"<div class=\\\"gallery-file{[if (file.is_avatar === 'True'){]} gallery-avatar{[}]}\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-file=\\\"{{file.file}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || file.media_type.includes('video'))){]}\\n        <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\" data-mfp-src=\\\"{{file.file}}\\\" src=\\\"{{file.thumbnail}}\\\" {[if (file.media_type && file.media_type.includes('image')){]}onerror=\\\"this.src = '{{file.file}}'; this.onerror = null;\\\" {[}]}>\\n    {[} else {]}\\n        {[if (svg_icon == 'file-audio' && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n                <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n            </div>\\n            <div class=\\\"gallery-file-audio-container\\\">\\n            </div>\\n        {[} else {]}\\n            <div class=\\\"gallery-file-placeholder-background\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n                <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n            </div>\\n        {[}]}\\n        <div class=\\\"gallery-file-title one-line\\\">\\n            {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span> <span class=\\\"gallery-file-date\\\">{{file.created_at}}</span>\\n        </div>\\n        {[if (duration && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-voice-file-duration\\\">\\n                0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n            </div>\\n        {[}]}\\n    {[}]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{file.id}}-more\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul id=\\\"{{file.id}}-more\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n            <div class=\\\"property-variant btn-download\\\">\\n                {[print(xabber.getString(\\\"action_download\\\"))]}\\n            </div>\\n        </a>\\n        <div class=\\\"property-variant btn-delete\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete\\\"))]}</span>\\n        </div>\\n    </ul>\\n</div>\";","export default \"<svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"ic-jabber\\\"></svg>\\n<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message one-line\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"    <div class=\\\"left-column ground-color-900 noselect\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n            <div class=\\\"picture-wrap\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                        <img/>\\n                        <input type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"status\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"name-wrap\\\">\\n                <div class=\\\"name\\\"></div>\\n            </div>\\n            <div class=\\\"status-wrap\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"connection\\\">\\n                <i class=\\\"mdi mdi-24px mdi-settings\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_connection_settings\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"vcard_edit\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-box\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"color-scheme\\\">\\n                <i class=\\\"mdi mdi-24px mdi-palette\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"color\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n                <i class=\\\"mdi mdi-24px mdi-chart-arc\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"blocklist-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-block-helper\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"blocked_contacts\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"groups-info\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"server-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-information\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_server_info\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab omemo-info\\\" data-block-name=\\\"tokens\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"devices\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_settings_devices_and_encryption\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap ground-color-900\\\">\\n            <div class=\\\"settings-tab delete-account\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__button_quit_account\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n        <div class=\\\"buttons-wrap\\\">\\n            <button class=\\\"btn-block btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"settings_account__blocklist__button_block\\\"))]}</button>\\n            <button class=\\\"btn-deselect-blocked btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n        </div>\\n        <div class=\\\"btn-more device-more-button dropdown-button\\\" data-activates=\\\"device-omemo-actions\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"device-omemo-actions\\\" class=\\\"dropdown-content noselect\\\">\\n            <div class=\\\"property-variant btn-manage-devices\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-purge-keys\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</span>\\n            </div>\\n        </ul>\\n        <div class=\\\"btn-more media-gallery-button dropdown-button\\\" data-activates=\\\"storage-actions\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n            <div class=\\\"property-variant btn-delete-files-variants\\\" data-activates=\\\"storage-delete-files\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_delete_files\\\"))]}</span>\\n            </div>\\n        </ul>\\n        <ul id=\\\"storage-delete-files\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_15_days\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"30\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_30_days\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"60\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_60_days\\\"))]}</span>\\n            </div>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content details-panel\\\">\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_connection_settings\\\"))]}' class=\\\"settings-block-wrap connection\\\">\\n                <div class=\\\"connection-wrap\\\">\\n                    <div class=\\\"readonly-setting\\\">\\n                        <i class=\\\"details-icon mdi mdi-24px mdi-account\\\"></i>\\n                        <div class=\\\"setting-wrap account-name\\\">\\n                            <div class=\\\"value one-line\\\"></div>\\n                            <div class=\\\"label conn-status\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"change-password-container\\\">\\n                        <div class=\\\"change-password-fields\\\">\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_old_pass\\\"))]}' id=\\\"old_password\\\" type=\\\"password\\\" name=\\\"old_password\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_new_pass\\\"))]}' id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_confirm_pass\\\"))]}' id=\\\"password_confirm\\\" type=\\\"password\\\" name=\\\"password_confirm\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"buttons-wrap\\\">\\n                            <button class=\\\"btn-change btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_change_pass\\\"))]}</button>\\n                            <button class=\\\"btn-change-password btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_set_pass\\\"))]}</button>\\n                            <button class=\\\"btn-reconnect btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"settings_account__button_reconnect\\\"))]}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                <div class=\\\"color-scheme-wrap\\\">\\n                    <div class=\\\"account-color\\\">\\n                        <div class=\\\"field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                    <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                    <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                    <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                    <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                    <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                    <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                    <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                    <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                    <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                    <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                    <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                    <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                    <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                    <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                    <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                    <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                    <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap vcard\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_server_info_description\\\"))]}' class=\\\"settings-block-wrap server-info\\\">\\n                <div class=\\\"capabilities-wrap\\\">\\n                    <div class=\\\"capabilities\\\">\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"blocked_contacts\\\"))]}' class=\\\"settings-block-wrap blocklist-info\\\">\\n                <div class=\\\"blocklist-wrap\\\">\\n                    <div class=\\\"blocked-items\\\">\\n                        <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                        <div class=\\\"blocklist-tabs-wrap\\\">\\n                            <ul class=\\\"tabs\\\">\\n                                <li class=\\\"blocked-item contacts-item hidden\\\" data-tab-name=\\\"blocked-contacts-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__contacts\\\"))]}</a>\\n                                </li>\\n                                <li class=\\\"blocked-item domains-item hidden\\\" data-tab-name=\\\"blocked-domains-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__domains\\\"))]}</a>\\n                                </li>\\n                                <li class=\\\"blocked-item invitations-item hidden\\\" data-tab-name=\\\"blocked-invitations-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__invitations\\\"))]}</a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-contacts-wrap hidden\\\" data-tab-name=\\\"contacts-item\\\">\\n                            <div class=\\\"blocked-contacts blocked-list\\\"/>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-domains-wrap hidden\\\" data-tab-name=\\\"domains-item\\\">\\n                            <div class=\\\"blocked-domains blocked-list\\\"/>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-invitations-wrap hidden\\\" data-tab-name=\\\"invitations-item\\\">\\n                            <div class=\\\"blocked-invitations blocked-list\\\"/>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap groups-info\\\">\\n                <div class=\\\"groups-wrap\\\">\\n                    <div class=\\\"groups\\\">\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_settings_devices_and_encryption\\\"))]}' class=\\\"settings-block-wrap tokens\\\">\\n                <div class=\\\"omemo-settings-wrap\\\">\\n                    <div class=\\\"settings\\\">\\n                        <div class=\\\"setting-wrap omemo-enable\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                            <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap send-chat-states\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                            <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <!--<div class=\\\"setting-wrap manage-devices\\\">-->\\n                            <!--<button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</button>-->\\n                        <!--</div>-->\\n                        <!--<div class=\\\"setting-wrap purge-keys\\\">-->\\n                            <!--<button class=\\\"btn-purge-keys btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</button>-->\\n                        <!--</div>-->\\n                    </div>\\n                </div>\\n                <div class=\\\"tokens-wrap\\\">\\n                    <div class=\\\"current-token-wrap\\\">\\n                        <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                        <div class=\\\"buttons-wrap\\\">\\n                            <p class=\\\"btn-revoke-all-tokens hover-text-color-500 text-color-700\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"all-sessions-wrap\\\">\\n                        <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                    </div>\\n                    <div class=\\\"orphaned-fingerprints hidden\\\">\\n                        <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                        <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"\\n<div class=\\\"left-column settings-column noselect\\\">\\n    <div class=\\\"settings-account-head\\\">\\n        <svg class=\\\"btn-add-account mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"contact-add\\\"></svg>\\n        <div class=\\\"name one-line\\\"></div>\\n        <svg class=\\\"btn-color-picker dropdown-button mdi mdi-24px mdi-svg-template\\\" data-activates=\\\"color-picker-dropdown\\\" data-svgname=\\\"palette\\\"></svg>\\n        <ul id=\\\"color-picker-dropdown\\\" class=\\\"dropdown-content color-picker-dropdown bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"red\\\">\\n                <span class=\\\"one-line text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"pink\\\">\\n                <span class=\\\"one-line text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"purple\\\">\\n                <span class=\\\"one-line text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-purple\\\">\\n                <span class=\\\"one-line text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"indigo\\\">\\n                <span class=\\\"one-line text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue\\\">\\n                <span class=\\\"one-line text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-blue\\\">\\n                <span class=\\\"one-line text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"cyan\\\">\\n                <span class=\\\"one-line text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"teal\\\">\\n                <span class=\\\"one-line text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"green\\\">\\n                <span class=\\\"one-line text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-green\\\">\\n                <span class=\\\"one-line text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"lime\\\">\\n                <span class=\\\"one-line text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"amber\\\">\\n                <span class=\\\"one-line text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"orange\\\">\\n                <span class=\\\"one-line text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-orange\\\">\\n                <span class=\\\"one-line text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"brown\\\">\\n                <span class=\\\"one-line text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue-grey\\\">\\n                <span class=\\\"one-line text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n        </ul>\\n        <svg class=\\\"btn-qr-code mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n    </div>\\n    <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <img/>\\n                    <input type=\\\"file\\\"/>\\n                    <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                        <div class=\\\"btn-emoji-panel property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                        </div>\\n                        <div class=\\\"btn-selfie property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                        </div>\\n                        <div class=\\\"btn-choose-image property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                        </div>\\n                    </ul>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"name one-line\\\"></div>\\n        <div class=\\\"jid one-line\\\"></div>\\n    </div>\\n    <div class=\\\"settings-tabs-wrap\\\">\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"profile\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__profile_label\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cloud\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"encryption\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}</div>\\n            <div class=\\\"settings-block-label hidden label-encryption-enabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_enabled_label\\\"))]}</div>\\n            <div class=\\\"settings-block-label label-encryption-disabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_disabled_label\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"devices\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"devices\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__devices_subheader\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"right-column settings-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <i class=\\\"btn-back-settings mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <i class=\\\"btn-back-subsettings mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n        <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n        <div class=\\\"btn-more media-gallery-button dropdown-button\\\" data-activates=\\\"storage-actions\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n            <div class=\\\"property-variant btn-delete-files-variants\\\" data-activates=\\\"storage-delete-files\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_delete_files\\\"))]}</span>\\n            </div>\\n        </ul>\\n        <ul id=\\\"storage-delete-files\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_15_days\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"30\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_30_days\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"60\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_60_days\\\"))]}</span>\\n            </div>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content details-panel\\\">\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__devices_subheader\\\"))]}' class=\\\"settings-block-wrap devices\\\">\\n                <div class=\\\"devices-wrap hidden\\\">\\n                    <div class=\\\"device-encryption-warning hidden\\\" data-not-trusted-count=\\\"0\\\">\\n                        <svg class=\\\"device-encryption-icon mdi mdi-40px mdi-svg-template\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n                        <div class=\\\"device-encryption-warning-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_warning_header\\\"))]}</div>\\n                        <div class=\\\"device-encryption-warning-label\\\"></div>\\n                    </div>\\n                    <div class=\\\"tokens-wrap\\\">\\n                        <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n                        <div class=\\\"current-token-wrap\\\">\\n                            <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                            <div class=\\\"btn-revoke-all-tokens settings-button-devices\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg>\\n                                <div class=\\\"settings-button-devices-label\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-panel-label active-sessions-label\\\">{[print(xabber.getString(\\\"settings_account__label_active_sessions\\\"))]}</div>\\n                        <div class=\\\"all-sessions-wrap\\\">\\n                            <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"orphaned-fingerprints hidden\\\">\\n                            <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                            <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap profile\\\">\\n                <div class=\\\"settings-tabs-wrap\\\">\\n                    <div class=\\\"settings-tab settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"status\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"vcard-tab\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"password\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"blocklist\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"circles-groups\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"capabitilies\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab disabled settings-deletion-button settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"delete-account\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name settings-block-name-single one-line\\\">{[print(xabber.getString(\\\"settings_account__delete_account_subheader\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}' class=\\\"settings-block-wrap status\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"status-wrap setting\\\"></div>\\n                    <div class=\\\"status\\\"></div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}' class=\\\"settings-block-wrap vcard-tab\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"vcard\\\">\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__password_subheader\\\"))]}' class=\\\"settings-block-wrap password\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"setting connection-wrap\\\">\\n                        <div class=\\\"change-password-container\\\">\\n                            <div class=\\\"change-password-fields\\\">\\n                                <div class=\\\"block-subheader\\\">\\n                                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"hint_old_pass\\\"))]}</span>\\n                                </div>\\n                                <div class=\\\"change-password-field\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                                    <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_old_pass\\\"))]}' id=\\\"old_password\\\" type=\\\"password\\\" name=\\\"old_password\\\">\\n                                    <span class=\\\"errors fixed\\\"></span>\\n                                </div>\\n                                <div class=\\\"block-subheader\\\">\\n                                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"hint_new_pass\\\"))]}</span>\\n                                </div>\\n                                <div class=\\\"change-password-field\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                                    <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_new_pass\\\"))]}' id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n                                    <span class=\\\"errors fixed\\\"></span>\\n                                </div>\\n                                <div class=\\\"change-password-field\\\">\\n                                    <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_confirm_pass\\\"))]}' id=\\\"password_confirm\\\" type=\\\"password\\\" name=\\\"password_confirm\\\">\\n                                    <span class=\\\"errors fixed\\\"></span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"buttons-wrap\\\">\\n                                <button class=\\\"btn-change btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_change_pass\\\"))]}</button>\\n                                <button class=\\\"btn-change-password btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_set_pass\\\"))]}</button>\\n                                <button class=\\\"btn-reconnect btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"settings_account__button_reconnect\\\"))]}</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_subheader\\\"))]}' class=\\\"settings-block-wrap blocklist\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"blocklist-info\\\">\\n                        <div class=\\\"blocklist-wrap\\\">\\n                            <div class=\\\"buttons-wrap\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                <button class=\\\"btn-deselect-blocked btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                            </div>\\n                            <div class=\\\"blocked-items\\\">\\n                                <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                                <div class=\\\"blocklist-tabs-wrap\\\">\\n                                    <ul class=\\\"tabs\\\">\\n                                        <li class=\\\"blocked-item contacts-item hidden\\\" data-tab-name=\\\"blocked-contacts-wrap\\\">\\n                                            <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__contacts\\\"))]}</a>\\n                                        </li>\\n                                        <li class=\\\"blocked-item domains-item hidden\\\" data-tab-name=\\\"blocked-domains-wrap\\\">\\n                                            <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__domains\\\"))]}</a>\\n                                        </li>\\n                                        <li class=\\\"blocked-item invitations-item hidden\\\" data-tab-name=\\\"blocked-invitations-wrap\\\">\\n                                            <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__invitations\\\"))]}</a>\\n                                        </li>\\n                                    </ul>\\n                                </div>\\n                                <div class=\\\"blocked-items-container blocked-contacts-wrap hidden\\\" data-tab-name=\\\"contacts-item\\\">\\n                                    <div class=\\\"blocked-contacts blocked-list\\\"/>\\n                                </div>\\n                                <div class=\\\"blocked-items-container blocked-domains-wrap hidden\\\" data-tab-name=\\\"domains-item\\\">\\n                                    <div class=\\\"blocked-domains blocked-list\\\"/>\\n                                </div>\\n                                <div class=\\\"blocked-items-container blocked-invitations-wrap hidden\\\" data-tab-name=\\\"invitations-item\\\">\\n                                    <div class=\\\"blocked-invitations blocked-list\\\"/>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap circles-groups\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"groups-info\\\">\\n                        <div class=\\\"groups-wrap\\\">\\n                            <div class=\\\"groups\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}' class=\\\"settings-block-wrap capabitilies\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"server-info\\\">\\n                        <div class=\\\"capabilities-wrap\\\">\\n                            <div class=\\\"capabilities\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                <div class=\\\"color-scheme-wrap\\\">\\n                    <div class=\\\"account-color\\\">\\n                        <div class=\\\"field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                    <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                    <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                    <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                    <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                    <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                    <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                    <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                    <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                    <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                    <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                    <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                    <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                    <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                    <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                    <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                    <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                    <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}' class=\\\"settings-block-wrap encryption\\\">\\n                <div class=\\\"btn-more device-more-button dropdown-button\\\" data-activates=\\\"device-omemo-actions\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                </div>\\n                <ul id=\\\"device-omemo-actions\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant btn-manage-devices\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant btn-purge-keys\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <div class=\\\"omemo-settings-wrap\\\">\\n                    <div class=\\\"settings\\\">\\n                        <div class=\\\"setting-wrap omemo-enable\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                            <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap send-chat-states\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                            <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}' class=\\\"settings-block-wrap device-information\\\">\\n                <div class=\\\"device-information-wrap\\\">\\n                    <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}</div>\\n                    <div class=\\\"device-information-items-wrap device-information-basic\\\">\\n                        <div class=\\\"device-information-item device-information-status\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"status-outline\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-last-seen\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label_last_seen\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-client\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"id\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__client__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-ip\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__ip__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-expires\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"expires\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__expire__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-panel-label device-information-security-label\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>\\n                    <div class=\\\"device-information-items-wrap device-information-encryption\\\">\\n                        <div class=\\\"device-information-item device-information-device-id\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"settings_account__device_information_device_id\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-fingerprint hidden\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"lock\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}</div>\\n                            <div class=\\\"device-information-text device-information-fingerprint-text\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-tab btn-revoke-token settings-deletion-button\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"device__info__terminate_session__button\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input input-glow field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"client one-line\\\">{{client}}</div>\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n    </div>\\n    <div class=\\\"last-auth\\\">{[ if (resource_obj) {]}{[print(xabber.getString(\\\"account_state_connected\\\"))]}{[} else {]}{{last_auth}}{[}]}</div>\\n    <div class=\\\"ip-address\\\">{{ip}}</div>\\n    <div class=\\\"device-encryption one-line\\\">\\n        <i class=\\\"mdi mdi-lock mdi-14px hidden\\\"></i>\\n        <span>\\n            {[print(xabber.getString(\\\"settings_account__omemo_not_enabled\\\"))]}\\n        </span>\\n    </div>\\n    <i class=\\\"btn-revoke-token mdi mdi-24px mdi-close\\\"></i>\\n</div>\";","export default \"<div class=\\\"token-wrap settings-tab\\\" data-subblock-parent-name=\\\"devices\\\" data-block-name=\\\"device-information\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-icon-wrap\\\">\\n        {[if (device && (device.indexOf('Android') > -1 || device.indexOf('iOS') > -1)){]}\\n            <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-cellphone\\\"></svg>\\n        {[} else {]}\\n            <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-web\\\"></svg>\\n        {[}]}\\n    </div>\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n        <div class=\\\"ip-address\\\">{{ip}} • {[ if (resource_obj) {]}{[print(xabber.getString(\\\"account_state_connected\\\"))]}{[} else {]}{{last_auth}}{[}]}</div>\\n    </div>\\n    <div class=\\\"device-encryption one-line\\\">\\n        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"security\\\"></svg>\\n    </div>\\n</div>\";","export default \"<div class=\\\"border ground-color-500\\\"/>\\n<div class=\\\"account-item-avatar-wrap\\\">\\n    <div class=\\\"circle-avatar-wrap\\\">\\n        <div class=\\\"dropdown-button circle-avatar border-color noselect\\\"/>\\n    </div>\\n</div>\\n<div class=\\\"status\\\"/>\\n<i class=\\\"auth-failed mdi mdi-16px mdi-close\\\"></i>\\n<div class=\\\"account-actions-panel\\\">\\n    <div class=\\\"show-account-settings\\\">\\n        <i class=\\\"mdi mdi-settings mdi-20px\\\"></i>\\n        <div class=\\\"text\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"take_photo\\\"))]}</span>\\n    </div>\\n    <div class=\\\"webcam-profile-image-wrap\\\">\\n        <div class=\\\"camera\\\">\\n            <video class=\\\"webcam-video\\\">Video stream not available.</video>\\n        </div>\\n        <canvas id=\\\"canvas\\\" style=\\\"display: none;\\\">\\n        </canvas>\\n        <div class=\\\"output hidden\\\">\\n            <div class=\\\"webcam-photo-wrap\\\">\\n                <img class=\\\"webcam-photo\\\" alt=\\\"The screen capture will appear in this box.\\\">\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera-retake\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-take-photo\\\">{[print(xabber.getString(\\\"capture\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-save hidden\\\">{[print(xabber.getString(\\\"account_webcam_profile_image_btn_save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-intro\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n        <span class=\\\"client-description\\\">{{SHORT_CLIENT_DESCRIPTION}}</span>\\n    </div>\\n    <div class=\\\"login-buttons\\\">\\n        <div class=\\\"btn-flat btn-main btn-register-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</div>\\n        <div class=\\\"btn-flat btn-main btn-login-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_in\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-form xmpp-login-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back-menu mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-jid\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"dialog_jingle_message__message_connect\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field input-field-jid\\\">\\n                    <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                    <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                        <div class=\\\"select-auth-xmpp-server\\\">\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                            <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' value=\\\"111111\\\" name=\\\"sign_in_domain\\\">\\n                            </div>\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                            <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-error login-jid-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-error login-password-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-description\\\"></div>\\n            <div class=\\\"login-step-wrap hidden\\\">\\n                <div class=\\\"login-step connecting-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n                <div class=\\\"login-step credentials-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"login-form-server-features hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\"></div>\\n        </div>\\n        <div class=\\\"login-server-features-wrap\\\">\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"server-features-error\\\"></div>\\n    </div>\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-sign-up-instead\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-finish-log-in\\\"></button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n<div class=\\\"login-panel-form register-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_register_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-skip hidden\\\">{[print(xabber.getString(\\\"skip\\\"))]}</div>\\n    <div class=\\\"register-form-nickname\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_nickname\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_nickname\\\" placeholder='{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}' type=\\\"text\\\" name=\\\"register_nickname\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_nickname\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-jid hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_jid\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_jid\\\" placeholder='{[print(xabber.getString(\\\"hint_username\\\"))]}' type=\\\"text\\\" name=\\\"register_jid\\\">\\n                </div>\\n                <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                    <div class=\\\"select-xmpp-server\\\">\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                        <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                            <input id=\\\"new_account_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"register_domain\\\">\\n                        </div>\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                            <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                            <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                        <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_jid\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-password hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_password\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"register_password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_password\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-picture hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_avatar\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"avatar-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <div class=\\\"circle-avatar\\\">\\n                        <input id=\\\"register_picture\\\"  title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"circle-icon\\\">\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    {[if (xabber.url_params && xabber.url_params.rkey){]}\\n        <div class=\\\"login-form-url\\\">\\n            <i class=\\\"mdi login-form-url-icon mdi-link-variant\\\"></i>\\n            <div class=\\\"login-form-url-text\\\">\\n                {[print(xabber.getString(\\\"xmpp_login__registration_via_link\\\"))]}\\n            </div>\\n        </div>\\n    {[}]}\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-next\\\">{[print(xabber.getString(\\\"xaccount_next\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main btn-skip\\\">{[print(xabber.getString(\\\"xmpp_login__registration_skip\\\"))]}</button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal main-modal add-xabber-account-modal\\\">\\n    <div class=\\\"modal-content-wrap\\\">\\n        <div class=\\\"modal-header\\\">\\n            <span>{[print(xabber.getString(\\\"dialog_add_xabber_account__header\\\"))]}</span>\\n        </div>\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"row account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            {[if (constants.USE_SOCIAL_AUTH){]}\\n            <div class=\\\"row social-auth-wrap\\\">\\n                <div class=\\\"social-header\\\">\\n                    <div class=\\\"divider\\\"></div>\\n                    <div class=\\\"social-header-tip\\\">{[print(xabber.getString(\\\"social_sign_in\\\"))]}</div>\\n                </div>\\n                <div class=\\\"social-buttons\\\">\\n                    <div class=\\\"btn-social google-color\\\" data-provider=\\\"google\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-google-plus\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social facebook-color\\\" data-provider=\\\"facebook\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-facebook\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social twitter-color\\\" data-provider=\\\"twitter\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social xabber-color\\\" data-provider=\\\"email\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-at\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n            {[}]}\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-footer\\\">\\n    <div class=\\\"registration-footer\\\">\\n        <div class=\\\"registration-tip-wrap\\\">\\n            <span class=\\\"registration-tip\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__text_no_account\\\"))]}</span>\\n            <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/signup/\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-registration\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__button_registration\\\"))]}</a>\\n        </div>\\n    </div>\\n    <div class=\\\"footer-text clearfix\\\">{[print(xabber.getString(\\\"tutorial_description_6\\\"))]}</div>\\n</div>\\n\";","export default \"<div data-id=\\\"{{email_id}}\\\" data-email=\\\"{{email}}\\\" class=\\\"{[if (!verified){]}not-linked {[}]}social-linked-item-wrap email-linked\\\"><div style=\\\"background-color:{{color}}\\\" class=\\\"social-icon\\\">{[if (verified){]}<svg style=\\\"width:24px;height:24px\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#FFF\\\" d=\\\"M21,13.34C20.37,13.12 19.7,13 19,13A6,6 0 0,0 13,19C13,19.34 13.03,19.67 13.08,20H3A2,2 0 0,1 1,18V6C1,4.89 1.89,4 3,4H19A2,2 0 0,1 21,6V13.34M23.5,17L18.5,22L15,18.5L16.5,17L18.5,19L22,15.5L23.5,17M3,6V8L11,13L19,8V6L11,11L3,6Z\\\" />\\n</svg>{[} else {]}<i class=\\\"mdi mdi-24px mdi-email\\\"></i>{[}]}</div><div class=\\\"synced-info\\\"><div class=\\\"name one-line\\\">{{email}}</div><div class=\\\"verified-status one-line\\\">{[if (verified){print(xabber.getString(\\\"title_verified_email\\\"));}else{print(xabber.getString(\\\"title_unverified_email\\\"));}]}</div></div>{[if (!verified){]}<div class=\\\"btn-main btn-flat btn-verify-email\\\">{[print(xabber.getString(\\\"button_confirm\\\"))]}</div>{[}]}<div class=\\\"btn-main btn-flat btn-link btn-unlink\\\">{[print(xabber.getString(\\\"action_disconnect\\\"))]}</div></div>\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"xabber_account__dialog_sync__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"setting sync-all-wrap field-wrap\\\">\\n                <div class=\\\"field clickable-field switch normal\\\">\\n                    <span class=\\\"field-name\\\">{[print(xabber.getString(\\\"sync_all\\\"))]}</span>\\n                    <label class=\\\"field-value\\\">\\n                       <input type=\\\"checkbox\\\" class=\\\"sync-all\\\">\\n                       <span class=\\\"lever\\\"></span>\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"accounts-wrap\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-sync\\\">{[print(xabber.getString(\\\"xabber_account__dialog_sync__button_sync\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-info-wrap\\\">\\n        <i class=\\\"sync-icon mdi mdi-24px\\\" data-mdiclass=\\\"\\\"></i>\\n        <div class=\\\"text-info-wrap\\\">\\n            <div class=\\\"name text-color-grey-900 one-line\\\">{{jid}}</div>\\n            <div class=\\\"sync-tip text-color-grey-500 one-line\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"input-field checkbox-field sync-one-wrap no-padding\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in sync-one\\\" id=\\\"{{view.cid}}_sync_{{jid}}\\\"/>\\n        <label for=\\\"{{view.cid}}_sync_{{jid}}\\\"></label>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"xabber-account-content-wrap\\\">\\n    <div class=\\\"account-info-wrap\\\">\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <div class=\\\"name-wrap\\\">\\n                <div class=\\\"name text-color-red-700 one-line\\\"></div>\\n            </div>\\n            <div class=\\\"last-sync-info\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"sync-wrap\\\">\\n        <div class=\\\"btn-sync\\\">\\n            <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-flat btn-main btn-login\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"account-action-more\\\">\\n            <i class=\\\"mdi mdi-20px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"account-action-more\\\" class=\\\"xabber-account-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-sync btn-sync-settings\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"xabber_account__dialog_sync__button_sync\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-password\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"button_set_pass\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-logout\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n<div class=\\\"xabber-account-tip\\\">{[print(xabber.getString(\\\"tutorial_description_6\\\"))]}</div>\\n<div class=\\\"linked-social-accounts-and-emails\\\">\\n    <div class=\\\"social-linked-header\\\"><div class=\\\"chevron-icon\\\"><i class=\\\"arrow mdi mdi-20px\\\"></i></div><div class=\\\"social-linked-header-text\\\">{[print(xabber.getString(\\\"title_linked_accounts\\\"))]}</div></div>\\n    <div class=\\\"social-linked-wrap\\\">\\n        <div id='google' class=\\\"not-linked social-account social-linked-item-wrap google-linked\\\"><div class=\\\"google-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-google-plus\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='facebook' class=\\\"not-linked social-account social-linked-item-wrap facebook-linked\\\"><div class=\\\"facebook-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-facebook\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='twitter' class=\\\"not-linked social-account social-linked-item-wrap twitter-linked\\\"><div class=\\\"twitter-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-twitter\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='email' class=\\\"not-linked social-linked-item-wrap\\\"><div class=\\\"email-color social-icon\\\"><svg style=\\\"width:24px;height:24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path fill=\\\"#FFF\\\" d=\\\"M3,4C1.89,4 1,4.89 1,6V18A2,2 0 0,0 3,20H14.09C14.03,19.67 14,19.34 14,19A6,6 0 0,1 20,13C20.34,13 20.67,13.03 21,13.09V6C21,4.89 20.1,4 19,4H3M3,6L11,11L19,6V8L11,13L3,8V6M19,15V18H16V20H19V23H21V20H24V18H21V15H19Z\\\" />\\n        </svg></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_add_email\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n    </div>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"login-panel\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n    </div>\\n    <div class=\\\"login-panel-form xmpp-login-form noselect\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__header\\\"))]}</div>\\n        <div class=\\\"input-field email-name\\\">\\n            <input id=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\">\\n            <label for=\\\"username\\\">{[print(xabber.getString(\\\"email_hint\\\"))]}</label>\\n            <span class=\\\"errors fixed one-line\\\"></span>\\n        </div>\\n        <div class=\\\"input-field\\\">\\n            <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n            <label for=\\\"password\\\">{[print(xabber.getString(\\\"hint_pass\\\"))]}</label>\\n            <span class=\\\"errors fixed one-line\\\"></span>\\n        </div>\\n        <div class=\\\"input-field buttons-wrap\\\">\\n            <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/forgot-password/\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-forgot-password\\\">{[print(xabber.getString(\\\"forgot_pass\\\"))]}</a>\\n            <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button>\\n        </div>\\n        <div class=\\\"social-auth-wrap\\\"><div class=\\\"social-header\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"social-header-tip\\\">{[print(xabber.getString(\\\"xabber_login__new_account\\\"))]}</div>\\n        </div></div>\\n        <div class=\\\"registration-footer\\\">\\n            <div class=\\\"registration-tip-wrap\\\">\\n                <span class=\\\"registration-tip\\\">{[print(xabber.getString(\\\"xabber_account__login__text_no_xmpp_acc\\\"))]}</span>\\n                <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/signup/?source=Xabber Web\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-registration\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__button_registration\\\"))]}</a>\\n            </div>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-form xmpp-login-form noselect\\\">\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_email\\\"))]}</div>\\n    <div class=\\\"input-field email-name\\\">\\n        <input id=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\">\\n        <label for=\\\"username\\\">{[print(xabber.getString(\\\"email_hint\\\"))]}</label>\\n        <span class=\\\"errors fixed one-line\\\"></span>\\n    </div>\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n        <label for=\\\"password\\\">{[print(xabber.getString(\\\"hint_pass\\\"))]}</label>\\n        <span class=\\\"errors fixed one-line\\\"></span>\\n    </div>\\n    <div class=\\\"login-panel-footer buttons-wrap\\\"><button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button><button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button></div>\\n</div>\";","export default \"<div class=\\\"left-column noselect\\\">\\n    <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n        </div>\\n        <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n        <div class=\\\"version\\\"></div>\\n    </div>\\n</div>\\n</div>\\n\\n<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span>{[print(xabber.getString(\\\"category_about\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content\\\">\\n            <div class=\\\"settings-block-wrap about\\\">\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_1\\\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_2\\\", [`<a href=\\\"${CLIENT_URL}\\\" target=\\\"_blank\\\">${CLIENT_URL}</a>`]))]}</div>\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__text\\\"))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__text\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_name\\\")}</a>`, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_2\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_3\\\"))]}</div>\\n                <div class=\\\"block-content flex-content\\\">\\n                    <img class=\\\"logo\\\" src=\\\"images/redsolution-logo.png\\\"/>\\n                    <a href=\\\"https://twitter.com/Xabber_XMPP\\\" target=\\\"_blank\\\"><div class=\\\"btn-social twitter-color\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div></a>\\n                    <a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\"><img class=\\\"btn-social github-logo\\\" src=\\\"images/ic_github.png\\\"/></a>\\n                </div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_1\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_2\\\", [`<a href=\\\"${PROJECT_CROWDIN_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_4__text_2__link__text\\\", [constants.SHORT_CLIENT_NAME])}</a>`]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_1__link__text\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_2\\\"))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_3\\\", [constants.SHORT_CLIENT_NAME, xabber.getString(\\\"client_developer_company_name\\\"), `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_full_name\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_4\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_LICENSE_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_4__link__text\\\")}</a>`]))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n<div class=\\\"material-color-picker-wrap\\\">\\n    <div class=\\\"material-color-picker\\\">\\n        {[materialColors.forEach(function (color) {]}\\n        <div data-color-name=\\\"{{color.color}}\\\" class=\\\"color-palette-wrapper\\\">\\n            {[var default_color = color.variations.find(v => v.weight == 500);]}\\n            <div data-weight=\\\"500\\\" data-hex=\\\"{{default_color.hex}}\\\" style=\\\"background-color: {{default_color.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[color.variations.forEach(function (variation) {]}\\n            <div data-weight=\\\"{{variation.weight}}\\\" data-hex=\\\"{{variation.hex}}\\\" style=\\\"background-color: {{variation.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[})]}\\n        </div>\\n        {[})]}\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"hidden selected-color-wrap\\\">\\n        <div class=\\\"selected-color-item\\\"></div>\\n        <div class=\\\"selected-color-info\\\">\\n            <div class=\\\"selected-color-name\\\"></div>\\n            <div class=\\\"selected-color-hex\\\"></div>\\n            <input class=\\\"selected-color-hex-input hidden\\\"/>\\n        </div>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-set\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<ul class=\\\"color-values noselect\\\">\\n    <li class=\\\"color-value\\\" data-value=\\\"red\\\">\\n        <div class=\\\"color-name text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-red-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"pink\\\">\\n        <div class=\\\"color-name text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-pink-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"purple\\\">\\n        <div class=\\\"color-name text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-purple\\\">\\n        <div class=\\\"color-name text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"indigo\\\">\\n        <div class=\\\"color-name text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-indigo-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue\\\">\\n        <div class=\\\"color-name text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-blue\\\">\\n        <div class=\\\"color-name text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"cyan\\\">\\n        <div class=\\\"color-name text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-cyan-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"teal\\\">\\n        <div class=\\\"color-name text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-teal-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"green\\\">\\n        <div class=\\\"color-name text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-green\\\">\\n        <div class=\\\"color-name text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"lime\\\">\\n        <div class=\\\"color-name text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-lime-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"amber\\\">\\n        <div class=\\\"color-name text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-amber-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"orange\\\">\\n        <div class=\\\"color-name text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-orange\\\">\\n        <div class=\\\"color-name text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"brown\\\">\\n        <div class=\\\"color-name text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-brown-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue-grey\\\">\\n        <div class=\\\"color-name text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-grey-700\\\"></div>\\n    </li>\\n</ul>\";","export default \"<div class=\\\"modal dialog-modal {{modal_class}}\\\">\\n    <div class=\\\"modal-header\\\">\\n        <div class=\\\"panel-header black-text\\\">{{header}}</div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{{text}}</div>\\n        <div class=\\\"dialog-options-wrap\\\">\\n        {[ for (var idx in dialog_options) { var option = dialog_options[idx]; ]}\\n            <div class=\\\"dialog-option\\\" data-name=\\\"{{option.name}}\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"dialog_option_{{option.name}}\\\" {[ if (option.checked) { ]}checked=\\\"checked\\\"{[ } ]}/>\\n                <label for=\\\"dialog_option_{{option.name}}\\\">{{option.text}}</label>\\n            </div>\\n        {[ } ]}\\n        </div>\\n        <div class=\\\"container-for-img hidden\\\"><img class=\\\"img-from-clipboard\\\"></div>\\n    </div>\\n    <div class=\\\"modal-footer {{flag}}\\\">\\n        {[ for (var idx in optional_buttons) { var button = optional_buttons[idx]; ]}\\n        <button class=\\\"optional-button btn-flat btn-main\\\" data-option=\\\"{{button.value}}\\\">{{button.name}}</button>\\n        {[ } ]}\\n        {[ if (ok_button) { ]}\\n        <button class=\\\"ok-button btn-flat btn-main\\\" data-option=true>{{ok_button.text}}</button>\\n        {[ } ]}\\n        {[ if (cancel_button) { ]}\\n        <button class=\\\"cancel-button btn-flat btn-main btn-dark btn-cancel\\\" data-option=false>{{cancel_button.text}}</button>\\n        {[ } ]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"fingerprint-content\\\">\\n    {[if (svg_icon){]}\\n        <div class=\\\"fingerprint-device-icon\\\">\\n            <svg class=\\\"mdi mdi-72px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        </div>\\n    {[}]}\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"fingerprint-label\\\">\\n            <div class=\\\"value\\\">{{label}}</div>\\n        </div>\\n    </div>\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"device-id\\\">\\n            <div class=\\\"value\\\">{{id}}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint device-fingerprints-part\\\">\\n            <div class=\\\"label\\\">\\n                {[if (!edit_setting) {]}\\n                    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__other_fingerprint_label\\\"))]}\\n                {[} else {]}\\n                <span class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</span> {[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}\\n                {[}]}:</div>\\n            <div class=\\\"value\\\">{{fingerprint}}</div>\\n        </div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n</div>\\n<div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n    {[if (trust !== null && !error) {]}\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n        <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n            <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_verify_device`))]}</div>\\n        </div>\\n    </div>\\n    <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content bootstrap-dropdown noselect fingerprint-dropdown\\\">\\n        <div data-value=\\\"ignore\\\" class=\\\"property-variant btn-ignore\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n        <div data-value=\\\"trust\\\" class=\\\"property-variant btn-trust\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"row\\\">\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap\\\">\\n        {[if (edit_setting) {]}\\n        <input class=\\\"hidden set-label one-line\\\" {[if (label) {]}value=\\\"{{label}}\\\"{[}]}>{[}]}\\n        {[if (label) {]}<div class=\\\"one-line label\\\">{{label}}</div>{[}]}\\n        <div class=\\\"device-id one-line\\\">{{id}}</div>\\n        {[if (!label) {]}<div class=\\\"device-id-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_device_id\\\"))]}</div>{[}]}\\n        {[if (edit_setting) {]}<div class=\\\"set-label-label hidden\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_set_label\\\"))]}</div>{[}]}\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint\\\">{{fingerprint}}</div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n    <div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n        {[if (trust !== null && !error) {]}\\n        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n            <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n                <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_${trust}`))]}</div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content noselect fingerprint-dropdown\\\">\\n            <div data-value=\\\"ignore\\\" class=\\\"btn-main text-color-grey-500 btn-ignore btn-flat\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n            <div data-value=\\\"trust\\\" class=\\\"btn-main btn-flat btn-trust text-color-green-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n            {[if (delete_button){]}\\n            <div class=\\\"btn-main btn-flat btn-delete text-color-red-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_delete\\\"))]}</div>\\n            {[}]}\\n        </div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"additional-info\\\"></div>\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"this-device-wrap\\\">\\n        <div class=\\\"this-device-header-wrap\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"this-device-header\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</div>\\n        </div>\\n        <div class=\\\"this-device-content\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprints-description-wrap\\\">\\n        <div class=\\\"fingerprints-description\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_description\\\"))]}</div>\\n        <div class=\\\"link-about-encryption\\\"><a href=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__link_learn_more'))]}\\\" target=\\\"_blank\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_learn_more\\\"))]}</a></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__device_verification_label\\\"))]}\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n    <div class=\\\"other-device-content\\\">\\n\\n    </div>\\n    <div class=\\\"this-device-content\\\">\\n\\n    </div>\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"fingerprints-help-text\\\">\\n        {[print(xabber.getString(\\\"omemo__dialog_fingerprints__bottom_help_text\\\"))]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}} field-text one-line\\\"></div>\\n    <div class=\\\"btn-rename\\\">\\n        <span>{[print(xabber.getString(\\\"input_widget__button_rename\\\"))]}</span>\\n    </div>\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input field-input hidden\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"collapsed-movable\\\"></div>\\n<i class=\\\"mdi mdi-phone btn-collapse\\\"></i>\\n<div class=\\\"call-header\\\">\\n    {[print(xabber.getString(\\\"dialog_jingle_message__header\\\", [SHORT_CLIENT_NAME]))]}\\n    <div class=\\\"calling-status\\\"/>\\n</div>\\n<div class=\\\"blur-background\\\"></div>\\n<div class=\\\"contact-info\\\">\\n    <div class=\\\"name one-line\\\"/>\\n    <div class=\\\"calling-status\\\"/>\\n</div>\\n<div class=\\\"video-wrap\\\">\\n    <video autoplay loop class=\\\"blank-video hidden\\\">\\n        <source src=\\\"{{BLANK_VIDEO.MP4}}\\\">\\n        <source src=\\\"{{BLANK_VIDEO.OGG}}\\\" type=\\\"video/ogg\\\">\\n        <source src=\\\"{{BLANK_VIDEO.WEBM}}\\\" type=\\\"video/webm\\\">\\n    </video>\\n    <audio autoplay class=\\\"webrtc-remote-audio hidden\\\"/>\\n    <video autoplay muted class=\\\"webrtc-local-video collapsed hidden\\\"/>\\n    <div class=\\\"default-screen\\\">\\n        <div class=\\\"circle-avatar\\\"/>\\n        <div class=\\\"name one-line\\\"/>\\n    </div>\\n</div>\\n<div class=\\\"buttons-panel\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"btn-wrap\\\" title=\\\"Collapse window\\\"><svg class=\\\"btn-collapse mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M19.5,3.09L15,7.59V4H13V11H20V9H16.41L20.91,4.5L19.5,3.09M4,13V15H7.59L3.09,19.5L4.5,20.91L9,16.41V20H11V13H4Z\\\"/>\\n        </svg></div>\\n        <div class=\\\"btn-wrap\\\" title=\\\"Fullscreen mode\\\"><svg class=\\\"btn-full-screen mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M11,21H3V13H5V17.59L17.59,5H13V3H21V11H19V6.41L6.41,19H11V21Z\\\" />\\n        </svg></div>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute_microphone__tooltip\\\"))]}' class=\\\"btn-microphone mdi mdi-24px mdi-microphone\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_switch_video__tooltip\\\"))]}' class=\\\"btn-video mdi mdi-24px mdi-video\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute__tooltip\\\"))]}' class=\\\"btn-volume mdi mdi-24px mdi-volume-high\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_share_screen__tooltip\\\"))]}' class=\\\"btn-share-screen mdi mdi-24px mdi-monitor\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_accept_call__tooltip\\\"))]}' class=\\\"btn-accept mdi mdi-24px mdi-phone\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_decline_call__tooltip\\\"))]}' class=\\\"btn-cancel mdi mdi-24px mdi-phone-hangup\\\"/>\\n    </div>\\n</div>\";","export default \"<div class=\\\"msg-text ground-color-300\\\">\\n    <span title=\\\"{[print(xabber.getString('omemo__alert_enable__tooltip'))]}\\\" class=\\\"btn-enable\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</span> {[print(xabber.getString(\\\"omemo__alert_enable__text\\\", [jid]))]}</div>\\n<i class=\\\"mdi mdi-22px mdi-close btn-escape\\\"></i>\\n<button class=\\\"btn-enable btn-flat hover-ground-color-500 btn-dark btn-main\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</button>\";","export default \"<div class=\\\"plyr-player-popup-container\\\">\\n    <div class=\\\"plyr-player-popup-draggable\\\">\\n        <video class=\\\"plyr-player-popup\\\"></video>\\n        <div class=\\\"plyr-player-min-controls-tab\\\">\\n            <div class=\\\"plyr-player-min-controls-buttons\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-minimize-full mdi-svg-template\\\" data-svgname=\\\"player-full\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-play mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-pause mdi-svg-template\\\" data-svgname=\\\"pause\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-mute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-off\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-unmute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-high\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"plyr-player-control-tab\\\">\\n    <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n    <svg class=\\\"mdi mdi-24px mdi-plyr-toolbar-item mdi-plyr-hide mdi-svg-template\\\" data-svgname=\\\"player-mini\\\"></svg>\\n</div>\";","export default \"    <div class=\\\"left-column noselect\\\">\\n        <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n            <div class=\\\"picture-wrap\\\">\\n                <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n            </div>\\n            <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n            <div class=\\\"version\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            {[if (ENABLE_XABBER_ACCOUNT) {]}\\n            <div class=\\\"settings-tab xabber-account-tab offline\\\" data-block-name=\\\"xabber-account\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-offline-icon\\\" data-svgname=\\\"xabber-offline\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-online-icon\\\" data-svgname=\\\"xabber-online\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</div>\\n            </div>\\n            {[}]}\\n            <div class=\\\"settings-tab active\\\" data-block-name=\\\"xmpp-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-lightbulb\\\"/>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                <i class=\\\"mdi mdi-24px mdi-incognito\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n            </div>\\n            {[if (PERSONAL_AREA_URL && Object.keys(PERSONAL_AREA_URL).length) {]}\\n            <a href=\\\"{{PERSONAL_AREA_URL.url}}\\\" target=\\\"_blank\\\"><div class=\\\"link-button settings-tab\\\" data-block-name=\\\"{{PERSONAL_AREA_URL.label}}\\\">\\n                <i class=\\\"mdi mdi-24px mdi-{{PERSONAL_AREA_URL.icon_name}}\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{{PERSONAL_AREA_URL.label}}</div>\\n            </div>\\n            </a>\\n            {[}]}\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap settings-tabs-wrap\\\">\\n            <div class=\\\"settings-tab delete-all-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n            <button class=\\\"btn-add-account btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</button>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content\\\">\\n                {[if (ENABLE_XABBER_ACCOUNT) {]}\\n                <div data-block-name=\\\"\\\" class=\\\"settings-block-wrap xabber-account\\\">\\n                    <div class=\\\"block-header\\\">\\n                        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</span>\\n                    </div>\\n                </div>\\n                {[}]}\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}' class=\\\"settings-block-wrap xmpp-accounts\\\">\\n                    <div class=\\\"setting xmpp-account-list\\\">\\n                        <div class=\\\"accounts-head-wrap\\\">\\n                            <div class=\\\"accounts-head xmppid-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_xmpp_id\\\"))]}</div>\\n                            <div class=\\\"accounts-head sync-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_sync\\\"))]}</div>\\n                            <div class=\\\"accounts-head enabled-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_enabled\\\"))]}</div>\\n                        </div>\\n                        <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n                        <div class=\\\"move-account-to-bottom droppable\\\"></div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__palette\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                <div class=\\\"current-main-color-wrap\\\">\\n                                    <div class=\\\"current-main-color ground-color-500\\\"></div>\\n                                    <div class=\\\"color-name\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"toolbar-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-color-setting field-wrap\\\">\\n                                <div class=\\\"selected-color-wrap\\\">\\n                                    <div class=\\\"selected-color-item\\\"></div>\\n                                    <div class=\\\"selected-color-info\\\">\\n                                        <div class=\\\"selected-color-name\\\"></div>\\n                                        <div class=\\\"selected-color-hex\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"account_settings_background\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"background-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</div>\\n                            <div class=\\\"setting background radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                                <div class=\\\"current-background-wrap\\\">\\n                                    <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                    <div class=\\\"current-background\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"blur-setting-wrap\\\">\\n                                <div class=\\\"setting blur-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                        <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"vignetting-setting-wrap\\\">\\n                                <div class=\\\"setting vignetting-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                        <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                        <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                        <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_contact_list\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"circle-avatar noselect\\\"/>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                        <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                        <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                        <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                        <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                        <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}'  class=\\\"settings-block-wrap notifications hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting idling field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"idling\\\"/>\\n                                <label for=\\\"idling\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_idling\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                        <div class=\\\"setting volume-setting\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-volume-low\\\"></i>\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"disabled hidden\\\"></div>\\n                                <p class=\\\"range-field\\\">\\n                                    <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                </p>\\n                            </form>\\n                            <i class=\\\"mdi mdi-24px mdi-volume-high\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting private-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"private-notifications\\\"/>\\n                                <label for=\\\"private-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview private-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting group-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"group-notifications\\\"/>\\n                                <label for=\\\"group-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview group-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-call\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-call\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-connecting\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-connecting\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting call-attention field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"call_attention\\\"/>\\n                                <label for=\\\"call_attention\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_call_attention\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                    <div class=\\\"setting load-media field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                            <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting typing-notifications field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                            <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting mapping-service field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                            <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                    <div class=\\\"setting interface-language-setting\\\">\\n                        <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default\\\" />\\n                                    <label for=\\\"{{view.cid}}-default\\\">{[print(xabber.getString(\\\"settings__languages_list___item_default\\\", [languages[xabber.get(\\\"default_language\\\") || 'en']]))]}</label>\\n                                </div>\\n                                {[if (window.navigator.language.indexOf(xabber.get(\\\"default_language\\\")) < 0) {]}\\n                                {[}]}\\n                                {[for (let lang in constants.languages) { if (!lang || lang == xabber.get(\\\"default_language\\\")) continue;]}\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"{{lang}}\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-{{lang}}\\\" />\\n                                    <label for=\\\"{{view.cid}}-{{lang}}\\\">{[print(constants.languages[lang]);]}</label>\\n                                    {[let locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));]}\\n                                    {[if (locale) { let progress = client_translation_progress[locale];]}<div class=\\\"translation-progress\\\">{[print((progress == 100) ? xabber.getString(\\\"settings__section_interface_language__translation_progress_fully\\\") : xabber.getString(\\\"settings__section_interface_language__translation_progress\\\", [`${progress}%`]))]}</div>{[}]}\\n                                </div>\\n                                {[}]}\\n                            </form>\\n                        </div>\\n                        <div class=\\\"description\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"background-overlay\\\"></div>\\n<div class=\\\"settings-panel\\\">\\n    <div class=\\\"settings-transition-wrap\\\">\\n        <div class=\\\"left-column main-left-column settings-column noselect\\\">\\n            <svg class=\\\"btn-add-account mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"contact-add\\\"></svg>\\n            <div class=\\\"single-account-info-wrap account-settings-panel\\\">\\n                <div class=\\\"single-account-info\\\"></div>\\n            </div>\\n            <div class=\\\"accounts-info-wrap\\\">\\n                <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n                <div class=\\\"settings-divider\\\"></div>\\n                <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"preferences\\\"))]}</div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__background_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"client\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"data_storage\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"database\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__data_storage\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__data_storage_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"group-private\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"connection\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__connection\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__connection_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"debug\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bug\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__debug\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__debug_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                </div>\\n                <div class=\\\"settings-tab settings-deletion-button delete-all-accounts\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                    </div>\\n                    <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings__button_quit\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"right-column main-right-column settings-column hidden noselect\\\">\\n            <div class=\\\"settings-panel-head\\\">\\n                <i class=\\\"btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <i class=\\\"btn-back-subsettings mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n                <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n                <div class=\\\"description\\\"></div>\\n            </div>\\n\\n            <div class=\\\"panel-content-wrap\\\">\\n                <div class=\\\"panel-content\\\">\\n\\n                    <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background\\\">\\n                        <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"appearance\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__appearance_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"chats\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chat\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__chats_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"avatars\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"star-face\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}' class=\\\"settings-block-wrap appearance\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                                <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                    <div class=\\\"client-main-color-picker\\\">\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-deep-purple-500 outline-color-deep-purple-500\\\" data-value=\\\"deep-purple\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-indigo-500 outline-color-indigo-500\\\" data-value=\\\"indigo\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-cyan-500 outline-color-cyan-500\\\" data-value=\\\"cyan\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-amber-500 outline-color-amber-500\\\" data-value=\\\"amber\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-teal-500 outline-color-teal-500\\\" data-value=\\\"teal\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-brown-500 outline-color-brown-500\\\" data-value=\\\"brown\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-blue-grey-500 outline-color-blue-grey-500\\\" data-value=\\\"blue-grey\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-light-green-500 outline-color-light-green-500\\\" data-value=\\\"light-green\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-green-500 outline-color-green-500\\\" data-value=\\\"green\\\">\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"toolbar-color-setting-wrap\\\">\\n                                <div class=\\\"setting settings-color-padding toolbar-color-setting field-wrap\\\">\\n                                    <div class=\\\"selected-color-wrap\\\">\\n                                        <div class=\\\"selected-color-item\\\"></div>\\n                                        <div class=\\\"selected-color-info\\\">\\n                                            <div class=\\\"selected-color-name\\\"></div>\\n                                            <div class=\\\"selected-color-hex\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"background-setting-wrap\\\">\\n                                <div class=\\\"setting background radio-button field-wrap\\\">\\n                                    <div class=\\\"field radio-field clickable-field\\\">\\n                                        <form action=\\\"#\\\">\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                            </p>\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                            </p>\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                    <div class=\\\"current-background-wrap\\\">\\n                                        <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                        <div class=\\\"current-background\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background_effects\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"background-setting-wrap\\\">\\n                                <div class=\\\"blur-setting-wrap\\\">\\n                                    <div class=\\\"setting blur-setting checkbox-setting field-wrap\\\">\\n                                        <div class=\\\"input-field checkbox-field\\\">\\n                                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                            <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                        </div>\\n                                        <form action=\\\"#\\\">\\n                                            <div class=\\\"disabled hidden\\\"></div>\\n                                            <p class=\\\"range-field range-field-design\\\">\\n                                                <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                                <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"vignetting-setting-wrap\\\">\\n                                    <div class=\\\"setting vignetting-setting checkbox-setting field-wrap\\\">\\n                                        <div class=\\\"input-field checkbox-field\\\">\\n                                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                            <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                        </div>\\n                                        <form action=\\\"#\\\">\\n                                            <div class=\\\"disabled hidden\\\"></div>\\n                                            <p class=\\\"range-field range-field-design\\\">\\n                                                <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                                <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"chat_viewer\\\"))]}' class=\\\"settings-block-wrap chats\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                            <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                            <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__idle_timeout\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"setting idling checkbox-setting field-wrap\\\">\\n                                <div class=\\\"input-field  checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"idling\\\"/>\\n                                    <label for=\\\"idling\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_idling\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting idling-time field-wrap\\\">\\n                                <div class=\\\"idling-time-input\\\">\\n                                    <p class=\\\"range-field range-field-design\\\">\\n                                        <input class=\\\"materialize-timer\\\" placeholder='{[print(constants.IDLING_DEFAULT_TIMEOUT)]}' id=\\\"idle_timeout\\\" min=\\\"{[print(constants.IDLING_MINIMAL_TIMEOUT)]}\\\" max=\\\"{[print(constants.IDLING_MAXIMUM_TIMEOUT)]}\\\" value=\\\"{[print(xabber._settings.get('idling_time'))]}\\\" type=\\\"range\\\" name=\\\"idle_timeout\\\">\\n                                        <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                    </p>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-clue\\\">{[print(xabber.getString(\\\"settings__menu_item__idle_timeout_clue\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"avatars\\\"))]}' class=\\\"settings-block-wrap avatars\\\">\\n                        <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                            <div class=\\\"circle-avatar noselect\\\"/>\\n                            <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                            <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                            <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                            <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                            <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}' class=\\\"settings-block-wrap notifications\\\">\\n                        <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"web-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"client\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"chats-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chat\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field private-notifications clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab settings-tab-big-icon\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"groupchats-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"group-public\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field group-notifications clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"calls-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls_label\\\"))]}</div>\\n                                <div class=\\\"field jingle-calls clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"attention-calls\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"alarm-bell\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field call-attention clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}' class=\\\"settings-block-wrap web-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting notifications checkbox-setting field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                    <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                            <div class=\\\"setting volume-setting\\\">\\n                                <i class=\\\"mdi mdi-24px mdi-volume-low\\\"></i>\\n                                <form action=\\\"#\\\">\\n                                    <div class=\\\"disabled hidden\\\"></div>\\n                                    <p class=\\\"range-field range-field-design\\\">\\n                                        <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                    </p>\\n                                </form>\\n                                <i class=\\\"mdi mdi-24px mdi-volume-high\\\"></i>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}' class=\\\"settings-block-wrap chats-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting message-preview checkbox-setting private-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}' class=\\\"settings-block-wrap groupchats-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting message-preview checkbox-setting group-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}' class=\\\"settings-block-wrap calls-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-call\\\" />\\n                                            <label for=\\\"{{view.cid}}-call-sound-call\\\">Call</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-call-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-call-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-call-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-call-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-call-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-call-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-call-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-call-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-call-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-call-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-call-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-call-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-call-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-connecting\\\" />\\n                                            <label for=\\\"{{view.cid}}-dialtone-sound-connecting\\\">Call</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-attention\\\" />\\n                                            <label for=\\\"{{view.cid}}-dialtone-sound-attention\\\">Attention</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-dialtone-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-dialtone-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-dialtone-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-dialtone-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-dialtone-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-dialtone-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-dialtone-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-dialtone-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}' class=\\\"settings-block-wrap attention-calls\\\">\\n                        <div class=\\\"settings-subblock-wrap \\\">\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-attention\\\" />\\n                                            <label for=\\\"{{view.cid}}-attention-sound-attention\\\">Attention</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-attention-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-attention-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-attention-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-attention-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-attention-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-attention-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-attention-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-attention-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-attention-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-attention-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-attention-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-attention-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-attention-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                        <div class=\\\"setting load-media checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                                <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting typing-notifications checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                                <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting mapping-service checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                                <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                        <div class=\\\"setting radio-button interface-language-setting\\\">\\n                            <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <div class=\\\"language-item\\\">\\n                                        <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default\\\" />\\n                                        <label for=\\\"{{view.cid}}-default\\\">{[print(xabber.getString(\\\"settings__languages_list___item_default\\\", [languages[xabber.get(\\\"default_language\\\") || 'en']]))]}</label>\\n                                    </div>\\n                                    {[if (window.navigator.language.indexOf(xabber.get(\\\"default_language\\\")) < 0) {]}\\n                                    {[}]}\\n                                    {[for (let lang in constants.languages) { if (!lang || lang == xabber.get(\\\"default_language\\\")) continue;]}\\n                                    <div class=\\\"language-item\\\">\\n                                        <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"{{lang}}\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-{{lang}}\\\" />\\n                                        <label for=\\\"{{view.cid}}-{{lang}}\\\">{[print(constants.languages[lang]);]}</label>\\n                                        {[let locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));]}\\n                                        {[if (locale) { let progress = client_translation_progress[locale];]}<div class=\\\"translation-progress\\\">{[print((progress == 100) ? xabber.getString(\\\"settings__section_interface_language__translation_progress_fully\\\") : xabber.getString(\\\"settings__section_interface_language__translation_progress\\\", [`${progress}%`]))]}</div>{[}]}\\n                                    </div>\\n                                    {[}]}\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"toolbar-top\\\">\\n    <div class=\\\"toolbar-item toolbar-logo\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <img class=\\\"logo\\\" src=\\\"{{TOOLBAR_LOGO}}\\\">\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-middle\\\">\\n    <div class=\\\"toolbar-item all-chats active\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-message-text\\\"></i>\\n        <span class=\\\"all-msg-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item jingle-calls\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__jingle_calls\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item mentions\\\" title='{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"bell\\\"></svg>\\n        <span class=\\\"mentions-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item contacts\\\" title='{[print(xabber.getString(\\\"category_title_contacts\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n    </div>\\n\\n    <div class=\\\"toolbar-item geolocation-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__geolocation_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-compass\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item archive-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__archive_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-archive\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item saved-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__saved_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-bookmark\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n    <div class=\\\"toolbar-item settings\\\" title='{[print(xabber.getString(\\\"settings\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-settings\\\"></i>\\n    </div>\\n    <div class=\\\"toolbar-item settings-modal\\\" title='{[print(xabber.getString(\\\"settings\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-settings\\\"></i>\\n    </div>\\n\\n    <div class=\\\"add-something-wrap\\\">\\n        <div class=\\\"toolbar-item dropdown-button add-something\\\" data-activates=\\\"{{view.cid}}-add\\\" title='{[print(xabber.getString(\\\"toolbar__button_add_tooltip\\\"))]}'>\\n            <i class=\\\"toolbar-icon mdi mdi-24px mdi-plus\\\"></i>\\n        </div>\\n\\n        <div id=\\\"{{view.cid}}-add\\\" class=\\\"add-variants dropdown-content noselect\\\">\\n            <div class=\\\"add-variant contact\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"add_contact\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant public-groupchat\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-multiple-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant incognito-groupchat\\\">\\n                <svg class=\\\"mdi mdi-20px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13 11A3 3 0 1 0 10 8A3 3 0 0 0 13 11M13 7A1 1 0 1 1 12 8A1 1 0 0 1 13 7M17.11 10.86A5 5 0 0 0 17.11 5.14A2.91 2.91 0 0 1 18 5A3 3 0 0 1 18 11A2.91 2.91 0 0 1 17.11 10.86M13 13C7 13 7 17 7 17V19H19V17S19 13 13 13M9 17C9 16.71 9.32 15 13 15C16.5 15 16.94 16.56 17 17M24 17V19H21V17A5.6 5.6 0 0 0 19.2 13.06C24 13.55 24 17 24 17M8 12H5V15H3V12H0V10H3V7H5V10H8Z\\\" />\\n                </svg>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_incognito_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant account\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-circle\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-bottom\\\">\\n    <div class=\\\"accounts-wrap\\\">\\n        <div class=\\\"accounts\\\">\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"    <div class=\\\"message-input-panel noselect\\\">\\n        <div class=\\\"my-avatar circle-avatar circle-image-fix\\\"></div>\\n        <div class=\\\"message-form\\\">\\n            <div class=\\\"fwd-messages-preview noselect hidden\\\">\\n                <div class=\\\"msg-border ground-color-700\\\">\\n                </div>\\n                <div class=\\\"msg-content\\\">\\n                    <p class=\\\"msg-author text-color-700 one-line\\\"></p>\\n                    <p class=\\\"msg-text one-line\\\"></p>\\n                </div>\\n                <div class=\\\"close-forward\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"message-reference-preview hidden\\\">\\n                <div class=\\\"message-reference-preview-container\\\">\\n                </div>\\n                <div class=\\\"close-attachments\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"input-field input-message\\\">\\n                <div class=\\\"mentions-list\\\"></div>\\n                <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                </div>\\n                <div class=\\\"scrollbar-cover\\\"></div>\\n                <div class=\\\"insert-emoticon\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n                </div>\\n                <div class=\\\"preview-preloader-container hidden\\\" title='{[print(xabber.getString(\\\"chat_bottom__preview_preloader_cancel\\\"))]}'>\\n                    <svg class=\\\"preview-cancel-preloader mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"link\\\"></svg>\\n                </div>\\n                <div class=\\\"emoticons-panel-wrap\\\">\\n                    <div class=\\\"emoticons-panel\\\"></div>\\n                    <div class=\\\"emoji-menu\\\"></div>\\n                    <div class=\\\"uploading-emoticons\\\">\\n                    <div class=\\\"preloader-wrapper preloader-20px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"input-voice-message\\\">\\n                <div class=\\\"voice-visualizer\\\"></div>\\n                <div class=\\\"timer\\\">0:00</div>\\n                <div class=\\\"voice-msg-status\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__cancel_write_voice\\\"))]}</div>\\n            </div>\\n            <div class=\\\"input-toolbar\\\">\\n                <div class=\\\"attach attach-file\\\">\\n                    <input type=\\\"file\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_file\\\"))]}' multiple>\\n                    <i class=\\\"mdi mdi-24px mdi-paperclip\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-media\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_media\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-file-image\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-location\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <input type=\\\"text\\\" hidden title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-map-marker\\\"></i>\\n                </div>\\n                <div title=\\\"Format text\\\" class=\\\"format-text\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-format-text\\\"></i>\\n                </div>\\n                <div class=\\\"last-emoticons\\\">\\n                </div>\\n                <div class=\\\"account-info-wrap\\\">\\n                    <div class=\\\"account-jid text-color-700\\\"></div>\\n                    <div class=\\\"account-nickname text-color-700\\\"></div>\\n                    <div class=\\\"account-badge\\\"></div>\\n                    <div class=\\\"account-role ground-color-700\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"send-area\\\">\\n            <i class=\\\"send-message mdi mdi-32px mdi-send text-color-700 hover-text-color-500 hidden\\\"></i>\\n            <i class=\\\"mdi mdi-32px mdi-microphone attach-voice-message text-color-700 hover-text-color-500\\\"></i>\\n        </div>\\n    </div>\\n    <div class=\\\"blocked-msg hidden\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__blocked\\\"))]}</div>\\n    <div class=\\\"message-actions-panel noselect hidden\\\">\\n        <div class=\\\"button-wrap reply-message-wrap\\\">\\n            <i class=\\\"action-button reply-message mdi ground-color-700 mdi-reply mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_reply\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_reply\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap forward-message-wrap\\\">\\n            <i class=\\\"action-button forward-message mdi ground-color-700 mdi-forward mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_froward\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_froward\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap copy-message-wrap\\\">\\n            <i class=\\\"action-button copy-message mdi ground-color-700 mdi-content-copy mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_copy\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_copy\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap delete-message-wrap\\\">\\n            <i class=\\\"action-button delete-message mdi ground-color-700 mdi-delete mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"delete\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"delete\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap edit-message-wrap\\\">\\n            <i class=\\\"action-button edit-message mdi ground-color-700 mdi-pencil mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_edit\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_edit\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap pin-message-wrap\\\">\\n            <svg class=\\\"action-button pin-message ground-color-700\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path fill=\\\"#FFF\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"/>\\n            </svg>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_pin\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_pin\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap cancel-message-wrap\\\">\\n            <i class=\\\"action-button close-message-panel mdi mdi-close mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n        </div>\\n    </div>\\n\";","export default \"  <div class=\\\"search-form-header\\\">\\n    <div class=\\\"messages-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n    </div>\\n    <div class=\\\"text-color-700 btn-cancel-searching\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n</div>\\n<div class=\\\"pinned-message\\\"></div>\\n<div class=\\\"elements-in-top\\\">\\n    <div class=\\\"subscription-buttons-wrap hidden\\\"/>\\n    <div class=\\\"chat-day-indicator fixed-day-indicator-wrap hidden\\\"><div class=\\\"fixed-day-indicator\\\"></div></div>\\n</div>\\n<div class=\\\"load-history-feedback hidden\\\"></div>\\n<div class=\\\"participant-messages-header hidden\\\"><div class=\\\"messages-by-header\\\">{[print(xabber.getString(\\\"chat__placeholder_participant_messages__messages_by\\\"))]} <div class=\\\"participant-nickname text-color-700\\\"></div></div><div class=\\\"btn-cancel-selection\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div><div class=\\\"text-color-700 btn-retract-messages\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</div></div>\\n<div class=\\\"chat-content\\\">\\n</div>\\n<div class=\\\"chat-notification hidden one-line\\\"></div>\\n<i class=\\\"mdi mdi-36px back-to-unread hidden mdi-chevron-down\\\"><div class=\\\"back-to-unread-counter\\\"></div></i>\\n<i class=\\\"mdi mdi-36px back-to-bottom mdi-chevron-down\\\"></i>\\n\";","export default \"<div class=\\\"search-wrap\\\">\\n    <div class=\\\"search-content\\\">\\n        <div class=\\\"search-form-header block-header\\\">\\n            <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n            <div class=\\\"messages-search-form search-form \\\">\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n            </div>\\n            <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"search-messages-content-wrap\\\">\\n            <div class=\\\"search-results\\\">\\n                {[print(xabber.getString(\\\"nothing_was_searched\\\"))]}\\n            </div>\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"messages-count\\\">\\n            </div>\\n            <div class=\\\"chat-content\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-body-content-placeholder-text no-select\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n\";","export default \"<div class=\\\"chat-head-details\\\"></div>\\n<div class=\\\"circle-avatar\\\"/>\\n<div class=\\\"contact-status hide-offline\\\"/>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <div class=\\\"contact-name-wrap\\\">\\n            <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n            <p class=\\\"contact-name one-line\\\"></p>\\n        </div>\\n        <p class=\\\"contact-status-message one-line\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"/>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-show-fingerprints\\\">\\n            <i class=\\\"mdi mdi-lock mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <!--<div class=\\\"chat-tool btn-set-status\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\">\\n                    <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"/>\\n                    <path d=\\\"M20,4 C21.1045695,4 22,4.8954305 22,6 L22,16 C22,17.1045695 21.1045695,18 20,18 L16,18 L12,22 L8,18 L4,18 C2.8954305,18 2,17.1045695 2,16 L2,6 C2,4.8954305 2.8954305,4 4,4 L20,4 Z M16,12 L6,12 L6,14 L16,14 L16,12 Z M18,8 L6,8 L6,10 L18,10 L18,8 Z\\\" id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\"/>\\n                </g>\\n            </svg>\\n        </div>-->\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-chat-pin\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-archive-chat\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-notifications active-hover\\\" data-activates=\\\"{{view.cid}}-mute-more\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <!--<li class=\\\"btn-contact-details\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>-->\\n            <!--</li>-->\\n            <li class=\\\"btn-call-attention\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"call_attention\\\"))]}</span>\\n            </li>\\n            <!--<li class=\\\"btn-export-history\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"export_chat\\\"))]}</span>\\n            </li>-->\\n            <li class=\\\"btn-invite-users\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-start-encryption\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_start_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-encrypted-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-regular-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_regular_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"delete_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-clear-history\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </li>\\n            <!--<li class=\\\"btn-delete-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_contact\\\"))]}</span>-->\\n            <!--</li>-->\\n            <!--<li class=\\\"btn-block-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_block\\\"))]}</span>-->\\n            <!--</li>-->\\n            <!--<li class=\\\"btn-unblock-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_unblock_contact\\\"))]}</span>-->\\n            <!--</li>-->\\n        </ul>\\n        <ul id=\\\"{{view.cid}}-mute-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <i class=\\\"mdi muted-icon mdi-14px mdi-bell-off\\\"></i>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n<div class=\\\"chat-states\\\">\\n    <div class=\\\"chat-item-notifications-wrap\\\">\\n        <span class=\\\"msg-chat-error hidden\\\">!</span>\\n        <span class=\\\"msg-incoming-subscription hidden\\\">\\n            <svg class=\\\"mdi mdi-12px mdi-svg-template\\\" data-svgname=\\\"plus\\\"></svg>\\n        </span>\\n        <span class=\\\"msg-counter hidden\\\"></span>\\n        <i class=\\\"msg-delivering-state mdi mdi-16px hidden\\\"></i>\\n        <i class=\\\"pinned-icon\\\">\\n            <svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n                <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                    <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n                    <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"chat_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"recent-chats-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"load-chats-feedback hidden\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n    </div>\\n    <div class=\\\"read-all-button hidden\\\">{[print(xabber.getString(\\\"mark_all_as_read_button\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"field clickable-field {{className}} switch normal\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{id}}\\\">\\n    <label for=\\\"{{id}}\\\"></label>\\n</div>\";","export default \"<div>\\n    <i class=\\\"mdi mdi-36px mdi-alert-circle\\\"></i>\\n</div>\\n<div class=\\\"warning-message\\\">{{message}}</div>\\n<button class=\\\"btn-manage-devices btn-flat btn-main btn-dark hover-ground-color-amber-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\";","export default \"<div class=\\\"warning-wrap\\\">\\n    <p class=\\\"warning-message\\\">{{message}}</p>\\n    <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-{{color}}-100 hover-ground-color-{{color}}-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"dialog_forward_message__header\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"contact-list forward-chats-list\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <span>{[print(xabber.getString(\\\"create_groupchat\\\"))]}</span>\\n    <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-creating-groupchat\\\">\\n        <div class=\\\"dropdown-button\\\">\\n            <div class=\\\"account-item-wrap\\\">\\n                <div class=\\\"circle-avatar noselect\\\">\\n                    <img>\\n                </div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-account-for-creating-groupchat\\\" class=\\\"dropdown-content noselect\\\">\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"row name-field\\\">\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <label for=\\\"new_chat_name\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</label>\\n            <input id=\\\"new_chat_name\\\" type=\\\"text\\\" name=\\\"chat_name\\\" placeholder='{[print(xabber.getString(\\\"group_is_empty\\\"))]}' required>\\n        </div>\\n    </div>\\n    <div class=\\\"row jid-field\\\">\\n        <label for=\\\"new_chat_jid\\\">{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}</label>\\n        <div class=\\\"input-field input-group-chat-jid\\\">\\n            <input id=\\\"new_chat_jid\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}' name=\\\"chat_jid\\\">\\n            <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                <div class=\\\"select-xmpp-server\\\">\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                    <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                        <input id=\\\"new_chat_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"chat_domain\\\">\\n                    </div>\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                        <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                        <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                    </div>\\n                </div>\\n                <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <span class=\\\"errors\\\"></span>\\n    </div>\\n    <div class=\\\"row incognito-field hidden\\\">\\n        <i class=\\\"field-icon mdi mdi-24px mdi-incognito\\\"></i>\\n        <div class=\\\"property-field incognito-dropdown-wrap\\\">\\n           <div class=\\\"public-item-wrap property-wrap\\\"><div data-value=\\\"public\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_public\\\"))]}</div></div>\\n           <div class=\\\"incognito-item-wrap property-wrap\\\"><div data-value=\\\"incognito\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"row group-radio-fields\\\">\\n        <div class=\\\"property-radio-field membership-dropdown-wrap\\\">\\n            <div class=\\\"membership-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"membership_open\\\" data-value=\\\"open\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"membership_member_only\\\" data-value=\\\"member-only\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_member_only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"property-radio-field global-dropdown-wrap\\\">\\n            <div class=\\\"global-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"index_none\\\" data-value=\\\"none\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_local\\\" data-value=\\\"local\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_global\\\" data-value=\\\"global\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row description-field\\\">\\n        <div class=\\\"input-field input-message\\\">\\n            <label class=\\\"description-label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</label>\\n            <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                <div class=\\\"rich-textarea\\\" tabindex=\\\"2\\\" contenteditable=\\\"\\\"></div>\\n                <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"create\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"groupchat_invite_users\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"contacts-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main btn-add\\\"><span class=\\\"counter hidden\\\"></span>{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-dark btn-main btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"list-item mention-item\\\" data-jid=\\\"{{jid}}\\\" data-id=\\\"{{id}}\\\" data-nickname=\\\"{{nickname}}\\\">\\n    <div class=\\\"circle-avatar\\\"></div>\\n    <div class=\\\"participant-info\\\">\\n        <span class=\\\"one-line nickname\\\">{{nickname}}</span>\\n        <span class=\\\"one-line jid\\\">{{jid}}</span>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content full-pinned-message\\\"></div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div id=\\\"map\\\" class=\\\"text-color-700\\\" style=\\\"width:800px; height:490px;\\\" data-type='map'></div>\\n        <div class=\\\"form-group\\\">\\n                <textarea id=\\\"output\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lat\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lon\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n\";","export default \"{[ if (blob) {]}\\n<div class=\\\"attached-image-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-size one-line\\\">{{filesize}}</div>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (blob) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{blob}}\\\" src=\\\"{{blob}}\\\">\\n    {[}]}\\n</div>\\n{[} else {]}\\n<div class=\\\"attached-file-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-text\\\">\\n        <div class=\\\"attached-file-name one-line\\\">{{file.name}}</div>\\n        <div class=\\\"attached-file-size one-line\\\">{{filetype}}, {{filesize}}</div>\\n    </div>\\n    <i class=\\\"mdi attached-file-icon {{typeicon}}\\\"></i>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n</div>\\n{[}]}\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi mdi-play no-uploaded\\\"></i>\\n    <i class=\\\"mdi mdi-pause\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n        <a class=\\\"voice-message-play\\\">Play</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"><img></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<span class=\\\"accept-request\\\">Accept</span><span class=\\\"decline-request\\\">Decline</span><span class=\\\"block-request\\\">Block</span></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi {{mdi_icon}}\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (is_audio && duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"one-file-wrap link-file unuploaded-file\\\" data-upload-file-id=\\\"{{upload_id}}\\\">\\n    <div class=\\\"file-loading-container\\\"></div>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>, <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <div class=\\\"circle-percent-text\\\">0%</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-message main {{classlist}} file-upload noselect\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content chat-main-upload-media\\\">\\n        </div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 repeat-upload\\\">{[print(xabber.getString(\\\"resend\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 edit-upload\\\">{[print(xabber.getString(\\\"edit\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-delete-message\\\">{[print(xabber.getString(\\\"delete\\\"))]}</div>\\n        </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"fwd-message\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-from-id=\\\"{{from_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"fwd-msg-author-wrap\\\">\\n            <div class=\\\"fwd-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if ((role)&&(role != 'Member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n            <div class=\\\"msg-time selectable-text one-line\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<div><span class=\\\"accept-request-group\\\">Accept</span><span class=\\\"decline-request-group\\\">Decline</span><span class=\\\"block-request-group\\\">Block</span></div></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\"><img title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\"><img title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"images-details\\\">\\n    <div class=\\\"images-details-header\\\">\\n        {[print(xabber.getString(\\\"privacy_risk_images_header\\\"))]}\\n    </div>\\n    {[img_information.images.forEach((image) => {]}\\n        <div class=\\\"image-details\\\">\\n            {{image.name}} <span>{{image.pretty_size}}, {{image.height}}x{{image.width}}</span>\\n        </div>\\n    {[})]}\\n</div>\\n<div class=\\\"image-servers-details\\\">\\n    {[if (img_information.servers.length === 1) {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_server_header\\\", [img_information.servers[0]]))]}\\n        </div>\\n    {[} else {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_servers_header\\\"))]}\\n        </div>\\n        {[img_information.servers.forEach((server) => {]}\\n            <div class=\\\"server-details\\\">\\n                {{server}}\\n            </div>\\n        {[})]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"link-message-reference message-reference-preview-attached message-reference-preview-item {[ if (item.image && item.video_url) {]}link-message-reference-video{[}]}\\\" data-original-url=\\\"{{item.original_text}}\\\">\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (item.image && item.video_url) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-site-name one-line\\\">{{item.site}}</div>\\n    {[} else if (item.image) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 25) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 25) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 29) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 29) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[}]}\\n</div>\";","export default \"{[ if (is_video) {]}\\n        <div class=\\\"link-message-reference message-reference-preview-item message-reference-preview-item-big-image\\\">\\n            <div class=\\\"embed-video\\\">\\n                <div class=\\\"plyr-video-container\\\" data-provider=\\\"{{provider}}\\\" data-src=\\\"{{video_url}}\\\">\\n                    <div class=\\\"plyr-video-play\\\">\\n                        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                    </div>\\n                    <div class=\\\"plyr-video-playing\\\">\\n                        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n                        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n                    </div>\\n                    {[ if (image) {]}\\n                    <img class=\\\"plyr-video-poster\\\" src=\\\"{{image}}\\\" onerror=\\\"this.style.display='none'\\\">\\n                    {[}]}\\n                </div>\\n            </div>\\n            <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n                <div class=\\\"attached-text-block\\\">\\n                    <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                    <div class=\\\"link-site-title\\\">{{title}}</div>\\n                    <div class=\\\"link-description\\\">{{description}}</div>\\n                </div>\\n            </a>\\n        </div>\\n{[} else {]}\\n    <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n        <div class=\\\"link-message-reference message-reference-preview-item{[if (image_width && image_width >= 590 || image_height && image_height < 80 || (1.5 * image_height) < image_width) {]} message-reference-preview-item-big-image{[}]}\\\">\\n            {[ if (image) {]}\\n            <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{image}}\\\" data-width=\\\"{{image_width}}\\\" data-height=\\\"{{image_height}}\\\" src=\\\"{{image}}\\\">\\n            {[}]}\\n            <div class=\\\"attached-text-block\\\">\\n                <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                <div class=\\\"link-site-title\\\">{{title}}</div>\\n                <div class=\\\"link-description\\\">{{description}}</div>\\n            </div>\\n        </div>\\n    </a>\\n{[}]}\";","export default \"<div class=\\\"circle-wrap\\\">\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"preloader-circular\\\" viewBox=\\\"27 27 54 54\\\">\\n        <circle class=\\\"preloader-path-new\\\" cx=\\\"54\\\" cy=\\\"54\\\" r=\\\"24\\\" fill=\\\"none\\\" stroke-miterlimit=\\\"10\\\"></circle>\\n    </svg>\\n    <div class=\\\"inside-circle\\\">\\n        <i class=\\\"mdi mdi-center-loading-indicator mdi-close mdi-20px\\\"></i>\\n        <i class=\\\"mdi mdi-alert-circle mdi-32px hidden\\\"></i>\\n    </div>\\n    <div class=\\\"circle-percent-text\\\">0%</div>\\n</div>\";","export default \"<div id=\\\"{{id}}\\\" class=\\\"text-color-700\\\" style=\\\"width:350px; height:300px;pointer-events: none;\\\" data-type='map'><img id=\\\"img_{{ id }}\\\" ></div>\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n            <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n            <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n                <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-retry-send-message\\\">{[print(xabber.getString(\\\"chat_screen__message__button_retry_send\\\"))]}</div>\\n            </div>\\n        {[ } ]}\\n        {[ if (not_encrypted) { ]}\\n            <div class=\\\"not-decrypted-icon mdi-14px\\\" title=\\\"{[print(xabber.getString('omemo__not_decrypted_message_title'))]}\\\" data-activates=\\\"not-decrypted-tooltip-{{msgid}}\\\">\\n                <svg class=\\\"mdi mdi-14px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n            </div>\\n            <div id=\\\"not-decrypted-tooltip-{{msgid}}\\\" class=\\\"dropdown-content not-decrypted-tooltip noselect\\\">\\n                <span class=\\\"not-decrypted-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_decrypted_message_tooltip\\\"))]}</span>\\n            </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message saved-main main {{classlist}}\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-msgs-block\\\"></div>\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{msg_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system\\\"  data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\" data-upload-file-id=\\\"{{images[5].upload_id}}\\\"><img src=\\\"{{images[5].sources[0]}}\\\" title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\" data-upload-file-id=\\\"{{images[i].upload_id}}\\\"><img src=\\\"{{images[i].sources[0]}}\\\" title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"plyr-video-container\\\"  data-provider=\\\"html5\\\" data-msg-video-id=\\\"{{video_id}}\\\" data-src=\\\"{{video_src}}\\\">\\n    <div class=\\\"plyr-video-play\\\">\\n        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n    </div>\\n    <div class=\\\"plyr-video-playing\\\">\\n        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n    </div>\\n    {[ if (thumbnail) {]}\\n        <img class=\\\"plyr-video-poster\\\" src=\\\"{{thumbnail}}\\\" onerror=\\\"this.style.display='none'\\\">\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"chat-message\\\"> {[alert({file_url})]} </div>\";","export default \"<div class=\\\"circle-avatar ground-color-700\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <p class=\\\"contact-name one-line\\\">{[print(xabber.getString(\\\"saved_messages__header\\\"))]}</p>\\n        <p class=\\\"one-liner\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"/>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-chat-pin\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"/>\\n                </svg>\\n            </svg>\\n        </div>\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"image\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n        <div data-screen-name=\\\"video\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"image\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"video\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"chat_bottom__drag_and_drop__text_drop_files_here\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"send_media__btn_upload\\\"))]}</button>\\n                <input type=\\\"file\\\" multiple>\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"add\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"subscription-buttons\\\">\\n    <div class=\\\"subscription-info\\\"></div>\\n    <div class=\\\"button text-color-500 btn-add\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</div>\\n    <div class=\\\"button btn-block\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-allow\\\">{[print(xabber.getString(\\\"chat_allow\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-subscribe\\\">{[print(xabber.getString(\\\"chat_subscribe\\\"))]}</div>\\n    <i class=\\\"mdi-close btn-decline mdi mdi-24px\\\"/>\\n</div>\";","export default \"<div class=\\\"unread-marker\\\">\\n    <div class=\\\"unread-marker-content no-select\\\">\\n        {{text}}\\n    </div>\\n</div>\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info ground-color-100\\\">\\n        <div class=\\\"account-indicator ground-color-700\\\"></div>\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-900 one-line\\\"></p>\\n            <p class=\\\"jid one-line\\\"></p>\\n        </div>\\n        <div class=\\\"button-divider\\\"></div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer2 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info\\\">\\n        <div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n            <div class=\\\"circle-avatar border-color ground-color-700 noselect\\\"></div>\\n        </div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-700 one-line\\\"></p>\\n            <p class=\\\"status-message text-color-700 one-line\\\"></p>\\n            <div class=\\\"roster-info\\\">\\n                <i class=\\\"mdi mdi-account-multiple-outline\\\"></i>\\n                <span class=\\\"counter\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1\\\"></div>\\n    <div class=\\\"roster-account-shrank-footer2\\\"></div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_add_contact__header\\\"))]}</span>\\n        <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n            <div class=\\\"dropdown-button\\\">\\n                <div class=\\\"account-item-wrap\\\">\\n                    <div class=\\\"circle-avatar noselect\\\">\\n                        <img>\\n                    </div>\\n                </div>\\n            </div>\\n            <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"add-contact-jid-step\\\">\\n            <div class=\\\"row name-field\\\">\\n                <div class=\\\"input-field\\\">\\n                    <!--<label for=\\\"new_contact_username\\\">{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}</label>-->\\n                    <input id=\\\"new_contact_username\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}' name=\\\"username\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n        </div>\\n        <!--<div class=\\\"add-contact-contact-step\\\">-->\\n            <!--<div class=\\\"row name-field\\\">-->\\n                <!--<div class=\\\"input-field\\\">-->\\n                    <!--<label for=\\\"new_contact_name\\\">{[print(xabber.getString(\\\"contact_user\\\"))]}</label>-->\\n                    <!--<input id=\\\"new_contact_name\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"contact_user\\\"))]}' name=\\\"contact_name\\\" required>-->\\n                <!--</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"row groups-field\\\">-->\\n                <!--<div class=\\\"field-header\\\">{[print(xabber.getString(\\\"contact_circle\\\"))]}</div>-->\\n                <!--<div class=\\\"groups checkbox-list\\\">-->\\n                <!--</div>-->\\n            <!--</div>-->\\n        <!--</div>-->\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-add\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_add\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <div class=\\\"audio-control-time\\\">\\n        <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n        <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    </div>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div data-jid=\\\"{{jid}}\\\" class=\\\"blocked-contact\\\">\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blocked-jid-switch-{{jid}}\\\"/>\\n        <label for=\\\"blocked-jid-switch-{{jid}}\\\">{{jid}}</label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"status hide-offline\\\"></div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"btn-more  dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-auth-request\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_request_authorization\\\"))]}</span></li>\\n            <li class=\\\"btn-add\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</span></li>\\n            <li class=\\\"btn-delete\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"remove_contact\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-phone btn-voice-call\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-block-helper btn-block\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"left-column\\\">\\n            <div class=\\\"block-wrap subscription-block-wrap\\\">\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_subscription_settings\\\"))]}</span>\\n                </div>\\n                <div class=\\\"subscription-info-wrap\\\">\\n                    <div class=\\\"incoming-subscription-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field incoming-subscription-wrap\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"incoming-subscription\\\"/>\\n                            <label for=\\\"incoming-subscription\\\"></label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"outcoming-subscription-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field incoming-subscription-wrap\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"outcoming-subscription\\\"/>\\n                            <label for=\\\"outcoming-subscription\\\"></label>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"block-wrap vcard\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"right-column\\\">\\n            <div class=\\\"block-wrap resources-block-wrap hidden\\\">\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_info_connected_clients_header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap contact-details-name-wrap one-line\\\"></div>\\n        </div>\\n        <div class=\\\"header-buttons\\\">\\n            <div class=\\\"btn-escape\\\">\\n                <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n                <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n            </div>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>\\n            <span class=\\\"block-name second-text\\\"></span>\\n            <div class=\\\"btn-qr-code\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n            </div>\\n            <div class=\\\"btn-edit\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-unmute-dropdown\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap fixed-scroll hidden\\\">\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more-fixed\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more-fixed\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-unmute-dropdown\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"block-wrap vcard\\\">\\n        </div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n                <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n                <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n                <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <div class=\\\"name-wrap\\\">\\n        <p class=\\\"name one-line\\\"></p>\\n    </div>\\n    <p class=\\\"jid one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"contact_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <p class=\\\"name one-line\\\"></p>\\n    <p class=\\\"jid one-line hidden\\\"></p>\\n    <p class=\\\"status-message one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</span>\\n    </div>\\n    <div class=\\\"edit-contact\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"name-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"subscription-statuses\\\">\\n        <div class=\\\"status-out subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-out\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-to\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-out\\\" class=\\\"status-out-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-out property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscribe\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-in subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-in\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-from\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-in\\\" class=\\\"status-in-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-allow property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-allow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"decline\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-preapproved property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_disallow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-in property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscription\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-description subscription-status-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-delete\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text \\\">\\n                <span class=\\\"text-color-500 dotted-underline text-decoration-color-300 one-line\\\">{[print(xabber.getString(\\\"contact_delete_full\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n        <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-header main-edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-group vcard\\\">\\n        <div class=\\\"info-wrap description-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info description\\\">\\n                    <div class=\\\"edit-group-name value\\\"></div>\\n                    <div class=\\\"edit-group-description value\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"description-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header description-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_properties\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar\\\">\\n                    <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"set-groupchat-avatar-text\\\">{[print(xabber.getString(\\\"groupchat_set_avatar\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-group\\\">\\n            <div class=\\\"edit-group-name-wrap\\\"></div>\\n            <div class=\\\"edit-group-description-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-properties\\\">\\n        <div class=\\\"group-property membership-property\\\">\\n            <div class=\\\"details-icon-wrap\\\" ><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"membership-outline\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_membership\\\"))]}\\n                <span></span>\\n            </div>\\n        </div>\\n        <div class=\\\"group-property index-property\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_index\\\"))]}\\n                <span></span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-default-restrictions\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n                <span class=\\\"edit-button-value\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"membership-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap membership-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"open\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"member-only\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"member-only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_membership_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"index-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap index-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"none\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"local\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"global\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_index_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"bottom-block edit-bottom-block\\\">\\n        <div class=\\\"edit-pictured-buttons\\\">\\n            <div data-value=\\\"invitations\\\" class=\\\"list-variant invitations-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite-outline\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}<span class=\\\"counted\\\"></span></div>\\n            </div>\\n            <div data-value=\\\"blocked\\\" class=\\\"list-variant blocked-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}<span class=\\\"counted\\\"></span></div>\\n            </div>\\n        </div>\\n        <i class=\\\"details-icon participants-edit-back btn-back-panel mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name-panel\\\"></span>\\n        <span class=\\\"block-name-panel second-text fade-out\\\">{[print(xabber.getString(\\\"groupchat_selected\\\"))]} <span></span></span>\\n        <div class=\\\"btn-add-block\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n        </div>\\n        <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n        <button class=\\\"btn-remove-selected btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}</button>\\n        <div class=\\\"block-wrap participants-edit-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-clear-history-chat\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-delete-group\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"text-color-500 one-line text-decoration-color-300 dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-form\\\">\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"blocking_id\\\" class=\\\"rich-textarea field-input\\\" placeholder=\\\"{[print(xabber.getString('vcard_jabber_id'))]}\\\" type=\\\"text\\\" name=\\\"title\\\">\\n    </div>\\n    <button class=\\\"btn-block-id btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"textarea-header\\\">{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}</div>\\n    <div class=\\\"rich-textarea badge-text\\\" tabindex=\\\"1\\\" contenteditable></div>\\n    <div class=\\\"error\\\"></div>\\n</div>\\n<div class=\\\"panel-footer noselect\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n        <button class=\\\"btn-save btn-flat btn-main\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</div></div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n    <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions__placeholder\\\"))]}</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-default-restrictions-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-default-restrictions-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"restrictions-wrap\\\">\\n    <div class=\\\"restrictions-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n        <span class=\\\"block-name second-text fade-out\\\"></span>\\n        <button class=\\\"btn-default-restrictions-save text-color-500 btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"restrictions-content edit-default-restrictions\\\">\\n        <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n        <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions_right__placeholder\\\"))]}</p>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <textarea class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\"></textarea>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"media-item\\\">\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                </svg>\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-edit-settings\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_settings\\\"))]}</span></li>\\n            <li class=\\\"btn-default-restrictions\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span></li>\\n            <li class=\\\"btn-delete-group\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"btn-leave\\\"><svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n                </div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"head-block\\\">\\n            <div class=\\\"left-column\\\">\\n                <div class=\\\"block-wrap group-chat-properties-wrap\\\"></div>\\n            </div>\\n            <div class=\\\"right-column\\\">\\n                <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n                <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"invitations\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}</a></li>\\n                <li data-value=\\\"blocked\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n        </div>\\n        <div class=\\\"header-buttons\\\">\\n            <div class=\\\"btn-escape\\\">\\n                <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n                <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n            </div>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_group\\\"))]}</span>\\n            <span class=\\\"block-name second-text\\\"></span>\\n            <div class=\\\"btn-qr-code\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n            </div>\\n            <div class=\\\"btn-edit\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"group-edit-preloader\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                    <svg viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                    </svg>\\n                </div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap fixed-scroll hidden\\\">\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more-fixed\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more-fixed\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                    <svg viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                    </svg>\\n                </div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"block-wrap group-chat-properties-wrap vcard\\\"></div>\\n        <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap restrictions-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap participant-view-wrap\\\"></div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs not-edit\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n                <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n                <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n                <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon-wrap\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        </div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap searchable-info-wrap\\\">\\n        <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n        </svg>\\n        <div class=\\\"info searchable\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[if (privacy) { print(xabber.getString(\\\"incognito_group_settings__header\\\"))} else { print(xabber.getString(\\\"public_group_settings__header\\\"))}]}</div></div>\\n<div class=\\\"modal-content group-chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"property-wrap jid-info-wrap\\\">\\n        <div class=\\\"property-header\\\">{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}</div>\\n        <div class=\\\"jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n        </div>\\n        <p id=\\\"anonymous-public\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_public\\\"))]}</p>\\n        <p id=\\\"anonymous-incognito\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_incognito\\\"))]}</p>\\n    </div>\\n    {[fields.forEach(function (field) { if (field.type === 'hidden' || field.type === 'jid-multi') return;]}\\n    <div class=\\\"property-wrap {{field.var}}-field\\\">\\n        {[if (!(field.type == 'fixed' && field.values[0] === \\\"\\\")) {]}\\n        <div class=\\\"property-header\\\">{{field.label}}</div>\\n        {[}]}\\n        {[if (field.type === 'text-single') {]}\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <input value=\\\"{{field.values[0]}}\\\" id=\\\"new_{{field.var}}_value\\\" type=\\\"text\\\" name=\\\"{{field.var}}\\\" placeholder='{[print(xabber.getString(\\\"group_settings_edit__setting_name__hint\\\"))]}' class=\\\"text-field\\\">\\n        </div>\\n        {[} else if (field.type === 'text-multi') {]}\\n        <textarea placeholder='{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}' id=\\\"{{field.var}}\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea rich-textarea\\\">{{field.values[0]}}</textarea>\\n        {[} else if (field.type === 'list-single') { field.options.forEach(function (option) {]}\\n        <div class=\\\"property-radio\\\">\\n            <input {[if (option.value === field.values[0]){]}checked{[}]} id=\\\"{{option.value}}\\\" name=\\\"{{field.var}}\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n            <label class=\\\"{{option.value}}-label\\\" for=\\\"{{option.value}}\\\">{{option.label}}</label>\\n        </div>\\n        {[});} else  if (field.type === 'fixed' && field.values[0] !== \\\"\\\") {]}\\n        <div class=\\\"fixed-field{[if (field.var === 'description'){]} description{[}]}\\\">\\n            <div class=\\\"value\\\">{{field.values[0]}}</div>\\n        </div>\\n        {[}]}\\n        {[if (field.var === 'index'){]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_index__text\\\"))]}</p>\\n        {[} else if (field.var === 'membership') {]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_membership__text\\\"))]}</p>\\n        {[}]}\\n    </div>\\n    {[})]}\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (!all_fixed){]}\\n        <button class=\\\"btn-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        {[}]}\\n        <button class=\\\"btn-cancel btn-flat btn-dark btn-main\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info description short\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"/>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap name-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\">\\n                    <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap searchable-info-wrap\\\">\\n                <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n                </svg>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info searchable\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap model-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info model\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\"><div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>{[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}</div>\\n            {[if (jid) {]}<p class=\\\"jid one-line\\\">{{jid}}</p>{[}]}\\n            </div>\\n        </div>\\n    </td>\\n    <td class=\\\"last-seen\\\">{[if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}</td>\\n    <td class=\\\"role\\\">{[if (role !== 'member') {]}{{role}}{[}]}</td>\\n    <td>\\n        {[if (is_me) {]}\\n        <span style=\\\"font-size:12px\\\" class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</span>\\n        {[} else {]}\\n        <div class=\\\"buttons-wrap\\\">\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n            </div>\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick_and_block\\\"))]}' class=\\\"btn-block\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path fill=\\\"#9e9e9e\\\" d=\\\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12C4,13.85 4.63,15.55 5.68,16.91L16.91,5.68C15.55,4.63 13.85,4 12,4M12,20A8,8 0 0,0 20,12C20,10.15 19.37,8.45 18.32,7.09L7.09,18.32C8.45,19.37 10.15,20 12,20Z\\\" />\\n                </svg>\\n            </div>\\n        </div>\\n        {[}]}\\n    </td>\\n</tr>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\">\\n                <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n                {[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}\\n            </div>\\n                <div class=\\\"bottom-line\\\">\\n                    {[ if (is_me) {]}\\n                    <div class=\\\"online-status text-color-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                    {[}else if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}\\n                </div>\\n            </div>\\n            {[if (role === 'owner' || role === 'admin') {]}\\n            <div class=\\\"participant-buttons-wrap\\\">\\n                <div class=\\\"participant-role\\\">\\n                    {[if (role === 'owner') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star\\\"></i>\\n                    {[}else if (role === 'admin') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star-outline\\\"></i>\\n                    {[}]}\\n                </div>\\n            </div>\\n            {[} else if (!is_me) {]}\\n                <div class=\\\"buttons-wrap\\\">\\n                    <div title='{[print(xabber.getString(\\\"groupchat_edit_member\\\"))]}' class=\\\"btn-edit-member\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n                    </div>\\n                    <!--<div title='{[print(xabber.getString(\\\"mute_chat\\\"))]}' class=\\\"btn-mute\\\">-->\\n                        <!--<i class=\\\"mdi mdi-24px mdi-microphone-off\\\"></i>-->\\n                    <!--</div>-->\\n                    <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n                    </div>\\n                </div>\\n            {[}]}\\n        </div>\\n    </td>\\n</tr>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"insert-emoticon\\\">\\n                <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n            </div>\\n            <div class=\\\"emoticons-panel-wrap\\\">\\n                <div class=\\\"emoticons-panel\\\"></div>\\n                <div class=\\\"emoji-menu\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-status\\\">\\n    <div class=\\\"status-wrap\\\">\\n        <div class=\\\"status status-bulb\\\"></div>\\n        <div class=\\\"status-message\\\"></div>\\n    </div>\\n    <div class=\\\"btn-edit-status\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"group-chat-status-wrap\\\" title=\\\"{[print(xabber.getString('group_settings__properties__tooltip_click_to_set_status'))]}\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status-outline\\\"></svg></div>\\n    <div class=\\\"group-chat-status-border\\\">\\n        <div class=\\\"group-chat-status\\\">\\n            <div class=\\\"status-wrap\\\">\\n                <div class=\\\"status-message dotted-underline\\\"></div>\\n                <div class=\\\"status status-bulb\\\"></div>\\n            </div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap one-line\\\"></div>\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"msg-wrap\\\"><p class=\\\"msg-text\\\"></p></div>\\n        <div class=\\\"panel-footer noselect\\\">\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-join btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n                <button class=\\\"btn-decline btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_decline\\\"))]}</button>\\n                <button class=\\\"btn-block btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"list-item {{status}}-user\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"member-item\\\">\\n        <div class=\\\"circle-avatar\\\"/>\\n        <p title=\\\"{{jid}}\\\" class=\\\"one-line\\\">{{jid}}</p>\\n        {[if (status == 'invitations') {]}\\n        <div title='{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}' class=\\\"revoke-invitation\\\">\\n            {[}else{]}\\n            <div title='{[print(xabber.getString(\\\"groupchat_unblock\\\"))]}' class=\\\"unblock-user\\\">\\n                {[}]}\\n                <i class=\\\"mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"rich-textarea field-input badge-text\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}' contenteditable></div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    {[if (subscription !== null) {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{id}}-buttons-wrap\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n        <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n    </ul>\\n    {[}]}\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n            </svg>\\n            <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>{[}]}\\n            <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n            <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            {[if (jid) {]}<p title=\\\"{{jid}}\\\" class=\\\"jid selectable-text one-line\\\">{{jid}}</p>{[}]}\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n            {[ if (is_blocked_contact) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"action_contact_blocked\\\"))]}</div>\\n            {[}]}\\n            {[if (subscription === null) {]}<p class=\\\"role selectable-text one-line\\\">{[if (blocked) { print(xabber.getString(\\\"groupchat_blocked\\\")); }else{print(xabber.getString(\\\"settings_group_member__placeholder_not_a_member\\\"));}]}</p>{[}]}\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-incognito btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-set-badge-wrap\\\">\\n            <svg class=\\\"btn-set-badge\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M17,3H14V6H10V3H7A2,2 0 0,0 5,5V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V5A2,2 0 0,0 17,3M12,8A2,2 0 0,1 14,10A2,2 0 0,1 12,12A2,2 0 0,1 10,10A2,2 0 0,1 12,8M16,16H8V15C8,13.67 10.67,13 12,13C13.33,13 16,13.67 16,15V16M13,5H11V1H13V5M16,19H8V18H16V19M12,21H8V20H12V21Z\\\" />\\n            </svg>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_badge\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-remove btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n            <div class=\\\"participant-edit-badge hidden\\\"></div>\\n            <div class=\\\"participant-info-text\\\">\\n                <div class=\\\"nickname\\\">\\n                    {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n                </div>\\n                {[ if (is_myself) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                {[}]}\\n                {[ if (subscription === null && blocked) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_blocked\\\"))]}</div>\\n                {[} else if (subscription === null) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_kicked\\\"))]}</div>\\n                {[}]}\\n\\n            </div>\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-incognito btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-message-text btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap non-active btn-set-visibility-wrap\\\">\\n            <i title=\\\"Feature not yet implemented\\\" class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-eye btn-set-visibility\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_visibility_visible\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi contact-btn mdi-24px mdi-account-remove text-color-500 btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"vcard-wrap vcard\\\">\\n        {[if (jid) {]}\\n        <div class=\\\"info-wrap jid-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">{{jid}}</div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        {[if (role === 'owner' || role === 'admin') {]}\\n        <div class=\\\"info-wrap role-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                {[if (role === 'owner') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star\\\"></i>\\n                {[}else if (role === 'admin') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star-outline\\\"></i>\\n                {[}]}\\n            </div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (role === 'owner') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_owner\\\"))]}\\n                            {[}else if (role === 'admin') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_admin\\\"))]}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_role\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"info-wrap present-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" {[if (!present) {]}data-svgname=\\\"status-outline\\\"{[} else {]}data-svgname=\\\"clock-outline\\\"{[}]}></svg></div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (!present) {]}\\n                                {[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}\\n                            {[} else {]}\\n                            {{pretty_present}}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[if (!present) {]}{[print(xabber.getString(\\\"groupchat_status\\\"))]}{[} else {]}{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}{[}]}</div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-wrap\\\">\\n    <div class=\\\"participant-details-info-wrap\\\">\\n    </div>\\n    <div class=\\\"bottom-block participant-bottom-block\\\">\\n        <ul class=\\\"tabs participant-tabs\\\">\\n            <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n            <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n            <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n            <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n        </ul>\\n        <div class=\\\"block-wrap participants-details-media-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"participant-details-edit-wrap edit-wrap\\\">\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar\\\">\\n                    <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"set-groupchat-avatar-text\\\">{[print(xabber.getString(\\\"groupchat_set_avatar\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"participant-details-edit-inputs\\\">\\n            <div class=\\\"edit-participant-name-wrap\\\">\\n            </div>\\n            <div class=\\\"edit-participant-badge-wrap\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"rights-wrap\\\">\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"header\\\">\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"rights-wrap\\\">\\n    </div>\\n</div>\\n\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n        <th>{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}</th>\\n        <th>{[print(xabber.getString(\\\"groupchat_role\\\"))]}</th>\\n        <th></th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<svg class=\\\"pin\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#757575\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\" />\\n</svg>\\n<div class=\\\"msg-wrap\\\">\\n    <div class=\\\"chat-msg-author-wrap\\\">\\n        <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{author}}</div>{[if (fwd_author){]}<svg class=\\\"fwd-chevron\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"#9E9E9E\\\" d=\\\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\\\"/></svg><div class=\\\"chat-msg-author text-color-700 one-line\\\">{{fwd_author}}</div>{[}]}\\n        <div class=\\\"msg-time\\\">{{time}}</div>\\n    </div>\\n    <div class=\\\"chat-msg-content chat-text-content one-line\\\">\\n        {{message}}\\n    </div>\\n</div>\\n<svg title='{[print(xabber.getString(\\\"group_chat__pinned_message__tooltip_unpin\\\"))]}' class=\\\"close\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path class=\\\"close\\\" fill=\\\"#9E9E9E\\\" d=\\\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\\\" />\\n</svg>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        {[ if (is_myself) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n        {[}]}\\n        {[ if (is_myself) {]}\\n        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n        </svg>\\n        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        </div>\\n        {[}]}\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[ if (is_myself) {]}\\n        <div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>\\n        {[}]}\\n        <div title=\\\"{{nickname}}\\\" class=\\\"{{is_myself && 'is-myself'}} nickname one-line\\\">{{nickname}}</div>\\n        <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n        {[ if (is_myself) {]}\\n        <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        <div class=\\\"preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n        <div class=\\\"participant-edit-badge hidden\\\"></div>\\n        <div class=\\\"participant-info-text\\\">\\n            <div class=\\\"nickname\\\">\\n                {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            </div>\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"right-item restriction restriction-{{name}}\\\">\\n    <div class=\\\"right-name\\\">{{pretty_name}}</div>\\n    <div class=\\\"field clickable-field restriction-{{name}}-state switch normal\\\">\\n        <input type=\\\"checkbox\\\" {[if (type === 'fixed') {]} onclick=\\\"return false;\\\" {[}]} class=\\\"filled-in\\\" id=\\\"{{name}}\\\">\\n        <label for=\\\"{{name}}\\\"></label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"select-timer\\\">\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-timer-{{right_name}}\\\">\\n        <div class=\\\"timer-item-wrap\\\"><div data-value=\\\"0\\\" class=\\\"default-value property-value\\\">{[print(xabber.getString(\\\"dialog_rights__button_set_timer\\\"))]}</div></div>\\n    </div>\\n    <div id=\\\"select-timer-{{right_name}}\\\" class=\\\"dropdown-content noselect\\\">\\n        {[expire_options.forEach(function (option) {]}\\n        <div data-value=\\\"{{option.value}}\\\" class=\\\"property-variant\\\">{{option.label}}</div>\\n        {[}.bind(this));]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_set_status__header\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <div class=\\\"loading-status\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </ul>\\n</div>\\n\";","export default \"<li data-value=\\\"{{status.value}}\\\">\\n    <span class=\\\"status-value one-line\\\">{{status.label}}</span>\\n    <span class=\\\"status-bulb\\\" data-status=\\\"{{status.show}}\\\"></span>\\n</li>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_circle_settings__header\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"modal-content\\\">\\n            <div class=\\\"field-wrap group-name\\\">\\n                <div class=\\\"input-field\\\">\\n                    <label for=\\\"{{view.cid}}-group-name\\\">{[print(xabber.getString(\\\"circle_name\\\"))]}</label>\\n                    <input id=\\\"{{view.cid}}-group-name\\\" type=\\\"text\\\" name=\\\"group_name\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"category_offline_contacts\\\"))]}</div>\\n            <div class=\\\"setting-wrap\\\">\\n                <div class=\\\"setting offline radio-button field-wrap\\\">\\n                    <div class=\\\"field radio-field clickable-field\\\">\\n                        <form action=\\\"#\\\">\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                                <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"show_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                                <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"hide_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show-offline-default\\\" />\\n                                <label for=\\\"{{view.cid}}-show-offline-default\\\">{[print(xabber.getString(\\\"dialog_circle_settings__label_common_settings\\\"))]}</label>\\n                            </p>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-dark btn-delete left\\\">{[print(xabber.getString(\\\"circle_remove\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-apply\\\">{[print(xabber.getString(\\\"dialog_circle_settings__button_apply\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"groups-list-wrap\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles\\\"></svg></div>\\n    <div class=\\\"groups\\\">\\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"groups-wrap\\\">\\n    <div class=\\\"checkbox-list\\\">\\n    </div>\\n</div>\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (!checked) {]}\\n        <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n            <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n        </div>\\n    {[}]}\\n{[ } ]}\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n        <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n    </div>\\n{[ } ]}\\n    <div class=\\\"new-group-field-wrap\\\">\\n        <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n            <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n            <label for=\\\"new_group_checkbox\\\"></label>\\n        </div>\\n        <div class=\\\"input-field new-group-name\\\">\\n            <input class=\\\"rich-textarea xabber-input\\\" id=\\\"new-group-name\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n        </div>\\n    </div>\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (checked) {]}\\n        <div data-groupname=\\\"{{name}}\\\" title=\\\"{[print(xabber.getString('contact_tooltip_remove_by_click'))]}\\\" class=\\\"group ground-color-50\\\">\\n            <div>{{name}}</div>\\n        </div>\\n    {[}]}\\n\\n{[ } ]}\\n\";","export default \"<div class=\\\"new-group-field-wrap\\\">\\n    <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n        <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n        <label for=\\\"new_group_checkbox\\\"></label>\\n    </div>\\n    <div class=\\\"input-field new-group-name\\\">\\n        <input class=\\\"xabber-input\\\" id=\\\"new-group-name\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n    </div>\\n</div>\";","export default \"<div class=\\\"gallery-file\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-uniqueid=\\\"{{file.uniqueid}}\\\"  data-file=\\\"{{file.sources[0]}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files && !is_encrypted))){]}\\n    <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\"\\n         data-mfp-src=\\\"{{file.sources[0]}}\\\"\\n         src=\\\"{[if (file.thumbnail){]}{{file.thumbnail}}{[} else {]}{{file.sources[0]}}{[}]}\\\"\\n         onError=\\\"this.parentElement.className = this.parentElement.className + ' hidden';\\\"\\n    >\\n    {[} else {]}\\n    {[if (svg_icon == 'file-audio' && file.true_voice){]}\\n    <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n        <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-file-audio-container\\\">\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"gallery-file-placeholder-background\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n    </div>\\n    {[}]}\\n    <div class=\\\"gallery-file-title one-line\\\">\\n        {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span>\\n    </div>\\n    {[if (duration && file.true_voice){]}\\n    <div class=\\\"gallery-voice-file-duration\\\">\\n        0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n    </div>\\n    {[}]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"gallery-empty\\\">\\n    <div class=\\\"gallery-empty-icon-wrap\\\">\\n        <i class=\\\"gallery-empty-icon mdi mdi-24px mdi-package-variant\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-empty-text\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"contacts-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n\\n    <div class=\\\"contact-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"contact-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"collapsed-wrap\\\">\\n        <i class=\\\"collapsed-contacts-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n        <div class=\\\"all-contacts-counter\\\"></div>\\n    </div>\\n    <div class=\\\"expanded-wrap\\\">\\n        <div class=\\\"roster-head panel-head\\\">\\n            <div class=\\\"contacts-header\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n            <div class=\\\"roster-button btn-pin\\\"></div>\\n        </div>\\n\\n        <div class=\\\"contact-list-wrap\\\">\\n            <div class=\\\"contact-list\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_offline_contacts\\\"))]}</div>\\n    <div class=\\\"setting offline-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                    <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_show\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                    <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_hide\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_sorting\\\"))]}</div>\\n    <div class=\\\"setting sorting-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"online-first\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-online-first\\\" />\\n                    <label for=\\\"{{view.cid}}-online-first\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_online_first\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"by-alphabet\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-by-alphabet\\\" />\\n                    <label for=\\\"{{view.cid}}-by-alphabet\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_alphabet\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"group-chat-title-wrap hidden\\\">\\n    <div class=\\\"account-indicator ground-color-700\\\"></div>\\n    <div class=\\\"contact-icon\\\">\\n    </div>\\n    <div class=\\\"group-chat-name one-line\\\"></div>\\n</div>\\n<div class=\\\"mention-info-wrap\\\">\\n<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"mention-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n    <span class=\\\"msg-counter hidden\\\"></span>\\n</div>\\n</div>\";","export default \"<div class=\\\"mentions-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"mentions-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"mentions-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"mentions_list__placeholder\\\"))]}</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"searching__chat_properties__header\\\"))]}</span>\\n</div>\\n<div class=\\\"chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\">{{name}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value one-line\\\">{{description}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap anonymous-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-comment-question-outline\\\"></i>\\n        <div class=\\\"info anonymous\\\">\\n            <div class=\\\"value one-line\\\">{{privacy}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-lock-open-outline\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\">{{membership}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n<button class=\\\"btn-join-chat btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-indicator ground-color-{{color}}-500\\\"></div>\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-item-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"name one-line\\\">{{jid}}</div>\\n</div>\";","export default \"<div class=\\\"searching-panel\\\">\\n    <div class=\\\"search-wide search-form\\\">\\n        <div class=\\\"account-indicator ground-color-500\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"searching__placeholder_search_by_domain\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"searching-properties-field\\\">\\n        <div class=\\\"dropdown-button\\\" data-visible=\\\"false\\\">\\n            <i class=\\\"mdi mdi-24px mdi-chevron-down arrow\\\"></i>\\n        </div>\\n    </div>\\n    <ul id=\\\"select-searching-properties\\\" class=\\\"selectable-text\\\">\\n        <div class=\\\"account-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_account\\\"))]}</p>\\n            <div class=\\\"account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-searching\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-searching\\\" class=\\\"dropdown-content\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"title-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_title\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_title\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"sorting-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_sort_by\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <button class=\\\"btn-search btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"search\\\"))]}</button>\\n    </ul>\\n</div>\\n<div class=\\\"searching-result-wrap\\\">\\n    <div class=\\\"chats-list-wrap\\\">\\n        <div class=\\\"result-string\\\"></div>\\n        <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div></div>\\n        <div class=\\\"chats-list\\\"></div></div>\\n    <div class=\\\"searching-more\\\"></div>\\n</div>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,19 L5,19 L5,5 L19,5 M19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 M16.5,16.25 C16.5,14.75 13.5,14 12,14 C10.5,14 7.5,14.75 7.5,16.25 L7.5,17 L16.5,17 M12,12.25 C13.2426407,12.25 14.25,11.2426407 14.25,10 C14.25,8.75735931 13.2426407,7.75 12,7.75 C10.7573593,7.75 9.75,8.75735931 9.75,10 C9.75,11.2426407 10.7573593,12.25 12,12.25 Z\\\" id=\\\"mdi:account-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6,17 C6,15 10,13.9 12,13.9 C14,13.9 18,15 18,17 L18,18 L6,18 M15,9 C15,10.6568542 13.6568542,12 12,12 C10.3431458,12 9,10.6568542 9,9 C9,7.34314575 10.3431458,6 12,6 C13.6568542,6 15,7.34314575 15,9 M3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.8954305 20.1045695,3 19,3 L5,3 C3.89,3 3,3.9 3,5 Z\\\" id=\\\"mdi:account-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/address-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/address\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/alarm-bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M15,18.66 L15,22 L5,22 L5,18.66 C8.09301265,20.4500491 11.9069873,20.4500491 15,18.66 M22,4 C22,2.8954305 21.1045695,2 20,2 C19.69,2 19.39,2.07 19.12,2.21 C18.82,2.36 18.56,2.58 18.36,2.85 C17.9280885,3.46077217 17.873744,4.26171236 18.219194,4.92522914 C18.564644,5.58874591 19.2519508,6.00355658 20,6 L20.24,6 C21.97,10.43 20.66,15.46 17,18.5 C16.68,18.75 16.35,19 16,19.22 L16,21 L17,21 L17,19.74 C20.14,17.5 22,13.86 22,10 C22,8.5 21.72,7 21.17,5.62 C21.69,5.24 22,4.64 22,4 M18,10 C18,12.1217319 17.1571453,14.1565632 15.6568542,15.6568542 C14.1565632,17.1571453 12.1217319,18 10,18 C5.581722,18 2,14.418278 2,10 C2,5.581722 5.581722,2 10,2 C12.1217319,2 14.1565632,2.84285472 15.6568542,4.34314575 C17.1571453,5.84343678 18,7.87826808 18,10 L18,10 Z\\\" id=\\\"mdi:alarm-bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/alert-circle\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,13 L11,13 L11,7 L13,7 M13,17 L11,17 L11,15 L13,15 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C14.6521649,22 17.195704,20.9464316 19.0710678,19.0710678 C20.9464316,17.195704 22,14.6521649 22,12 C22,9.3478351 20.9464316,6.80429597 19.0710678,4.92893219 C17.195704,3.0535684 14.6521649,2 12,2 Z\\\" id=\\\"mdi:alert-circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.84,22.73 L18.11,20 L3,20 L3,19 L5,17 L5,11 C5.00430327,9.85524651 5.28929416,8.72901748 5.83,7.72 L1.11,3 L2.39,1.73 L22.11,21.46 L20.84,22.73 Z M19.0000002,15.8 L19.0000002,11 C19.0007944,7.90366232 16.9672665,5.17466784 14,4.29 C14.0049007,4.19339544 14.0049007,4.09660456 14,4 C14,2.8954305 13.1045695,2 12,2 C10.8954305,2 10,2.8954305 10,4 C9.99507868,4.09660403 9.99507868,4.19339597 10,4.29 C9.385,4.474 8.8,4.743 8.26,5.09 L19.0000002,15.8 Z M12,23 C13.1045695,23 14,22.1045695 14,21 L10,21 C10,22.1045695 10.8954305,23 12,23 Z\\\" id=\\\"mdi:bell-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell-sleep\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,21 L14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 Z M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M15,9 L9,9 L9,11 L12.24,11 L9,13.7 L9,16 L15,16 L15,14 L11.76,14 L15,11.3 L15,9 Z\\\" id=\\\"mdi:bell-sleep\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 L14,21 Z\\\" id=\\\"mdi:bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/birthday-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6 C13.1045695,6 14,5.1045695 14,4 C14,3.62 13.9,3.27 13.71,2.97 L12,0 L10.29,2.97 C10.1,3.27 10,3.62 10,4 C10,5.1 10.9,6 12,6 M18,9 L13,9 L13,7 L11,7 L11,9 L6,9 C4.34,9 3,10.34 3,12 L3,21 C3,21.55 3.45,22 4,22 L20,22 C20.55,22 21,21.55 21,21 L21,12 C21,10.34 19.66,9 18,9 M19,20 L5,20 L5,17 C5.9,17 6.76,16.63 7.4,16 L8.5,14.92 L9.56,16 C10.87,17.3 13.15,17.29 14.45,16 L15.53,14.92 L16.6,16 C17.24,16.63 18.1,17 19,17 L19,20 M19,15.5 C18.5,15.5 18,15.3 17.65,14.93 L15.5,12.8 L13.38,14.93 C12.64,15.67 11.35,15.67 10.61,14.93 L8.5,12.8 L6.34,14.93 C6,15.29 5.5,15.5 5,15.5 L5,12 C5,11.45 5.45,11 6,11 L18,11 C18.55,11 19,11.45 19,12 L19,15.5 Z\\\" id=\\\"mdi:cake-variant-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/birthday\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,7 C13.11,7 14,6.1 14,5 C14,4.62 13.9,4.27 13.71,3.97 L12,1 L10.29,3.97 C10.1,4.27 10,4.62 10,5 C10,6.1045695 10.8954305,7 12,7 M16.6,17 L15.53,15.92 L14.45,17 C13.15,18.29 10.87,18.3 9.56,17 L8.5,15.92 L7.4,17 C6.75,17.64 5.88,18 4.96,18 C4.23,18 3.56,17.77 3,17.39 L3,22 C3,22.5522847 3.44771525,23 4,23 L20,23 C20.5522847,23 21,22.5522847 21,22 L21,17.39 C20.44,17.77 19.77,18 19.04,18 C18.12,18 17.25,17.64 16.6,17 M18,10 L13,10 L13,8 L11,8 L11,10 L6,10 C4.34314575,10 3,11.3431458 3,13 L3,14.54 C3,15.62 3.88,16.5 4.96,16.5 C5.5,16.5 6,16.3 6.34,15.93 L8.5,13.8 L10.61,15.93 C11.35,16.67 12.64,16.67 13.38,15.93 L15.5,13.8 L17.65,15.93 C18,16.3 18.5,16.5 19.03,16.5 C20.11,16.5 21,15.62 21,14.54 L21,13 C21,11.3431458 19.6568542,10 18,10 Z\\\" id=\\\"mdi:cake-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/blocked-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15 L20,18 L23,18 L23,20 L20,20 L20,23 L18,23 L18,20 L15,20 L15,18 L18,18 L18,15 L20,15 Z M12,2 C17.5,2 22,6.5 22,12 C22,12.5859564 21.9489239,13.1605626 21.851004,13.7195862 C21.2621133,13.4007388 20.6141835,13.1778427 19.9277796,13.0712956 C19.9754227,12.7216453 20,12.3635535 20,12 C20,10.1 19.4,8.4 18.3,7.1 L7.1,18.3 C8.5,19.3 10.2,20 12,20 C12.3635535,20 12.7216453,19.9754227 13.0726961,19.9278476 C13.1778427,20.6141835 13.4007388,21.2621133 13.719191,21.8507762 C13.1605626,21.9489239 12.5859564,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 Z M12,4 C7.6,4 4,7.6 4,12 C4,13.7882353 4.53148789,15.399308 5.51109302,16.6664767 L5.7,16.9 L16.9,5.7 C15.6,4.6 13.9,4 12,4 Z\\\" id=\\\"xabber:block-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/blocked\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M12.3574649,4.64359326 L4.64359326,12.3574649 C5.57228864,13.073866 6.73637986,13.5 8,13.5 C11.0375661,13.5 13.5,11.0375661 13.5,8 C13.5,6.73637986 13.073866,5.57228864 12.3574649,4.64359326 Z M8,2.5 C4.96243388,2.5 2.5,4.96243388 2.5,8 C2.5,9.26408031 2.92644441,10.4285592 3.64331784,11.3574212 L11.3574212,3.64331784 C10.4285592,2.92644441 9.26408031,2.5 8,2.5 Z\\\" id=\\\"blocked\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/bot-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,3.5 C9.93299662,3.5 11.5,5.06700338 11.5,7 L11.5,9.5 C11.5,11.1568542 9.93299662,12.5 8,12.5 C6.06700338,12.5 4.5,11.1568542 4.5,9.5 L4.5,7 L4.50517886,6.8079648 C4.60487355,4.9642776 6.1314366,3.5 8,3.5 Z M8,5 C6.9456382,5 6.08183488,5.81587779 6.00548574,6.85073766 L6,7 L6,8 C6,8.82842712 6.8954305,9.5 8,9.5 C9.1045695,9.5 10,8.82842712 10,8 L10,7 C10,5.8954305 9.1045695,5 8,5 Z M3.5,6 C3.77614237,6 4,6.22385763 4,6.5 L4,9.5 C4,9.77614237 3.77614237,10 3.5,10 C3.22385763,10 3,9.77614237 3,9.5 L3,6.5 C3,6.22385763 3.22385763,6 3.5,6 Z M12.5,6 C12.7761424,6 13,6.22385763 13,6.5 L13,9.5 C13,9.77614237 12.7761424,10 12.5,10 C12.2238576,10 12,9.77614237 12,9.5 L12,6.5 C12,6.22385763 12.2238576,6 12.5,6 Z\\\" id=\\\"Bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/bot\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8.5,2.9 C8.83137085,2.9 9.1,3.16862915 9.1,3.5 C9.1,3.6775201 9.02290618,3.83703397 8.9003726,3.94688754 L8.899,4.999 L11,5 C11.5522847,5 12,5.44771525 12,6 L12,7 C12.2761424,7 12.5,7.22385763 12.5,7.5 L12.5,8.5 C12.5,8.77614237 12.2761424,9 12,9 L12,11 C12,11.5522847 11.5522847,12 11,12 L5,12 C4.44771525,12 4,11.5522847 4,11 L4,9 C3.72385763,9 3.5,8.77614237 3.5,8.5 L3.5,7.5 C3.5,7.22385763 3.72385763,7 4,7 L4,6 C4,5.44771525 4.44771525,5 5,5 L8.1,4.999 L8.0996274,3.94688754 C7.97709382,3.83703397 7.9,3.6775201 7.9,3.5 C7.9,3.16862915 8.16862915,2.9 8.5,2.9 Z M9.5,10 L6.5,10 C6.22385763,10 6,10.2238576 6,10.5 C6,10.7761424 6.22385763,11 6.5,11 L9.5,11 C9.77614237,11 10,10.7761424 10,10.5 C10,10.2238576 9.77614237,10 9.5,10 Z M6.5,6 C6.22385763,6 6,6.22385763 6,6.5 L6,7 L5.5,7 C5.22385763,7 5,7.22385763 5,7.5 C5,7.77614237 5.22385763,8 5.5,8 L6,8 L6,8.5 C6,8.77614237 6.22385763,9 6.5,9 C6.77614237,9 7,8.77614237 7,8.5 L7,8 L7.5,8 C7.77614237,8 8,7.77614237 8,7.5 C8,7.22385763 7.77614237,7 7.5,7 L7,7 L7,6.5 C7,6.22385763 6.77614237,6 6.5,6 Z M9.5,7 C9.22385763,7 9,7.22385763 9,7.5 C9,7.77614237 9.22385763,8 9.5,8 C9.77614237,8 10,7.77614237 10,7.5 C10,7.22385763 9.77614237,7 9.5,7 Z\\\" id=\\\"bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bug\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,12 L10,12 L10,10 L14,10 M14,16 L10,16 L10,14 L14,14 M20,8 L17.19,8 C16.7389578,7.21773668 16.1167554,6.54767256 15.37,6.04 L17,4.41 L15.59,3 L13.42,5.17 C12.4901518,4.94442551 11.5198482,4.94442551 10.59,5.17 L8.41,3 L7,4.41 L8.62,6.04 C7.88,6.55 7.26,7.22 6.81,8 L4,8 L4,10 L6.09,10 C6.04,10.33 6,10.66 6,11 L6,12 L4,12 L4,14 L6,14 L6,15 C6,15.34 6.04,15.67 6.09,16 L4,16 L4,18 L6.81,18 C7.85,19.79 9.78,21 12,21 C14.22,21 16.15,19.79 17.19,18 L20,18 L20,16 L17.91,16 C17.96,15.67 18,15.34 18,15 L18,14 L20,14 L20,12 L18,12 L18,11 C18,10.66 17.96,10.33 17.91,10 L20,10 L20,8 Z\\\" id=\\\"mdi:bug\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/call-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15.5 C18.8,15.5 17.5,15.3 16.4,14.9 C16.3,14.9 16.2,14.9 16.1,14.9 C15.8,14.9 15.6,15 15.4,15.2 L13.2,17.4 C10.4,15.9 8,13.6 6.6,10.8 L8.8,8.6 C9.1,8.3 9.2,7.9 9,7.6 C8.7,6.5 8.5,5.2 8.5,4 C8.5,3.5 8,3 7.5,3 L4,3 C3.5,3 3,3.5 3,4 C3,13.4 10.6,21 20,21 C20.5,21 21,20.5 21,20 L21,16.5 C21,16 20.5,15.5 20,15.5 L20,15.5 Z M5,5 L6.5,5 C6.6,5.9 6.8,6.8 7,7.6 L5.8,8.8 C5.4,7.6 5.1,6.3 5,5 L5,5 Z M19,19 C17.7,18.9 16.4,18.6 15.2,18.2 L16.4,17 C17.2,17.2 18.1,17.4 19,17.4 L19,19 Z\\\" id=\\\"mdi:phone-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/call\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6.62,10.79 C8.06,13.62 10.38,15.94 13.21,17.38 L15.41,15.18 C15.69,14.9 16.08,14.82 16.43,14.93 C17.55,15.3 18.75,15.5 20,15.5 C20.5522847,15.5 21,15.9477153 21,16.5 L21,20 C21,20.5522847 20.5522847,21 20,21 C10.6111593,21 3,13.3888407 3,4 C3,3.73478351 3.10535684,3.4804296 3.29289322,3.29289322 C3.4804296,3.10535684 3.73478351,3 4,3 L7.5,3 C8.05228475,3 8.5,3.44771525 8.5,4 C8.5,5.25 8.7,6.45 9.07,7.57 C9.18,7.92 9.1,8.31 8.82,8.59 L6.62,10.79 Z\\\" id=\\\"mdi:phone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/camera-retake\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,5 L17,5 L15,3 L9,3 L7,5 L4,5 C2.8954305,5 2,5.8954305 2,7 L2,19 C2,20.1045695 2.8954305,21 4,21 L20,21 C21.1045695,21 22,20.1045695 22,19 L22,7 C22,5.8954305 21.1045695,5 20,5 M12,18.0000026 C10.92,18.0000026 9.86,17.65 9,17 L10.44,15.56 C10.91,15.85 11.45,16 12,16 C13.6568542,16 15,14.6568542 15,13 C15,11.3431458 13.6568542,10 12,10 C10.74,10 9.6,10.8 9.18,12 L11,12 L8,15 L5,12 L7.1,12 C7.36424064,10.6999079 8.13463224,9.5582575 9.24136868,8.82668596 C10.3481051,8.09511441 11.7003328,7.83367752 13,8.1 C15.5173928,8.61117175 17.2378687,10.9467344 16.9797109,13.5024961 C16.7215532,16.0582577 14.5687655,18.0025816 12,18.0000026 L12,18.0000026 Z\\\" id=\\\"mdi:camera-retake\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C9.3478351,22 6.80429597,20.9464316 4.92893219,19.0710678 C3.0535684,17.195704 2,14.6521649 2,12 C2,9.3478351 3.0535684,6.80429597 4.92893219,4.92893219 C6.80429597,3.0535684 9.3478351,2 12,2 M12,3.99999926 C7.581722,3.99999926 4,7.581722 4,11.9999993 C4,13.85 4.63,15.55 5.68,16.91 L16.91,5.68 C15.505295,4.59031127 13.7778124,3.99923779 12,3.99999926 M12,20.0000007 C16.418278,20.0000007 20,16.418278 20,12 C20,10.15 19.37,8.45 18.32,7.09 L7.09,18.32 C8.49470497,19.4096887 10.2221876,20.0007622 12,20.0000007 L12,20.0000007 Z\\\" id=\\\"mdi:cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/channel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M6.5,12.5 C6.5,12.7761424 6.27614237,13 6,13 L5,13 C4.72385763,13 4.5,12.7761424 4.5,12.5 L4.5,9.997 L4.02563513,9.99796942 C3.49695533,9.99796942 3.06170233,9.63379568 3.00601829,9.10979782 L3,8.99514074 L3,7 C3,6.44278422 3.50172034,6 4.02563513,6 L8,6 L11,4 L11,12 L8,9.99796942 L6.5,9.997 L6.5,12.5 Z M12,6 C12.7835446,6.37375602 13.2808221,7.14951331 13.2820439,8 C13.2882682,8.85255761 12.7887168,9.63186239 12,10 L12,6 Z\\\" id=\\\"Horn\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chat\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.8954305,2 2,2.8954305 2,4 L2,22 L6,18 L20,18 C21.1045695,18 22,17.1045695 22,16 L22,4 C22,2.8954305 21.1045695,2 20,2 M6,9 L18,9 L18,11 L6,11 M14,14 L6,14 L6,12 L14,12 M18,8 L6,8 L6,6 L18,6\\\" id=\\\"mdi:message-text\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" style=\\\"background: #00BCD4;\\\">\\n    \\n    <g id=\\\"icon/material/check-circle\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect fill=\\\"#00BCD4\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.5,2 2,6.5 2,12 C2,17.5 6.5,22 12,22 C17.5,22 22,17.5 22,12 C22,6.5 17.5,2 12,2 M10,17 L5,12 L6.41,10.59 L10,14.17 L17.59,6.58 L19,8 L10,17 Z\\\" id=\\\"mdi:check-circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/check\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"check\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"21 7 9 19 3.5 13.5 4.91 12.09 9 16.17 19.59 5.59\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-down\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:chevron-down\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"7.41 8.58 12 13.17 16.59 8.58 18 10 12 16 6 10\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-left-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" transform=\\\"translate(11.5, 12) scale(-1, 1) translate(-11.5, -12)\\\" points=\\\"7 18.5 13.5 12 7 5.5 8.25 4.25 16 12 8.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-right-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 18.5 14.5 12 8 5.5 9.25 4.25 17 12 9.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61467749,4.32037814 C8.21824496,5.30257332 8,6.37579974 8,7.5 C8,12.1944204 11.8055796,16 16.5,16 C17.6242003,16 18.6974267,15.781755 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.91703774 4.71884223,5.46909511 8.44481526,4.36788353 L8.61467749,4.32037814 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z\\\" id=\\\"xabber:circles\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/client-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,4.5 C23,6.43 21.43,8 19.5,8 C17.57,8 16,6.43 16,4.5 C16,2.57 17.57,1 19.5,1 C21.43,1 23,2.57 23,4.5 M19.5,10 L19,10 L19,19 L5,19 L5,5 L14.03,5 C14,4.84 14,4.67 14,4.5 C14,4 14.08,3.5 14.21,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,9.79 C20.5,9.92 20,10 19.5,10 Z\\\" id=\\\"mdi:checkbox-blank-badge-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/client\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,4.5 C23,6.43 21.43,8 19.5,8 C17.57,8 16,6.43 16,4.5 C16,2.57 17.57,1 19.5,1 C21.43,1 23,2.57 23,4.5 M19.5,10 C16.4647165,9.9944963 14.0055037,7.53528349 14,4.5 C14,4 14.08,3.5 14.21,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,9.79 C20.5,9.92 20,10 19.5,10 Z\\\" id=\\\"mdi:checkout-blank-badge\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/clock-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C6.47,22 2,17.5 2,12 C2,6.4771525 6.4771525,2 12,2 M12.5,7 L12.5,12.25 L17,14.92 L16.25,16.15 L11,13 L11,7 L12.5,7 Z\\\" id=\\\"mdi:clock-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/close\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:close\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/cloud\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.35,10.03 C18.67,6.59 15.64,4 12,4 C9.11,4 6.6,5.64 5.35,8.03 C2.34,8.36 0,10.9 0,14 C0,17.3137085 2.6862915,20 6,20 L19,20 C20.3260824,20 21.597852,19.4732158 22.5355339,18.5355339 C23.4732158,17.597852 24,16.3260824 24,15 C24,12.36 21.95,10.22 19.35,10.03 Z\\\" id=\\\"mdi:cloud\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/contact-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M15,14 C12.33,14 7,15.33 7,18 L7,20 L23,20 L23,18 C23,15.33 17.67,14 15,14 M6,10 L6,7.5 L4,7.5 L4,10 L1.5,10 L1.5,12 L4,12 L4,14.5 L6,14.5 L6,12 L8.5,12 L8.5,10 M15,12 C17.209139,12 19,10.209139 19,8 C19,5.790861 17.209139,4 15,4 C12.790861,4 11,5.790861 11,8 C11,10.209139 12.790861,12 15,12 Z\\\" id=\\\"xabber:contact-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs-gps\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs-gps\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\\\" id=\\\"mdi:crosshairs-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/database-lock\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,3 C15.42,3 19,4.79 19,7 C19,9.21 15.42,11 11,11 C6.58,11 3,9.21 3,7 C3,4.79 6.58,3 11,3 M19,12.03 C17.11,12.24 15.57,13.62 15.13,15.43 C13.92,15.79 12.5,16 11,16 C6.58,16 3,14.21 3,12 L3,9 C3,11.21 6.58,13 11,13 C15.42,13 19,11.21 19,9 L19,12.03 M14,17.71 L14,20.71 C13.07,20.9 12.06,21 11,21 C6.58,21 3,19.21 3,17 L3,14 C3,16.21 6.58,18 11,18 C12.06,18 13.07,17.9 14,17.71 M19.5,14 C20.8807119,14 22,15.1192881 22,16.5 L22,17 C22.5522847,17 23,17.4477153 23,18 L23,22 C23,22.5522847 22.5522847,23 22,23 L17,23 C16.4477153,23 16,22.5522847 16,22 L16,18 C16,17.4477153 16.4477153,17 17,17 L17,16.5 C17,15.1192881 18.1192881,14 19.5,14 M19.5,15 C18.6715729,15 18,15.6715729 18,16.5 L18,17 L21,17 L21,16.5 C21,15.6715729 20.3284271,15 19.5,15 Z\\\" id=\\\"mdi:database-lock\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/database\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C7.58,3 4,4.79 4,7 C4,9.21 7.58,11 12,11 C16.42,11 20,9.21 20,7 C20,4.79 16.42,3 12,3 M4,9 L4,12 C4,14.21 7.58,16 12,16 C16.42,16 20,14.21 20,12 L20,9 C20,11.21 16.42,13 12,13 C7.58,13 4,11.21 4,9 M4,14 L4,17 C4,19.21 7.58,21 12,21 C16.42,21 20,19.21 20,17 L20,14 C20,16.21 16.42,18 12,18 C7.58,18 4,16.21 4,14 Z\\\" id=\\\"mdi:database\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/description-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.11 3.89,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,5 C21,3.89 20.11,3 19,3 L5,3 M5,5 L19,5 L19,19 L5,19 L5,5 M7,7 L7,9 L17,9 L17,7 L7,7 M7,11 L7,13 L17,13 L17,11 L7,11 M7,15 L7,17 L14,17 L14,15 L7,15 Z\\\" id=\\\"mdi:text-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/description\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L7,17 L7,15 L14,15 M17,13 L7,13 L7,11 L17,11 M17,9 L7,9 L7,7 L17,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:text-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-cellphone\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,20 L7,20 L7,4 L17,4 M17,1 L7,1 C5.89,1 5,1.89 5,3 L5,21 C5,22.1045695 5.8954305,23 7,23 L17,23 C18.1045695,23 19,22.1045695 19,21 L19,3 C19,1.8954305 18.1045695,1 17,1 Z\\\" id=\\\"xabber:cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-console\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M18,12 L18,14 L13,14 L13,12 L18,12 Z M8.4,6 L11.7,9.3 C12.09,9.69 12.09,10.33 11.7,10.72 L8.42,14 L5.59,14 L9.58,10 L5.57,6 L8.4,6 Z\\\" id=\\\"xabber.monitor-console\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-desktop\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,16 L3,16 L3,4 L21,4 M21,2 L3,2 C1.89,2 1,2.89 1,4 L1,16 C1,17.1045695 1.8954305,18 3,18 L10,18 L10,20 L8,20 L8,22 L16,22 L16,20 L14,20 L14,18 L21,18 C22.1045695,18 23,17.1045695 23,16 L23,4 C23,2.8954305 22.1045695,2 21,2 Z\\\" id=\\\"mdi:monitor\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-tablet\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,18 L4,18 L4,6 L20,6 M21,4 L3,4 C1.89,4 1,4.89 1,6 L1,18 C1,19.1045695 1.8954305,20 3,20 L21,20 C22.1045695,20 23,19.1045695 23,18 L23,6 C23,4.8954305 22.1045695,4 21,4 Z\\\" id=\\\"xabber:tablet\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-web\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M9.59,6.41 L10.5,7.5 L8,10 L10.5,12.5 L9.59,13.5 L6,10 L9.59,6.41 Z M14.5,6.50152764 L18,10 L14.5,13.5 L13.5,12.5 L16,10 L13.5,7.5 L14.5,6.50152764 Z\\\" id=\\\"xabber.monitor-tag\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/devices\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,11 L18,11 C17.4477153,11 17,11.4477153 17,12 L17,21 C17,21.5522847 17.4477153,22 18,22 L23,22 C23.5522847,22 24,21.5522847 24,21 L24,12 C24,11.4477153 23.5522847,11 23,11 M23,20 L18,20 L18,13 L23,13 L23,20 M20,2 L2,2 C0.89,2 0,2.89 0,4 L0,16 C0,17.1045695 0.8954305,18 2,18 L9,18 L9,20 L7,20 L7,22 L15,22 L15,20 L13,20 L13,18 L15,18 L15,16 L2,16 L2,4 L20,4 L20,9 L22,9 L22,4 C22,2.8954305 21.1045695,2 20,2 Z\\\" id=\\\"mdi:monitor-cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/edit-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.06,9 L15,9.94 L5.92,19 L5,19 L5,18.08 L14.06,9 M17.66,3 C17.41,3 17.15,3.1 16.96,3.29 L15.13,5.12 L18.88,8.87 L20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18.17,3.09 17.92,3 17.66,3 M14.06,6.19 L3,17.25 L3,21 L6.75,21 L17.81,9.94 L14.06,6.19 Z\\\" id=\\\"mdi:pencil-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/edit\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18,2.9 17.35,2.9 16.96,3.29 L15.12,5.12 L18.87,8.87 M3,17.25 L3,21 L6.75,21 L17.81,9.93 L14.06,6.18 L3,17.25 Z\\\" id=\\\"mdi:pencil\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/email-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,6 C22,4.9 21.1,4 20,4 L4,4 C2.9,4 2,4.9 2,6 L2,18 C2,19.1 2.9,20 4,20 L20,20 C21.1,20 22,19.1 22,18 L22,6 M20,6 L12,11 L4,6 L20,6 M20,18 L4,18 L4,8 L12,13 L20,8 L20,18 Z\\\" id=\\\"mdi:email-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/email\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,8 L12,13 L4,8 L4,6 L12,11 L20,6 M20,4 L4,4 C2.89,4 2,4.89 2,6 L2,18 C2,19.1045695 2.8954305,20 4,20 L20,20 C21.1045695,20 22,19.1045695 22,18 L22,6 C22,4.89 21.1,4 20,4 Z\\\" id=\\\"mdi:email\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/expires\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.03,7.39 L20.45,5.97 C20.0000001,5.46 19.55,5 19.04,4.56 L17.62,6 C16.07,4.74 14.12,4 12.0000001,4 C7.0294373,4 3.00000013,8.0294373 3.00000013,13 C3.00000013,17.9705627 7.0294373,22 12.0000001,22 C17.0000001,22 21.0000001,17.97 21.0000001,13 C21.0000001,10.88 20.26,8.93 19.03,7.39 M13,14 L11,14 L11,7 L13,7 L13,14 M15,1 L9,1 L9,3 L15,3 L15,1 Z\\\" id=\\\"mdi:timer\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-audio\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 L12,13.55 C11.41,13.21 10.73,13 10,13 C7.79,13 6,14.79 6,17 C6,19.21 7.79,21 10,21 C12.21,21 14,19.21 14,17 L14,7 L18,7 L18,3 L12,3 Z\\\" id=\\\"mdi:music-note\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-document\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L18.5,9 L13,3.5 L13,9 M6,2 L14,2 L20,8 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,4 C4,2.89 4.89,2 6,2 M15,18 L15,16 L6,16 L6,18 L15,18 M18,14 L18,12 L6,12 L6,14 L18,14 Z\\\" id=\\\"mdi:file-document\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-pdf\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,3 C20.1045695,3 21,3.8954305 21,5 L21,19 C21,20.1045695 20.1045695,21 19,21 L5,21 C3.89,21 3,20.1 3,19 L3,5 C3,3.89 3.89,3 5,3 L19,3 M10.59,10.08 C10.57,10.13 10.3,11.84 8.5,14.77 C8.5,14.77 5,16.58 5.83,17.94 C6.5,19 8.15,17.9 9.56,15.27 C9.56,15.27 11.38,14.63 13.79,14.45 C13.79,14.45 17.65,16.19 18.17,14.34 C18.69,12.5 15.12,12.9 14.5,13.09 C14.5,13.09 12.46,11.75 12,9.89 C12,9.89 13.13,5.95 11.38,6 C9.63,6.05 10.29,9.12 10.59,10.08 M11.4,11.13 C11.43,11.13 11.87,12.33 13.29,13.58 C13.29,13.58 10.96,14.04 9.9,14.5 C9.9,14.5 10.9,12.75 11.4,11.13 M15.32,13.84 C15.9,13.69 17.64,14 17.58,14.32 C17.5,14.65 15.32,13.84 15.32,13.84 M8.26,15.7 C7.73,16.91 6.83,17.68 6.6,17.67 C6.37,17.66 7.3,16.07 8.26,15.7 M11.4,8.76 C11.39,8.71 11.03,6.57 11.4,6.61 C11.94,6.67 11.4,8.71 11.4,8.76 Z\\\" id=\\\"mdi:file-pdf-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-presentation\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,2 L13,2 L13,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,16 C21,17.1045695 20.1045695,18 19,18 L13,18 L13,21 L17,21 L17,23 L7,23 L7,21 L11,21 L11,18 L5,18 C3.8954305,18 3,17.1045695 3,16 L3,5 C3,3.8954305 3.8954305,3 5,3 L11,3 L11,2 Z M19,5 L5,5 L5,16 L19,16 L19,5 Z M9,9 L9,14 L7,14 L7,9 L9,9 Z M13,7 L13,14 L11,14 L11,7 L13,7 Z M17,11 L17,14 L15,14 L15,11 L17,11 Z\\\" id=\\\"xabber:presentation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,9 L16,9 L16,7 L18,7 M18,13 L16,13 L16,11 L18,11 M18,17 L16,17 L16,15 L18,15 M8,9 L6,9 L6,7 L8,7 M8,13 L6,13 L6,11 L8,11 M8,17 L6,17 L6,15 L8,15 M18,3 L18,5 L16,5 L16,3 L8,3 L8,5 L6,5 L6,3 L4,3 L4,21 L6,21 L6,19 L8,19 L8,21 L16,21 L16,19 L18,19 L18,21 L20,21 L20,3 L18,3 Z\\\" id=\\\"mdi:filmstrip\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-zip\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L12,17 L12,15 L10,15 L10,13 L12,13 L12,15 L14,15 M14,9 L12,9 L12,11 L14,11 L14,13 L12,13 L12,11 L10,11 L10,9 L12,9 L12,7 L10,7 L10,5 L12,5 L12,7 L14,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:zip-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L13,3.5 L18.5,9 M6,2 C4.89,2 4,2.89 4,4 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,8 L14,2 L6,2 Z\\\" id=\\\"mdi:file\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/fullname-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,8 L14,8 L14,10 L20,10 L20,8 M20,12 L14,12 L14,14 L20,14 L20,12 M20,16 L14,16 L14,18 L20,18 L20,16 M22,4 L14,4 L14,6 L22,6 L22,20 L2,20 L2,6 L10,6 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/fullname\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,4 L14,4 L14,7 L10,7 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,18 L14,18 L14,16 L20,16 L20,18 M20,14 L14,14 L14,12 L20,12 L20,14 M20,10 L14,10 L14,8 L20,8 L20,10 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-incognito\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,8.00704958 C10.9597902,8.00704958 12.8474987,8.64533875 12.9912872,9.91524601 L13,10.0706662 L13,11.0070496 L10.7492023,11.0070496 L10.75,9.875 C10.75,9.10242267 10.3751421,8.46914598 9.75414509,8.01828756 L9.88054216,8.01011295 L10,8.00704958 Z M7,8 C8.71428571,8 10,8.75 10,9.875 L10,11 L4,11 L4,9.875 C4,8.75 5.28571429,8 7,8 Z M7,8.75 C5.68529006,8.75 4.83790401,9.22876096 4.75645218,9.78636102 L4.75,9.875 L4.75,10.25 L9.25,10.25 L9.25,9.875 C9.25,9.31020891 8.46834945,8.80320839 7.20365867,8.75392032 L7,8.75 Z M10.5,4 C11.3284271,4 12,4.67157288 12,5.5 C12,6.32842712 11.3284271,7 10.5,7 C10.0309641,7 9.61220865,6.78472342 9.33715065,6.44758714 C9.59948544,6.02690214 9.75,5.53102835 9.75,5 C9.75,4.7455993 9.71545544,4.49926692 9.65080116,4.2654377 C9.89064982,4.09777196 10.183907,4 10.5,4 Z M7,3 C8.1045695,3 9,3.8954305 9,5 C9,6.1045695 8.1045695,7 7,7 C5.8954305,7 5,6.1045695 5,5 C5,3.8954305 5.8954305,3 7,3 Z M7,3.75 C6.30964406,3.75 5.75,4.30964406 5.75,5 C5.75,5.69035594 6.30964406,6.25 7,6.25 C7.69035594,6.25 8.25,5.69035594 8.25,5 C8.25,4.30964406 7.69035594,3.75 7,3.75 Z\\\" id=\\\"incognito\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.8,5 L11.2,5 C11.64,5 12,5.33981818 12,5.76363636 L12,10.2363636 C12,10.6581084 11.6418278,11 11.2,11 L4.8,11 C4.3581722,11 4,10.6581084 4,10.2363636 L4,5.76363636 C4,5.33981818 4.356,5 4.8,5 Z M4.57142857,5.81818182 L4.57142857,6.90909091 L8,9.09090909 L11.4285714,6.90909091 L11.4285714,5.81818182 L8,8 L4.57142857,5.81818182 Z\\\" id=\\\"invitation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-private\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5.54386908,9.00001406 C4.74833179,9.00015914 4.03626356,9.50273575 3.75677818,10.2613541 C3.4772928,11.0199725 3.68898239,11.8755937 4.28805949,12.4087226 C4.88713659,12.9418515 5.74800895,13.0407214 6.44860686,12.6568582 C7.14920477,12.272995 7.54265288,11.4868729 7.43605089,10.683913 C7.61005089,10.6450242 7.79823271,10.6139132 7.99841453,10.6144687 C8.19859635,10.6155798 8.38677817,10.6450242 8.56077817,10.683913 C8.45417618,11.4868729 8.84762429,12.272995 9.5482222,12.6568582 C10.2488201,13.0407214 11.1096925,12.9418515 11.7087696,12.4087226 C12.3078467,11.8755937 12.5195363,11.0199725 12.2400509,10.2613541 C11.9605655,9.50273575 11.2484973,9.00015914 10.45296,9.00001406 C9.6733377,8.99699984 8.97079939,9.47872777 8.68023271,10.2155808 C8.45968538,10.1448214 8.22964016,10.109582 7.99841453,10.1111366 C7.69841453,10.1111366 7.49059635,10.1616921 7.31659635,10.2155808 C7.02602967,9.47872777 6.32349136,8.99699984 5.54386908,9.00001406 L5.54386908,9.00001406 Z M5.54386908,9.55558244 C6.29698464,9.55558244 6.90750544,10.1774076 6.90750544,10.9444679 C6.90750544,11.7115282 6.29698464,12.3333534 5.54386908,12.3333534 C4.79075351,12.3333534 4.18023271,11.7115282 4.18023271,10.9444679 C4.18023271,10.1774076 4.79075351,9.55558244 5.54386908,9.55558244 Z M10.45296,9.55558244 C11.2060756,9.55558244 11.8165963,10.1774076 11.8165963,10.9444679 C11.8165963,11.7115282 11.2060756,12.3333534 10.45296,12.3333534 C9.69984442,12.3333534 9.08932362,11.7115282 9.08932362,10.9444679 C9.08932362,10.1774076 9.69984442,9.55558244 10.45296,9.55558244 Z M8,7 C6.512,7 4.39345455,7.268 4.25,7.297 C3.78243762,7.41026088 3.32163107,7.54577794 2.86945455,7.703 C2.31418182,7.877 2,8 2,8 L14,8 C14,8 13.6858182,7.877 13.1305455,7.703 C12.6727414,7.54549536 12.2062901,7.40997808 11.7330909,7.297 C11.7330909,7.297 9.54036364,7 8,7 Z M8,3 C6.53163636,3.0015 5.49418182,3.6095 5.49418182,3.6095 L4.72727273,6 L11.2727273,6 L10.5058182,3.6095 C10.5058182,3.6095 9.46836364,3.001 8,3 Z\\\" id=\\\"private\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-public\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.500501,8 C11.3287776,8 11.995,7.328 11.995,6.5 C11.995,5.672 11.3287776,5 10.500501,5 C9.67222445,5 9,5.672 9,6.5 C9,7.328 9.67222445,8 10.500501,8 Z M6.5,7 C7.33,7 7.995,6.33 7.995,5.5 C7.995,4.67 7.33,4 6.5,4 C5.67,4 5,4.67 5,5.5 C5,6.33 5.67,7 6.5,7 Z M10.5,9 C9.66818182,9 8,9.46 8,10.375 L8,10.9989178 L13,10.9989178 L13,10.375 C13,9.46 11.3318182,9 10.5,9 Z M6.50474946,7.99186821 C4.77490105,7.99186821 3,8.585 3,9.75 L3,11 L7,11 L7,10 C7,9.24841871 7.73828683,8.72461975 8.70884076,8.35916117 C8.08932051,8.04219075 6.85693708,7.99186821 6.50474946,7.99186821 Z\\\" id=\\\"xabber:group-public\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/history\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.5,8 L12,8 L12,13 L16.28,15.54 L17,14.33 L13.5,12.25 L13.5,8 M13,3 C8.02943725,3 4,7.02943725 4,12 L1,12 L4.96,16.03 L9,12 L6,12 C6,8.13400675 9.13400675,5 13,5 C16.8659932,5 20,8.13400675 20,12 C20,15.8659932 16.8659932,19 13,19 C11.07,19 9.32,18.21 8.06,16.94 L6.64,18.36 C8.31963558,20.0581063 10.6115589,21.0094707 13,21.00007 C17.9705627,21.00007 22,16.9705627 22,12 C22,7.02943725 17.9705627,3 13,3\\\" id=\\\"mdi:history\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\\\" />\";","export default \"<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path5\\\"\\n     d=\\\"m 5.2462478,6.4309194 c 0,0 0.2534497,0.5323027 1.6195791,-0.2126538 C 9.2126105,5.0708821 11.67437,4.0095 14.785441,5.5382202 17.009904,6.7924 17.27733,10.360371 13.864368,13.369134 c -1.679464,1.609494 -1.887868,4.226006 -1.825254,4.993295 -0.128246,1.561168 0.259655,1.837265 0.594912,1.938246 0.335257,0.100981 1.461445,-0.04379 1.305934,-1.000087 -0.193265,-1.461227 -0.06192,-2.413209 0.855267,-4.044829 0.758763,-1.162942 2.123721,-1.871086 3.273016,-4.211889 C 18.840748,9.1444158 18.891207,6.503336 17.479328,4.894053 16.152845,3.3821059 14.670099,2.4131656 12.422552,2.4210559 9.8716741,2.446853 8.13424,2.8374168 6.751418,3.5206351 4.5012489,4.730324 4.2973099,4.8714754 5.2462478,6.4309194 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cccccscccsccc\\\" />\\n<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path7\\\"\\n     d=\\\"M 10.393116,10.546893 C 10.179036,9.8582024 9.6418168,9.5037588 9.1268128,9.5037588 c -0.686671,0 -1.6386388,0.1373222 -1.6546508,1.5832442 0,0 0.5308711,2.944458 1.5235151,2.93234 0.364542,-0.004 0.7403587,-0.28287 0.017892,-1.856769 0,0 -0.4395592,-0.974022 -0.1380497,-1.193301 0.5440269,-0.394487 0.5911749,0.418754 0.9156116,1.069105 0.674692,0.328471 1.06244,-0.702948 1.201092,-0.722298 1.026124,-0.142524 -0.130551,1.372622 -0.2386,1.539241 -0.467844,0.515308 -1.3020963,1.251877 -0.614252,1.612091 0.864686,0.205725 1.292561,-0.492065 1.464229,-0.658684 0.2663,-0.37565 0.549622,-0.820112 0.721289,-1.133153 0.877971,-1.468145 0.834305,-2.8722146 -0.558429,-2.9011876 -0.515004,0 -0.814918,0.2302366 -1.373344,0.7725056 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cscccccccccccc\\\" />\\n<path\\n     sodipodi:nodetypes=\\\"cssccsccccssccssc\\\"\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path9\\\"\\n     d=\\\"m 6.8360046,14.735541 c -0.2526865,-0.134842 -0.341246,-0.148685 -0.556785,-0.125105 -0.4758127,0.05205 -0.712045,0.475393 -0.6165306,0.901178 0.2727696,1.215955 1.0359093,1.641989 2.25985,2.132257 1.2530682,0.41756 2.475738,0.396638 3.398493,-0.0757 0.298412,-0.05064 0.287556,-0.683612 0.292618,-1.034981 0.006,-0.414484 -0.327129,-0.528727 -0.651454,-0.493243 -0.82369,0.222079 -0.891361,0.338578 -1.882259,0.248554 -1.1996954,-0.369888 -1.6284239,-0.589257 -2.2439324,-1.55296 z m -0.596727,2.884244 c -0.1641271,-0.121 -0.2921232,-0.08347 -0.442594,-0.06701 -0.3893935,0.0426 -0.727761,0.382603 -0.6463412,0.81143 0.2795655,1.472433 3.2776659,2.179707 4.6014193,2.113323 1.0831623,-0.05044 1.6865703,-0.273231 1.7646093,-1.16247 -0.03364,-0.366114 -0.266964,-0.659232 -0.720411,-0.609623 -0.432095,0.04727 -0.373883,0.118182 -1.0438868,0.191485 C 8.563559,19.026954 7.5842504,18.723225 6.2392776,17.619785 z\\\"\\n     clip-rule=\\\"evenodd\\\" />\\n\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\" />\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/id-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C15.8659932,2 19,5.13400675 19,9 C19,11.38 17.81,13.47 16,14.74 L16,17 C16,17.5522847 15.5522847,18 15,18 L9,18 C8.44771525,18 8,17.5522847 8,17 L8,14.74 C6.19,13.47 5,11.38 5,9 C5,5.13400675 8.13400675,2 12,2 M9,21 L9,20 L15,20 L15,21 C15,21.5522847 14.5522847,22 14,22 L10,22 C9.44771525,22 9,21.5522847 9,21 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,11.05 8.23,12.81 10,13.58 L10,16 L14,16 L14,13.58 C15.77,12.81 17,11.05 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:lightbulb-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/id\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C8.13400675,2 5,5.13400675 5,9 C5,11.38 6.19,13.47 8,14.74 L8,17 C8,17.5522847 8.44771525,18 9,18 L15,18 C15.5522847,18 16,17.5522847 16,17 L16,14.74 C17.81,13.47 19,11.38 19,9 C19,5.13400675 15.8659932,2 12,2 M9,21 C9,21.5522847 9.44771525,22 10,22 L14,22 C14.5522847,22 15,21.5522847 15,21 L15,20 L9,20 L9,21 Z\\\" id=\\\"mdi:lightbulb\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/image\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.5,13.5 L11,16.5 L14.5,12 L19,18 L5,18 M21,19 L21,5 C21,3.89 20.1,3 19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 Z\\\" id=\\\"mdi:image\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/index\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C7.581722,2 4,5.581722 4,10 C4,14.03 7,17.42 11,17.93 L11,19 L10,19 C9.44771525,19 9,19.4477153 9,20 L2,20 L2,22 L9,22 C9,22.5522847 9.44771525,23 10,23 L14,23 C14.5522847,23 15,22.5522847 15,22 L22,22 L22,20 L15,20 C15,19.4477153 14.5522847,19 14,19 L13,19 L13,17.93 C17,17.43 20,14.03 20,10 C20,5.581722 16.418278,2 12,2 M12,4 C12,4 12.74,5.28 13.26,7 L10.74,7 C11.26,5.28 12,4 12,4 M9.77,4.43 C9.5,4.93 9.09,5.84 8.74,7 L6.81,7 C7.5,5.84 8.5,4.93 9.77,4.43 M14.23,4.44 C15.5,4.94 16.5,5.84 17.19,7 L15.26,7 C14.91,5.84 14.5,4.93 14.23,4.44 M6.09,9 L8.32,9 C8.28,9.33 8.25,9.66 8.25,10 C8.25,10.34 8.28,10.67 8.32,11 L6.09,11 C5.96891098,10.3388318 5.96891098,9.66116821 6.09,9 M10.32,9 L13.68,9 C13.72,9.33 13.75,9.66 13.75,10 C13.75,10.34 13.72,10.67 13.68,11 L10.32,11 C10.28,10.67 10.25,10.34 10.25,10 C10.25,9.66 10.28,9.33 10.32,9 M15.68,9 L17.91,9 C18.031089,9.66116821 18.031089,10.3388318 17.91,11 L15.68,11 C15.72,10.67 15.75,10.34 15.75,10 C15.75,9.66 15.72,9.33 15.68,9 M6.81,13 L8.74,13 C9.09,14.16 9.5,15.07 9.77,15.56 C8.5,15.06 7.5,14.16 6.81,13 M10.74,13 L13.26,13 C12.74,14.72 12,16 12,16 C12,16 11.26,14.72 10.74,13 M15.26,13 L17.19,13 C16.5,14.16 15.5,15.07 14.23,15.57 C14.5,15.07 14.91,14.16 15.26,13 Z\\\" id=\\\"mdi:wan\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/information-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,9 L13,9 L13,7 L11,7 M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M11,17 L13,17 L13,11 L11,11 L11,17 Z\\\" id=\\\"mdi:information-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/information\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L11,9 L11,7 L13,7 M13,17 L11,17 L11,11 L13,11 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 Z\\\" id=\\\"mdi:information\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/invite-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 L15.77,4.36 L19,4.36 L19,6.36 L21.03,7.65 C21.5653846,7.97307692 21.9388757,8.53473373 21.993168,9.19339554 L22,9.36 L22,19.36 C22,20.4195455 21.1890702,21.2786364 20.1499371,21.3545464 L20,21.36 L4,21.36 C2.9456382,21.36 2.08183488,20.5441222 2.00548574,19.5092623 L2,19.36 L2,9.36 C2,8.68615385 2.33230769,8.09751479 2.83961766,7.73565772 L5,6.36 L5,4.36 L8.23,4.36 L12,2 Z M20,11.36 L12,16.36 L4,11.36 L4,19.36 L20,19.36 L20,11.36 Z M17,6.36 L7,6.36 L7,11.24 L12,14.36 L17,11.24 L17,6.36 Z M16,9.86 L16,11.36 L8,11.36 L8,9.86 L16,9.86 Z M19,8.74 L19,9.99 L20,9.36 L19,8.74 Z M5,8.74 L4,9.36 L5,9.99 L5,8.74 Z M16,7.36 L16,8.86 L8,8.86 L8,7.36 L16,7.36 Z\\\" id=\\\"xabber:invite-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/job-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,6 C20.58,6 21.05,6.2 21.42,6.59 C21.8,7 22,7.45 22,8 L22,19 C22,19.55 21.8,20 21.42,20.41 C21.05,20.8 20.58,21 20,21 L4,21 C3.42,21 2.95,20.8 2.58,20.41 C2.2,20 2,19.55 2,19 L2,8 C2,7.45 2.2,7 2.58,6.59 C2.95,6.2 3.42,6 4,6 L8,6 L8,4 C8,3.42 8.2,2.95 8.58,2.58 C8.95,2.2 9.42,2 10,2 L14,2 C14.58,2 15.05,2.2 15.42,2.58 C15.8,2.95 16,3.42 16,4 L16,6 L20,6 M4,8 L4,19 L20,19 L20,8 L4,8 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/job\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,2 L14,2 C15.1045695,2 16,2.8954305 16,4 L16,6 L20,6 C21.1045695,6 22,6.8954305 22,8 L22,19 C22,20.1045695 21.1045695,21 20,21 L4,21 C2.89,21 2,20.1 2,19 L2,8 C2,6.89 2.89,6 4,6 L8,6 L8,4 C8,2.89 8.89,2 10,2 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/key\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M7,14 C5.8954305,14 5,13.1045695 5,12 C5,10.8954305 5.8954305,10 7,10 C8.1045695,10 9,10.8954305 9,12 C9,13.1045695 8.1045695,14 7,14 M12.65,10 C11.8057828,7.60319579 9.54113618,6 7,6 C3.6862915,6 1,8.6862915 1,12 C1,15.3137085 3.6862915,18 7,18 C9.54113618,18 11.8057828,16.3968042 12.65,14 L17,14 L17,18 L21,18 L21,14 L23,14 L23,10 L12.65,10 Z\\\" id=\\\"mdi:key\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/link\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.9,12 C3.9,10.29 5.29,8.9 7,8.9 L11,8.9 L11,7 L7,7 C4.23857625,7 2,9.23857625 2,12 C2,14.7614237 4.23857625,17 7,17 L11,17 L11,15.1 L7,15.1 C5.29,15.1 3.9,13.71 3.9,12 M8,13 L16,13 L16,11 L8,11 L8,13 M17,7 L13,7 L13,8.9 L17,8.9 C18.71,8.9 20.1,10.29 20.1,12 C20.1,13.71 18.71,15.1 17,15.1 L13,15.1 L13,17 L17,17 C19.7614237,17 22,14.7614237 22,12 C22,9.23857625 19.7614237,7 17,7 Z\\\" id=\\\"mdi:link\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-alert\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,17 C11.1,17 12,16.1 12,15 C12,13.9 11.1,13 10,13 C8.9,13 8,13.9 8,15 C8,16.1 8.9,17 10,17 M16,8 C17.1,8 18,8.9 18,10 L18,20 C18,21.1 17.1,22 16,22 L4,22 C2.9,22 2,21.1 2,20 L2,10 C2,8.9 2.9,8 4,8 L5,8 L5,6 C5,3.2 7.2,1 10,1 C12.8,1 15,3.2 15,6 L15,8 L16,8 M10,3 C8.3,3 7,4.3 7,6 L7,8 L13,8 L13,6 C13,4.3 11.7,3 10,3 M22,13 L20,13 L20,7 L22,7 L22,13 M22,17 L20,17 L20,15 L22,15 L22,17 Z\\\" id=\\\"mdi:lock-alert\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-check\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M15.6,11 L10.47,16.18 L8.4,14.09 L7,15.5 L10.47,19 L17,12.41 L15.6,11 Z M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock-check\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-cross\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M14.12,11.47 L12,13.59 L9.88,11.47 L8.5,12.86 L10.61,15 L8.5,17.11 L9.91,18.53 L12.03,16.41 L14.12,18.5 L15.5,17.11 L13.43,15 L15.55,12.9 L14.12,11.47 Z M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock-cross\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-open\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,1 C15.24,1 13,3.24 13,6 L13,8 L4,8 C2.8954305,8 2,8.8954305 2,10 L2,20 C2,21.1045695 2.8954305,22 4,22 L16,22 C17.11,22 18,21.11 18,20 L18,10 C18,8.8954305 17.1045695,8 16,8 L15,8 L15,6 C15,4.34 16.34,3 18,3 C19.66,3 21,4.34 21,6 L21,8 L23,8 L23,6 C23,3.24 20.76,1 18,1 M10,13 C11.1045695,13 12,13.8954305 12,15 C12,16.11 11.11,17 10,17 C8.8954305,17 8,16.1045695 8,15 C8,13.8954305 8.8954305,13 10,13 Z\\\" id=\\\"mdi:lock-open-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C9.23857625,1 7,3.23857625 7,6 L7,8 L6,8 C4.8954305,8 4,8.8954305 4,10 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,10 C20,8.8954305 19.1045695,8 18,8 L17,8 L17,6 C17,4.67391755 16.4732158,3.40214799 15.5355339,2.46446609 C14.597852,1.5267842 13.3260824,1 12,1 M12,2.9 C13.71,2.9 15.1,4.29 15.1,6 L15.1,8 L8.9,8 L8.9,6 C8.9,4.29 10.29,2.9 12,2.9 M12.19,10.5 C13.13,10.5 13.88,10.71 14.42,11.12 C14.96,11.54 15.23,12.1 15.23,12.8 C15.23,13.24 15.08,13.63 14.79,14 C14.5,14.36 14.12,14.64 13.66,14.85 C13.4,15 13.23,15.15 13.14,15.32 C13.05,15.5 13,15.72 13,16 L11,16 C11,15.5 11.1,15.16 11.29,14.92 C11.5,14.68 11.84,14.4 12.36,14.08 C12.62,13.94 12.83,13.76 13,13.54 C13.14,13.33 13.22,13.08 13.22,12.8 C13.22,12.5 13.13,12.28 12.95,12.11 C12.77,11.93 12.5,11.85 12.19,11.85 C11.92,11.85 11.7,11.92 11.5,12.06 C11.34,12.2 11.24,12.41 11.24,12.69 L9.27,12.69 C9.22,12 9.5,11.4 10.05,11.04 C10.59,10.68 11.3,10.5 12.19,10.5 M11,17 L13,17 L13,19 L11,19 L11,17 Z\\\" id=\\\"mdi:lock-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,17 C13.1045695,17 14,16.1045695 14,15 C14,13.89 13.1,13 12,13 C10.8954305,13 10,13.8954305 10,15 C10,16.1045695 10.8954305,17 12,17 M18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/map-marker-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/map-marker\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/membership-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M7.07,18.28 C7.5,17.38 10.12,16.5 12,16.5 C13.88,16.5 16.5,17.38 16.93,18.28 C15.5293835,19.3960251 13.7908746,20.0025637 12,20 C10.14,20 8.43,19.36 7.07,18.28 M18.36,16.83 C16.93,15.09 13.46,14.5 11.9999999,14.5 C10.54,14.5 7.07,15.09 5.64,16.83 C4.57618516,15.4446232 3.99966563,13.7467029 3.99999985,12 C3.99999985,7.59 7.59,4 11.9999999,4 C16.41,4 19.9999999,7.59 19.9999999,12 C19.9999999,13.82 19.38,15.5 18.36,16.83 M12,6 C10.06,6 8.5,7.56 8.5,9.5 C8.5,11.44 10.06,13 12,13 C13.94,13 15.5,11.44 15.5,9.5 C15.5,7.56 13.94,6 12,6 M12,11 C11.1715729,11 10.5,10.3284271 10.5,9.5 C10.5,8.67157288 11.1715729,8 12,8 C12.8284271,8 13.5,8.67157288 13.5,9.5 C13.5,10.3284271 12.8284271,11 12,11 Z\\\" id=\\\"mdi:account-circle-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/message-bookmark-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.9,2 2,2.9 2,4 L2,22 L6,18 L20,18 C21.1,18 22,17.1 22,16 L22,4 C22,2.9 21.1,2 20,2 M20,16 L5.2,16 L4,17.2 L4,4 L20,4 L20,16 M18,14 L18,6 L13,6 L13,14 L15.5,12.5 L18,14\\\" id=\\\"mdi:message-bookmark-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"message-group-variant2\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M14.2526206,6 L21.4947588,6 C22.3260806,6 23,6.6752491 23,7.49824524 L23,24 L19,20 L8.50524116,20 C7.67391942,20 7,19.3247509 7,18.5017548 L7,17 L17.0005775,17 C18.6556493,17 20,15.6542582 20,13.9942017 L20,6 L14.2526206,6 Z\\\" id=\\\"Message2\\\"></path>\\n        <path d=\\\"M1,2.49824524 C1,1.67078724 1.66642015,1 2.50863659,1 L16.4913634,1 C17.3245604,1 18,1.6752491 18,2.49824524 L18,13.5017548 C18,14.3292128 17.3335799,15 16.4913634,15 L5,15 L1,19 L1,2.49824524 Z M4,10 L4,12 L12,12 L12,10 L4,10 Z M4,7 L4,9 L15,9 L15,7 L4,7 Z M4,4 L4,6 L15,6 L15,4 L4,4 Z\\\" id=\\\"Combined-Shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/minus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:minus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 13 5 13 5 11 19 11\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/mobile\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,1 C11.1045695,1 12,1.8954305 12,3 L12,12 C12,13.1045695 11.1045695,14 10,14 L6,14 C4.8954305,14 4,13.1045695 4,12 L4,3 C4,1.8954305 4.8954305,1 6,1 L10,1 Z M10,4 L6,4 L6,10 L10,10 L10,4 Z\\\" id=\\\"Mobile\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/palette\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.5,12 C16.6715729,12 16,11.3284271 16,10.5 C16,9.67157288 16.6715729,9 17.5,9 C18.3284271,9 19,9.67157288 19,10.5 C19,11.3284271 18.3284271,12 17.5,12 M14.5,8 C13.6715729,8 13,7.32842712 13,6.5 C13,5.67157288 13.6715729,5 14.5,5 C15.3284271,5 16,5.67157288 16,6.5 C16,7.32842712 15.3284271,8 14.5,8 M9.5,8 C8.67157288,8 8,7.32842712 8,6.5 C8,5.67157288 8.67157288,5 9.5,5 C10.3284271,5 11,5.67157288 11,6.5 C11,7.32842712 10.3284271,8 9.5,8 M6.5,12 C5.67157288,12 5,11.3284271 5,10.5 C5,9.67157288 5.67157288,9 6.5,9 C7.32842712,9 8,9.67157288 8,10.5 C8,11.3284271 7.32842712,12 6.5,12 M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C12.8284271,21 13.5,20.3284271 13.5,19.5 C13.5,19.11 13.35,18.76 13.11,18.5 C12.88,18.23 12.73,17.88 12.73,17.5 C12.73,16.6715729 13.4015729,16 14.23,16 L16,16 C18.7614237,16 21,13.7614237 21,11 C21,6.58 16.97,3 12,3 L12,3 Z\\\" id=\\\"mdi:palette\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pause\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,19 L18,19 L18,5 L14,5 M6,19 L10,19 L10,5 L6,5 L6,19 Z\\\" id=\\\"mdi:pause\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-bottom-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,11 L11,11 L11,17 L19,17 L19,11 M23,19 L23,5 C23,3.88 22.1,3 21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 M21,19 L3,19 L3,4.97 L21,4.97 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-bottom-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-minimize\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,3 C22.1,3 23,3.88 23,5 L23.0008195,11.8103588 C22.4253055,11.2578757 21.7483079,10.8103075 21.000576,10.4984036 L21,4.97 L3,4.97 L3,19 L12.4984036,19.000576 C12.8103075,19.7483079 13.2578757,20.4253055 13.8103588,21.0008195 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L21,3 Z M21,13 L21,14.5 L17.5,14.5 L22,19 L21,20 L16.5,15.5 L16.5,19 L15,19 L15,13 L21,13 Z M13,7 L13,13 L5,13 L5,7 L13,7 Z\\\" id=\\\"xabber:picture-in-picture-minimize\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-top-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,7 L11,7 L11,13 L19,13 L19,7 M21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 L23,5 C23,3.8954305 22.1045695,3 21,3 M21,19 L3,19 L3,5 L21,5 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-top-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pinned\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5228475,2 22,6.4771525 22,12 C22,17.5228475 17.5228475,22 12,22 C6.4771525,22 2,17.5228475 2,12 C2,6.4771525 6.4771525,2 12,2 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M14.5,6 L18,9.5 L17,10.5 L16.5,10 L14.5,13 L15.5,14.5 L14,16 L11.5,13.5 L8.5,16.5 L7.5,16.5 L7.5,15.5 L10.5,12.5 L8,10 L9.5,8.5 L11,9.5 L14,7.5 L13.5,7 L14.5,6 Z\\\" id=\\\"xabber:pinned\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/play\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:play\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 5 8 19 19 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-float\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,3 L13,5 L3,5 L3,19 L20,19 L20,11 L22,11 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L13,3 Z M13,9 L13,15 L11.5,15 L11.5,11.5 L6.5,16.5 L5.5,15.5 L10.5,10.5 L7,10.5 L7,9 L13,9 Z M22,2 C23.1045695,2 24,2.8954305 24,4 L24,7 C24,8.1045695 23.1045695,9 22,9 L17,9 C15.8954305,9 15,8.1045695 15,7 L15,4 C15,2.8954305 15.8954305,2 17,2 L22,2 Z\\\" id=\\\"xabber:player-float\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-full\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.8101336,2.99941507 C14.2575941,3.5750451 13.8100058,4.25218587 13.4981326,5.00007375 L3,5 L3,19 L20,19 L20.000332,13.9810299 C20.7043777,13.9274362 21.3770687,13.7616821 22.000576,13.5015964 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L14.8101336,2.99941507 Z M12,10 C13.1045695,10 14,10.8954305 14,12 L14,15 C14,16.1045695 13.1045695,17 12,17 L7,17 C5.8954305,17 5,16.1045695 5,15 L5,12 C5,10.8954305 5.8954305,10 7,10 L12,10 Z M22,4 L23,5 L18.5,9.5 L22,9.5 L22,11 L16,11 L16,5 L17.5,5 L17.5,8.5 L22,4 Z\\\" id=\\\"xabber:picture-in-picture-full\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-mini-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini-variant\\\" fill=\\\"#000000\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-mini\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,8 L17,9.5 L13.5,9.5 L18,14 L17,15 L12.5,10.5 L12.5,14 L11,14 L11,8 L17,8 Z M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/plus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:plus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 12.998 13 12.998 13 18.998 11 18.998 11 12.998 5 12.998 5 10.998 11 10.998 11 4.998 13 4.998 13 10.998 19 10.998\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <symbol id=\\\"plyr-airplay\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16 1H2a1 1 0 00-1 1v10a1 1 0 001 1h3v-2H3V3h12v8h-2v2h3a1 1 0 001-1V2a1 1 0 00-1-1z\\\"></path><path d=\\\"M4 17h10l-5-6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-off\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\" fill-opacity=\\\".5\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-on\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\"></path></symbol>\\n    <symbol id=\\\"plyr-download\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9 13c.3 0 .5-.1.7-.3L15.4 7 14 5.6l-4 4V1H8v8.6l-4-4L2.6 7l5.7 5.7c.2.2.4.3.7.3zm-7 2h14v2H2z\\\"></path></symbol><symbol id=\\\"plyr-enter-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10 3h3.6l-4 4L11 8.4l4-4V8h2V1h-7zM7 9.6l-4 4V10H1v7h7v-2H4.4l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-exit-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 12h3.6l-4 4L2 17.4l4-4V17h2v-7H1zM16 .6l-4 4V1h-2v7h7V6h-3.6l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-fast-forward\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M7.875 7.171L0 1v16l7.875-6.171V17L18 9 7.875 1z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-vimeo\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M17 5.3c-.1 1.6-1.2 3.7-3.3 6.4-2.2 2.8-4 4.2-5.5 4.2-.9 0-1.7-.9-2.4-2.6C5 10.9 4.4 6 3 6c-.1 0-.5.3-1.2.8l-.8-1c.8-.7 3.5-3.4 4.7-3.5 1.2-.1 2 .7 2.3 2.5.3 2 .8 6.1 1.8 6.1.9 0 2.5-3.4 2.6-4 .1-.9-.3-1.9-2.3-1.1.8-2.6 2.3-3.8 4.5-3.8 1.7.1 2.5 1.2 2.4 3.3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-youtube\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.8 5.8c-.2-1.3-.8-2.2-2.2-2.4C12.4 3 9 3 9 3s-3.4 0-5.6.4C2 3.6 1.3 4.5 1.2 5.8 1 7.1 1 9 1 9s0 1.9.2 3.2c.2 1.3.8 2.2 2.2 2.4C5.6 15 9 15 9 15s3.4 0 5.6-.4c1.4-.3 2-1.1 2.2-2.4.2-1.3.2-3.2.2-3.2s0-1.9-.2-3.2zM7 12V6l5 3-5 3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-muted\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M12.4 12.5l2.1-2.1 2.1 2.1 1.4-1.4L15.9 9 18 6.9l-1.4-1.4-2.1 2.1-2.1-2.1L11 6.9 13.1 9 11 11.1zM3.786 6.008H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pause\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M6 1H3c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zm6 0c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1h-3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pip\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M13.293 3.293L7.022 9.564l1.414 1.414 6.271-6.271L17 7V1h-6z\\\"></path><path d=\\\"M13 15H3V5h5V3H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1v-6h-2v5z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-play\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.562 8.1L3.87.225c-.818-.562-1.87 0-1.87.9v15.75c0 .9 1.052 1.462 1.87.9L15.563 9.9c.584-.45.584-1.35 0-1.8z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-restart\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9.7 1.2l.7 6.4 2.1-2.1c1.9 1.9 1.9 5.1 0 7-.9 1-2.2 1.5-3.5 1.5-1.3 0-2.6-.5-3.5-1.5-1.9-1.9-1.9-5.1 0-7 .6-.6 1.4-1.1 2.3-1.3l-.6-1.9C6 2.6 4.9 3.2 4 4.1 1.3 6.8 1.3 11.2 4 14c1.3 1.3 3.1 2 4.9 2 1.9 0 3.6-.7 4.9-2 2.7-2.7 2.7-7.1 0-9.9L16 1.9l-6.3-.7z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-rewind\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10.125 1L0 9l10.125 8v-6.171L18 17V1l-7.875 6.171z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-settings\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.135 7.784a2 2 0 01-1.23-2.969c.322-.536.225-.998-.094-1.316l-.31-.31c-.318-.318-.78-.415-1.316-.094a2 2 0 01-2.969-1.23C10.065 1.258 9.669 1 9.219 1h-.438c-.45 0-.845.258-.997.865a2 2 0 01-2.969 1.23c-.536-.322-.999-.225-1.317.093l-.31.31c-.318.318-.415.781-.093 1.317a2 2 0 01-1.23 2.969C1.26 7.935 1 8.33 1 8.781v.438c0 .45.258.845.865.997a2 2 0 011.23 2.969c-.322.536-.225.998.094 1.316l.31.31c.319.319.782.415 1.316.094a2 2 0 012.969 1.23c.151.607.547.865.997.865h.438c.45 0 .845-.258.997-.865a2 2 0 012.969-1.23c.535.321.997.225 1.316-.094l.31-.31c.318-.318.415-.781.094-1.316a2 2 0 011.23-2.969c.607-.151.865-.547.865-.997v-.438c0-.451-.26-.846-.865-.997zM9 12a3 3 0 110-6 3 3 0 010 6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-volume\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.6 3.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4C15.4 5.9 16 7.4 16 9c0 1.6-.6 3.1-1.8 4.3-.4.4-.4 1 0 1.4.2.2.5.3.7.3.3 0 .5-.1.7-.3C17.1 13.2 18 11.2 18 9s-.9-4.2-2.4-5.7z\\\"></path><path d=\\\"M11.282 5.282a.909.909 0 000 1.316c.735.735.995 1.458.995 2.402 0 .936-.425 1.917-.995 2.487a.909.909 0 000 1.316c.145.145.636.262 1.018.156a.725.725 0 00.298-.156C13.773 11.733 14.13 10.16 14.13 9c0-.17-.002-.34-.011-.51-.053-.992-.319-2.005-1.522-3.208a.909.909 0 00-1.316 0zm-7.496.726H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/qrcode\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3,11 L5,11 L5,13 L3,13 L3,11 M11,5 L13,5 L13,9 L11,9 L11,5 M9,11 L13,11 L13,15 L11,15 L11,13 L9,13 L9,11 M15,11 L17,11 L17,13 L19,13 L19,11 L21,11 L21,13 L19,13 L19,15 L21,15 L21,19 L19,19 L19,21 L17,21 L17,19 L13,19 L13,21 L11,21 L11,17 L15,17 L15,15 L17,15 L17,13 L15,13 L15,11 M19,19 L19,15 L17,15 L17,19 L19,19 M15,3 L21,3 L21,9 L15,9 L15,3 M17,5 L17,7 L19,7 L19,5 L17,5 M3,3 L9,3 L9,9 L3,9 L3,3 M5,5 L5,7 L7,7 L7,5 L5,5 M3,15 L9,15 L9,21 L3,21 L3,15 M5,17 L5,19 L7,19 L7,17 L5,17 Z\\\" id=\\\"mdi:qrcode\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/restrictions-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18.5,8 C18.33,8 18.16,8 18,8.05 L18,4.5 C18,3.11928813 16.8807119,2 15.5,2 C15.31,2 15.13,2 14.96,2.06 C14.7461874,0.868716938 13.7103179,0.0012815407 12.5,0 C11.44,0 10.54,0.66 10.17,1.59 C9.41693202,1.38051444 8.60922719,1.53531349 7.98697307,2.00838366 C7.36471894,2.48145383 6.99954575,3.21833807 7,4 L7,4.55 C6.84,4.5 6.67,4.5 6.5,4.5 C5.11928813,4.5 4,5.61928813 4,7 L4,15.5 C4,20.19 7.81,24 12.5,24 C17.19,24 21,20.19 21,15.5 L21,10.5 C21,9.11928813 19.8807119,8 18.5,8 M19,15.5 C19,19.0898509 16.0898509,22 12.5,22 C8.91014913,22 6,19.0898509 6,15.5 L6,7 C6,6.72 6.22,6.5 6.5,6.5 C6.78,6.5 7,6.72 7,7 L7,12 L9,12 L9,4 C9,3.72 9.22,3.5 9.5,3.5 C9.78,3.5 10,3.72 10,4 L10,11 L12,11 L12,2.5 C12,2.22 12.22,2 12.5,2 C12.78,2 13,2.22 13,2.5 L13,11 L15,11 L15,4.5 C15,4.22 15.22,4 15.5,4 C15.78,4 16,4.22 16,4.5 L16,13.42 C14.23,14.19 13,15.95 13,18 L15,18 C15,16.34 16.34,15 18,15 L18,10.5 C18,10.22 18.22,10 18.5,10 C18.78,10 19,10.22 19,10.5 L19,15.5 Z\\\" id=\\\"mdi:hand-front-right-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/rss-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5,10 C5.55228475,10 6,10.4477153 6,11 C6,11.5412844 5.55045872,12 5,12 C4.4587156,12 4,11.5412844 4,11 C4,10.4477153 4.44771525,10 5,10 M4,4 C8.418278,4 12,7.581722 12,12 L10.5449871,12 C10.5449871,8.38530341 7.61469659,5.45501285 4,5.45501285 L4,4 M4,7 C6.76142375,7 9,9.23857625 9,12 L7.57070707,12 C7.57070707,11.0529896 7.19450866,10.1447663 6.52487118,9.47512882 C5.85523371,8.80549134 4.9470104,8.42929293 4,8.42929293 L4,7 Z\\\" id=\\\"rss-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/rss\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.75,10 C5.44035594,10 6,10.5596441 6,11.25 C6,11.9403559 5.44035594,12.5 4.75,12.5 C4.05964406,12.5 3.5,11.9403559 3.5,11.25 C3.5,10.5596441 4.05964406,10 4.75,10 Z M5.11116669,7.54639605 C6.82660407,7.80940186 8.1830606,9.16218778 8.45158391,10.8758014 L7.23152342,11.1795044 C7.08441894,9.91212418 6.07561709,8.9075227 4.80628203,8.7668642 L5.11116669,7.54639605 Z M5.72009926,5.11432766 C8.32885675,5.60976503 10.3855062,7.6642481 10.8841422,10.2718714 L9.66858256,10.5739265 C9.28406621,8.41337145 7.57799724,6.7100586 5.41602734,6.32963962 L5.72009926,5.11432766 Z M6.32787101,2.68573625 C9.83044069,3.40831848 12.5892971,6.16611302 13.3134345,9.66811414 L12.0989255,9.96960741 C11.4871421,6.91510726 9.07973668,4.50930363 6.02438684,3.89987406 L6.32787101,2.68573625 Z\\\" id=\\\"Channel-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/saved-messages\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.1666667,1 C17.9487847,1 18.6165365,1.26855469 19.1699219,1.80566406 C19.7233073,2.34277344 20,2.99088542 20,3.75 L20,21.625 C20,21.9973958 19.8634983,22.3196615 19.5904948,22.5917969 C19.3174913,22.8639323 18.9817708,23 18.5833333,23 L12,18.1875 L5.41666667,23 C5.01822917,23 4.68250868,22.8639323 4.40950521,22.5917969 C4.13650174,22.3196615 4,21.9973958 4,21.625 L4,3.75 C4,2.99088542 4.27669271,2.34277344 4.83007812,1.80566406 C5.38346354,1.26855469 6.05121528,1 6.83333333,1 L17.1666667,1 Z M12.0016667,4.4375 L10.2972396,8.1328125 L6.335,8.6484375 L9.256875,11.4199219 L8.50427083,15.4375 L12.0016667,13.4609375 L15.4990625,15.4375 L14.7464583,11.4199219 L17.6683333,8.6484375 L13.7060938,8.1328125 L12.0016667,4.4375 Z\\\" id=\\\"xabber:saved-messages\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <defs>\\n        <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n    </defs>\\n    <g id=\\\"icon/material/search\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <mask id=\\\"mask-2\\\" fill=\\\"white\\\">\\n            <use xlink:href=\\\"#path-1\\\"></use>\\n        </mask>\\n        <use id=\\\"mdi:search\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" xlink:href=\\\"#path-1\\\"></use>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/security\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,12 L19,12 C18.47,16.11 15.72,19.78 12,20.92 L12,12 L5,12 L5,6.3 L12,3.19 M12,1 L3,5 L3,11 C3,16.55 6.84,21.73 12,23 C17.16,21.73 21,16.55 21,11 L21,5 L12,1 Z\\\" id=\\\"mdi:security\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/server\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.1428571,13 L5.85714286,13 C5.38571429,13 5,12.625 5,12.1666667 L5,3.83333333 C5,3.375 5.38571429,3 5.85714286,3 L10.1428571,3 C10.6142857,3 11,3.375 11,3.83333333 L11,12.1666667 C11,12.625 10.6142857,13 10.1428571,13 Z M10,5 L6,5 L6,6 L10,6 L10,5 Z M10,7 L6,7 L6,8 L10,8 L10,7 Z M10,11 L9,11 L9,12 L10,12 L10,11 Z\\\" id=\\\"Server\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/star-face\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2.5 L8.42,8.06 L2,9.74 L6.2,14.88 L5.82,21.5 L12,19.09 L18.18,21.5 L17.8,14.88 L22,9.74 L15.58,8.06 L12,2.5 M9.38,10.5 C10,10.5 10.5,11 10.5,11.63 C10.5,11.9270425 10.3820003,12.2119189 10.1719596,12.4219596 C9.96191885,12.6320003 9.67704247,12.75 9.38,12.75 C8.75,12.75 8.25,12.25 8.25,11.63 C8.25,11 8.75,10.5 9.38,10.5 M14.63,10.5 C15.25,10.5 15.75,11 15.75,11.63 C15.75,12.2485589 15.2485589,12.75 14.63,12.75 C14,12.75 13.5,12.25 13.5,11.63 C13.5,11 14,10.5 14.63,10.5 M9,15 L15,15 C14.4960889,16.2119097 13.3124982,17.0016023 12,17.0016023 C10.6875018,17.0016023 9.50391113,16.2119097 9,15 L9,15 Z\\\" id=\\\"mdi:star-face\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/status-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M15,4.81 L12,6.05 L9,4.81 L7.79,7.79 L4.81,9 L6.05,12 L4.81,15 L7.79,16.21 L9,19.19 L12,17.95 L15,19.19 L16.21,16.21 L19.19,15 L17.95,12 L19.19,9 L16.21,7.79 L15,4.81 Z M13.5,7 L12,11 L15,11 L11.5,17 L10.5,17 L12,13 L9,13 L12.5,7 L13.5,7 Z\\\" id=\\\"xabber:status-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/status\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M13.5,7 L12.5,7 L9,13 L12,13 L10.5,17 L11.5,17 L15,11 L12,11 L13.5,7 Z\\\" id=\\\"xabber:status\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/subscription-from\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,8 C17.3137085,8 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.6862915,20 8,17.3137085 8,14 C8,13.462632 8.07064283,12.9417636 8.20314833,12.4461748 L9.67168223,13.9143229 C9.77459988,14.0172246 9.8859413,14.1065666 10.0034864,14.1823489 L10.0048953,14.1996403 C10.1089211,16.3160315 11.8578046,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.851413 16.3059677,10.0984884 14.180685,10.0040081 C14.1065666,9.8859413 14.0172246,9.77459988 13.9143229,9.67168223 L12.4461748,8.20314833 C12.9417636,8.07064283 13.462632,8 14,8 Z M11,4 L11,6 L7.415,6 L12.5,11.0857864 L11.0857864,12.5 L6,7.415 L6,11 L4,11 L4,4 L11,4 Z\\\" id=\\\"xabber:subscribe-from\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/subscription-to\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.9994979,8.00000002 C17.3137085,8.00000002 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.7616031,20 8.12242824,17.4344251 8.00413847,14.2249383 L8,13.999 L10,14 L10,14 C10,16.209139 11.790861,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.8578046 16.3160315,10.1089211 14.1996403,10.0048953 L13.999,10 L13.9994979,8.00000002 Z M4.91421356,3.5 L10,8.585 L10,5 L12,5 L12,12 L5,12 L5,10 L8.585,10 L3.5,4.91421356 L4.91421356,3.5 Z\\\" id=\\\"xabber:subscribe-to\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/circle/task\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <circle id=\\\"Circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" cx=\\\"8\\\" cy=\\\"8\\\" r=\\\"7\\\"></circle>\\n        <g id=\\\"icon16/bot-variant\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n            <polygon id=\\\"Path\\\" fill=\\\"#FFFFFF\\\" fill-rule=\\\"nonzero\\\" points=\\\"7 12.5 2.75 8.25 4 7 7 10 12 5 13.25 6.25\\\"></polygon>\\n        </g>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/translate\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12.87,15.07 L10.33,12.56 L10.36,12.53 C12.0541502,10.6471017 13.3198948,8.41925464 14.07,6 L17,6 L17,4 L10,4 L10,2 L8,2 L8,4 L1,4 L1,6 L12.17,6 C11.5,7.92 10.44,9.75 9,11.35 C8.07,10.32 7.3,9.19 6.69,8 L4.69,8 C5.42,9.63 6.42,11.17 7.67,12.56 L2.58,17.58 L4,19 L9,14 L12.11,17.11 L12.87,15.07 M18.5,10 L16.5,10 L12,22 L14,22 L15.12,19 L19.87,19 L21,22 L23,22 L18.5,10 M15.88,17 L17.5,12.67 L19.12,17 L15.88,17 L15.88,17 Z\\\" id=\\\"mdi:translate\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/trash\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,4 L15.5,4 L14.5,3 L9.5,3 L8.5,4 L5,4 L5,6 L19,6 M6,19 C6,20.1045695 6.8954305,21 8,21 L16,21 C17.1045695,21 18,20.1045695 18,19 L18,7 L6,7 L6,19 Z\\\" id=\\\"mdi:trash\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,10.5 L17,7 C17,6.44771525 16.5522847,6 16,6 L4,6 C3.44771525,6 3,6.44771525 3,7 L3,17 C3,17.5522847 3.44771525,18 4,18 L16,18 C16.5522847,18 17,17.5522847 17,17 L17,13.5 L21,17.5 L21,6.5 L17,10.5 Z\\\" id=\\\"mdi:video\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/volume-high\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 C19,15.17 16.89,17.84 14,18.7 L14,20.77 C18,19.86 21,16.28 21,12 C21,7.72 18,4.14 14,3.23 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,16 C15.5,15.29 16.5,13.76 16.5,12 M3,9 L3,15 L7,15 L12,20 L12,4 L7,9 L3,9 Z\\\" id=\\\"mdi:volume-high\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Mobile-Portrait\\\" transform=\\\"translate(-41.000000, -4.000000)\\\">\\n        <g id=\\\"volume-off-variant\\\" transform=\\\"translate(34.000000, 0.000000)\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n            <polygon id=\\\"Path-2\\\" points=\\\"7 9 7 15 11 15 16 20 16 16.5 8.5 9\\\"></polygon>\\n            <polygon id=\\\"Path-3\\\" points=\\\"7 6 18.5 17.5 19.5 16.5 16 13 16 4 11.5 8.5 8 5\\\"></polygon>\\n        </g>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/volume-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,4 L9.91,6.09 L12,8.18 M4.27,3 L3,4.27 L7.73,9 L3,9 L3,15 L7,15 L12,20 L12,13.27 L16.25,17.53 C15.58,18.04 14.83,18.46 14,18.7 L14,20.77 C15.38,20.45 16.63,19.82 17.68,18.96 L19.73,21 L21,19.73 L12,10.73 M19,12 C19,12.94 18.8,13.82 18.46,14.64 L19.97,16.15 C20.62,14.91 21,13.5 21,12 C21,7.72 18,4.14 14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,10.18 L16.45,12.63 C16.5,12.43 16.5,12.21 16.5,12 Z\\\" id=\\\"mdi:volume-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/web\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.36,14 C16.44,13.34 16.5,12.68 16.5,12 C16.5,11.32 16.44,10.66 16.36,10 L19.74,10 C19.9,10.64 20,11.31 20,12 C20,12.69 19.9,13.36 19.74,14 M14.59,19.56 C15.19,18.45 15.65,17.25 15.97,16 L18.92,16 C17.96,17.65 16.43,18.93 14.59,19.56 M14.34,14 L9.66,14 C9.56,13.34 9.5,12.68 9.5,12 C9.5,11.32 9.56,10.65 9.66,10 L14.34,10 C14.43,10.65 14.5,11.32 14.5,12 C14.5,12.68 14.43,13.34 14.34,14 M12,19.96 C11.17,18.76 10.5,17.43 10.09,16 L13.91,16 C13.5,17.43 12.83,18.76 12,19.96 M8,8 L5.08,8 C6.03,6.34 7.57,5.06 9.4,4.44 C8.8,5.55 8.35,6.75 8,8 M5.08,16 L8,16 C8.35,17.25 8.8,18.45 9.4,19.56 C7.57,18.93 6.03,17.65 5.08,16 M4.26,14 C4.1,13.36 4,12.69 4,12 C4,11.31 4.1,10.64 4.26,10 L7.64,10 C7.56,10.66 7.5,11.32 7.5,12 C7.5,12.68 7.56,13.34 7.64,14 M12,4.03 C12.83,5.23 13.5,6.57 13.91,8 L10.09,8 C10.5,6.57 11.17,5.23 12,4.03 M18.92,8 L15.97,8 C15.65,6.75 15.19,5.55 14.59,4.44 C16.43,5.07 17.96,6.34 18.92,8 M12,2 C6.47,2 2,6.5 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,9.3478351 20.9464316,6.80429597 19.0710678,4.92893219 C17.195704,3.0535684 14.6521649,2 12,2 Z\\\" id=\\\"mdi:web\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Offline\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8015103 C17.1966102,15.1049344 17.0013821,15.5296633 17,16 C17,16.5522847 16.5443356,17 16.0046024,17 L7.99539757,17 C7.44565467,17 7,16.5561352 6.99998649,16 C6.99861167,15.5296664 6.80338616,15.10494 6.49000549,14.8015163 L6.49000549,14.8000192 C4.95622884,13.3424727 4,11.282906 4,9 C4,4.581722 7.581722,1 12,1 C16.418278,1 20,4.581722 20,9 C20,11.282906 19.0437712,13.3424727 17.5099945,14.8000192 L17.5099945,14.8015103 Z M8.86088543,15 L15.1391084,15 C15.3021338,14.4253123 15.6014858,13.895093 16,13.472213 C17.2274987,12.3735719 18,10.7769996 18,9 C18,5.6862915 15.3137085,3 12,3 C8.6862915,3 6,5.6862915 6,9 C6,10.7769996 6.77250128,12.3735719 8,13.472213 C8.39851111,13.8950917 8.69786083,14.4253152 8.86088543,15 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Online\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8000192 C19.0437712,13.3424727 20,11.282906 20,9 C20,4.581722 16.418278,1 12,1 C7.581722,1 4,4.581722 4,9 C4,11.282906 4.95622884,13.3424727 6.49000549,14.8000192 L6.49000549,14.8015163 C6.80338616,15.10494 6.99861167,15.5296664 6.99998649,16 C7,16.5561352 7.44565467,17 7.99539757,17 L16.0046024,17 C16.5443356,17 17,16.5522847 17,16 C17.0013821,15.5296633 17.1966102,15.1049344 17.5099945,14.8015103 L17.5099945,14.8015103 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/xmpp\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,16.4 C9.75,14.09 8,10.54 8,7 C2,5 8,7 2,5 C2,10.65 6.33,15.11 10.55,17.66 C9.38,18.5 8.15,19 7,19 C7,20 7,19 7,20 C8.2,20 10.03,19.46 12,18.46 C13.97,19.46 15.8,20 17,20 C17,19 17,20 17,19 C15.85,19 14.62,18.5 13.45,17.66 C17.66,15.11 22,10.65 22,5 C16,7 22,5 16,7 C16,10.54 14.25,14.09 12,16.4 Z\\\" id=\\\"mdi:xmpp\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg></div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info first-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info middle-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info last-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info fullname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info nickname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info birthday\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap job-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n        <div class=\\\"info org-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info job-title\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info org-unit\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info role\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info url\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap phone-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <div class=\\\"info phone-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-mobile\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap email-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n        <div class=\\\"info email-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap address-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n        <div class=\\\"info address-home\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-work\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-default\\\">\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n        </div>\\n    </div>\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"vcard_edit__header\\\"))]}</span>\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-vcard-back btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_cancel\\\"))]}</button>\\n                <button class=\\\"btn-vcard-save btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_save\\\"))]}</button>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content details-panel\\\">\\n\\n                <div class=\\\"settings-block-wrap vcard\\\">\\n                    <div class=\\\"vcard-edit-wrap\\\">\\n                        <div class=\\\"info-wrap personal-info-wrap\\\">\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-account-card-details\\\"></i>\\n                            <div class=\\\"input-field first-name\\\">\\n                                <input id=\\\"{{view.cid}}-first-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_given_name'))]}\\\" type=\\\"text\\\" name=\\\"first_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field middle-name\\\">\\n                                <input id=\\\"{{view.cid}}-middle-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_middle_name'))]}\\\" type=\\\"text\\\" name=\\\"middle_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field last-name\\\">\\n                                <input id=\\\"{{view.cid}}-last-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_family_name'))]}\\\" type=\\\"text\\\" name=\\\"last_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field fullname\\\">\\n                                <input id=\\\"{{view.cid}}-fullname\\\" placeholder=\\\"{[print(xabber.getString('vcard_full_name'))]}\\\" type=\\\"text\\\" name=\\\"fullname\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap nickname-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                            <div class=\\\"input-field nickname\\\">\\n                                <input id=\\\"{{view.cid}}-nickname\\\" placeholder=\\\"{[print(xabber.getString('vcard_nick_name'))]}\\\" type=\\\"text\\\" name=\\\"nickname\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap birthday-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-cake-variant\\\"></i>\\n                            <div class=\\\"input-field birthday\\\">\\n                                <input id=\\\"{{view.cid}}-birthday\\\" placeholder=\\\"{[print(xabber.getString('vcard_birth_date_placeholder'))]}\\\" type=\\\"text\\\" class=\\\"datepicker\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap job-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_job\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-briefcase\\\"></i>\\n                            <div class=\\\"input-field org-name\\\">\\n                                <input id=\\\"{{view.cid}}-org-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization'))]}\\\" type=\\\"text\\\" name=\\\"org_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field job-title\\\">\\n                                <input id=\\\"{{view.cid}}-job-title\\\" placeholder=\\\"{[print(xabber.getString('vcard_title'))]}\\\" type=\\\"text\\\" name=\\\"job_title\\\">\\n                            </div>\\n                            <div class=\\\"input-field org-unit\\\">\\n                                <input id=\\\"{{view.cid}}-org-unit\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization_unit'))]}\\\" type=\\\"text\\\" name=\\\"org_unit\\\">\\n                            </div>\\n                            <div class=\\\"input-field role\\\">\\n                                <input id=\\\"{{view.cid}}-role\\\" placeholder=\\\"{[print(xabber.getString('vcard_role'))]}\\\" type=\\\"text\\\" name=\\\"role\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap site-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                            <div class=\\\"input-field url\\\">\\n                                <input id=\\\"{{view.cid}}-url\\\" placeholder=\\\"{[print(xabber.getString('vcard_url_placeholder'))]}\\\" type=\\\"text\\\" name=\\\"url\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap description-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n                            <div class=\\\"input-field description\\\">\\n                                <textarea id=\\\"{{view.cid}}-description\\\" placeholder=\\\"{[print(xabber.getString('vcard_decsription_placeholder'))]}\\\" type=\\\"text\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea\\\" name=\\\"description\\\"></textarea>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap phone-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n                            <div class=\\\"input-field phone-work\\\">\\n                                <input id=\\\"{{view.cid}}-phone-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"phone_work\\\">\\n                            </div>\\n                            <div class=\\\"input-field phone-home\\\">\\n                                <input id=\\\"{{view.cid}}-phone-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_home'))]}\\\" type=\\\"text\\\" name=\\\"phone_home\\\">\\n                            </div>\\n                            <div class=\\\"input-field phone-mobile\\\">\\n                                <input id=\\\"{{view.cid}}-phone-mobile\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_mobile'))]}\\\" type=\\\"text\\\" name=\\\"phone_mobile\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap email-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n                            <div class=\\\"input-field email-work\\\">\\n                                <input id=\\\"{{view.cid}}-email-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"email_work\\\">\\n                            </div>\\n                            <div class=\\\"input-field email-home\\\">\\n                                <input id=\\\"{{view.cid}}-email-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_personal'))]}\\\" type=\\\"text\\\" name=\\\"email_home\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap address-info-wrap\\\">\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n                            <div class=\\\"input-wrap address-wrap address-home-wrap\\\">\\n                                <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_home_address\\\"))]}</div>\\n                                <div class=\\\"input-field pobox\\\">\\n                                    <input id=\\\"{{view.cid}}-po-home-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_home_box\\\">\\n                                </div>\\n                                <div class=\\\"input-field extadd\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_extadd\\\">\\n                                </div>\\n                                <div class=\\\"input-field street\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_street\\\">\\n                                </div>\\n                                <div class=\\\"input-field locality\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_locality\\\">\\n                                </div>\\n                                <div class=\\\"input-field region\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_region\\\">\\n                                </div>\\n                                <div class=\\\"input-field pcode\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_pcode\\\">\\n                                </div>\\n                                <div class=\\\"input-field country\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_country\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"input-wrap address-wrap address-work-wrap\\\">\\n                                <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_work_address\\\"))]}</div>\\n                                <div class=\\\"input-field pobox\\\">\\n                                    <input id=\\\"{{view.cid}}-po-work-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_work_box\\\">\\n                                </div>\\n                                <div class=\\\"input-field extadd\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_extadd\\\">\\n                                </div>\\n                                <div class=\\\"input-field street\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_street\\\">\\n                                </div>\\n                                <div class=\\\"input-field locality\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_locality\\\">\\n                                </div>\\n                                <div class=\\\"input-field region\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_region\\\">\\n                                </div>\\n                                <div class=\\\"input-field pcode\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_pcode\\\">\\n                                </div>\\n                                <div class=\\\"input-field country\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_country\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"buttons-wrap\\\">\\n    <button class=\\\"btn-vcard-save btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_save\\\"))]}</button>\\n</div>\\n<div class=\\\"vcard-edit-wrap\\\">\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n    <div class=\\\"info-wrap personal-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field first-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-first-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_given_name'))]}\\\" type=\\\"text\\\" name=\\\"first_name\\\">\\n        </div>\\n        <div class=\\\"input-field middle-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-middle-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_middle_name'))]}\\\" type=\\\"text\\\" name=\\\"middle_name\\\">\\n        </div>\\n        <div class=\\\"input-field last-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-last-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_family_name'))]}\\\" type=\\\"text\\\" name=\\\"last_name\\\">\\n        </div>\\n        <div class=\\\"input-field fullname\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-fullname\\\" placeholder=\\\"{[print(xabber.getString('vcard_full_name'))]}\\\" type=\\\"text\\\" name=\\\"fullname\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n    <div class=\\\"info-wrap nickname-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field nickname\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-nickname\\\" placeholder=\\\"{[print(xabber.getString('vcard_nick_name'))]}\\\" type=\\\"text\\\" name=\\\"nickname\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n    <div class=\\\"info-wrap birthday-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field birthday\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-birthday\\\" placeholder=\\\"{[print(xabber.getString('vcard_birth_date_placeholder'))]}\\\" type=\\\"text\\\" class=\\\"datepicker\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_job\\\"))]}</div>\\n    <div class=\\\"info-wrap job-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field org-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-org-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization'))]}\\\" type=\\\"text\\\" name=\\\"org_name\\\">\\n        </div>\\n        <div class=\\\"input-field job-title\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-job-title\\\" placeholder=\\\"{[print(xabber.getString('vcard_title'))]}\\\" type=\\\"text\\\" name=\\\"job_title\\\">\\n        </div>\\n        <div class=\\\"input-field org-unit\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-org-unit\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization_unit'))]}\\\" type=\\\"text\\\" name=\\\"org_unit\\\">\\n        </div>\\n        <div class=\\\"input-field role\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-role\\\" placeholder=\\\"{[print(xabber.getString('vcard_role'))]}\\\" type=\\\"text\\\" name=\\\"role\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n    <div class=\\\"info-wrap site-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field url\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-url\\\" placeholder=\\\"{[print(xabber.getString('vcard_url_placeholder'))]}\\\" type=\\\"text\\\" name=\\\"url\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field description\\\">\\n            <textarea id=\\\"{{view.cid}}-description\\\" placeholder=\\\"{[print(xabber.getString('vcard_decsription_placeholder'))]}\\\" type=\\\"text\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field textarea-glow input-glow account-glow\\\" name=\\\"description\\\"></textarea>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n    <div class=\\\"info-wrap phone-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field phone-work\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"phone_work\\\">\\n        </div>\\n        <div class=\\\"input-field phone-home\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_home'))]}\\\" type=\\\"text\\\" name=\\\"phone_home\\\">\\n        </div>\\n        <div class=\\\"input-field phone-mobile\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-mobile\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_mobile'))]}\\\" type=\\\"text\\\" name=\\\"phone_mobile\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n    <div class=\\\"info-wrap email-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field email-work\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-email-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"email_work\\\">\\n        </div>\\n        <div class=\\\"input-field email-home\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-email-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_personal'))]}\\\" type=\\\"text\\\" name=\\\"email_home\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_home_address\\\"))]}</div>\\n    <div class=\\\"info-wrap address-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"address\\\"></svg>\\n        </div>\\n        <div class=\\\"input-wrap address-wrap address-home-wrap\\\">\\n            <div class=\\\"input-field pobox\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-po-home-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_home_box\\\">\\n            </div>\\n            <div class=\\\"input-field extadd\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_extadd\\\">\\n            </div>\\n            <div class=\\\"input-field street\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_street\\\">\\n            </div>\\n            <div class=\\\"input-field locality\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_locality\\\">\\n            </div>\\n            <div class=\\\"input-field region\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_region\\\">\\n            </div>\\n            <div class=\\\"input-field pcode\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_pcode\\\">\\n            </div>\\n            <div class=\\\"input-field country\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_country\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_work_address\\\"))]}</div>\\n    <div class=\\\"info-wrap address-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"address\\\"></svg>\\n        </div>\\n        <div class=\\\"input-wrap address-wrap address-work-wrap\\\">\\n            <div class=\\\"input-field pobox\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-po-work-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_work_box\\\">\\n            </div>\\n            <div class=\\\"input-field extadd\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_extadd\\\">\\n            </div>\\n            <div class=\\\"input-field street\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_street\\\">\\n            </div>\\n            <div class=\\\"input-field locality\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_locality\\\">\\n            </div>\\n            <div class=\\\"input-field region\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_region\\\">\\n            </div>\\n            <div class=\\\"input-field pcode\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_pcode\\\">\\n            </div>\\n            <div class=\\\"input-field country\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_country\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"vcard-wrap\\\">\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info nickname\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info first-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info last-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info birthday\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info url\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap more\\\">\\n        <div class=\\\"show-vcard\\\">\\n            {[print(xabber.getString(\\\"contact_vcard_more\\\"))]}\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"/>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info nickname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info first-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info middle-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info last-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info fullname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info birthday\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap job-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info job-title\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-unit\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info role\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info url\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap phone-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-mobile\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap email-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap address-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-home\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-work\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-default\\\">\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"resources-block-wrap hidden\\\">\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","var constants = {\n\n    ASSETS_URL_PREFIX: './',\n    STORAGE_NAME: 'xabber-storage',\n    STORAGE_VERSION: 'v8',\n\n    CONTAINER_ELEMENT: \"#xabber-container\",\n\n    FAVICON_DEFAULT: \"assets/images/favicon.png\",\n    FAVICON_DEFAULT_GREY: \"assets/images/favicon-grey.png\",\n    FAVICON_MESSAGE: \"assets/images/favicon-message.png\",\n    BACKGROUND_IMAGE: \"assets/images/background.png\",\n\n    WIDTH_MEDIUM: 1650,\n    WIDTH_NARROW: 1280,\n    WIDTH_TINY: 1152,\n\n    LOG_LEVEL_NONE: -1,\n    LOG_LEVEL_ERROR: 1,\n    LOG_LEVEL_WARN: 2,\n    LOG_LEVEL_INFO: 3,\n    LOG_LEVEL_DEBUG: 4,\n\n    LOG_LEVEL: 'ERROR',\n\n    KEY_BACKSPACE: 8,\n    KEY_TAB: 9,\n    KEY_ENTER: 13,\n    KEY_SHIFT: 16,\n    KEY_CTRL: 17,\n    KEY_ESCAPE: 27,\n    KEY_SPACE: 32,\n    KEY_ARROW_LEFT: 37,\n    KEY_ARROW_UP: 38,\n    KEY_ARROW_RIGHT: 39,\n    KEY_ARROW_DOWN: 40,\n    KEY_DELETE: 46,\n    KEY_FORWARD_SLASH: 47,\n    KEY_AT: 50,\n\n    VOICE_MSG_TIME: 120,\n\n    PASSWORD_DOT: String.fromCharCode(0x2022),\n\n    CONNECTION_URL: null,\n\n    CONN_STATUSES: {\n        0: 'ERROR',\n        1: 'CONNECTING',\n        2: 'CONNFAIL',\n        3: 'AUTHENTICATING',\n        4: 'AUTHFAIL',\n        5: 'CONNECTED',\n        6: 'DISCONNECTED',\n        7: 'DISCONNECTING',\n        8: 'ATTACHED',\n        9: 'REDIRECT',\n        10: 'CONNTIMEOUT'\n    },\n\n    PREKEYS_COUNT: 100,\n    MIN_PREKEYS_COUNT: 80,\n\n    AES_KEY_LENGTH: 128,\n    AES_TAG_LENGTH: 128,\n    AES_EXTRACTABLE: true,\n\n    BAD_CONN_STATUSES: [0, 2, 4, 6, 10],\n\n    RECONNECTION_TIMEOUTS: [5000, 10000, 15000],\n    DOWNTIME_RECONNECTION_TIMEOUT: 15,\n    PING_SENDING_INTERVAL: 10,\n\n    IDLING_MINIMAL_TIMEOUT: 10,\n    IDLING_MAXIMUM_TIMEOUT: 90,\n    IDLING_DEFAULT_TIMEOUT: 30,\n\n    STATUS_WEIGHTS: {\n        chat: 1,\n        online: 2,\n        away: 3,\n        xa: 4,\n        dnd: 5,\n        offline: 6,\n        unavailable: 7\n    },\n\n    PRESENT_INTERVAL: 900000,\n    CHATSTATE_INTERVAL_COMPOSING_AUDIO: 5000,\n    CHATSTATE_TIMEOUT_PAUSED: 15000,\n    CHATSTATE_TIMEOUT_STOPPED: 5000,\n    CHATSTATE_TIMEOUT_PAUSED_AUDIO: 10000,\n\n    JINGLE_WAITING_TIME: 60,\n\n    SYNCHRONIZATION_RSM_MAX: 25,\n\n    REGISTRATION_DOMAINS: [],\n    LOGIN_DOMAINS: [],\n    TRUSTED_DOMAINS: [],\n    RECOMMENDED_DOMAIN: '',\n    REGISTRATION_BUTTON: true,\n    REGISTRATION_CUSTOM_DOMAIN: true,\n    LOGIN_CUSTOM_DOMAIN: true,\n\n    TURN_SERVERS_LIST: [\n        {\n            url: 'turn:numb.viagenie.ca',\n            credential: 'muazkh',\n            username: 'webrtc@live.com'\n        },\n        {\n            urls: \"turn:turn.editcompany.org:5439\",\n            username: \"test\",\n            credential: \"1111\"\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=udp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=tcp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        }\n    ],\n\n    JINGLE_MSG_PROPOSE: 0,\n    JINGLE_MSG_REJECT: 1,\n    JINGLE_MSG_ACCEPT: 2,\n\n    MSG_BLOCKED: -2,\n    MSG_ERROR: -1,\n    MSG_PENDING: 0,\n    MSG_SENT: 1,\n    MSG_DELIVERED: 2,\n    MSG_DISPLAYED: 3,\n    MSG_ARCHIVED: 4,\n    MSG_SAVED: 5,\n\n    RSM_ATTRIBUTES: ['max', 'first', 'last', 'after', 'before', 'index', 'count'],\n    MAM_ATTRIBUTES: ['with', 'start', 'end'],\n\n    GENERAL_GROUP_ID: 1,\n    NON_ROSTER_GROUP_ID: 2,\n\n    MATERIAL_COLORS: [\n        \"red\", \"green\", \"blue\", \"deep-purple\", \"orange\", \"lime\",\n        \"pink\", \"purple\", \"indigo\", \"light-blue\", \"cyan\", \"teal\",\n        \"light-green\", \"amber\", \"deep-orange\", \"brown\", \"blue-grey\"\n    ],\n\n    MAX_AVATAR_FILE_SIZE: 64000,\n\n    AVATAR_PRIORITIES: {\n        VCARD_AVATAR: 0,\n        PUBSUB_AVATAR: 1\n    },\n\n    EMAIL_FOR_JOIN_TRANSLATION: \"info@xabber.com\",\n\n    AVATAR_SIZES: {\n        TOOLBAR_ACCOUNT_ITEM: 32,\n        SETTINGS_ACCOUNT_ITEM: 32,\n        XABBER_ACCOUNT: 32,\n        SYNCHRONIZE_ACCOUNT_ITEM: 36,\n        MENTION_ITEM: 36,\n        ACCOUNT_SETTINGS_LEFT: 96,\n        ACCOUNT_VCARD_EDIT: 80,\n        ROSTER_RIGHT_ACCOUNT_ITEM: 38,\n        ROSTER_LEFT_ACCOUNT_ITEM: 40,\n        PARTICIPANT_DETAILS_ITEM: 48,\n        CONTACT_RIGHT_ITEM: 32,\n        GROUPCHAT_MEMBER_ITEM: 32,\n        CONTACT_LEFT_ITEM: 32,\n        CONTACT_BLOCKED_ITEM: 32,\n        CONTACT_DETAILS: 192,\n        GROUP_SETTINGS: 96,\n        CHAT_ITEM: 40,\n        CHAT_HEAD: 40,\n        CHAT_MESSAGE: 32,\n        CHAT_BOTTOM: 48,\n        XABBER_VOICE_CALL_VIEW: 128,\n        OMEMO_ENABLE_SETTING: 182\n    },\n\n    SOUNDS: {\n        beep_up: 'assets/sounds/beep_up.ogg',\n        tiny_noize: 'assets/sounds/tiny_noize.ogg',\n        retro_game: 'assets/sounds/retro_game.ogg',\n        pixel_beep: 'assets/sounds/pixel_beep.ogg',\n        beep_positive: 'assets/sounds/beep_positive.ogg',\n        good_chime: 'assets/sounds/good_chime.ogg',\n        cellular_click: 'assets/sounds/cellular_click.ogg',\n        bleep: 'assets/sounds/bleep.ogg',\n        mono_u: 'assets/sounds/mono_u.ogg',\n        plop: 'assets/sounds/plop.ogg',\n        ether: 'assets/sounds/ether.ogg',\n        pop: 'assets/sounds/pop.ogg',\n        computer_chime: 'assets/sounds/computer_chime.ogg',\n        beep_a: 'assets/sounds/beep_a.ogg',\n        call: 'assets/sounds/marching-band-dave-girtsman.mp3',\n        connecting: 'assets/sounds/alien-bomb-timer.wav',\n        busy: 'assets/sounds/phone_busy.wav',\n        attention: 'assets/sounds/attention.wav'\n    },\n\n    SYNC_WAY_DATA: {\n        no: {\n            tip: 'xabber_account__sync__settings_already_synced',\n            icon: 'mdi-cloud-check'\n        },\n        from_server: {\n            tip: 'xabber_account__sync__settings_will_be_downloaded',\n            icon: 'mdi-cloud-download'\n        },\n        to_server: {\n            tip: 'xabber_account__sync__settings_will_be_uploaded',\n            icon: 'mdi-cloud-upload'\n        },\n        delete: {\n            tip: 'xabber_account__sync__acc_will_be_deleted',\n            icon: 'mdi-delete'\n        },\n        off_local: {\n            tip: 'xabber_account__sync__local_acc',\n            icon: 'mdi-cloud-outline-off'\n        },\n        off_remote: {\n            tip: 'xabber_account__sync__remote_acc',\n            icon: 'mdi-cloud-outline-off'\n        }\n    },\n\n    SYNCED_STATUS_DATA: {\n        off: {\n            tip: 'xabber_account__sync_status__disabled',\n            icon: 'mdi-cloud-outline-off'\n        },\n        yes: {\n            tip: 'xabber_account__sync_status__synced',\n            icon: 'mdi-cloud-check'\n        },\n        no: {\n            tip: 'xabber_account__sync_status__not_synced',\n            icon: 'mdi-cloud'\n        }\n    },\n\n    EMOJI_LIST_NAME: function (emoji_list) {\n        return {\n            \"smiles_and_people\": 'emoji_list__catelory_name__smiles_and_people',\n            \"body_and_clothes\": 'emoji_list__catelory_name__body_and_clothes',\n            \"animals_and_nature\": 'emoji_list__catelory_name__animals_and_nature',\n            \"food_and_drinks\": 'emoji_list__catelory_name__food_and_drinks',\n            \"travel_and_places\": 'emoji_list__catelory_name__travel_and_places',\n            \"events\": 'emoji_list__catelory_name__events',\n            \"objects\": 'emoji_list__catelory_name__objects',\n            \"signs\": 'emoji_list__catelory_name__signs'\n        }[emoji_list]\n    },\n\n    QUOTE_MARKER: '&gt;',\n    MARKUP_TAGS: ['bold', 'underline', 'italic', 'strike', 'link', 'quote'],\n\n    BLANK_VIDEO: {\n        OGG: 'data:video/ogg;base64, ',\n        MP4: 'data:video/mp4;base64, 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',\n        WEBM: 'data:video/webm;base64, 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qqqruu6sgxQVdd1XVmWZQCu67qyLMsCAAAOHAAAAoygk4wqi7DRhAsPQKEhKwKAKAAAwBimFFPKMCYhpBAaxiSEFEImJaXSUqogpFJSKRWEVEoqJaOUUmopVRBSKamUCkIqJZVSAADYgQMA2IGFUGjISgAgDwCAMEYpxhhzTiKkFGPOOScRUoox55yTSjHmnHPOSSkZc8w556SUzjnnnHNSSuacc845KaVzzjnnnJRSSuecc05KKSWEzkEnpZTSOeecEwAAVOAAABBgo8jmBCNBhYasBABSAQAMjmNZmuZ5omialiRpmud5niiapiZJmuZ5nieKqsnzPE8URdE0VZXneZ4oiqJpqirXFUXTNE1VVV2yLIqmaZqq6rowTdNUVdd1XZimaaqq67oubFtVVdV1ZRm2raqq6rqyDFzXdWXZloEsu67s2rIAAPAEBwCgAhtWRzgpGgssNGQlAJABAEAYg5BCCCFlEEIKIYSUUggJAAAYcAAACDChDBQashIASAUAAIyx1lprrbXWQGettdZaa62AzFprrbXWWmuttdZaa6211lJrrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmstpZRSSimllFJKKaWUUkoppZRSSgUA+lU4APg/2LA6wknRWGChISsBgHAAAMAYpRhzDEIppVQIMeacdFRai7FCiDHnJKTUWmzFc85BKCGV1mIsnnMOQikpxVZjUSmEUlJKLbZYi0qho5JSSq3VWIwxqaTWWoutxmKMSSm01FqLMRYjbE2ptdhqq7EYY2sqLbQYY4zFCF9kbC2m2moNxggjWywt1VprMMYY3VuLpbaaizE++NpSLDHWXAAAd4MDAESCjTOsJJ0VjgYXGrISAAgJACAQUooxxhhzzjnnpFKMOeaccw5CCKFUijHGnHMOQgghlIwx5pxzEEIIIYRSSsaccxBCCCGEkFLqnHMQQgghhBBKKZ1zDkIIIYQQQimlgxBCCCGEEEoopaQUQgghhBBCCKmklEIIIYRSQighlZRSCCGEEEIpJaSUUgohhFJCCKGElFJKKYUQQgillJJSSimlEkoJJYQSUikppRRKCCGUUkpKKaVUSgmhhBJKKSWllFJKIYQQSikFAAAcOAAABBhBJxlVFmGjCRcegEJDVgIAZAAAkKKUUiktRYIipRikGEtGFXNQWoqocgxSzalSziDmJJaIMYSUk1Qy5hRCDELqHHVMKQYtlRhCxhik2HJLoXMOAAAAQQCAgJAAAAMEBTMAwOAA4XMQdAIERxsAgCBEZohEw0JweFAJEBFTAUBigkIuAFRYXKRdXECXAS7o4q4DIQQhCEEsDqCABByccMMTb3jCDU7QKSp1IAAAAAAADADwAACQXAAREdHMYWRobHB0eHyAhIiMkAgAAAAAABcAfAAAJCVAREQ0cxgZGhscHR4fICEiIyQBAIAAAgAAAAAggAAEBAQAAAAAAAIAAAAEBB9DtnUBAAAAAAAEPueBAKOFggAAgACjzoEAA4BwBwCdASqwAJAAAEcIhYWIhYSIAgIABhwJ7kPfbJyHvtk5D32ych77ZOQ99snIe+2TkPfbJyHvtk5D32ych77ZOQ99YAD+/6tQgKOFggADgAqjhYIAD4AOo4WCACSADqOZgQArADECAAEQEAAYABhYL/QACIBDmAYAAKOFggA6gA6jhYIAT4AOo5mBAFMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAGSADqOFggB6gA6jmYEAewAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAj4AOo5mBAKMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAKSADqOFggC6gA6jmYEAywAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAz4AOo4WCAOSADqOZgQDzADECAAEQEAAYABhYL/QACIBDmAYAAKOFggD6gA6jhYIBD4AOo5iBARsAEQIAARAQFGAAYWC/0AAiAQ5gGACjhYIBJIAOo4WCATqADqOZgQFDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggFPgA6jhYIBZIAOo5mBAWsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAXqADqOFggGPgA6jmYEBkwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIBpIAOo4WCAbqADqOZgQG7ADECAAEQEAAYABhYL/QACIBDmAYAAKOFggHPgA6jmYEB4wAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIB5IAOo4WCAfqADqOZgQILADECAAEQEAAYABhYL/QACIBDmAYAAKOFggIPgA6jhYICJIAOo5mBAjMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAjqADqOFggJPgA6jmYECWwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYICZIAOo4WCAnqADqOZgQKDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggKPgA6jhYICpIAOo5mBAqsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCArqADqOFggLPgA6jmIEC0wARAgABEBAUYABhYL/QACIBDmAYAKOFggLkgA6jhYIC+oAOo5mBAvsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAw+ADqOZgQMjADECAAEQEAAYABhYL/QACIBDmAYAAKOFggMkgA6jhYIDOoAOo5mBA0sAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA0+ADqOFggNkgA6jmYEDcwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIDeoAOo4WCA4+ADqOZgQObADECAAEQEAAYABhYL/QACIBDmAYAAKOFggOkgA6jhYIDuoAOo5mBA8MAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA8+ADqOFggPkgA6jhYID+oAOo4WCBA+ADhxTu2sBAAAAAAAAEbuPs4EDt4r3gQHxghEr8IEK'\n    },\n\n    MIME_TYPES: {\n        image: [\n            'image/gif',\n            'image/jpeg',\n            'image/pjpeg',\n            'image/png',\n            'image/svg+xml',\n            'image/tiff',\n            'image/vnd.microsoft.icon',\n            'image/vnd.wap.wbmp',\n            'image/webp'\n        ],\n        audio: [\n            'audio/basic',\n            'audio/L24',\n            'audio/mp4',\n            'audio/aac',\n            'audio/mpeg',\n            'audio/ogg',\n            'audio/ogg; codecs=opus',\n            'audio/ogg; codecs=opus+voice',\n            'audio/vorbis',\n            'audio/x-ms-wma',\n            'audio/x-ms-wax',\n            'audio/vnd.rn-realaudio',\n            'audio/vnd.wave',\n            'audio/webm',\n            'audio/x-wav'\n        ],\n        video: [\n            'video/mpeg',\n            'video/mp4',\n            'video/ogg',\n            'video/quicktime',\n            'video/webm',\n            'video/x-ms-wmv',\n            'video/x-flv',\n            'video/3gpp',\n            'video/3gpp2'\n        ],\n        document: [\n            'text/cmd',\n            'text/css',\n            'text/csv',\n            'text/html',\n            'text/javascript (Obsolete)',\n            'text/plain',\n            'text/php',\n            'text/xml',\n            'text/markdown',\n            'text/cache-manifestapplication/json',\n            'application/xml',\n            'application/vnd.oasis.opendocument.text',\n            'application/vnd.oasis.opendocument.graphics',\n            'application/msword'\n        ],\n        pdf: [\n            'application/pdf'\n        ],\n        table: [\n            'application/vnd.oasis.opendocument.spreadsheet',\n            'application/vnd.ms-excel'\n        ],\n        archive: [\n            'application/zip',\n            'application/gzip',\n            'application/x-rar-compressed',\n            'application/x-tar',\n            'application/x-7z-compressed'\n        ],\n        presentation: [\n            'application/vnd.ms-powerpoint',\n            'application/vnd.oasis.opendocument.presentation'\n        ]\n    },\n\n    languages: {\n        \"en\": \"English\",\n        \"\": \"Montenegrin (Latin)\", // ????????\n        \"ar-SA\": \"العربية\",\n        \"az-AZ\": \"Azərbaycanca\",\n        \"be-BY\": \"Беларуская\",\n        \"bg-BG\": \"Български\",\n        \"bs-BA\": \"Bosanski\",\n        \"ca-ES\": \"Català\",\n        \"cs-CZ\": \"Čeština\",\n        \"cy-GB\": \"Cymraeg\",\n        \"da-DK\": \"Dansk\",\n        \"de-DE\": \"Deutsch\",\n        \"el-GR\": \"Ελληνικά\",\n        \"es419\": \"Spanish Latin America\",\n        \"es-ES\": \"Español\",\n        \"et-EE\": \"Eesti\",\n        \"fa-IR\": \"فارسی\",\n        \"fi-FI\": \"Suomi\",\n        \"fil-PH\": \"Pilipino\",\n        \"fr-FR\": \"Français\",\n        \"ga-IE\": \"Gaeilge\",\n        \"he\": \"עברית\",\n        \"hi-IN\": \"हिन्दी\",\n        \"hr-HR\": \"Hrvatski\",\n        \"hu-HU\": \"Magyar\",\n        \"hy-AM\": \"Հայերեն\",\n        \"in-ID\": \"Bahasa Indonesia\",\n        \"is-IS\": \"Íslenska\",\n        \"it-IT\": \"Italiano\",\n        \"ja-JP\": \"日本語\",\n        \"ka-GE\": \"ქართული\",\n        \"kmr-TR\": \"Kurmancî (Kurdî)\",\n        \"ko-KR\": \"한국어\",\n        \"ku-TR\": \"Kurdî\",\n        \"ky-KG\": \"Кыргызча\",\n        \"la-LA\": \"Latina\",\n        \"lb-LU\": \"Luxembourgish\",\n        \"lt-LT\": \"Lietuvių\",\n        \"mk-MK\": \"Македонски\",\n        \"mn-MN\": \"Монгол\",\n        \"mr-IN\": \"मराठी\",\n        \"ms-MY\": \"Bahasa Melayu\",\n        \"nb-NO\": \"Norsk (bokmål)\",\n        \"ne-NP\": \"Nepālī\",\n        \"nl-NL\": \"Nederlands\",\n        \"no-NO\": \"Norsk (nynorsk)\",\n        \"oc-FR\": \"Occitan\",\n        \"pa-IN\": \"ਪੰਜਾਬੀ (ਗੁਰਮੁਖੀ)\",\n        \"pl-PL\": \"Polski\",\n        \"pt-BR\": \"Português, brasileiro\",\n        \"pt-PT\": \"Português\",\n        \"qya-AA\": \"quenya\",\n        \"ro-RO\": \"Română\",\n        \"ru-RU\": \"Русский\",\n        \"sco-GB\": \"Scots\",\n        \"si-LK\": \"සිංහල\",\n        \"sk-SK\": \"Slovenčina\",\n        \"sl-SI\": \"Slovenščina\",\n        \"sq-AL\": \"Shqip\",\n        \"sr-Cyrl-ME\": \"Montenegrin (Cyrillic)\",\n        \"sr-SP\": \"Српски / Srpski\",\n        \"sv-SE\": \"Svenska\",\n        \"sw-KE\": \"Kiswahili\",\n        \"ta-IN\": \"தமிழ்\",\n        \"te-IN\": \"తెలుగు\",\n        \"tg-TJ\": \"Тоҷикӣ\",\n        \"tk-TM\": \"Türkmençe\",\n        \"tlh-AA\": \"Klingon\",\n        \"tr-TR\": \"Türkçe\",\n        \"uk-UA\": \"Українська\",\n        \"uz-UZ\": \"Oʻzbekcha / Ўзбекча\",\n        \"vi-VN\": \"Tiếng Việt\",\n        \"yo-NG\": \"Yorùbá\",\n        \"zh-CN\": \"简体中文\",\n        \"zh-TW\": \"中國傳統的\",\n        \"zu-ZA\": \"isiZulu\"\n    },\n\n    languages_another_locales: {\n        \"es419\": \"es-latin\",\n        \"in-ID\": \"id\"\n    },\n\n    PERSONAL_AREA_URL: {},\n\n    XABBER_ACCOUNT_URL: 'https://www.xabber.com/account',\n    API_SERVICE_URL: 'https://api.xabber.com/api/v2',\n    USE_SOCIAL_AUTH: true,\n    REGISTER_XMPP_ACCOUNT: true,\n    REGISTER_XMPP_ACCOUNT_URL: 'https://www.xabber.com/account/auth/signup/',\n    CHECK_VERSION: true,\n    DEFAULT_LOGIN_SCREEN: 'xmpp',\n\n    GCM_SENDER_ID: '868637702480',\n    GCM_API_KEY: 'AIzaSyC1JCBB3LLf_4DG_vRWMEEe0I4X5msEU-M',\n    MESSAGE_ARCHIVE_DB_NAME: 'MessageArchive',\n    STANZA_MAX_SIZE: Math.pow(2, 16),\n\n    BLUR_VALUE: 25,\n    VIGNETTING_VALUE: 128,\n    TRANSPARENCY_VALUE: 50,\n\n    MAIN_COLOR: 'red',\n    CLIENT_NAME: 'Xabber for Web',\n    SHORT_CLIENT_NAME: 'Xabber',\n    SHORT_CLIENT_DESCRIPTION: 'World’s best XMPP experience',\n    CLIENT_LOGO: 'assets/images/xabber-logo-96.png',\n    TOOLBAR_LOGO: 'assets/images/xabber-logo.png',\n    ENABLE_XABBER_ACCOUNT: false,\n    SCREEN_ABOUT: true,\n    BACKGROUND_IMAGES_XML_URL: 'https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/background-images.xml',\n    BACKGROUND_PATTERNS_XML_URL: 'https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/background-patterns.xml',\n    DEVELOPER_URL: 'https://redsolution.com',\n    CLIENT_GITHUB_URL: 'https://github.com/redsolution/xabber-web',\n    PROJECT_CROWDIN_URL: 'https://crowdin.com/project/xabber',\n    CLIENT_LICENSE_GITHUB_URL: 'https://github.com/redsolution/xabber-web/blob/master/LICENSE'\n};\n\nconstants.JINGLE_MSG_STATE = {};\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_REJECT] = 'reject';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_PROPOSE] = 'propose';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_ACCEPT] = 'accept';\n\nconstants.MSG_STATE = {};\nconstants.MSG_STATE[constants.MSG_ERROR] = 'error';\nconstants.MSG_STATE[constants.MSG_PENDING] = 'pending';\nconstants.MSG_STATE[constants.MSG_SENT] = 'sent';\nconstants.MSG_STATE[constants.MSG_DELIVERED] = 'delivered';\nconstants.MSG_STATE[constants.MSG_DISPLAYED] = 'displayed';\nconstants.MSG_STATE[constants.MSG_ARCHIVED] = 'archived';\nconstants.MSG_STATE[constants.MSG_BLOCKED] = 'not-allowed';\nconstants.MSG_STATE[constants.MSG_SAVED] = 'saved';\n\nconstants.MSG_VERBOSE_STATE = {};\nconstants.MSG_VERBOSE_STATE[constants.MSG_ERROR] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_PENDING] = 'message__delivering_state__pending';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SENT] = 'message__delivering_state__sent';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DELIVERED] = 'message__delivering_state__delivered';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DISPLAYED] = 'message__delivering_state__displayed';\nconstants.MSG_VERBOSE_STATE[constants.MSG_ARCHIVED] = 'message__delivering_state__archived';\nconstants.MSG_VERBOSE_STATE[constants.MSG_BLOCKED] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SAVED] = 'message__delivering_state__saved';\n\nexport default constants;\n","// only external libs and plugins for them\n// import Backbone from \"backbone\";\nimport \"backbone\";\nimport _ from \"underscore\";\nimport $ from \"jquery\";\nimport moment from \"moment\";\nimport WaveSurfer from \"wavesurfer\";\nimport slug from \"slug\";\nimport sha256 from \"sha256\";\nimport magnificPopup from \"magnific-popup\";\nimport i18next from \"i18next\";\nimport i18next_sprintf from \"i18next-post\";\nimport Strophe from \"strophe\";\nimport plyr from \"Plyr\";\nimport Quill from \"Quill\";\nimport libsignal from \"libsignal-protocol\";\nimport sha1 from \"sha1_hasher\";\nimport Recorder from 'opus-recorder';\nimport encoderPath from 'opus-recorder/dist/encoderWorker.min.js';\nimport VanillaQR from \"VanillaQR\";\nimport idleJs from \"idle-js\";\nimport \"~/css/color-scheme.css\";\nimport \"~/css/materialdesignicons.css\";\nimport \"~/css/materialize.css\";\nimport \"~/css/plyr.css\";\nimport \"~/css/quill.snow.css\";\nimport \"~/css/xabber.css\";\nimport \"~/node_modules/magnific-popup/dist/magnific-popup.css\";\nimport \"~/node_modules/perfect-scrollbar/dist/css/perfect-scrollbar.css\";\nimport \"strophe.disco\";\nimport \"strophe.ping\";\nimport \"strophe.rsm\";\nimport \"strophe.caps\";\nimport \"strophe.pubsub\";\nimport \"omemo\";\nimport \"backbone.localsync\";\nimport \"materialize\";\nimport \"perfectScrollbarJQuery\";\n\nexport default _.extend({\n    $: $,\n    _: _,\n    moment: moment,\n    WaveSurfer: WaveSurfer,\n    Plyr: plyr,\n    Quill: Quill,\n    libsignal: libsignal,\n    slug: slug,\n    sha1: sha1,\n    idleJs: idleJs,\n    opusRecorder: Recorder,\n    opusRecorderEncoderPath: encoderPath,\n    xabber_i18next: i18next,\n    xabber_i18next_sprintf: i18next_sprintf,\n    sha256: sha256,\n    VanillaQR: VanillaQR,\n    magnificPopup: magnificPopup,\n    Strophe: Strophe\n}, Strophe);\n","    import _ from \"underscore\";\n    import $ from \"jquery\";\n\n    _.templateSettings = {\n        evaluate : /\\{\\[([\\s\\S]+?)\\]\\}/g,\n        interpolate : /\\{\\{([\\s\\S]+?)\\}\\}/g\n    };\n\n    let templates = {};\n\n    let insertSvg = function (html) {\n        let $html = $('<div/>').html(html);\n        $html.find('.mdi-svg-template').each(function () {\n            let $el = $(this),\n                svg_name = $el.data('svgname');\n            $el.removeClass('mdi-svg-template').addClass('mdi-'+svg_name)\n                .attr('data-svgname', null);\n            $el.html(templates.svg[svg_name]());\n        });\n        return $html.html();\n    };\n\n    let _addTemplate = function (name, options) {\n        options || (options = {});\n        let path = name.split('.'),\n            tpl = _.template(require('raw-loader!~/templates/'+path.join('/')+'.html').default),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        if (options.is_svg) {\n            res[tpl_name] = tpl;\n        } else {\n            res[tpl_name] = function (data) {\n                return insertSvg(tpl(data));\n            };\n        }\n    };\n\n    let addJSONTemplate = function (name, ) {\n        let path = name.split('.'),\n            tpl = require('~/templates/'+path.join('/')+'.json'),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        res[tpl_name] = tpl;\n    };\n\n    let addTemplate = function (name) {\n        _addTemplate(name, {is_svg: false});\n    };\n\n    let addSvgTemplate = function (name) {\n        _addTemplate(name, {is_svg: true});\n    };\n\n\n    addTemplate('base.dialog');\n    addTemplate('base.fingerprints');\n    addTemplate('base.fingerprints_devices');\n    addTemplate('base.fingerprint_item');\n    addTemplate('base.fingerprint_devices_item');\n    addTemplate('base.jingle_message_calling');\n    addTemplate('base.plyr_player_popup');\n    addTemplate('base.input_widget');\n    addTemplate('base.toolbar');\n    addTemplate('base.settings');\n    addTemplate('base.settings_modal');\n    addTemplate('base.about');\n    addTemplate('base.omemo_enable');\n    addTemplate('base.backgrounds_gallery');\n    addTemplate('base.color_picker');\n    addTemplate('base.color_scheme');\n\n    addTemplate('api_service.xabber_login');\n    addTemplate('api_service.xabber_login_by_email');\n    addTemplate('api_service.add_xabber_account');\n    addTemplate('api_service.xabber_account');\n    addTemplate('api_service.linked_email_item');\n    addTemplate('api_service.sync_settings');\n    addTemplate('api_service.sync_settings_account_item');\n\n    addTemplate('accounts.xmpp_login');\n    addTemplate('accounts.add_account');\n    addTemplate('accounts.change_password');\n    addTemplate('accounts.toolbar_item');\n    addTemplate('accounts.media_gallery_account_file');\n    addTemplate('accounts.media_gallery_account');\n    addTemplate('accounts.settings_left');\n    addTemplate('accounts.settings_right');\n    addTemplate('accounts.single_account_settings_modal');\n    addTemplate('accounts.account_settings_modal');\n    addTemplate('accounts.existing_groupchat_item');\n    addTemplate('accounts.resource');\n    addTemplate('accounts.resource_right');\n    addTemplate('accounts.webcam_panel');\n    addTemplate('accounts.emoji_panel');\n    addTemplate('accounts.emoji_picker');\n    addTemplate('accounts.emoji_picker_tabs');\n    addTemplate('accounts.global_settings_item');\n    addTemplate('accounts.global_settings_item_modal');\n    addTemplate('accounts.change_status');\n    addTemplate('accounts.token_item');\n    addTemplate('accounts.token_item_modal');\n    addTemplate('accounts.current_token_item');\n    addTemplate('accounts.current_token_item_modal');\n    addTemplate('accounts.audio_file_waveform');\n    addTemplate('accounts.avatars_gallery');\n    addTemplate('accounts.status_message_input_widget');\n\n    addTemplate('vcard.vcard');\n    addTemplate('vcard.vcard_modal');\n    addTemplate('vcard.vcard_edit');\n    addTemplate('vcard.vcard_edit_modal');\n    addTemplate('vcard.vcard_right');\n\n    addTemplate('searching.searching_wide');\n    addTemplate('searching.searching_account_item');\n    addTemplate('searching.existing_groupchat_item');\n    addTemplate('searching.existing_groupchat_details_view');\n\n    addTemplate('contacts.roster_right');\n    addTemplate('contacts.roster_left');\n    addTemplate('contacts.account_roster_right');\n    addTemplate('contacts.account_roster_left');\n    addTemplate('contacts.group_right');\n    addTemplate('contacts.group_left');\n    addTemplate('contacts.add_contact');\n    addTemplate('contacts.contact_right_item');\n    addTemplate('contacts.contact_left_item');\n    addTemplate('contacts.contact_blocked_item');\n    addTemplate('contacts.contact_details');\n    addTemplate('contacts.contact_details_right');\n    addTemplate('contacts.roster_settings');\n    addTemplate('contacts.group_settings');\n    addTemplate('contacts.groups_checkbox_list');\n    addTemplate('contacts.groups_checkbox_list_contact');\n    addTemplate('contacts.groups_new_group');\n    addTemplate('contacts.groups_list');\n    addTemplate('contacts.add_contact_account_item');\n    addTemplate('contacts.contact_placeholder');\n    addTemplate('contacts.groups');\n    addTemplate('contacts.edit_contact');\n    addTemplate('contacts.edit_group');\n    addTemplate('contacts.preloader');\n    addTemplate('contacts.media_item');\n    addTemplate('contacts.media_items_empty');\n    addTemplate('contacts.audio_file_waveform');\n    addTemplate('contacts.group_chats.group_chat_properties');\n    addTemplate('contacts.group_chats.group_chat_properties_right');\n    addTemplate('contacts.group_chats.group_chat_details');\n    addTemplate('contacts.group_chats.group_chat_details_right');\n    addTemplate('contacts.group_chats.invitation');\n    addTemplate('contacts.group_chats.group_chat_properties_edit');\n    addTemplate('contacts.group_chats.default_restrictions');\n    addTemplate('contacts.group_chats.default_restrictions_right');\n    addTemplate('contacts.group_chats.group_member_item');\n    addTemplate('contacts.group_chats.group_member_item_right');\n    addTemplate('contacts.group_chats.description_input_widget');\n    addTemplate('contacts.group_chats.group_name_input_widget');\n    addTemplate('contacts.group_chats.participant_badge_input_widget');\n    addTemplate('contacts.group_chats.invited_member_item');\n    addTemplate('contacts.group_chats.add_blocked_participant_form');\n    addTemplate('contacts.group_chats.participant_details_right');\n    addTemplate('contacts.group_chats.participant_rights');\n    addTemplate('contacts.group_chats.restriction_item');\n    addTemplate('contacts.group_chats.right_expire_variants');\n    addTemplate('contacts.group_chats.pinned_message');\n    addTemplate('contacts.group_chats.participant_details_item_right');\n    addTemplate('contacts.group_chats.participant_details_item');\n    addTemplate('contacts.group_chats.participants');\n    addTemplate('contacts.group_chats.participants_right_panel');\n    addTemplate('contacts.group_chats.badge_edit_view');\n    addTemplate('contacts.group_chats.private_participant_details');\n    addTemplate('contacts.group_chats.private_participant_details_item_right');\n    addTemplate('contacts.group_chats.set_status');\n    addTemplate('contacts.group_chats.status_item');\n    addTemplate('contacts.group_chats.group_status');\n    addTemplate('contacts.group_chats.group_status_right');\n    addTemplate('contacts.group_chats.file_item');\n\n    addTemplate('chats.chats_panel');\n    addTemplate('chats.add_chat_account_item');\n    addTemplate('chats.chat_item');\n    addTemplate('chats.chat_head');\n    addTemplate('chats.send_media');\n    addTemplate('chats.saved_chat_head');\n    addTemplate('chats.chat_content');\n    addTemplate('chats.chat_content_placeholder');\n    addTemplate('chats.chat_content_contact');\n    addTemplate('chats.chat_bottom');\n    addTemplate('chats.unread_marker');\n    addTemplate('chats.location_popup');\n    addTemplate('chats.subscription_buttons');\n    addTemplate('chats.forward_panel');\n    addTemplate('chats.chat_placeholder');\n    addTemplate('chats.message_item');\n    addTemplate('chats.messages.main');\n    addTemplate('chats.messages.searched');\n    addTemplate('chats.messages.forwarded');\n    addTemplate('chats.messages.system');\n    addTemplate('chats.messages.file_upload');\n    addTemplate('chats.messages.loading_circle');\n    addTemplate('chats.messages.file');\n    addTemplate('chats.messages.file_loading');\n    addTemplate('chats.messages.link_reference');\n    addTemplate('chats.messages.link_reference_chat');\n    addTemplate('chats.messages.attached_file');\n    addTemplate('chats.messages.video');\n    addTemplate('chats.messages.location');\n    addTemplate('chats.messages.audio_file');\n    addTemplate('chats.messages.audio_file_waveform');\n    addTemplate('chats.messages.auth_request');\n    addTemplate('chats.messages.group_request');\n    addTemplate('chats.messages.template-for-2');\n    addTemplate('chats.messages.template-for-3');\n    addTemplate('chats.messages.template-for-4');\n    addTemplate('chats.messages.template-for-5');\n    addTemplate('chats.messages.template-for-6');\n    addTemplate('chats.messages.hidden-template-for-2');\n    addTemplate('chats.messages.hidden-template-for-3');\n    addTemplate('chats.messages.hidden-template-for-4');\n    addTemplate('chats.messages.hidden-template-for-5');\n    addTemplate('chats.messages.hidden-template-for-6');\n    addTemplate('chats.messages.images_details');\n    addTemplate('chats.messages.saved_main');\n    addTemplate('chats.group_chats.pinned_message_panel');\n    addTemplate('chats.group_chats.add_group_chat');\n    addTemplate('chats.group_chats.invitation_panel_view');\n    addTemplate('chats.group_chats.mention_item');\n    addTemplate('chats.encryption_warning');\n    addTemplate('chats.content_encryption_warning');\n\n\n    addTemplate('mentions.mentions_panel');\n    addTemplate('mentions.mentions_placeholder');\n    addTemplate('mentions.mention_item');\n\n    addSvgTemplate('svg.ic-jabber');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.account-outline');\n    addSvgTemplate('svg.qrcode');\n    addSvgTemplate('svg.id-outline');\n    addSvgTemplate('svg.clock-outline');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.restrictions-outline');\n    addSvgTemplate('svg.history');\n    addSvgTemplate('svg.chevron-down');\n    addSvgTemplate('svg.camera-retake');\n    addSvgTemplate('svg.membership-outline');\n    addSvgTemplate('svg.invite-outline');\n    addSvgTemplate('svg.chevron-right-variant');\n    addSvgTemplate('svg.chevron-left-variant');\n    addSvgTemplate('svg.subscription-to');\n    addSvgTemplate('svg.subscription-from');\n    addSvgTemplate('svg.image');\n    addSvgTemplate('svg.file-audio');\n    addSvgTemplate('svg.file-video');\n    addSvgTemplate('svg.file-document');\n    addSvgTemplate('svg.file-presentation');\n    addSvgTemplate('svg.file-zip');\n    addSvgTemplate('svg.file');\n    addSvgTemplate('svg.file-pdf');\n    addSvgTemplate('svg.close');\n    addSvgTemplate('svg.link');\n    addSvgTemplate('svg.picture-in-picture-minimize');\n    addSvgTemplate('svg.picture-in-picture-bottom-right');\n    addSvgTemplate('svg.picture-in-picture-top-right');\n    addSvgTemplate('svg.pause');\n    addSvgTemplate('svg.volume-off');\n    addSvgTemplate('svg.volume-high');\n    addSvgTemplate('svg.plyr');\n    addSvgTemplate('svg.plus');\n    addSvgTemplate('svg.player-float');\n    addSvgTemplate('svg.player-full');\n    addSvgTemplate('svg.player-mini-variant');\n    addSvgTemplate('svg.player-mini');\n    addSvgTemplate('svg.message-bookmark-outline');\n    addSvgTemplate('svg.play');\n    addSvgTemplate('svg.video');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.status');\n    addSvgTemplate('svg.status-outline');\n    addSvgTemplate('svg.birthday');\n    addSvgTemplate('svg.birthday-outline');\n    addSvgTemplate('svg.web');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.job');\n    addSvgTemplate('svg.job-outline');\n    addSvgTemplate('svg.address');\n    addSvgTemplate('svg.address-outline');\n    addSvgTemplate('svg.email');\n    addSvgTemplate('svg.email-outline');\n    addSvgTemplate('svg.description');\n    addSvgTemplate('svg.description-outline');\n    addSvgTemplate('svg.contact-add');\n    addSvgTemplate('svg.check');\n    addSvgTemplate('svg.call-outline');\n    addSvgTemplate('svg.call');\n    addSvgTemplate('svg.search');\n    addSvgTemplate('svg.device-cellphone');\n    addSvgTemplate('svg.device-console');\n    addSvgTemplate('svg.device-desktop');\n    addSvgTemplate('svg.device-tablet');\n    addSvgTemplate('svg.device-web');\n    addSvgTemplate('svg.devices');\n    addSvgTemplate('svg.bell');\n    addSvgTemplate('svg.bell-sleep');\n    addSvgTemplate('svg.bell-off');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.trash');\n    addSvgTemplate('svg.client');\n    addSvgTemplate('svg.client-outline');\n    addSvgTemplate('svg.database-lock');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.bug');\n    addSvgTemplate('svg.cloud');\n    addSvgTemplate('svg.key');\n    addSvgTemplate('svg.account');\n    addSvgTemplate('svg.alert-circle');\n    addSvgTemplate('svg.security');\n    addSvgTemplate('svg.edit');\n    addSvgTemplate('svg.edit-outline');\n    addSvgTemplate('svg.check-circle');\n    addSvgTemplate('svg.blocked-add');\n    addSvgTemplate('svg.information-outline');\n    addSvgTemplate('svg.information');\n    addSvgTemplate('svg.fullname');\n    addSvgTemplate('svg.fullname-outline');\n    addSvgTemplate('svg.ic-at');\n    addSvgTemplate('svg.ic-searching');\n    addSvgTemplate('svg.blocked');\n    addSvgTemplate('svg.bot');\n    addSvgTemplate('svg.bot-variant');\n    addSvgTemplate('svg.group-incognito');\n    addSvgTemplate('svg.group-invite');\n    addSvgTemplate('svg.group-public');\n    addSvgTemplate('svg.task');\n    addSvgTemplate('svg.group-private');\n    addSvgTemplate('svg.channel');\n    addSvgTemplate('svg.rss');\n    addSvgTemplate('svg.rss-variant');\n    addSvgTemplate('svg.server');\n    addSvgTemplate('svg.volume-off-variant');\n    addSvgTemplate('svg.message-group');\n    addSvgTemplate('svg.xabber-offline');\n    addSvgTemplate('svg.xabber-online');\n    addSvgTemplate('svg.saved-messages');\n    addSvgTemplate('svg.palette');\n    addSvgTemplate('svg.chat');\n    addSvgTemplate('svg.star-face');\n    addSvgTemplate('svg.alarm-bell');\n    addSvgTemplate('svg.id');\n    addSvgTemplate('svg.expires');\n    addSvgTemplate('svg.database');\n    addSvgTemplate('svg.lock');\n    addSvgTemplate('svg.lock-open');\n    addSvgTemplate('svg.lock-alert');\n    addSvgTemplate('svg.lock-check');\n    addSvgTemplate('svg.lock-cross');\n    addSvgTemplate('svg.lock-question');\n    addSvgTemplate('svg.circles');\n    addSvgTemplate('svg.translate');\n    addSvgTemplate('svg.trash');\n    addSvgTemplate('svg.crosshairs-gps');\n    addSvgTemplate('svg.crosshairs-question');\n    addSvgTemplate('svg.crosshairs');\n    addSvgTemplate('svg.map-marker-outline');\n    addSvgTemplate('svg.map-marker');\n    addSvgTemplate('svg.minus');\n\n    addJSONTemplate('accounts.emojis');\n\n    export default templates;","import _ from \"underscore\";\nimport $ from \"jquery\";\nimport constants from \"xabber-constants\";\n\nvar raw_data = {\n    \"smiles_and_people\": [{code:0x1f600,x:9,y:3},{code:0x1f603,x:12,y:3},{code:0x1f604,x:13,y:3},{code:0x1f601,x:10,y:3},{code:0x1f606,x:1,y:4},{code:0x1f605,x:0,y:4},{code:0x1f923,x:6,y:10},{code:0x1f602,x:11,y:3},{code:0x1f642,x:5,y:8},{code:0x1f643,x:6,y:8},{code:0x1f609,x:4,y:4},{code:0x1f60a,x:5,y:4},{code:0x1f607,x:2,y:4},{code:0x1f60d,x:8,y:4},{code:0x1f929,x:12,y:10},{code:0x1f617,x:4,y:5},{code:0x263a,x:14,y:5},{code:0x1f61a,x:7,y:5},{code:0x1f619,x:6,y:5},{code:0x1f60b,x:6,y:4},{code:0x1f61b,x:8,y:5},{code:0x1f61c,x:9,y:5},{code:0x1f92a,x:13,y:10},{code:0x1f61d,x:10,y:5},{code:0x1f911,x:10,y:9},{code:0x1f917,x:2,y:10},{code:0x1f92d,x:2,y:11},{code:0x1f92b,x:0,y:11},{code:0x1f914,x:13,y:9},{code:0x1f910,x:9,y:9},{code:0x1f928,x:11,y:10},{code:0x1f610,x:11,y:4},{code:0x1f611,x:12,y:4},{code:0x1f636,x:7,y:7},{code:0x1f60f,x:10,y:4},{code:0x1f612,x:13,y:4},{code:0x1f644,x:7,y:8},{code:0x1f62c,x:11,y:6},{code:0x1f925,x:8,y:10},{code:0x1f60c,x:7,y:4},{code:0x1f614,x:1,y:5},{code:0x1f62a,x:9,y:6},{code:0x1f924,x:7,y:10},{code:0x1f634,x:5,y:7},{code:0x1f637,x:8,y:7},{code:0x1f912,x:11,y:9},{code:0x1f915,x:0,y:10},{code:0x1f922,x:5,y:10},{code:0x1f92e,x:3,y:11},{code:0x1f927,x:10,y:10},{code:0x1f975,x:7,y:12},{code:0x1f976,x:8,y:12},{code:0x1f974,x:6,y:12},{code:0x1f635,x:6,y:7},{code:0x1f92f,x:4,y:11},{code:0x1f920,x:3,y:10},{code:0x1f973,x:5,y:12},{code:0x1f60e,x:9,y:4},{code:0x1f913,x:12,y:9},{code:0x1f9d0,x:1,y:13},{code:0x1f615,x:2,y:5},{code:0x1f61f,x:12,y:5},{code:0x1f641,x:4,y:8},{code:0x2639,x:14,y:4},{code:0x1f62e,x:13,y:6},{code:0x1f62f,x:0,y:7},{code:0x1f632,x:3,y:7},{code:0x1f633,x:4,y:7},{code:0x1f97a,x:9,y:12},{code:0x1f626,x:5,y:6},{code:0x1f627,x:6,y:6},{code:0x1f628,x:7,y:6},{code:0x1f630,x:1,y:7},{code:0x1f625,x:4,y:6},{code:0x1f622,x:1,y:6},{code:0x1f62d,x:12,y:6},{code:0x1f631,x:2,y:7},{code:0x1f616,x:3,y:5},{code:0x1f623,x:2,y:6},{code:0x1f61e,x:11,y:5},{code:0x1f613,x:0,y:5},{code:0x1f629,x:8,y:6},{code:0x1f62b,x:10,y:6},{code:0x1f624,x:3,y:6},{code:0x1f621,x:0,y:6},{code:0x1f620,x:13,y:5},{code:0x1f92c,x:1,y:11},{code:0x1f608,x:3,y:4},{code:0x1f47f,x:9,y:2},{code:0x1f480,x:10,y:2},{code:0x2620,x:14,y:3},{code:0x1f4a9,x:4,y:3},{code:0x1f921,x:4,y:10},{code:0x1f479,x:3,y:2},{code:0x1f47a,x:4,y:2},{code:0x1f47b,x:5,y:2},{code:0x1f47d,x:7,y:2},{code:0x1f47e,x:8,y:2},{code:0x1f916,x:1,y:10},{code:0x1f63a,x:11,y:7},{code:0x1f638,x:9,y:7},{code:0x1f639,x:10,y:7},{code:0x1f63b,x:12,y:7},{code:0x1f63c,x:13,y:7},{code:0x1f63d,x:0,y:8},{code:0x1f640,x:3,y:8},{code:0x1f63f,x:2,y:8},{code:0x1f63e,x:1,y:8},{code:0x1f648,x:11,y:8},{code:0x1f649,x:12,y:8},{code:0x1f64a,x:13,y:8},{code:0x1f476,x:0,y:2},{code:0x1f9d2,x:3,y:13},{code:0x1f466,x:12,y:0},{code:0x1f467,x:13,y:0},{code:0x1f471,x:9,y:1},{code:0x1f9d4,x:5,y:13},{code:0x1f9d3,x:4,y:13},{code:0x1f474,x:12,y:1},{code:0x1f475,x:13,y:1},{code:0x1f64d,x:1,y:9},{code:0x1f64e,x:2,y:9},{code:0x1f645,x:8,y:8},{code:0x1f646,x:9,y:8},{code:0x1f481,x:11,y:2},{code:0x1f64b,x:0,y:9},{code:0x1f647,x:10,y:8},{code:0x1f926,x:9,y:10},{code:0x1f937,x:10,y:11},{code:0x1f46e,x:6,y:1},{code:0x1f575,x:6,y:3},{code:0x1f482,x:12,y:2},{code:0x1f477,x:1,y:2},{code:0x1f934,x:7,y:11},{code:0x1f478,x:2,y:2},{code:0x1f473,x:11,y:1},{code:0x1f472,x:10,y:1},{code:0x1f9d5,x:6,y:13},{code:0x1f935,x:8,y:11},{code:0x1f470,x:8,y:1},{code:0x1f930,x:5,y:11},{code:0x1f931,x:6,y:11},{code:0x1f47c,x:6,y:2},{code:0x1f385,x:0,y:0},{code:0x1f936,x:9,y:11},{code:0x1f9b8,x:10,y:12},{code:0x1f9b9,x:11,y:12},{code:0x1f9d9,x:10,y:13},{code:0x1f9da,x:11,y:13},{code:0x1f9db,x:12,y:13},{code:0x1f9dc,x:13,y:13},{code:0x1f9dd,x:14,y:0},{code:0x1f9de,x:14,y:1},{code:0x1f9df,x:14,y:2},{code:0x1f486,x:0,y:3},{code:0x1f487,x:1,y:3},{code:0x1f6b6,x:6,y:9},{code:0x1f3c3,x:2,y:0},{code:0x1f483,x:13,y:2},{code:0x1f57a,x:7,y:3},{code:0x1f574,x:5,y:3},{code:0x1f46f,x:7,y:1},{code:0x1f9d6,x:7,y:13},{code:0x1f9d7,x:8,y:13},{code:0x1f93a,x:13,y:11},{code:0x1f3c7,x:4,y:0},{code:0x26f7,x:14,y:6},{code:0x1f3c2,x:1,y:0},{code:0x1f3cc,x:7,y:0},{code:0x1f3c4,x:3,y:0},{code:0x1f6a3,x:3,y:9},{code:0x1f3ca,x:5,y:0},{code:0x26f9,x:14,y:7},{code:0x1f3cb,x:6,y:0},{code:0x1f6b4,x:4,y:9},{code:0x1f6b5,x:5,y:9},{code:0x1f938,x:11,y:11},{code:0x1f93c,x:0,y:12},{code:0x1f93d,x:1,y:12},{code:0x1f93e,x:2,y:12},{code:0x1f939,x:12,y:11},{code:0x1f9d8,x:9,y:13},{code:0x1f6c0,x:7,y:9},{code:0x1f6cc,x:8,y:9},{code:0x1f46d,x:5,y:1},{code:0x1f46b,x:3,y:1},{code:0x1f46c,x:4,y:1},{code:0x1f48f,x:2,y:3},{code:0x1f491,x:3,y:3},{code:0x1f46a,x:2,y:1},{code:0x1f5e3,x:8,y:3},{code:0x1f464,x:10,y:0},{code:0x1f465,x:11,y:0},{code:0x1f463,x:9,y:0}],\n    \"body_and_clothes\": [{code:0x1f44b,x:3,y:1},{code:0x1f91a,x:10,y:7},{code:0x1f590,x:7,y:6},{code:0x270b,x:9,y:10},{code:0x1f596,x:9,y:6},{code:0x1f44c,x:4,y:1},{code:0x270c,x:10,y:10},{code:0x1f91e,x:3,y:8},{code:0x1f91f,x:4,y:8},{code:0x1f918,x:8,y:7},{code:0x1f919,x:9,y:7},{code:0x1f448,x:0,y:1},{code:0x1f449,x:1,y:1},{code:0x1f446,x:9,y:0},{code:0x1f595,x:8,y:6},{code:0x1f447,x:10,y:0},{code:0x261d,x:6,y:10},{code:0x1f44d,x:5,y:1},{code:0x1f44e,x:6,y:1},{code:0x270a,x:8,y:10},{code:0x1f44a,x:2,y:1},{code:0x1f91b,x:0,y:8},{code:0x1f91c,x:1,y:8},{code:0x1f44f,x:7,y:1},{code:0x1f64c,x:2,y:7},{code:0x1f450,x:8,y:1},{code:0x1f932,x:5,y:8},{code:0x1f91d,x:2,y:8},{code:0x1f64f,x:3,y:7},{code:0x270d,x:11,y:0},{code:0x1f485,x:6,y:3},{code:0x1f933,x:6,y:8},{code:0x1f4aa,x:9,y:5},{code:0x1f9b5,x:2,y:9},{code:0x1f9b6,x:3,y:9},{code:0x1f442,x:5,y:0},{code:0x1f443,x:6,y:0},{code:0x1f9e0,x:6,y:9},{code:0x1f9b7,x:4,y:9},{code:0x1f9b4,x:1,y:9},{code:0x1f440,x:3,y:0},{code:0x1f445,x:8,y:0},{code:0x1f444,x:7,y:0},{code:0x1f48b,x:7,y:3},{code:0x1f48c,x:8,y:3},{code:0x1f498,x:5,y:4},{code:0x1f49d,x:10,y:4},{code:0x1f496,x:3,y:4},{code:0x1f497,x:4,y:4},{code:0x1f493,x:0,y:4},{code:0x1f49e,x:0,y:5},{code:0x1f495,x:2,y:4},{code:0x1f49f,x:1,y:5},{code:0x2763,x:11,y:1},{code:0x1f494,x:1,y:4},{code:0x2764,x:11,y:2},{code:0x1f9e1,x:7,y:9},{code:0x1f49b,x:8,y:4},{code:0x1f49a,x:7,y:4},{code:0x1f499,x:6,y:4},{code:0x1f49c,x:9,y:4},{code:0x1f5a4,x:10,y:6},{code:0x1f4af,x:3,y:6},{code:0x1f4a2,x:2,y:5},{code:0x1f4a5,x:5,y:5},{code:0x1f4ab,x:10,y:5},{code:0x1f4a6,x:6,y:5},{code:0x1f4a8,x:8,y:5},{code:0x1f573,x:5,y:6},{code:0x1f4a3,x:3,y:5},{code:0x1f4ac,x:0,y:6},{code:0x1f441,x:4,y:0},{code:0x1f5e8,x:0,y:7},{code:0x1f5ef,x:1,y:7},{code:0x1f4ad,x:1,y:6},{code:0x1f4a4,x:4,y:5},{code:0x1f453,x:0,y:2},{code:0x1f576,x:6,y:6},{code:0x1f97d,x:9,y:8},{code:0x1f97c,x:8,y:8},{code:0x1f454,x:1,y:2},{code:0x1f455,x:2,y:2},{code:0x1f456,x:3,y:2},{code:0x1f9e3,x:9,y:9},{code:0x1f9e4,x:10,y:9},{code:0x1f9e5,x:0,y:10},{code:0x1f9e6,x:1,y:10},{code:0x1f457,x:4,y:2},{code:0x1f458,x:5,y:2},{code:0x1f459,x:6,y:2},{code:0x1f45a,x:7,y:2},{code:0x1f45b,x:8,y:2},{code:0x1f45c,x:9,y:2},{code:0x1f45d,x:10,y:2},{code:0x1f6cd,x:4,y:7},{code:0x1f392,x:0,y:0},{code:0x1f45e,x:0,y:3},{code:0x1f45f,x:1,y:3},{code:0x1f97e,x:10,y:8},{code:0x1f97f,x:0,y:9},{code:0x1f460,x:2,y:3},{code:0x1f461,x:3,y:3},{code:0x1f462,x:4,y:3},{code:0x1f451,x:9,y:1},{code:0x1f452,x:10,y:1},{code:0x1f3a9,x:2,y:0},{code:0x1f393,x:1,y:0},{code:0x1f9e2,x:8,y:9},{code:0x26d1,x:7,y:10},{code:0x1f4ff,x:4,y:6},{code:0x1f484,x:5,y:3},{code:0x1f48d,x:9,y:3},{code:0x1f48e,x:10,y:3}],\n    \"animals_and_nature\": [{code:0x1f435,x:6,y:6},{code:0x1f412,x:4,y:3},{code:0x1f98d,x:2,y:9},{code:0x1f436,x:7,y:6},{code:0x1f415,x:7,y:3},{code:0x1f429,x:6,y:5},{code:0x1f43a,x:0,y:7},{code:0x1f98a,x:10,y:8},{code:0x1f99d,x:7,y:10},{code:0x1f408,x:5,y:2},{code:0x1f981,x:1,y:8},{code:0x1f42f,x:1,y:6},{code:0x1f405,x:2,y:2},{code:0x1f406,x:3,y:2},{code:0x1f434,x:5,y:6},{code:0x1f40e,x:0,y:3},{code:0x1f984,x:4,y:8},{code:0x1f993,x:8,y:9},{code:0x1f98c,x:1,y:9},{code:0x1f42e,x:0,y:6},{code:0x1f402,x:10,y:1},{code:0x1f403,x:0,y:2},{code:0x1f404,x:1,y:2},{code:0x1f437,x:8,y:6},{code:0x1f416,x:9,y:3},{code:0x1f417,x:10,y:3},{code:0x1f43d,x:3,y:7},{code:0x1f40f,x:1,y:3},{code:0x1f411,x:3,y:3},{code:0x1f410,x:2,y:3},{code:0x1f42a,x:7,y:5},{code:0x1f42b,x:8,y:5},{code:0x1f999,x:3,y:10},{code:0x1f992,x:7,y:9},{code:0x1f418,x:0,y:4},{code:0x1f98f,x:4,y:9},{code:0x1f99b,x:5,y:10},{code:0x1f42d,x:10,y:5},{code:0x1f401,x:9,y:1},{code:0x1f400,x:8,y:1},{code:0x1f439,x:10,y:6},{code:0x1f430,x:2,y:6},{code:0x1f407,x:4,y:2},{code:0x1f43f,x:5,y:7},{code:0x1f994,x:9,y:9},{code:0x1f987,x:7,y:8},{code:0x1f43b,x:1,y:7},{code:0x1f428,x:5,y:5},{code:0x1f43c,x:2,y:7},{code:0x1f998,x:2,y:10},{code:0x1f9a1,x:11,y:0},{code:0x1f43e,x:4,y:7},{code:0x1f983,x:3,y:8},{code:0x1f414,x:6,y:3},{code:0x1f413,x:5,y:3},{code:0x1f423,x:0,y:5},{code:0x1f424,x:1,y:5},{code:0x1f425,x:2,y:5},{code:0x1f426,x:3,y:5},{code:0x1f427,x:4,y:5},{code:0x1f54a,x:7,y:7},{code:0x1f985,x:5,y:8},{code:0x1f986,x:6,y:8},{code:0x1f9a2,x:11,y:1},{code:0x1f989,x:9,y:8},{code:0x1f99a,x:4,y:10},{code:0x1f99c,x:6,y:10},{code:0x1f438,x:9,y:6},{code:0x1f40a,x:7,y:2},{code:0x1f422,x:10,y:4},{code:0x1f98e,x:3,y:9},{code:0x1f40d,x:10,y:2},{code:0x1f432,x:3,y:6},{code:0x1f409,x:6,y:2},{code:0x1f995,x:10,y:9},{code:0x1f996,x:0,y:10},{code:0x1f433,x:4,y:6},{code:0x1f40b,x:8,y:2},{code:0x1f42c,x:9,y:5},{code:0x1f41f,x:7,y:4},{code:0x1f420,x:8,y:4},{code:0x1f421,x:9,y:4},{code:0x1f988,x:8,y:8},{code:0x1f419,x:1,y:4},{code:0x1f41a,x:2,y:4},{code:0x1f40c,x:9,y:2},{code:0x1f98b,x:0,y:9},{code:0x1f41b,x:3,y:4},{code:0x1f41c,x:4,y:4},{code:0x1f41d,x:5,y:4},{code:0x1f41e,x:6,y:4},{code:0x1f997,x:1,y:10},{code:0x1f577,x:8,y:7},{code:0x1f578,x:9,y:7},{code:0x1f982,x:2,y:8},{code:0x1f99f,x:9,y:10},{code:0x1f9a0,x:10,y:10},{code:0x1f490,x:6,y:7},{code:0x1f338,x:6,y:0},{code:0x1f3f5,x:7,y:1},{code:0x1f339,x:7,y:0},{code:0x1f940,x:10,y:7},{code:0x1f33a,x:8,y:0},{code:0x1f33b,x:9,y:0},{code:0x1f33c,x:10,y:0},{code:0x1f337,x:5,y:0},{code:0x1f331,x:0,y:0},{code:0x1f344,x:6,y:1},{code:0x1f332,x:1,y:0},{code:0x1f333,x:2,y:0},{code:0x1f334,x:3,y:0},{code:0x1f335,x:4,y:0},{code:0x1f33e,x:0,y:1},{code:0x1f33f,x:1,y:1},{code:0x2618,x:11,y:8},{code:0x1f340,x:2,y:1},{code:0x1f341,x:3,y:1},{code:0x1f342,x:4,y:1},{code:0x1f343,x:5,y:1},{code:0x1f980,x:0,y:8},{code:0x1f99e,x:8,y:10},{code:0x1f990,x:5,y:9},{code:0x1f991,x:6,y:9}],\n    \"food_and_drinks\": [{code:0x1f347,x:8,y:0},{code:0x1f348,x:9,y:0},{code:0x1f349,x:0,y:1},{code:0x1f34a,x:1,y:1},{code:0x1f34b,x:2,y:1},{code:0x1f34c,x:3,y:1},{code:0x1f34d,x:4,y:1},{code:0x1f96d,x:10,y:0},{code:0x1f34e,x:5,y:1},{code:0x1f34f,x:6,y:1},{code:0x1f350,x:7,y:1},{code:0x1f351,x:8,y:1},{code:0x1f352,x:9,y:1},{code:0x1f353,x:0,y:2},{code:0x1f95d,x:4,y:8},{code:0x1f345,x:6,y:0},{code:0x1f965,x:2,y:9},{code:0x1f951,x:2,y:7},{code:0x1f346,x:7,y:0},{code:0x1f954,x:5,y:7},{code:0x1f955,x:6,y:7},{code:0x1f33d,x:5,y:0},{code:0x1f336,x:4,y:0},{code:0x1f952,x:3,y:7},{code:0x1f96c,x:9,y:9},{code:0x1f966,x:3,y:9},{code:0x1f95c,x:3,y:8},{code:0x1f330,x:3,y:0},{code:0x1f35e,x:1,y:3},{code:0x1f950,x:1,y:7},{code:0x1f956,x:7,y:7},{code:0x1f968,x:5,y:9},{code:0x1f96f,x:10,y:2},{code:0x1f95e,x:5,y:8},{code:0x1f9c0,x:10,y:3},{code:0x1f356,x:3,y:2},{code:0x1f357,x:4,y:2},{code:0x1f969,x:6,y:9},{code:0x1f953,x:4,y:7},{code:0x1f354,x:1,y:2},{code:0x1f35f,x:2,y:3},{code:0x1f355,x:2,y:2},{code:0x1f32d,x:0,y:0},{code:0x1f96a,x:7,y:9},{code:0x1f32e,x:1,y:0},{code:0x1f32f,x:2,y:0},{code:0x1f959,x:0,y:8},{code:0x1f95a,x:1,y:8},{code:0x1f373,x:2,y:5},{code:0x1f958,x:9,y:7},{code:0x1f372,x:1,y:5},{code:0x1f963,x:0,y:9},{code:0x1f957,x:8,y:7},{code:0x1f37f,x:4,y:6},{code:0x1f9c2,x:10,y:5},{code:0x1f96b,x:8,y:9},{code:0x1f371,x:0,y:5},{code:0x1f358,x:5,y:2},{code:0x1f359,x:6,y:2},{code:0x1f35a,x:7,y:2},{code:0x1f35b,x:8,y:2},{code:0x1f35c,x:9,y:2},{code:0x1f35d,x:0,y:3},{code:0x1f360,x:3,y:3},{code:0x1f362,x:5,y:3},{code:0x1f363,x:6,y:3},{code:0x1f364,x:7,y:3},{code:0x1f365,x:8,y:3},{code:0x1f96e,x:10,y:1},{code:0x1f361,x:4,y:3},{code:0x1f95f,x:6,y:8},{code:0x1f960,x:7,y:8},{code:0x1f961,x:8,y:8},{code:0x1f366,x:9,y:3},{code:0x1f367,x:0,y:4},{code:0x1f368,x:1,y:4},{code:0x1f369,x:2,y:4},{code:0x1f36a,x:3,y:4},{code:0x1f382,x:5,y:6},{code:0x1f370,x:9,y:4},{code:0x1f9c1,x:10,y:4},{code:0x1f967,x:4,y:9},{code:0x1f36b,x:4,y:4},{code:0x1f36c,x:5,y:4},{code:0x1f36d,x:6,y:4},{code:0x1f36e,x:7,y:4},{code:0x1f36f,x:8,y:4},{code:0x1f37c,x:1,y:6},{code:0x1f95b,x:2,y:8},{code:0x2615,x:4,y:10},{code:0x1f375,x:4,y:5},{code:0x1f376,x:5,y:5},{code:0x1f37e,x:3,y:6},{code:0x1f377,x:6,y:5},{code:0x1f378,x:7,y:5},{code:0x1f379,x:8,y:5},{code:0x1f37a,x:9,y:5},{code:0x1f37b,x:0,y:6},{code:0x1f942,x:8,y:6},{code:0x1f943,x:9,y:6},{code:0x1f964,x:1,y:9},{code:0x1f962,x:9,y:8},{code:0x1f37d,x:2,y:6},{code:0x1f374,x:3,y:5},{code:0x1f944,x:0,y:7},{code:0x1f52a,x:7,y:6},{code:0x1f3fa,x:6,y:6}],\n    \"travel_and_places\": [{code:0x1f30d,x:13,y:0},{code:0x1f30e,x:0,y:1},{code:0x1f30f,x:1,y:1},{code:0x1f310,x:2,y:1},{code:0x1f5fa,x:0,y:8},{code:0x1f5fe,x:4,y:8},{code:0x1f9ed,x:12,y:12},{code:0x1f3d4,x:9,y:3},{code:0x26f0,x:14,y:8},{code:0x1f30b,x:11,y:0},{code:0x1f5fb,x:1,y:8},{code:0x1f3d5,x:10,y:3},{code:0x1f3d6,x:11,y:3},{code:0x1f3dc,x:3,y:4},{code:0x1f3dd,x:4,y:4},{code:0x1f3de,x:5,y:4},{code:0x1f3df,x:6,y:4},{code:0x1f3db,x:2,y:4},{code:0x1f3d7,x:12,y:3},{code:0x1f9f1,x:13,y:12},{code:0x1f3d8,x:13,y:3},{code:0x1f3da,x:1,y:4},{code:0x1f3e0,x:7,y:4},{code:0x1f3e1,x:8,y:4},{code:0x1f3e2,x:9,y:4},{code:0x1f3e3,x:10,y:4},{code:0x1f3e4,x:11,y:4},{code:0x1f3e5,x:12,y:4},{code:0x1f3e6,x:13,y:4},{code:0x1f3e8,x:0,y:5},{code:0x1f3e9,x:1,y:5},{code:0x1f3ea,x:2,y:5},{code:0x1f3eb,x:3,y:5},{code:0x1f3ec,x:4,y:5},{code:0x1f3ed,x:5,y:5},{code:0x1f3ef,x:6,y:5},{code:0x1f3f0,x:7,y:5},{code:0x1f492,x:9,y:5},{code:0x1f5fc,x:2,y:8},{code:0x1f5fd,x:3,y:8},{code:0x26ea,x:14,y:7},{code:0x1f54c,x:0,y:6},{code:0x1f54d,x:1,y:6},{code:0x26e9,x:14,y:6},{code:0x1f54b,x:13,y:5},{code:0x26f2,x:14,y:10},{code:0x26fa,x:0,y:14},{code:0x1f301,x:1,y:0},{code:0x1f303,x:3,y:0},{code:0x1f3d9,x:0,y:4},{code:0x1f304,x:4,y:0},{code:0x1f305,x:5,y:0},{code:0x1f306,x:6,y:0},{code:0x1f307,x:7,y:0},{code:0x1f309,x:9,y:0},{code:0x2668,x:14,y:0},{code:0x1f3a0,x:1,y:3},{code:0x1f3a1,x:2,y:3},{code:0x1f3a2,x:3,y:3},{code:0x1f488,x:8,y:5},{code:0x1f3aa,x:5,y:3},{code:0x1f682,x:8,y:8},{code:0x1f683,x:9,y:8},{code:0x1f684,x:10,y:8},{code:0x1f685,x:11,y:8},{code:0x1f686,x:12,y:8},{code:0x1f687,x:13,y:8},{code:0x1f688,x:0,y:9},{code:0x1f689,x:1,y:9},{code:0x1f68a,x:2,y:9},{code:0x1f69d,x:7,y:10},{code:0x1f69e,x:8,y:10},{code:0x1f68b,x:3,y:9},{code:0x1f68c,x:4,y:9},{code:0x1f68d,x:5,y:9},{code:0x1f68e,x:6,y:9},{code:0x1f690,x:8,y:9},{code:0x1f691,x:9,y:9},{code:0x1f692,x:10,y:9},{code:0x1f693,x:11,y:9},{code:0x1f694,x:12,y:9},{code:0x1f695,x:13,y:9},{code:0x1f696,x:0,y:10},{code:0x1f697,x:1,y:10},{code:0x1f698,x:2,y:10},{code:0x1f699,x:3,y:10},{code:0x1f69a,x:4,y:10},{code:0x1f69b,x:5,y:10},{code:0x1f69c,x:6,y:10},{code:0x1f3ce,x:8,y:3},{code:0x1f3cd,x:7,y:3},{code:0x1f6f5,x:4,y:12},{code:0x1f6b2,x:4,y:11},{code:0x1f6f4,x:3,y:12},{code:0x1f6f9,x:7,y:12},{code:0x1f68f,x:7,y:9},{code:0x1f6e3,x:9,y:11},{code:0x1f6e4,x:10,y:11},{code:0x1f6e2,x:8,y:11},{code:0x26fd,x:1,y:14},{code:0x1f6a8,x:3,y:11},{code:0x1f6a5,x:0,y:11},{code:0x1f6a6,x:1,y:11},{code:0x1f6d1,x:6,y:11},{code:0x1f6a7,x:2,y:11},{code:0x2693,x:14,y:1},{code:0x26f5,x:14,y:13},{code:0x1f6f6,x:5,y:12},{code:0x1f3a3,x:4,y:3},{code:0x1f6a4,x:13,y:10},{code:0x1f6f3,x:2,y:12},{code:0x26f4,x:14,y:12},{code:0x1f6e5,x:11,y:11},{code:0x1f6a2,x:12,y:10},{code:0x2708,x:2,y:14},{code:0x1f6e9,x:12,y:11},{code:0x1f6eb,x:13,y:11},{code:0x1f6ec,x:0,y:12},{code:0x1f4ba,x:11,y:5},{code:0x1f681,x:7,y:8},{code:0x1f69f,x:9,y:10},{code:0x1f6a0,x:10,y:10},{code:0x1f6a1,x:11,y:10},{code:0x1f6f0,x:1,y:12},{code:0x1f680,x:6,y:8},{code:0x1f6f8,x:6,y:12},{code:0x1f6ce,x:5,y:11},{code:0x1f9f3,x:0,y:13},{code:0x231b,x:3,y:13},{code:0x23f3,x:7,y:13},{code:0x231a,x:2,y:13},{code:0x23f0,x:4,y:13},{code:0x23f1,x:5,y:13},{code:0x23f2,x:6,y:13},{code:0x1f570,x:12,y:7},{code:0x1f55b,x:13,y:6},{code:0x1f567,x:11,y:7},{code:0x1f550,x:2,y:6},{code:0x1f55c,x:0,y:7},{code:0x1f551,x:3,y:6},{code:0x1f55d,x:1,y:7},{code:0x1f552,x:4,y:6},{code:0x1f55e,x:2,y:7},{code:0x1f553,x:5,y:6},{code:0x1f55f,x:3,y:7},{code:0x1f554,x:6,y:6},{code:0x1f560,x:4,y:7},{code:0x1f555,x:7,y:6},{code:0x1f561,x:5,y:7},{code:0x1f556,x:8,y:6},{code:0x1f562,x:6,y:7},{code:0x1f557,x:9,y:6},{code:0x1f563,x:7,y:7},{code:0x1f558,x:10,y:6},{code:0x1f564,x:8,y:7},{code:0x1f559,x:11,y:6},{code:0x1f565,x:9,y:7},{code:0x1f55a,x:12,y:6},{code:0x1f566,x:10,y:7},{code:0x1f311,x:3,y:1},{code:0x1f312,x:4,y:1},{code:0x1f313,x:5,y:1},{code:0x1f314,x:6,y:1},{code:0x1f315,x:7,y:1},{code:0x1f316,x:8,y:1},{code:0x1f317,x:9,y:1},{code:0x1f318,x:10,y:1},{code:0x1f319,x:11,y:1},{code:0x1f31a,x:12,y:1},{code:0x1f31b,x:13,y:1},{code:0x1f31c,x:0,y:2},{code:0x1f321,x:5,y:2},{code:0x2600,x:8,y:13},{code:0x1f31d,x:1,y:2},{code:0x1f31e,x:2,y:2},{code:0x2b50,x:4,y:14},{code:0x1f31f,x:3,y:2},{code:0x1f320,x:4,y:2},{code:0x1f30c,x:12,y:0},{code:0x2601,x:9,y:13},{code:0x26c5,x:14,y:4},{code:0x26c8,x:14,y:5},{code:0x1f324,x:6,y:2},{code:0x1f325,x:7,y:2},{code:0x1f326,x:8,y:2},{code:0x1f327,x:9,y:2},{code:0x1f328,x:10,y:2},{code:0x1f329,x:11,y:2},{code:0x1f32a,x:12,y:2},{code:0x1f32b,x:13,y:2},{code:0x1f32c,x:0,y:3},{code:0x1f300,x:0,y:0},{code:0x1f308,x:8,y:0},{code:0x1f302,x:2,y:0},{code:0x2602,x:10,y:13},{code:0x2614,x:13,y:13},{code:0x26f1,x:14,y:9},{code:0x26a1,x:14,y:2},{code:0x2744,x:3,y:14},{code:0x2603,x:11,y:13},{code:0x26c4,x:14,y:3},{code:0x2604,x:12,y:13},{code:0x1f525,x:12,y:5},{code:0x1f4a7,x:10,y:5},{code:0x1f30a,x:10,y:0}],\n    \"events\": [{code:0x1f383,x:4,y:0},{code:0x1f384,x:5,y:0},{code:0x1f386,x:6,y:0},{code:0x1f387,x:7,y:0},{code:0x1f9e8,x:5,y:6},{code:0x2728,x:9,y:3},{code:0x1f388,x:8,y:0},{code:0x1f389,x:0,y:1},{code:0x1f38a,x:1,y:1},{code:0x1f38b,x:2,y:1},{code:0x1f38d,x:3,y:1},{code:0x1f38e,x:4,y:1},{code:0x1f38f,x:5,y:1},{code:0x1f390,x:6,y:1},{code:0x1f391,x:7,y:1},{code:0x1f9e7,x:4,y:6},{code:0x1f380,x:2,y:0},{code:0x1f381,x:3,y:0},{code:0x1f397,x:0,y:2},{code:0x1f39f,x:1,y:2},{code:0x1f3ab,x:3,y:2},{code:0x1f396,x:8,y:1},{code:0x1f3c6,x:7,y:3},{code:0x1f3c5,x:6,y:3},{code:0x1f947,x:4,y:5},{code:0x1f948,x:5,y:5},{code:0x1f949,x:6,y:5},{code:0x26bd,x:8,y:8},{code:0x26be,x:9,y:0},{code:0x1f94e,x:2,y:6},{code:0x1f3c0,x:5,y:3},{code:0x1f3d0,x:2,y:4},{code:0x1f3c8,x:8,y:3},{code:0x1f3c9,x:0,y:4},{code:0x1f3be,x:3,y:3},{code:0x1f94f,x:3,y:6},{code:0x1f3b3,x:1,y:3},{code:0x1f3cf,x:1,y:4},{code:0x1f3d1,x:3,y:4},{code:0x1f3d2,x:4,y:4},{code:0x1f94d,x:1,y:6},{code:0x1f3d3,x:5,y:4},{code:0x1f3f8,x:6,y:4},{code:0x1f94a,x:7,y:5},{code:0x1f94b,x:8,y:5},{code:0x1f945,x:3,y:5},{code:0x26f3,x:9,y:1},{code:0x26f8,x:9,y:2},{code:0x1f3bd,x:2,y:3},{code:0x1f3bf,x:4,y:3},{code:0x1f6f7,x:2,y:5},{code:0x1f94c,x:0,y:6},{code:0x1f3af,x:6,y:2},{code:0x1f3b1,x:8,y:2},{code:0x1f52e,x:8,y:4},{code:0x1f9ff,x:1,y:7},{code:0x1f3ae,x:5,y:2},{code:0x1f579,x:0,y:5},{code:0x1f3b0,x:7,y:2},{code:0x1f3b2,x:0,y:3},{code:0x1f9e9,x:6,y:6},{code:0x1f9f8,x:0,y:7},{code:0x2660,x:4,y:8},{code:0x2665,x:6,y:8},{code:0x2666,x:7,y:8},{code:0x2663,x:5,y:8},{code:0x265f,x:3,y:8},{code:0x1f0cf,x:1,y:0},{code:0x1f004,x:0,y:0},{code:0x1f3ad,x:4,y:2},{code:0x1f5bc,x:1,y:5},{code:0x1f3a8,x:2,y:2},{code:0x1f9f5,x:7,y:6},{code:0x1f9f6,x:8,y:6}],\n    \"objects\": [{code:0x1f507,x:1,y:7},{code:0x1f508,x:2,y:7},{code:0x1f509,x:3,y:7},{code:0x1f50a,x:4,y:7},{code:0x1f4e2,x:3,y:5},{code:0x1f4e3,x:4,y:5},{code:0x1f4ef,x:3,y:6},{code:0x1f514,x:1,y:8},{code:0x1f515,x:2,y:8},{code:0x1f3bc,x:2,y:1},{code:0x1f3b5,x:8,y:0},{code:0x1f3b6,x:9,y:0},{code:0x1f399,x:0,y:0},{code:0x1f39a,x:1,y:0},{code:0x1f39b,x:2,y:0},{code:0x1f3a4,x:4,y:0},{code:0x1f3a7,x:6,y:0},{code:0x1f4fb,x:11,y:6},{code:0x1f3b7,x:10,y:0},{code:0x1f3b8,x:11,y:0},{code:0x1f3b9,x:12,y:0},{code:0x1f3ba,x:0,y:1},{code:0x1f3bb,x:1,y:1},{code:0x1f941,x:6,y:11},{code:0x1f4f1,x:5,y:6},{code:0x1f4f2,x:6,y:6},{code:0x260e,x:13,y:3},{code:0x1f4de,x:12,y:4},{code:0x1f4df,x:0,y:5},{code:0x1f4e0,x:1,y:5},{code:0x1f50b,x:5,y:7},{code:0x1f50c,x:6,y:7},{code:0x1f4bb,x:4,y:2},{code:0x1f5a5,x:5,y:9},{code:0x1f5a8,x:6,y:9},{code:0x2328,x:13,y:2},{code:0x1f5b1,x:7,y:9},{code:0x1f5b2,x:8,y:9},{code:0x1f4bd,x:6,y:2},{code:0x1f4be,x:7,y:2},{code:0x1f4bf,x:8,y:2},{code:0x1f4c0,x:9,y:2},{code:0x1f9ee,x:2,y:12},{code:0x1f3a5,x:5,y:0},{code:0x1f39e,x:3,y:0},{code:0x1f4fd,x:0,y:7},{code:0x1f3ac,x:7,y:0},{code:0x1f4fa,x:10,y:6},{code:0x1f4f7,x:7,y:6},{code:0x1f4f8,x:8,y:6},{code:0x1f4f9,x:9,y:6},{code:0x1f4fc,x:12,y:6},{code:0x1f50d,x:7,y:7},{code:0x1f50e,x:8,y:7},{code:0x1f56f,x:12,y:8},{code:0x1f4a1,x:8,y:1},{code:0x1f526,x:5,y:8},{code:0x1f3ee,x:3,y:1},{code:0x1f4d4,x:3,y:4},{code:0x1f4d5,x:4,y:4},{code:0x1f4d6,x:5,y:4},{code:0x1f4d7,x:6,y:4},{code:0x1f4d8,x:7,y:4},{code:0x1f4d9,x:8,y:4},{code:0x1f4da,x:9,y:4},{code:0x1f4d3,x:2,y:4},{code:0x1f4d2,x:1,y:4},{code:0x1f4c3,x:12,y:2},{code:0x1f4dc,x:10,y:4},{code:0x1f4c4,x:0,y:3},{code:0x1f4f0,x:4,y:6},{code:0x1f5de,x:4,y:10},{code:0x1f4d1,x:0,y:4},{code:0x1f516,x:3,y:8},{code:0x1f3f7,x:4,y:1},{code:0x1f4b0,x:9,y:1},{code:0x1f4b4,x:11,y:1},{code:0x1f4b5,x:12,y:1},{code:0x1f4b6,x:0,y:2},{code:0x1f4b7,x:1,y:2},{code:0x1f4b8,x:2,y:2},{code:0x1f4b3,x:10,y:1},{code:0x1f9fe,x:13,y:0},{code:0x1f4b9,x:3,y:2},{code:0x2709,x:1,y:13},{code:0x1f4e7,x:8,y:5},{code:0x1f4e8,x:9,y:5},{code:0x1f4e9,x:10,y:5},{code:0x1f4e4,x:5,y:5},{code:0x1f4e5,x:6,y:5},{code:0x1f4e6,x:7,y:5},{code:0x1f4eb,x:12,y:5},{code:0x1f4ea,x:11,y:5},{code:0x1f4ec,x:0,y:6},{code:0x1f4ed,x:1,y:6},{code:0x1f4ee,x:2,y:6},{code:0x1f5f3,x:6,y:10},{code:0x270f,x:2,y:13},{code:0x2712,x:3,y:13},{code:0x1f58b,x:2,y:9},{code:0x1f58a,x:1,y:9},{code:0x1f58c,x:3,y:9},{code:0x1f58d,x:4,y:9},{code:0x1f4dd,x:11,y:4},{code:0x1f4bc,x:5,y:2},{code:0x1f4c1,x:10,y:2},{code:0x1f4c2,x:11,y:2},{code:0x1f5c2,x:9,y:9},{code:0x1f4c5,x:1,y:3},{code:0x1f4c6,x:2,y:3},{code:0x1f5d2,x:0,y:10},{code:0x1f5d3,x:1,y:10},{code:0x1f4c7,x:3,y:3},{code:0x1f4c8,x:4,y:3},{code:0x1f4c9,x:5,y:3},{code:0x1f4ca,x:6,y:3},{code:0x1f4cb,x:7,y:3},{code:0x1f4cc,x:8,y:3},{code:0x1f4cd,x:9,y:3},{code:0x1f4ce,x:10,y:3},{code:0x1f587,x:0,y:9},{code:0x1f4cf,x:11,y:3},{code:0x1f4d0,x:12,y:3},{code:0x2702,x:0,y:13},{code:0x1f5c3,x:10,y:9},{code:0x1f5c4,x:11,y:9},{code:0x1f5d1,x:12,y:9},{code:0x1f512,x:12,y:7},{code:0x1f513,x:0,y:8},{code:0x1f50f,x:9,y:7},{code:0x1f510,x:10,y:7},{code:0x1f511,x:11,y:7},{code:0x1f5dd,x:3,y:10},{code:0x1f528,x:7,y:8},{code:0x26cf,x:13,y:11},{code:0x2692,x:13,y:4},{code:0x1f6e0,x:3,y:11},{code:0x1f5e1,x:5,y:10},{code:0x2694,x:13,y:5},{code:0x1f52b,x:9,y:8},{code:0x1f3f9,x:5,y:1},{code:0x1f6e1,x:4,y:11},{code:0x1f527,x:6,y:8},{code:0x1f529,x:8,y:8},{code:0x2699,x:13,y:8},{code:0x1f5dc,x:2,y:10},{code:0x2696,x:13,y:6},{code:0x1f517,x:4,y:8},{code:0x26d3,x:13,y:12},{code:0x1f9f0,x:4,y:12},{code:0x1f9f2,x:5,y:12},{code:0x2697,x:13,y:7},{code:0x1f9ea,x:12,y:11},{code:0x1f9eb,x:0,y:12},{code:0x1f9ec,x:1,y:12},{code:0x1f52c,x:10,y:8},{code:0x1f52d,x:11,y:8},{code:0x1f4e1,x:2,y:5},{code:0x1f489,x:6,y:1},{code:0x1f48a,x:7,y:1},{code:0x1f6aa,x:8,y:10},{code:0x1f6cf,x:1,y:11},{code:0x1f6cb,x:0,y:11},{code:0x1f6bd,x:10,y:10},{code:0x1f6bf,x:11,y:10},{code:0x1f6c1,x:12,y:10},{code:0x1f9f4,x:6,y:12},{code:0x1f9f7,x:7,y:12},{code:0x1f9f9,x:8,y:12},{code:0x1f9fa,x:9,y:12},{code:0x1f9fb,x:10,y:12},{code:0x1f9fc,x:11,y:12},{code:0x1f9fd,x:12,y:12},{code:0x1f9ef,x:3,y:12},{code:0x1f6d2,x:2,y:11},{code:0x1f6ac,x:9,y:10},{code:0x26b0,x:13,y:9},{code:0x26b1,x:13,y:10},{code:0x1f5ff,x:7,y:10}],\n    \"signs\": [{code:0x1f6ae,x:4,y:8},{code:0x1f6b0,x:6,y:8},{code:0x267f,x:3,y:13},{code:0x1f6b9,x:11,y:8},{code:0x1f6ba,x:12,y:8},{code:0x1f6bb,x:13,y:8},{code:0x1f6bc,x:14,y:8},{code:0x1f6be,x:0,y:9},{code:0x1f6c2,x:1,y:9},{code:0x1f6c3,x:2,y:9},{code:0x1f6c4,x:3,y:9},{code:0x1f6c5,x:4,y:9},{code:0x1f3e7,x:13,y:4},{code:0x26a0,x:7,y:13},{code:0x1f6b8,x:10,y:8},{code:0x26d4,x:11,y:13},{code:0x1f6ab,x:2,y:8},{code:0x1f6b3,x:8,y:8},{code:0x1f6ad,x:3,y:8},{code:0x1f6af,x:5,y:8},{code:0x1f6b1,x:7,y:8},{code:0x1f6b7,x:9,y:8},{code:0x1f4f5,x:7,y:5},{code:0x1f51e,x:7,y:6},{code:0x2622,x:10,y:11},{code:0x2623,x:11,y:11},{code:0x2b06,x:15,y:5},{code:0x2197,x:14,y:9},{code:0x27a1,x:14,y:14},{code:0x2198,x:0,y:10},{code:0x2b07,x:15,y:6},{code:0x2199,x:1,y:10},{code:0x2b05,x:15,y:4},{code:0x2196,x:13,y:9},{code:0x2195,x:12,y:9},{code:0x2194,x:11,y:9},{code:0x21a9,x:2,y:10},{code:0x21aa,x:3,y:10},{code:0x2934,x:15,y:2},{code:0x2935,x:15,y:3},{code:0x1f503,x:12,y:5},{code:0x1f504,x:13,y:5},{code:0x1f519,x:2,y:6},{code:0x1f51a,x:3,y:6},{code:0x1f51b,x:4,y:6},{code:0x1f51c,x:5,y:6},{code:0x1f51d,x:6,y:6},{code:0x1f6d0,x:5,y:9},{code:0x269b,x:5,y:13},{code:0x1f549,x:14,y:7},{code:0x2721,x:1,y:14},{code:0x2638,x:1,y:12},{code:0x262f,x:0,y:12},{code:0x271d,x:0,y:14},{code:0x2626,x:12,y:11},{code:0x262a,x:13,y:11},{code:0x262e,x:14,y:11},{code:0x1f54e,x:0,y:8},{code:0x1f52f,x:14,y:6},{code:0x2648,x:4,y:12},{code:0x2649,x:5,y:12},{code:0x264a,x:6,y:12},{code:0x264b,x:7,y:12},{code:0x264c,x:8,y:12},{code:0x264d,x:9,y:12},{code:0x264e,x:10,y:12},{code:0x264f,x:11,y:12},{code:0x2650,x:12,y:12},{code:0x2651,x:13,y:12},{code:0x2652,x:14,y:12},{code:0x2653,x:0,y:13},{code:0x26ce,x:10,y:13},{code:0x1f500,x:9,y:5},{code:0x1f501,x:10,y:5},{code:0x1f502,x:11,y:5},{code:0x25b6,x:3,y:11},{code:0x23e9,x:5,y:10},{code:0x23ed,x:9,y:10},{code:0x23ef,x:11,y:10},{code:0x25c0,x:4,y:11},{code:0x23ea,x:6,y:10},{code:0x23ee,x:10,y:10},{code:0x1f53c,x:12,y:7},{code:0x23eb,x:7,y:10},{code:0x1f53d,x:13,y:7},{code:0x23ec,x:8,y:10},{code:0x23f8,x:12,y:10},{code:0x23f9,x:13,y:10},{code:0x23fa,x:14,y:10},{code:0x23cf,x:4,y:10},{code:0x1f3a6,x:11,y:4},{code:0x1f505,x:14,y:5},{code:0x1f506,x:0,y:6},{code:0x1f4f6,x:8,y:5},{code:0x1f4f3,x:5,y:5},{code:0x1f4f4,x:6,y:5},{code:0x2640,x:2,y:12},{code:0x2642,x:3,y:12},{code:0x2716,x:14,y:13},{code:0x2795,x:11,y:14},{code:0x2796,x:12,y:14},{code:0x2797,x:13,y:14},{code:0x267e,x:2,y:13},{code:0x203c,x:6,y:9},{code:0x2049,x:7,y:9},{code:0x2753,x:7,y:14},{code:0x2754,x:8,y:14},{code:0x2755,x:9,y:14},{code:0x2757,x:10,y:14},{code:0x3030,x:15,y:10},{code:0x1f4b1,x:2,y:5},{code:0x1f4b2,x:3,y:5},{code:0x2695,x:4,y:13},{code:0x267b,x:1,y:13},{code:0x269c,x:6,y:13},{code:0x1f531,x:1,y:7},{code:0x1f4db,x:4,y:5},{code:0x1f530,x:0,y:7},{code:0x2b55,x:15,y:9},{code:0x2705,x:12,y:13},{code:0x2611,x:9,y:11},{code:0x2714,x:13,y:13},{code:0x274c,x:5,y:14},{code:0x274e,x:6,y:14},{code:0x27b0,x:15,y:0},{code:0x27bf,x:15,y:1},{code:0x303d,x:15,y:11},{code:0x2733,x:2,y:14},{code:0x2734,x:3,y:14},{code:0x2747,x:4,y:14},{code:0x00a9,x:12,y:0},{code:0x00ae,x:13,y:0},{code:0x2122,x:9,y:9},{code:0x1f520,x:9,y:6},{code:0x1f521,x:10,y:6},{code:0x1f522,x:11,y:6},{code:0x1f523,x:12,y:6},{code:0x1f524,x:13,y:6},{code:0x1f170,x:14,y:0},{code:0x1f18e,x:3,y:1},{code:0x1f171,x:0,y:1},{code:0x1f191,x:4,y:1},{code:0x1f192,x:5,y:1},{code:0x1f193,x:6,y:1},{code:0x2139,x:10,y:9},{code:0x1f194,x:7,y:1},{code:0x24c2,x:0,y:11},{code:0x1f195,x:8,y:1},{code:0x1f196,x:9,y:1},{code:0x1f17e,x:1,y:1},{code:0x1f197,x:10,y:1},{code:0x1f17f,x:2,y:1},{code:0x1f198,x:11,y:1},{code:0x1f199,x:12,y:1},{code:0x1f19a,x:13,y:1},{code:0x1f201,x:10,y:3},{code:0x1f202,x:11,y:3},{code:0x1f237,x:4,y:4},{code:0x1f236,x:3,y:4},{code:0x1f22f,x:13,y:3},{code:0x1f250,x:8,y:4},{code:0x1f239,x:6,y:4},{code:0x1f21a,x:12,y:3},{code:0x1f232,x:14,y:3},{code:0x1f251,x:9,y:4},{code:0x1f238,x:5,y:4},{code:0x1f234,x:1,y:4},{code:0x1f233,x:0,y:4},{code:0x3297,x:15,y:12},{code:0x3299,x:15,y:13},{code:0x1f23a,x:7,y:4},{code:0x1f235,x:2,y:4},{code:0x1f534,x:4,y:7},{code:0x1f535,x:5,y:7},{code:0x26ab,x:9,y:13},{code:0x26aa,x:8,y:13},{code:0x2b1c,x:15,y:8},{code:0x25fc,x:6,y:11},{code:0x25fb,x:5,y:11},{code:0x25fe,x:8,y:11},{code:0x25fd,x:7,y:11},{code:0x25aa,x:1,y:11},{code:0x25ab,x:2,y:11},{code:0x1f536,x:6,y:7},{code:0x1f537,x:7,y:7},{code:0x1f538,x:8,y:7},{code:0x1f539,x:9,y:7},{code:0x1f53a,x:10,y:7},{code:0x1f53b,x:11,y:7},{code:0x1f4a0,x:1,y:5},{code:0x1f518,x:1,y:6},{code:0x1f533,x:3,y:7},{code:0x1f532,x:2,y:7},{code:0x1f3c1,x:12,y:4},{code:0x1f6a9,x:1,y:8},{code:0x1f38c,x:10,y:4},{code:0x1f3f4,x:0,y:5},{code:0x1f3f3,x:14,y:4},{code:0x1f1e6,x:14,y:1},{code:0x1f1e7,x:0,y:2},{code:0x1f1e8,x:1,y:2},{code:0x1f1e9,x:2,y:2},{code:0x1f1ea,x:3,y:2},{code:0x1f1eb,x:4,y:2},{code:0x1f1ec,x:5,y:2},{code:0x1f1ed,x:6,y:2},{code:0x1f1ee,x:7,y:2},{code:0x1f1ef,x:8,y:2},{code:0x1f1f0,x:9,y:2},{code:0x1f1f1,x:10,y:2},{code:0x1f1f2,x:11,y:2},{code:0x1f1f3,x:12,y:2},{code:0x1f1f4,x:13,y:2},{code:0x1f1f5,x:14,y:2},{code:0x1f1f6,x:0,y:3},{code:0x1f1f7,x:1,y:3},{code:0x1f1f8,x:2,y:3},{code:0x1f1f9,x:3,y:3},{code:0x1f1fa,x:4,y:3},{code:0x1f1fb,x:5,y:3},{code:0x1f1fc,x:6,y:3},{code:0x1f1fd,x:7,y:3},{code:0x1f1fe,x:8,y:3},{code:0x1f1ff,x:9,y:3}]\n};\n\nvar getEmoji = function (code) {\n    if (code < 0x10000) {\n        return String.fromCharCode(code);\n    }\n    var offset = code - 0x10000,\n        lead = 0xd800 + (offset >> 10),\n        trail = 0xdc00 + (offset & 0x3ff);\n    return String.fromCharCode(lead)+String.fromCharCode(trail);\n};\n\nvar emoji_data = {}, all = {};\n\nvar getEmojiByIndex = function (idx) {\n    var emoji;\n    for (var emoji_list in raw_data) {\n       if (raw_data[emoji_list][idx]) {\n           emoji = raw_data[emoji_list][idx];\n           break;\n       }\n    }\n    return getEmoji(emoji.code);\n};\n\nfor (var emoji_list in raw_data) {\n    _.each(raw_data[emoji_list], function (item) {\n        var emoji = getEmoji(item.code);\n        emoji_data[emoji] = item;\n        !all[emoji_list] && (all[emoji_list] = []);\n        all[emoji_list].push(emoji);\n    });\n}\n\nvar emoji_regexp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/g;\n\nString.prototype.emojify = function (options) {\n    options || (options = {});\n    var sprite = options.sprite,\n        tag_name = sprite ? (options.tag_name || 'span') : 'img',\n        emoji_size = options.emoji_size || 20,\n        href = options.href ? ` href=\"#${options.href}\" ` :\"\",\n        title = options.title ? ` title=\"${options.title}\" ` :\"\";\n    return this.replace(emoji_regexp, function (emoji) {\n        let data = emoji_data[emoji],\n            emoji_code = data && Number(data.code).toString(16);\n        if (data) {\n            (emoji_code.length < 4) && (emoji_code = \"0\".repeat(4 - emoji_code.length) + emoji_code);\n            let img_src = tag_name === 'img' ? (sprite ? ' src=\"'+ constants.ASSETS_URL_PREFIX + 'assets/images/emoji/blank.gif\"' : '  src=\"' + constants.ASSETS_URL_PREFIX + 'assets/images/emoji/svg32/emoji_u' + emoji_code + '.svg\"') : '';\n            return '<' + tag_name + img_src + href + title + ' class=\"emoji emoji-w' + emoji_size +\n                (sprite ? (' sprite-' + sprite + '\" style=\"background-position: ' + '-' + (emoji_size * data.x) + 'px ' + '-' + (emoji_size * data.y) + 'px;\" ') : '\" ') +\n                'alt=\"' + emoji + '\" ' +\n                'data-emoji=\"' + emoji + '\"/>';\n        }\n        else\n            return emoji;\n    });\n};\n\nString.prototype.removeEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \"\";\n        } else {\n            return emoji;\n        }\n    });\n};\n\nString.prototype.replaceEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \" \";\n        } else {\n            return emoji;\n        }\n    });\n};\n\n$.fn.emojify = function (selector, options) {\n    this.find(selector).each(function () {\n        var text = $(this).html();\n        $(this).html(text.emojify(options));\n    });\n    return this;\n};\n\nexport default {\n    all: all,\n    get: getEmoji,\n    getByIndex: getEmojiByIndex\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$,\n    hasher = deps.SHA1.b64_sha1;\n\nvar _image_cache = {};\n\nvar COLORS = [\n    \"#1abc9c\", \"#16a085\", \"#f1c40f\", \"#f39c12\",\n    \"#2ecc71\", \"#27ae60\", \"#e67e22\", \"#d35400\",\n    \"#3498db\", \"#2980b9\", \"#e74c3c\", \"#c0392b\",\n    \"#9b59b6\", \"#8e44ad\", \"#bdc3c7\", \"#34495e\",\n    \"#2c3e50\", \"#95a5a6\", \"#7f8c8d\", \"#ec87bf\",\n    \"#d870ad\", \"#f69785\", \"#9ba37e\", \"#b49255\",\n    \"#a94136\"\n];\n\nvar MAX_SIZE = 200;\nvar MAX_IMG_SIZE = 1280;\n\nvar b64toBlob = function (b64Data, contentType, sliceSize) {\n    contentType = contentType || '';\n    sliceSize = sliceSize || 512;\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\n        var byteNumbers = new Array(slice.length);\n        for (var i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n        var byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n    var blob = new Blob(byteArrays, {type: contentType});\n    return blob;\n};\n\nvar CachedImage = function (image) {\n    this.url = window.URL.createObjectURL(b64toBlob(image));\n    _image_cache[image] = this;\n    return this;\n};\n\nvar getCachedImage = function (image) {\n    // save often used image and get blob url for it\n    if (image instanceof CachedImage) {\n        return image;\n    } else if (image && (_.isString(image) && image.indexOf('http') == 0 || _.isObject(image) && image.url && image.url.indexOf('http') == 0)) {\n        if (_.isString(image))\n            return {url: image};\n        else if (_.isObject(image))\n            return image;\n    }\n    return _image_cache[image] || new CachedImage(image);\n};\n\nvar getDefaultAvatar = function (name, color, font, width, height) {\n    // generate colored avatar with first letters of username\n    var canvas = document.createElement('canvas'),\n        ctx = canvas.getContext('2d'),\n        _name = name ? name.trim() : '',\n        first_name, last_name, splitted_name = _name.split(' ', 2),\n        first_letter, second_letter;\n        // color_index;\n    first_name = splitted_name[0];\n    last_name = (splitted_name.length > 1 ? splitted_name[1] : '');\n    first_letter = first_name[0] || '';\n    if (last_name) {\n        second_letter = last_name[0];\n    } else {\n        second_letter = (first_name.length > 1 ? first_name[1] : '');\n    }\n    // color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    canvas.width = width || 256;\n    canvas.height = height || 256;\n    ctx.rect(0, 0, width || 256, height || 256);\n    ctx.fillStyle = color || getAccountColor(name);//COLORS[color_index];\n    ctx.fill();\n    ctx.font = font || \"bold 100px sans-serif\";\n    ctx.fillStyle = \"#FFF\";\n    ctx.textAlign = \"center\";\n    if (font){\n        ctx.textBaseline = 'ideographic';\n        ctx.fillText(_name, width/2 || 128, (height/2 + height *0.28) || 160);\n    }\n    else\n        ctx.fillText(first_letter.toUpperCase()+second_letter.toUpperCase(), 128, 160);\n    var image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n    return image;\n};\n\nvar getAccountColor = function (name) {\n    var _name = name ? name.trim() : '',\n        color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    return COLORS[color_index];\n};\n\nvar getImageSize = function (size, max_size) {\n    if (max_size){\n        if (size.width > size.height) {\n            if (size.width > max_size) {\n                size.height *= max_size / size.width;\n                size.width = max_size;\n            }\n        } else {\n            if (size.height > max_size) {\n                size.width *= max_size / size.height;\n                size.height = max_size;\n            }\n        }\n    }\n    return size;\n};\n\nvar compressImage = function (file) {\n    var image_obj = new Image(),\n        src = window.URL.createObjectURL(file),\n        deferred = new $.Deferred();\n    image_obj.onload = function () {\n        image_obj.onload = null;\n        var canvas = document.createElement('canvas'),\n            ctx = canvas.getContext('2d'),\n            width = image_obj.naturalWidth,\n            height = image_obj.naturalHeight,\n            file_type = file.type,\n            file_name = file.name,\n            new_size = getImageSize({width: width, height: height}, MAX_IMG_SIZE);\n        if (file.type === 'image/svg+xml' || file.type.includes('image/gif') || (width < MAX_IMG_SIZE && height < MAX_IMG_SIZE)) {\n            file.width = width;\n            file.height = height;\n            deferred.resolve(file);\n        }\n        canvas.width = new_size.width;\n        canvas.height = new_size.height;\n        ctx.drawImage(image_obj, 0, 0, new_size.width, new_size.height);\n        canvas.toBlob((blob) => {\n            const file = new File([blob], file_name, {\n                type: file_type,\n                lastModified: Date.now()\n            });\n            deferred.resolve(file);\n        }, file_type, 0.8);\n        window.URL.revokeObjectURL(src);\n    };\n    image_obj.onerror = function() {\n        image_obj.onerror = null;\n        window.URL.revokeObjectURL(src);\n        deferred.resolve(false);\n    };\n    image_obj.src = src;\n    return deferred.promise();\n};\n\nvar setCss = function (image_el, cached_image, img_size) {\n    var $image_el = $(image_el),\n        css = {\n            backgroundImage: 'url(\"' + cached_image.url + '\")',\n            backgroundSize: 'cover',\n            backgroundColor: '#FFF'\n        };\n    $image_el.css(css);\n};\n\nvar getCachedBackground = function (base64) {\n    if (base64.indexOf('http') == 0)\n        return base64;\n    return getCachedImage(base64.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')).url;\n};\n\nvar getAvatarFromFile = function (file) {\n    var image_obj = new Image(),\n         src = window.URL.createObjectURL(file),\n         deferred = new $.Deferred();\n     image_obj.onload = function () {\n         image_obj.onload = null;\n         var canvas = document.createElement('canvas'),\n             ctx = canvas.getContext('2d'),\n             width = image_obj.naturalWidth,\n             height = image_obj.naturalHeight,\n             b64_image, hash,\n             new_size = getImageSize({width: width, height: height}, MAX_SIZE);\n         canvas.width = new_size.width;\n         canvas.height = new_size.height;\n         ctx.drawImage(image_obj, 0, 0, canvas.width, canvas.height);\n         b64_image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n         window.URL.revokeObjectURL(src);\n         canvas.toBlob((blob) => {\n             var reader = new FileReader();\n             reader.onload = function () {\n                 b64_image = reader.result.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n                 let binary_file = atob(b64_image),\n                    bytes = new Uint8Array(binary_file.length);\n\n                 for (let i = 0; i < binary_file.length; i++)\n                     bytes[i] = binary_file.charCodeAt(i);\n\n                 hash = sha1(bytes);\n                 deferred.resolve(b64_image, hash, binary_file.length);\n             }.bind(this);\n             reader.readAsDataURL(blob);\n         }, file.type, 0.8);\n     };\n     image_obj.onerror = function() {\n         image_obj.onerror = null;\n         window.URL.revokeObjectURL(src);\n         deferred.resolve(false, false, false);\n     };\n     image_obj.src = src;\n     return deferred.promise();\n};\n\n$.fn.setAvatar = function (image, size) {\n    var cached_image = getCachedImage(image);\n    setCss(this, cached_image, size);\n};\n\nexport default {\n    getCachedImage: getCachedImage,\n    getBlobImage: b64toBlob,\n    getDefaultAvatar: getDefaultAvatar,\n    getAvatarFromFile: getAvatarFromFile,\n    getDefaultColor: getAccountColor,\n    getCachedBackground: getCachedBackground,\n    compressImage: compressImage\n};\n","import deps from \"xabber-dependencies\"\nimport templates from \"xabber-templates\";\nimport constants from \"xabber-constants\";\n\nvar _ = deps._,\n    $ = deps.$;\n\nvar $modal_container = $('<div>').attr('id', 'modals').appendTo(constants.CONTAINER_ELEMENT);\nvar modal_queue = [];\n\nvar Modal = function (modal_constructor, options) {\n    if (modal_constructor instanceof Function) {\n        this.$modal = $(modal_constructor());\n    } else {\n        this.$modal = $(modal_constructor);\n    }\n    this.options = options || {};\n    this.closed = new $.Deferred();\n};\n\nlet getString = function (id, params) {\n    if (deps.xabber_i18next.exists(id)) {\n        return deps.xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else if (deps.xabber_i18next.default_lang) {\n        return deps.xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else\n        return \"\";\n};\n\n_.extend(Modal.prototype, {\n    open: function (options) {\n        if (this.options.use_queue) {\n            modal_queue.push(this);\n            (modal_queue.length === 1) && this.throw();\n        } else {\n            this.throw();\n        }\n        setTimeout(() => {\n            document.addEventListener(\"keyup\", this.clickHandler.bind(this));\n        }, 500);\n        return this.closed.promise();\n    },\n\n    throw: function () {\n        this.$modal.appendTo($('#modals')).prop('modal', this);\n        var modal_options = _.omit(this.options, ['use_queue']);\n        _.extend(modal_options, {\n            is_default_complete: true,\n            complete_data: null\n        });\n\n        if (this.options.use_queue) {\n            this.$modal.one('modal_close', function (ev, data) {\n                this.$modal.detach();\n                this.closed.resolve(data.value);\n                modal_queue.shift();\n                modal_queue.length && modal_queue[0].throw();\n            }.bind(this));\n        }\n\n        this.$modal._openModal(modal_options);\n    },\n\n    close: function (options) {\n        var modal_options = _.omit(options, ['use_queue', 'is_default_complete', 'complete_data']);\n        _.extend(modal_options, {\n            complete: function () {\n                if (this.options.use_queue) {\n                    var data = _.isUndefined(options.complete_data) ? null : options.complete_data;\n                    this.complete(data);\n                }\n                if (options.is_default_complete) {\n                    if (typeof(this.options.complete) === \"function\") {\n                        this.options.complete();\n                    }\n                } else {\n                    if (this.options.use_queue) {\n                        this.complete();\n                    }\n                    if (typeof(options.complete) === \"function\") {\n                        options.complete();\n                    }\n                }\n            }.bind(this)\n        });\n\n        this.$modal.prop('modal', null);\n        this.$modal._closeModal(modal_options);\n    },\n\n    complete: function (value) {\n        document.removeEventListener(\"keyup\", this.clickHandler);\n        this.$modal.trigger('modal_close', {value: value});\n    },\n\n    clickHandler: function (ev) {\n        if (ev.keyCode === 13) {\n            this.$modal.find('.modal-footer button.ok-button').click();\n            ev.preventDefault();\n        }\n    }\n});\n\n$.fn._openModal = $.fn.openModal;\n\n$.fn.openModal = function (options) {\n    var modal = new Modal(this, options);\n    return modal.open();\n};\n\n$.fn._closeModal = $.fn.closeModal;\n\n$.fn.closeModal = function (options) {\n    var modal = this.prop('modal');\n    if (modal) {\n        modal.close(options);\n    } else {\n        this._closeModal(options);\n    }\n};\n\nexport default {\n    Modal: Modal,\n\n    clear_queue: function () {\n        modal_queue = [];\n    },\n\n    dialogs: {\n        common: function (header, text, buttons, dialog_options, flag, modal_class) {\n            var dialog = new Modal(function () {\n                buttons || (buttons = {});\n                dialog_options || (dialog_options = []);\n                var ok_button = buttons.ok_button,\n                    cancel_button = buttons.cancel_button,\n                    optional_buttons = (buttons.optional_buttons || []).reverse();\n                ok_button && (ok_button = {text: ok_button.text || getString(\"ok\")});\n                cancel_button && (cancel_button = {text: cancel_button.text || getString(\"cancel\")});\n                return templates.base.dialog({\n                    header: header,\n                    text: text,\n                    ok_button: ok_button,\n                    cancel_button: cancel_button,\n                    optional_buttons: optional_buttons,\n                    dialog_options: dialog_options,\n                    flag: flag || \"\",\n                    modal_class: modal_class || \"\"\n                });\n            }, {use_queue: true});\n\n            if (dialog_options.modal_class) {\n                dialog.$modal.addClass(dialog_options.modal_class)\n            }\n\n            if (dialog_options.no_dialog_options) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n            }\n            if (dialog_options.inverted_buttons) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n                dialog.$modal.find('.ok-button').addClass('btn-dark');\n                dialog.$modal.find('.modal-footer').addClass('inverted-buttons');\n            }\n\n            if (dialog_options.img_details) {\n                dialog.$modal.find('.modal-content').append('<div class=\"modal-images-details\"/>').append('<div class=\"modal-images-details-btn btn-flat btn-dark btn-main\"/>');\n                dialog.$modal.find('.modal-images-details-btn').text(xabber.getString(\"details\"));\n                dialog.$modal.find('.modal-images-details').append('<div class=\"image-details-container hidden\"/>');\n                dialog.$modal.find('.image-details-container').html(dialog_options.img_details);\n                dialog.$modal.find('.modal-images-details-btn').click(function () {\n                    dialog.$modal.find('.image-details-container').switchClass('hidden', !dialog.$modal.find('.image-details-container').hasClass('hidden'));\n                });\n            }\n\n            if (dialog_options.blob_image_from_clipboard) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.img-from-clipboard')[0].src = dialog_options.blob_image_from_clipboard;\n                dialog.$modal.find('.container-for-img').removeClass('hidden');\n            }\n\n            if (dialog_options.canvas) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.container-for-img').html(\"\").removeClass('hidden')[0].appendChild(dialog_options.canvas);\n                if (dialog_options.bottom_text)\n                    $('<div class=\"dialog-bottom-text\"/>').html(dialog_options.bottom_text).appendTo(dialog.$modal.find('.container-for-img'));\n            }\n\n            if (dialog_options.escape_button) {\n                dialog.$modal.find('.modal-header').append('<i class=\"close-modal mdi mdi-close mdi-24px\"></i>');\n            }\n\n            if (dialog_options.input_placeholder_value || dialog_options.input_value) {\n                dialog.$modal.find('.dialog-options-wrap').html($('<input type=\"text\" placeholder=\"' + dialog_options.input_placeholder_value + '\" id=\"user_value\"/>').val(dialog_options.input_value));\n            }\n\n            dialog.$modal.find('.modal-footer button').click(function (ev) {\n                var option = $(ev.target).data('option'),\n                    $options = dialog.$modal.find('.dialog-option'),\n                    user_value_input = dialog.$modal.find('#user_value');\n                if (option && $options.length) {\n                    var result = {};\n                    _.each($options, function (item) {\n                        var $item = $(item);\n                        result[$item.data('name')] = $item.find('input').prop('checked');\n                    });\n                    dialog.close({complete_data: result});\n                } else {\n                    if (user_value_input.length) {\n                        if ($(ev.target).hasClass('btn-cancel')) {\n                            dialog.close({complete_data: false});\n                        } else if ($(ev.target).hasClass('optional-button')) {\n                            dialog.close({complete_data: option});\n                        }\n                        else {\n                            var user_value = user_value_input.val();\n                            dialog.close({complete_data: user_value});\n                        }\n                    }\n                    else\n                        dialog.close({complete_data: option});\n                }\n            });\n\n            dialog.$modal.find('.modal-header .close-modal').click(function () {\n                    dialog.close({complete_data: false});\n            });\n\n            return dialog.open();\n        },\n\n        warning: function (text, dialog_options) {\n            return this.common(getString(\"warning\"), text, {ok_button: true}, dialog_options);\n        },\n\n        error: function (text, dialog_options, header) {\n            return this.common(header || getString(\"xabber_account__login__dialog_error__header\"), text, {ok_button: true}, dialog_options);\n        },\n\n        ask: function (header, text, dialog_options, buttons, flag) {\n            var ok_text, cancel_text;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}}, dialog_options, flag);\n        },\n\n        ask_extended: function (header, text, dialog_options, buttons) {\n            var ok_text, optional_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                optional_button = (buttons.optional_button) ? [{value: buttons.optional_button, name: buttons.optional_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: true, optional_buttons: optional_button}, dialog_options, 'extended');\n        },\n\n        ask_enter_value: function (header, text, dialog_options, buttons) {\n            var ok_text, resend_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                resend_button = (buttons.resend_button_text) ? [{value: buttons.resend_to, name: buttons.resend_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, optional_buttons: resend_button, cancel_button: true}, dialog_options);\n        },\n\n        notify: function (header, text) {\n            return this.common(header, text, {ok_button: true});\n        }\n    }\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$;\n\n$.fn.placeCaretAtEnd = function () {\n    if (!this.length) {\n        return this;\n    }\n    var el = this[0];\n    el.focus();\n    if (!_.isUndefined(window.getSelection) && !_.isUndefined(document.createRange)) {\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        range.collapse(false);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    } else if (!_.isUndefined(document.body.createTextRange)) {\n        var textRange = document.body.createTextRange();\n        textRange.moveToElementText(el);\n        textRange.collapse(false);\n        textRange.select();\n    }\n    return this;\n};\n\n$.fn.updateRichTextarea = function () {\n    var text = this.getTextFromRichTextarea();\n    if (!text) {\n        this.html('');\n    }\n    return this;\n};\n\n$.fn.flushRichTextarea = function () {\n    this.html('');\n    return this;\n};\n\n$.fn.pasteHtmlAtCaret = function (html) {\n    var sel, range;\n    this[0].focus();\n    if (window.getSelection) {\n        // IE9 and non-IE\n        sel = window.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n\n            // Range.createContextualFragment() would be useful here but is\n            // non-standard and not supported in all browsers (IE9, for one)\n            var el = document.createElement(\"div\");\n            el.innerHTML = html;\n            var frag = document.createDocumentFragment(), node, lastNode;\n            while ( (node = el.firstChild) ) {\n                lastNode = frag.appendChild(node);\n            }\n            range.insertNode(frag);\n\n            // Preserve the selection\n            if (lastNode) {\n                range = range.cloneRange();\n                range.setStartAfter(lastNode);\n                range.collapse(true);\n                sel.removeAllRanges();\n                sel.addRange(range);\n            }\n        }\n    } else if (document.selection && document.selection.type != \"Control\") {\n        // IE < 9\n        document.selection.createRange().pasteHTML(html);\n    }\n    return this;\n};\n\n$.fn.getTextFromRichTextarea = function () {\n    var $div = $('<div>').html(this.html());\n    $div.find('.emoji').each(function () {\n        $(this).replaceWith($(this).data('emoji'));\n    });\n    $div.find('p').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });\n    /*$div.find('blockquote').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });*/\n    $div.find('span').each(function () {\n        $(this).replaceWith($(this).html());\n    });\n    $div.find('div').each(function () {\n        var $this = $(this);\n        $this.find('br').remove();\n        var html = $this.html();\n        if ($this.hasClass('emoji'))\n            $this.replaceWith(html);\n        else\n            $this.replaceWith('\\n'+html);\n    });\n    /*$div.find('br').each(function () {\n        $(this).replaceWith('\\n');\n    });*/\n    return $div.text();\n};\n\nexport default null;\n","import deps from \"xabber-dependencies\";\nimport emoji from \"xabber-emoji-utils\";\nimport images from \"xabber-image-utils\";\nimport modals from \"xabber-modal-utils\";\nimport constants from \"xabber-constants\";\nimport textarea from \"xabber-textarea-utils\";\n\nvar $ = deps.$,\n    _ = deps._,\n    moment = deps.moment;\n\n// jQuery extensions\n$.fn.switchClass = function (klass, condition) {\n    if (arguments.length === 1) {\n        condition = !this.hasClass(klass);\n    }\n    if (condition) {\n        this.addClass(klass);\n    } else {\n        this.removeClass(klass);\n    }\n    return this;\n};\n\n$.fn.showIf = function (condition) {\n    return this.switchClass('hidden', !condition);\n};\n\n$.fn.hideIf = function (condition) {\n    return this.switchClass('hidden', condition);\n};\n\n$.fn.isVisibleInViewport = function() {\n    let elementTop = $(this).offset().top,\n        elementBottom = elementTop + $(this).outerHeight();\n\n    let viewportTop = $(window).scrollTop(),\n        viewportBottom = viewportTop + $(window).height();\n\n    return elementBottom > viewportTop && elementTop < viewportBottom;\n};\n\n$.fn.isVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        (eleTop >= containerTop && eleBottom <= containerBottom) ||\n        // Some part of the element is visible in the container\n        (eleTop < containerTop && containerTop < eleBottom) ||\n        (eleTop < containerBottom && containerBottom < eleBottom)\n    );\n};\n\n$.fn.isFullyVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleTop >= containerTop && eleBottom <= containerBottom\n    );\n};\n\n$.fn.isBottomVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleBottom <= containerBottom\n    );\n};\n\nvar getHyperLink = function (url) {\n    var prot = (url.indexOf('http://') === 0 ||  url.indexOf('https://') === 0) ? '' : 'http://',\n        escaped_url = \"\";\n    try {\n        escaped_url = encodeURI(decodeURI(url)).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\n    }\n    catch (e) {\n        escaped_url = url;\n    }\n    try {\n        url = decodeURI(url);\n    }\n    catch (e) {}\n    return \"<a target='_blank' class='msg-hyperlink' href='\"+prot+escaped_url + \"'>\"+url+\"</a>\";\n};\n\n$.fn.hyperlinkify = function (options) {\n    options || (options = {});\n    var $query = options.selector ? this.find(options.selector) : this;\n    $query.each(function (i, obj) {\n        var $obj = $(obj),\n            html_concat = \"\",\n            url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            // url_regexp = /((((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)|((\\b)((\\w+)([\\w#!:.?+=&%@!\\-\\/])(\\w+))?(\\.net|\\.edu|\\.cloud|\\.top|\\.vip|\\.cash|\\.im|\\.online|\\.chat|\\.com|\\.org|\\.ru|\\.travel|\\.info|\\.tv|\\.biz|\\.mobi|\\.tel|\\.ar|\\.al|\\.asia|\\.np|\\.ng|\\.io|\\.bb|\\.br|\\.ca|\\.tr|\\.co|\\.ec|\\.fr|\\.ht|\\.in|\\.eg|\\.ie|\\.et|\\.jo|\\.mr|\\.id|\\.iq|\\.nl|\\.ps|\\.ph|\\.sl|\\.si|\\.se|\\.af|\\.ag|\\.be|\\.bd|\\.bg|\\.cl|\\.cd|\\.my|\\.mz|\\.mx|\\.cz|\\.eu|\\.dz|\\.de|\\.hk|\\.it|\\.la|\\.no|\\.pl|\\.ro|\\.sg|\\.ke|\\.kr|\\.ch|\\.ug|\\.us|\\.ve|\\.vn|\\.at|\\.bo|\\.cm|\\.cn|\\.cg|\\.dk|\\.fi|\\.gr|\\.gh|\\.is|\\.ir|\\.jp|\\.lv|\\.ma|\\.me|\\.pk|\\.pe|\\.pt|\\.sa|\\.sk|\\.es|\\.tz|\\.tw|\\.ua|\\.uz|\\.ye)((\\/\\w+)|(\\S+)|\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/g;\n        $obj[0].childNodes.forEach(function (node) {\n            let $node = $(node),\n                x = node.outerHTML;\n            if (node.tagName === 'A') {\n                html_concat += x;\n                return;\n            }\n            else {\n                if (node.nodeName === '#text')\n                    x = _.escape($node.text());\n                let list = x && x.match(url_regexp);\n                list = Array.from(new Set(list));\n                if (!list) {\n                    html_concat += x;\n                    return;\n                }\n                if (list.length === 1 && list[0] === x) {\n                    html_concat += options.decode_uri ? decodeURI(x) : getHyperLink(x);\n                } else {\n                    for (i = 0; i < list.length; i++) {\n                        if (options.decode_uri)\n                            x = x.replace(list[i], decodeURI(list[i]));\n                        else\n                            x = x.replaceAll(new RegExp(`(\\\\s|^)(${list[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`,\"g\"), '$1' + getHyperLink(list[i]));\n                    }\n                    html_concat += x;\n                }\n            }\n        }.bind(this));\n        $obj.html(html_concat);\n    });\n    return this;\n};\n\nvar utils = {\n    uuid: function () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0,\n                v = c == 'x' ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n    },\n\n    utoa: function (str) {\n        return window.btoa(_.unescape(encodeURIComponent(str)));\n    },\n\n    atou: function (str) {\n        return decodeURIComponent(_.escape(window.atob(str)));\n    },\n\n    now: function () {\n        return Math.floor(moment.now() / 1000);\n    },\n\n    pretty_time: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format('HH:mm:ss');\n    },\n\n    pretty_date: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'dddd, MMMM D, YYYY');\n    },\n\n    pretty_datetime: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'MMMM D, YYYY HH:mm:ss');\n    },\n\n    pretty_short_datetime_recent_chat: function (timestamp) {\n        timestamp = Number(timestamp ? moment(timestamp) : moment());\n        if (moment(timestamp).startOf('day').isSame(moment().startOf('day')) || Number(moment().subtract(12, 'hours') < timestamp)) {\n            return moment(timestamp).format(\"HH:mm:ss\");\n        }\n        if (Number(moment().subtract(12, 'hours')) > timestamp && Number(moment().subtract(7, 'days')) <= timestamp) {\n            return moment(timestamp).format(\"ddd\");\n        }\n        if (Number(moment().subtract(7, 'days')) > timestamp && Number(moment().subtract(1, 'year')) <= timestamp) {\n            return moment(timestamp).format(\"MMM D\");\n        }\n        if (timestamp && Number(moment().subtract(1, 'year')) > timestamp) {\n            return moment(timestamp).format(\"D MMM YYYY\");\n        }\n    },\n\n    pretty_short_datetime: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day'),\n            year = moment(datetime).startOf('year');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else if (year.isSame(moment().startOf('year'))) {\n            return datetime.format('MMM D');\n        } else {\n            return datetime.format('DD/MM/gg');\n        }\n    },\n\n    pretty_short_month_date: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else {\n            return datetime.format('MMM D, YYYY HH:mm:ss');\n        }\n    },\n\n    isImageType: function(type) {\n        if (type.indexOf('image') > -1 && !(type.indexOf('application') > -1))\n            return true;\n        else\n            return false;\n    },\n\n    tryReadingFile: function(file) {\n        return new Promise((resolve, reject) => {\n            let r = new FileReader();\n            r.onload = (e) => {\n                resolve();\n            };\n            r.onerror = (e) => {\n                console.log(r.error);\n                reject(r.error);\n            };\n            r.readAsDataURL(file)\n        });\n    },\n\n    getDomainFromUrl: function(url) {\n        let a = document.createElement('a');\n        if (url && !/^https?:\\/\\//i.test(url))\n            url = 'http://' + url;\n        a.href = url;\n        return a.hostname;\n    },\n\n    isVideoType: function(type) {\n        if (type.indexOf('video') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    file_type_icon: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'mdi-image';\n        if (filetype === 'audio')\n            return 'mdi-music-note';\n        if (filetype === 'video')\n            return 'mdi-filmstrip';\n        if (filetype === 'document')\n            return 'mdi-file-document-box';\n        if (filetype === 'presentation')\n            return 'mdi-presentation';\n        if (filetype === 'archive')\n            return 'mdi-zip-box';\n        if (filetype === 'file')\n            return 'mdi-file';\n        if (filetype === 'pdf')\n            return 'mdi-file-pdf';\n        return 'mdi-file'\n    },\n\n    file_type_icon_svg: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'image';\n        if (filetype === 'audio')\n            return 'file-audio';\n        if (filetype === 'video')\n            return 'file-video';\n        if (filetype === 'document')\n            return 'file-document';\n        if (filetype === 'presentation')\n            return 'file-presentation';\n        if (filetype === 'archive')\n            return 'file-zip';\n        if (filetype === 'file')\n            return 'file';\n        if (filetype === 'pdf')\n            return 'file-pdf';\n        return 'file'\n    },\n\n    pretty_file_type: function (mime_type) {\n        if (constants.MIME_TYPES.image.includes(mime_type))\n            return 'image';\n        if (constants.MIME_TYPES.audio.includes(mime_type))\n            return 'audio';\n        if (constants.MIME_TYPES.video.includes(mime_type))\n            return 'video';\n        if (constants.MIME_TYPES.document.includes(mime_type))\n            return 'document';\n        if (constants.MIME_TYPES.pdf.includes(mime_type))\n            return 'pdf';\n        if (constants.MIME_TYPES.presentation.includes(mime_type))\n            return 'presentation';\n        if (constants.MIME_TYPES.archive.includes(mime_type))\n            return 'archive';\n        if (constants.MIME_TYPES.table.includes(mime_type))\n            return 'electronic table';\n        return 'file';\n    },\n\n    pretty_file_type_with_article: function (mime_type) {\n        let type = utils.pretty_file_type(mime_type),\n            vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n        (type === 'pdf') && (type = 'document');\n        if (vowels.includes(type[0]))\n            return 'an ' + type;\n        else\n            return 'a ' + type;\n    },\n\n    pretty_size: function (size) {\n        if (!size)\n            return \"\";\n        if (_.isNaN(Number(size)))\n            return size;\n        if (size < 1024) {\n            return size+' B';\n        } else if (size < 1048576) {\n            return (size/1024).toFixed(2)+' KiB';\n        } else if (size < 1073741824) {\n            return (size/1048576).toFixed(2)+' MiB';\n        } else {\n            return (size/1073741824).toFixed(2)+' GiB';\n        }\n    },\n\n    pretty_duration: function (duration) {\n        if (_.isNaN(Number(duration)))\n            return duration;\n        if (_.isUndefined(duration) || duration === \"\")\n            return \"\";\n        if (duration < 10)\n            return (\"0:0\" + duration);\n        if (duration < 60)\n            return (\"0:\" + duration);\n        if (duration >= 60)\n            return (Math.trunc(duration/60) + \":\" + ((duration%60 < 10) ? (\"0\" + (duration%60)) : duration%60));\n    },\n\n    pretty_name: function (name) {\n        return name ? (name[0].toUpperCase() + name.replace(/-/,' ').substr(1).toLowerCase()) : \"\";\n    },\n\n    getKeyByValue: function (object, value) {\n        return Object.keys(object).find(key => object[key] === value);\n    },\n\n    slice_string: function (str, from, to) {\n        to = _.isNumber(to) ? to : [...str].length;\n        if (str.length === [...str].length)\n            return str.slice(from, to);\n        else\n            return Array.from(str).slice(from, to).join(\"\");\n    },\n\n    slice_pretty_body: function (body, mutable_refs) {\n        if (!mutable_refs || !mutable_refs.length)\n            return body;\n        body = body || \"\";\n        mutable_refs = mutable_refs.filter(m => m.type === 'groupchat' || m.type === 'forward');\n        let pretty_body = Array.from(deps.Strophe.xmlescape(body));\n        mutable_refs && mutable_refs.forEach(function (ref) {\n            for (let idx = ref.start; idx < ref.end; idx++)\n                pretty_body[idx] = \"\";\n        }.bind(this));\n        return deps.Strophe.xmlunescape(pretty_body.join(\"\").trim());\n    },\n\n    markupBodyMessage: function (message, mention_tag) {\n        let attrs = _.clone(message.attributes),\n            mentions = attrs.mentions || [],\n            markups = attrs.markups || [],\n            mutable_refs = attrs.mutable_content || [],\n            blockquotes = attrs.blockquotes || [],\n            markup_body = Array.from(deps.Strophe.xmlescape(attrs.original_message || attrs.message || \"\"));\n        !mention_tag && (mention_tag = 'span');\n\n        mutable_refs.forEach(function (muted) {\n            for (let idx = muted.start; idx < muted.end; idx++)\n                markup_body[idx] = \"\";\n        }.bind(this));\n\n        mentions.forEach(function (mention) {\n            let start_idx = mention.start,\n                end_idx = mention.end > (markup_body.length - 1) ? (markup_body.length - 1) : (mention.end - 1), target = mention.target;\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (mention.is_gc) {\n                let id = target.match(/\\?id=\\w*/),\n                    jid = target.match(/\\?jid=.*/);\n                if (id)\n                    target = id[0].slice(4);\n                else if (jid)\n                    target = jid[0].slice(5);\n                else {\n                    target = \"\";\n                    mention.me = true;\n                }\n            }\n            else\n                target = target.slice(5);\n            if (mention_tag === 'mention'){\n                markup_body[start_idx] = '<' + mention_tag + ' data-target=\"?jid=' + target + '\">' + markup_body[start_idx];\n                markup_body[end_idx] += '</' + mention_tag + '>';\n                return;\n            }\n            markup_body[start_idx] = '<' + mention_tag + ' data-target=\"' + target + '\" class=\"mention' + (mention.me ? ' ground-color-100' : '') + '\">' + markup_body[start_idx];\n            markup_body[end_idx] += '</' + mention_tag + '>';\n        }.bind(this));\n\n        markups.forEach(function (markup) {\n            let start_idx = markup.start,\n                end_idx = markup.end > (markup_body.length - 1) ? (markup_body.length - 1) : (markup.end - 1);\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (markup.markup.length) {\n                let start_tags = \"\",\n                    end_tags = \"\";\n                markup.markup.forEach(function (mark_up_style) {\n                    if (typeof(mark_up_style) === 'object') {\n                        start_tags = '<a target=\"_blank\" class=\"msg-hyperlink\" href=\"' + mark_up_style.uri + '\">' + start_tags;\n                        end_tags += '</a>';\n                    } else {\n                        start_tags = '<' + mark_up_style[0].toLowerCase() + '>' + start_tags;\n                        end_tags += '</' + mark_up_style[0].toLowerCase() + '>';\n                    }\n                }.bind(this));\n                markup_body[start_idx] = start_tags + markup_body[start_idx];\n                markup_body[end_idx] += end_tags;\n            }\n        }.bind(this));\n\n        blockquotes.forEach(function (quote) {\n            let end_idx = quote.end > (markup_body.length - 1) ? (markup_body.length - 1) : (quote.end - 1);\n            for (let idx = quote.start; idx < (quote.start + constants.QUOTE_MARKER.length); idx++) {\n                if (idx === end_idx)\n                    markup_body[idx] = '<br>';\n                else\n                    markup_body[idx] = \"\";\n\n            }\n            for (let idx = quote.start; idx < end_idx; idx++) {\n                if (markup_body[idx] === '\\n') {\n                    for (let child_idx = idx + 1; child_idx <= (idx + constants.QUOTE_MARKER.length); child_idx++)\n                        markup_body[child_idx] = \"\";\n                    idx+= constants.QUOTE_MARKER.length - 1;\n                }\n            }\n            if (mention_tag === 'mention'){\n                markup_body[quote.start] = '<blockquote>';\n                markup_body[end_idx] += '</blockquote>';\n                return;\n            }\n            markup_body[quote.start] = '<div class=\"quote\">';\n            markup_body[end_idx] += '</div>';\n        }.bind(this));\n\n        return markup_body.join(\"\").trim();\n    },\n\n    getOS: function() {\n        let platform = window.navigator.platform,\n            macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n            windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n            os = null;\n\n        if (macosPlatforms.indexOf(platform) !== -1) {\n            os = 'mac OS';\n        } else if (windowsPlatforms.indexOf(platform) !== -1) {\n            os = 'Windows';\n        } else if (!os && /Linux/.test(platform)) {\n            os = 'Linux';\n        }\n\n        return os;\n    },\n\n    isOverflownWidth: function(element) {\n        return element.scrollWidth > element.clientWidth;\n    },\n\n    isOverflownHeight: function(element) {\n        return element.scrollHeight > element.clientHeight;\n    },\n\n    render_data_form: function (data_form) {\n        let $data_form = $('<div class=\"data-form\"/>');\n        data_form.fields.forEach(function (field) {\n            if (field.type === 'hidden')\n                return;\n            if (field.type === 'fixed') {\n                let $fixed_field = $('<div class=\"data-form-field fixed-field\"/>');\n                field.label && $fixed_field.append($('<div class=\"label\"/>').text(field.label));\n                field.values.forEach(function (value) {\n                    let $input = $('<div class=\"value\"/>').text(value);\n                    $fixed_field.append($input);\n                }.bind(this));\n                $data_form.append($fixed_field);\n            }\n            if (field.type === 'boolean') {\n                let $input = $(`<button id=${field.var} class=\"data-form-field ground-color-100 btn-dark btn-flat btn-main boolean-field\"/>`).text(field.label);\n                $data_form.append($input);\n            }\n        }.bind(this));\n        return $data_form;\n    },\n\n    copyTextToClipboard: function(text, callback_msg, errback_msg) {\n        if (!window.navigator.clipboard) {\n            return;\n        }\n        window.navigator.clipboard.writeText(text).then(function() {\n            if (callback_msg) {\n                let info_msg = callback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this), function() {\n            if (errback_msg) {\n                let info_msg = errback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this));\n    },\n\n    callback_popup_message: function (info_msg, time) {\n        let $body = $(document.body),\n            $popup_msg = $('<div class=\"callback-popup-message\"/>').text(info_msg);\n        time = time || 3000;\n        $body.find('.callback-popup-message').remove();\n        $body.append($popup_msg);\n        setTimeout( function() {\n            $popup_msg.remove();\n        }, time);\n    },\n\n    emoji_size: function (count) {\n        let size;\n        switch (count) {\n            case 1:\n                size = 56;\n                break;\n            case 2:\n                size = 44;\n                break;\n            case 3:\n                size = 32;\n                break;\n            case 4:\n                size = 24;\n                break;\n            case 5:\n                size = 22;\n                break;\n            default:\n                size = 20;\n                break;\n        }\n        return size;\n    },\n\n    openWindow: function (url, errback) {\n        let win = window.open(url, '_blank');\n        if (win) {\n            win.focus();\n        } else {\n            errback && errback();\n        }\n    },\n\n    clearSelection: function () {\n        var selection = window.getSelection();\n        if (selection.empty) {\n            selection.empty();\n        } else if (selection.removeAllRanges) {\n            selection.removeAllRanges();\n        }\n    },\n\n    getCookie: function (name) {\n        let matches = window.document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n    },\n\n    isMobile: {\n        Android: function () {\n            return navigator.userAgent.match(/Android/i);\n        },\n        BlackBerry: function () {\n            return navigator.userAgent.match(/BlackBerry/i);\n        },\n        iOS: function () {\n            return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n        },\n        Opera: function () {\n            return navigator.userAgent.match(/Opera Mini/i);\n        },\n        Windows: function () {\n            return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);\n        },\n        any: function () {\n            return (this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows());\n        }\n    },\n\n    fromBase64toArrayBuffer: function (b64_string) {\n        return Uint8Array.from(atob(b64_string), c => c.charCodeAt(0)).buffer;\n    },\n\n    ArrayBuffertoBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    generateHOTPKey: async function(secret, counter) {\n        let Crypto = window.crypto.subtle;\n        let counterArray = this.padCounter(counter);\n\n        let key = await Crypto.importKey(\n            'raw',\n            secret,\n            { name: 'HMAC', hash: { name: 'SHA-1' } },\n            false,\n            ['sign']\n        );\n\n        let HS = await Crypto.sign('HMAC', key, counterArray);\n\n        return HS;\n    },\n\n    padCounter: function(counter) {\n        let buffer = new ArrayBuffer(8);\n        let bView = new DataView(buffer);\n\n        let byteString = '0'.repeat(64); // 8 bytes\n        let bCounter = (byteString + counter.toString(2)).slice(-64);\n\n        for (let byte = 0; byte < 64; byte += 8) {\n            let byteValue = parseInt(bCounter.slice(byte, byte + 8), 2);\n            bView.setUint8(byte / 8, byteValue);\n        }\n\n        return buffer;\n    },\n\n    DT: function(HS) {\n        let offset = HS[19] & 0b1111;\n        let P = ((HS[offset] & 0x7f) << 24) | (HS[offset + 1] << 16) | (HS[offset + 2] << 8) | HS[offset + 3]\n        let pString = P.toString(2);\n\n        return pString;\n    },\n\n    truncate: function(uKey) {\n        let Sbits = this.DT(uKey);\n        let Snum = parseInt(Sbits, 2);\n\n        return Snum;\n    },\n\n    generateHOTP: async function(secret, counter) {\n        let key = await this.generateHOTPKey(secret, counter);\n        let uKey = new Uint8Array(key);\n\n        let Snum = this.truncate(uKey);\n        let padded = ('000000' + (Snum % (10 ** 8))).slice(-8);\n\n        return padded;\n    },\n\n    hmacSha256: async function(key, message) {\n\n        let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n        let hashBuffer = await crypto.subtle.sign(\n            algorithm.name,\n            key,\n            message\n        );\n\n        return hashBuffer;\n    },\n\n    stringToArrayBuffer: function (string) {\n        let { length } = string;\n        let buffer = new Uint8Array(length);\n\n        for (let i = 0; i < length; i++) {\n            buffer[i] = string.charCodeAt(i);\n        }\n\n        return buffer;\n    },\n\n    AES: {\n        ALGO_NAME: 'AES-GCM',\n\n        decoder: new window.TextDecoder('utf-8'),\n        encoder: new window.TextEncoder('utf-8'),\n\n        decrypt: async function (masterKey, HMACData, payload) {\n            let masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let generatedHMAC = await utils.hmacSha256(authenticationKey, payload);\n\n            generatedHMAC = generatedHMAC.slice(0, generatedHMAC.byteLength - 16);\n\n            if (!(utils.ArrayBuffertoBase64(HMACData) === utils.ArrayBuffertoBase64(generatedHMAC)))\n                return;\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['decrypt'])\n\n\n            let decryptedBuffer = await window.crypto.subtle.decrypt({\n                name: 'AES-CBC',\n                iv,\n            }, encryptionKey, payload);\n\n            return utils.AES.decoder.decode(decryptedBuffer);\n        },\n\n        encrypt: async function (plaintext) {\n            let masterKey = window.crypto.getRandomValues(new Uint8Array(32)),\n                masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['encrypt']);\n\n            let encrypted = await utils.AES.generateAESencryptedMessage(iv, encryptionKey, plaintext);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let payload = await utils.hmacSha256(authenticationKey, encrypted);\n\n            payload = payload.slice(0, payload.byteLength - 16);\n\n            let keydata = new Uint8Array([...masterKey, ...new Uint8Array(payload)]);\n\n            return {\n                keydata: keydata.buffer,\n                payload: encrypted,\n            }\n        },\n\n        generateAESencryptedMessage: async function (iv, key, plaintext) {\n            let encryptOptions = {\n                name: 'AES-CBC',\n                iv,\n            };\n            let encodedPlaintext = utils.AES.encoder.encode(plaintext),\n                encrypted = await window.crypto.subtle.encrypt(encryptOptions, key, encodedPlaintext);\n\n            return encrypted;\n        },\n\n        arrayBufferConcat: function () {\n            let length = 0,\n                buffer = null;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                length += buffer.byteLength;\n            }\n\n            let joined = new Uint8Array(length),\n                offset = 0;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                joined.set(new Uint8Array(buffer), offset);\n                offset += buffer.byteLength;\n            }\n\n            return joined.buffer\n        },\n\n        generateAESKey: async function () {\n            let algo = {\n                name: utils.AES.ALGO_NAME,\n                length: constants.AES_KEY_LENGTH,\n            };\n            let keyUsage = ['encrypt', 'decrypt'],\n                key = await window.crypto.subtle.generateKey(algo, constants.AES_EXTRACTABLE, keyUsage);\n\n            return key;\n        }\n    },\n\n    getBrowser: function () {\n        // Get the user-agent string\n        let userAgentString =\n            navigator.userAgent;\n\n        // Detect Chrome\n        let chromeAgent =\n            userAgentString.indexOf(\"Chrome\") > -1;\n\n        // Detect Internet Explorer\n        let IExplorerAgent =\n            userAgentString.indexOf(\"MSIE\") > -1 ||\n            userAgentString.indexOf(\"Windows NT:\") > -1;\n\n        // Detect Firefox\n        let firefoxAgent =\n            userAgentString.indexOf(\"Firefox\") > -1;\n\n        // Detect Safari\n        let safariAgent =\n            userAgentString.indexOf(\"Safari\") > -1;\n\n        // Discard Safari since it also matches Chrome\n        if ((chromeAgent) && (safariAgent))\n            safariAgent = false;\n\n        // Detect Opera\n        let operaAgent =\n            userAgentString.indexOf(\"OP\") > -1;\n\n        // Discard Chrome since it also matches Opera\n        if ((chromeAgent) && (operaAgent))\n            chromeAgent = false;\n\n        if (safariAgent)\n            return 'Safari';\n        if (chromeAgent)\n            return 'Chrome';\n        if (IExplorerAgent)\n            return 'IE';\n        if (operaAgent)\n            return 'Opera';\n        if (firefoxAgent)\n            return 'Firefox';\n        return 'Unknown browser';\n    },\n\n    emoji: emoji,\n    images: images,\n    modals: modals,\n    dialogs: modals.dialogs\n};\n\n    export default utils;\n","// expands dependencies with internal xabber modules\nimport deps from \"xabber-dependencies\";\nimport constants from \"xabber-constants\";\nimport templates from \"xabber-templates\";\nimport utils from \"xabber-utils\";\nimport client_translation_progress from \"xabber-translations-info\";\nimport version from \"xabber-version\";\nimport _ from \"underscore\";\n\nexport default _.extend({\n    constants: constants,\n    templates: templates,\n    client_translation_progress: client_translation_progress,\n    utils: utils,\n    uuid: utils.uuid\n}, version, deps);","import env from \"xabber-environment\";\n\nlet constants = env.constants,\n    _ = env._,\n    $ = env.$,\n    moment = env.moment,\n    client_translation_progress = env.client_translation_progress,\n    xabber_i18next = env.xabber_i18next,\n    xabber_i18next_sprintf = env.xabber_i18next_sprintf,\n    uuid = env.uuid,\n    utils = env.utils,\n    bc = new BroadcastChannel(\"xabber-web\");\n\nbc.onmessage = (event) => {\n    if (event.data === `1` && !bc.disabled_client) {\n        bc.postMessage(`2`);\n    }\n    if (event.data === `2`) {\n        bc.disabled_client = true\n    }\n};\n\nbc.postMessage(`1`);\n\nlet Xabber = Backbone.Model.extend({\n    defaults: {\n        version_number: env.version_number,\n        actual_version_number: env.version_number,\n        audio: false,\n        video: false,\n        client_id: uuid().substring(0, 8),\n        client_name: 'Xabber for Web'\n    },\n\n    initialize: function () {\n        this.env = env;\n        this.fetchURLParams();\n        this.cleanUpStorage();\n        this.initDefaultLanguage();\n        this.detectMediaDevices();\n        window.navigator.mediaDevices && (window.navigator.mediaDevices.ondevicechange = this.detectMediaDevices.bind(this));\n        this.check_config = new $.Deferred();\n        this._settings = new this.Settings({id: 'settings'},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.settings = this._settings.attributes;\n        let url = window.location.host + window.location.pathname.replace(/\\//g, \"-\");\n        if (url[url.length - 1] == \"-\")\n            url.slice(0, url.length - 1);\n        this._cache = new Backbone.ModelWithStorage({id: `cache-${url}`},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.cache = this._cache.attributes;\n        this.cache.client_id && (this.set('client_id', this.cache.client_id));\n        this._cache.save('client_id', this.get('client_id'));\n        this.extendFunction();\n        this.plyr_players = [];\n        this.current_plyr_player = null;\n        this.on(\"change:actual_version_number\", this.throwNewVersion, this);\n        this.on(\"quit\", this.onQuit, this);\n        this._version_interval = setInterval(this.readActualVersion.bind(this), 600000);\n\n        window.ononline = () => {\n            this.disconnectWhenConnecting();\n        };\n    },\n\n    initDefaultLanguage: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        if (progress != 100)\n            lang = 'en';\n        this.set(\"default_language\", lang);\n    },\n\n    loadTranslations: async function (lang) {\n        return new Promise((resolve, reject) => {\n            let language = {};\n            language.lang = lang;\n            !language.lang && (language.lang = this.settings.language);\n            if (language.lang == 'default' && this.default_translation) {\n                language.lang = this.get(\"default_language\");\n                language.translation  = this.default_translation;\n                resolve(language);\n                return;\n            }\n            import(`~/translations/${language.lang.replace(/-/g, \"-r\")}.js`).then(translation => {\n                language.translation  = translation;\n                resolve(language)\n            });\n        });\n    },\n\n    setLocale: function (lang, translations) {\n        let default_lang = this.get(\"default_language\"),\n            _translations = {\n                [default_lang]: {\n                    translation: this.default_translation\n                }\n            };\n        lang && (_translations[lang] = {translation: translations});\n        xabber_i18next.use(xabber_i18next_sprintf);\n        xabber_i18next.init({\n            lng: default_lang,\n            debug: false,\n            pluralSeparator: '-',\n            resources: _translations\n        });\n        if (lang) {\n            xabber_i18next.changeLanguage(lang);\n            moment.locale(lang);\n        }\n        xabber_i18next.default_lang = xabber_i18next.getFixedT(default_lang);\n    },\n    getOneLiners: function () {\n        if (xabber_i18next.exists(\"motivating_oneliner\")) {\n            return xabber_i18next.t(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else\n            return [];\n    },\n    getString: function (id, params) {\n        if (xabber_i18next.exists(id)) {\n            return xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else\n            return \"\";\n    },\n\n    getQuantityString: function (id, count, params) {\n        let lang = xabber_i18next.language,\n            plurals = xabber_i18next.services.pluralResolver.getRule(lang);\n        if (!plurals)\n            return this.getString(`${id}_plural_0`, (params || [count]));\n        let _count = parseInt(count, 10);\n        xabber_i18next.services.pluralResolver.options.compatibilityJSON = 'v0';\n        let suffix = xabber_i18next.services.pluralResolver.getSuffix(lang, _count);\n        suffix = suffix.replace(/-/g, \"_\");\n        if (xabber_i18next.language == 'en' || !xabber_i18next.exists(`${id}_plural${suffix}`)) {\n            suffix = xabber_i18next.services.pluralResolver.getSuffix(\"en\", _count);\n            if (!suffix || suffix && !suffix.length)\n                suffix = '_0';\n            else\n                suffix = '_1';\n        }\n        return this.getString(`${id}_plural${suffix}`, (params || [count]));\n    },\n\n    error: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR) {\n            console.error(msg);\n        }\n    },\n\n    warn: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN) {\n            console.warn(msg);\n        }\n    },\n\n    info: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_INFO) {\n            console.log(msg);\n        }\n    },\n\n    debug: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_DEBUG) {\n            console.log(msg);\n        }\n    },\n\n    pretty_last_seen: function (seconds) {\n        if (seconds >= 0 && seconds <= 120)\n            return this.getString(\"last_seen_now\");\n        if (seconds > 120 && seconds < 3600)\n            return this.getString(\"last_seen_minutes\", [Math.trunc(seconds/60)]);\n        if (seconds >= 3600 && seconds < 7200)\n            return this.getString(\"last_seen_hours\");\n        if (seconds >= 3600*48*2)\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').format('LL')]);\n        else\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').calendar().toLowerCase()]);\n    },\n\n    readActualVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        // get version.js file from server and parse it\n        let rawFile = new XMLHttpRequest();\n        rawFile.open(\"GET\", \"version.js?\"+uuid(), true);\n        rawFile.onreadystatechange = () => {\n            if (rawFile.readyState === 4 && rawFile.status === 200) {\n                let text, json;\n                rawFile.onreadystatechange = null;\n                try {\n                    text = rawFile.responseText;\n                    json = JSON.parse(text.split('\\n')[1].slice(1, -1));\n                } catch (e) {\n                    return;\n                }\n                this.set({\n                    actual_version_number: json.version_number,\n                    version_description: json.version_description\n                });\n            }\n        };\n        rawFile.send();\n    },\n\n    extendFunction: function () {\n        if (!String.prototype.trimStart) {\n            String.prototype.trimStart = function () {\n                return this.replace(/^\\s+/, '');\n            }\n        }\n        if (!String.prototype.trimEnd) {\n            String.prototype.trimEnd = function () {\n                return Array.from(Array.from(this).reverse().join(\"\").trimStart(/\\s$/, '')).reverse().join(\"\");\n            }\n        }\n    },\n\n    onQuit: function () {\n        if (window.indexedDB.databases) {\n            window.indexedDB.databases().then((a) => {\n                a.forEach((db) => {\n                    window.indexedDB.deleteDatabase(db.name)\n                });\n            });\n        } else {\n            this.accounts.forEach((acc) => {\n                indexedDB.deleteDatabase(acc.cached_roster.database.name);\n                indexedDB.deleteDatabase(acc.cached_sync_conversations.database.name);\n                indexedDB.deleteDatabase(acc.cached_server_features.database.name);\n            });\n        }\n        let full_storage_name = this.getStorageName();\n        for (let key in window.localStorage) {\n            if (key.startsWith(full_storage_name) || key.startsWith(constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION + '-' + this.cache.id)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    cacheFavicons: async function () {\n        this._cache.save('favicon', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT).then(r => r.blob())));\n        this._cache.save('favicon_gray', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT_GREY).then(r => r.blob())));\n        this._cache.save('favicon_message', URL.createObjectURL(await fetch(constants.FAVICON_MESSAGE).then(r => r.blob())));\n    },\n\n    detectMediaDevices: function () {\n        this.getMediaDevices((media_devices) => {\n            this.set(media_devices);\n        });\n    },\n\n    getMediaDevices: function (callback, errback) {\n        if (window.navigator && window.navigator.mediaDevices) {\n            window.navigator.mediaDevices.enumerateDevices()\n                .then((devices) => {\n                    let media_devices = {audio: false, video: false};\n                    (devices.find(device => device.kind === 'audioinput')) && (media_devices.audio = true);\n                    (devices.find(device => device.kind === 'videoinput')) && (media_devices.video = true);\n                    callback && callback(media_devices);\n                })\n                .catch((err) => {\n                    errback && errback(err);\n                });\n        }\n    },\n\n    throwNewVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        let version_number = this.get('actual_version_number'),\n            version_description = this.get('version_description');\n        utils.dialogs.common(this.getString(\"dialog_version_update__header\", [constants.CLIENT_NAME]), `${this.getString(\"dialog_version_update__confirm_text__new_version\", [version_number])}<div class=\"new-version-description\">${version_description}</div>${this.getString(\"dialog_version_update__confirm_text__question_reload_page\")}`,\n            {ok_button: {text: this.getString(\"dialog_version_update__button_reload\")}, cancel_button: {text: this.getString(\"dialog_version_update__option_not_now\")}}\n        ).done((result) => {\n            if (result) {\n                window.location.reload(true);\n            }\n        });\n    },\n\n    Settings: Backbone.ModelWithStorage.extend({\n        defaults: {\n            max_connection_retries: -1,\n            idling: true,\n            idling_time: 'default',\n            notifications: true,\n            notifications_private: true,\n            notifications_group: true,\n            jingle_calls: true,\n            notifications_volume: 0.50,\n            message_preview_private: false,\n            message_preview_group: false,\n            private_sound: true,\n            group_sound: true,\n            background: {type: 'default'},\n            side_panel: {theme: 'dark', blur: false, transparency: 50},\n            appearance: {blur: 0, vignetting: 0, color: '#E0E0E0'},\n            main_color: 'default',\n            sound_on_private_message: 'beep_up',\n            sound_on_group_message: 'beep_up',\n            call_attention: true,\n            load_media: 'default',\n            typing_notifications: 'default',\n            mapping_service: 'default',\n            sound_on_call: 'call',\n            sound_on_dialtone: 'call',\n            sound_on_connection: 'connecting',\n            sound_on_attention: 'attention',\n            sound_on_auth_request: 'beep_a',\n            hotkeys: 'enter',\n            avatar_shape: 'circle',\n            language: 'default',\n            load_history: true,\n            mam_requests_limit: 200,\n            mam_messages_limit_start: 1,\n            mam_messages_limit: 20,\n        }\n    }),\n\n    start: function () {\n        this.check_config.done((result) => {\n            this.cacheFavicons();\n            this.check_config = undefined;\n            result && this.trigger('start');\n        });\n    },\n\n    configure: function (config) {\n        this.loadTranslations(this.get('default_language')).then((language) => {\n            this.default_translation = language.translation ;\n            return this.loadTranslations();}).then((language) => {\n                this.setLocale(language.lang, language.translation);\n            _.extend(constants, _.pick(config, [\n                'CONNECTION_URL',\n                'PERSONAL_AREA_URL',\n                'LOG_LEVEL',\n                'SYNCHRONIZATION_RSM_MAX',\n                'ASSETS_URL_PREFIX',\n                'CONTAINER_ELEMENT',\n                'XABBER_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT',\n                'REGISTER_XMPP_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT_TEXT',\n                'API_SERVICE_URL',\n                'USE_SOCIAL_AUTH',\n                'CONTAINER',\n                'CHECK_VERSION',\n                'DEFAULT_LOGIN_SCREEN',\n                'STORAGE_NAME_ENDING',\n                'CLIENT_NAME',\n                'SHORT_CLIENT_NAME',\n                'CLIENT_LOGO',\n                'TOOLBAR_LOGO',\n                'ENABLE_XABBER_ACCOUNT',\n                'SCREEN_ABOUT',\n                'DISABLE_LOOKUP_WS',\n                'PRIVACY_LOAD_MEDIA',\n                'PRIVACY_TYPING_NOTIFICATIONS',\n                'PRIVACY_MAPPING_SERVICE',\n            ]));\n\n            let log_level = constants['LOG_LEVEL_'+constants.LOG_LEVEL];\n            constants.LOG_LEVEL = log_level || constants.LOG_LEVEL_ERROR;\n            constants.MATERIAL_COLORS.includes(config.MAIN_COLOR) && (constants.MAIN_COLOR = config.MAIN_COLOR);\n            (this._settings.get(\"main_color\") == 'default') && this._settings.set(\"main_color\", constants.MAIN_COLOR);\n            this.trigger(\"update_main_color\");\n            if (this._settings.get(\"load_media\") === 'default' && config.PRIVACY_LOAD_MEDIA != null)\n                this._settings.set(\"load_media\", config.PRIVACY_LOAD_MEDIA);\n            else if (this._settings.get(\"load_media\") === 'default')\n                this._settings.set(\"load_media\", true);\n            if (this._settings.get(\"typing_notifications\") === 'default' && config.PRIVACY_TYPING_NOTIFICATIONS != null)\n                this._settings.set(\"typing_notifications\", config.PRIVACY_TYPING_NOTIFICATIONS);\n            else if (this._settings.get(\"typing_notifications\") === 'default')\n                this._settings.set(\"typing_notifications\", true);\n            if (this._settings.get(\"mapping_service\") === 'default' && config.PRIVACY_MAPPING_SERVICE != null)\n                this._settings.set(\"mapping_service\", config.PRIVACY_MAPPING_SERVICE);\n            else if (this._settings.get(\"mapping_service\") === 'default')\n                this._settings.set(\"mapping_service\", true);\n            if (this._settings.get(\"idling_time\") === 'default' && config.IDLING_DEFAULT_TIMEOUT != null)\n                this._settings.set(\"idling_time\", config.IDLING_DEFAULT_TIMEOUT);\n            else if (this._settings.get(\"idling_time\") === 'default')\n                this._settings.set(\"idling_time\", constants.IDLING_DEFAULT_TIMEOUT);\n\n            window.xabber = this;\n            _.extend(window, env);\n            if (config.SYNCHRONIZATION_RSM_MAX)\n                constants.SYNCHRONIZATION_RSM_MAX = config.SYNCHRONIZATION_RSM_MAX;\n            if (config.ASSETS_URL_PREFIX) {\n                constants.ASSETS_URL_PREFIX = config.ASSETS_URL_PREFIX;\n            }\n            if (config.BACKGROUND_IMAGES_XML_URL)\n                constants.BACKGROUND_IMAGES_XML_URL = config.BACKGROUND_IMAGES_XML_URL;\n            if (config.BACKGROUND_PATTERNS_XML_URL)\n                constants.BACKGROUND_PATTERNS_XML_URL = config.BACKGROUND_PATTERNS_XML_URL;\n            if (config.CONTAINER_ELEMENT)\n                constants.CONTAINER_ELEMENT = config.CONTAINER_ELEMENT;\n            if (config.REGISTRATION_DOMAINS)\n                constants.REGISTRATION_DOMAINS = config.REGISTRATION_DOMAINS;\n            if (config.LOGIN_DOMAINS)\n                constants.LOGIN_DOMAINS = config.LOGIN_DOMAINS;\n            if (config.TRUSTED_DOMAINS)\n                constants.TRUSTED_DOMAINS = config.TRUSTED_DOMAINS;\n            if (config.RECOMMENDED_DOMAIN)\n                constants.RECOMMENDED_DOMAIN = config.RECOMMENDED_DOMAIN;\n            if (config.DOWNTIME_RECONNECTION_TIMEOUT)\n                constants.DOWNTIME_RECONNECTION_TIMEOUT = config.DOWNTIME_RECONNECTION_TIMEOUT;\n            if (config.IDLING_MINIMAL_TIMEOUT)\n                constants.IDLING_MINIMAL_TIMEOUT = config.IDLING_MINIMAL_TIMEOUT;\n            if (config.IDLING_MAXIMUM_TIMEOUT)\n                constants.IDLING_MAXIMUM_TIMEOUT = config.IDLING_MAXIMUM_TIMEOUT;\n            if (config.PING_SENDING_INTERVAL)\n                constants.PING_SENDING_INTERVAL = config.PING_SENDING_INTERVAL;\n            if (config.REGISTRATION_BUTTON != null)\n                constants.REGISTRATION_BUTTON = config.REGISTRATION_BUTTON;\n            if (config.REGISTRATION_CUSTOM_DOMAIN != null)\n                constants.REGISTRATION_CUSTOM_DOMAIN = config.REGISTRATION_CUSTOM_DOMAIN;\n            if (config.LOGIN_CUSTOM_DOMAIN != null)\n                constants.LOGIN_CUSTOM_DOMAIN = config.LOGIN_CUSTOM_DOMAIN;\n            if (config.SHORT_CLIENT_DESCRIPTION)\n                constants.SHORT_CLIENT_DESCRIPTION = config.SHORT_CLIENT_DESCRIPTION;\n\n            if (config.CLIENT_NAME && !config.SHORT_CLIENT_NAME)\n                constants.SHORT_CLIENT_NAME = config.CLIENT_NAME;\n            else if (!config.CLIENT_NAME && config.SHORT_CLIENT_NAME)\n                constants.CLIENT_NAME = config.SHORT_CLIENT_NAME;\n\n            if (config.TURN_SERVERS_LIST) {\n                if (_.isArray(config.TURN_SERVERS_LIST))\n                    _.extend(constants, {TURN_SERVERS_LIST: config.TURN_SERVERS_LIST});\n                else if (_.isObject(config.TURN_SERVERS_LIST) && Object.keys(config.TURN_SERVERS_LIST).length)\n                    _.extend(constants, {TURN_SERVERS_LIST: [config.TURN_SERVERS_LIST]});\n            }\n\n            constants.FAVICON_DEFAULT = constants.ASSETS_URL_PREFIX + constants.FAVICON_DEFAULT;\n            constants.FAVICON_DEFAULT_GREY = constants.ASSETS_URL_PREFIX + constants.FAVICON_DEFAULT_GREY;\n            constants.FAVICON_MESSAGE = constants.ASSETS_URL_PREFIX + constants.FAVICON_MESSAGE;\n            constants.BACKGROUND_IMAGE = constants.ASSETS_URL_PREFIX + constants.BACKGROUND_IMAGE;\n\n            constants.SOUNDS = {\n                beep_up: constants.ASSETS_URL_PREFIX + constants.SOUNDS.beep_up,\n                tiny_noize: constants.ASSETS_URL_PREFIX + constants.SOUNDS.tiny_noize,\n                retro_game: constants.ASSETS_URL_PREFIX + constants.SOUNDS.retro_game,\n                pixel_beep: constants.ASSETS_URL_PREFIX + constants.SOUNDS.pixel_beep,\n                beep_positive: constants.ASSETS_URL_PREFIX + constants.SOUNDS.beep_positive,\n                good_chime: constants.ASSETS_URL_PREFIX + constants.SOUNDS.good_chime,\n                cellular_click: constants.ASSETS_URL_PREFIX + constants.SOUNDS.cellular_click,\n                bleep: constants.ASSETS_URL_PREFIX + constants.SOUNDS.bleep,\n                mono_u: constants.ASSETS_URL_PREFIX + constants.SOUNDS.mono_u,\n                plop: constants.ASSETS_URL_PREFIX + constants.SOUNDS.plop,\n                ether: constants.ASSETS_URL_PREFIX + constants.SOUNDS.ether,\n                pop: constants.ASSETS_URL_PREFIX + constants.SOUNDS.pop,\n                computer_chime: constants.ASSETS_URL_PREFIX + constants.SOUNDS.computer_chime,\n                beep_a: constants.ASSETS_URL_PREFIX + constants.SOUNDS.beep_a,\n                call: constants.ASSETS_URL_PREFIX + constants.SOUNDS.call,\n                connecting: constants.ASSETS_URL_PREFIX + constants.SOUNDS.connecting,\n                busy: constants.ASSETS_URL_PREFIX + constants.SOUNDS.busy,\n                attention: constants.ASSETS_URL_PREFIX + constants.SOUNDS.attention,\n            };\n\n            constants.CLIENT_LOGO = constants.ASSETS_URL_PREFIX + constants.CLIENT_LOGO;\n            constants.TOOLBAR_LOGO = constants.ASSETS_URL_PREFIX + constants.TOOLBAR_LOGO;\n\n            if (utils.isMobile.any()) {\n                let ios_msg = this.getString(\"warning__client_not_support_ios_browser\", [constants.CLIENT_NAME]),\n                    android_msg = this.getString(\"warning__client_not_support_android_browser\"),\n                    any_mobile_msg = this.getString(\"warning__client_not_support_mobile\", [constants.CLIENT_NAME]),\n                    msg;\n                if (utils.isMobile.iOS()) {\n                    msg = ios_msg;\n                } else if (utils.isMobile.Android()) {\n                    msg = any_mobile_msg + android_msg;\n                } else {\n                    msg = any_mobile_msg;\n                }\n                utils.dialogs.error(msg);\n                this.check_config.resolve(false);\n                return;\n            }\n            if (!constants.CONNECTION_URL) {\n                utils.dialogs.error(this.getString(\"client_error__missing_connection_url\"));\n                this.check_config.resolve(false);\n                return;\n            }\n            if (bc.disabled_client){\n                utils.dialogs.error(this.getString(\"client_error__another_tab_active\"));\n                this.check_config.resolve(false);\n                return;\n            }\n\n            let self = this;\n            if (!Backbone.useLocalStorage && !this.cache.ignore_localstorage_warning) {\n                utils.dialogs.warning(this.getString(\"client_warning__no_local_storage\"),\n                    [{name: this.getString(\"ignore\"), text: this.getString(\"client_error__option_show_msg_again\")}]\n                ).done(function (res) {\n                    res && res.ignore && self._cache.save('ignore_localstorage_warning', true);\n                });\n            }\n\n            this.requestNotifications().done(function (granted) {\n                self._cache.save('notifications', granted);\n                self._cache.save('endpoint_key', undefined);\n                self.check_config.resolve(true);\n            });\n        });\n    },\n\n    fetchURLParams: function () {\n        let splitted_url = window.location.href.split(/[?#]/),\n            splitted_url_anchor = window.location.href.split('#');\n        this.url_params = {};\n        if (splitted_url.length > 1) {\n            let idx, param, params = splitted_url[1].split('&');\n            for (idx = 0; idx < params.length; idx++) {\n                param = params[idx].split('=');\n                if (param.length === 1) {\n                    this.url_params[param[0]] = null;\n                } else {\n                    this.url_params[param[0]] = param[1];\n                }\n            }\n        }\n        if (splitted_url_anchor.length > 1) {\n            this.url_params['anchor'] = splitted_url[1];\n        }\n        window.history.pushState(null, null, window.location.pathname);\n    },\n\n    getStorageName: function () {\n        let name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        if (constants.STORAGE_NAME_ENDING) {\n            name = name + '-' + constants.STORAGE_NAME_ENDING;\n        }\n        return name;\n    },\n\n    cleanUpStorage: function () {\n        let full_storage_name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        for (let key in window.localStorage) {\n            if (key.startsWith('xabber') &&\n                    !key.startsWith(full_storage_name)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    requestNotifications: function () {\n        let result = new $.Deferred(),\n            self = this;\n        if (!window.Notification) {\n            result.resolve(null);\n        } else if (window.Notification.permission === 'granted') {\n            result.resolve(true);\n        } else {\n            if (!self.cache.ignore_notifications_warning)\n                self.notifications_placeholder = new self.NotificationsPlaceholder();\n            result.resolve(false);\n        }\n        return result.promise();\n    },\n\n    updateFaviconConnected: function () {\n        let is_disconnected = false;\n        this.accounts.each((account) => {\n            if (account.get('enabled') && (!account.isConnected() || (account.session && account.session.get('auth_failed')))){\n                is_disconnected = true;\n                return;\n            }\n        });\n        this.updateAllMessageCounterOnDisconnect(is_disconnected);\n    },\n\n    disconnectWhenConnecting: function (is_fast) {\n        this.accounts.each((account) => {\n            if (account.session && account.connection && account.get('enabled') && !account.session.get('reconnecting') && !account.session.get('connected')){\n                account.activate();\n            }\n        });\n    },\n\n    extendWith: function () {\n        return _.reduce(arguments, function (instance, module) {\n            return instance;\n        }, this);\n    }\n});\n\nexport default new Xabber();\n","import xabber from \"xabber-core\";\nimport { transliterate as query_transliterate } from 'transliteration';\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.base,\n    utils = env.utils,\n    uuid = env.uuid,\n    $ = env.$,\n    _ = env._;\n\nxabber.ViewPath = function (str) {\n    this.path = str.split('.');\n    this.applyTo = function (obj) {\n        let result = obj;\n        for (let idx = 0; idx < this.path.length; idx++) {\n            if (!(result = _.result(result, this.path[idx]))) {\n                return null;\n            }\n        }\n        return result;\n    };\n};\n\nxabber.BasicView = Backbone.View.extend({\n    template: function () {\n        return '';\n    },\n\n    initialize: function (options) {\n        options || (options = {});\n        this.parent = options.parent;\n        this.vname = options.vname;\n        this.children = {};\n        this.$el.addClass(options.classlist);\n        if (!options.el) {\n            this.$el.html(this.template(_.extend({view: this}, constants)));\n        }\n        if (!_.isUndefined(this.ps_selector)) {\n            this.ps_container = this.$(this.ps_selector);\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        this.data = new Backbone.Model({visible: false});\n        this.data.on(\"change:visible\", this.onChangedVisibility, this);\n        xabber.on(\"update_css\", function (options) {\n            this.updateCSS && this.updateCSS();\n            (options && options.size_changed && this.windowResized) && this.windowResized();\n        }, this);\n        this._initialize && this._initialize(options);\n        this.__initialize && this.__initialize(options);\n    },\n\n    isVisible: function () {\n        return this.data.get('visible');\n    },\n\n    onChangedVisibility: function () {},\n\n    show: function () {\n        this.onShow.apply(this, arguments);\n        this.data.set('visible', true);\n        this.trigger('after_show', this);\n        this.updateScrollBar();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    onShow: function () {\n        this.render.apply(this, arguments);\n        _.each(this.children, function (view) {\n            view.render.apply(view, arguments);\n        });\n    },\n\n    onHide: function () {\n        _.each(this.children, function (view) {\n            view.onHide.apply(view, arguments);\n        });\n    },\n\n    detach: function () {\n        this.$el.detach();\n    },\n\n    child: function (name) {\n        return this.children[name];\n    },\n\n    addChild: function (name, constructor, options) {\n        let view;\n        if (constructor instanceof Backbone.View) {\n            view = constructor;\n            view.parent = this;\n        } else {\n            view = new constructor(_.extend({\n                parent: this,\n                vname: name\n            }, options));\n        }\n        this.children[name] = view;\n        return view;\n    },\n\n    removeChild: function (name, options) {\n        options || (options = {});\n        let view = this.children[name];\n        if (view) {\n            delete this.children[name];\n            options.soft ? view.detach() : (view.trigger(\"remove\") && view.remove());\n        }\n    },\n\n    removeChildren: function () {\n        _.each(_.keys(this.children), (view_id) => {\n            this.removeChild(view_id);\n        });\n    },\n\n    setCustomCss: function (styles) {\n        this.$el.css(styles);\n    },\n\n    removeCustomCss: function () {\n        this.$el.removeAttr('style');\n    },\n\n    saveScrollBarOffset: function () {\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.data.set('scroll_top', this.getScrollTop());\n            }\n        }\n    },\n\n    updateScrollBar: function () {\n        // let start_scrolled_bottom = this.getScrollBottom();\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.ps_container.perfectScrollbar('update');\n            } else {\n                this.data.set('scroll_top', undefined);\n                this.scrollTo(scroll_top);\n            }\n        }\n        // this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - start_scrolled_bottom);\n        return this;\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container[0].scrollTop = offset;\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    scrollToBottom: function () {\n        let scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        this.scrollTo(scrollHeight - offsetHeight);\n    },\n\n    scrollToChild: function ($child) {\n        let scrollTop = _.reduce($child.prevAll(), function (sum, el) {\n            return sum + el.offsetHeight + 2;\n        }, 0);\n        this.scrollTo(scrollTop);\n    },\n\n    getScrollTop: function () {\n        return this.ps_container[0].scrollTop;\n    },\n\n    getScrollBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight - (scrollTop + offsetHeight);\n    },\n\n    getPercentScrolled: function () {\n        if (this.isScrolledToTop()) {\n            return 0;\n        }\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollTop / (scrollHeight - offsetHeight);\n    },\n\n    isScrolledToTop: function () {\n        return this.getScrollTop() === 0;\n    },\n\n    isScrolledToBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight === scrollTop + offsetHeight;\n    }\n});\n\nxabber.NodeView = xabber.BasicView.extend({\n    onShow: function (options, tree) {\n        if ((xabber.body.data.get('contact_details_view') && (this.vname === 'right_contact'))){\n            xabber.body.data.get('contact_details_view').scrollTo(xabber.body.data.get('contact_details_view').data.get('scroll_top'));\n            xabber.body.data.set('contact_details_view', null)\n            return;\n        }\n        _.each(this.children, function (view) {\n            view.hide();\n        });\n        this.$el.children().detach();\n        tree = this.patchTree(tree, options) || tree;\n        _.each(this.children, (view, name) => {\n            if (_.has(tree, name)) {\n                if (name !== 'login')\n                    this.$el.append(view.$el);\n                this.$el.switchClass('hidden', name === 'login');\n                view.show(options, tree[name]);\n            }\n        });\n        return this.render(options);\n    },\n\n    onHide: function (options) {\n        _.each(this.children, function (view) {\n            view.hide(options);\n        });\n    },\n\n    patchTree: function () {}\n});\n\nxabber.Container = xabber.BasicView.extend({\n    className: 'container',\n\n    render: function (options, path) {\n        if (_.isNull(path)){\n            this.$el.addClass('hidden');\n            return;\n        } else {\n            this.$el.removeClass('hidden');\n        }\n        let new_view = path.applyTo(options);\n        this.$el.children().detach();\n        if (this.view !== new_view) {\n            this.onHide(options);\n        }\n        this.view = new_view;\n        if (this.view) {\n            this.$el.append(this.view.$el);\n            this.view.show(options);\n        }\n        return this;\n    },\n\n    onHide: function (options) {\n        if (this.view) {\n            this.view.hide(options);\n        }\n        this.view = null;\n    }\n});\n\nxabber.SearchView = xabber.BasicView.extend({\n    events: {\n        \"keydown .search-input\": \"keyUpOnSearch\",\n        \"focusout .search-input\": \"clearSearchSelection\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .list-item\": \"onClickItem\"\n    },\n\n    keyUpOnSearch: function (ev) {\n        ev.stopPropagation();\n        this.ids = this.$('.list-item:not(.hidden)').map(function () {\n            return $(this).data('id');\n        }).toArray();\n        let $selection = this.getSelectedItem();\n        if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n            return this.selectNextItem();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            return this.selectPreviousItem();\n        }\n        if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n            ev.preventDefault();\n            return this.onEnterPressed($selection);\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            if ($(ev.target).val())\n                return this.clearSearch();\n            else\n                this.close();\n        }\n        this.updateSearch();\n    },\n\n    getSelectedItem: function () {\n        return this.$('.list-item[data-id=\"'+this.selection_id+'\"]');\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id)\n            return;\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop || $selection[0].clientHeight + $selection[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        if (arrow === 'up' && ($selection[0].offsetTop <= this.ps_container[0].scrollTop || $selection[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    selectNextItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n    },\n\n    selectPreviousItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n    },\n\n    updateSearch: function () {\n        if (!this._update_search_timeout) {\n            let query = this.$('.search-input').val();\n            this.$('.search-form').switchClass('active', query);\n            this.clearSearchSelection();\n            if (query)\n                this.search(query.toLowerCase());\n            else {\n                this.$('.list-item').removeClass('hidden');\n                this.onEmptyQuery();\n            }\n            this.updateScrollBar();\n            this.query = false;\n            this._update_search_timeout = setTimeout(() => {\n                this._update_search_timeout = null;\n                this.query && this.updateSearch();\n            }, 150);\n        } else {\n            this.query = true;\n        }\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.updateSearch();\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n    },\n\n    searchAll: function () {\n        this.$('.list-item').removeClass('hidden');\n    },\n\n    keyUpOnSearchWithQuery: function () {},\n\n    close: function () {},\n\n    search: function () {},\n\n    onEnterPressed: function () {},\n\n    onEmptyQuery: function () {},\n\n    onClickItem: function () {}\n});\n\n  xabber.SearchPanelView = xabber.SearchView.extend({\n      events: {\n          \"keydown .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\",\n          \"click .btn-search-messages\": \"updateSearchWithMessages\"\n      },\n\n      updateSearchWithMessages: function (ev) {\n          this.search_messages = true;\n          this.updateSearch();\n      },\n\n      keyUpOnSearch: function (ev) {\n          ev.stopPropagation();\n          if ($(ev.target).val()) {\n              this.keyUpOnSearchWithQuery(ev);\n              return;\n          }\n          this.ids = this.$('.list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItem();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItem();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItem();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      onScrollY: function (options) {\n          if (xabber.all_searched_messages && xabber.all_searched_messages.length && this.queryid && !this._loading_messages && !this._messages_loaded && this.isScrolledToBottom()) {\n              this._loading_messages = true;\n              options = options || {};\n              this.queryid = uuid();\n              options.query_id = this.queryid;\n              let accounts = xabber.accounts.connected;\n              accounts.forEach((account) => {\n                  let first_message = xabber.all_searched_messages.find(message => (message.account.get('jid') === account.get('jid')));\n                  if (!first_message || account.searched_msgs_loaded) {\n                      // this._loading_messages = false;\n                      return;\n                  }\n                  options.account = account;\n                  options.before = first_message.get('archive_id');\n                  this.MAMRequest(this.query_text, options, (messages) => {\n                      _.each(messages, (message) => {\n                          let message_from_stanza = account.chats.receiveChatMessage(message,\n                              _.extend({is_searched: true}, options)\n                              ),\n                              msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza),\n                              $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                          if (msg_idx === 0) {\n                              $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                          } else {\n                              $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                          }\n                      });\n                      this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                      this.updateScrollBar();\n                      this._loading_messages = false;\n                  });\n              });\n              (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n          }\n      },\n\n      onScroll: function () {},\n\n      keyUpOnSearchWithQuery: function (ev) {\n          ev.stopPropagation();\n          this.ids = this.$('.searched-lists-wrap .list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItemWithQuery();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          else if (ev.keyCode === constants.KEY_ENTER){\n              this.search_messages = true;\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      getSelectedItemWithQuery: function () {\n          return this.$('.searched-lists-wrap .list-item[data-id=\"'+this.selection_id+'\"]');\n      },\n\n      selectItemWithQuery: function (id, arrow) {\n          if (!id) {\n              if (this.isScrolledToBottom())\n                  this.onScrollY();\n              return;\n          }\n          this.clearSearchSelection();\n          let $selection = this.$('.searched-lists-wrap .list-item[data-id=\"'+id+'\"]');\n          if ($selection.length) {\n              this.selection_id = id;\n          } else {\n              this.ps_container[0].scrollTop = 0;\n              $selection = this.$('.searched-lists-wrap .list-item:visible').first();\n              this.selection_id = $selection.data('id');\n          }\n          if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n          || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop < this.ps_container[0].scrollTop))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          if (arrow === 'up' && ($selection[0].offsetTop + $selection.parent().parent()[0].offsetTop <= this.ps_container[0].scrollTop\n          || $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          $selection.addClass('selected');\n      },\n\n      selectNextItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n      },\n\n      selectPreviousItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n      },\n\n      search: function (query) {\n          this.$(this.main_container).addClass('hidden');\n          clearTimeout(this.keyup_timeout);\n          this.keyup_timeout = null;\n          this.query_text = query;\n          let query_transliterated = query_transliterate(query);\n          this.$('.contacts-list').html(\"\");\n          this.$('.chats-list').html(\"\");\n          xabber.accounts.connected.forEach((acc) => {\n              let saved_chat = acc.chats.getSavedChat();\n              saved_chat.set('opened', true);\n              saved_chat.item_view.updateLastMessage();\n          });\n          let query_chats = _.clone(xabber.chats);\n          query_chats.comparator = 'timestamp';\n          query_chats.sort('timestamp').forEach((chat) => {\n              let jid = chat.get('jid').toLowerCase(),\n                  name = chat.contact ? (chat.contact.get('roster_name') || chat.contact.get('name')) : chat.get('name');\n              name && (name = name.toLowerCase());\n              if (chat.get('timestamp') || chat.get('saved')) {\n                  if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                      || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1\n                      || (chat.get('saved') && query.includes('saved'))) {\n                      let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                          chat_item = xabber.chats_view.child(chat.get('id'));\n                      chat_item && (chat_item = chat_item.$el.clone().addClass(searched_by));\n                      if (chat_item) {\n                          this.$('.chats-list-wrap').removeClass('hidden');\n                          if (searched_by === 'by-name')\n                              this.$('.chats-list').prepend(chat_item);\n                          else if (this.$('.chats-list .by-jid').length)\n                              chat_item.insertBefore(this.$('.chats-list .by-jid').first());\n                          else\n                              this.$('.chats-list').append(chat_item);\n                          chat_item.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              xabber.chats_view.openChat(chat.item_view, {screen: xabber.body.screen.get('name')});\n                              chat_item.addClass('active');\n                          });\n                      }\n                  }\n              }\n          });\n          xabber.accounts.each((account) => {\n              account.contacts.each((contact) => {\n                  let jid = contact.get('jid').toLowerCase(),\n                      name = contact.get('roster_name') || contact.get('name'),\n                      chat = account.chats.get(contact.hash_id),\n                      chat_id = chat && chat.id;\n                  name && (name = name.toLowerCase());\n                  if (!chat_id || chat_id && !this.$('.chat-item[data-id=\"' + chat_id + '\"]').length)\n                      if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                          || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1) {\n                          let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                              item_list = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${account.get('jid')}\"] .list-item[data-jid=\"${jid}\"]`).first().clone().data('account-jid', account.get('jid'));\n                          item_list.attr({'data-color': account.settings.get('color'), 'data-account': account.get('jid')}).addClass(searched_by).prepend($('<div class=\"account-indicator ground-color-700\"/>'));\n                          if (searched_by === 'by-name')\n                              this.$('.contacts-list').prepend(item_list);\n                          else if (this.$('.contacts-list .by-jid').length)\n                              item_list.insertBefore(this.$('.contacts-list .by-jid').first());\n                          else\n                              this.$('.contacts-list').append(item_list);\n                          item_list.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              let chat = account.chats.getChat(contact);\n                              chat && xabber.chats_view.openChat(chat.item_view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                              item_list.addClass('active');\n                          });\n                      }\n              });\n          });\n          this.$('.chats-list-wrap').switchClass('hidden', !this.$('.chats-list').children().length);\n          this.$('.pinned-chat-list').switchClass('hidden', query);\n          this.$('.contacts-list-wrap').switchClass('hidden', !this.$('.contacts-list').children().length);\n          this.$('.messages-list-wrap').addClass('hidden').find('.messages-list').html(\"\");\n          if (query.length >= 2 && this.search_messages) {\n              this.search_messages = false;\n              this.queryid = uuid();\n              this.searchMessages(query, {query_id: this.queryid});\n          }\n          else if (query.length >= 2 && !this.search_messages){\n              this.$('.btn-search-messages').showIf(query);\n          }\n      },\n\n      searchMessages: function (query, options) {\n          this._loading_messages = true;\n          this._messages_loaded = false;\n          this.$('.messages-list-wrap').showIf(query);\n          this.$('.btn-search-messages').hideIf(query);\n          this.$('.messages-list-wrap .messages-list').html(env.templates.contacts.preloader());\n          options = options || {};\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.before && (options.before = \"\");\n          xabber.all_searched_messages = new xabber.SearchedMessages();\n          let accounts = xabber.accounts.connected;\n          accounts.forEach((account) => {\n              account.searched_msgs_loaded = false;\n              options.account = account;\n              this.MAMRequest(query, options, (messages) => {\n                  this.$('.messages-list-wrap .messages-list').html('');\n                  if (!this.query_text)\n                      return;\n                  _.each(messages, (message) => {\n                      if (!this.query_text)\n                          return;\n                      let message_from_stanza = account.chats.receiveChatMessage(message,\n                          _.extend({is_searched: true}, options)\n                          ),\n                          msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza), $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                      if (msg_idx === 0) {\n                          $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                      } else {\n                          $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                      }\n                  });\n                  this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                  this.updateScrollBar();\n                  this._loading_messages = false;\n              });\n          });\n          (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n      },\n\n      MAMRequest: function (query, options, callback, errback) {\n          let messages = [],\n              account = options.account,\n              queryid = uuid(),\n              iq = $iq({type: 'set'})\n                  .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                  .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                  .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                  .c('value').t(Strophe.NS.MAM).up().up()\n                  .c('field', {'var': 'withtext'})\n                  .c('value').t(query).up().up().up().cnode(new Strophe.RSM(options).toXML()),\n              handler = account.connection.addHandler((message) => {\n                  let $msg = $(message);\n                  if ($msg.find('result').attr('queryid') === queryid && options.query_id === this.queryid) {\n                      messages.push(message);\n                  }\n                  return true;\n              }, env.Strophe.NS.MAM);\n          account.sendIQFast(iq,\n              function (res) {\n                  account.connection.deleteHandler(handler);\n                  let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                  if ($fin.length && $fin.attr('queryid') === queryid) {\n                      let rsm_complete = ($fin.attr('complete') === 'true') ? true : false;\n                      rsm_complete && (account.searched_msgs_loaded = true);\n                  }\n                  callback && callback(messages);\n              },\n              function () {\n                  account.connection.deleteHandler(handler);\n                  errback && errback();\n              }\n          );\n      },\n\n      clearSearch: function (ev) {\n          ev && ev.preventDefault();\n          this.$('.search-input').val('');\n          this.updateSearch();\n          this.onEmptyQuery();\n      },\n\n      onEmptyQuery: function () {\n          xabber.accounts.forEach(function (account) {\n              account.searched_msgs_loaded = false;\n          });\n          this.query_text = null;\n          this.queryid = null;\n          this._messages_loaded = false;\n          this._loading_messages = false;\n          this.$(this.main_container).removeClass('hidden');\n          this.$('.chats-list-wrap').addClass('hidden');\n          this.$('.pinned-chat-list').removeClass('hidden');\n          this.$('.contacts-list-wrap').addClass('hidden');\n          this.$('.messages-list-wrap').addClass('hidden');\n      }\n  });\n\n  xabber.InputWidget = Backbone.View.extend({\n    field_type: 'text',\n    template: templates.input_widget,\n\n    events: {\n        \"click .field-text\": \"showInput\",\n        \"click .btn-rename\": \"showInput\",\n        \"keydown .field-input\": \"keyDown\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    initialize: function () {\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n        this.data.on(\"change:input_mode\", this.onChangedInputMode, this);\n        this.bindModelEvents();\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:\"+this.model_field, this.updateValue, this);\n    },\n\n    showInput: function () {\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    onChangedInputMode: function () {\n        let input_mode = this.data.get('input_mode');\n        this.$value.hideIf(input_mode);\n        this.$btn.hideIf(input_mode);\n        this.$input.showIf(input_mode).focus();\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.changeValue();\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    keyUp: function (ev) {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        return this.model.get(this.model_field);\n    },\n\n    setValue: function (value) {\n        this.model.save(this.model_field, value);\n    },\n\n    changeValue: function () {\n        let value = this.getValue(),\n            new_value = this.$input.removeClass('changed').val();\n        new_value !== value && this.setValue(new_value);\n        this.data.set('input_mode', false);\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        this.$input.val(value);\n    }\n});\n\nxabber.Body = xabber.NodeView.extend({\n    className: 'client-body-wrap',\n\n    _initialize: function () {\n        this.vname = 'body';\n        this.data.set('visible', true);\n        this.screen = new Backbone.Model();\n        this.screen_map = new Backbone.Model();\n        this.screen.on(\"change\", this.update, this);\n        this.screen_map.on(\"change\", this.onScreenMapChanged, this);\n        $(constants.CONTAINER_ELEMENT).append(this.$el);\n        this.updateBackground();\n        this.updateMainColor();\n        this.updateAvatarShape();\n        $('#modals').insertAfter(this.$el);\n        xabber.on('update_main_color', this.updateMainColor, this);\n        xabber.on('update_avatar_shape', this.updateAvatarShape, this);\n    },\n\n    addScreen: function (name, attrs) {\n        this.screen_map.set(name, attrs);\n    },\n\n    updateMainColor: function () {\n        this.$el.attr('data-main-color', xabber.settings.main_color);\n        this.$el.siblings('#modals').attr('data-main-color', xabber.settings.main_color);\n        $(window.document).find('.login-container').attr('data-main-color', xabber.settings.main_color);\n    },\n\n    updateAvatarShape: function () {\n        let shape = xabber.settings.avatar_shape;\n        $(constants.CONTAINER_ELEMENT).switchClass('non-circle-avatars', shape != 'circle');\n        $(constants.CONTAINER_ELEMENT).switchClass('octagon-avatars', shape === 'octagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('hexagon-avatars', shape === 'hexagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('pentagon-avatars', shape === 'pentagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('rounded-avatars', shape === 'rounded');\n        $(constants.CONTAINER_ELEMENT).switchClass('star-avatars', shape === 'star');\n        $(constants.CONTAINER_ELEMENT).switchClass('squircle-avatars', shape === 'squircle');\n    },\n\n    updateBackground: function () {\n        let background_settings = xabber.settings.background || {};\n        if (background_settings.image) {\n            if (background_settings.type === 'repeating-pattern') {\n                this.$el.css({\n                    'background-repeat': 'repeat',\n                    'background-size': 'unset',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            } else if (background_settings.type === 'image') {\n                this.$el.css({\n                    'background-repeat': 'no-repeat',\n                    'background-size': 'cover',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            }\n        } else {\n            this.$el.css({\n                'background-repeat': 'repeat',\n                'background-size': 'unset',\n                'background-image': `url(\"${constants.BACKGROUND_IMAGE}\")`,\n                'box-shadow': 'none'\n            });\n        }\n        this.updateBoxShadow(xabber.settings.appearance.vignetting);\n    },\n\n    updateBoxShadow: function (value) {\n        value = Number(value);\n        if (!value)\n            this.$el.css({\n                'box-shadow': `unset`\n            });\n        else\n            this.$el.css({\n            'box-shadow': `${value}px 0 100px 1px rgba(0, 0, 0, 0.7) inset, -${value}px 0 100px -1px rgba(0, 0, 0, 0.7) inset`\n        });\n    },\n\n    updateBlur: function (value) {\n        value = Number(value);\n        xabber.blur_overlay.$el.css({\n            \"backdrop-filter\": `blur(${value}px)`,\n            \"-webkit-backdrop-filter\": `blur(${value}px)`\n        });\n    },\n\n    setScreen: function (name, attrs, options) {\n        xabber.error(name);\n        options = options || {};\n        $(window).unbind(\"keydown.contact_panel\");\n        xabber.notifications_placeholder && xabber.main_panel.$el.addClass('notifications-request');\n        $(constants.CONTAINER_ELEMENT).switchClass('xabber-login', name === 'login');\n        $(constants.CONTAINER_ELEMENT).switchClass('on-xabber-login', name !== 'login');\n        let new_attrs = {stamp: _.uniqueId()};\n        if (name && !this.isScreen(name)) {\n            new_attrs.name = name;\n        }\n        if (!attrs || !attrs.show_placeholder) {\n            new_attrs.show_placeholder = null;\n        }\n        if ((attrs && attrs.right && attrs.right === 'group_invitation') || (name === 'settings' || name ==='account_settings') || options.right_force_close)\n            new_attrs.right_contact = null;\n        else {\n            new_attrs.right_contact = xabber.body.screen.get('right_contact');\n        }\n        if ((!attrs && xabber.body.screen.get('right'))\n            || (attrs && !attrs.right && attrs.right !== null && xabber.body.screen.get('right')))\n            new_attrs.right = xabber.body.screen.get('right');\n        new_attrs = _.extend(new_attrs, attrs);\n        let chat_item_view;\n        if (_.isUndefined(new_attrs.chat_item)){\n            chat_item_view = this.screen.get('chat_item');\n            if (chat_item_view && chat_item_view.content)\n                chat_item_view.content._prev_scrolltop = chat_item_view.content.getScrollTop() || chat_item_view.content._scrolltop;\n        }\n        this.screen.set(_.extend(new_attrs, attrs), options);\n    },\n\n    isScreen: function (name) {\n        return this.screen.get('name') === name;\n    },\n\n    onScreenMapChanged: function () {\n        let name = this.screen.get('name');\n        if (_.has(this.screen_map.changed, name)) {\n            this.update();\n        }\n    },\n\n    update: function () {\n        let options = this.screen.attributes,\n            tree = this.screen_map.get(options.name);\n        if (typeof tree !== \"undefined\") {\n            this.onShow(options, tree);\n            this.model.trigger('update_screen', this.screen.get('name'));\n            this.model.trigger('update_layout', {screen_changed: options.name});\n        }\n    }\n});\n\nxabber.ToolbarView = xabber.BasicView.extend({\n    className: \"toolbar noselect\",\n    ps_selector: '.accounts',\n    template: templates.toolbar,\n\n    events: {\n        \"click .toolbar-logo\":             \"clickAllChats\",\n        \"click .all-chats\":             \"showAllChats\",\n        \"click .contacts\":              \"showContacts\",\n        \"click .archive-chats\":         \"showArchive\",\n        \"click .saved-chats\":           \"showSavedChats\",\n        \"click .mentions\":              \"showNotifications\",\n        \"click .settings\":              \"showSettings\",\n        \"click .settings-modal\":              \"showSettingsModal\",\n        \"click .jingle-calls\":              \"showPlaceholder\",\n        \"click .geolocation-chats\":              \"showPlaceholder\",\n        \"click .add-variant.contact\":   \"showAddContactView\",\n        \"click .add-variant.account\":   \"showAddAccountView\",\n        \"click .add-variant.public-groupchat\": \"showAddPublicGroupChatView\",\n        \"click .add-variant.incognito-groupchat\": \"showAddIncognitoGroupChatView\",\n    },\n\n    _initialize: function () {\n        this.$('.add-something').on(\"change_state\", function (ev, state) {\n            $(this).switchClass('active', state).find('.mdi')\n                    .switchClass('mdi-close', state)\n                    .switchClass('mdi-plus', !state);\n            if (state) {\n                this.setAttribute('data-title',  this.getAttribute('title'));\n                this.setAttribute('title', \"\");\n            } else {\n                this.setAttribute('title', this.getAttribute('data-title'));\n                this.removeAttribute('data-title');\n            }\n        });\n\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.data.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n        this.data.on(\"change:group_msg_counter\", this.onChangedGroupMessageCounter, this);\n        this.data.on(\"change:mentions_counter\", this.onChangedMentionsCounter, this);\n        this.data.on(\"change:msg_counter\", this.onChangedMessageCounter, this);\n        this.data.set({msg_counter: 0});\n        this.data.set({group_msg_counter: 0});\n        this.data.set({all_msg_counter: 0});\n        this.data.set({mentions_counter: 0});\n    },\n\n    render: function () {\n        this.$('.add-something').dropdown({\n            inDuration: 50,\n            outDuration: 50,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.$('.add-variant.account').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n    },\n\n    updateColor: function (color) {\n    },\n\n    onUpdatedScreen: function (name) {\n        if (name === 'account_settings'){\n            this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n            this.$('.toolbar-item:not(.toolbar-logo).settings').addClass('active');\n            return;\n        }\n        if (name === 'account_settings_modal'){\n            this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n            this.$('.toolbar-item:not(.toolbar-logo).settings-modal').addClass('active');\n            return;\n        }\n        if ((name === 'all-chats') &&\n            (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active') ||\n                this.$('.toolbar-item:not(.toolbar-logo).chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active'))) {\n            return;\n        }\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        if (_.contains(['all-chats', 'contacts', 'mentions',\n                        'settings', 'settings-modal', 'search', 'jingle-calls', 'geolocation-chats', 'about'], name)) {\n            this.$('.toolbar-item:not(.toolbar-logo).'+name).addClass('active');\n        }\n    },\n\n    clickAllChats: function (ev) {\n        this.$('.all-chats').click();\n    },\n\n    showAllChats: function (ev, no_unread) {\n        let $el;\n        if (ev && ev.target)\n            $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        else\n            $el = this.$('.all-chats');\n        let is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.all-chats').addClass('active').switchClass('unread', is_active);\n        let options = {}\n        no_unread && (options.no_unread = no_unread);\n        xabber.body.setScreen('all-chats', options);\n        xabber.trigger('show_all_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showArchive: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.archive-chats').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_archive_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showSavedChats: function (ev, no_unread) {\n        if (xabber.accounts.enabled.length === 1){\n            let saved_chat = xabber.accounts.enabled[0].chats.getSavedChat();\n            saved_chat.item_view && saved_chat.item_view.open({right_contact_save: true, clear_search: false, scroll_to_chat: true});\n            this.$('.active').removeClass('active');\n            this.$('.saved-chats').addClass('active');\n            saved_chat.once(\"change:active\", () => {\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).'+xabber.body.screen.get('name')).addClass('active');\n            });\n        } else {\n            this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n                .filter('.saved-chats').addClass('active');\n            xabber.body.setScreen('all-chats',);\n            xabber.trigger('show_saved_chats', no_unread);\n            xabber.trigger('update_placeholder');\n        }\n    },\n\n    showNotifications: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.mentions').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_notification_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showChatsByAccount: function (account) {\n        if (this.data.get('account_filtering') === account.get('jid'))\n            this.data.set('account_filtering', null);\n        else\n            this.data.set('account_filtering', account.get('jid'));\n        if (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active')) {\n            this.showAllChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active')) {\n            this.showArchive(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')) {\n            this.showSavedChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')) {\n            this.showNotifications(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).jingle-calls').hasClass('active') ||\n            this.$('.toolbar-item:not(.toolbar-logo).geolocation-chats').hasClass('active')){\n            this.showAllChats(null, true);\n            return;\n        }\n    },\n\n    showContacts: function () {\n        xabber.body.setScreen('contacts', {right_contact: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showMentions: function () {\n        xabber.body.setScreen('mentions');\n        xabber.trigger('update_placeholder');\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings');\n        xabber.trigger('update_placeholder');\n    },\n\n    showSettingsModal: function () {\n        xabber.body.setScreen('settings-modal');\n        xabber.trigger('update_placeholder');\n    },\n\n    showPlaceholder: function (ev) {\n        if (xabber.chats_view && xabber.chats_view.active_chat){\n            xabber.chats_view.active_chat.model.trigger('hide_chat');\n            xabber.chats_view.active_chat = null;\n        }\n        let screen_name = this.$('.toolbar-item:not(.toolbar-logo).settings').hasClass('active') ? 'all-chats' : xabber.body.screen.get('name');\n        xabber.body.setScreen(screen_name, {chat_item: null});\n        let $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        $el.addClass('active');\n        xabber.trigger('update_placeholder');\n    },\n\n    showAddContactView: function () {\n        xabber.trigger('add_contact', {right: null});\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    showAddIncognitoGroupChatView: function () {\n        xabber.trigger('add_group_chat', {incognito: true, right: null});\n    },\n\n    showAddPublicGroupChatView: function () {\n        xabber.trigger('add_group_chat', {public: true, right: null});\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0, count_all_msg = 0, count_group_msg = 0, mentions = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted()) {\n                    count_all_msg += chat.get('unread') + chat.get('const_unread');\n                    if (chat.contact.get('group_chat'))\n                        count_group_msg += chat.get('unread') + chat.get('const_unread');\n                    else\n                        count_msg += chat.get('unread') + chat.get('const_unread');\n                }\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_all_msg += incoming_subscriptions;\n            mentions += account.unread_mentions.length;\n        });\n        return { msgs: count_msg, all_msgs: count_all_msg, group_msgs: count_group_msg, mentions: mentions };\n    },\n\n    recountAllMessageCounter: function () {\n        let unread_messages = this.setAllMessageCounter();\n        this.data.set('all_msg_counter', unread_messages.all_msgs);\n        this.data.set('msg_counter', unread_messages.msgs);\n        this.data.set('group_msg_counter', unread_messages.group_msgs);\n        this.data.set('mentions_counter', unread_messages.mentions);\n    },\n\n    onChangedMessageCounter: function () {\n        let c = this.data.get('msg_counter');\n        this.$('.msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedGroupMessageCounter: function () {\n        let c = this.data.get('group_msg_counter');\n        this.$('.group-msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedMentionsCounter: function () {\n        let c = this.data.get('mentions_counter');\n        this.$('.mentions-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedAllMessageCounter: function () {\n        let c = this.data.get('all_msg_counter');\n        if (c >= 100)\n            c = '99+';\n        this.$('.all-msg-indicator').switchClass('unread', c).text(c);\n    },\n});\n\nxabber.JingleMessageView = xabber.BasicView.extend({\n    className: 'modal main-modal jingle-message-view',\n    template: templates.jingle_message_calling,\n    avatar_size: constants.AVATAR_SIZES.XABBER_VOICE_CALL_VIEW,\n\n    events: {\n        \"click\": \"clickOnWindow\",\n        \"click .btn-accept\": \"accept\",\n        \"click .btn-share-screen\": \"shareScreen\",\n        \"click .btn-microphone\": \"toggleMicrophone\",\n        \"click .btn-video\": \"videoCall\",\n        \"click .btn-volume\": \"toggleVolume\",\n        \"click .btn-collapse\": \"collapse\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-full-screen\": \"setFullScreen\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n        this.model.on('destroy', this.onDestroy, this);\n        this.contact = this.model.contact;\n        this.account = this.contact.account;\n        this.model.on('change:state', this.updateCallingStatus, this);\n        this.model.on('change:status', this.updateBackground, this);\n        this.model.on('change:volume_on', this.updateButtons, this);\n        this.model.on('change:video_live', this.updateButtons, this);\n        this.model.on('change:video_screen', this.updateButtons, this);\n        this.model.on('change:video_in', this.updateCollapsedWindow, this);\n        this.model.on('change:video', this.updateCollapsedWindow, this);\n        this.model.on('change:audio', this.updateButtons, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.updateName();\n        this.updateCallingStatus(options.status);\n        if (options.status === 'in') {\n            this.updateStatusText(xabber.getString(\"dialog_jingle_message__status_calling\"));\n        }\n        else {\n            this.model.set('status', 'calling');\n        }\n        this.updateAccountJid();\n        this.updateButtons();\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                this.updateAvatar();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.collapsed-movable').mousedown((e) => {\n                    e = e || window.event;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag)\n                            this.collapse();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        e.preventDefault();\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        // set the element's new position:\n                        this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                        this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                        didDrag = true;\n                    };\n                });\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n\n    },\n\n    setFullScreen: function () {\n        let video = this.$el.find('.webrtc-remote-video')[0],\n            local_video = this.$el.find('.webrtc-local-video')[0],\n            buttons = this.$el.find('.buttons-panel')[0];\n        if (!video)\n            return;\n        if (video.requestFullScreen) {\n            video.requestFullScreen();\n            local_video.requestFullScreen();\n            buttons.requestFullScreen();\n        }\n        else if (video.webkitRequestFullScreen) {\n            video.webkitRequestFullScreen();\n            local_video.webkitRequestFullScreen();\n            buttons.webkitRequestFullScreen();\n        }\n        else if (video.mozRequestFullScreen) {\n            video.mozRequestFullScreen();\n            local_video.mozRequestFullScreen();\n            buttons.mozRequestFullScreen();\n        }\n        else if (video.msRequestFullScreen) {\n            video.msRequestFullScreen();\n            local_video.msRequestFullScreen();\n            buttons.msRequestFullScreen();\n        }\n    },\n\n    cancelFullScreen: function () {\n        if (document.exitFullscreen) {\n            let full_screen_el = document.fullscreenElement;\n            full_screen_el && document.exitFullscreen().then(() => {\n                document.fullscreenElement && this.cancelFullScreen();\n            });\n        } else if (document.mozCancelFullScreen) { /* Firefox */\n            let full_screen_el = document.mozFullScreenElement;\n            full_screen_el && document.mozCancelFullScreen();\n            document.mozFullScreenElement && this.cancelFullScreen();\n        } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n            let full_screen_el = document.webkitCurrentFullScreenElement;\n            full_screen_el && document.webkitExitFullscreen();\n            document.webkitCurrentFullScreenElement && this.cancelFullScreen();\n        } else if (document.msExitFullscreen) { /* IE/Edge */\n            let full_screen_el = document.msFullscreenElement;\n            full_screen_el && document.msExitFullscreen();\n            document.msFullscreenElement && this.cancelFullScreen();\n        }\n    },\n\n    windowResized: function () {\n        this.$el.hasClass('collapsed') && this.$el.css('right', parseInt(xabber.main_panel.$el.css('margin-right')) + 8 + 'px');\n    },\n\n    updateButtons: function () {\n        this.$('.btn-video .video').switchClass('hidden', !this.model.get('video'));\n        this.$('.btn-share-screen').switchClass('active', this.model.get('video_screen'));\n        this.$('.btn-full-screen').switchClass('hidden', !this.model.get('video_in'));\n        this.$('.btn-video').switchClass('mdi-video active', this.model.get('video_live'))\n            .switchClass('mdi-video-off', !this.model.get('video_live'));\n        this.$('.btn-volume').switchClass('mdi-volume-high active', this.model.get('volume_on'))\n            .switchClass('mdi-volume-off', !this.model.get('volume_on'));\n        this.$('.btn-microphone').switchClass('active mdi-microphone', this.model.get('audio'))\n            .switchClass('mdi-microphone-off', !this.model.get('audio'));\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBackground: function () {\n        let status = this.model.get('status');\n        this.$el.attr('data-state', status);\n    },\n\n    updateCallingStatus: function (status) {\n        this.$('.buttons-wrap').switchClass('incoming', (status === 'in'));\n    },\n\n    updateStatusText: function (status) {\n        this.$('.calling-status').text(status || \"\");\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.contact.get('name'));\n    },\n\n    updateAccountJid: function () {\n        this.$('.modal-footer .contact-info .jid').text(this.contact.get('jid'));\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    shareScreen: function () {\n        this.model.set('video_screen', !this.model.get('video_screen'));\n    },\n\n    isFullScreen: function () {\n        if (document.fullscreenElement)\n            return true;\n        else if (document.webkitFullscreenElement)\n            return true;\n        else if (document.mozFullScreenElement)\n            return true;\n        else return false;\n    },\n\n    accept: function () {\n        this.model.accept();\n        this.updateCallingStatus(constants.JINGLE_MSG_ACCEPT);\n        this.model.initSession();\n    },\n\n    clickOnWindow: function (ev) {\n        if ($(ev.target).closest('.collapsed-movable').length)\n            return;\n        if ($(ev.target).closest('.video-wrap').length && this.$el.hasClass('collapsed') && this.$el.hasClass('collapsed-video'))\n            this.collapse();\n    },\n\n    collapse: function (ev) {\n        ev && ev.stopPropagation();\n        if (this.isFullScreen()) {\n            this.cancelFullScreen();\n            return;\n        }\n        let $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.toggle();\n        this.$el.toggleClass('collapsed');\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n        else {\n            this.$el.css('right', \"\");\n            this.$el.css('left', \"\");\n            this.$el.css('width', \"\");\n            this.$el.css('height', \"\");\n            this.$el.removeClass('collapsed-video');\n        }\n        this.windowResized();\n    },\n\n    updateCollapsedWindow: function () {\n        this.updateButtons();\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n    },\n\n    toggleMicrophone: function () {\n        this.model.set('audio', !this.model.get('audio'));\n    },\n\n    onDestroy: function () {\n        this.updateStatusText(xabber.getString(this.model.get('status') == 'device_busy' ? \"dialog_jingle_message__status_device_busy\" : this.model.get('status') == 'busy' ? \"dialog_jingle_message__status_busy\" : \"dialog_jingle_message__status_disconnected\"));\n        setTimeout(() => {\n            this.close();\n            this.$el.detach();\n        }, 3000);\n    },\n\n    videoCall: function () {\n        this.model.set('video_live', !this.model.get('video_live'));\n    },\n\n    toggleVolume: function (ev) {\n        let $target = $(ev.target);\n        $target.switchClass(this.model.set('volume_on', !this.model.get('volume_on')));\n    },\n\n    cancel: function () {\n        this.model.reject();\n        this.close();\n    }\n});\n\nxabber.PlyrPlayerPopupView = xabber.BasicView.extend({\n    className: 'modal main-modal player-overlay plyr-player-popup-view',\n    template: templates.plyr_player_popup,\n\n    events: {\n        \"click .mdi-close\": \"closePopup\",\n        \"click .mdi-minimize-float\": \"floatPopup\",\n        \"click .mdi-minimize-full\": \"fullPopup\",\n        \"click .mdi-plyr-hide\": \"hidePopup\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .mdi-open-message\": \"openMessage\",\n        \"click .mdi-toggle-play\": \"togglePlay\",\n        \"click .mdi-toggle-mute\": \"toggleMute\",\n    },\n\n    _initialize: function (options) {\n        this.data.set('visibility_state', 0);\n        this.data.on('change:visibility_state', this.onVisibilityChange, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                if (!this.player){\n                    this.player = new Plyr('.plyr-player-popup', {\n                        controls: [\n                            'play-large', 'play', 'progress', 'duration', 'mute', 'volume', 'settings', 'download', 'fullscreen',\n                        ],\n                        youtube: {controls: 0, disablekb: 1, iv_load_policy: 3, modestbranding: 1, rel: 0, showinfo: 0}\n                    });\n                    this.player.on('play',(event) => {\n                        let other_players = xabber.plyr_players.filter(other => other != this.player);\n                        other_players.forEach(function(other) {\n                            if (other.$audio_elem){\n                                if (other.$audio_elem.voice_message)\n                                    other.$audio_elem.voice_message.stopTime();\n                            }\n                        })\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('pause',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('timeupdate',(event) => {\n                        xabber.trigger('plyr_player_time_updated');\n                    });\n                    this.player.on('volumechange',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('statechange',(event) => {\n                        if (event.detail.code === 3) {\n                            this.$('.plyr-player-popup-draggable').removeClass('hidden');\n                            this.$('.plyr-player-popup-draggable').css({\n                                width: '',\n                                height: '',\n                            });\n                        }\n                        xabber.trigger('plyr_player_updated');\n                    });\n                }\n                this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).mousedown(() => {this.minimizePopup()});\n                this.showNewVideo(options);\n                this.onVisibilityChange();\n                this.updatePlyrControls();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.plyr-player-min-controls-tab').mousedown((e) => {\n                    e = e || window.event;\n                    if ($(e.target).closest('.plyr__control--overlaid').length || $(e.target).closest('.plyr__controls').length || $(e.target).closest('.mdi-close').length || $(e.target).closest('.plyr-player-min-controls-buttons').length)\n                        return;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag && !$(e.target).closest('.plyr__control--overlaid').length)\n                            this.$('.plyr__video-wrapper').click();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        didDrag = true;\n                        e.preventDefault();\n                        if (this.$el.hasClass('player-overlay'))\n                            return;\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n\n                        let xPercent = (((this.$el.offset().left - this.pos1)/window.innerWidth) * 100),\n                            yPercent = (((this.$el.offset().top - this.pos2)/window.innerHeight) * 100);\n\n\n                        // set the element's new position:\n                        this.$el.css('left', xPercent + '%');\n                        this.$el.css('top', yPercent + '%');\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                    };\n                });\n            },\n        });\n\n    },\n\n    showNewVideo: function (options) {\n        options = options || {};\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (options.player.provider === 'youtube'){\n                this.$('.plyr-player-popup-draggable').addClass('hidden');\n                this.$('.plyr-player-popup-draggable').css({\n                    width: 400,\n                    height: 200,\n                });\n            }\n            this.account = options.player.chat_item.account;\n            this.updateColorScheme();\n            this.player.chat_item = options.player.chat_item;\n            this.player.player_item = options.player;\n            this.player.message_unique_id = options.player.message_unique_id;\n            let video_sources = {\n                src: options.player.video_src,\n                provider: options.player.provider,\n            };\n            options.player.type && (video_sources.type = options.player.type);\n            this.player.source = {\n                type: 'video',\n                sources: [\n                    video_sources,\n                ],\n            }\n            xabber.current_plyr_player = this.player;\n            this.player.once('ready',(event) => {\n                let $minimize_element_float = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-float mdi-svg-template\" data-svgname=\"player-float\"></svg>')\n                $minimize_element_float.append(env.templates.svg['player-float']())\n                $minimize_element_float.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $minimize_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-full mdi-svg-template\" data-svgname=\"player-full\"></svg>')\n                $minimize_element_full.append(env.templates.svg['player-full']())\n                $minimize_element_full.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $show_message_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-open-message mdi-svg-template\" data-svgname=\"message-bookmark-outline\"></svg>')\n                $show_message_element_full.append(env.templates.svg['message-bookmark-outline']())\n                $show_message_element_full.insertAfter(this.$('.plyr__controls__item[data-plyr=\"download\"]'));\n                let $previous_element = $('<div class=\"btn-previous-plyr\"><i class=\"mdi mdi-skip-previous mdi-24px\"></i></div>')\n                $previous_element.insertBefore(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                let $next_element = $('<div class=\"btn-next-plyr\"><i class=\"mdi mdi-skip-next mdi-24px\"></i></div>')\n                $next_element.insertAfter(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                this.player.play();\n                xabber.trigger('plyr_player_updated');\n            });\n        });\n\n        if (options.player && options.player.video_file && options.player.video_file.key) {\n            options.player.key = options.player.video_file.key;\n            options.player.video_file.type && (options.player.type = options.player.video_file.type);\n        }\n\n        if (options.player && options.player.key && options.player.chat_item.model && options.player.video_src && !options.player.video_decrypted){\n            options.player.chat_item.model.messages.decryptFile(options.player.video_src, options.player.key).then((result) => {\n                options.player.video_src = result;\n                options.player.video_decrypted = true;\n                dfd.resolve();\n            });\n        } else\n            dfd.resolve();\n    },\n\n    closePopup: function () {\n        this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).detach();\n        this.$el.detach();\n        xabber.current_plyr_player = null;\n        xabber.plyr_player_popup = null;\n        xabber.trigger('plyr_player_updated');\n    },\n\n    minimizePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        let visibility_state = this.data.get('visibility_state');\n        visibility_state = visibility_state + 1;\n        (visibility_state > 2) && (visibility_state = 0);\n        this.data.set('visibility_state', visibility_state);\n    },\n\n    hidePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 2);\n    },\n\n    floatPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 1);\n    },\n\n    fullPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 0);\n    },\n\n    onVisibilityChange: function () {\n        let visibility_state = this.data.get('visibility_state'),\n            $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.switchClass('hidden', visibility_state != 0);\n        this.$el.switchClass('player-overlay', visibility_state === 0);\n        this.$el.switchClass('hidden', visibility_state === 2);\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        if (xabber.current_plyr_player) {\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            this.$('.mdi-plyr-play').switchClass('hidden', xabber.current_plyr_player.playing);\n            this.$('.mdi-plyr-pause').switchClass('hidden', !xabber.current_plyr_player.playing);\n            this.$('.mdi-mute-plyr').switchClass('hidden', !xabber.current_plyr_player.muted);\n            this.$('.mdi-unmute-plyr').switchClass('hidden', xabber.current_plyr_player.muted);\n        }\n    },\n\n    openMessage: function () {\n        if (!(this.player && this.player.chat_item && this.player.message_unique_id))\n            return;\n        this.floatPopup();\n        let chat = this.player.chat_item.model;\n        xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n        xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n        if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n            if (xabber.right_contact_panel_saveable)\n                chat.contact.showDetailsRight('all-chats', {right_saved: true});\n            else\n                chat.contact.showDetailsRight('all-chats', {right_saved: false});\n        }\n        chat.getMessageContext(this.player.message_unique_id, {message: true});\n    },\n\n    togglePlay: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n    },\n\n    toggleMute: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        xabber.current_plyr_player.muted = !xabber.current_plyr_player.muted;\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.SettingsView = xabber.BasicView.extend({\n    className: 'settings-panel',\n    template: templates.settings,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"click .settings-tabs-wrap .settings-tab:not(.delete-all-accounts)\": \"jumpToBlock\",\n        \"click .btn-add-account\": \"showAddAccountView\",\n        \"click .setting.idling label\": \"setIdling\",\n        \"click .setting.notifications label\": \"setNotifications\",\n        \"click .setting.private-notifications label\": \"setPrivateNotifications\",\n        \"click .setting.group-notifications label\": \"setGroupNotifications\",\n        \"click .setting.message-preview.private-preview label\": \"setPrivateMessagePreview\",\n        \"click .setting.message-preview.group-preview label\": \"setGroupMessagePreview\",\n        \"click .setting.call-attention label\": \"setCallAttention\",\n        \"click .setting.load-media label\": \"setLoadMedia\",\n        \"click .setting.typing-notifications label\": \"setTypingNotifications\",\n        \"click .setting.mapping-service label\": \"setMappingService\",\n        \"change .sound input[type=radio][name=private_sound]\": \"setPrivateSound\",\n        \"change .sound input[type=radio][name=group_sound]\": \"setGroupSound\",\n        \"change .sound input[type=radio][name=call_sound]\": \"setCallSound\",\n        \"change .sound input[type=radio][name=dialtone_sound]\": \"setDialtoneSound\",\n        \"change .sound input[type=radio][name=attention_sound]\": \"setAttentionSound\",\n        \"change .languages-list input[type=radio][name=language]\": \"changeLanguage\",\n        \"change #vignetting\": \"changeVignetting\",\n        \"change #blur\": \"changeBlur\",\n        \"change #notifications_volume\": \"changeNotificationsVolume\",\n        \"change #blur_switch\": \"switchBlur\",\n        \"change #vignetting_switch\": \"switchVignetting\",\n        \"click .selected-color-wrap\": \"openColorPicker\",\n        \"click .current-main-color-wrap\": \"openMainColorPicker\",\n        \"change .background input[type=radio][name=background]\": \"setBackground\",\n        \"click .current-background-wrap\": \"changeBackgroundImage\",\n        \"change .hotkeys input[type=radio][name=hotkeys]\": \"setHotkeys\",\n        \"change .avatar-shape input[type=radio][name=avatar_shape]\": \"setAvatarShape\",\n        \"click .settings-tab.delete-all-accounts\": \"deleteAllAccounts\"\n    },\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(xabber.get('version_number'));\n        xabber.on('update_main_color', this.updateMainColor, this);\n    },\n\n    render: function () {\n        let settings = this.model.attributes,\n            lang = settings.language;\n        this.$('.notifications input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.private-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_private});\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !settings.notifications_private)\n        this.$('.group-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_group});\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.message-preview.private-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_private});\n        this.$('.message-preview.group-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_group});\n        this.$('.call-attention input[type=checkbox]')\n            .prop({checked: settings.call_attention});\n        this.$('.load-media input[type=checkbox]')\n            .prop({checked: settings.load_media});\n        this.$('.typing-notifications input[type=checkbox]')\n            .prop({checked: settings.typing_notifications});\n        this.$('.idling input[type=checkbox]')\n            .prop({checked: settings.idling});\n        this.$('.mapping-service input[type=checkbox]')\n            .prop({checked: settings.mapping_service});\n        let sound_private_value = settings.private_sound ? settings.sound_on_private_message : '';\n        this.$(`.sound input[type=radio][name=private_sound][value=\"${sound_private_value}\"]`)\n                .prop('checked', true);\n        let sound_group_value = settings.group_sound ? settings.sound_on_group_message : '';\n        this.$(`.sound input[type=radio][name=group_sound][value=\"${sound_group_value}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=call_sound][value=\"${settings.sound_on_call}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=dialtone_sound][value=\"${settings.sound_on_dialtone}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=attention_sound][value=\"${settings.sound_on_attention}\"]`)\n                .prop('checked', true);\n        this.$(`.hotkeys input[type=radio][name=hotkeys][value=${settings.hotkeys}]`)\n                .prop('checked', true);\n        this.$(`.avatar-shape input[type=radio][name=avatar_shape][value=${settings.avatar_shape}]`)\n                .prop('checked', true);\n        (lang == xabber.get(\"default_language\")) && (lang = 'default');\n        this.$(`.languages-list input[type=radio][name=language][value=\"${lang}\"]`)\n            .prop('checked', true);\n        let notifications_volume = !isNaN(settings.notifications_volume) ? settings.notifications_volume * 100 : 100;\n        this.$(`#notifications_volume`).val(notifications_volume);\n        this.$('.settings-panel-head span').text(this.$('.settings-block-wrap:not(.hidden)').attr('data-header'))\n        this.updateDescription();\n        this.updateBackgroundSetting();\n        this.updateColor();\n        this.updateMainColor();\n        this.$('.toolbar-main-color-setting-wrap .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            belowOrigin: true,\n            hover: false\n        });\n        return this;\n    },\n\n    updateMainColor: function () {\n        this.$('.toolbar-main-color-setting').attr('data-color', this.model.get('main_color'));\n        this.$('.toolbar-main-color-setting .color-name').text(xabber.getString(`account_color_name_${this.model.get('main_color').replace(/-/g, \"_\")}`).replace(/-/g, \" \"));\n    },\n\n    updateBackgroundSetting: function () {\n        this.$(`.background input[type=radio][name=background][value=${this.model.get('background').type}]`)\n            .prop('checked', true);\n        if (this.model.get('background').image) {\n            this.$('.current-background').css('background-image', `url(${utils.images.getCachedBackground(this.model.get('background').image)})`);\n        }\n        this.$('.current-background-wrap').switchClass('hidden', !this.model.get('background').image);\n        let appearance = this.model.get('appearance'),\n            blur_switched = appearance.blur !== false,\n            vignetting_switched = appearance.vignetting !== false;\n        this.$('#blur_switch')[0].checked = blur_switched;\n        this.$('.blur-setting .disabled').switchClass('hidden', blur_switched);\n        this.$('#blur')[0].value = blur_switched ? appearance.blur : constants.BLUR_VALUE;\n\n        this.$('#vignetting_switch')[0].checked = vignetting_switched;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', vignetting_switched);\n        this.$('#vignetting')[0].value = vignetting_switched ? appearance.vignetting : constants.VIGNETTING_VALUE;\n        this.updateScrollBar();\n    },\n\n    updateColor: function () {\n        let color = this.model.get('appearance').color || '#E0E0E0';\n        this.$('.selected-color-item').css('background-color', color);\n        this.$('.selected-color-hex').text(color);\n        let material_color = xabber.ColorPicker.prototype.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == color.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == color.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        xabber.toolbar_view.updateColor(color);\n    },\n\n    jumpToBlock: function (ev) {\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.data('block-name'));\n        this.$('.btn-add-account').hideIf($tab.data('block-name') != 'xmpp-accounts')\n        if ($tab.hasClass('link-button')) {\n            $tab.parent().siblings().removeClass('active');\n            this.scrollTo(0);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span').text($elem.attr('data-header'))\n        $tab.addClass('active').siblings().removeClass('active');\n        this.scrollToChild($elem);\n    },\n\n    setIdling: function (ev) {\n        let value = !this.model.get('idling');\n        this.model.save('idling', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.idling').find('input').prop('checked', value);\n    },\n\n    setNotifications: function (ev) {\n        let value = this.model.get('notifications'),\n            $target = $(ev.target);\n        ev.preventDefault();\n        if (value === null) {\n            utils.callback_popup_message(xabber.getString(\"notifications__toast_notifications_not_supported\"), 1500);\n        } else {\n            value = value && xabber._cache.get('notifications');\n            if (!xabber._cache.get('notifications')) {\n                window.Notification.requestPermission((permission) => {\n                    xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n                    xabber.notifications_placeholder && xabber.notifications_placeholder.close();\n                    value = (permission === 'granted');\n                    this.model.save('notifications', value ? value : this.model.get('notifications'));\n                    $target.closest('.setting.notifications').find('input').prop('checked', value);\n                });\n            } else {\n                value = !value;\n                this.model.save('notifications', value);\n                $target.closest('.setting.notifications').find('input').prop('checked', value);\n            }\n        }\n    },\n\n    setPrivateNotifications: function (ev) {\n        let value = !this.model.get('notifications_private');\n        this.model.save('notifications_private', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !value)\n        $(ev.target).closest('.setting.private-notifications').find('input').prop('checked', value);\n    },\n\n    setGroupNotifications: function (ev) {\n        let value = !this.model.get('notifications_group');\n        this.model.save('notifications_group', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !value)\n        $(ev.target).closest('.setting.group-notifications').find('input').prop('checked', value);\n    },\n\n    setPrivateMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_private');\n        this.model.save('message_preview_private', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setGroupMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_group');\n        this.model.save('message_preview_group', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setCallAttention: function (ev) {\n        let value = !this.model.get('call_attention');\n        this.model.save('call_attention', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.call-attention').find('input').prop('checked', value);\n    },\n\n    setLoadMedia: function (ev) {\n        let value = !this.model.get('load_media');\n        this.model.save('load_media', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.load-media').find('input').prop('checked', value);\n    },\n\n    setTypingNotifications: function (ev) {\n        let value = !this.model.get('typing_notifications');\n        this.model.save('typing_notifications', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.typing-notifications').find('input').prop('checked', value);\n    },\n\n    setMappingService: function (ev) {\n        let value = !this.model.get('mapping_service');\n        this.model.save('mapping_service', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.mapping-service').find('input').prop('checked', value);\n    },\n\n    setPrivateSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, this.model.get('notifications_volume'));\n            this.model.save({private_sound: true, sound_on_private_message: value});\n        } else {\n            this.model.save('private_sound', false);\n        }\n    },\n\n    setGroupSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, this.model.get('notifications_volume'));\n            this.model.save({group_sound: true, sound_on_group_message: value});\n        } else {\n            this.model.save('group_sound', false);\n        }\n    },\n\n    setCallSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_call: value});\n    },\n\n    setDialtoneSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_dialtone: value});\n    },\n\n    setAttentionSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_attention: value});\n    },\n\n    setBackground: function (ev) {\n        let value = ev.target.value;\n        if (value == 'default') {\n            this.model.save('background', {type: 'default'});\n            xabber.body.updateBackground();\n            this.updateBackgroundSetting();\n        } else if (value == 'repeating-pattern' || value == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: value, model: this.model});\n        }\n    },\n\n    changeBackgroundImage: function () {\n        let type = this.model.get('background').type;\n        if (type == 'repeating-pattern' || type == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: type, model: this.model});\n        }\n    },\n\n    openColorPicker: function () {\n        if (!this.colorPicker)\n            this.colorPicker = new xabber.ColorPicker({model: this.model});\n        this.colorPicker.render();\n    },\n\n    openMainColorPicker: function () {\n        if (!this.mainColorPicker)\n            this.mainColorPicker = new xabber.mainColorPicker({model: this.model});\n        this.mainColorPicker.render();\n    },\n\n    changeBlur: function () {\n        let value = this.$('#blur')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBlur(value);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n    },\n\n    changeNotificationsVolume: function () {\n        let volume = this.$('#notifications_volume')[0].value / 100,\n            sound = this.$('.sound input[type=radio][name=private_sound]:checked').val() || this.$('.sound input[type=radio][name=group_sound]:checked').val();\n        this.model.save('notifications_volume', volume);\n        if (sound) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(sound, false, volume);\n        }\n    },\n\n    changeVignetting: function () {\n        let value = this.$('#vignetting')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBoxShadow(value);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n    },\n\n    switchVignetting: function () {\n        let is_switched = this.$('#vignetting_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? constants.VIGNETTING_VALUE : false;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', is_switched);\n        this.$('#vignetting')[0].value = constants.VIGNETTING_VALUE;\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n        xabber.body.updateBoxShadow(value);\n    },\n\n    switchBlur: function () {\n        let is_switched = this.$('#blur_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? constants.BLUR_VALUE : false;\n        this.$('.blur-setting .disabled').switchClass('hidden', is_switched);\n        this.$('#blur')[0].value = constants.BLUR_VALUE;\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n        xabber.body.updateBlur(value);\n    },\n\n    setHotkeys: function (ev) {\n        this.model.save('hotkeys', ev.target.value);\n    },\n\n    setAvatarShape: function (ev) {\n        this.model.save('avatar_shape', ev.target.value);\n        xabber.trigger('update_avatar_shape');\n    },\n\n    deleteAllAccounts: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"settings__dialog_quit_client__confirm\", [constants.CLIENT_NAME]), null, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            res && xabber.trigger('quit');\n        });\n    },\n\n    changeLanguage: function (ev) {\n        let value = ev.target.value;\n        utils.dialogs.ask(xabber.getString(\"settings__dialog_change_language__header\"), xabber.getString(\"settings__dialog_change_language__confirm\"), null, { ok_button_text: xabber.getString(\"settings__dialog_change_language__button_change\")}).done((result) => {\n            if (result) {\n                this.model.save('language', value);\n                window.location.reload(true);\n            } else {\n                this.$(`.languages-list input[type=radio][name=language][value=\"${this.model.get('language')}\"]`)\n                    .prop('checked', true);\n            }\n        });\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    updateDescription: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        (lang == 'default' || !lang.indexOf('en')) && (progress = 100);\n        if (!_.isUndefined(progress)) {\n            let progress_text, platform_text;\n            if (progress == 100) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__interface_language__text_description_full_translation_platform\",\n                    [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`]);\n            } else if (progress == 0) {\n                progress_text = xabber.getString(\"settings__section_interface_language__text_description_no_translations\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__interface_language__text_description_no_translation_platform\",\n                        [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`]);\n            } else {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_unfull_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__section_interface_language__text_description_translation_platform\",\n                    [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`, constants.EMAIL_FOR_JOIN_TRANSLATION]);\n            }\n            this.$('.description').html(`${progress_text}<br><br>${platform_text}`);\n        }\n    }\n});\n\nxabber.SettingsModalView = xabber.BasicView.extend({\n    className: 'settings-panel-wrap',\n    template: templates.settings_modal,\n    ps_selector: '.settings-panel',\n\n    events: {\n        \"click .background-overlay\": \"closeSettings\",\n        \"click .btn-back\": \"backToMenu\",\n        \"click .btn-back-subsettings\": \"backToSubMenu\",\n        \"click .settings-tabs-wrap.global-settings-tabs .settings-tab:not(.delete-all-accounts)\": \"jumpToBlock\",\n        \"click .btn-add-account\": \"showAddAccountView\",\n        \"click .setting.idling label\": \"setIdling\",\n        \"change #idle_timeout\": \"setIdlingTimeout\",\n        \"click .setting.notifications label\": \"setNotifications\",\n        \"click .private-notifications label\": \"setPrivateNotifications\",\n        \"click .group-notifications label\": \"setGroupNotifications\",\n        \"click .jingle-calls label\": \"setJingleCalls\",\n        \"click .setting.message-preview.private-preview label\": \"setPrivateMessagePreview\",\n        \"click .setting.message-preview.group-preview label\": \"setGroupMessagePreview\",\n        \"click .call-attention label\": \"setCallAttention\",\n        \"click .setting.load-media label\": \"setLoadMedia\",\n        \"click .setting.typing-notifications label\": \"setTypingNotifications\",\n        \"click .setting.mapping-service label\": \"setMappingService\",\n        \"change .sound input[type=radio][name=private_sound]\": \"setPrivateSound\",\n        \"change .sound input[type=radio][name=group_sound]\": \"setGroupSound\",\n        \"change .sound input[type=radio][name=call_sound]\": \"setCallSound\",\n        \"change .sound input[type=radio][name=dialtone_sound]\": \"setDialtoneSound\",\n        \"change .sound input[type=radio][name=attention_sound]\": \"setAttentionSound\",\n        \"change .languages-list input[type=radio][name=language]\": \"changeLanguage\",\n        \"change #vignetting\": \"changeVignetting\",\n        \"change #blur\": \"changeBlur\",\n        \"change #notifications_volume\": \"changeNotificationsVolume\",\n        \"change #blur_switch\": \"switchBlur\",\n        \"change #vignetting_switch\": \"switchVignetting\",\n        \"click .selected-color-wrap\": \"openColorPicker\",\n        \"click .client-main-color-item\": \"chooseMainColor\",\n        \"change .background input[type=radio][name=background]\": \"setBackground\",\n        \"click .current-background-wrap\": \"changeBackgroundImage\",\n        \"change .hotkeys input[type=radio][name=hotkeys]\": \"setHotkeys\",\n        \"change .avatar-shape input[type=radio][name=avatar_shape]\": \"setAvatarShape\",\n        \"click .settings-tab.delete-all-accounts\": \"deleteAllAccounts\"\n    },\n\n    _initialize: function (options) {\n        this.$('.xabber-info-wrap .version').text(xabber.get('version_number'));\n        xabber.on('update_main_color', this.updateMainColor, this);\n        this.model.on('change:language', this.updateLanguage, this);\n        this.model.on('change:avatar_shape', this.updateAvatarLabel, this);\n        this.model.on('change:notifications_private', this.updateSoundsLabel, this);\n        this.model.on('change:notifications_group', this.updateSoundsLabel, this);\n        this.model.on('change:call_attention', this.updateSoundsLabel, this);\n        this.model.on('change:private_sound', this.updateSoundsLabel, this);\n        this.model.on('change:group_sound', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_private_message', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_group_message', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_call', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_dialtone', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_attention', this.updateSoundsLabel, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        xabber.once('accounts_ready',() => {\n            xabber.accounts.on(\"list_changed\", this.updateAccounts, this);\n        })\n    },\n\n    render: function () {\n        let settings = this.model.attributes,\n            lang = settings.language;\n        this.$('.notifications input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.private-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_private});\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !settings.notifications_private)\n        this.$('.sound input[type=radio][name=call_sound]').prop('disabled', !settings.jingle_calls);\n        this.$('.sound input[type=radio][name=dialtone_sound]').prop('disabled', !settings.jingle_calls);\n        this.$('.group-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_group});\n        this.$('.jingle-calls input[type=checkbox]')\n            .prop({checked: settings.jingle_calls});\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.sound input[type=radio][name=attention_sound]').prop('disabled', !settings.call_attention)\n        this.$('.message-preview.private-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_private}).prop('disabled', !(settings.notifications && xabber._cache.get('notifications') && settings.notifications_private));\n        this.$('.message-preview.group-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_group}).prop('disabled', !(settings.notifications && xabber._cache.get('notifications') && settings.notifications_group));\n        this.$('.call-attention input[type=checkbox]')\n            .prop({checked: settings.call_attention});\n        this.$('.load-media input[type=checkbox]')\n            .prop({checked: settings.load_media});\n        this.$('.typing-notifications input[type=checkbox]')\n            .prop({checked: settings.typing_notifications});\n        this.$('.idling input[type=checkbox]')\n            .prop({checked: settings.idling});\n        this.$('#idle_timeout')\n            .val(settings.idling_time).prop('disabled', !settings.idling);\n        this.$('.mapping-service input[type=checkbox]')\n            .prop({checked: settings.mapping_service});\n        let sound_private_value = settings.private_sound ? settings.sound_on_private_message : '';\n        this.$(`.sound input[type=radio][name=private_sound][value=\"${sound_private_value}\"]`)\n                .prop('checked', true);\n        let sound_group_value = settings.group_sound ? settings.sound_on_group_message : '';\n        this.$(`.sound input[type=radio][name=group_sound][value=\"${sound_group_value}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=call_sound][value=\"${settings.sound_on_call}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=dialtone_sound][value=\"${settings.sound_on_dialtone}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=attention_sound][value=\"${settings.sound_on_attention}\"]`)\n                .prop('checked', true);\n        this.$(`.hotkeys input[type=radio][name=hotkeys][value=${settings.hotkeys}]`)\n                .prop('checked', true);\n        this.$(`.avatar-shape input[type=radio][name=avatar_shape][value=${settings.avatar_shape}]`)\n                .prop('checked', true);\n        (lang == xabber.get(\"default_language\")) && (lang = 'default');\n        this.$(`.languages-list input[type=radio][name=language][value=\"${lang}\"]`)\n            .prop('checked', true);\n        this.$(`.client-main-color-item`).removeClass('chosen-client-color');\n        this.$(`.client-main-color-item[data-value=\"${settings.main_color}\"]`).addClass('chosen-client-color');\n        let notifications_volume = !isNaN(settings.notifications_volume) ? settings.notifications_volume * 100 : 100;\n        this.$(`#notifications_volume`).val(notifications_volume);\n        this.$('.settings-panel-head span').text(this.$('.settings-block-wrap:not(.hidden)').attr('data-header'))\n        this.updateAccounts();\n        this.updateAvatarLabel();\n        this.updateSoundsLabel();\n        this.updateDescription();\n        this.updateBackgroundSetting();\n        this.updateColor();\n        this.updateMainColor();\n        this.updateLanguage();\n        this.$('.toolbar-main-color-setting-wrap .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            belowOrigin: true,\n            hover: false\n        });\n        this.$('.left-column').removeClass('hidden');\n        this.$('.left-column .settings-tabs-wrap.global-settings-tabs').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back').removeClass('hidden');\n        this.$('.btn-back-subsettings').addClass('hidden');\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.updateHeight();\n        this.updateSliders();\n        return this;\n    },\n\n    updateAccounts: function () {\n        if (this.settings_single_account_modal){\n            this.settings_single_account_modal.removeChild('blocklist');\n            this.settings_single_account_modal.removeChild('account_password_view');\n            this.removeChild('single_account');\n        }\n        if (xabber.accounts.length === 1){\n            this.$('.accounts-info-wrap').addClass('hidden');\n            this.$('.btn-add-account').addClass('hidden');\n            this.$('.single-account-info-wrap').removeClass('hidden');\n            let first_account = xabber.accounts.models[0];\n            this.single_account_has_rendered = false;\n            this.settings_single_account_modal = this.addChild('single_account', xabber.AccountSettingsSingleModalView, {\n                model: first_account,\n                forced_ps_container: this.ps_container,\n                el: this.$('.single-account-info-wrap .single-account-info')[0]\n            });\n            if (!this.single_account_has_rendered){\n                this.settings_single_account_modal.show();\n            }\n            first_account.trigger('render_single_settings', this.settings_single_account_modal);\n            this.settings_single_account_modal.addChild('blocklist', xabber.BlockListView, {\n                account: first_account,\n                el: this.settings_single_account_modal.$('.blocklist-info')[0]\n            });\n            this.settings_single_account_modal.addChild('account_password_view', xabber.ChangeAccountPasswordView, {\n                model: first_account,\n                el: this.settings_single_account_modal.$('.change-password-container')[0]\n            });\n        } else {\n            this.$('.btn-add-account').removeClass('hidden');\n            this.$('.accounts-info-wrap').removeClass('hidden');\n            this.$('.single-account-info-wrap').addClass('hidden');\n        }\n        this.updateHeight();\n    },\n\n    updateMainColor: function () {\n        this.$('.toolbar-main-color-setting').attr('data-color', this.model.get('main_color'));\n    },\n\n    updateBackgroundSetting: function () {\n        this.$(`.background input[type=radio][name=background][value=${this.model.get('background').type}]`)\n            .prop('checked', true);\n        if (this.model.get('background').image) {\n            this.$('.current-background').css('background-image', `url(${utils.images.getCachedBackground(this.model.get('background').image)})`);\n        }\n        this.$('.current-background-wrap').switchClass('hidden', !this.model.get('background').image);\n        let appearance = this.model.get('appearance'),\n            blur_switched = appearance.blur !== false,\n            vignetting_switched = appearance.vignetting !== false;\n        this.$('#blur_switch')[0].checked = blur_switched;\n        this.$('.blur-setting .disabled').switchClass('hidden', blur_switched);\n        if (blur_switched)\n            this.$('#blur')[0].value = appearance.blur;\n        this.$('#vignetting_switch')[0].checked = vignetting_switched;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', vignetting_switched);\n        if (vignetting_switched)\n            this.$('#vignetting')[0].value = appearance.vignetting;\n        this.updateScrollBar();\n    },\n\n    updateColor: function () {\n        let color = this.model.get('appearance').color || '#E0E0E0';\n        this.$('.selected-color-item').css('background-color', color);\n        this.$('.selected-color-hex').text(color);\n        let material_color = xabber.ColorPicker.prototype.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == color.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == color.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        xabber.toolbar_view.updateColor(color);\n    },\n\n    jumpToBlock: function (ev) {\n        if ($(ev.target).closest('.switch').length)\n            return;\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.data('block-name'));\n        if ($tab.hasClass('link-button')) {\n            $tab.parent().siblings().removeClass('active');\n            this.scrollTo(0);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        this.$('.left-column').addClass('hidden');\n        this.$('.right-column').removeClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span').text($elem.attr('data-header'))\n        $tab.addClass('active').siblings().removeClass('active');\n        if ($tab.closest('.right-column') && $tab.attr('data-subblock-parent-name')) {\n            this.$('.btn-back').addClass('hidden');\n            this.$('.btn-back-subsettings').removeClass('hidden');\n            this.$('.btn-back-subsettings').attr('data-subblock-parent-name', $tab.attr('data-subblock-parent-name'));\n        }\n        if ($tab.data('block-name') === 'interface_language')\n            this.$('.settings-panel-head .description').removeClass('hidden');\n        else\n            this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    updateHeight: function () {\n        let height;\n        if (!this.$('.left-column.main-left-column').hasClass('hidden'))\n            height = this.$('.left-column.main-left-column').height();\n        if (!this.$('.right-column.main-right-column').hasClass('hidden'))\n            height = this.$('.right-column.main-right-column').height();\n        this.ps_container.css('height', height + 'px');\n        setTimeout(() => {\n            this.updateScrollBar();\n        }, 500)\n    },\n\n    updateSliders: function () {\n        this.$('.range-field.range-field-design').each((idx, item) => {\n            let $input = $(item).find('input'),\n                range_min = $input.attr('min'),\n                range_max = $input.attr('max'),\n                range_value = $input.val(),\n                left =  ((182 / (range_max - range_min)) * (range_value - range_min)) + 10;\n            $(item).find('span.thumb').css('left', left + 'px');\n            if ($input.hasClass('materialize-timer'))\n                $(item).find('span.value').text(range_value + 's');\n            else\n                $(item).find('span.value').text(range_value);\n        })\n\n    },\n\n    onScrollY: function () {\n        if (this.getScrollTop() === 0)\n            this.$('.settings-panel-head').removeClass('lined-head')\n        else\n            this.$('.settings-panel-head').addClass('lined-head')\n    },\n\n    closeSettings: function (ev) {\n        xabber.toolbar_view.showAllChats();\n    },\n\n    backToMenu: function (ev) {\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToSubMenu: function (ev) {\n        let $tab = $(ev.target).closest('.btn-back-subsettings'),\n            block_name = $tab.attr('data-subblock-parent-name'),\n            $elem = this.$('.settings-block-wrap.' + block_name);\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        this.$('.btn-back').removeClass('hidden');\n        this.$('.btn-back-subsettings').addClass('hidden');\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    setIdling: function (ev) {\n        let value = !this.model.get('idling');\n        this.model.save('idling', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.idling').find('input').prop('checked', value);\n        this.$('#idle_timeout').prop('disabled', !value);\n    },\n\n    setIdlingTimeout: function (ev) {\n        let $target = $(ev.target),\n            value = $(ev.target).val();\n        value = parseInt(value);\n        if (_.isNaN(value)){\n            value = constants.IDLING_DEFAULT_TIMEOUT;\n        } else if (value < constants.IDLING_MINIMAL_TIMEOUT){\n            value = constants.IDLING_MINIMAL_TIMEOUT;\n        }\n        this.model.save('idling_time', value);\n        $target.val(value);\n        ev.preventDefault();\n    },\n\n    setNotifications: function (ev) {\n        let value = this.model.get('notifications'),\n            $target = $(ev.target);\n        ev.preventDefault();\n        if (value === null) {\n            utils.callback_popup_message(xabber.getString(\"notifications__toast_notifications_not_supported\"), 1500);\n        } else {\n            value = value && xabber._cache.get('notifications');\n            if (!xabber._cache.get('notifications')) {\n                window.Notification.requestPermission((permission) => {\n                    xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n                    xabber.notifications_placeholder && xabber.notifications_placeholder.close();\n                    value = (permission === 'granted');\n                    this.model.save('notifications', value ? value : this.model.get('notifications'));\n                    $target.closest('.setting.notifications').find('input').prop('checked', value);\n                    this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n                    this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n                });\n            } else {\n                value = !value;\n                this.model.save('notifications', value);\n                $target.closest('.setting.notifications').find('input').prop('checked', value);\n                this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n                this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n            }\n        }\n    },\n\n    setPrivateNotifications: function (ev) {\n        let value = !this.model.get('notifications_private');\n        this.model.save('notifications_private', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !value)\n        this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n        $(ev.target).closest('.private-notifications').find('input').prop('checked', value);\n    },\n\n    setGroupNotifications: function (ev) {\n        let value = !this.model.get('notifications_group');\n        this.model.save('notifications_group', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !value)\n        this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n        $(ev.target).closest('.group-notifications').find('input').prop('checked', value);\n    },\n\n    setJingleCalls: function (ev) {\n        let value = !this.model.get('jingle_calls');\n        this.model.save('jingle_calls', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=call_sound]').prop('disabled', !value)\n        this.$('.sound input[type=radio][name=dialtone_sound]').prop('disabled', !value)\n        $(ev.target).closest('.jingle-calls').find('input').prop('checked', value);\n    },\n\n    setPrivateMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_private');\n        this.model.save('message_preview_private', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setGroupMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_group');\n        this.model.save('message_preview_group', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setCallAttention: function (ev) {\n        let value = !this.model.get('call_attention');\n        this.model.save('call_attention', value);\n        ev.preventDefault();\n        $(ev.target).closest('.call-attention').find('input').prop('checked', value);\n    },\n\n    setLoadMedia: function (ev) {\n        let value = !this.model.get('load_media');\n        this.model.save('load_media', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.load-media').find('input').prop('checked', value);\n    },\n\n    setTypingNotifications: function (ev) {\n        let value = !this.model.get('typing_notifications');\n        this.model.save('typing_notifications', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.typing-notifications').find('input').prop('checked', value);\n    },\n\n    setMappingService: function (ev) {\n        let value = !this.model.get('mapping_service');\n        this.model.save('mapping_service', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.mapping-service').find('input').prop('checked', value);\n    },\n\n    setPrivateSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, this.model.get('notifications_volume'));\n            this.model.save({private_sound: true, sound_on_private_message: value});\n        } else {\n            this.model.save('private_sound', false);\n        }\n    },\n\n    setGroupSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, this.model.get('notifications_volume'));\n            this.model.save({group_sound: true, sound_on_group_message: value});\n        } else {\n            this.model.save('group_sound', false);\n        }\n    },\n\n    setCallSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_call: value});\n    },\n\n    setDialtoneSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_dialtone: value});\n    },\n\n    setAttentionSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_attention: value});\n    },\n\n    setBackground: function (ev) {\n        let value = ev.target.value;\n        if (value == 'default') {\n            this.model.save('background', {type: 'default'});\n            xabber.body.updateBackground();\n            this.updateBackgroundSetting();\n        } else if (value == 'repeating-pattern' || value == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: value, model: this.model});\n        }\n    },\n\n    changeBackgroundImage: function () {\n        let type = this.model.get('background').type;\n        if (type == 'repeating-pattern' || type == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: type, model: this.model});\n        }\n    },\n\n    openColorPicker: function () {\n        if (!this.colorPicker)\n            this.colorPicker = new xabber.ColorPicker({model: this.model});\n        this.colorPicker.render();\n    },\n\n    chooseMainColor: function (ev) {\n        let color = $(ev.target).closest('.client-main-color-item').attr('data-value');\n        this.model.save('main_color', color);\n        this.$(`.client-main-color-item`).removeClass('chosen-client-color');\n        this.$(`.client-main-color-item[data-value=\"${color}\"]`).addClass('chosen-client-color');\n        xabber.trigger('update_main_color');\n    },\n\n    changeBlur: function () {\n        let value = this.$('#blur')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBlur(value);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n    },\n\n    changeNotificationsVolume: function () {\n        let volume = this.$('#notifications_volume')[0].value / 100,\n            sound = this.$('.sound input[type=radio][name=private_sound]:checked').val() || this.$('.sound input[type=radio][name=group_sound]:checked').val();\n        this.model.save('notifications_volume', volume);\n        if (sound) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(sound, false, volume);\n        }\n    },\n\n    changeVignetting: function () {\n        let value = this.$('#vignetting')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBoxShadow(value);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n    },\n\n    switchVignetting: function () {\n        let is_switched = this.$('#vignetting_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? this.$('#vignetting')[0].value : false;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', is_switched);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n        xabber.body.updateBoxShadow(value);\n    },\n\n    switchBlur: function () {\n        let is_switched = this.$('#blur_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? this.$('#blur')[0].value : false;\n        this.$('.blur-setting .disabled').switchClass('hidden', is_switched);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n        xabber.body.updateBlur(value);\n    },\n\n    setHotkeys: function (ev) {\n        this.model.save('hotkeys', ev.target.value);\n    },\n\n    setAvatarShape: function (ev) {\n        this.model.save('avatar_shape', ev.target.value);\n        xabber.trigger('update_avatar_shape');\n    },\n\n    deleteAllAccounts: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"settings__dialog_quit_client__confirm\", [constants.CLIENT_NAME]), null, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            res && xabber.trigger('quit');\n        });\n    },\n\n    changeLanguage: function (ev) {\n        let value = ev.target.value;\n        utils.dialogs.ask(xabber.getString(\"settings__dialog_change_language__header\"), xabber.getString(\"settings__dialog_change_language__confirm\"), null, { ok_button_text: xabber.getString(\"settings__dialog_change_language__button_change\")}).done((result) => {\n            if (result) {\n                this.model.save('language', value);\n                window.location.reload(true);\n            } else {\n                this.$(`.languages-list input[type=radio][name=language][value=\"${this.model.get('language')}\"]`)\n                    .prop('checked', true);\n            }\n        });\n    },\n\n    updateLanguage: function () {\n        if (this.model.get('language') === 'default'){\n            this.$('.settings-tab[data-block-name=\"interface_language\"] .settings-block-label').text(xabber.getString(\"settings__languages_list___item_default\", [constants.languages[xabber.get(\"default_language\") || 'en']]));\n        } else {\n            this.$('.settings-tab[data-block-name=\"interface_language\"] .settings-block-label').text(constants.languages[this.model.get('language')]);\n        }\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    updateDescription: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        (lang == 'default' || !lang.indexOf('en')) && (progress = 100);\n        if (!_.isUndefined(progress)) {\n            let progress_text, platform_text;\n            if (progress == 100) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__interface_language__text_description_full_translation_platform\",\n                    [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`]);\n            } else if (progress == 0) {\n                progress_text = xabber.getString(\"settings__section_interface_language__text_description_no_translations\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__interface_language__text_description_no_translation_platform\",\n                        [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`]);\n            } else {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_unfull_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__section_interface_language__text_description_translation_platform\",\n                    [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`, constants.EMAIL_FOR_JOIN_TRANSLATION]);\n            }\n            this.$('.description').html(`${progress_text}<br><br>${platform_text}`);\n        }\n    },\n\n    updateAvatarLabel: function () {\n        let shape = this.model.get('avatar_shape'), label_text;\n        if (shape === 'circle')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_circle\");\n        if (shape === 'squircle')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_squircle\");\n        if (shape === 'octagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_octagon\");\n        if (shape === 'hexagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_hexagon\");\n        if (shape === 'pentagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_pentagon\");\n        if (shape === 'rounded')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_rounded\");\n        if (shape === 'star')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_star\");\n        this.$('.settings-tab[data-block-name=\"avatars\"] .settings-block-label').text(label_text);\n    },\n\n    updateSoundsLabel: function () {\n        let sound_private_value = this.model.get('private_sound') && this.model.get('notifications_private') ? this.model.get('sound_on_private_message') : '',\n            sound_group_value = this.model.get('group_sound') && this.model.get('notifications_group') ? this.model.get('sound_on_group_message') : '',\n            sound_on_attention = this.model.get('call_attention') ? this.model.get('sound_on_attention') : '',\n            sound_private_text, sound_group_text, sound_on_attention_text;\n\n\n        if (sound_private_value === '')\n            sound_private_text = 'No sound';\n        else\n            sound_private_text = sound_private_value.replace('_', ' ');\n\n        if (sound_group_value === '')\n            sound_group_text = 'No sound';\n        else\n            sound_group_text = sound_group_value.replace('_', ' ');\n\n        if (sound_on_attention === '')\n            sound_on_attention_text = 'No sound';\n        else\n            sound_on_attention_text = sound_on_attention.replace('_', ' ');\n\n        this.$('.settings-tab[data-block-name=\"chats-notifications\"] .settings-block-label').text(sound_private_text);\n        this.$('.settings-tab[data-block-name=\"groupchats-notifications\"] .settings-block-label').text(sound_group_text);\n        this.$('.settings-tab[data-block-name=\"attention-calls\"] .settings-block-label').text(sound_on_attention_text);\n    },\n});\n\nxabber.mainColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal main-color-picker',\n    template: templates.color_scheme,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .color-value\": \"setColor\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n    },\n\n    setColor: function (ev) {\n        let color = $(ev.target).closest('.color-value').attr('data-value');\n        this.model.save('main_color', color);\n        xabber.trigger('update_main_color');\n        this.close();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n\n});\n\nxabber.ColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal color-picker',\n    materialColors: [\n        {\n            color: \"red\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFEBEE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCDD2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EF9A9A\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E57373\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EF5350\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#F44336\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#E53935\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#D32F2F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#C62828\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#B71C1C\"\n                }\n            ]\n        },\n        {\n            color: \"pink\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FCE4EC\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F8BBD0\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#F48FB1\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#F06292\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EC407A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#E91E63\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#D81B60\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#C2185B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#AD1457\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#880E4F\"\n                }\n            ]\n        },\n        {\n            color: \"purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F3E5F5\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#E1BEE7\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#CE93D8\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#BA68C8\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#AB47BC\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9C27B0\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#8E24AA\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#7B1FA2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#6A1B9A\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#4A148C\"\n                }\n            ]\n        },\n        {\n            color: \"deep-purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EDE7F6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D1C4E9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B39DDB\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#9575CD\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#7E57C2\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#673AB7\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#5E35B1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#512DA8\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4527A0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#311B92\"\n                }\n            ]\n        },\n        {\n            color: \"indigo\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8EAF6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C5CAE9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#9FA8DA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#7986CB\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#5C6BC0\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#3F51B5\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#3949AB\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#303F9F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#283593\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1A237E\"\n                }\n            ]\n        },\n        {\n            color: \"blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E3F2FD\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#BBDEFB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#90CAF9\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#64B5F6\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#42A5F5\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#2196F3\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#1E88E5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#1976D2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#1565C0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#0D47A1\"\n                }\n            ]\n        },\n        {\n            color: \"light-blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E1F5FE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B3E5FC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#81D4FA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4FC3F7\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#29B6F6\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#03A9F4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#039BE5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0288D1\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#0277BD\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#01579B\"\n                }\n            ]\n        },\n        {\n            color: \"cyan\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F7FA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2EBF2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80DEEA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DD0E1\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26C6DA\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#00BCD4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00ACC1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0097A7\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00838F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#006064\"\n                }\n            ]\n        },\n        {\n            color: \"teal\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F2F1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2DFDB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80CBC4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DB6AC\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26A69A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#009688\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00897B\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#00796B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00695C\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#004D40\"\n                }\n            ]\n        },\n        {\n            color: \"green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8F5E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C8E6C9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#A5D6A7\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#81C784\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#66BB6A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#4CAF50\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#43A047\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#388E3C\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#2E7D32\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1B5E20\"\n                }\n            ]\n        },\n        {\n            color: \"light-green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F1F8E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#DCEDC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#C5E1A5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#AED581\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#9CCC65\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#8BC34A\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#7CB342\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#689F38\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#558B2F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#33691E\"\n                }\n            ]\n        },\n        {\n            color: \"lime\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F9FBE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F0F4C3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#E6EE9C\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#DCE775\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#D4E157\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#CDDC39\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#C0CA33\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#AFB42B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#9E9D24\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#827717\"\n                }\n            ]\n        },\n        {\n            color: \"yellow\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFFDE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFF9C4\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFF59D\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFF176\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFEE58\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFEB3B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FDD835\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FBC02D\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#F9A825\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#F57F17\"\n                }\n            ]\n        },\n        {\n            color: \"amber\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF8E1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFECB3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFE082\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFD54F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFCA28\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFC107\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FFB300\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FFA000\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#FF8F00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#FF6F00\"\n                }\n            ]\n        },\n        {\n            color: \"orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF3E0\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFE0B2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFCC80\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFB74D\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFA726\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF9800\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FB8C00\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#F57C00\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#EF6C00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#E65100\"\n                }\n            ]\n        },\n        {\n            color: \"deep-orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FBE9E7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCCBC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFAB91\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FF8A65\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FF7043\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF5722\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#F4511E\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#E64A19\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#D84315\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#BF360C\"\n                }\n            ]\n        },\n        {\n            color: \"brown\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EFEBE9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D7CCC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#BCAAA4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#A1887F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#8D6E63\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#795548\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#6D4C41\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#5D4037\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4E342E\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#3E2723\"\n                }\n            ]\n        },\n        {\n            color: \"grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FAFAFA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F5F5F5\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EEEEEE\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E0E0E0\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#BDBDBD\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9E9E9E\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#757575\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#616161\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#424242\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#212121\"\n                }\n            ]\n        },\n        {\n            color: \"blue-grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#ECEFF1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#CFD8DC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B0BEC5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#90A4AE\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#78909C\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#607D8B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#546E7A\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#455A64\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#37474F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#263238\"\n                }\n            ]\n        }\n    ],\n\n    ps_selector: '.material-color-picker-wrap',\n    events: {\n        \"click .color-palette-item\": \"selectColor\",\n        \"click .selected-color-hex\": \"updateInputField\",\n        \"focusout .selected-color-hex-input\": \"focusoutInputField\",\n        \"keyup .selected-color-hex-input\": \"keyUpInput\",\n        \"click .btn-set\": \"setColor\"\n    },\n\n    _initialize(options) {\n        this.model = options.model;\n        this.$el.html(templates.color_picker({materialColors: this.materialColors}));\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                let $input = this.$('.selected-color-hex-input'),\n                    $color_hex = this.$('.selected-color-hex'),\n                    value = this.model.get('appearance').color || '#E0E0E0';\n                let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n                if (material_color) {\n                    let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n                    this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n                } else {\n                    this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n                }\n                if (value) {\n                    this.$('.selected-color-wrap').removeClass('hidden');\n                    $input.addClass('hidden');\n                    $color_hex.removeClass('hidden').text(value);\n                    value && this.$('.selected-color-item').css('background-color', value);\n                }\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    updateInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.removeClass('hidden');\n        $input[0].value = $color_hex.text();\n        $color_hex.addClass('hidden');\n    },\n\n    keyUpInput: function (ev) {\n        if (ev.keyCode == constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.focusoutInputField();\n        }\n        let $input = this.$('.selected-color-hex-input'),\n            value = $input[0].value.trim();\n        this.$('.selected-color-item').css('background-color', value);\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n    },\n\n    focusoutInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex'),\n            value = $input[0].value.trim();\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden').text(value);\n        this.$('.selected-color-item').css('background-color', value);\n    },\n\n    selectColor: function (ev) {\n        let $target = $(ev.target),\n            hex = $target.attr('data-hex'),\n            color_name = $target.closest('.color-palette-wrapper').attr('data-color-name').replace(/-/g, \"_\"),\n            weight = $target.attr('data-weight');\n        this.$('.selected-color-wrap').removeClass('hidden');\n        this.$('.selected-color-item').css('background-color', hex);\n        this.$('.selected-color-name').text(xabber.getString(`account_color_name_${color_name}`).replace(/-/g, \" \").replace(/-/g, \" \") + ` ${weight}`);\n        this.$('.selected-color-hex').text(hex);\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden');\n    },\n\n    setColor: function () {\n        this.close();\n        let appearance = this.model.get('appearance');\n        this.model.save('appearance', _.extend(appearance, {color: this.$('.selected-color-hex').text()}));\n\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                xabber.settings_view.updateColor();\n                xabber.settings_modal_view.updateColor();\n            }\n        });\n    }\n\n});\n\nxabber.SetBackgroundView = xabber.BasicView.extend({\n    className: 'modal main-modal settings-background background-panel',\n    template: templates.backgrounds_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addBackground\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.type = options.type;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        if (this.type == 'repeating-pattern')\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_pattern\"));\n        else\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_image\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onScrollY: function () {\n        if (this.$('.screen-wrap:not(.hidden)').attr('data-screen') === 'library' && this.getScrollBottom() < 5) {\n            this.loadMoreImages();\n        }\n    },\n\n    getImagesFromXML: function (callback) {\n        if (this.type == 'repeating-pattern' && this.model.patterns_library || this.type == 'images' && this.model.img_library) {\n            callback && callback();\n            return;\n        }\n        let request = {\n            type: \"GET\",\n            contentType: \"application/xml\",\n            dataType: 'xml',\n            success: (data) => {\n                if (this.type == 'repeating-pattern') {\n                    this.onGetPatternsCallback(data);\n                } else {\n                    this.onGetImagesCallback(data);\n                }\n                callback && callback();\n            }\n        };\n        if (this.type == 'repeating-pattern') {\n            request.url =  constants.ASSETS_URL_PREFIX + 'background-patterns.xml';\n        } else {\n            request.url = constants.ASSETS_URL_PREFIX + 'background-images.xml';\n        }\n        $.ajax(request);\n    },\n\n    onGetPatternsCallback: function (data) {\n        let images = [];\n        $(data).find('image').each((idx, img) => {\n            images.push({thumbnail: $(img).text()});\n        });\n        this.model.patterns_library = images;\n    },\n\n    onGetImagesCallback: function (data) {\n        let images = [];\n        $(data).find('image').each((idx, img) => {\n            let $img = $(img),\n                thumbnail = $img.children('thumbnail').text(),\n                fs_img = $img.children('fullscreen-image').text();\n            images.push({thumbnail, fs_img});\n        });\n        this.model.img_library = images;\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    createLibrary: function () {\n        this.getImagesFromXML(() => {\n            this.loadMoreImages(40);\n        });\n    },\n\n    loadMoreImages: function (count) {\n        !count && (count = 20);\n        let current_count = this.$(`.image-item`).length;\n        if (this.type == 'repeating-pattern' && current_count >= this.model.patterns_library.length || this.type == 'images' && current_count >= this.model.img_library.length)\n            return;\n        for (let i = current_count; i < (current_count + count); i++) {\n            let img = $(`<div class=\"image-item\"/>`),\n                img_sources = this.type == 'repeating-pattern' ? this.model.patterns_library[i] : this.model.img_library[i];\n            if (!img_sources)\n                break;\n            img.css('background-image', `url(\"${img_sources.thumbnail}\")`);\n            img.attr('data-src', this.type == 'repeating-pattern' ? img_sources.thumbnail : img_sources.fs_img);\n            this.$('.library-wrap').append(img);\n        }\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addBackground: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img) => {\n            if (img) {\n                this.model.save('background', {type: this.type, image: img});\n            }\n            else {\n                this.model.save('background', {type: 'default'});\n            }\n            xabber.body.updateBackground();\n            this.close();\n        });\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = $active_screen.find('div.active').attr('data-src');\n            dfd.resolve(image);\n        } else {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            if ($active_screen.attr('data-screen') == 'web-address') {\n                let request = {\n                    type: \"GET\",\n                    url: image,\n                    headers: {\"Access-Control-Allow-Origin\": \"*\"},\n                    dataType: 'blob',\n                    success: function (data) {\n                        image = data;\n                        dfd.resolve(image);\n                    },\n                    error: () => {\n                        dfd.resolve(image);\n                    }\n                };\n                $.ajax(request);\n            } else\n                dfd.resolve(image);\n        }\n    },\n\n    close: function () {\n        xabber.settings_view.updateBackgroundSetting();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.AboutView = xabber.BasicView.extend({\n    className: 'settings-panel about-panel',\n    template: templates.about,\n    ps_selector: '.panel-content',\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(this.model.get('version_number'));\n    },\n\n    render: function () {\n    }\n});\n\nxabber.DragManager = Backbone.Model.extend({\n    initialize: function () {\n        window.document.onmousedown = this.onMouseDown.bind(this);\n        window.document.onmousemove = this.onMouseMove.bind(this);\n        window.document.onmouseup = this.onMouseUp.bind(this);\n    },\n\n    onMouseDown: function (ev) {\n        if (ev.which != 1) {\n            return;\n        }\n        let draghandle_elem = ev && ev.target && ev.target.closest ? ev.target.closest('.drag-handle') : $(ev.target).closest('.drag-handle'),\n            elem = draghandle_elem && draghandle_elem.closest('.draggable');\n        if (!elem) {\n            return this.resetElem();\n        }\n        this.set({\n            elem: elem,\n            draghandle_elem: draghandle_elem,\n            downX: ev.pageX,\n            downY: ev.pageY\n        });\n    },\n\n    onMouseMove: function (ev) {\n        if (!this.get('elem')) {\n            return;\n        }\n        let avatar = this.get('avatar');\n        if (!avatar) {\n            if (    Math.abs(ev.pageX - this.get('downX')) < 3 &&\n                    Math.abs(ev.pageY - this.get('downY')) < 3) {\n                return;\n            }\n            avatar = this.createAvatar(ev);\n            if (!avatar) {\n                return this.resetElem();\n            }\n            this.set('avatar', avatar);\n            let coords = this.getCoords(avatar);\n            this.set({\n                shiftX: this.get('downX') - coords.left,\n                shiftY: this.get('downY') - coords.top\n            });\n            this.startDrag(ev);\n        }\n        avatar.style.left = ev.pageX - this.get('shiftX') + 'px';\n        avatar.style.top = ev.pageY - this.get('shiftY') + 'px';\n        let drop_elem = this.findDropElem(ev);\n        this.updateDropElem(drop_elem);\n        return;\n    },\n\n    onMouseUp: function (ev) {\n        let selector = document.querySelector('.recording');\n        if (selector) {\n            $(selector).removeClass('recording');\n            return;\n        }\n        this.get('avatar') && this.finishDrag(ev);\n        this.resetElem();\n    },\n\n    resetElem: function () {\n        this.set({elem: null, draghandle_elem: null, avatar: null});\n    },\n\n    getCoords: function (elem) {\n        let box = elem.getBoundingClientRect();\n        return {\n            top: box.top + window.pageYOffset,\n            left: box.left + window.pageXOffset\n        };\n    },\n\n    createAvatar: function () {\n        let avatar = this.get('elem'),\n            $avatar = $(avatar),\n            draghandle_elem = this.get('draghandle_elem');\n        let old = {\n            parent: avatar.parentNode,\n            nextSibling: avatar.nextSibling,\n            position: avatar.position || '',\n            left: avatar.left || '',\n            top: avatar.top || '',\n            zIndex: avatar.zIndex || '',\n            avatar_cursor: avatar.style.cursor || '',\n            draghandle_elem_cursor: draghandle_elem.style.cursor || ''\n        };\n\n        $avatar.addClass('dragging');\n        avatar.style.cursor = '-webkit-grabbing';\n        draghandle_elem.style.cursor = '-webkit-grabbing';\n\n        avatar.rollback = function () {\n            old.parent.insertBefore(avatar, old.nextSibling);\n            $avatar.removeClass('dragging');\n            avatar.style.position = old.position;\n            avatar.style.left = old.left;\n            avatar.style.top = old.top;\n            avatar.style.zIndex = old.zIndex;\n            avatar.style.cursor = old.avatar_cursor;\n            draghandle_elem.style.cursor = old.draghandle_elem_cursor;\n        };\n\n        return avatar;\n    },\n\n    startDrag: function (ev) {\n        let avatar = this.get('avatar');\n        window.document.body.appendChild(avatar);\n        avatar.style.zIndex = 9999;\n        avatar.style.position = 'absolute';\n    },\n\n    finishDrag: function (ev) {\n        let elem = this.get('elem'),\n            avatar = this.get('avatar'),\n            drop_elem = this.findDropElem(ev);\n        avatar.rollback();\n        this.updateDropElem(null);\n        if (elem && drop_elem) {\n            $(elem).trigger('drag_to', drop_elem);\n            $(drop_elem).trigger('drag_from', elem);\n        }\n    },\n\n    findDropElem: function (ev) {\n        let avatar = this.get('avatar');\n        avatar.hidden = true;\n        let elem = window.document.elementFromPoint(ev.clientX, ev.clientY);\n        avatar.hidden = false;\n        if (!elem) {\n            return null;\n        }\n        return elem.closest('.droppable');\n    },\n\n    updateDropElem: function (drop_elem) {\n        let old_drop_elem = this.get('drop_elem');\n        this.set('drop_elem', drop_elem);\n        old_drop_elem && $(old_drop_elem).removeClass('drag-on');\n        drop_elem && $(drop_elem).addClass('drag-on');\n    }\n});\n\n_.extend(xabber, {\n    modal_settings: {\n        open: {\n            in_duration: 50,\n            out_duration: 100,\n            opacity: 0.4\n        },\n        close: {out_duration: 100}\n    },\n\n    ps_settings: {\n        minScrollbarLength: 40,\n        suppressScrollX: true,\n        wheelSpeed: 0.5\n    },\n\n    startBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval && is_disconnected === undefined)\n            return;\n        clearInterval(this._blink_interval);\n        this._blink_interval = setInterval(() => {\n            let $icon = $(\"link[rel='shortcut icon']\"), url;\n            if ($icon.attr('href').indexOf(this.cache.favicon) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT) > -1 || $icon.attr('href').indexOf(this.cache.favicon_gray) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT_GREY) > -1)\n                url = this.cache.favicon_message || constants.FAVICON_MESSAGE;\n            else\n                url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $icon.attr('href', url);\n        }, 1000);\n    },\n\n    stopBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval || is_disconnected !== undefined) {\n            clearInterval(this._blink_interval);\n            this._blink_interval = null;\n            let url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $(\"link[rel='shortcut icon']\").attr(\"href\", url);\n        }\n    },\n\n    onChangedAllMessageCounter: function () {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon();\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon();\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    updateAllMessageCounterOnDisconnect: function (is_disconnected) {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon(is_disconnected);\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon(is_disconnected);\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted())\n                    count_msg += chat.get('unread') + chat.get('const_unread');\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_msg += incoming_subscriptions;\n        });\n        return count_msg;\n    },\n\n    recountAllMessageCounter: function () {\n        this.set('all_msg_counter', this.setAllMessageCounter());\n    },\n\n    resetMessageCounter: function () {\n        this.set('all_msg_counter', 0);\n    },\n\n    onChangedFocusState: function () {\n        if (this.get('focused')) {\n            this.resetMessageCounter();\n        }\n    },\n\n    openWindow: function (url) {\n        utils.openWindow(url, () => {\n            utils.dialogs.error(xabber.getString(\"notifications__error__text_could_not_open_new_tab\"));\n        });\n    },\n\n    popupNotification: function (params) {\n        let notification = new window.Notification(params.title, {\n            body: params.text,\n            icon: params.icon\n        });\n        setTimeout(notification.close.bind(notification), 5000);\n        return notification;\n    },\n\n    playAudio: function (name, loop, volume) {\n        if (!((volume || volume === 0) && !isNaN(volume)))\n            volume = 1;\n        loop = loop || false;\n        let filename = constants.SOUNDS[name];\n        if (filename) {\n            let audio = new window.Audio(filename);\n            audio.loop = loop;\n            audio.volume = volume;\n            audio.play();\n            return audio;\n        }\n        return;\n    },\n\n    stopAudio: function (audio) {\n        if (audio) {\n            audio.pause();\n            audio.remove();\n        }\n    },\n\n    registerDOMEvents: function () {\n        let self = this;\n\n        $(window).on(\"blur focus\", function (ev) {\n            self.set('focused', ev.type === 'focus');\n        });\n\n        $(window).on(\"resize\", function (ev) {\n            self.set({\n                width: window.innerWidth,\n                height: window.innerHeight\n            });\n            self.trigger('update_layout', {size_changed: true});\n        });\n\n        window.document.body.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n\n        window.document.body.ondrop = (ev) => {\n            ev.preventDefault();\n        };\n    },\n\n\n    initIdleJS: function () {\n        if (this.idleJs)\n            this.idleJs.stop();\n        let self = this,\n            idling_time = self._settings.get('idling_time') * 1000\n\n        this.idleJs = new idleJs({\n            idle: idling_time, // idle time in ms\n            events: ['mousemove', 'keydown', 'mousedown', 'touchstart', 'focus', 'blur'], // events that will trigger the idle resetter\n            onIdle: () => {\n                if (self._settings.get('idling'))\n                    self.set('idle', true);\n                else\n                    self.set('idle', false);\n            } , // callback function to be executed after idle time\n            onActive:() => {\n                self.set('idle', false);\n            }  , // callback function to be executed after back form idleness\n            keepTracking: true, // set it to false if you want to be notified only on the first idleness change\n            startAtIdle: false // set it to true if you want to start in the idle state\n        })\n        this.idleJs.start();\n    },\n});\n\nxabber.once(\"start\", function () {\n    this.set('all_msg_counter', 0);\n    this.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n    this.on(\"change:focused\", this.onChangedFocusState, this);\n    this._settings.on(\"change:idling_time\", this.initIdleJS, this);\n    this.set({\n        focused: window.document.hasFocus(),\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n    this.registerDOMEvents();\n    this.initIdleJS();\n\n    Materialize.modalSettings = this.modal_settings;\n\n    this.drag_manager = new this.DragManager();\n\n    this.body = new this.Body({model: this});\n\n    this.login_page = this.body.addChild('login', this.NodeView, {\n        classlist: 'login-page-wrap', el: $(document).find('.login-container')[0]});\n\n    this.toolbar_view = this.body.addChild('toolbar', this.ToolbarView);\n    this.settings.appearance.color && this.toolbar_view.updateColor(this.settings.appearance.color);\n\n    this.blur_overlay = this.body.addChild('blur_overlay', this.NodeView, {\n        classlist: 'blur-overlay'});\n\n    this.main_panel = this.body.addChild('main', this.NodeView, {\n        classlist: 'main-wrap'});\n    this.main_overlay_panel = this.body.addChild('main_overlay', this.NodeView, {\n        classlist: 'main-overlay-wrap hidden'});\n    this.body.updateBlur(this.settings.appearance.blur);\n    this.left_panel = this.main_panel.addChild(\n        'left', this.NodeView, {classlist: 'panel-wrap left-panel-wrap'});\n    this.right_panel = this.main_panel.addChild(\n        'right', this.NodeView, {classlist: 'panel-wrap right-panel-wrap'});\n    this.right_contact_panel = this.main_panel.addChild(\n        'right_contact', this.NodeView, {classlist: 'panel-wrap right-contact-panel-wrap'});\n    this.wide_panel = this.main_panel.addChild(\n        'wide', this.NodeView, {classlist: 'panel-wrap wide-panel-wrap'});\n    this.placeholders_wrap = this.main_panel.addChild('placeholders', this.NodeView, {classlist: 'wide-placeholders-wrap'});\n    this.settings_view = this.wide_panel.addChild(\n        'settings', this.SettingsView, {model: this._settings});\n    this.settings_modal_view = this.main_overlay_panel.addChild(\n        'settings_modal', this.SettingsModalView, {model: this._settings});\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.api_service,\n    utils = env.utils,\n    $ = env.$,\n    _ = env._;\n\n\nxabber.AccountSettings = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    defaults: {\n        timestamp: 0,\n        to_sync: false,\n        synced: false,\n        deleted: false\n    },\n\n    update_timestamp: function () {\n        this.save('timestamp', utils.now());\n    },\n\n    update_settings: function (settings) {\n        this.save(_.extend({timestamp: utils.now()}, settings));\n    },\n\n    request_data: function () {\n        return {\n            jid: this.get('jid'),\n            timestamp: this.get('timestamp'),\n            settings: _.omit(this.attributes, [\n                'jid', 'timestamp', 'order',\n                'to_sync', 'synced', 'deleted'\n            ])\n        };\n    }\n});\n\nxabber.AccountSettingsList = Backbone.CollectionWithStorage.extend({\n    model: xabber.AccountSettings,\n\n    create_from_server: function (settings_item) {\n        let settings = this.create(_.extend({\n            jid: settings_item.jid,\n            timestamp: settings_item.timestamp,\n            to_sync: true,\n            synced: true\n        }, settings_item.settings));\n        this.trigger('add_settings', settings);\n        return settings;\n    }\n});\n\nxabber.AccountsOrderTimestamp = Backbone.ModelWithStorage.extend({\n    defaults: {\n        timestamp: 0\n    }\n});\n\nxabber.APIAccount = Backbone.ModelWithStorage.extend({\n    defaults: {\n        token: null,\n        sync_all: true\n    },\n\n    _initialize: function (_attrs, options) {\n        this.list = options.settings_list;\n        this.save({connected: false, sync_request: 'silent'});\n        this.on(\"change:connected\", function () {\n            if (this.get('connected')) {\n                this.fcm_subscribe();\n            } else {\n                this.fcm_unsubscribe();\n            }\n        }, this);\n        this.on(\"change:token\", function () {\n            if (this.get('token') !== null) {\n                this.save({sync_all: true,\n                           sync_request: this.list.length ? 'window' : 'silent'});\n            }\n        }, this);\n        this.list.on(\"change:to_sync\", function (item) {\n            if (this.get('sync_all') && !item.get('to_sync')) {\n                this.save('sync_all', false);\n            }\n        }, this);\n        xabber.on(\"push_message\", function (message) {\n            if (this.get('connected') &&\n                    message.username === this.get('username') &&\n                    message.from_token !== this.get('token') &&\n                    message.action === 'settings_updated') {\n                this.synchronize_main_settings();\n                this.synchronize_order_settings();\n            }\n            if (this.get('connected') &&\n                message.username === this.get('username') &&\n                message.from_token !== this.get('token') &&\n                message.action === 'account_updated') {\n                this.get_settings();\n            }\n        }, this);\n\n        this.ready = new $.Deferred();\n        if (xabber.url_params.social_auth) {\n            let social_auth = xabber.url_params.social_auth;\n            delete xabber.url_params.social_auth;\n            try {\n                let data = JSON.parse(atob(social_auth));\n                this.save('token', null);\n                this.social_login(data);\n                return;\n            } catch (e) {}\n        }\n        if (xabber.url_params.token) {\n            this.save('token', xabber.url_params.token);\n            delete xabber.url_params.token;\n        }\n        if (this.get('token')) {\n            this.login_by_token();\n        } else {\n            this.ready.resolve();\n        }\n    },\n\n    _call_method: function (method, url, data, callback, errback) {\n        let request = {\n            type: method,\n            url: constants.API_SERVICE_URL + url,\n            headers: {\"Authorization\": \"Token \" + this.get('token')},\n            context: this,\n            contentType: \"application/json\",\n            dataType: 'json',\n            success: (data, textStatus, jqXHR) => {\n                callback && callback(data);\n            },\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, errback);\n            }\n        };\n        if (data) {\n            request.data = JSON.stringify(data);\n        }\n        $.ajax(request);\n    },\n\n    add_source: function (data) {\n        return _.extend({\n            source: `${constants.CLIENT_NAME} ${xabber.get('version_number')}`\n        }, data);\n    },\n\n    get_settings: function () {\n        if (this.get('token') !== null) {\n            this._call_method('GET', '/accounts/current/', null,\n                (data) => {\n                    if (data.account_status === 'registered') {\n                        this.onUserData(data);\n                        this._call_method('GET', '/accounts/current/client-settings/', null,\n                            this.onSettings.bind(this),\n                            this.onSettingsFailed.bind(this)\n                        );\n                    } else {\n                        utils.dialogs.error(xabber.getString(\"xabber_account__sync__error_no_permission_to_sync\"));\n                        this.save({token: null, connected: false});\n                        this.trigger('settings_result', null);\n                    }\n                },\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    delete_settings: function (jid) {\n        if (this.get('connected')) {\n            this._call_method('DELETE', '/accounts/current/client-settings/', {jid: jid},\n                this.onSettings.bind(this),\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    synchronize_main_settings: function () {\n        if (this.get('connected')) {\n            let data = _.map(this.list.where({to_sync: true}), function (settings) {\n                return settings.request_data();\n            });\n            if (data.length) {\n                this._call_method('PATCH', '/accounts/current/client-settings/',\n                    {settings_data: data},\n                    this.onSettings.bind(this),\n                    this.onSettingsFailed.bind(this)\n                );\n            } else {\n                this.get_settings();\n            }\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    synchronize_order_settings: function () {\n        if (this.get('connected') && this.get('sync_all')) {\n            let timestamp = this.list.order_timestamp.get('timestamp');\n            let data = this.list.map(function (settings) {\n                return {jid: settings.get('jid'), order: settings.get('order')};\n            });\n            this._call_method('PATCH', '/accounts/current/client-settings/',\n                {order_data: {settings: data, timestamp: timestamp}},\n                this.onSettings.bind(this),\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    fetch_from_server: function (data) {\n        let deleted_list = data.deleted,\n            settings_list = data.settings_data,\n            order_timestamp = data.order_data.timestamp,\n            order_list = data.order_data.settings,\n            list = this.list,\n            sync_all = this.get('sync_all');\n        _.each(deleted_list, (item) => {\n            let settings = list.get(item.jid);\n            if (settings && settings.get('to_sync') &&\n                    settings.get('timestamp') <= item.timestamp) {\n                settings.trigger('delete_account', true);\n            }\n        });\n        _.each(settings_list, function (settings_item) {\n            let settings = list.get(settings_item.jid);\n            if (settings) {\n                if (settings.get('to_sync')) {\n                    settings.save(_.extend({\n                        timestamp: settings_item.timestamp,\n                        deleted: false,\n                        synced: true\n                    }, settings_item.settings));\n                } else {\n                    settings.save('synced', settings_item.timestamp >= settings.get('timestamp'));\n                }\n            }\n            if (!settings && sync_all) {\n                settings = list.create_from_server(settings_item);\n            }\n        });\n        if (sync_all) {\n            let order_map = {}, max_order = 1;\n            _.each(order_list, function (order_item) {\n                order_map[order_item.jid] = order_item.order;\n                if (order_item.order > max_order) {\n                    max_order = order_item.order;\n                }\n            });\n            list.order_timestamp.save('timestamp', order_timestamp);\n            list.each((settings) => {\n                let jid = settings.get('jid'),\n                    order = order_map[jid];\n                if (!order) {\n                    max_order += 1;\n                    order = max_order;\n                }\n                settings.save('order', order);\n            });\n        }\n        this.trigger('settings_result', data);\n        this.save('last_sync', utils.now());\n    },\n\n    onAPIError: function (jqXHR, errback) {\n        let status = jqXHR.status,\n            response = jqXHR.responseJSON;\n        if (status === 403) {\n            this.save({connected: false, token: null});\n            if (response.detail === 'Invalid token') {\n                if (response.reason === 'not_found') {\n                    // TODO remove only Xabber-related XMPP accounts\n                } else if (response.reason === 'revoked') {\n                    _.each(this.list.where({to_sync: true}), function (settings) {\n                        settings.trigger('delete_account', true);\n                    });\n                } else if (response.reason === 'expired'){\n                    utils.dialogs.common(xabber.getString(\"xabber_account__login__dialog_error__header\"), xabber.getString(\"xabber_account__login__dialog_error__text\"),\n                        {ok_button: {text: xabber.getString(\"yes\")}, cancel_button: {text: xabber.getString(\"dialog_version_update__option_not_now\")}}\n                    ).done((result) => {\n                        result && this.trigger('relogin');\n                    });\n                }\n            }\n        }\n        errback && errback(response, status);\n    },\n\n    _login: function (credentials, callback, errback) {\n        let request = {\n            type: 'POST',\n            url: constants.API_SERVICE_URL + '/accounts/login/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify(this.add_source()),\n            success: callback,\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, errback);\n            }\n        };\n        if (credentials.token) {\n            request.headers = {\"Authorization\": \"Token \" + credentials.token};\n        } else {\n            let username = credentials.username,\n                password = credentials.password;\n            request.headers = {\"Authorization\": \"Basic \" + utils.utoa(username+':'+password)};\n        }\n        $.ajax(request);\n    },\n\n    login: function (username, password) {\n        this._login({username: username, password: password}, this.onLogin.bind(this),\n                this.onLoginFailed.bind(this));\n    },\n\n    login_by_token: function () {\n        this._login({token: this.get('token')}, this.onLoginByToken.bind(this),\n                this.onLoginByTokenFailed.bind(this));\n    },\n\n    social_login: function (credentials) {\n        $.ajax({\n            type: 'POST',\n            url: constants.API_SERVICE_URL + '/accounts/social_auth/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify(this.add_source(credentials)),\n            success: this.onSocialLogin.bind(this),\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, this.onSocialLoginFailed.bind(this));\n            }\n        });\n    },\n\n    revoke_token: function () {\n        let token = this.get('token');\n        if (token !== null) {\n            this._call_method('delete', '/accounts/current/tokens/', {token: token});\n        }\n        this.save({connected: false, token: null});\n        this.storage.clear();\n    },\n\n    onLoginByToken: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true, sync_request: 'silent'});\n        this.get_settings();\n        this.ready.resolve();\n    },\n\n    onLoginByTokenFailed: function (response, status) {\n        this.save('connected', false);\n        this.ready.resolve();\n    },\n\n    onLogin: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true});\n        this.get_settings();\n    },\n\n    onLoginFailed: function (response, status) {\n        this.save('connected', false);\n        this.trigger('login_failed', response);\n    },\n\n    onSocialLogin: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true});\n        xabber.body.setScreen('settings');\n        this.ready.resolve();\n    },\n\n    onSocialLoginFailed: function (response, status) {\n        this.save('connected', false);\n        xabber.body.setScreen('settings');\n        utils.dialogs.error(xabber.getString(\"xabber_account__login__error_auth_failed\"));\n        this.ready.resolve();\n    },\n\n    onUserData: function (data) {\n        let name, xmpp_binding_jid;\n        if (data.first_name && data.last_name) {\n            name = data.first_name + ' ' + data.last_name;\n        } else {\n            name = data.username;\n        }\n        if (data.xmpp_binding) {\n            xmpp_binding_jid = data.xmpp_binding.jid;\n        }\n        this.save({username: data.full_id, name: name, linked_email_list: data.email_list, linked_social: data.social_bindings, xmpp_binding: xmpp_binding_jid });\n    },\n\n    onSettings: function (data) {\n        let sync_request = this.get('sync_request');\n        this.save('sync_request', undefined);\n        if (sync_request === 'window') {\n            if (!xabber.sync_settings_view)\n                xabber.sync_settings_view = new xabber.SyncSettingsView({model: this});\n            this.trigger('open_sync_window', data);\n        } else {\n            this.fetch_from_server(data);\n        }\n    },\n\n    onSettingsFailed: function (response, status) {\n        this.trigger('settings_result', null);\n    },\n\n    logout: function () {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"logout_summary\"),\n                          [{name: 'delete_accounts', checked: true,\n                            text: xabber.getString(\"xabber_account__dialog_logout__option_delete_accounts\")}], { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (res) {\n                if (xabber.accounts.connected.length > 0)\n                    _.each(xabber.accounts.connected, (account) => {\n                        account.set('auto_login_xa', false);\n                        account.save('auto_login_xa', false);\n                    });\n                this.revoke_token();\n                if (res.delete_accounts) {\n                    _.each(this.list.where({to_sync: true}), (settings) => {\n                        settings.trigger('delete_account', true);\n                    });\n                }\n            }\n        });\n    },\n\n    start: function () {\n        if (!this.get('connected')) {\n            this.fcm_unsubscribe();\n        }\n        this.get_settings();\n    },\n\n    fcm_subscribe: function () {\n        this._call_method('post', '/fcm/subscription/', {endpoint_key: xabber.cache.endpoint_key});\n    },\n\n    fcm_unsubscribe: function () {\n        $.ajax({\n            type: 'DELETE',\n            url: constants.API_SERVICE_URL + '/fcm/subscription/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify({endpoint_key: xabber.cache.endpoint_key})\n        });\n    }\n});\n\nxabber.APIAccountAuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$username_input = this.$('input[name=username]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.onChangeAuthenticationState, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$username_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let username = this.$username_input.val(),\n            password = this.$password_input.val();\n        if (!username) {\n            return this.errorFeedback({username: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        username = username.trim();\n        if (!password)  {\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n        this.model.login(username, password);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n    },\n\n    authFeedback: function (options) {\n        this.$username_input.switchClass('invalid', options.username)\n            .siblings('span.errors').text(options.username || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').switchClass('disabled', authentication);\n    },\n\n    onChangeAuthenticationState: function () {\n        this.updateButtons();\n        if (this.data.get('authentication')) {\n            this.model.on(\"change:connected\", this.onChangeConnected, this);\n            this.model.on(\"login_failed\", this.onLoginFailed, this);\n        } else {\n            this.model.off(\"change:connected\", this.onChangeConnected, this);\n            this.model.off(\"login_failed\", this.onLoginFailed, this);\n        }\n    },\n\n    onChangeConnected: function () {\n        if (this.model.get('connected')) {\n            this.successFeedback();\n        }\n    },\n\n    onLoginFailed: function (response) {\n        this.errorFeedback({password: (response && response.detail) || xabber.getString(\"connection__error__text_authentication_failed_short\")});\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email') {\n            this.closeModal();\n            xabber.email_auth_view.show();\n            // return;\n        }\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\n  xabber.XabberLoginByEmailPanel = xabber.APIAccountAuthView.extend({\n      className: 'login-panel add-xabber-account-panel',\n      template: templates.xabber_login_by_email,\n\n      events: {\n          \"click .btn-cancel\": \"close\",\n          \"click .btn-log-in\": \"submit\",\n          \"keyup input[name=password]\": \"keyUp\"\n      },\n\n      render: function () {\n          this.$el.openModal({\n              opacity: 0.9,\n              ready: this.onRender.bind(this),\n              complete: this.close.bind(this)\n          });\n      },\n\n      successFeedback: function () {\n          this.authFeedback({});\n          this.data.set('authentication', false);\n          this.close();\n      },\n\n      onRender: function () {\n          Materialize.updateTextFields();\n          this.$username_input.val('').focus();\n          this.$password_input.val('');\n      },\n\n      close: function (auth) {\n          this.$el.closeModal({ complete: this.hide.bind(this) });\n      }\n  });\n\nxabber.XabberLoginPanel = xabber.APIAccountAuthView.extend({\n    className: 'login-panel',\n    template: templates.xabber_login,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"submit\",\n        \"click .btn-social\": \"socialAuth\",\n        \"click .btn-escape\": \"openXmppLoginPanel\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    successFeedback: function () {\n        this.authFeedback({});\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats');\n    },\n\n    changeLoginType: function () {\n        xabber.body.setScreen('login', {'login_screen': 'xmpp'});\n    },\n\n    openXmppLoginPanel: function () {\n        xabber.body.setScreen('login', {'login_screen': 'xmpp'});\n    }\n});\n\nxabber.AddAPIAccountView = xabber.APIAccountAuthView.extend({\n    className: 'login-panel add-xabber-account-panel',\n    template: templates.add_xabber_account,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-add\": \"loginXabberAccount\",\n        \"keyup input[name=password]\": \"keyUp\",\n        \"click .btn-social\": \"socialAuth\",\n        \"click .btn-cancel\": \"closeModal\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            opacity: 0.9,\n            ready: () => {\n                this.onRender.bind(this);\n                this.$('.account-field .dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left',\n                });\n            },\n            complete: this.closeModal.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(env.templates.contacts.add_contact_account_item({jid: account.get('jid')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n        this.loginXabberAccount(account);\n    },\n\n    loginXabberAccount: function (account) {\n        account.set('auto_login_xa', true);\n        account.authXabberAccount();\n        this.closeModal();\n    },\n\n    successFeedback: function () {\n        this.authFeedback({});\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SyncSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal sync-settings-modal noselect',\n    template: templates.sync_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .btn-sync\": \"syncSettings\",\n        \"click .btn-cancel\": \"close\",\n        \"change .sync-all\": \"changeSyncAll\",\n        \"change .sync-one\": \"changeSyncOne\",\n        \"click .sync-icon\": \"changeSyncWay\"\n    },\n\n    _initialize: function () {\n        this.settings = null;\n        this.to_sync_map = null;\n        this.model.on(\"open_sync_window\", this.render, this);\n    },\n\n    render: function (data, options) {\n        this.settings = data;\n        this.sync_all = this.model.get('sync_all');\n        this.accounts = [];\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.$('.accounts-wrap').empty();\n        let list = this.model.list,\n            accounts_map = {},\n            deleted_map = {},\n            settings_map = {},\n            order_map = {};\n        _.each(this.settings.settings_data, function (settings_item) {\n            settings_map[settings_item.jid] = settings_item;\n        });\n        this.settings_map = settings_map;\n        _.each(this.settings.order_data.settings, function (order_item) {\n            order_map[order_item.jid] = order_item.order;\n        });\n        _.each(this.settings.deleted, function (deleted_item) {\n            deleted_map[deleted_item.jid] = deleted_item.timestamp;\n        });\n\n        // Make synchronization list\n        _.each(settings_map, (obj, jid) => {\n            // pick accounts that are present on server only\n            if (!list.get(jid)) {\n                accounts_map[jid] = _.extend({\n                    jid: jid,\n                    to_sync: this.sync_all,\n                    sync_way: 'from_server'\n                }, obj);\n            }\n        });\n        list.each((settings) => {\n            let jid = settings.get('jid'),\n                obj = settings_map[jid],\n                sync_way;\n            if (_.has(deleted_map, jid)) {\n                // pick local but deleted from server accounts\n                sync_way = deleted_map[jid] >= settings.get('timestamp') ? 'delete' : 'to_server';\n                accounts_map[jid] = _.extend({\n                    sync_way: sync_way,\n                    sync_choose: ['delete', 'to_server']\n                }, _.omit(settings.attributes, ['order']));\n                settings.save('synced', false);\n            } else if (obj) {\n                // pick accounts that are present on both server and client\n                if (obj.timestamp > settings.get('timestamp')) {\n                    sync_way = 'from_server';\n                } else if (obj.timestamp < settings.get('timestamp')) {\n                    sync_way = 'to_server';\n                } else {\n                    sync_way = 'no';\n                }\n                accounts_map[jid] = _.extend({\n                    jid: jid,\n                    to_sync: settings.get('to_sync'),\n                    sync_way: sync_way,\n                    sync_choose: sync_way !== 'no' ? ['from_server', 'to_server'] : false\n                }, obj.settings);\n                settings.save('synced', sync_way === 'no');\n            } else {\n                // pick local accounts\n                accounts_map[jid] = _.extend({\n                    sync_way: 'to_server'\n                }, _.omit(settings.attributes, ['order']));\n                settings.save('synced', false);\n            }\n        });\n\n        // fetch server order of accounts and merge it with local order\n        let max_order = _.max(order_map) || 0;\n        _.each(order_map, (order, jid) => {\n            accounts_map[jid].order = order;\n        });\n        list.each((settings) => {\n            let jid = settings.get('jid');\n            if (!accounts_map[jid].order) {\n                accounts_map[jid].order = (++max_order);\n            }\n        });\n\n        this.accounts_map = accounts_map;\n        this.accounts = _.map(accounts_map, function (value, key) { return value; });\n        // sort merged list by new order value\n        this.accounts.sort(function (acc1, acc2) {\n            return acc1.order - acc2.order;\n        });\n        _.each(this.accounts, this.addAccountHtml.bind(this));\n        this.updateSyncOptions();\n    },\n\n    addAccountHtml: function (settings) {\n        let jid = settings.jid;\n        let $account_el = $(templates.sync_settings_account_item({\n            jid: jid,\n            view: this\n        }));\n        this.$('.accounts-wrap').append($account_el);\n    },\n\n    updateAccountHtml: function (account_wrap) {\n        let $account_wrap = $(account_wrap),\n            jid = $account_wrap.data('jid'),\n            account_item = this.accounts_map[jid];\n        this.sync_all && (account_item.to_sync = true);\n        $account_wrap.switchClass('sync', account_item.to_sync);\n        $account_wrap.find('.sync-one').prop('checked', account_item.to_sync);\n        let sync_way;\n        if (account_item.to_sync) {\n            sync_way = account_item.sync_way;\n        } else if (this.model.list.get(jid)) {\n            sync_way = 'off_local';\n        } else {\n            sync_way = 'off_remote';\n        }\n        let mdiclass = constants.SYNC_WAY_DATA[sync_way].icon,\n            $sync_icon = $account_wrap.find('.sync-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n        $account_wrap.find('.sync-tip').text(xabber.getString(constants.SYNC_WAY_DATA[sync_way].tip));\n    },\n\n    updateSyncOptions: function () {\n        let list = this.model.list,\n            sync_all = this.sync_all,\n            accounts_map = this.accounts_map;\n        this.$('.sync-all').prop('checked', sync_all ? 'checked' : '');\n        this.$('.sync-one').prop('disabled', sync_all ? 'disabled' : '');\n        this.$('.account-wrap').each((idx, el) => {\n            this.updateAccountHtml(el);\n        });\n    },\n\n    changeSyncAll: function (ev) {\n        let $target = $(ev.target),\n            sync_all = $target.prop('checked');\n        this.sync_all = sync_all;\n        this.$('.sync-one').prop('disabled', sync_all ? 'disabled' : '');\n        if (sync_all) {\n            _.each(this.accounts, (account_item) => {\n                account_item.to_sync = true;\n            });\n            this.$('.account-wrap').each((idx, el) => {\n                this.updateAccountHtml(el);\n            });\n        }\n    },\n\n    changeSyncOne: function (ev) {\n        let $target = $(ev.target),\n            value = $target.prop('checked'),\n            $account_wrap = $target.closest('.account-wrap'),\n            jid = $account_wrap.data('jid');\n        this.accounts_map[jid].to_sync = value;\n        this.updateAccountHtml($account_wrap);\n    },\n\n    changeSyncWay: function (ev) {\n        let $account_wrap = $(ev.target).closest('.account-wrap'),\n            jid = $account_wrap.data('jid'),\n            account_item = this.accounts_map[jid];\n        if (!account_item.to_sync || !account_item.sync_choose) {\n            return;\n        }\n        let sync_choose = account_item.sync_choose,\n            idx = sync_choose.indexOf(account_item.sync_way) + 1;\n        if (idx === sync_choose.length) {\n            idx = 0;\n        }\n        account_item.sync_way = sync_choose[idx];\n        this.updateAccountHtml($account_wrap);\n    },\n\n    syncSettings: function () {\n        let list = this.model.list,\n            sync_all = this.sync_all;\n        this.model.save('sync_all', this.sync_all);\n        _.each(this.accounts, function (account_item) {\n            let jid = account_item.jid,\n                settings = list.get(jid);\n            if (settings) {\n                settings.save('to_sync', account_item.to_sync);\n                if (sync_all) {\n                    settings.save('order', account_item.order);\n                }\n                let sync_way = account_item.sync_way;\n                if (sync_way === 'to_server') {\n                    settings.update_timestamp();\n                } else if (sync_way === 'from_server' || sync_way === 'delete') {\n                    settings.save('timestamp', 0);\n                }\n            }\n            if (!settings && account_item.to_sync) {\n                settings = list.create_from_server(\n                    _.omit(account_item, ['sync_way', 'sync_choose']));\n            }\n        });\n        this.model.synchronize_main_settings();\n        this.do_sync = true;\n        this.close();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (xabber.body.isScreen('blank')) {\n            xabber.body.setScreen('all-chats');\n        }\n    },\n\n    close: function () {\n        if (!this.do_sync) {\n            this.model.trigger('settings_result', null);\n        }\n        this.do_sync = null;\n        this.settings = null;\n        this.settings_map = null;\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.APIAccountView = xabber.BasicView.extend({\n    className: 'setting xabber-account',\n    template: templates.xabber_account,\n    avatar_size: constants.AVATAR_SIZES.XABBER_ACCOUNT,\n\n    events: {\n        \"click .account-info-wrap\": \"openAccount\",\n        \"click .btn-login\": \"login\",\n        \"click .btn-logout\": \"logout\",\n        \"click .btn-set-password\": \"setPassword\",\n        \"click .btn-sync-settings\": \"synchronize\",\n        \"click .social-linked-header\": \"changeExpanded\",\n        \"click .btn-unlink\": \"unlinkSocial\",\n        \"click .btn-link\": \"linkSocial\",\n        \"click .btn-verify-email\": \"verifyEmail\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-block-wrap.xabber-account'));\n        this.$tab = this.parent.$('.xabber-account-tab');\n        this.updateForConnectedStatus();\n        this.default_color = utils.images.getDefaultColor(this.model.get('username'));\n        this.model.on(\"change:username\", this.updateName, this);\n        this.model.on(\"change:name\", this.updateAvatar, this);\n        this.model.on(\"change:connected\", this.updateForConnectedStatus, this);\n        this.model.on(\"change:last_sync\", this.updateLastSyncInfo, this);\n        this.model.on(\"change:linked_email_list\", this.updateSocialBindings, this);\n        this.model.on(\"change:linked_social\", this.updateSocialBindings, this);\n        this.model.on(\"relogin\", this.login, this);\n        this.data.on(\"change:sync\", this.updateSyncButton, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', false);\n    },\n\n    render: function () {\n        this.data.set('sync', false);\n        this.$('span.errors ').html(\"\");\n        this.updateLastSyncInfo();\n        this.updateSocialBindings();\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n    },\n\n    changeExpanded: function () {\n        this.data.set('expanded', (this.data.get('expanded')) ? false : true);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.social-linked-wrap').showIf(expanded);\n    },\n\n    updateSocialBindings: function () {\n        let linked_emails = this.model.get('linked_email_list'),\n            linked_social = this.model.get('linked_social');\n        this.$('.email-linked').remove();\n        this.$('.social-account').each(function (idx, item) {\n            let $social_item = $(item);\n            $social_item.addClass('not-linked');\n            $social_item.find('.synced-info').text(xabber.getString(\"title_not_linked_account\"));\n            $social_item.find('.btn-link').text(xabber.getString(\"action_connect\")).removeClass('btn-unlink');\n        });\n        _.each(linked_emails, (email) => {\n            let email_id = email.id,\n                email_address = email.email,\n                is_verified = email.verified,\n                email_item_html = $(templates.linked_email_item({email_id: email_id, email: email_address, verified: is_verified, color: this.default_color}));\n            email_item_html.insertBefore(this.$('#email.not-linked'));\n        });\n        _.each(linked_social, (social) => {\n            let social_provider = social.provider,\n                social_name = social.first_name + \" \" + social.last_name;\n            this.$('.'+ social_provider + '-linked').removeClass('not-linked');\n            this.$('.' + social_provider + '-linked .btn-link').text(xabber.getString(\"action_disconnect\")).addClass('btn-unlink');\n            this.$('.'+ social_provider + '-linked .synced-info').html($(`<div class=\"name one-line\">${social_name}</div><div class=\"verified-status one-line\">${xabber.getString(\"title_linked_account\", [social_provider])}</div>`));\n        });\n    },\n\n    linkSocial: function (ev) {\n        if ((this.model.get('token'))&&(!$(ev.target).hasClass('btn-unlink'))) {\n            let social_elem = $(ev.target).closest('.social-linked-item-wrap'),\n                provider = social_elem.attr('id');\n            if (provider === 'email') {\n                utils.dialogs.ask_enter_value(xabber.getString(\"xabber_account__dialog_add_email__header\"), null, {input_placeholder_value: xabber.getString(\"xabber_account__dialog_add_email__hint_enter_email\")}, { ok_button_text: xabber.getString(\"action_connect\")}).done((mail) => {\n                    if (mail) {\n                        this.model._call_method('POST', '/accounts/current/email_list/', {email: mail},\n                            (mail_data) => {\n                                let email_list = this.model.get('linked_email_list');\n                                email_list.push(mail_data);\n                                this.model.set('linked_email_list', email_list);\n                                this.updateSocialBindings();\n                            },\n                            (jqXHR, textStatus, errorThrown) => {\n                                this.$('span.errors ').text(jqXHR.email[0]);\n                            });\n                    }\n                });\n            }\n            else {\n                this.openAccount();\n            }\n        }\n    },\n\n    verifyEmail: function (ev) {\n        let $target = $(ev.target),\n            $email_html = $target.closest('.social-linked-item-wrap'),\n            email_address = $email_html.data('email');\n        utils.dialogs.ask_enter_value(xabber.getString(\"title_email_confirm\"), null, {input_placeholder_value: xabber.getString(\"xabber_account__dialog_confirm_email__hint_enter_code\")}, { ok_button_text: xabber.getString(\"button_confirm\"), resend_button_text: xabber.getString(\"button_resend_link\"), resend_to: email_address}).done((code) => {\n            if (code) {\n                if (code === email_address) {\n                    this.model._call_method('POST', '/accounts/current/email_list/', {email: code});\n                }\n                else {\n                    this.model._call_method('POST', '/accounts/email_confirmation/', {code: code},\n                        (mail_data) => {\n                            let email_list = mail_data.email_list;\n                            this.model.set('linked_email_list', email_list);\n                            this.updateSocialBindings();\n                        }, (jqXHR, textStatus, errorThrown) => {\n                            this.$('span.errors').text(jqXHR.code[0]);\n                        });\n                }\n            }\n        });\n    },\n\n    unlinkSocial: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.hasClass('btn-verify-email')) {\n            let $social_html = $target.closest('.social-linked-item-wrap');\n            let provider = $social_html.attr('id'),\n                is_email = $social_html.data('email');\n            if (is_email) {\n                let email_address = $social_html.data('email');\n                utils.dialogs.ask(xabber.getString(\"xabber_account__dialog_unlink_email__header\"), xabber.getString(\"title_delete_email\"), null, {ok_button_text: xabber.getString(\"action_disconnect\")}).done((result) => {\n                    if (result) {\n                        this.model._call_method('DELETE', '/accounts/current/email_list/' + $social_html.data('id') + '/', null,\n                            (mail_data) => {\n                                let email_list = this.model.get('linked_email_list'),\n                                    deleted_mail_index = email_list.indexOf(email_list.find(email => email.id === $social_html.data('id')));\n                                email_list.splice(deleted_mail_index, 1);\n                                this.model.set('linked_email_list', email_list);\n                                this.updateSocialBindings();\n                            }, (jqXHR, textStatus, errorThrown) => {\n                                this.model.get_settings();\n                            });\n                    }\n                });\n            }\n            else if (provider !== 'email') {\n                utils.dialogs.ask(xabber.getString(\"xabber_account__dialog_unlink_social__header\"), xabber.getString(\"title_delete_social\", [provider]), null, {ok_button_text: xabber.getString(\"action_disconnect\")}).done((result) => {\n                    if (result) {\n                        this.model._call_method('POST', '/accounts/current/social_unbind/', {provider: provider},\n                            () => {\n                                let social_list = this.model.get('linked_social'),\n                                    deleted_social_index = social_list.indexOf(social_list.find(social => social.provider === provider));\n                                social_list.splice(deleted_social_index, 1);\n                                this.model.set('linked_social', social_list);\n                                this.updateSocialBindings();\n                            }, (jqXHR, textStatus, errorThrown) => {\n                                this.model.get_settings();\n                            });\n                    }\n                });\n            }\n        }\n    },\n\n    updateName: function () {\n        this.$('.account-info-wrap .name').text(this.model.get('username'));\n        this.default_color = utils.images.getDefaultColor(this.model.get('username'));\n    },\n\n    updateAvatar: function () {\n        let name = this.model.get('name'),\n            image = this.model.get('image') || utils.images.getDefaultAvatar(name);\n        this.$('.circle-avatar').setAvatar(utils.images.getCachedImage(image), this.avatar_size);\n    },\n\n    updateForConnectedStatus: function () {\n        let connected = this.model.get('connected');\n        this.$tab.switchClass('online', connected)\n                 .switchClass('offline', !connected);\n        this.$('.linked-social-accounts-and-emails').showIf(connected);\n        this.$('.account-info-wrap').showIf(connected);\n        this.$('.sync-wrap').showIf(connected);\n        if (connected) {\n            this.updateName();\n            this.updateAvatar();\n            this.updateSyncButton();\n            this.updateLastSyncInfo();\n        }\n        this.$('.btn-login').hideIf(connected);\n        this.$('.btn-more').showIf(connected);\n    },\n\n    updateSyncButton: function () {\n        let sync = this.data.get('sync');\n        this.$('.btn-sync .button').hideIf(sync);\n        this.$('.btn-sync .preloader-wrapper').showIf(sync);\n    },\n\n    updateLastSyncInfo: function () {\n        let last_sync = this.model.get('last_sync');\n        if (last_sync) {\n            let time_delta = utils.now() - last_sync;\n            this.$('.last-sync-info').text(xabber.getString(\"xabber_account__last_sync__text\", [env.moment(env.moment.now() - 1000*time_delta).fromNow()]));\n        } else {\n            this.$('.last-sync-info').text(xabber.getString(\"xabber_account__last_sync__not_synced\"));\n        }\n    },\n\n    synchronize: function () {\n        if (!this.data.get('sync')) {\n            this.data.set('sync', true);\n            this.model.once(\"settings_result\", function () {\n                this.data.set('sync', false);\n            }, this);\n            this.model.save('sync_request', 'window');\n            this.model.get_settings();\n        }\n    },\n\n    login: function () {\n        if (xabber.add_api_account_view && xabber.accounts.connected.length > 1)\n            xabber.add_api_account_view.show();\n        else {\n            let account = xabber.accounts.connected[0];\n            if (account) {\n                account.set('auto_login_xa', true);\n                account.authXabberAccount();\n            }\n        }\n    },\n\n    logout: function () {\n        this.model.logout();\n    },\n\n    onPasswordResetFailed: function () {\n        utils.dialogs.error(xabber.getString(\"password_reset_need_email\"));\n    },\n\n    setPassword: function () {\n        let email_list = this.model.get('linked_email_list');\n        if (email_list) {\n            let verified_email = email_list.find(mail => mail.verified === true);\n            if (email_list.indexOf(verified_email) != -1) {\n                $.ajax({\n                    type: 'POST',\n                    url: constants.API_SERVICE_URL + '/accounts/password_reset_request/',\n                    contentType: \"application/json\",\n                    dataType: 'json',\n                    data: JSON.stringify({email: verified_email.email}),\n                    success: () => {\n                        utils.dialogs.notify(xabber.getString(\"button_reset_pass\"), xabber.getString(\"password_reset_success\", [verified_email.email]));\n                    },\n                    error: this.onPasswordResetFailed.bind(this)\n                });\n            }\n            else\n                this.onPasswordResetFailed();\n        }\n        else\n            this.onPasswordResetFailed();\n    },\n\n    openAccount: function () {\n        utils.openWindow(constants.XABBER_ACCOUNT_URL + '/?token=' + this.model.get('token'));\n    }\n});\n\n\nxabber.once(\"start\", function () {\n        this.account_settings_list = new this.AccountSettingsList(null, {\n            storage_name: this.getStorageName() + '-account-settings'\n        });\n        this.account_settings_list.fetch();\n        this.account_settings_list.order_timestamp = new this.AccountsOrderTimestamp(\n            {id: 'accounts-order-timestamp'},\n            {storage_name: this.getStorageName(), fetch: 'after'}\n        );\n    if (constants.ENABLE_XABBER_ACCOUNT) {\n        this.api_account = new this.APIAccount({id: 'api-account'},\n            {\n                storage_name: this.getStorageName(), fetch: 'before',\n                settings_list: this.account_settings_list\n            });\n    }\n\n        this.xabber_login_panel = xabber.login_page.addChild(\n            'xabber_login', this.XabberLoginPanel, {model: this.api_account});\n\n    if (constants.ENABLE_XABBER_ACCOUNT) {\n        this.settings_view.addChild('api-account', this.APIAccountView,\n            {model: this.api_account});\n\n        this.add_api_account_view = new this.AddAPIAccountView({model: this.api_account});\n        this.email_auth_view = new xabber.XabberLoginByEmailPanel({\n            parent: this.add_api_account_view,\n            model: this.api_account\n        });\n    }\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    _ = env._,\n    uuid = env.uuid,\n    $iq = env.$iq,\n    utils = env.utils,\n    Strophe = env.Strophe,\n    constants = env.constants;\n\nStrophe.log = function (log_level, msg) {\n    let do_log = (constants.LOG_LEVEL === constants.LOG_LEVEL_DEBUG) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN &&\n            log_level >= Strophe.LogLevel.WARN) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR &&\n            log_level >= Strophe.LogLevel.ERROR);\n    if (do_log) {\n        console.info('Strophe log: ');\n        console.info(msg);\n    }\n    if (msg && msg.includes && msg.includes('policy-violation') && log_level === Strophe.LogLevel.ERROR)\n        utils.dialogs.error(msg);\n};\n\nStrophe.addConnectionPlugin('register', {\n    _connection: null,\n\n    //The plugin must have the init function.\n    init: function(conn) {\n        this._connection = conn;\n\n        // compute free emun index number\n        let i = 0;\n        Object.keys(Strophe.Status).forEach(function (key) {\n            i = Math.max(i, Strophe.Status[key]);\n        });\n\n        /* extend name space\n         *  NS.REGISTER - In-Band Registration\n         *              from XEP 77.\n         */\n        Strophe.addNamespace('REGISTER', 'jabber:iq:register');\n        Strophe.Status.REGIFAIL        = i + 1;\n        Strophe.Status.REGISTER        = i + 2;\n        Strophe.Status.REGISTERED      = i + 3;\n        Strophe.Status.CONFLICT        = i + 4;\n        Strophe.Status.NOTACCEPTABLE   = i + 5;\n\n        if (conn.disco) {\n            if(conn.disco.addFeature)\n                conn.disco.addFeature(Strophe.NS.REGISTER);\n            if(conn.disco.addNode)\n                conn.disco.addNode(Strophe.NS.REGISTER, {items:[]});\n        }\n\n        // hooking strophe's connection.reset\n        var self = this, reset = conn.reset.bind(conn);\n        conn.reset = function () {\n            reset();\n            self.instructions = \"\";\n            self.fields = {};\n            self.registered = false;\n        };\n\n        // hooking strophe's _connect_cb\n        var connect_cb = conn._connect_cb.bind(conn);\n        conn._connect_cb = function (req, callback, raw) {\n            if (!self._registering) {\n                if (self.processed_features) {\n                    // exchange Input hooks to not print the stream:features twice\n                    var xmlInput = conn.xmlInput;\n                    conn.xmlInput = Strophe.Connection.prototype.xmlInput;\n                    var rawInput = conn.rawInput;\n                    conn.rawInput = Strophe.Connection.prototype.rawInput;\n                    connect_cb(req, callback, raw);\n                    conn.xmlInput = xmlInput;\n                    conn.rawInput = rawInput;\n                    delete self.processed_features;\n                } else {\n                    connect_cb(req, callback, raw);\n                }\n            } else {\n                if(!self._check_user) {\n                    // Save this request in case we want to authenticate later\n                    self._connect_cb_data = {\n                        req: req,\n                        raw: raw\n                    };\n                    if (self._register_cb(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n                }\n                else {\n                    if (self._register_cb_check_user(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n\n                }\n            }\n        };\n\n        // hooking strophe`s authenticate\n        var auth_old = conn.authenticate.bind(conn);\n        conn.authenticate = function(matched) {\n            if (typeof matched === \"undefined\") {\n                var conn = this._connection;\n\n                if (!this.fields.username || !this.domain || !this.fields.password) {\n                    Strophe.info(\"Register a JID first!\");\n                    return;\n                }\n\n                var jid = this.fields.username + \"@\" + this.domain;\n\n                conn.jid = jid;\n                conn.authzid = Strophe.getBareJidFromJid(conn.jid);\n                conn.authcid = Strophe.getNodeFromJid(conn.jid);\n                conn.pass = this.fields.password;\n\n                var req = this._connect_cb_data.req;\n                var callback = conn.connect_callback;\n                var raw = this._connect_cb_data.raw;\n                conn._connect_cb(req, callback, raw);\n            } else {\n                auth_old(matched);\n            }\n        }.bind(this);\n\n    },\n\n    /** Function: connect\n     *  Starts the registration process.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered multiple times with status updates.  The callback\n     *  should take two arguments - the status code and the error condition.\n     *\n     *  The status code will be one of the values in the Strophe.Status\n     *  constants.  The error condition will be one of the conditions\n     *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n     *\n     *  Please see XEP 77 for a more detailed explanation of the optional\n     *  parameters below.\n     *\n     *  Parameters:\n     *    (String) domain - The xmpp server's Domain.  This will be the server,\n     *      which will be contacted to register a new JID.\n     *      The server has to provide and allow In-Band Registration (XEP-0077).\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     */\n    connect: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n\n    connect_check_user: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n        this._check_user = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n    connect_change_password: function(jid, password, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(jid);\n        this.instructions = \"\";\n        this.fields = {};\n        conn.registerSASLMechanisms([Strophe.SASLAnonymous,\n            Strophe.SASLExternal,\n            Strophe.SASLMD5,\n            Strophe.SASLPlain,\n            Strophe.SASLSHA1]);\n\n        conn.connect(jid, password, callback, wait, hold, route);\n    },\n\n    /** PrivateFunction: _register_cb\n     *  _Private_ handler for initial registration request.\n     *\n     *  This handler is used to process the initial registration request\n     *  response from the BOSH server. It is used to set up a bosh session\n     *  and requesting registration fields from host.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The current request.\n     */\n    _register_cb: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n\n        // send a get request for registration, to get all required data fields\n        conn._addSysHandler(this._get_register_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send($iq({type: \"get\", id: uuid(), to: this.domain }).c(\"query\",\n            {xmlns: Strophe.NS.REGISTER}).tree());\n\n        return true;\n    },\n    _register_cb_check_user: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n\n        return true;\n    },\n\n    /** PrivateFunction: _get_register_cb\n     *  _Private_ handler for Registration Fields Request.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove SHOULD contain the registration information currentlSHOULD contain the registration information currentlSHOULD contain the registration information currentlthe handler.\n     */\n    _get_register_cb: function (stanza) {\n        var i, query, field, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        // get required fields\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                // this is a special element\n                // it provides info about given data fields in a textual way.\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                // ignore x for now\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n        return false;\n    },\n\n    /** Function: submit\n     *  Submits Registration data.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered with status code Strophe.Status.REGISTER. At this point\n     *  the user should fill all required fields in connection.register.fields\n     *  and invoke this function to procceed in the registration process.\n     */\n    submit: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER});\n\n        // set required fields\n        fields = Object.keys(this.fields);\n        for (i = 0; i < fields.length; i++) {\n            name = fields[i];\n            query.c(name).t(this.fields[name]).up();\n        }\n\n        // providing required information\n        conn._addSysHandler(this._submit_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    /** PrivateFunction: _submit_cb\n     *  _Private_ handler for submitted registration information.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _submit_cb: function (stanza) {\n        var i, query, field, error = null, conn = this._connection;\n\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length > 0) {\n            query = query[0];\n            // update fields\n            for (i = 0; i < query.childNodes.length; i++) {\n                field = query.childNodes[i];\n                if (field.tagName.toLowerCase() === 'instructions') {\n                    // this is a special element\n                    // it provides info about given data fields in a textual way\n                    this.instructions = Strophe.getText(field);\n                    continue;\n                }\n                this.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n            }\n        }\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Registration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Registration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    }\n});\n\n\nlet utf16to8 = function (str) {\n    let i, c;\n    let out = \"\";\n    let len = str.length;\n    for (i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n        if ((c >= 0x0000) && (c <= 0x007F)) {\n            out += str.charAt(i);\n        } else if (c > 0x07FF) {\n            out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n            out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        } else {\n            out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        }\n    }\n    return out;\n};\n\nStrophe.SASLHOTP = function() {};\nStrophe.SASLHOTP.prototype = new Strophe.SASLMechanism(\"HOTP\", true, 100);\n\nStrophe.SASLHOTP.prototype.test = function (connection) {\n    return true;\n};\n\nStrophe.SASLHOTP.prototype.onChallenge = function (connection) {\n    let auth_str = String.fromCharCode(0) + connection.authcid +\n        String.fromCharCode(0) + connection.hotp_pass;\n    return utf16to8(auth_str);\n};\n\nStrophe.ConnectionManager = function (CONNECTION_URL, options) {\n    options = options || {};\n    this.connection = new Strophe.Connection(CONNECTION_URL, options);\n};\n\nStrophe.ConnectionManager.prototype = {\n    connect: function (auth_type, jid, password, callback) {\n        this.connection.mechanisms = {};\n        this.auth_type = auth_type || 'password';\n        if (this.auth_type === 'password') {\n            this.connection.registerSASLMechanisms([Strophe.SASLAnonymous,\n                Strophe.SASLExternal,\n                Strophe.SASLMD5,\n                Strophe.SASLPlain,\n                Strophe.SASLSHA1]);\n        } else if (this.auth_type === 'x-token') {\n            this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n            delete this.connection._sasl_data[\"server-signature\"];\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(password), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(jid, password, callback)\n            });\n            return;\n        } else {\n            this.connection.registerSASLMechanisms([Strophe.SASLXOAuth2]);\n            delete this.connection._sasl_data[\"server-signature\"];\n        }\n        this.connection.connect(jid, password, callback);\n    },\n\n    reconnect: function (callback) {\n        if (this.auth_type === 'x-token') {\n            if (!this.connection.mechanisms[\"HOTP\"]) {\n                this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n                delete this.connection._sasl_data[\"server-signature\"];\n            }\n            if (this.connection.account && this.connection.account.get('hotp_counter'))\n                this.connection.counter = this.connection.account.get('hotp_counter');\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(this.connection.pass), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(this.connection.jid, this.connection.pass, callback)\n            });\n            return;\n        }\n        this.connection.connect(this.connection.jid, this.connection.pass, callback);\n    }\n};\n\n_.extend(Strophe.Connection.prototype, {\n\n    _attemptSASLAuth: function (mechanisms) {\n        mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n        var i = 0, mechanism_found = false;\n        for (i = 0; i < mechanisms.length; ++i) {\n            if (!mechanisms[i].prototype.test(this)) {\n                continue;\n            }\n            this._sasl_success_handler = this._addSysHandler(\n                this._sasl_success_cb.bind(this), null,\n                \"success\", null, null);\n            this._sasl_failure_handler = this._addSysHandler(\n                this._sasl_failure_cb.bind(this), null,\n                \"failure\", null, null);\n            this._sasl_challenge_handler = this._addSysHandler(\n                this._sasl_challenge_cb.bind(this), null,\n                \"challenge\", null, null);\n\n            this._sasl_mechanism = new mechanisms[i]();\n            this._sasl_mechanism.onStart(this);\n\n            var request_auth_exchange = $build(\"auth\", {\n                xmlns: Strophe.NS.SASL,\n                mechanism: this._sasl_mechanism.name\n            });\n            if (this._sasl_mechanism.isClientFirst) {\n                var response = this._sasl_mechanism.onChallenge(this, null);\n                request_auth_exchange.t(btoa(response));\n            }\n            this.send(request_auth_exchange.tree());\n            mechanism_found = true;\n            if (this.account && this.counter && this.account.get('x_token') && this._sasl_mechanism.name === \"HOTP\") {\n                this.counter++;\n                this.account.save({\n                    hotp_counter: this.counter,\n                });\n            }\n            break;\n        }\n        return mechanism_found;\n    },\n\n    _sasl_auth1_cb: function (elem) {\n        this.features = elem;\n        let i, child;\n        for (i = 0; i < elem.childNodes.length; i++) {\n            child = elem.childNodes[i];\n            if (child.nodeName === 'bind') {\n                this.do_bind = true;\n            }\n\n            if (child.nodeName === 'session') {\n                this.do_session = true;\n            }\n\n            if ((child.nodeName === 'devices') && child.namespaceURI === Strophe.NS.AUTH_DEVICES && this.options['x-token']) {\n                this.x_token_auth = true;\n            }\n\n            if ((child.nodeName === 'synchronization') && (child.namespaceURI === Strophe.NS.SYNCHRONIZATION)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n                this.do_synchronization = true;\n            }\n\n            if ((child.nodeName === 'sub') && (child.namespaceURI === Strophe.NS.SUBSCRIPTION_PREAPPROVAL)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n            }\n        }\n\n        if (!this.do_bind) {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            return false;\n        } else {\n            if (this.x_token_auth && (!this.x_token || (parseInt(this.x_token.expire)*1000 < env.moment.now()))) {\n                this.getXToken((success) => {\n                    let token = $(success).find('secret').text(),\n                        expires_at = $(success).find('expire').text(),\n                        token_uid = $(success).find('device').attr('id');\n                    this.x_token = {token: token, expire: expires_at, token_uid: token_uid,};\n                    this.counter = 1;\n                    this.pass = token;\n                    this._send_auth_bind();\n                    if (this.account) {\n                        this.account.save({\n                            hotp_counter: this.counter,\n                            password: null,\n                        });\n                    }\n                }, () => {\n                    this._send_auth_bind();\n                });\n            }\n            else {\n                this._send_auth_bind();\n            }\n        }\n        return false;\n    },\n\n    _send_auth_bind() {\n        this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\n            null, \"_bind_auth_2\");\n\n        let resource = Strophe.getResourceFromJid(this.jid);\n        if (resource) {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .c('resource', {}).t(resource).tree());\n        } else {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .tree());\n        }\n    },\n\n    getXToken: function (callback, errback) {\n        let uniq_id = uuid(), old_token,\n            iq = $iq({\n            type: 'set',\n            to: this.domain,\n            id: uniq_id\n        }).c('register', { xmlns: Strophe.NS.AUTH_DEVICES});\n        this.account && (old_token = this.account.get('old_device_token'));\n        if (old_token && old_token.token && old_token.token_uid){\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES, id: old_token.token_uid})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('secret').t(old_token.token).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n            this.account.save('old_device_token', null);\n        } else {\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n        }\n        let handler = function (stanza) {\n            let iqtype = stanza.getAttribute('type');\n            if (iqtype == 'result') {\n                if (callback) {\n                    callback(stanza);\n                }\n            } else if (iqtype == 'error') {\n                if (errback) {\n                    errback(stanza);\n                }\n            } else {\n                throw {\n                    name: \"StropheError\",\n                    message: \"Got bad IQ type of \" + iqtype\n                };\n            }\n        };\n\n        this._addSysHandler(handler.bind(this), Strophe.NS.AUTH_DEVICES, 'iq', 'result' , uniq_id);\n\n        this.send(iq.tree());\n    }\n});\n\n_.extend(Strophe.Websocket.prototype, {\n\n    _onIdle: function () {\n        var data = this._conn._data;\n        if (data.length > 0 && !this._conn.paused) {\n            for (var i = 0; i < data.length; i++) {\n                if (data[i] !== null) {\n                    var stanza, rawStanza;\n                    if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                    } else {\n                        stanza = data[i];\n                    }\n                    rawStanza = Strophe.serialize(stanza);\n                    this._conn.xmlOutput(stanza);\n                    this._conn.rawOutput(rawStanza);\n                    if (this.socket && this.socket.readyState === 1){\n                        this.socket.send(rawStanza);\n                    } else {\n                        console.log('data went to pending');\n                        console.log(this._conn._data.slice(i));\n                        this._conn.account._pending_stanzas.push(this._conn._data.slice(i))\n                        this._conn._data = [];\n                        return;\n                    }\n                }\n            }\n            this._conn._data = [];\n        }\n    },\n});\n\nStrophe.xmlunescape = function (text) {\n    let reg_exp = {\n        '&amp;': '&',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&quot;': '\"',\n        '&apos;': \"'\"\n    };\n    let escaper = function(match) {\n        return reg_exp[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    let source = '(?:' + _.keys(reg_exp).join('|') + ')',\n        testRegexp = RegExp(source),\n        replaceRegexp = RegExp(source, 'g');\n    text = text == null ? '' : '' + text;\n    return testRegexp.test(text) ? text.replace(replaceRegexp, escaper) : text;\n};\n\nStrophe.addNamespace('ATTENTION', 'urn:xmpp:attention:0');\nStrophe.addNamespace('CARBONS', 'urn:xmpp:carbons:2');\nStrophe.addNamespace('FORWARD', 'urn:xmpp:forward:0');\nStrophe.addNamespace('HASH', 'urn:xmpp:hashes:2');\nStrophe.addNamespace('HINTS', 'urn:xmpp:hints');\nStrophe.addNamespace('SCE', 'urn:xmpp:sce:1');\nStrophe.addNamespace('RECEIPTS', 'urn:xmpp:receipts');\nStrophe.addNamespace('JINGLE', 'urn:xmpp:jingle:1');\nStrophe.addNamespace('JINGLE_SECURITY_STUB', 'urn:xmpp:jingle:security:stub:0');\nStrophe.addNamespace('JINGLE_MSG', 'urn:xmpp:jingle-message:0');\nStrophe.addNamespace('JINGLE_RTP', 'urn:xmpp:jingle:apps:rtp:1');\nStrophe.addNamespace('JINGLE_TRANSPORTS_ICE', 'urn:xmpp:jingle:transports:ice-udp:1');\nStrophe.addNamespace('ADDRESS', 'http://jabber.org/protocol/address');\nStrophe.addNamespace('CHATSTATES', 'http://jabber.org/protocol/chatstates');\nStrophe.addNamespace('EXTENDED_CHATSTATES', 'https://xabber.com/protocol/extended-chatstates');\nStrophe.addNamespace('HTTP_AUTH', 'http://jabber.org/protocol/http-auth');\nStrophe.addNamespace('AUTH_TOKENS', 'https://xabber.com/protocol/auth-tokens');\nStrophe.addNamespace('AUTH_DEVICES', 'https://xabber.com/protocol/devices');\nStrophe.addNamespace('SYNCHRONIZATION', 'https://xabber.com/protocol/synchronization');\nStrophe.addNamespace('SYNCHRONIZATION_REGULAR_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('SYNCHRONIZATION_CHANNEL', 'https://xabber.com/protocol/channels');\nStrophe.addNamespace('SYNCHRONIZATION_OLD_OMEMO', 'urn:xmpp:omemo:1');\nStrophe.addNamespace('SYNCHRONIZATION_OMEMO', 'urn:xmpp:omemo:2');\nStrophe.addNamespace('XABBER_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('EXPLICIT_MESSAGE_ENCRYPTION', 'urn:xmpp:eme:0');\nStrophe.addNamespace('DELIVERY', 'https://xabber.com/protocol/delivery');\nStrophe.addNamespace('ARCHIVE', 'https://xabber.com/protocol/archive');\nStrophe.addNamespace('MAM', 'urn:xmpp:mam:2');\nStrophe.addNamespace('RSM', 'http://jabber.org/protocol/rsm');\nStrophe.addNamespace('DATAFORM', 'jabber:x:data');\nStrophe.addNamespace('CHAT_MARKERS', 'urn:xmpp:chat-markers:0');\nStrophe.addNamespace('VCARD_UPDATE', 'vcard-temp:x:update');\nStrophe.addNamespace('HTTP_UPLOAD', 'urn:xmpp:http:upload');\nStrophe.addNamespace('BLOCKING', 'urn:xmpp:blocking');\nStrophe.addNamespace('SEARCH', 'jabber:iq:search');\nStrophe.addNamespace('PRIVATE_STORAGE', 'jabber:iq:private');\nStrophe.addNamespace('MEDIA', 'urn:xmpp:media-element');\nStrophe.addNamespace('LAST', 'jabber:iq:last');\nStrophe.addNamespace('GROUP_CHAT', 'https://xabber.com/protocol/groups');\nStrophe.addNamespace('GROUP_CHAT_INVITE', 'https://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('GROUP_CHAT_INVITE_HTTP', 'http://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('WEBCHAT', 'https://xabber.com/protocol/webchat');\nStrophe.addNamespace('INDEX', 'https://xabber.com/protocol/index');\nStrophe.addNamespace('PUBSUB', 'http://jabber.org/protocol/pubsub');\nStrophe.addNamespace('PUBSUB_AVATAR_DATA', 'urn:xmpp:avatar:data');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA', 'urn:xmpp:avatar:metadata');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA_THUMBNAIL', 'urn:xmpp:thumbs:1');\nStrophe.addNamespace('REWRITE', 'https://xabber.com/protocol/rewrite');\nStrophe.addNamespace('REFERENCE', 'https://xabber.com/protocol/references');\nStrophe.addNamespace('GEOLOC', 'http://jabber.org/protocol/geoloc');\nStrophe.addNamespace('MARKUP', 'https://xabber.com/protocol/markup');\nStrophe.addNamespace('VOICE_MESSAGE', 'https://xabber.com/protocol/voice-messages');\nStrophe.addNamespace('FILES', 'https://xabber.com/protocol/files');\nStrophe.addNamespace('SUBSCRIPTION_PREAPPROVAL', 'urn:xmpp:features:pre-approval');\nStrophe.addNamespace('OGP', 'https://xabber.com/protocol/ogp');\nStrophe.addNamespace('URLDISCO', 'urn:xabber:http:url');\nStrophe.addNamespace('MEDIAGALLERY', 'urn:xabber:http:url:mediagallery');\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.vcard,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq,\n    $build = env.$build,\n    utils = env.utils;\n\nlet xmlToObject = function ($vcard) {\n    let vcard = {\n        nickname: $vcard.find('NICKNAME').text().trim(),\n        fullname: $vcard.find('FN').text().trim(),\n        first_name: $vcard.find('N GIVEN').text().trim(),\n        middle_name: $vcard.find('N MIDDLE').text().trim(),\n        last_name: $vcard.find('N FAMILY').text().trim(),\n        birthday: $vcard.find('BDAY').text().trim(),\n        job_title: $vcard.find('TITLE').text().trim(),\n        role: $vcard.find('ROLE').text().trim(),\n        url: $vcard.find('URL').text().trim(),\n        description: $vcard.find('DESC').text().trim(),\n        jabber_id: $vcard.find('JABBERID').text().trim(),\n        org: {},\n        photo: {},\n        phone: {},\n        address: {},\n        email: {}\n    };\n\n    if ($vcard.find('X-PRIVACY').length || $vcard.find('X-MEMBERSHIP').length || $vcard.find('X-INDEX').length) {\n        vcard.group_info = {\n            jid: vcard.jabber_id,\n            description: vcard.description,\n            name: vcard.nickname,\n            anonymous: $vcard.find('X-PRIVACY').text().trim(),\n            searchable: $vcard.find('X-INDEX').text().trim(),\n            model: $vcard.find('X-MEMBERSHIP').text().trim(),\n            status_msg: $vcard.find('X-STATUS').text().trim(),\n            members_num: $vcard.find('X-MEMBERS').text().trim()\n        };\n    }\n\n    let $org = $vcard.find('ORG');\n    if ($org.length) {\n        vcard.org.name = $org.find('ORGNAME').text().trim();\n        vcard.org.unit = $org.find('ORGUNIT').text().trim();\n    }\n\n    let $photo = $vcard.find('PHOTO');\n    if ($photo.length) {\n        vcard.photo.image = $photo.find('BINVAL').text().trim();\n        vcard.photo.type = $photo.find('TYPE').text().trim();\n    }\n\n    $vcard.find('TEL').each(function () {\n        let $this = $(this),\n            number = $this.find('NUMBER').text().trim();\n        if (!number) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.phone.work = number;\n        } else if ($this.find('HOME').length) {\n            vcard.phone.home = number;\n        } else if ($this.find('MOBILE').length) {\n            vcard.phone.mobile = number;\n        } else {\n            vcard.phone.default = number;\n        }\n    });\n\n    $vcard.find('EMAIL').each(function () {\n        let $this = $(this);\n        let email = $this.find('USERID').text().trim();\n        if (!email) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.email.work = email;\n        } else if ($this.find('HOME').length) {\n            vcard.email.home = email;\n        } else {\n            vcard.email.default = email;\n        }\n    });\n\n    $vcard.find('ADR').each(function () {\n        let $this = $(this);\n        let address = {\n            pobox: $this.find('POBOX').text().trim(),\n            extadd: $this.find('EXTADR').text().trim(),\n            street: $this.find('STREET').text().trim(),\n            locality: $this.find('LOCALITY').text().trim(),\n            region: $this.find('REGION').text().trim(),\n            pcode: $this.find('PCODE').text().trim(),\n            country: $this.find('CTRY').text().trim()\n        };\n        if ($this.find('WORK').length) {\n            vcard.address.work = address;\n        } else if ($this.find('HOME').length) {\n            vcard.address.home = address;\n        } else {\n            vcard.address.default = address;\n        }\n    });\n\n    return vcard;\n};\n\nlet objectToXml = function (vcard) {\n    let $vcard = $build(\"vCard\", {xmlns: Strophe.NS.VCARD});\n    vcard.nickname && $vcard.c(\"NICKNAME\").t(vcard.nickname).up();\n    vcard.fullname && $vcard.c(\"FN\").t(vcard.fullname).up();\n    if (vcard.first_name || vcard.last_name || vcard.middle_name) {\n        $vcard.c(\"N\");\n        vcard.first_name && $vcard.c(\"GIVEN\").t(vcard.first_name).up();\n        vcard.last_name && $vcard.c(\"FAMILY\").t(vcard.last_name).up();\n        vcard.middle_name && $vcard.c(\"MIDDLE\").t(vcard.middle_name).up();\n        $vcard.up();\n    }\n    vcard.birthday && $vcard.c(\"BDAY\").t(vcard.birthday).up();\n    vcard.job_title && $vcard.c(\"TITLE\").t(vcard.job_title).up();\n    vcard.role && $vcard.c(\"ROLE\").t(vcard.role).up();\n    if (vcard.org.name || vcard.org.unit) {\n        $vcard.c(\"ORG\");\n        vcard.org.name && $vcard.c(\"ORGNAME\").t(vcard.org.name).up();\n        vcard.org.unit && $vcard.c(\"ORGUNIT\").t(vcard.org.unit).up();\n        $vcard.up();\n    }\n    vcard.url && $vcard.c(\"URL\").t(vcard.url).up();\n    if (vcard.photo.image) {\n        $vcard.c(\"PHOTO\").c(\"BINVAL\").t(vcard.photo.image).up();\n        $vcard.c(\"TYPE\").t(vcard.photo.type || 'image/jpeg').up();\n        $vcard.up();\n    }\n    vcard.description && $vcard.c(\"DESC\").t(vcard.description).up();\n    vcard.jabber_id && $vcard.c(\"JABBERID\").t(vcard.jabber_id).up();\n\n    _.each(vcard.phone, function (phone, type) {\n        $vcard.c(\"TEL\").c(\"NUMBER\").t(phone).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.email, function (email, type) {\n        $vcard.c(\"EMAIL\").c(\"USERID\").t(email).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.address, function (address, type) {\n        $vcard.c(\"ADR\");\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        address.pobox && $vcard.c(\"POBOX\").t(address.pobox).up();\n        address.extadd && $vcard.c(\"EXTADR\").t(address.extadd).up();\n        address.street && $vcard.c(\"STREET\").t(address.street).up();\n        address.locality && $vcard.c(\"LOCALITY\").t(address.locality).up();\n        address.region && $vcard.c(\"REGION\").t(address.region).up();\n        address.pcode && $vcard.c(\"PCODE\").t(address.pcode).up();\n        address.country && $vcard.c(\"CTRY\").t(address.country).up();\n        $vcard.up();\n    });\n\n    return $vcard.tree();\n};\n\nStrophe.addConnectionPlugin('vcard', {\n    _connection: null,\n\n    init: function(conn) {\n        this._connection = conn;\n        return Strophe.addNamespace('VCARD', 'vcard-temp');\n    },\n\n    get: function(jid, callback, errback) {\n        let iq = $iq({type: 'get', to: jid}).c('vCard', {xmlns: Strophe.NS.VCARD});\n        this._connection.sendIQ(iq, function (res) {\n            if (!callback) { return; }\n            let vcard = xmlToObject($(res).find('vCard[xmlns='+Strophe.NS.VCARD+']'));\n            vcard.jabber_id || (vcard.jabber_id = jid);\n            return callback(vcard);\n        }, errback);\n    },\n\n    set: function(jid, vcard, callback, errback) {\n        vcard.jabber_id || (vcard.jabber_id = jid);\n        let iq = $iq({type: 'set', to: jid}).cnode(objectToXml(vcard));\n        this._connection.sendIQ(iq, callback, errback);\n    }\n});\n\nutils.vcard = {\n    getBlank: function (jid) {\n        let vcard = xmlToObject($('<div/>'));\n        vcard.jabber_id = jid;\n        return vcard;\n    }\n};\n\nxabber.VCardView = xabber.BasicView.extend({\n    template: templates.vcard,\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.data.on(\"change:refresh\", this.updateRefreshButton, this);\n    },\n\n    render: function () {\n        this.$('.block-header .block-name').text(this.model.get('group_chat') ? 'Group chat details' : xabber.getString(\"vcard_screen__header\"));\n        this.data.set('refresh', false);\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                         addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    updateRefreshButton: function () {\n        this.$('.btn-vcard-refresh .button').hideIf(this.data.get('refresh'));\n        this.$('.btn-vcard-refresh .preloader-wrapper').showIf(this.data.get('refresh'));\n    },\n\n    refresh: function () {\n        if (!this.data.get('refresh')) {\n            this.data.set('refresh', true);\n            this.model.getVCard(() => {\n                this.data.set('refresh', false);\n            });\n        }\n    }\n});\n\nxabber.VCardRightView = xabber.VCardView.extend({\n    template: templates.vcard_right,\n\n    __initialize: function (ev) {\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        this.data.set('refresh', false);\n        this.update();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.vcard-wrap .personal-info-wrap');\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.first_name || vcard.last_name);\n\n        $info = this.$('.full-vcard-wrap .personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n});\n\nxabber.VCardEditView = xabber.BasicView.extend({\n    className: 'account-vcard-edit-wrap',\n    template: templates.vcard_edit,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"keyup input\": \"keyUp\",\n        \"keyup textarea\": \"keyUp\",\n        \"input .first-name input\": \"changePlaceholder\",\n        \"input .middle-name input\": \"changePlaceholder\",\n        \"input .last-name input\": \"changePlaceholder\",\n        \"click .btn-vcard-save\": \"save\",\n        \"click .btn-vcard-back\": \"render\",\n    },\n\n    _initialize: function () {\n        let self = this,\n            $input = this.$('.datepicker').pickadate({\n            selectMonths: true,\n            selectYears: 100,\n            autoOk: false,\n            // min = 100 years ago\n            min: new Date(moment.now() - 3153600000000),\n            max: new Date(moment.now() - 86400000),\n            format: 'dd.mm.yyyy',\n            allowKeyboardControl: false,\n            today: '',\n            onClose: function(){\n                $(document.activeElement).blur();\n                self.$('.btn-vcard-back').removeClass('hidden');\n                self.$('.btn-vcard-save').removeClass('hidden');\n            },\n            klass: {\n                weekday_display: 'picker__weekday-display ground-color-700',\n                date_display: 'picker__date-display ground-color-500',\n                navPrev: 'picker__nav--prev hover-ground-color-100',\n                navNext: 'picker__nav--next hover-ground-color-100',\n                selected: 'picker__day--selected ground-color-500',\n                now: 'picker__day--today text-color-700',\n                buttonClear: 'btn-flat btn-main btn-dark',\n                buttonClose: 'btn-flat btn-main text-color-700'\n            }\n        });\n        $input.on('mousedown', function cancelEvent(evt) {\n            evt.preventDefault();\n        });\n        this.data.on(\"change:saving\", this.updateSaveButton, this);\n    },\n\n    render: function () {\n        this.data.set('saving', false);\n        this.setData();\n        Materialize.updateTextFields();\n        this.changePlaceholder();\n        this.updateScrollBar();\n        this.$('.btn-vcard-back').addClass('hidden');\n        this.$('.btn-vcard-save').addClass('hidden');\n    },\n\n    changePlaceholder: function () {\n        let nickname_placeholder = ((this.$('.first-name input').val() + \" \" + this.$('.middle-name input').val()).trim() + \" \" + this.$('.last-name input').val()).trim() || this.model.get('jid');\n        this.$('.nickname input').attr('placeholder', nickname_placeholder);\n    },\n\n    setData: function () {\n        let vcard = this.model.get('vcard');\n\n        this.$('.nickname input').val(vcard.nickname);\n        this.$('.fullname input').val(vcard.fullname);\n        this.$('.first-name input').val(vcard.first_name);\n        this.$('.last-name input').val(vcard.last_name);\n        this.$('.middle-name input').val(vcard.middle_name);\n\n        this.$('.birthday input').val(vcard.birthday);\n\n        this.$('.role input').val(vcard.role);\n        this.$('.job-title input').val(vcard.job_title);\n        this.$('.org-name input').val(vcard.org.name);\n        this.$('.org-unit input').val(vcard.org.unit);\n\n        this.$('.url input').val(vcard.url);\n\n        this.$('.description textarea').val(vcard.description);\n\n        this.$('.phone-work input').val(vcard.phone.work);\n        this.$('.phone-home input').val(vcard.phone.home);\n        this.$('.phone-mobile input').val(vcard.phone.mobile);\n\n        this.$('.email-work input').val(vcard.email.work);\n        this.$('.email-home input').val(vcard.email.home);\n\n        let addr = vcard.address.work || {},\n            $info = this.$('.address-work-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n\n        addr = vcard.address.home || {};\n        $info = this.$('.address-home-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n    },\n\n    getData: function () {\n        let vcard = utils.vcard.getBlank(this.model.get('jid'));\n\n        vcard.nickname = this.$('.nickname input').val();\n        vcard.fullname = this.$('.fullname input').val();\n        vcard.first_name = this.$('.first-name input').val();\n        vcard.last_name = this.$('.last-name input').val();\n        vcard.middle_name = this.$('.middle-name input').val();\n\n        vcard.birthday = this.$('.birthday input').val();\n\n        vcard.role = this.$('.role input').val();\n        vcard.job_title = this.$('.job-title input').val();\n        vcard.org.name = this.$('.org-name input').val();\n        vcard.org.unit = this.$('.org-unit input').val();\n\n        vcard.url = this.$('.url input').val();\n\n        vcard.description = this.$('.description textarea').val();\n\n        vcard.phone.work = this.$('.phone-work input').val();\n        vcard.phone.home = this.$('.phone-home input').val();\n        vcard.phone.mobile = this.$('.phone-mobile input').val();\n\n        vcard.email.work = this.$('.email-work input').val();\n        vcard.email.home = this.$('.email-home input').val();\n\n        vcard.address.work = {};\n        let addr = vcard.address.work,\n            $info = this.$('.address-work-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n\n        vcard.address.home = {};\n        addr = vcard.address.home;\n        $info = this.$('.address-home-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n        return vcard;\n    },\n\n    updateSaveButton: function () {\n        this.$('.btn-vcard-save').text(this.data.get('saving') ? xabber.getString(\"saving\") : xabber.getString(\"vcard_edit__button_save\"));\n    },\n\n    save: function () {\n        if (this.data.get('saving')) {\n            return;\n        }\n        this.data.set('saving', true);\n        this.model.setVCard(this.getData(),\n            () => {\n                this.model.getVCard();\n                this.data.set('saving', false);\n                this.$('.btn-vcard-back').addClass('hidden');\n                this.$('.btn-vcard-save').addClass('hidden');\n            },\n            function () {\n                utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                this.data.set('saving', false);\n            }\n        );\n    },\n\n    keyUp: function () {\n        this.$('.btn-vcard-back').removeClass('hidden');\n        this.$('.btn-vcard-save').removeClass('hidden');\n    },\n});\n\nxabber.VCardEditModalView = xabber.BasicView.extend({\n    className: 'account-vcard-edit-modal-wrap account-vcard-edit-wrap',\n    template: templates.vcard_edit_modal,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"keyup input\": \"keyUp\",\n        \"keyup textarea\": \"keyUp\",\n        \"input .first-name input\": \"changePlaceholder\",\n        \"input .middle-name input\": \"changePlaceholder\",\n        \"input .last-name input\": \"changePlaceholder\",\n        \"click .btn-vcard-save\": \"save\",\n        // \"click .btn-vcard-back\": \"render\",\n        // \"click .btn-cancel\": \"close\",\n    },\n\n    _initialize: function () {\n        let self = this,\n            $input = this.$('.datepicker').pickadate({\n            selectMonths: true,\n            selectYears: 100,\n            autoOk: false,\n            // min = 100 years ago\n            min: new Date(moment.now() - 3153600000000),\n            max: new Date(moment.now() - 86400000),\n            format: 'dd.mm.yyyy',\n            allowKeyboardControl: false,\n            today: '',\n            onClose: function(){\n                $(document.activeElement).blur();\n                self.$('.btn-vcard-back').removeClass('hidden');\n                self.$('.btn-vcard-save').removeClass('hidden');\n            },\n            klass: {\n                weekday_display: 'picker__weekday-display ground-color-700',\n                date_display: 'picker__date-display ground-color-500',\n                navPrev: 'picker__nav--prev hover-ground-color-100',\n                navNext: 'picker__nav--next hover-ground-color-100',\n                selected: 'picker__day--selected ground-color-500',\n                now: 'picker__day--today text-color-700',\n                buttonClear: 'btn-flat btn-main btn-dark',\n                buttonClose: 'btn-flat btn-main text-color-700'\n            }\n        });\n        $input.on('mousedown', function cancelEvent(evt) {\n            evt.preventDefault();\n        });\n        this.data.on(\"change:saving\", this.updateSaveButton, this);\n    },\n\n    render: function (options) {\n        options.$el.html('');\n        options.$el.append(this.$el);\n        this.data.set('saving', false);\n        this.setData();\n        Materialize.updateTextFields();\n        this.changePlaceholder();\n        this.updateScrollBar();\n        this.$('.btn-vcard-save').addClass('hidden');\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    changePlaceholder: function () {\n        let nickname_placeholder = ((this.$('.first-name input').val() + \" \" + this.$('.middle-name input').val()).trim() + \" \" + this.$('.last-name input').val()).trim() || this.model.get('jid');\n        this.$('.nickname input').attr('placeholder', nickname_placeholder);\n    },\n\n    setData: function () {\n        let vcard = this.model.get('vcard');\n\n        this.$('.nickname input').val(vcard.nickname);\n        this.$('.fullname input').val(vcard.fullname);\n        this.$('.first-name input').val(vcard.first_name);\n        this.$('.last-name input').val(vcard.last_name);\n        this.$('.middle-name input').val(vcard.middle_name);\n\n        this.$('.birthday input').val(vcard.birthday);\n\n        this.$('.role input').val(vcard.role);\n        this.$('.job-title input').val(vcard.job_title);\n        this.$('.org-name input').val(vcard.org.name);\n        this.$('.org-unit input').val(vcard.org.unit);\n\n        this.$('.url input').val(vcard.url);\n\n        this.$('.description textarea').val(vcard.description);\n\n        this.$('.phone-work input').val(vcard.phone.work);\n        this.$('.phone-home input').val(vcard.phone.home);\n        this.$('.phone-mobile input').val(vcard.phone.mobile);\n\n        this.$('.email-work input').val(vcard.email.work);\n        this.$('.email-home input').val(vcard.email.home);\n\n        let addr = vcard.address.work || {},\n            $info = this.$('.address-work-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n\n        addr = vcard.address.home || {};\n        $info = this.$('.address-home-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n    },\n\n    getData: function () {\n        let vcard = utils.vcard.getBlank(this.model.get('jid'));\n\n        vcard.nickname = this.$('.nickname input').val();\n        vcard.fullname = this.$('.fullname input').val();\n        vcard.first_name = this.$('.first-name input').val();\n        vcard.last_name = this.$('.last-name input').val();\n        vcard.middle_name = this.$('.middle-name input').val();\n\n        vcard.birthday = this.$('.birthday input').val();\n\n        vcard.role = this.$('.role input').val();\n        vcard.job_title = this.$('.job-title input').val();\n        vcard.org.name = this.$('.org-name input').val();\n        vcard.org.unit = this.$('.org-unit input').val();\n\n        vcard.url = this.$('.url input').val();\n\n        vcard.description = this.$('.description textarea').val();\n\n        vcard.phone.work = this.$('.phone-work input').val();\n        vcard.phone.home = this.$('.phone-home input').val();\n        vcard.phone.mobile = this.$('.phone-mobile input').val();\n\n        vcard.email.work = this.$('.email-work input').val();\n        vcard.email.home = this.$('.email-home input').val();\n\n        vcard.address.work = {};\n        let addr = vcard.address.work,\n            $info = this.$('.address-work-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n\n        vcard.address.home = {};\n        addr = vcard.address.home;\n        $info = this.$('.address-home-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n        return vcard;\n    },\n\n    updateSaveButton: function () {\n        this.$('.btn-vcard-save').text(this.data.get('saving') ? xabber.getString(\"saving\") : xabber.getString(\"vcard_edit__button_save\"));\n    },\n\n    save: function () {\n        if (this.data.get('saving')) {\n            return;\n        }\n        this.data.set('saving', true);\n        this.model.setVCard(this.getData(),\n            () => {\n                this.model.getVCard();\n                this.data.set('saving', false);\n                this.$('.btn-vcard-back').addClass('hidden');\n                this.$('.btn-vcard-save').addClass('hidden');\n            },\n            function () {\n                utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                this.data.set('saving', false);\n            }\n        );\n    },\n\n    keyUp: function () {\n        console.log(this);\n        console.log(this.$('.btn-vcard-save'));\n        this.$('.btn-vcard-back').removeClass('hidden');\n        this.$('.btn-vcard-save').removeClass('hidden');\n    },\n});\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.accounts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    uuid = env.uuid,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')},\n    pretty_datetime_date = (timestamp) => { return utils.pretty_datetime(timestamp, 'MMM DD, YYYY')};\n\n\nxabber.Account = Backbone.Model.extend({\n        idAttribute: 'jid',\n\n        defaults: () => {\n            return {\n                enabled: true,\n                auth_type: \"password\",\n                status: \"online\",\n                status_message: \"\",\n                priority: 67,\n                auto_login_xa: false,\n                account_unique_id: uuid().substring(0, 8),\n                groupchat_servers_list: []\n            }\n        },\n\n        initialize: function (_attrs, options) {\n            this.retraction_version = null;\n            options || (options = {});\n            if (_attrs.is_new && !options.auth_view) {\n                this.is_invalid = true;\n                this.on(\"destroy\", this.onDestroy, this);\n                return;\n            }\n            this.last_msg_timestamp = 0;\n            this.settings = xabber.account_settings_list.get(_attrs.jid);\n            if (!this.settings) {\n                this.settings = xabber.account_settings_list.create({\n                    jid: _attrs.jid,\n                    timestamp: utils.now(),\n                    auto_login_xa: this.get('auto_login_xa'),\n                    to_sync: xabber.api_account && xabber.api_account.get('sync_all')\n                });\n            }\n            let settings = _.clone(this.settings.attributes);\n            settings.color || (settings.color = this.collection.getDefaultColor());\n            settings.order || (settings.order = this.collection.getLastOrder() + 1);\n            this.settings.save(settings);\n            this.settings.on(\"delete_account\", this.deleteAccount, this);\n            let attrs = _.clone(_attrs);\n            attrs.name || (attrs.name = attrs.jid);\n            attrs.image || (attrs.image = Images.getDefaultAvatar(attrs.name));\n            this.cached_image = Images.getCachedImage(attrs.image);\n            attrs.vcard = utils.vcard.getBlank(attrs.jid);\n            attrs.photo_hash = '';\n            this.save(attrs);\n            this.auth_view = options.auth_view || null;\n            this.session = new Backbone.Model({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"connection__error__text_disconnected\")\n            });\n            this._waiting_code = false;\n            this.code_requests = [];\n            this.gallery_code_requests = [];\n            this.xabber_auth = {};\n            this.session.on(\"change:connected\", this.onChangedConnected, this);\n            this.CONNECTION_URL = _attrs.websocket_connection_url || constants.CONNECTION_URL;\n            this.conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL, {'x-token': true});\n            this.connection = this.conn_manager.connection;\n            this.get('x_token') && (this.connection.x_token = this.get('x_token'));\n            if (this.connection.x_token && this.connection.x_token.counter && !this.get('hotp_counter'))\n                this.save({\n                    hotp_counter: this.connection.x_token.counter,\n                });\n            this.get('hotp_counter') && (this.connection.counter = this.get('hotp_counter'));\n            this.on(\"destroy\", this.onDestroy, this);\n            this._added_pres_handlers = [];\n            this._pending_stanzas = [];\n            this._pending_messages = [];\n            this.dfd_presence = new $.Deferred();\n            this.resources = new xabber.AccountResources(null, {account: this});\n            this.password_view = new xabber.ChangePasswordView({model: this});\n            this.vcard_edit = new xabber.VCardEditView({model: this});\n            this.updateColorScheme();\n            this.settings.on(\"change:color\", this.updateColorScheme, this);\n            this.on(\"change:photo_hash\", this.getVCard, this);\n            _.each(this._init_plugins, (plugin) => {\n                plugin.call(this);\n            });\n            this.connection.xmlInput = function (xml) {\n                xabber.info('input main connection');\n                xabber.info(xml);\n            };\n            this.connection.xmlOutput = function (xml) {\n                xabber.info('output main connection');\n                xabber.info(xml);\n            };\n            this.once(\"start\", this.start, this);\n            if (xabber.api_account)\n                xabber.api_account.on(\"settings_result\", function (result) {\n                    if (result && this.settings.get('token')) {\n                        this.save({auth_type: 'token'});\n                    }\n                    this.trigger('start');\n                }, this);\n            else\n                xabber.on(\"bind_xmpp_accounts\", () => {\n                    if (this.settings.get('token'))\n                        this.save({auth_type: 'token'});\n                    this.trigger('start');\n                }, this);\n        },\n\n        start: function () {\n            this.get('enabled') && this.isOnline() && this.connect();\n        },\n\n        _init_plugins: [],\n\n        getPassword: function () {\n            try {\n                return utils.atou(this.get('password'));\n            } catch (e) {\n                return '';\n            }\n        },\n\n        isConnected: function () {\n            return this.session && this.session.get('connected');\n        },\n\n        isReconnecting: function () {\n            return this.session && this.session.get('reconnecting');\n        },\n\n        isOnline: function () {\n            return this.get('status') !== 'offline';\n        },\n\n        sendMsg: function (stanza, callback) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.session.get('ready_to_send') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            callback && callback();\n            return res;\n        },\n\n        sendMsgPending: function (stanza) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            return res;\n        },\n\n        sendMsgFast: function (stanza, callback) {\n            return this.sendMsg(stanza, callback);\n        },\n\n        getConnectionForIQ: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                return this.fast_connection;\n            } else\n                return this.connection;\n        },\n\n        sendIQFast: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                this.fast_connection.sendIQ.apply(this.fast_connection, arguments);\n                return res;\n            } else\n                return this.sendIQ.apply(this, arguments);\n        },\n\n        sendFast: function (stanza, callback, errback) {\n            if ($(stanza.nodeTree).first().is('message')) {\n                this.sendMsgFast(stanza, callback);\n            } else {\n                this.sendIQFast(stanza, callback, errback);\n            }\n        },\n\n        pubAvatar: function (image, callback, errback) {\n            if (!image) {\n                this.removeAvatar(callback, errback);\n                return;\n            }\n            let dfd = new $.Deferred();\n\n            dfd.done((data, http_avatar) => {\n                if (http_avatar) {\n                    let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                    data.thumbnails && data.thumbnails.forEach((thumbnail) => {\n                        iq_pub_metadata.c('thumbnail', {\n                            xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                            url: thumbnail.url,\n                            width: thumbnail.width,\n                            height: thumbnail.height,\n                        }).up()\n                    })\n                    this.sendIQFast(iq_pub_metadata, () => {\n                            callback && callback(avatar_hash);\n                        },\n                        function (data_error) {\n                            errback && errback(data_error);\n                        });\n                }\n                else {\n                    let avatar_hash = image.hash || sha1(image.base64),\n                        iq_pub_data = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                            .c('item', {id: avatar_hash})\n                            .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                    this.sendIQFast(iq_pub_data, () => {\n                            this.sendIQFast(iq_pub_metadata, () => {\n                                    callback && callback(avatar_hash);\n                                },\n                                function (data_error) {\n                                    errback && errback(data_error);\n                                });\n                        },\n                        (data_error) => {\n                            errback && errback(data_error);\n                        });\n                }\n            });\n            if (image.uploaded){\n                dfd.resolve(image, true)\n            }\n            else if (this.get('gallery_token') && this.get('gallery_url') && !image.generated && !image.uploaded){\n                let file = image.name ? image : image.file;\n                this.uploadAvatar(file, (res) => {\n                    if (res.thumbnails && res.thumbnails.length || res.file){\n                        res.type = file.type;\n                        dfd.resolve(res, true)\n                    } else\n                        dfd.resolve(image.base64)\n                }, (res) => {\n                    dfd.resolve(image.base64)\n                });\n            } else\n                dfd.resolve(image.base64)\n        },\n\n        removeAvatar: function (callback, errback) {\n            let iq_pub_metadata = $iq({type: 'set'})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('item')\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA});\n            this.sendIQFast(iq_pub_metadata, () => {\n                    callback && callback();\n                },\n                function () {\n                    errback && errback();\n                });\n        },\n\n        getAvatar: function (avatar, callback, errback) {\n            let iq_request_avatar = $iq({type: 'get', to: this.get('jid')})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('items', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                .c('item', {id: avatar});\n            this.sendIQFast(iq_request_avatar, (iq) => {\n                let pubsub_avatar = $(iq).find('data').text();\n                if (pubsub_avatar == \"\")\n                    errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n                else\n                    callback && callback(pubsub_avatar);\n            });\n        },\n\n        sendIQ: function () {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                let elem = arguments[0];\n                if (typeof(elem.tree) === \"function\" && elem.tree().getAttribute('type') == 'get') {\n                    let lang = xabber.settings.language;\n                    (lang == 'default') && (lang = xabber.get('default_language'));\n                    elem.tree().setAttribute('xml:lang', lang);\n                }\n                this.connection.sendIQ.apply(this.connection, arguments);\n            } else {\n                if (!(arguments[0] && $(arguments[0].nodeTree).find('query[xmlns=\"' + Strophe.NS.MAM + '\"]').length)) {\n                    this._pending_stanzas.push({stanza: arguments, is_iq: true});\n                }\n            }\n            return res;\n        },\n\n        parseDataForm: function ($dataform, options) {\n            options = options || {};\n            let type = $dataform.attr('type'),\n                title = $dataform.children('title').text(),\n                instructions = $dataform.children('instructions').text(),\n                fields = [],\n                data_form = {};\n            $dataform.children('field').each((idx, field) => {\n                let $field = $(field),\n                    attrs = {},\n                    field_var = $field.attr('var'),\n                    field_type = $field.attr('type'),\n                    field_label = $field.attr('label'),\n                    field_value = [], field_options = [];\n                $field.children('value').each((i, value) => {\n                    field_value.push($(value).text());\n                });\n                $field.children('option').each((i, option) => {\n                    let $option = $(option),\n                        val = $option.children('value').text(),\n                        lbl = $option.attr('label');\n                    field_options.push({value: val, label: lbl});\n                });\n                field_var && (attrs.var = field_var);\n                field_type && (attrs.type = field_type);\n                field_label && (attrs.label = field_label);\n                field_value.length && (attrs.values = field_value);\n                field_options.length && (attrs.options = field_options);\n                fields.push(attrs);\n            });\n            type && (data_form.type = type);\n            title && (data_form.title = title);\n            instructions && (data_form.instructions = instructions);\n            fields.length && (data_form.fields = fields);\n            return data_form;\n        },\n\n        addDataFormToStanza: function ($stanza, data_form) {\n            $stanza.c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'});\n            data_form.title && $stanza.c('title').t(data_form.title).up();\n            data_form.instructions && $stanza.c('instructions').t(data_form.instructions).up();\n            data_form.fields.forEach((field) => {\n                let field_attrs = _.clone(field);\n                delete field_attrs.values;\n                delete field_attrs.options;\n                $stanza.c('field', field_attrs);\n                field.values && field.values.forEach((value) => {\n                    $stanza.c('value').t(value).up();\n                });\n                $stanza.up();\n            });\n            return $stanza;\n        },\n\n        sendPres: function (stanza) {\n            if (this.connection.authenticated && this.session.get('connected')) {\n                this.connection.send(stanza);\n            } else {\n                this._pending_stanzas.push({stanza: stanza});\n            }\n            return this.connection.authenticated;\n        },\n\n        verifyXabberAccount: function (code, callback) {\n            let request = {\n                type: 'POST',\n                url: constants.API_SERVICE_URL + '/accounts/xmpp_auth/',\n                contentType: \"application/json\",\n                dataType: 'json',\n                data: JSON.stringify({ code: code, jid: this.connection.jid}),\n                success: function (data, textStatus, jqXHR) {\n                    callback && callback(data.token);\n                }\n            };\n            $.ajax(request);\n        },\n\n        createFastConnection: function () {\n            let jid = this.get('jid'),\n                auth_type = this.conn_manager.auth_type,\n                password;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            if (!this.fast_conn_manager) {\n                this.fast_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                this.fast_connection = this.fast_conn_manager.connection;\n                this.fast_connection.account = this;\n                this.fast_connection.xmlInput = function (xml) {\n                    xabber.info('input fast connection');\n                    xabber.info(xml);\n                };\n                this.fast_connection.xmlOutput = function (xml) {\n                    xabber.info('output fast connection');\n                    xabber.info(xml);\n                };\n            } else{\n                this.fast_connection.disconnect();\n                return this.createFastConnection();\n            }\n            if (auth_type === 'x-token' && this.fast_connection) {\n                this.fast_connection.x_token = this.get('x_token');\n                this.fast_connection.counter = this.get('hotp_counter');\n                this.fast_connection.x_token_auth = true;\n            }\n            this.fast_conn_manager.connect(auth_type, jid, password, this.onFastConnected.bind(this));\n        },\n\n        connect: function (options) {\n            options = options || {};\n            let jid = this.get('jid'),\n                auth_type = this.get('auth_type'),\n                password;\n            jid += '/xabber-web-' + xabber.get('client_id');\n            this.connection.x_token = this.get('x_token');\n            this.connection.counter = this.get('hotp_counter');\n            this.connection.account = this;\n            if (this.connection.x_token && !this.connection.counter)\n                this.connection.counter = 0;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                reconnecting: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"application_state_connecting\"),\n                auth_failed: false\n            });\n            this.restoreStatus();\n            this.conn_manager.connect(auth_type, jid, password, this.connectionCallback.bind(this));\n        },\n\n        reconnect: function (is_fast) {\n            let conn_retries = this.session.get('conn_retries'),\n                timeout = conn_retries < 3 ? constants.RECONNECTION_TIMEOUTS[conn_retries] : 20000;\n            is_fast && (timeout = 1500);\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                reconnecting: true,\n                conn_retries: ++conn_retries,\n                conn_feedback:  xabber.getString(\"application_state_reconnect_after_some_seconds\", [timeout/1000]),\n                auth_failed: false\n            });\n            if (this.get('x_token'))\n                this.connection.x_token = this.get('x_token');\n            this.connection.account = this;\n            setTimeout(() => {\n                this.connFeedback(xabber.getString(\"application_state_connecting\"));\n                this.restoreStatus();\n                this.connection.reset();\n                this.conn_manager.reconnect(this.reconnectionCallback.bind(this));\n            }, timeout);\n        },\n\n        connectionCallback: function (status, condition, elem) {\n            if (this.session.get('reconnecting')) {\n                xabber.info('ignore connection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.auth_view && this.loginCallback(status, condition);\n            this.session.set({conn_status: status, conn_condition: condition});\n            if ((status === Strophe.Status.ERROR) && (condition === 'conflict') && !this.session.get('delete')) {\n                this.onConnectionConflict();\n            }\n            if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                    this.conn_manager.auth_type = 'x-token';\n                }\n\n                if (this.get('registration_nickname')){\n                    let vcard = utils.vcard.getBlank(this.get('jid'));\n                    vcard.nickname = this.get('registration_nickname');\n                    this.setVCard(vcard,\n                        () => {\n                            this.getVCard();\n                            this.set('registration_nickname', null)\n                        },\n                        function () {\n                            utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                            this.set('registration_nickname', null)\n                        }\n                    );\n                }\n                this.createFastConnection();\n                this.session.set({connected: true, reconnected: false});\n            } else if (status === Strophe.Status.AUTHFAIL) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)){\n                    if (this.session.get('conn_retries') <= 3 && $(elem).find('credentials-expired').length === 0)\n                        this.reconnect(true);\n                    else\n                        this.onTokenRevoked();\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                });\n            }\n        },\n\n        connectXabberAccount: function () {\n            let iq_private_storage = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.PRIVATE_STORAGE}).c('storage', {xmlns:'xabber:options'});\n            this.sendIQFast(iq_private_storage, (iq) => {\n                if (($(iq).find('option').attr('type') == 'bind') && ($(iq).find('option').text() == 1)) {\n                    this.authXabberAccount();\n                }\n            });\n        },\n\n        authXabberAccount: function (callback) {\n            this.requestPassword((data) => {\n                this.xabber_auth = { api_jid: data.api_jid, request_id: data.request_id };\n                if (this.code_requests.length > 0) {\n                    let verifying_code = this.code_requests.find(verifying_mess => (verifying_mess.jid === this.xabber_auth.api_jid && verifying_mess.id === this.xabber_auth.request_id));\n                    if (verifying_code) {\n                        let idx_verifying_code = this.code_requests.indexOf(verifying_code);\n                        (idx_verifying_code > -1) && this.code_requests.splice(idx_verifying_code, 1);\n                        this.verifyXabberAccount(verifying_code.code, (data) => {\n                            this._waiting_code = false;\n                            let iq_send_auth_mark = $iq({type: 'set'})\n                                .c('query', {xmlns: Strophe.NS.PRIVATE_STORAGE})\n                                .c('storage', {xmlns:'xabber:options'})\n                                .c('option', {type: 'bind'}).t(1);\n                            if (xabber.api_account) {\n                                xabber.api_account.save('token', data);\n                                xabber.api_account.login_by_token();\n                            }\n                            this.sendIQFast(iq_send_auth_mark);\n                            callback && callback();\n                        });\n                    }\n                    if (this.code_requests.length) {\n                        let msg_attrs = {\n                            from_jid: this.code_requests[0].jid,\n                            message: xabber.getString(\"xmpp_confirm__text_message__verification_code_is\", [Number(this.code_requests[0].code)]),\n                            is_archived: false\n                        };\n                        this.createMessageFromIQ(msg_attrs);\n                    }\n                }\n            });\n        },\n\n        requestPassword: function(callback) {\n            let request = {\n                type: 'POST',\n                url: constants.API_SERVICE_URL + '/accounts/xmpp_code_request/',\n                contentType: \"application/json\",\n                dataType: 'json',\n                data: JSON.stringify({ jid: this.connection.jid, type: 'iq'}),\n                success: function (data, textStatus, jqXHR) {\n                    callback && callback(data);\n                }\n            };\n            this._waiting_code = true;\n            $.ajax(request);\n        },\n\n        reconnectionCallback: function (status, condition, elem) {\n            if (!this.session.get('reconnecting')) {\n                xabber.info('ignore reconnection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.session.set({conn_status: status, conn_condition: condition});\n            if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                }\n                this.createFastConnection();\n                this.connection.connect_callback = this.connectionCallback.bind(this);\n                this.session.set({connected: true, reconnected: true,\n                    reconnecting: false, conn_retries: 0});\n            } else if (status === Strophe.Status.AUTHFAIL) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)) {\n                    if ($(elem).find('credentials-expired').length > 0)\n                        this.onTokenRevoked();\n                    else if (this.session.get('conn_retries') > 2 )\n                        this.onAuthFailed();\n                    else\n                        this.reconnect(true);\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                let max_retries = xabber.settings.max_connection_retries;\n                if (max_retries === -1 || this.session.get('conn_retries') < max_retries) {\n                    this.reconnect();\n                } else {\n                    this.connFeedback(xabber.getString(\"connection__error__connection_lost\"));\n                }\n            }\n        },\n\n        registerCallback: function (status, condition, error_text) {\n            if (status === Strophe.Status.REGISTER) {\n                this.connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                this.connection.register.fields.password = this.getPassword();\n                if (xabber.url_params && xabber.url_params.rkey) {\n                    this.connection.register.fields.key = xabber.url_params.rkey;\n                }\n                this.connection.register.submit();\n            } else if (status === Strophe.Status.REGISTERED) {\n                let nickname = this.auth_view.$nickname_input.val()\n                this.auth_view.data.set('step',6);\n                if(nickname){\n                    this.set('registration_nickname', nickname)\n                }\n            } else if (status === Strophe.Status.CONFLICT) {\n                this.auth_view.errorRegistrationFeedback({jid: xabber.getString(\"label_xmpp_id\")});\n                this.auth_view.data.set('step', 3)\n            } else if (status === Strophe.Status.NOTACCEPTABLE) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_not_filled\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            } else if (status === Strophe.Status.REGIFAIL) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_failed\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            }\n        },\n\n        changePasswordCallback: function (status, condition) {\n            if (this.change_password_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.change_password_view.successFeedback();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.change_password_view.errorFeedback({password: xabber.getString(\"password_changed_fail\") + condition});\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.change_password_view.errorFeedback({old_password: xabber.getString(\"AUTHENTICATION_FAILED\")});\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.change_password_connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                    this.change_password_connection.register.fields.password = this.change_password_view.$password_input.val().trim();\n                    this.change_password_connection.register.submit();\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.change_password_connection_manager = undefined;\n                    this.change_password_connection = undefined;\n                }\n            }\n        },\n\n        loginCallback: function (status, condition) {\n            if (status === Strophe.Status.CONNECTING) {\n                if (this.auth_view.stepped_auth){\n                    this.auth_view.resetAuthStepper()\n                }\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.save('is_new', undefined);\n                if (this.auth_view.stepped_auth && !this.auth_view.data.get('registration'))\n                    this.auth_view.authStepperStart();\n                else{\n                    this.auth_view.endAuth();\n                }\n\n            } else if (_.contains(constants.BAD_CONN_STATUSES, status)) {\n                let stepper_auth_error = false;\n                if (status === Strophe.Status.ERROR) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.CONNFAIL) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    status = xabber.getString(\"AUTHENTICATION_FAILED\");\n                    stepper_auth_error = true;\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    status = xabber.getString(\"connection__error__text_disconnected\");\n                } else if (status === Strophe.Status.CONNTIMEOUT) {\n                    status = xabber.getString(\"connection__error__text_timeout_expired\");\n                }\n                condition = condition ? ': ' + condition : '';\n                if (this.auth_view.stepped_auth)\n                    this.auth_view.authStepperError(stepper_auth_error, {password: status + condition});\n                else\n                    this.auth_view.errorFeedback({password: status + condition});\n                this.get('is_new') && this.destroy();\n            }\n        },\n\n        onAuthFailed: function () {\n            if (!this.auth_view){\n                utils.dialogs.error(xabber.getString(\"connection__error__text_authentication_failed\", [this.get('jid')]));\n                this.password_view.show();\n            }\n            this.session.set({\n                auth_failed: true,\n                connected: false,\n                ready_to_send: false,\n                no_reconnect: true\n            });\n            this.save({old_device_token: this.get('x_token'), auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_authentication_failed_short\"));\n        },\n\n        onConnectionConflict: function () {\n            utils.dialogs.error(xabber.getString(\"connection__error__text_connection_conflict\", [this.get('jid')]));\n            this.session.set({\n                auth_failed: true,\n                no_reconnect: true\n            });\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_connection_conflict_short\"));\n        },\n\n        getAllXTokens: function (callback) {\n            let tokens_list = [],\n                iq = $iq({\n                    type: 'get',\n                    to: this.connection.domain\n                }).c('query', {xmlns: `${Strophe.NS.AUTH_DEVICES}#items`});\n            this.sendIQFast(iq, (tokens) => {\n                $(tokens).find('device').each((idx, token) => {\n                    let $token = $(token),\n                        client = $token.find('client').text(),\n                        device = $token.find('info').text(),\n                        description = $token.find('public-label').text(),\n                        omemo_id = $token.find('omemo-id').text(),\n                        token_uid = $token.attr('id'),\n                        expire = Number($token.find('expire').text())*1000,\n                        last_auth = Number($token.find('last-auth').text())*1000,\n                        ip_address = $token.find('ip').text();\n                    tokens_list.push({client: client, device: device, description: description, token_uid: token_uid, last_auth: last_auth, expire: expire, ip: ip_address, omemo_id: omemo_id});\n                });\n                this.x_tokens_list = tokens_list;\n                callback && callback();\n            });\n        },\n\n        onTokenRevoked: function () {\n            if (xabber.api_account && xabber.api_account.get('xmpp_binding') === this.get('jid')) {\n                xabber.trigger('quit_accounts');\n                return;\n            }\n            if (!this.auth_view) {\n                utils.dialogs.error(xabber.getString(\"connection__error__text_token_invalidated\", [this.get('jid')]));\n            }\n            this.session.set({\n                on_token_revoked: true,\n                auth_failed: true,\n                connected: false,\n                no_reconnect: true\n            });\n            this.save({auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_token_invalidated_short\"));\n            this.deleteAccount()\n        },\n\n        onChangedConnected: function () {\n            if (this.isConnected()) {\n                this.session.get('reconnected') ? this.onReconnected() : this.onConnected();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onConnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.jid = this.connection.jid;\n            this.resource = Strophe.getResourceFromJid(this.jid);\n            this.domain = Strophe.getDomainFromJid(this.jid);\n            this.trigger('activate', this);\n            this.session.get('no_reconnect') && this.session.set('no_reconnect', false);\n            this.afterConnected();\n            _.each(this._after_connected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        onFastConnected: function (status) {\n            if (status === Strophe.Status.CONNECTED) {\n                if (this.fast_connection.x_token) {\n                    this.save({\n                        x_token: this.fast_connection.x_token,\n                        hotp_counter: this.fast_connection.counter,\n                    });\n                    this.fast_conn_manager.auth_type = 'x-token';\n                    this.fast_connection.x_token_auth = true;\n                    if (this.connection && this.connection.pass)\n                        this.fast_connection.pass = this.connection.pass;\n                }\n                _.each(this._after_fast_connected_plugins, (plugin) => {\n                    plugin.call(this);\n                });\n            } else if (status === Strophe.Status.AUTHFAIL || status === Strophe.Status.DISCONNECTED) {\n                if (this._fast_interval_worker)\n                    this._fast_interval_worker.terminate();\n                this.fast_conn_manager = undefined;\n                this.fast_connection = undefined;\n                if (this.connection && !this.connection.disconnecting\n                    && this.connection.authenticated && this.connection.connected){\n                    this.getVCard();\n                    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n                        this.trigger('ready_to_get_roster');\n                }\n            }\n        },\n\n        onReconnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.afterConnected();\n            _.each(this._after_reconnected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        afterConnected: function () {\n            this.dfd_presence.done(() => {\n                this.sendPendingStanzas();\n                this.sendPendingMessages();\n                this.session.set({\n                    ready_to_send: true\n                })\n            });\n            this.registerPresenceHandler();\n            this.enableCarbons();\n        },\n\n        getAllMessageRetractions: function (callback) {\n            let query_options = {xmlns: Strophe.NS.REWRITE, version: this.retraction_version};\n            let retractions_query = $iq({type: 'get'})\n                .c('query', query_options);\n            this.sendIQ(retractions_query, callback);\n        },\n\n        sendPendingStanzas: function () {\n            console.log('pending stanzas');\n            console.log(this._pending_stanzas);\n            _.each(this._pending_stanzas, (item) => {\n                console.log(item);\n                if ((item.stanza instanceof Strophe.Builder) || item.is_msg) {\n                    this.connection.send(item.stanza);\n                    item.callback && item.callback();\n                } else if (item && item.stanza && item.is_iq){\n                    this.connection.sendIQ.apply(this.connection, item.stanza);\n                }\n            });\n            this._pending_stanzas = [];\n        },\n\n        sendPendingMessages: function () {\n            console.log('pending messages');\n            console.log(this._pending_messages);\n            this._pending_messages.sort((a,b) => (a.timestamp > b.timestamp) ? 1 : ((b.timestamp > a.timestamp) ? -1 : 0));\n            _.each(this._pending_messages, (item) => {\n                console.log(item)\n                let msg = this.messages.get(item.unique_id), msg_iq;\n                msg && (msg_iq = msg.get('xml'));\n                if (msg.collection && msg.collection.chat && msg.collection.chat.get('group_chat'))\n                    $(msg_iq).append(\"<retry to='\" + msg.collection.chat.get('jid') + \"' xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                else\n                    $(msg_iq).append(\"<retry xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                msg_iq && this.sendMsgPending(msg_iq);\n            });\n            this.trigger('send_pending_messages');\n        },\n\n        _after_connected_plugins: [],\n        _after_reconnected_plugins: [],\n        _after_fast_connected_plugins: [],\n\n        onDisconnected: function () {\n            this.disconnected_timestamp = this.last_stanza_timestamp;\n            if (this.session.get('delete')) {\n                this.destroy();\n                return;\n            }\n            let deactivate = this.session.get('deactivate');\n            if (deactivate) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnected\"));\n                this.session.set('deactivate', null);\n                if (deactivate === 'set_off') {\n                    this.trigger('deactivate', this);\n                }\n            } else {\n                if (this.session.get('no_reconnect')) {\n                    this.session.set('no_reconnect', false);\n                } else {\n                    this.fast_connection && this.fast_connection.connected && this.fast_connection.disconnect();\n                    this.reconnect();\n                }\n            }\n        },\n\n        connFeedback: function (message) {\n            this.session.set(\"conn_feedback\", message);\n        },\n\n        enableCarbons: function () {\n            let iq = $iq({type: 'set'}).c('enable', {xmlns: Strophe.NS.CARBONS});\n            this.sendIQFast(iq);\n        },\n\n        getVCard: function (callback) {\n            let jid = this.get('jid'),\n                is_callback = _.isFunction(callback);\n            if (this.connection && this.connection.connected) {\n                this.getConnectionForIQ().vcard.get(jid,\n                    (vcard) => {\n                        let attrs = {\n                            vcard: vcard,\n                            vcard_updated: moment.now()\n                        };\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                        if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                            if (vcard.photo.image) {\n                                attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                                attrs.image = vcard.photo.image;\n                            }\n                            else\n                                attrs.image = Images.getDefaultAvatar(attrs.name);\n                            this.cached_image = Images.getCachedImage(attrs.image);\n                        }\n                        this.save(attrs);\n                        is_callback && callback(vcard);\n                    },\n                    function () {\n                        is_callback && callback(null);\n                    }\n                );\n            }\n        },\n\n        setVCard: function (data, callback, errback) {\n            let vcard = _.extend(_.clone(this.get('vcard')), data);\n            this.connection.vcard.set(this.get('jid'), vcard, () => {\n                this.vcardPhotoUpdated(vcard.photo.image);\n                callback && callback();\n            }, errback);\n        },\n\n        getStatusMessage: function () {\n            return this.get('status_message') || xabber.getString([this.get('status')]);\n        },\n\n        setStatus: function (status, message) {\n            let attrs = { status_updated: moment.now() };\n            status !== null && (attrs.status = status);\n            message !== null && (attrs.status_message = message || '');\n            if (status === 'offline' && this.get('status') !== 'offline')\n                attrs.status_prev = this.get('status');\n            this.save(attrs);\n            if (!this.get('enabled'))\n                return;\n            if (status === 'offline') {\n                this.deactivate('set_offline');\n            } else if (!this.isConnected()) {\n                this.activate();\n            } else {\n                this.sendPresence();\n            }\n        },\n\n        restoreStatus: function () {\n            if (this.get('status') === 'offline') {\n                this.save({\n                    status_updated: moment.now(),\n                    status: this.get('status_prev') || 'online',\n                    status_prev: undefined\n                });\n            }\n        },\n\n        getAvatarHash: function (avatar) {\n            let from_avatar = avatar || this.get('vcard').photo.image;\n            if (from_avatar) {\n                let decoded_raw = atob(from_avatar),\n                    bin = Uint8Array.from(Array.prototype.map.call(decoded_raw,function(x) {\n                        return x.charCodeAt(0);\n                    }));\n                return sha1(bin);\n            }\n            else\n                return \"\";\n        },\n\n        vcardPhotoUpdated: function (photo) {\n            let stanza = $pres().c('x', {xmlns: Strophe.NS.VCARD_UPDATE}).c('photo').t(this.getAvatarHash(photo)).up().up();\n            return this.sendPres(stanza);\n        },\n\n        sendPresence: function (type, message) {\n            type = type || this.get('status');\n            let status_message = message || this.get('status_message'), stanza = $pres();\n            if (type === 'offline') {\n                stanza.attrs({'type': 'unavailable'});\n            } else {\n                if (type !== 'online') {\n                    stanza.c('show').t(type).up();\n                }\n                stanza.c('status').t(status_message).up();\n                stanza.c('priority').t(this.get('priority')).up();\n                if(this.get('x_token'))\n                    stanza.c('device', {xmlns: Strophe.NS.AUTH_DEVICES, id: this.get('x_token').token_uid}).up();\n            }\n            stanza.cnode(this.connection.caps.createCapsNode({\n                node: 'https://www.xabber.com/clients/xabber/web'\n            }).tree());\n            return this.sendPres(stanza);\n        },\n\n        showSettings: function (right, block_name) {\n            let has_settings_right = !_.isUndefined(this.settings_right);\n            if (!this.settings_left)\n                this.settings_left = new xabber.AccountSettingsLeftView({model: this});\n            if (!has_settings_right)\n                this.settings_right = new xabber.AccountSettingsRightView({model: this});\n            this.updateColorScheme();\n            xabber.body.setScreen('account_settings', {\n                account: this, right: right, block_name: block_name\n            });\n            this.trigger('open_settings');\n            if (!has_settings_right) {\n                this.trigger('render_settings');\n                this.settings_right.addChild('blocklist', xabber.BlockListView, {\n                    account: this,\n                    el: this.settings_right.$('.blocklist-info')[0]\n                });\n                this.settings_right.addChild('account_password_view', xabber.ChangeAccountPasswordView, {\n                    model: this,\n                    el: this.settings_right.$('.change-password-container')[0]\n                });\n            }\n        },\n\n        showSettingsModal: function () {\n            if (xabber.accounts.length === 1){\n                xabber.body.setScreen('settings-modal');\n                xabber.trigger('update_placeholder');\n                return;\n            }\n            let has_modal_settings = !_.isUndefined(this.settings_account_modal);\n            if (!has_modal_settings)\n                this.settings_account_modal = new xabber.AccountSettingsModalView({model: this});\n            this.updateColorScheme();\n            xabber.body.setScreen('account_settings_modal', {\n                account: this\n            });\n            this.trigger('open_settings');\n            if (!has_modal_settings) {\n                this.trigger('render_settings');\n                this.settings_account_modal.addChild('blocklist', xabber.BlockListView, {\n                    account: this,\n                    el: this.settings_account_modal.$('.blocklist-info')[0]\n                });\n                this.settings_account_modal.addChild('account_password_view', xabber.ChangeAccountPasswordView, {\n                    model: this,\n                    el: this.settings_account_modal.$('.change-password-container')[0]\n                });\n            }\n            this.settings_account_modal.updateHeight();\n        },\n\n        updateColorScheme: function () {\n            let color = this.settings.get('color');\n            this.settings_left && this.settings_left.$el.attr('data-color', color);\n            this.settings_account_modal && this.settings_account_modal.$el.attr('data-color', color);\n            if (this.settings_right) {\n                this.settings_right.$el.attr('data-color', color);\n            }\n            this.vcard_edit.$el.attr('data-color', color);\n        },\n\n        revokeXToken: function (token_uid, callback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke', {xmlns:Strophe.NS.AUTH_DEVICES});\n            for (let token_num = 0; token_num < token_uid.length; token_num++)\n                iq.c('device', {id: token_uid[token_num]}).up();\n            this.sendIQFast(iq, () => {\n                callback && callback();\n            });\n        },\n\n        revokeAllXTokens: function (callback, errback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke-all', {xmlns:Strophe.NS.AUTH_DEVICES});\n            this.sendIQFast(iq, (success) => {\n                    callback & callback(success);\n                },\n                function (error) {\n                    errback && errback(error);\n                });\n        },\n\n        deleteAccount: function (show_settings, dont_change_screen) {\n            this.show_settings_after_delete = show_settings;\n            this.dont_change_screen_after_delete = dont_change_screen;\n            !dont_change_screen && xabber.body.setScreen('all_chats', {right_contact: ''});\n            if (this.get('x_token'))\n                this.revokeXToken([this.get('x_token').token_uid]);\n            this.session.set('delete', true);\n            this.deactivate();\n            if (xabber.api_account && xabber.api_account.get('xmpp_binding') === this.get('jid'))\n                xabber.trigger('quit_accounts');\n        },\n\n        activate: function () {\n            if (!this.isConnected())\n                this.connect();\n        },\n\n        deactivate: function (type) {\n            type || (type = 'set_off');\n            this.session.set('deactivate', type);\n            if (this.isConnected()) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnecting\"));\n                this.sendPresence('offline');\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onDestroy: function () {\n            if (this.connection && !this.connection.register._registering)\n                this.connection.connect_callback = null;\n            if (this.omemo){\n                this.omemo.destroy();\n                this.omemo = undefined;\n            }\n            this.groups_settings\n            if (this.groups_settings){\n                this.groups_settings.clearStorage();\n            }\n            if (this.groupchat_settings){\n                this.groupchat_settings.destroy();\n                this.groupchat_settings = undefined;\n            }\n            if (this.chat_settings){\n                this.chat_settings.destroy();\n                this.chat_settings = undefined;\n            }\n            if (this.settings)\n                this.settings.destroy();\n            if (this.isConnected()) {\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            }\n            this.cached_sync_conversations && this.cached_sync_conversations.deleteDataBase();\n            this.cached_roster && this.cached_roster.deleteDataBase();\n            this.cached_server_features && this.cached_server_features.deleteDataBase();\n            this.trigger('remove_saved_chat');\n        },\n\n        registerIQHandler: function () {\n            this.connection.deleteHandler(this._stanza_handler);\n            this._stanza_handler = this.connection.addHandler((iq) => {\n                    this.onGetIQ(iq);\n                    return true;\n                }, null, 'iq', \"get\");\n        },\n\n\n        registerSyncedIQHandler: function () {\n            this.connection.deleteHandler(this._synced_stanza_handler);\n            this._synced_stanza_handler = this.connection.addHandler(\n                this.onSyncedIQ.bind(this),\n                Strophe.NS.SYNCHRONIZATION, 'iq', \"set\");\n        },\n\n        registerPresenceHandler: function () {\n            this.connection.deleteHandler(this._pres_handler);\n            this._pres_handler = this.connection.addHandler(\n                (presence) => {\n                    this.onPresence(presence);\n                    return true;\n                }, null, 'presence', null);\n        },\n\n        onSetIQResult: function (iq) {\n            let to = $(iq).attr('to');\n            if (this.fast_connection && this.fast_connection.jid === to\n                && !this.fast_connection.disconnecting && this.fast_connection.authenticated\n                && this.fast_connection.connected && this.get('status') !== 'offline'){\n                this.sendIQFast($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            } else if (this.connection && this.connection.jid === to && this.connection.authenticated\n                && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline') {\n                this.sendIQ($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            }\n        },\n\n        onSyncedIQ: function (iq) {\n            this.onSetIQResult(iq);\n            this.roster.syncConversations(iq);\n            return true;\n        },\n\n        onGetIQ: function (iq) {\n            let $incoming_iq = $(iq),\n                $confirm = $incoming_iq.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`),\n                $session_availability = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n                request_code,\n                from_jid = $incoming_iq.attr('from');\n            if ($confirm.length) {\n                request_code = $confirm.attr('id');\n                if (this.get('gallery_auth_request_code')) {\n                    this.onAuthCode(request_code)\n                }\n                else {\n                    this.gallery_code_requests.push({\n                        id: $incoming_iq.attr('id'),\n                        code: request_code\n                    });\n                }\n            }\n            if ($session_availability.length) {\n                let session_id = $session_availability.children('session').attr('id'), $session_availability_response;\n                if (session_id && xabber.current_voip_call && session_id === xabber.current_voip_call.get('session_id') && !xabber.current_voip_call.get('state')) {\n                    $session_availability_response = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')})\n                        .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n                        .c('session', {id: session_id});\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n                }\n                else {\n                    $session_availability_response = $iq({to: from_jid, type: 'error', id: $incoming_iq.attr('id')})\n                        .c('error', {xmlns: Strophe.NS.JINGLE_MSG});\n\n                }\n                this.sendIQFast($session_availability_response);\n            }\n        },\n\n        testGalleryTokenExpire: function(callback) {\n            let currentTime = new Date(),\n                tokenExpireTime = new Date(this.get('gallery_token_expires'));\n            if (this.get('gallery_auth')){\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (currentTime < tokenExpireTime){\n                callback && callback();\n            }\n            else if (this.server_features.get('media-gallery')){\n                this.initGalleryAuth(this.server_features.get('media-gallery'))\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (!this.server_features.get('media-gallery')){\n                this.set('gallery_url', undefined);\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                callback && callback();\n            }\n        },\n\n        testGalleryFileSlot: function(file, callback) {\n            if (this.get('gallery_token') && this.get('gallery_url')){\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: {size: file.size, name: file.name, hash: sha1(bytes)},\n                        success: (response) => {\n                            console.log(response);\n                            callback && callback(response);\n                        },\n                        error: (response) => {\n                            console.log(response);\n                            callback && callback(response.responseJSON);\n                        }\n                    });\n                }\n                reader.onerror = (e) => {\n                    console.log(reader.error);\n                    callback && callback(false)\n                };\n                reader.readAsDataURL(file);\n            }\n        },\n\n        initGalleryAuth: function(gallery_feature) {\n            this.set('gallery_url', gallery_feature.get('from'));\n            if (this.get('gallery_url') && !this.get('gallery_auth')) {\n                this.set('gallery_auth', true)\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_code_request/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.jid, type: \"iq\"}),\n                    success: (response) => {\n                        if (response.request_id){\n                            this.set('gallery_auth_request_code', response.request_id)\n                            if (this.gallery_code_requests.length){\n                                let verifying_code = this.gallery_code_requests.find(verifying_mess => (verifying_mess.id === this.get('gallery_auth_request_code')));\n                                if (verifying_code && verifying_code.code)\n                                    this.onAuthCode(verifying_code.code)\n                            }\n                        }\n                    },\n                    error: (response) => {\n                        this.handleCommonGalleryErrors(response)\n                        this.set('gallery_auth', false)\n                        this.gallery_code_requests = [];\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        onAuthCode: function (confirm_code) {\n            this.gallery_code_requests = [];\n            this.set('gallery_auth_request_code', undefined);\n            if (confirm_code)\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_auth/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.id, code: confirm_code}),\n                    success: (response) => {\n                        if (response.token)\n                            this.set('gallery_token', response.token);\n                        if (response.expires)\n                            this.set('gallery_token_expires', response.expires);\n                        this.trigger('gallery_token_authenticated')\n                        this.set('gallery_auth', false)\n                    },\n                    error: (response) => {\n                        this.set('gallery_auth', false)\n                        this.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        },\n\n        prepareFiles: function (files, callback) {\n            files.forEach((file) => {\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    this.testFile({size: file.size, name: file.name, hash: sha1(bytes)}, file, callback)\n                }\n                reader.readAsDataURL(file);\n            })\n        },\n\n        handleCommonGalleryErrors: function (response) {\n            if (response.status === 401){\n                if (this.server_features.get('media-gallery')){\n                    this.initGalleryAuth(this.server_features.get('media-gallery'))\n                } else {\n                    this.set('gallery_url', null);\n                    this.set('gallery_token', null);\n                }\n            }\n        },\n\n        getStorageStats: function (params, callback) {\n            this.testGalleryTokenExpire(() => {\n                params && (params = {});\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/stats/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        testFile: function (params, file, callback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            this.uploadFile(file , callback)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n\n            });\n        },\n\n        uploadFile: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    if (file.duration)\n                        formData.append('duration', file.duration);\n                    if (file.size)\n                        formData.append('duration', file.size);\n                    if (file.voice)\n                        formData.append('media_type', file.type + '+voice');\n                    else\n                        formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        uploadAvatar: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    if (!file)\n                        errback && errback('no file')\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/avatar/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        deleteFile: function (file_id, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url') && file_id)\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({id: file_id}),\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n            });\n        },\n\n        getOpenGraphData: function (url, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token'), \"Content-Type\": \"application/json\"},\n                        url: this.get('gallery_url') + 'v1/opengraph/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({url: url}),\n                        success: (response) => {\n                            response.site = $(response.ogp).closest('meta[property=\"og:site_name\"]').attr('content')\n                            response.type = $(response.ogp).closest('meta[property=\"og:type\"]').attr('content')\n                            response.url = $(response.ogp).closest('meta[property=\"og:url\"]').attr('content')\n                            response.description = $(response.ogp).closest('meta[property=\"og:description\"]').attr('content')\n                            response.title = $(response.ogp).closest('meta[property=\"og:title\"]').attr('content')\n                            response.image = $(response.ogp).closest('meta[property=\"og:image\"]').attr('content')\n                            response.image_height = $(response.ogp).closest('meta[property=\"og:image:height\"]').attr('content')\n                            response.image_width = $(response.ogp).closest('meta[property=\"og:image:width\"]').attr('content')\n                            response.video_url = $(response.ogp).closest('meta[property=\"og:video:url\"]').attr('content')\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            errback && errback(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        createMessageFromIQ: function (attrs) {\n            let contact = this.contacts.mergeContact(attrs.from_jid),\n                chat = this.chats.getChat(contact);\n            chat.messages.create(attrs);\n        },\n\n        onPresence: function (presence) {\n            let $presence = $(presence),\n                type = presence.getAttribute('type');\n            if (type === 'error') { return; }\n            let jid = presence.getAttribute('from'),\n                bare_jid = Strophe.getBareJidFromJid(jid);\n            if (bare_jid !== this.get('jid')) {\n                _.each(this._added_pres_handlers, function (handler) {\n                    handler(presence, bare_jid);\n                });\n                return;\n            };\n            let resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                status_message = $presence.find('status').text();\n            _.isNaN(priority) && (priority = 0);\n            let $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCAD_UPDATE}\"]`);\n            if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR)\n                this.save('photo_hash', $vcard_update.find('photo').text());\n            if (resource) {\n                let resource_obj = this.resources.get(resource);\n                if (type === 'unavailable') {\n                    if (resource_obj) { resource_obj.destroy(); }\n                } else {\n                    let attrs = {\n                        resource: resource,\n                        priority: priority,\n                        status: status,\n                        status_message: status_message\n                    };\n                    let $device = $presence.find(`device[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n                    if ($device && this.x_tokens_list && $device.attr('id')) {\n                        attrs.token_uid = $device.attr('id')\n                    }\n                    if (!resource_obj)\n                        resource_obj = this.resources.create(attrs);\n                    else\n                        resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n    {\n        addInitPlugin: function (func) {\n            this.prototype._init_plugins.push(func);\n        },\n\n        addConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_connected_plugins.push(func);\n            reconn && this.prototype._after_reconnected_plugins.push(func);\n        },\n\n        addFastConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_fast_connected_plugins.push(func);\n        }\n    });\n\nxabber.Accounts = Backbone.CollectionWithStorage.extend({\n    model: xabber.Account,\n    comparator: function (acc1, acc2) {\n        return acc1.settings.get('order') < acc2.settings.get('order') ? -1 : 1;\n    },\n\n    _initialize: function (models, options) {\n        this.settings_list = xabber.account_settings_list;\n        this.getEnabledList();\n        this.getConnectedList();\n        this.on(\"add\", this.onAdd, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.on(\"change:enabled\", this.getEnabledList, this);\n        this.on(\"update_order\", this.onUpdatedOrder, this);\n        this.on(\"add destroy activate deactivate\", this.onListChanged, this);\n        this.on(\"destroy deactivate\", this.onAccountDisconnected, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        xabber.on(\"quit_accounts\", this.onQuitAccounts, this);\n        this.settings_list.on(\"add_settings\", this.onSettingsAdded, this);\n        xabber.api_account && xabber.api_account.on(\"settings_result\", function (result) {\n            result && this.trigger('update_order');\n        }, this);\n    },\n\n    onQuit: function () {\n        xabber.api_account && xabber.api_account.revoke_token();\n        _.each(_.clone(this.models), function (account) {\n            account.deleteAccount();\n            account.password_view.closeModal();\n            utils.modals.clear_queue();\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    onQuitAccounts: function () {\n        xabber.api_account && xabber.api_account.revoke_token();\n        _.each(_.clone(this.models), function (account) {\n            if (account.settings.get('to_sync')) {\n                account.deleteAccount();\n                account.password_view.closeModal();\n                utils.modals.clear_queue();\n            }\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    getEnabledList: function () {\n        this.enabled = this.filter(account => account.get('enabled'));\n    },\n\n    getConnectedList: function () {\n        this.connected = this.filter(account => account.isConnected());\n    },\n\n    onListChanged: function () {\n        this.getEnabledList();\n        this.getConnectedList();\n        this.trigger('list_changed', this);\n    },\n\n    onAdd: function (account) {\n        if (account.is_invalid)\n            account.destroy();\n    },\n\n    onDestroy: function (account) {\n        if (!account.get('is_new')) {\n            let no_accounts = !(this.length || xabber.api_account && xabber.api_account.get('connected'));\n            if (no_accounts) {\n                xabber.body.setScreen('login');\n            } else if (account.show_settings_after_delete) {\n                xabber.body.setScreen('settings');\n            } else if (account.dont_change_screen_after_delete) {\n                return;\n            } else {\n                xabber.body.setScreen('all-chats');\n                xabber.chats_view.showAllChats();\n            }\n        }\n    },\n\n    onAccountDisconnected: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n        xabber.recountAllMessageCounter();\n    },\n\n    onSettingsAdded: function (settings) {\n        let jid = settings.get('jid');\n        if (!this.get(jid))\n            this.create({jid: jid});\n    },\n\n    onUpdatedOrder: function () {\n        this.sort();\n        this.getEnabledList();\n        this.getConnectedList();\n    },\n\n    getLastOrder: function () {\n        return this.length ? this.last().settings.get('order') : 0;\n    },\n\n    getDefaultColor: function () {\n        let used_colors = {}, colors = constants.MATERIAL_COLORS;\n        this.each(function (account) {\n            used_colors[account.settings.get('color')] = true;\n        });\n        for (let idx = 0; idx < colors.length; idx++) {\n            if (!used_colors[colors[idx]])\n                return colors[idx];\n        }\n        return 'red';\n    },\n\n    moveBefore: function (acc1, acc2) {\n        let index2 = this.indexOf(acc2),\n            prev_order = index2 > 0 ? this.at(index2-1).settings.get('order') : 0;\n        acc1.settings.save('order', (acc2.settings.get('order') + prev_order)/2);\n        this._updateOrder();\n    },\n\n    moveToBottom: function (acc) {\n        acc.settings.save('order', this.getLastOrder() + 1);\n        this._updateOrder();\n    },\n\n    _updateOrder: function () {\n        this.sort();\n        this.each(function (acc, index) {\n            acc.settings.save({order: index + 1});\n        });\n        this.trigger('update_order');\n        if (xabber.api_account && xabber.api_account.get('connected')) {\n            this.settings_list.order_timestamp.save('timestamp', utils.now());\n            xabber.api_account.synchronize_order_settings();\n        }\n    }\n});\n\nxabber.AccountToolbarItemView = xabber.BasicView.extend({\n    className: 'toolbar-item account-item',\n    template: templates.toolbar_item,\n    avatar_size: constants.AVATAR_SIZES.TOOLBAR_ACCOUNT_ITEM,\n\n    events: {\n        'click .account-item-avatar-wrap': 'filterChats',\n        'click .show-account-settings': 'showSettings'\n    },\n\n    _initialize: function () {\n        this.updateConnected();\n        this.updateAuthState();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.$el.attr('data-jid', this.model.get('jid'));\n        this.model.session.on(\"change:auth_failed\", this.updateAuthState, this);\n        this.model.session.on(\"change:connected\", this.updateConnected, this);\n        this.model.on(\"change:status\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"open_settings\", this.setActive, this);\n    },\n\n    updateConnected: function () {\n        this.$el.switchClass('disconnected', !this.model.isConnected());\n        xabber.updateFaviconConnected();\n    },\n\n    updateAuthState: function () {\n        let auth_failed = this.model.session.get('auth_failed');\n        xabber.updateFaviconConnected();\n        this.$('.status').hideIf(auth_failed);\n        this.$('.auth-failed').showIf(auth_failed);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    filterChats: function (ev) {\n        ev.stopPropagation();\n        let is_single = $(ev.target).closest('.single-item').length;\n        if (is_single){\n            this.model.showSettingsModal();\n        }\n        xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        if (xabber.toolbar_view.data.get('account_filtering') != this.model.get('jid'))\n            this.$el.addClass('active');\n        xabber.toolbar_view.showChatsByAccount(this.model);\n    },\n\n    showSettings: function () {\n        this.model.showSettingsModal();\n    },\n});\n\nxabber.ToolbarAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.model.on(\"add change:enabled\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n    },\n\n    updateList: function (account) {\n        this.$el.find('.single-item').removeClass('single-item');\n        _.each(this.children, function (view) { view.detach(); });\n        _.each(this.model.enabled, (account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            !view && (view = this.addChild(jid, xabber.AccountToolbarItemView, {model: account}));\n            this.$el.append(view.$el);\n            if (this.model.enabled.length === 1)\n                this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        });\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid');\n        if (account.get('enabled')) {\n            let view = this.child(jid);\n            if (view) {\n                view.$el.detach();\n            } else {\n                view = this.addChild(jid, xabber.AccountToolbarItemView,\n                    {model: account});\n            }\n            let index = this.model.enabled.indexOf(account);\n            if (index === 0) {\n                this.$el.prepend(view.$el);\n            } else {\n                this.$('.account-item').eq(index - 1).after(view.$el);\n            }\n        } else {\n            account.last_msg_timestamp = 0;\n            this.removeChild(jid);\n        }\n        this.$el.find('.single-item').removeClass('single-item');\n        if (this.model.enabled.length === 1)\n            this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.parent.updateScrollBar();\n    }\n});\n\nxabber.Resource = Backbone.Model.extend({\n    idAttribute: 'resource',\n    defaults: {\n        priority: 0\n    }\n});\n\nxabber.ResourceView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.ResourceRightView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource_right,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.Resources = Backbone.Collection.extend({\n    model: xabber.Resource,\n    comparator: function (r1, r2) {\n        let p1 = r1.get('priority'), p2 = r2.get('priority');\n        return p1 > p2 ? -1 : (p1 < p2 ? 1 : 0);\n    },\n\n    requestInfo: function (resource, callback) {\n        let jid = this.jid + '/' + resource.get('resource');\n        if (this.connection && this.connection.connected) {\n            this.connection.disco.info(jid, null, (iq) => {\n                let $identity = $(iq).find('identity[category=client]');\n                if ($identity.length)\n                    resource.set('client', $identity.attr('name'));\n                this.attention_supported = this.isFeatureSupported(iq, Strophe.NS.ATTENTION);\n                callback && callback();\n            });\n        }\n    },\n\n    isFeatureSupported: function (stanza, ns) {\n        let $stanza = $(stanza), is_supported = false;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            if (namespace === ns)\n                is_supported = true;\n        });\n        return is_supported;\n    },\n});\n\nxabber.ResourcesView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.renderByInit();\n        this.model.on(\"add\", this.onResourceAdded, this);\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onPriorityChanged: function (resource) {\n        this.model.sort();\n        this.updatePosition(resource);\n    }\n});\n\nxabber.AccountResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.jid = options.account.get('jid');\n        this.connection = options.account.connection;\n    }\n});\n\nxabber.AccountResourcesView = xabber.ResourcesView.extend({\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.main-resource').after(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.AccountVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .btn-vcard-edit\": \"showEditView\",\n        \"click .details-icon\": \"onClickIcon\"\n    },\n\n    __initialize: function () {\n        this.updateButtons();\n        this.model.on(\"activate deactivate\", this.updateButtons, this);\n    },\n\n    updateButtons: function () {\n        let connected = this.model.isConnected();\n        this.$('.btn-vcard-edit').showIf(connected);\n        this.$('.btn-vcard-refresh').showIf(connected);\n    },\n\n    showEditView: function () {\n        this.model.showSettings('vcard_edit');\n    }\n});\n\nxabber.AccountVCardModalView = xabber.VCardView.extend({\n    template: env.templates.vcard.vcard_modal,\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .btn-vcard-edit\": \"showEditView\",\n        \"click .details-icon\": \"onClickIcon\"\n    },\n\n    __initialize: function () {\n        this.updateButtons();\n        this.model.on(\"activate deactivate\", this.updateButtons, this);\n    },\n\n    updateButtons: function () {\n        let connected = this.model.isConnected();\n        this.$('.btn-vcard-edit').showIf(connected);\n        this.$('.btn-vcard-refresh').showIf(connected);\n    },\n\n    showEditView: function ($el) {\n        this.vcard_edit_modal = new xabber.VCardEditModalView({model: this.model});\n        this.vcard_edit_modal.show({$el: $el});\n    }\n});\n\nxabber.AccountMediaGalleryView = xabber.BasicView.extend({\n    template: templates.media_gallery_account,\n    events: {\n        \"change input.gallery-upload\": \"onFileInputChanged\",\n        \"click .gallery-file:not(.gallery-avatar) .btn-delete\": \"deleteFile\",\n        \"click .gallery-file.gallery-avatar .btn-delete\": \"deleteAvatar\",\n        \"click .tabs .tab\": \"onTabClick\",\n        \"click .btn-gallery-sorting\": \"sortFiles\",\n        \"click .gallery-file\": \"onClickFile\",\n    },\n\n    _initialize: function () {\n        this.account = this.model;\n        this.$el.html(this.template());\n        this.parent.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.account.on(\"update_avatar_list\", this.onUpdateAvatars.bind(this));\n    },\n\n    render: function () {\n        this.updateStorage();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n    },\n\n    onScroll: function () {\n        if (this.$el.hasClass('hidden'))\n            return;\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && !this.loading_files && (this.current_page < this.total_pages)){\n            this.current_page++;\n            this.current_options.page = this.current_page;\n            this.getFiles(this.current_options)\n        }\n    },\n\n    updateStorage: function (after_deletion, after_avatar_update) {\n        this.account.getStorageStats(null,(response) => {\n            let used_storage = utils.pretty_size(response.total.used) || '0';\n            this.$('.btn-delete-files-dropdown').hideIf(!(response.total && response.total.used))\n            this.$('.gallery-manage-storage').hideIf(!(response.total && response.total.used))\n            this.$('.storage-usage').html(used_storage + xabber.getString(\"of\") + utils.pretty_size(response.quota))\n            if (!after_avatar_update){\n                this.$('.tabs .list-variant[data-value=\"image\"]').hideIf(!(response.images && response.images.used))\n                if (response.images && response.images.used)\n                    this.$('.tabs .list-variant[data-value=\"image\"]').addClass('tab')\n                else\n                    this.$('.tabs .list-variant[data-value=\"image\"]').removeClass('tab')\n            }\n            this.$('.storage-label-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images .storage-usage-amount').html(utils.pretty_size(response.images.used))\n            this.$('.tabs .list-variant[data-value=\"video\"]').hideIf(!(response.videos && response.videos.used))\n            if (response.videos && response.videos.used)\n                this.$('.tabs .list-variant[data-value=\"video\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"video\"]').removeClass('tab')\n            this.$('.storage-label-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos .storage-usage-amount').html(utils.pretty_size(response.videos.used))\n            this.$('.tabs .list-variant[data-value=\"voice\"]').hideIf(!(response.voices && response.voices.used))\n            if (response.voices && response.voices.used)\n                this.$('.tabs .list-variant[data-value=\"voice\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"voice\"]').removeClass('tab')\n            this.$('.storage-label-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices .storage-usage-amount').html(utils.pretty_size(response.voices.used))\n            this.$('.tabs .list-variant[data-value=\"files\"]').hideIf(!(response.files && response.files.used))\n            if (response.files && response.files.used)\n                this.$('.tabs .list-variant[data-value=\"files\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"files\"]').removeClass('tab')\n            this.$('.storage-label-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files .storage-usage-amount').html(utils.pretty_size(response.files.used))\n            if (response.images){\n                this.$('.storage-progress-images').css('width', ((response.images.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.videos){\n                this.$('.storage-progress-videos').css('width', ((response.videos.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.voices){\n                this.$('.storage-progress-voices').css('width', ((response.voices.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.files){\n                this.$('.storage-progress-files').css('width', ((response.files.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            this.$('.tabs .indicator').remove();\n            this.$('.tabs').tabs();\n            this.$('.indicator').addClass('ground-color-500');\n            if (after_deletion){\n                if (!this.$('.tabs .list-variant.tab').length) {\n                    return;\n                }\n                !this.$('.gallery-files').children('.gallery-file').length && this.$('.tabs .list-variant.tab a').first().click();\n            }\n            if (this.parent){\n                this.parent.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label')\n                    .text(xabber.getString(\"settings_account__storage_label\", [utils.pretty_size(response.total.used), utils.pretty_size(response.quota)]))\n            }\n            if (xabber.settings_modal_view.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label').length){\n                xabber.settings_modal_view.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label')\n                    .text(xabber.getString(\"settings_account__storage_label\", [utils.pretty_size(response.total.used), utils.pretty_size(response.quota)]))\n            }\n        });\n    },\n\n    filterType: function (file_type, sorting) {\n        this.$('.gallery-files').html('')\n        if (file_type === 'image' || file_type === 'video' || file_type === 'avatars') {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').addClass('grid')\n        } else if (file_type === 'voice') {\n            this.$('.gallery-files').addClass('voice')\n            this.$('.gallery-files').removeClass('grid')\n        } else {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').removeClass('grid')\n        }\n        this.$('.tabs .list-variant a').removeClass('active');\n        this.$('.tabs .list-variant[data-value=\"' + file_type + '\"] a').addClass('active');\n        let options = {type: file_type}\n        sorting && (options.order_by = sorting)\n        this.current_options = options\n        if (file_type === 'avatars')\n            this.getAvatars(options)\n        else\n            this.getFiles(options)\n    },\n\n    onTabClick: function (ev) {\n        let $target = $(ev.target).closest('.tab'),\n            file_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type);\n    },\n\n    onUpdateAvatars: function (ev) {\n        this.updateStorage(false, true);\n        if (this.$('.tab .active').closest('.tab').attr('data-value') === 'avatars'){\n            this.current_page = 1;\n            this.total_pages = 0;\n            this.$('.gallery-files').html('');\n            this.filterType('avatars');\n        }\n    },\n\n    sortFiles: function (ev) {\n        let $target = $(ev.target).closest('.btn-gallery-sorting'),\n            file_type = this.$('.tab .active').closest('.tab').attr('data-value'),\n            sort_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type, sort_type);\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    getFiles: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id'}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined;\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    getAvatars: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id', type: \"avatars\"}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    renderFiles: function (response) {\n        if (response.type != this.$('.tab .active').closest('.tab').attr('data-value'))\n            return;\n        if (!response.total_objects && response.type != 'avatars'){\n            if (response.type){\n                let tab = this.$('.tabs .list-variant[data-value=' + response.type + ']');\n                tab.removeClass('tab');\n                tab.addClass('hidden');\n                this.$('.tabs .indicator').remove();\n                this.$('.tabs').tabs();\n                this.$('.indicator').addClass('ground-color-500');\n            }\n        }\n        if (!response.items || !response.items.length){\n            !this.$('.gallery-files').children('.gallery-file').length && this.$('.tabs .list-variant.tab a').first().click();\n            return;\n        }\n        this.total_pages = response.total_pages;\n        this.$('.gallery-files .preloader-wrapper').remove()\n        if (response.items && response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                let $gallery_file = $(templates.media_gallery_account_file({file: item, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                (response.type === 'avatars') && $gallery_file.addClass('gallery-avatar');\n                $gallery_file.appendTo(this.$('.gallery-files'));\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n        }\n        else {\n            this.$('.gallery-files').html(xabber.getString(\"no_files\"))\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings)\n        if (this.parent && this.parent.updateHeight)\n            this.parent.updateHeight();\n    },\n\n    deleteFile: function (ev) {\n        let $target = $(ev.target).closest('.gallery-file'),\n            file_id = $target.attr('data-id');\n        this.account.deleteFile(file_id,(response) => {\n            this.updateStorage(true);\n            $target.detach();\n        }, (err) => {\n        })\n    },\n\n    deleteAvatar: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.gallery-file'),\n                file_id = $target.attr('data-id');\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && file_id)\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({id: file_id}),\n                    success: (response) => {\n                        this.updateStorage(true);\n                        $target.detach();\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    deleteFilesFiltered: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.property-variant'),\n                days = $target.attr('data-date'),\n                date = new Date();\n            days && date.setDate(date.getDate() - days)\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && date && date.toISOString().split('T') && date.toISOString().split('T')[0])\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({date_lte: date.toISOString().split('T')[0]}),\n                    success: (response) => {\n                        this.updateStorage(true);\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files) {\n            this.account.prepareFiles(files, this.openStoragePanel.bind(this));\n            $(target).val('')\n        }\n    },\n});\n\nxabber.AccountSettingsLeftView = xabber.BasicView.extend({\n    className: 'account-settings-left-wrap',\n    template: templates.settings_left,\n    ps_selector: '.settings-tabs-wrap',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_SETTINGS_LEFT,\n\n    events: {\n        \"change .main-info-wrap .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-back\": \"showSettings\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click .main-info-wrap .status\": \"openChangeStatus\",\n        \"click .settings-tabs-wrap .settings-tab\": \"jumpToBlock\",\n        \"click .settings-tab.delete-account\": \"deleteAccount\"\n    },\n\n    _initialize: function () {\n        this.status_field = new xabber.StatusMessageWidget({\n            el: this.$('.status-wrap')[0],\n            model: this.model\n        });\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateBlocks();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:gallery_token\", this.updateGallery, this);\n        this.model.on(\"activate deactivate\", this.updateBlocks, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function (options) {\n        !options.block_name && (options.block_name = 'connection')\n        this.$el.switchClass('vcard-edit', options.right == 'vcard_edit');\n        this.$('.settings-tab[data-block-name=\"tokens\"]').hideIf(this.model.get('auth_type') !== 'x-token');\n        this.$('.settings-tab').removeClass('active');\n        this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`).addClass('active');\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n\n        this.updateCSS();\n        return this;\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n        this.updateNameCSS();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info-wrap .status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBlocks: function () {\n        let connected = this.model.isConnected();\n        this.$('.main-info-wrap').switchClass('disconnected', !connected);\n        // this.$('.settings-tab[data-block-name=\"xmpp-resources\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"server-info\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"blocklist\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"groups-info\"]').showIf(connected);\n        this.updateGallery();\n        this.updateScrollBar();\n    },\n\n    updateGallery: function () {\n        let connected = this.model.isConnected();\n        this.$('.settings-tab[data-block-name=\"media-gallery\"]').showIf(connected && this.model.get('gallery_token'));\n    },\n\n    updateNameCSS: function () {\n        if (!this.isVisible())\n            return;\n        let $name = this.$('.name');\n        $name.removeAttr('style');\n        let wrap_width = this.$('.name-wrap').width(),\n            width = $name.width(),\n            font_size = 22;\n        while (width > wrap_width && font_size > 12) {\n            $name.css({'font-size': font_size});\n            width = $name.width();\n            font_size -= 2;\n        }\n        $name.css({'margin-left': (wrap_width - width) / 2});\n    },\n\n    chooseAvatar: function () {\n        if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.model});\n        } else\n            this.$('.main-info-wrap .circle-avatar input').click();\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings');\n        xabber.trigger('update_placeholder');\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.model});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.model});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE && !(this.model.get('gallery_token') && this.model.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        this.$('.circle-avatar').find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image, hash, size) => {\n            if (image) {\n                this.model.pubAvatar({base64: image, hash: hash, size: size, type: file.type, file: file}, () => {\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                        this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                    }, () => {\n                        this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                    });\n            } else\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n        });\n    },\n\n    updateCSS: function () {\n        this.updateNameCSS();\n    },\n\n    openChangeStatus: function () {\n        !xabber.change_status_view && (xabber.change_status_view = new xabber.ChangeStatusView());\n        xabber.change_status_view.open(this.model);\n    },\n\n    jumpToBlock: function (ev) {\n        let $tab = $(ev.target).closest('.settings-tab'),\n            block_name = $tab.data('block-name');\n        if (block_name === 'vcard_edit'){\n            this.model.showSettings(block_name, 'vcard');\n            this.$('.settings-tab').removeClass('active');\n            $tab.addClass('active');\n        }\n        else if (block_name === 'media-gallery'){\n            this.model.showSettings(null, block_name);\n            this.model.settings_right.gallery_view.$('.tabs .list-variant:not(.hidden)').first().click();\n        }\n        else\n            this.model.showSettings(null, block_name);\n    },\n\n    deleteAccount: function () {\n        let dialog_options = [];\n        if (xabber.api_account && xabber.api_account.get('connected')) {\n            dialog_options = [{name: 'delete_settings',\n                checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"dialog_delete_account__label_delete_synced_settings\")}];\n        }\n        utils.dialogs.ask(xabber.getString(\"settings_account__button_quit_account\"), xabber.getString(\"dialog_quit_account__confirm\"),\n            dialog_options, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (!res)\n                return;\n            if (res.delete_settings && xabber.api_account) {\n                if (xabber.api_account.get('xmpp_binding') === this.model.get('jid'))\n                    xabber.api_account._call_method('DELETE', '/accounts/current/client-settings/', {jid: this.model.get('jid')});\n                else\n                    xabber.api_account.delete_settings(this.model.get('jid'));\n            }\n            this.model.deleteAccount();\n        });\n    }\n});\n\nxabber.AccountSettingsModalView = xabber.BasicView.extend({\n    className: 'settings-panel-wrap',\n    template: templates.account_settings_modal,\n    ps_selector: '.settings-panel',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_SETTINGS_LEFT,\n\n    events: {\n        \"click .background-overlay\": \"closeSettings\",\n        \"change .main-info-wrap .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-back\": \"showSettings\",\n        \"click .btn-back-settings\": \"backToMenu\",\n        \"click .btn-back-subsettings\": \"backToSubMenu\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click .settings-tab[data-block-name='status']\": \"openChangeStatus\",\n        \"click .settings-tabs-wrap .settings-tab:not(.delete-account):not(.settings-non-tab)\": \"jumpToBlock\",\n        \"click .tokens-wrap .settings-tab.token-wrap\": \"jumpToBlock\",\n        \"click .settings-tab.delete-account\": \"deleteAccount\",\n\n        \"change .enabled-state input\": \"setEnabled\",\n        \"change .setting-send-chat-states input\": \"setTypingNotification\",\n        \"change .setting-use-omemo input\": \"setEnabledOmemo\",\n        \"click .btn-change-password\": \"showPasswordView\",\n        \"click .btn-reconnect\": \"reconnect\",\n        \"click\": \"hideResources\",\n        \"change .sync-account\": \"changeSyncSetting\",\n        \"click .btn-delete-settings\": \"deleteSettings\",\n        \"click .color-picker-button\": \"changeColor\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-revoke-token\": \"revokeXToken\",\n        \"click .devices-wrap .btn-revoke-all-tokens\": \"revokeAllXTokens\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .btn-block\": \"openBlockWindow\",\n        \"click .btn-unblock-selected\": \"unblockSelected\",\n        \"click .btn-deselect-blocked\": \"deselectBlocked\",\n        \"click .btn-delete-files\": \"deleteFilesFiltered\",\n        \"click .all-sessions .device-encryption.active\": \"openFingerprint\",\n        \"click .btn-purge-keys\": \"purgeKeys\"\n    },\n\n    _initialize: function (options) {\n        if (options.forced_ps_container){\n            this.ps_container = options.forced_ps_container;\n        }\n        this.status_field = new xabber.StatusMessageModalWidget({\n            el: this.$('.status-wrap')[0],\n            model: this.model\n        });\n        this.updateName();\n        this.updateAvatar();\n        this.updateBlocks();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:gallery_token\", this.updateGallery, this);\n        this.model.on(\"activate deactivate\", this.updateBlocks, this);\n        this.model.on(\"destroy\", this.remove, this);\n\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n\n        this.vcard_view = this.addChild('vcard', xabber.AccountVCardModalView,\n            {model: this.model,});\n        this.gallery_view = this.addChild('media-gallery', xabber.AccountMediaGalleryView,\n            {model: this.model, el: this.$('.media-gallery')[0]});\n        this.$('.account-name .value').text(this.model.get('jid'));\n        this.updateStatus();\n        this.updateView();\n        this.showConnectionStatus();\n        this.updateSynchronizationBlock();\n\n        this.model.resources.on(\"change\", this.updateXTokens, this);\n        this.model.resources.on(\"add\", this.updateXTokens, this);\n        this.model.resources.on(\"destroy\", this.updateXTokens, this);\n        this.model.groups.on(\"change\", this.updateGroupsLabel, this);\n        this.model.groups.on(\"add\", this.updateGroupsLabel, this);\n        this.model.groups.on(\"destroy\", this.updateGroupsLabel, this);\n        this.model.session.on(\"change:reconnecting\", this.updateReconnectButton, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.model.settings.on(\"change:to_sync\", this.updateSyncOption, this);\n        this.model.settings.on(\"change:deleted\", this.updateDelSettingsButton, this);\n        this.model.settings.on(\"change:to_sync change:synced\", this.updateSyncState, this);\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"update_omemo_devices\", this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateXTokens, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.settings.on(\"change:encrypted_chatstates\", this.updateEncryptedChatstates, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"activate deactivate\", this.updateView, this);\n        this.model.on(\"change:auth_type\", this.updateView, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function (options) {\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.updateCSS();\n\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateGroupsLabel();\n        this.updateView();\n        this.$('.main-resource .client').text(xabber.get('client_name'));\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.$('.btn-delete-files-variants').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: true,\n            belowOrigin: true,\n        });\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back-settings').removeClass('hidden');\n        this.$('.btn-back-subsettings').addClass('hidden');\n        this.updateHeight();\n        this.updateBlockedLabel();\n        return this;\n    },\n\n    updateHeight: function () {\n        let height;\n        if (!this.$('.left-column').hasClass('hidden'))\n            height = this.$('.left-column').height();\n        if (!this.$('.right-column').hasClass('hidden'))\n            height = this.$('.right-column').height();\n        this.ps_container.css('height', height + 'px');\n        this.updateScrollBar();\n    },\n\n    updateBlockedLabel: function () {\n        if (!(this.model.blocklist && this.model.blocklist.list))\n            return;\n\n        let blocked_count = Object.keys(this.model.blocklist.list).length,\n            label_text = blocked_count === 0 ? xabber.getString(\"blocked_contacts_empty\") : xabber.getQuantityString(\"blocked_contacts_number\", blocked_count);\n        this.$('.settings-tab[data-block-name=\"blocklist\"] .settings-block-label').text(label_text);\n    },\n\n    onScrollY: function () {\n        if (this.getScrollTop() === 0)\n            this.$('.settings-panel-head').removeClass('lined-head');\n        else\n            this.$('.settings-panel-head').addClass('lined-head');\n        if (this.getScrollTop() >= 180)\n            this.$('.settings-account-head').addClass('head-scrolled');\n        else\n            this.$('.settings-account-head').removeClass('head-scrolled');\n    },\n\n    jumpToBlock: function (ev) {\n        this.jumpToBlockHandler(ev);\n    },\n\n    jumpToBlockHandler: function (ev) {\n        if ($(ev.target).closest('.device-encryption').length || $(ev.target).closest('.btn-revoke-token').length)\n            return;\n\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.data('block-name')),\n            block_name = $tab.data('block-name');\n        if (block_name){\n            this.$('.media-gallery-button.btn-more').hideIf(block_name != 'media-gallery');\n            this.$('.device-more-button.btn-more').hideIf(block_name != 'encryption');\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        this.$('.left-column').addClass('hidden');\n        this.$('.right-column').removeClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (block_name === 'media-gallery'){\n            this.gallery_view.onTabClick({target: this.gallery_view.$('.tabs .list-variant:not(.hidden)').first()});\n            this.gallery_view.$('.tabs .indicator').remove();\n            this.gallery_view.$('.tabs').tabs();\n            this.gallery_view.$('.indicator').addClass('ground-color-500');\n        }\n        if (block_name === 'blocklist'){\n            this.$('.blocklist-tabs-wrap .tabs .indicator').remove();\n            this.$('.blocklist-tabs-wrap .tabs').tabs();\n            this.$('.blocklist-tabs-wrap .indicator').addClass('ground-color-500');\n        }\n        if (block_name === 'vcard-tab'){\n            this.vcard_view.showEditView(this.$('.vcard'));\n        }\n        if (block_name === 'device-information'){\n            $elem.attr('data-token-uid', $tab.attr('data-token-uid'));\n            this.updateDeviceInformation($tab.attr('data-token-uid'));\n        }\n        this.$('.btn-back-subsettings').attr('data-subblock-parent-name', '');\n        if ($tab.closest('.right-column') && $tab.attr('data-subblock-parent-name')) {\n            this.$('.btn-back-settings').addClass('hidden');\n            this.$('.btn-back-subsettings').removeClass('hidden');\n            this.$('.btn-back-subsettings').attr('data-subblock-parent-name', $tab.attr('data-subblock-parent-name'));\n        }\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToMenu: function (ev) {\n        this.backToMenuHandler(ev);\n    },\n\n    backToMenuHandler: function (ev) {\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToSubMenu: function (ev) {\n        this.backToSubMenuHandler(ev);\n    },\n\n    backToSubMenuHandler: function (ev) {\n        let $tab = $(ev.target).closest('.btn-back-subsettings'),\n            block_name = $tab.attr('data-subblock-parent-name'),\n            $elem = this.$('.settings-block-wrap.' + block_name);\n        if (block_name){\n            this.$('.media-gallery-button.btn-more').hideIf(block_name != 'media-gallery');\n            this.$('.device-more-button.btn-more').hideIf(block_name != 'encryption');\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        this.$('.btn-back-settings').removeClass('hidden');\n        this.$('.btn-back-subsettings').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n        this.$('.jid').text(this.model.get('jid'));\n        this.updateNameCSS();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBlocks: function () {\n        let connected = this.model.isConnected();\n        this.$('.main-info-wrap').switchClass('disconnected', !connected);\n        this.$('.settings-tab[data-block-name=\"profile\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"encryption\"]').showIf(connected);\n        this.$('.profile-image-dropdown').showIf(connected);\n        this.$('.set-groupchat-avatar').showIf(connected);\n        this.updateGallery();\n        this.updateScrollBar();\n    },\n\n    updateGallery: function () {\n        let connected = this.model.isConnected();\n        this.$('.settings-tab[data-block-name=\"media-gallery\"]').showIf(connected && this.model.get('gallery_token'));\n    },\n\n    updateNameCSS: function () {\n        if (!this.isVisible())\n            return;\n        let $name = this.$('.name');\n        $name.removeAttr('style');\n        let wrap_width = this.$('.name-wrap').width(),\n            width = $name.width(),\n            font_size = 22;\n        while (width > wrap_width && font_size > 12) {\n            $name.css({'font-size': font_size});\n            width = $name.width();\n            font_size -= 2;\n        }\n        $name.css({'margin-left': (wrap_width - width) / 2});\n    },\n\n    chooseAvatar: function () {\n        if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.model});\n        } else\n            this.$('.main-info-wrap .circle-avatar input').click();\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal');\n        xabber.trigger('update_placeholder');\n    },\n\n    closeSettings: function (ev) {\n        xabber.toolbar_view.showAllChats();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.model});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.model});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE && !(this.model.get('gallery_token') && this.model.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        this.$('.circle-avatar').find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image, hash, size) => {\n            if (image) {\n                this.model.pubAvatar({base64: image, hash: hash, size: size, type: file.type, file: file}, () => {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, () => {\n                    this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n        });\n    },\n\n    updateCSS: function () {\n        this.updateNameCSS();\n    },\n\n    openChangeStatus: function () {\n        !xabber.change_status_view && (xabber.change_status_view = new xabber.ChangeStatusView());\n        xabber.change_status_view.open(this.model);\n    },\n\n    deleteAccount: function () {\n        let dialog_options = [];\n        if (xabber.api_account && xabber.api_account.get('connected')) {\n            dialog_options = [{name: 'delete_settings',\n                checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"dialog_delete_account__label_delete_synced_settings\")}];\n        }\n        utils.dialogs.ask(xabber.getString(\"settings_account__button_quit_account\"), xabber.getString(\"dialog_quit_account__confirm\"),\n            dialog_options, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (!res)\n                return;\n            if (res.delete_settings && xabber.api_account) {\n                if (xabber.api_account.get('xmpp_binding') === this.model.get('jid'))\n                    xabber.api_account._call_method('DELETE', '/accounts/current/client-settings/', {jid: this.model.get('jid')});\n                else\n                    xabber.api_account.delete_settings(this.model.get('jid'));\n            }\n            this.model.deleteAccount();\n        });\n    },\n\n\n\n\n\n    updateStatus: function () {\n        let account = this.model,\n            status = account.get('status');\n        this.$('.settings-block-wrap.status .settings-subblock-wrap .status').attr('data-status', status);\n\n        this.$('.settings-tab[data-block-name=\"status\"] .settings-block-label').text(this.model.getStatusMessage());\n    },\n\n    updateOmemoDevices: function () {\n        if (this.model.omemo && this.model.omemo.store){\n            let identity_key = this.model.omemo.store.get('identityKey');\n            if (identity_key){\n                this.$('.btn-manage-devices').removeClass('hidden2');\n            } else {\n                this.model.omemo.store.once('change:identityKey', () => {\n                    this.$('.btn-manage-devices').removeClass('hidden2');\n                }, this);\n            }\n        }\n        else\n            this.$('.btn-manage-devices').addClass('hidden2');\n    },\n\n    updateView: function () {\n        let connected = this.model.isConnected();\n        this.$('.connection-wrap .buttons-wrap .btn-change-password').hideIf(this.model.get('auth_type') === 'x-token');\n        this.$('.connection-wrap .buttons-wrap .btn-reconnect').hideIf(this.model.get('auth_type') === 'x-token');\n        this.updateScrollBar();\n    },\n\n    updateSynchronizationBlock: function () {\n        this.$('.xabber-account-features-wrap').showIf(xabber.api_account && xabber.api_account.get('connected'));\n        this.updateSyncState();\n        this.updateSyncOption();\n        this.updateDelSettingsButton();\n    },\n\n    showResources: function (ev) {\n        this.$(`.token-resource-wrap`).hideIf(true)\n        let resource_id = $(ev.target).attr('data-resource-id');\n        this.$(`.token-resource-wrap[data-resource-id=\"${resource_id}\"]`).hideIf(false)\n    },\n\n    hideResources: function (ev) {\n        if (!($(ev.target).hasClass('last-auth') && $(ev.target).hasClass('resource') || $(ev.target).closest(\".token-resource-wrap\").length > 0))\n            this.$(`.token-resource-wrap`).hideIf(true)\n    },\n\n    renderAllXTokens: function () {\n        this.$('.sessions-wrap').html(\"\");\n        this.$('.orphaned-fingerprints-wrap').html(\"\");\n        this.$('.device-encryption-warning').addClass('hidden');\n        this.$('.device-encryption-warning').attr('data-not-trusted-count', 0);\n        this.$('.settings-tab[data-block-name=\"devices\"] .settings-block-label').text(xabber.getQuantityString(\"settings_account__devices_subheader_label\", this.model.x_tokens_list.length));\n        $(_.sortBy(this.model.x_tokens_list, '-last_auth')).each((idx, token) => {\n            let pretty_token = {\n                resource_obj: undefined,\n                client: token.client,\n                device: token.device,\n                token_uid: token.token_uid,\n                ip: token.ip,\n                last_auth: pretty_datetime_date(token.last_auth),\n                expire: pretty_datetime(token.expire)\n            };\n            let resource_obj = this.model.resources.findWhere({ token_uid: token.token_uid });\n            if (resource_obj)\n                pretty_token.resource_obj = resource_obj.toJSON();\n            if (this.model.get('x_token')) {\n                if (this.model.get('x_token').token_uid == token.token_uid) {\n                    pretty_token.is_omemo = this.model.omemo ? true : false\n                    let $cur_token_html = $(templates.current_token_item_modal(pretty_token));\n                    this.$('.current-session').append($cur_token_html);\n                    return;\n                }\n            }\n            let $token_html = $(templates.token_item_modal(pretty_token));\n            this.$('.all-sessions').append($token_html);\n            if (this.model.omemo) {\n                !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n                let omemo_device_id = token.omemo_id ? token.omemo_id : Number(pretty_token.token_uid.slice(0,8));\n                this.omemo_own_devices.updateTrustDevice(Number(omemo_device_id), $token_html, this);\n            } else {\n                if (token.omemo_id){\n                    $token_html.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n                    $token_html.find('.device-encryption .mdi-lock').removeClass('hidden');\n                }\n            }\n        });\n        if (this.$('.all-sessions').children().length){\n            this.$('.all-sessions-wrap').removeClass('hidden');\n            this.$('.active-sessions-label').removeClass('hidden');\n            this.$('.btn-revoke-all-tokens').removeClass('hidden');\n        }\n        else {\n            this.$('.all-sessions-wrap').addClass('hidden');\n            this.$('.active-sessions-label').addClass('hidden');\n            this.$('.btn-revoke-all-tokens').addClass('hidden');\n        }\n        this.$('.devices-wrap').removeClass('hidden')\n        !this._single_account  && this.$('.token-wrap').attr('data-subblock-parent-name', '');\n        this.updateHeight();\n    },\n\n    updateDeviceInformation: function (token_uid) {\n        let token = this.model.x_tokens_list.find(item => (item.token_uid === token_uid));\n        this.$('.device-information-last-seen').showIf(pretty_datetime(token.last_auth)).find('.device-information-text').text(pretty_datetime(token.last_auth));\n        this.$('.device-information-device').showIf(token.device).find('.device-information-text').text(token.device);\n        this.$('.device-information-client').showIf(token.client).find('.device-information-text').text(token.client);\n        this.$('.device-information-ip').showIf(token.ip).find('.device-information-text').text(token.ip);\n        this.$('.device-information-expires').showIf(pretty_datetime(token.expire)).find('.device-information-text').text(pretty_datetime(token.expire));\n        this.$('.device-information-device-id').showIf(token.omemo_id).find('.device-information-text').text(token.omemo_id);\n        this.$('.device-information-security-label').showIf(token.omemo_id);\n        let resource_obj = this.model.resources.findWhere({ token_uid: token_uid }),\n            status_text;\n        if (resource_obj){\n            status_text = resource_obj.get('status_message') || resource_obj.get('status') && xabber.getString(resource_obj.get('status')) || xabber.getString(\"account_state_connected\");\n        } else if (this.model.get('x_token').token_uid == token.token_uid){\n            status_text = this.model.get('status_message') || this.model.get('status') && xabber.getString(this.model.get('status')) || xabber.getString(\"account_state_connected\")\n        } else\n            status_text = xabber.getString(\"offline\");\n\n        this.$('.device-information-status .device-information-text').text(status_text);\n\n        if (this.model.get('x_token')) {\n            this.$('.btn-revoke-token').hideIf(this.model.get('x_token').token_uid == token.token_uid);\n        }\n        if (token.omemo_id && this.model.omemo){\n            let dfd = new $.Deferred(),\n                device = this.model.omemo.own_devices[token.omemo_id];\n            dfd.done((fing) => {\n                if (fing.match(/.{1,8}/g))\n                    fing = fing.match(/.{1,8}/g).join(\" \");\n                this.$('.device-information-fingerprint').showIf(fing).find('.device-information-text').text(fing);\n            })\n            if (device.get('fingerprint')) {\n                dfd.resolve(device.get('fingerprint'));\n            } else if (device.get('ik')) {\n                device.set('fingerprint', device.generateFingerprint());\n                dfd.resolve(device.get('fingerprint'));\n            } else {\n                device.getBundle().then(({pk, spk, ik}) => {\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    let fingerprint = device.generateFingerprint();\n                    if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                        device.set('fingerprint', fingerprint);\n                    dfd.resolve(device.get('fingerprint'));\n                });\n            }\n        } else {\n            this.$('.device-information-fingerprint').addClass('hidden');\n        }\n        this.$('.settings-panel-head span.settings-panel-head-title').text(token.device);\n    },\n\n    openFingerprint: function (ev) {\n        if (this.model.omemo){\n            let $target = $(ev.target).closest('.device-encryption'),\n                is_own = $target.hasClass('is-own');\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            let token = this.model.x_tokens_list.find(item => (item.token_uid === $target.closest('.token-wrap').attr('data-token-uid'))),\n                omemo_device_id = token && token.omemo_id ? token.omemo_id : Number($target.closest('.token-wrap').attr('data-token-uid').slice(0,8));\n            this.omemo_own_devices.open(Number(omemo_device_id), is_own);\n        }\n    },\n\n    updateXTokens: function () {\n        if (this.model.get('auth_type') !== 'x-token') {\n            this.$('.tokens').addClass('hidden');\n            this.$('.sessions-wrap').children().html(\"\");\n            return;\n        }\n        this.model.getAllXTokens(() => {\n            this.$('.sessions-wrap').html(\"\");\n            if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                this.renderAllXTokens();\n            }\n        });\n    },\n\n    updateGroupsLabel: function () {\n        let groups_count = this.model.groups.length,\n            label_text = groups_count === 0 ? xabber.getString(\"contact_circles_empty\") : xabber.getQuantityString(\"settings_account__section_header_circles\", groups_count);\n\n        this.$('.settings-tab[data-block-name=\"circles-groups\"] .settings-block-label').text(label_text);\n    },\n\n    revokeXToken: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"terminate_session_title\"), null,\n            {}, { ok_button_text: xabber.getString(\"button_terminate\")}).done((res) => {\n            if (!res)\n                return;\n            let $target = $(ev.target).closest('.settings-block-wrap.device-information'),\n                token_uid = $target.data('token-uid');\n            this.model.revokeXToken([token_uid], () => {\n                if (this.model.get('x_token')){\n                    if (this.model.get('x_token').token_uid === token_uid) {\n                        this.model.deleteAccount();\n                        return;\n                    }\n                    this.model.getAllXTokens(() => {\n                        this.$('.sessions-wrap').html(\"\");\n                        this.$('.btn-back-subsettings').length && this.backToSubMenu({target: this.$('.btn-back-subsettings')[0]})\n                        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                            this.renderAllXTokens();\n                        }\n                    });\n                }\n            });\n        });\n    },\n\n    revokeAllXTokens: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__dialog_terminate_sessions__header\"), xabber.getString(\"terminate_all_sessions_title\"), null, { ok_button_text: xabber.getString(\"button_terminate\")}).done((result) => {\n            if (result && this.model.x_tokens_list)\n                this.model.revokeAllXTokens(() => {\n                    this.model.getAllXTokens(() => {\n                        this.$('.sessions-wrap').html(\"\");\n                        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                            this.renderAllXTokens();\n                        }\n                    });\n                });\n        });\n    },\n\n    updateSyncState: function () {\n        let state;\n        if (!this.model.settings.get('to_sync'))\n            state = 'off';\n        else\n            state = this.model.settings.get('synced') ? 'yes' : 'no';\n        this.$('.sync-status').text(xabber.getString(constants.SYNCED_STATUS_DATA[state].tip));\n        let mdiclass = constants.SYNCED_STATUS_DATA[state].icon,\n            $sync_icon = this.$('.sync-status-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n    },\n\n    updateSyncOption: function () {\n        this.$('.sync-account').prop('checked', this.model.settings.get('to_sync'));\n    },\n\n    updateDelSettingsButton: function () {\n        this.$('.btn-delete-settings').hideIf(this.model.settings.get('deleted'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateEnabledOmemo: function () {\n        let enabled = this.model.settings.get('omemo'), has_keys = false;\n        if (_.isUndefined(enabled))\n            enabled = false;\n        if (enabled && this.model.omemo_enable_view)\n            this.model.omemo_enable_view.close();\n        this.$('.setting-use-omemo input[type=checkbox]').prop('checked', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        this.$('.device-more-button').switchClass('hidden', !enabled);\n        this.$('.label-encryption-enabled').switchClass('hidden', !enabled);\n        this.$('.label-encryption-disabled').switchClass('hidden', enabled);\n        if (!this.model.omemo){\n            this.$('.btn-manage-devices').addClass('hidden2');\n        }\n        this.updateHeight();\n    },\n\n    updateEncryptedChatstates: function () {\n        let enabled = this.model.settings.get('encrypted_chatstates');\n        this.$('.setting-send-chat-states input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateReconnectButton: function () {\n        this.$('.btn-reconnect').switchClass('disabled', this.model.session.get('reconnecting'));\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    setEnabledOmemo: function () {\n        let enabled = this.$('.setting-use-omemo input').prop('checked');\n        this.model.settings.save('omemo', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        if (enabled)\n            this.initOmemo();\n        else\n            this.destroyOmemo();\n    },\n\n    setTypingNotification: function () {\n        let enabled = this.$('.setting-send-chat-states input').prop('checked');\n        this.model.settings.save('encrypted_chatstates', enabled);\n    },\n\n    initOmemo: function () {\n        this.model.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.model,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.model.omemo.onConnected();\n            this.updateXTokens();\n        }, 1000);\n    },\n\n    destroyOmemo: function () {\n        this.model.omemo.destroy();\n        this.model.omemo = undefined;\n        this.updateXTokens();\n    },\n\n    openDevicesWindow: function () {\n        if (this.model.omemo) {\n            !this.omemo_devices && (this.omemo_devices = new xabber.Fingerprints({model: this.model.omemo}));\n            this.omemo_devices.open();\n        }\n        else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    purgeKeys: function () {\n        utils.dialogs.ask(xabber.getString('omemo__dialog_purge_keys__header'), xabber.getString('omemo__dialog_purge_keys__text'),\n            null, { ok_button_text: xabber.getString('omemo__dialog_purge_keys__button_purge_keys')}).done((result) => {\n            if (result) {\n                if (this.model.omemo) {\n                    let device_id = this.model.omemo.get('device_id');\n                    this.model.omemo.save('prekeys', {});\n                    this.model.omemo.bundle && (this.model.omemo.bundle.preKeys = []);\n                    if (this.model.omemo.own_devices[device_id]) {\n                        this.model.omemo.own_devices[device_id].preKeys = [];\n                        this.model.omemo.own_devices[device_id].set({ik: null, fingerprint: null});\n                    }\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                } else {\n                    let omemo = new xabber.Omemo({id: 'omemo'}, {\n                        account: this.model,\n                        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                        fetch: 'before'\n                    });\n                    omemo.save('prekeys', {});\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, omemo.get('device_id'));\n                    omemo.destroy();\n                }\n            }\n        });\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    showPasswordView: function () {\n        this.model.password_view.show();\n    },\n\n    reconnect: function () {\n        if (this.model.session.get('reconnecting'))\n            return;\n        this.model.save('enabled', true);\n        if (this.model.connection.connected)\n            this.model.connection.disconnect();\n        else\n            this.model.connect();\n    },\n\n    changeSyncSetting: function (ev) {\n        let to_sync = $(ev.target).prop('checked'),\n            settings = this.model.settings;\n        settings.save('to_sync', to_sync);\n        if (to_sync) {\n            settings.update_timestamp();\n            xabber.api_account && xabber.api_account.synchronize_main_settings();\n        }\n    },\n\n    deleteSettings: function () {\n        utils.dialogs.ask(xabber.getString(\"progress_title_delete_settings\"), xabber.getString(\"delete_settings_summary\"),\n            [{name: 'delete_account', checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"delete_settings__optional_button__delete_synced_account\")}],{ ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (res) {\n                if (!res.delete_account) {\n                    this.model.settings.save('to_sync', false);\n                } else if (!this.model.settings.get('to_sync')) {\n                    this.model.deleteAccount(true);\n                }\n                xabber.api_account && xabber.api_account.delete_settings(this.model.get('jid'));\n            }\n        });\n    },\n\n    changeColor: function (ev) {\n        let value = $(ev.target).closest('.color-picker-button').attr('data-color-value');\n        this.model.settings.update_settings({color: value});\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    openBlockWindow: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"dialog_block_xmpp_address__text\"), null, {modal_class: 'account-add-blocked', input_placeholder_value: xabber.getString(\"dialog_block_xmpp_address__hint_address\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let contact = this.model.contacts.get(result);\n                if (contact)\n                    contact.block();\n                else {\n                    this.model.contacts.blockContact(result);\n                }\n            }\n        });\n    },\n\n    unblockSelected: function () {\n        if (this.children && this.children.blocklist){\n            this.children.blocklist.unblockSelected();\n        }\n    },\n\n    deselectBlocked: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.deselectBlocked();\n    },\n\n    deleteFilesFiltered: function (ev) {\n        if (this.gallery_view)\n            this.gallery_view.deleteFilesFiltered(ev);\n    },\n});\n\nxabber.AccountSettingsSingleModalView = xabber.AccountSettingsModalView.extend({\n    className: 'single-account-settings-panel-wrap',\n    template: templates.single_account_settings_modal,\n    // ps_selector: '.right-column',\n    // ps_settings: {\n    //     wheelPropagation: true\n    // },\n\n    render: function (options) {\n        this.$el.detach();\n        this.parent.$('.single-account-info-wrap').append(this.$el);\n        this.ps_container = this.parent.ps_container;\n        this.gallery_view.render();\n        this._single_account = true;\n\n        this.$el.attr('data-color', this.model.settings.get('color'));\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.updateCSS();\n\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateGroupsLabel();\n        this.updateView();\n        this.$('.main-resource .client').text(xabber.get('client_name'));\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.$('.btn-delete-files-variants').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: true,\n            belowOrigin: true,\n        });\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back-settings').removeClass('hidden');\n        this.$('.btn-back-subsettings').addClass('hidden');\n        this.updateHeight();\n        this.updateBlockedLabel();\n\n        this.parent.single_account_has_rendered = true;\n        return this;\n    },\n\n    jumpToBlock: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').addClass('hidden');\n        this.jumpToBlockHandler(ev);\n    },\n\n    backToMenu: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').removeClass('hidden');\n        this.backToMenuHandler(ev);\n    },\n\n    backToSubMenu: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').addClass('hidden');\n        this.backToSubMenuHandler(ev);\n    },\n\n    updateHeight: function () {\n        this.parent.updateHeight();\n    },\n});\n\nxabber.AccountSettingsRightView = xabber.BasicView.extend({\n    className: 'account-settings-right-wrap',\n    template: templates.settings_right,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"change .enabled-state input\": \"setEnabled\",\n        \"change .setting-send-chat-states input\": \"setTypingNotification\",\n        \"change .setting-use-omemo input\": \"setEnabledOmemo\",\n        \"click .btn-change-password\": \"showPasswordView\",\n        \"click .btn-reconnect\": \"reconnect\",\n        \"click\": \"hideResources\",\n        \"change .sync-account\": \"changeSyncSetting\",\n        \"click .btn-delete-settings\": \"deleteSettings\",\n        \"change .color-scheme input[type=radio][name=account_color]\": \"changeColor\",\n        \"click .token-wrap .btn-revoke-token\": \"revokeXToken\",\n        \"click .tokens .btn-revoke-all-tokens\": \"revokeAllXTokens\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .btn-block\": \"openBlockWindow\",\n        \"click .btn-unblock-selected\": \"unblockSelected\",\n        \"click .btn-deselect-blocked\": \"deselectBlocked\",\n        \"click .btn-delete-files\": \"deleteFilesFiltered\",\n        \"click .all-sessions .device-encryption.active\": \"openFingerprint\",\n        \"click .btn-purge-keys\": \"purgeKeys\"\n    },\n\n    _initialize: function () {\n        // this.resources_view = this.addChild('resources', xabber.AccountResourcesView,\n        //     {model: this.model.resources, el: this.$('.xmpp-resources')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.AccountVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.gallery_view = this.addChild('media-gallery', xabber.AccountMediaGalleryView,\n            {model: this.model, el: this.$('.media-gallery')[0]});\n        this.$('.account-name .value').text(this.model.get('jid'));\n        this.updateStatus();\n        this.updateView();\n        this.showConnectionStatus();\n        this.updateSynchronizationBlock();\n\n        this.model.resources.on(\"change\", this.updateXTokens, this);\n        this.model.resources.on(\"add\", this.updateXTokens, this);\n        this.model.resources.on(\"destroy\", this.updateXTokens, this);\n        this.model.session.on(\"change:reconnecting\", this.updateReconnectButton, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.model.settings.on(\"change:to_sync\", this.updateSyncOption, this);\n        this.model.settings.on(\"change:deleted\", this.updateDelSettingsButton, this);\n        this.model.settings.on(\"change:to_sync change:synced\", this.updateSyncState, this);\n        xabber.api_account && xabber.api_account.on(\"change:connected\", this.updateSynchronizationBlock, this);\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"update_omemo_devices\", this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateXTokens, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.settings.on(\"change:encrypted_chatstates\", this.updateEncryptedChatstates, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"activate deactivate\", this.updateView, this);\n        this.model.on(\"change:auth_type\", this.updateView, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function (options) {\n        !options.block_name && (options.block_name = 'connection')\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateView();\n        this.$('.main-resource .client').text(xabber.get('client_name'));\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        if (options.block_name){\n            this.$('.settings-block-wrap').addClass('hidden');\n            this.$('.settings-block-wrap.'+options.block_name).removeClass('hidden');\n            this.$('.settings-panel-head span.settings-panel-head-title').text(this.$('.settings-block-wrap.'+options.block_name).attr('data-header'));\n            this.$('.btn-block').switchClass('hidden2', options.block_name != 'blocklist-info');\n            this.$('.media-gallery-button.btn-more').hideIf(options.block_name != 'media-gallery');\n            this.$('.device-more-button.btn-more').hideIf(options.block_name != 'tokens' || !this.model.settings.get('omemo'));\n            let dropdown_settings = {\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'right'\n            };\n            this.$('.dropdown-button').dropdown(dropdown_settings);\n            if (options.block_name === 'media-gallery') {\n                this.$('.btn-delete-files-variants').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    hover: true,\n                    belowOrigin: true,\n                });\n            }\n        }\n        this.scrollToChild(this.$('.settings-block-wrap.'+options.block_name));\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        return this;\n    },\n\n    updateStatus: function () {\n        let account = this.model,\n            status = account.get('status'),\n            status_message = account.getStatusMessage();\n        this.$('.main-resource .status').attr('data-status', status);\n        this.$('.main-resource .status-message').text(status_message);\n    },\n\n    updateOmemoDevices: function () {\n        if (this.model.omemo && this.model.omemo.store){\n            let identity_key = this.model.omemo.store.get('identityKey');\n            if (identity_key){\n                this.$('.btn-manage-devices').removeClass('hidden2');\n            } else {\n                this.model.omemo.store.once('change:identityKey', () => {\n                    this.$('.btn-manage-devices').removeClass('hidden2');\n                }, this);\n            }\n        }\n        else\n            this.$('.btn-manage-devices').addClass('hidden2');\n    },\n\n    updateView: function () {\n        let connected = this.model.isConnected();\n        this.$('.connection-wrap .buttons-wrap .btn-change-password').hideIf(this.model.get('auth_type') === 'x-token');\n        this.$('.connection-wrap .buttons-wrap .btn-reconnect').hideIf(this.model.get('auth_type') === 'x-token');\n        this.updateScrollBar();\n    },\n\n    updateSynchronizationBlock: function () {\n        this.$('.xabber-account-features-wrap').showIf(xabber.api_account && xabber.api_account.get('connected'));\n        this.updateSyncState();\n        this.updateSyncOption();\n        this.updateDelSettingsButton();\n    },\n\n    showResources: function (ev) {\n        this.$(`.token-resource-wrap`).hideIf(true)\n        let resource_id = $(ev.target).attr('data-resource-id');\n        this.$(`.token-resource-wrap[data-resource-id=\"${resource_id}\"]`).hideIf(false)\n    },\n\n    hideResources: function (ev) {\n        if (!($(ev.target).hasClass('last-auth') && $(ev.target).hasClass('resource') || $(ev.target).closest(\".token-resource-wrap\").length > 0))\n            this.$(`.token-resource-wrap`).hideIf(true)\n    },\n\n    renderAllXTokens: function () {\n        this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n        this.$('.panel-content-wrap .tokens .orphaned-fingerprints-wrap').html(\"\");\n        $(_.sortBy(this.model.x_tokens_list, '-last_auth')).each((idx, token) => {\n            let pretty_token = {\n                resource_obj: undefined,\n                client: token.client,\n                device: token.device,\n                token_uid: token.token_uid,\n                ip: token.ip,\n                last_auth: pretty_datetime_date(token.last_auth),\n                expire: pretty_datetime(token.expire)\n            };\n            let resource_obj = this.model.resources.findWhere({ token_uid: token.token_uid });\n            if (resource_obj)\n                pretty_token.resource_obj = resource_obj.toJSON();\n            if (this.model.get('x_token')) {\n                if (this.model.get('x_token').token_uid == token.token_uid) {\n                    pretty_token.is_omemo = this.model.omemo ? true : false\n                    let $cur_token_html = $(templates.current_token_item(pretty_token));\n                    this.$('.panel-content-wrap .tokens .current-session').append($cur_token_html);\n                    return;\n                }\n            }\n            let $token_html = $(templates.token_item(pretty_token));\n            this.$('.panel-content-wrap .tokens .all-sessions').append($token_html);\n            if (this.model.omemo) {\n                !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n                let omemo_device_id = token.omemo_id ? token.omemo_id : Number(pretty_token.token_uid.slice(0,8));\n                this.omemo_own_devices.updateTrustDevice(Number(omemo_device_id), $token_html);\n            } else {\n                if (token.omemo_id){\n                    $token_html.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n                    $token_html.find('.device-encryption .mdi-lock').removeClass('hidden');\n                }\n            }\n        });\n        if (this.$('.panel-content-wrap .tokens .all-sessions').children().length)\n            this.$('.panel-content-wrap .tokens .all-sessions-wrap').removeClass('hidden');\n        else\n            this.$('.panel-content-wrap .tokens .all-sessions-wrap').addClass('hidden');\n    },\n\n    openFingerprint: function (ev) {\n        if (this.model.omemo){\n            let $target = $(ev.target).closest('.device-encryption'),\n                is_own = $target.hasClass('is-own');\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            let token = this.model.x_tokens_list.find(item => (item.token_uid === $target.closest('.token-wrap').attr('data-token-uid'))),\n                omemo_device_id = token && token.omemo_id ? token.omemo_id : Number($target.closest('.token-wrap').attr('data-token-uid').slice(0,8));\n            this.omemo_own_devices.open(Number(omemo_device_id), is_own);\n        }\n    },\n\n    updateXTokens: function () {\n        if (this.model.get('auth_type') !== 'x-token') {\n            this.$('.panel-content-wrap .tokens').addClass('hidden');\n            this.$('.panel-content-wrap .tokens .sessions-wrap').children().html(\"\");\n            return;\n        }\n        this.model.getAllXTokens(() => {\n            this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n            if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                this.renderAllXTokens();\n            }\n        });\n    },\n\n    revokeXToken: function (ev) {\n        let $target = $(ev.target).closest('.token-wrap'),\n            token_uid = $target.data('token-uid');\n        this.model.revokeXToken([token_uid], () => {\n            if (this.model.get('x_token')){\n                if (this.model.get('x_token').token_uid === token_uid) {\n                    this.model.deleteAccount();\n                    return;\n                }\n                this.model.getAllXTokens(() => {\n                    this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n                    if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                        this.renderAllXTokens();\n                    }\n                });\n            }\n        });\n    },\n\n    revokeAllXTokens: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__dialog_terminate_sessions__header\"), xabber.getString(\"terminate_all_sessions_title\"), null, { ok_button_text: xabber.getString(\"button_terminate\")}).done((result) => {\n            if (result && this.model.x_tokens_list)\n                this.model.revokeAllXTokens(() => {\n                    this.model.getAllXTokens(() => {\n                        this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n                        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                            this.renderAllXTokens();\n                        }\n                    });\n                });\n        });\n    },\n\n    updateSyncState: function () {\n        let state;\n        if (!this.model.settings.get('to_sync'))\n            state = 'off';\n        else\n            state = this.model.settings.get('synced') ? 'yes' : 'no';\n        this.$('.sync-status').text(xabber.getString(constants.SYNCED_STATUS_DATA[state].tip));\n        let mdiclass = constants.SYNCED_STATUS_DATA[state].icon,\n            $sync_icon = this.$('.sync-status-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n    },\n\n    updateSyncOption: function () {\n        this.$('.sync-account').prop('checked', this.model.settings.get('to_sync'));\n    },\n\n    updateDelSettingsButton: function () {\n        this.$('.btn-delete-settings').hideIf(this.model.settings.get('deleted'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateEnabledOmemo: function () {\n        let enabled = this.model.settings.get('omemo'), has_keys = false;\n        if (_.isUndefined(enabled))\n            enabled = false;\n        if (enabled && this.model.omemo_enable_view)\n            this.model.omemo_enable_view.close();\n        this.$('.setting-use-omemo input[type=checkbox]').prop('checked', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        this.$('.device-more-button').switchClass('hidden', !enabled);\n        if (!this.model.omemo){\n            this.$('.btn-manage-devices').addClass('hidden2');\n        }\n    },\n\n    updateEncryptedChatstates: function () {\n        let enabled = this.model.settings.get('encrypted_chatstates');\n        this.$('.setting-send-chat-states input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateReconnectButton: function () {\n        this.$('.btn-reconnect').switchClass('disabled', this.model.session.get('reconnecting'));\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    setEnabledOmemo: function () {\n        let enabled = this.$('.setting-use-omemo input').prop('checked');\n        this.model.settings.save('omemo', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        if (enabled)\n            this.initOmemo();\n        else\n            this.destroyOmemo();\n    },\n\n    setTypingNotification: function () {\n        let enabled = this.$('.setting-send-chat-states input').prop('checked');\n        this.model.settings.save('encrypted_chatstates', enabled);\n    },\n\n    initOmemo: function () {\n        this.model.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.model,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.model.omemo.onConnected();\n            this.updateXTokens();\n        }, 1000);\n    },\n\n    destroyOmemo: function () {\n        this.model.omemo.destroy();\n        this.model.omemo = undefined;\n        this.updateXTokens();\n    },\n\n    openDevicesWindow: function () {\n        if (this.model.omemo) {\n            !this.omemo_devices && (this.omemo_devices = new xabber.Fingerprints({model: this.model.omemo}));\n            this.omemo_devices.open();\n        }\n        else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    purgeKeys: function () {\n        utils.dialogs.ask(xabber.getString('omemo__dialog_purge_keys__header'), xabber.getString('omemo__dialog_purge_keys__text'),\n            null, { ok_button_text: xabber.getString('omemo__dialog_purge_keys__button_purge_keys')}).done((result) => {\n            if (result) {\n                if (this.model.omemo) {\n                    let device_id = this.model.omemo.get('device_id');\n                    this.model.omemo.save('prekeys', {});\n                    this.model.omemo.bundle && (this.model.omemo.bundle.preKeys = []);\n                    if (this.model.omemo.own_devices[device_id]) {\n                        this.model.omemo.own_devices[device_id].preKeys = [];\n                        this.model.omemo.own_devices[device_id].set({ik: null, fingerprint: null});\n                    }\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                } else {\n                    let omemo = new xabber.Omemo({id: 'omemo'}, {\n                        account: this.model,\n                        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                        fetch: 'before'\n                    });\n                    omemo.save('prekeys', {});\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, omemo.get('device_id'));\n                    omemo.destroy();\n                }\n            }\n        });\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    showPasswordView: function () {\n        this.model.password_view.show();\n    },\n\n    reconnect: function () {\n        if (this.model.session.get('reconnecting'))\n            return;\n        this.model.save('enabled', true);\n        if (this.model.connection.connected)\n            this.model.connection.disconnect();\n        else\n            this.model.connect();\n    },\n\n    changeSyncSetting: function (ev) {\n        let to_sync = $(ev.target).prop('checked'),\n            settings = this.model.settings;\n        settings.save('to_sync', to_sync);\n        if (to_sync) {\n            settings.update_timestamp();\n            xabber.api_account && xabber.api_account.synchronize_main_settings();\n        }\n    },\n\n    deleteSettings: function () {\n        utils.dialogs.ask(xabber.getString(\"progress_title_delete_settings\"), xabber.getString(\"delete_settings_summary\"),\n            [{name: 'delete_account', checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"delete_settings__optional_button__delete_synced_account\")}],{ ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (res) {\n                if (!res.delete_account) {\n                    this.model.settings.save('to_sync', false);\n                } else if (!this.model.settings.get('to_sync')) {\n                    this.model.deleteAccount(true);\n                }\n                xabber.api_account && xabber.api_account.delete_settings(this.model.get('jid'));\n            }\n        });\n    },\n\n    changeColor: function (ev) {\n        let value = ev.target.value;\n        this.model.settings.update_settings({color: value});\n    },\n\n    openBlockWindow: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"dialog_block_xmpp_address__text\"), null, {modal_class: 'account-add-blocked', input_placeholder_value: xabber.getString(\"dialog_block_xmpp_address__hint_address\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let contact = this.model.contacts.get(result);\n                if (contact)\n                    contact.block();\n                else {\n                    this.model.contacts.blockContact(result);\n                }\n            }\n        });\n    },\n\n    unblockSelected: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.unblockSelected();\n    },\n\n    deselectBlocked: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.deselectBlocked();\n    },\n\n    deleteFilesFiltered: function (ev) {\n        if (this.gallery_view)\n            this.gallery_view.deleteFilesFiltered(ev);\n    },\n});\n\nxabber.StatusMessageWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.StatusMessageModalWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n    template: templates.status_message_input_widget,\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.AccountSettingsItemView = xabber.BasicView.extend({\n    className: 'xmpp-account draggable droppable',\n    template: templates.global_settings_item,\n    avatar_size: constants.AVATAR_SIZES.SETTINGS_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-info-wrap\": \"showSettings\",\n        \"change .enabled-state input\": \"setEnabled\",\n    },\n\n    _initialize: function () {\n        this.$('.jid').text(this.model.get('jid'));\n        this.updateEnabled();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateSyncState();\n        this.showConnectionStatus();\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.$el.on('drag_to', this.onDragTo.bind(this));\n        this.$('.move-account-to-this')\n            .on('move_xmpp_account', this.onMoveAccount.bind(this));\n        this.model.settings.on(\"change:to_sync\", this.updateSyncState, this);\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$el.switchClass('disabled', !enabled);\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    onDragTo: function (ev, drop_elem) {\n        drop_elem && $(drop_elem).trigger('move_xmpp_account', this.model);\n    },\n\n    onMoveAccount: function (ev, account) {\n        this.model.collection.moveBefore(account, this.model);\n    },\n\n    updateSyncState: function () {\n        let connected = xabber.api_account && xabber.api_account.get('connected');\n        this.$('.sync-marker-wrap').showIf(connected);\n        this.$el.find('.sync-marker').showIf(this.model.settings.get('to_sync'));\n    },\n\n    showSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.AccountSettingsItemModalView = xabber.BasicView.extend({\n    className: 'xmpp-account draggable droppable',\n    template: templates.global_settings_item_modal,\n    avatar_size: constants.AVATAR_SIZES.SETTINGS_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-info-wrap\": \"showSettings\",\n        \"change .enabled-state input\": \"setEnabled\",\n    },\n\n    _initialize: function () {\n        this.updateEnabled();\n        this.updateNickname();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateSyncState();\n        this.showConnectionStatus();\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"change:vcard\", this.updateNickname, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.$el.on('drag_to', this.onDragTo.bind(this));\n        this.$('.move-account-to-this')\n            .on('move_xmpp_account', this.onMoveAccount.bind(this));\n        this.model.settings.on(\"change:to_sync\", this.updateSyncState, this);\n    },\n\n    updateNickname: function () {\n        let nickname;\n        if (this.model.get('vcard')) {\n            if (this.model.get('vcard').nickname)\n                nickname = this.model.get('vcard').nickname;\n            else if (this.model.get('vcard').fullname)\n                nickname = this.model.get('vcard').fullname;\n            else if (this.model.get('vcard').first_name || this.model.get('vcard').last_name)\n                nickname = this.model.get('vcard').first_name + ' ' + this.model.get('vcard').last_name;\n        }\n        if (nickname){\n            this.$('.nickname').text(nickname);\n            this.$('.jid').text(this.model.get('jid'));\n            this.$('.nickname-wrap').removeClass('single-row');\n            this.$('.jid-wrap').removeClass('hidden');\n        } else {\n            this.$('.nickname').text(this.model.get('jid'));\n            this.$('.nickname-wrap').addClass('single-row');\n            this.$('.jid-wrap').addClass('hidden');\n        }\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showConnectionStatus: function () {\n        // this.$('.status').attr('data-status', this.model.get('status'));\n        // this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$el.switchClass('disabled', !enabled);\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    onDragTo: function (ev, drop_elem) {\n        drop_elem && $(drop_elem).trigger('move_xmpp_account', this.model);\n    },\n\n    onMoveAccount: function (ev, account) {\n        this.model.collection.moveBefore(account, this.model);\n    },\n\n    updateSyncState: function () {\n        let connected = xabber.api_account && xabber.api_account.get('connected');\n        this.$('.sync-marker-wrap').showIf(connected);\n        this.$el.find('.sync-marker').showIf(this.model.settings.get('to_sync'));\n    },\n\n    showSettings: function () {\n        if (this.model.get('enabled'))\n            this.model.showSettingsModal();\n        else {\n            utils.dialogs.ask_extended(xabber.getString(\"settings_account__enable_account_label\"), xabber.getString(\"settings_account__enable_account_text\", [this.model.get('jid')]),\n                {modal_class: 'modal-offline-account', no_dialog_options: true},\n                {\n                    ok_button_text: xabber.getString(\"button_enable\"),\n                    optional_button: 'delete-account',\n                    optional_button_text: xabber.getString(\"settings_account__button_quit_account\")\n                }).done((res) => {\n                    if (res){\n                        if (res === 'delete-account')\n                            this.model.deleteAccount(null, true);\n                        else {\n                            this.model.save('enabled', true);\n                            this.model.activate();\n                        }\n                    }\n            });\n        }\n    }\n});\n\nxabber.SettingsAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.updateSyncState();\n        this.model.on(\"add\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n        xabber.api_account && xabber.api_account.on(\"change:connected\", this.updateSyncState, this);\n        this.$('.move-account-to-bottom')\n            .on('move_xmpp_account', this.onMoveAccountToBottom.bind(this));\n    },\n\n    updateList: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            if (!view) {\n                view = this.addChild(jid, xabber.AccountSettingsItemView, {model: account});\n            }\n            this.$('.no-accounts-tip').before(view.$el);\n        });\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view)\n            view.$el.detach();\n        else\n            view = this.addChild(jid, xabber.AccountSettingsItemView, {model: account});\n        let index = this.model.indexOf(account);\n        if (index === 0)\n            this.$('.accounts-head-wrap').after(view.$el);\n        else\n            this.$('.xmpp-account').eq(index - 1).after(view.$el);\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    render: function () {\n        this.updateHtml();\n        _.each(this.children, function (view) {\n            view.updateEnabled();\n        });\n    },\n\n    updateHtml: function () {\n        this.$('.no-accounts-tip').hideIf(this.model.length);\n        this.$('.accounts-head-wrap').showIf(this.model.length);\n        this.parent.$('.settings-tab[data-block-name=\"xmpp-accounts\"] .settings-block-name')\n            .text(this.model.length === 1 ? xabber.getString(\"account\") : xabber.getString(\"settings__menu_item__xmpp_account\") );\n    },\n\n    updateSyncState: function () {\n        let connected = xabber.api_account && xabber.api_account.get('connected');\n        this.$('.sync-head').showIf(connected);\n        this.$('.sync-marker-wrap').showIf(connected);\n        this.$('.sync-head').hideIf(!connected);\n        this.$('.sync-marker-wrap').hideIf(!connected);\n    },\n\n    onMoveAccountToBottom: function (ev, account) {\n        this.model.moveToBottom(account);\n    }\n});\n\nxabber.SettingsAccountsModalBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.updateSyncState();\n        this.model.on(\"add\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n        this.model.on(\"add\", this.parent.updateAccounts, this.parent);\n        this.model.on(\"update_order\", this.parent.updateAccounts, this.parent);\n        this.model.on(\"destroy\", this.parent.updateAccounts, this.parent);\n        xabber.api_account && xabber.api_account.on(\"change:connected\", this.updateSyncState, this);\n        this.$('.move-account-to-bottom')\n            .on('move_xmpp_account', this.onMoveAccountToBottom.bind(this));\n    },\n\n    updateList: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            if (!view) {\n                view = this.addChild(jid, xabber.AccountSettingsItemModalView, {model: account});\n            }\n            this.$('.no-accounts-tip').before(view.$el);\n        });\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view)\n            view.$el.detach();\n        else\n            view = this.addChild(jid, xabber.AccountSettingsItemModalView, {model: account});\n        let index = this.model.indexOf(account);\n        if (index === 0)\n            this.$('.no-accounts-tip').after(view.$el);\n        else\n            this.$('.xmpp-account').eq(index - 1).after(view.$el);\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    render: function () {\n        this.updateHtml();\n        _.each(this.children, function (view) {\n            view.updateEnabled();\n        });\n    },\n\n    updateHtml: function () {\n        this.$('.no-accounts-tip').hideIf(this.model.length);\n    },\n\n    updateSyncState: function () {\n        let connected = xabber.api_account && xabber.api_account.get('connected');\n        this.$('.sync-head').showIf(connected);\n        this.$('.sync-marker-wrap').showIf(connected);\n        this.$('.sync-head').hideIf(!connected);\n        this.$('.sync-marker-wrap').hideIf(!connected);\n    },\n\n    onMoveAccountToBottom: function (ev, account) {\n        this.model.moveToBottom(account);\n    }\n});\n\nxabber.ChangeStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.change_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\",\n        \"click .status-message-wrap .clear-input\": \"clearStatusMessageInput\",\n        \"keyup .status-message\": \"keyUp\",\n        \"change .apply-to-all\": \"changeApplyToAll\"\n    },\n\n    open: function (account) {\n        this.account = account;\n        this.highlightStatus(account.get('status'));\n        this.restoreStatusMessageInput();\n        this.show();\n    },\n\n    highlightStatus: function (status) {\n        this.$('.status-values li[data-value=\"'+status+'\"]').addClass('active')\n            .siblings().removeClass('active');\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    restoreStatusMessageInput: function () {\n        let status_message = this.account.get('status_message');\n        this.$('.status-message').val(status_message)\n            .switchClass('filled', status_message);\n        if (!status_message) {\n            this.$('.status-message').attr('placeholder', this.account.getStatusMessage());\n        }\n    },\n\n    clearStatusMessageInput: function () {\n        let verbose_status = xabber.getString(this.account.get('status'));\n        this.$('.status-message').val('').attr('placeholder', verbose_status)\n            .removeClass('filled');\n    },\n\n    keyUp: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.do_change();\n            this.closeModal();\n        } else {\n            let value = this.$('.status-message').val();\n            this.$('.status-message').switchClass('filled', value);\n        }\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value'),\n            status_message = this.$('.status-message').val();\n        if (this.apply_to_all) {\n            xabber.accounts.each(function (account) {\n                account.setStatus(status, status_message);\n            });\n        } else {\n            this.account.setStatus(status, status_message);\n        }\n    },\n\n    changeApplyToAll: function (ev) {\n        this.apply_to_all = $(ev.target).prop('checked');\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SetAvatarView = xabber.BasicView.extend({\n    className: 'modal main-modal avatar-picker background-panel',\n    template: templates.avatars_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addAvatar\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        this.$('.modal-header span').text(xabber.getString(\"account_set_avatar_header\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    renderFiles: function (response) {\n        this.$('.library-wrap .preloader-wrapper').remove()\n        if (response.items.length){\n            this.current_items = response.items\n            response.items.forEach((item, idx) => {\n                let img = $(`<div class=\"image-item\"/>`);\n                img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                img.attr('data-src', item.file);\n                img.attr('data-id', idx);\n                this.$('.library-wrap').append(img);\n            });\n        }\n    },\n\n    createLibrary: function () {\n        this.model.testGalleryTokenExpire(() => {\n            let options = {order_by: '-id'};\n            if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                this.$('.library-wrap').html(env.templates.contacts.preloader())\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                    url: this.model.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        console.log(response)\n                        this.renderFiles(response)\n                    },\n                    error: (response) => {\n                        this.model.handleCommonGalleryErrors(response)\n                        console.log(response)\n                        this.$('.library-wrap .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.current_file = file;\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                image.type = image.media_type;\n                this.model.pubAvatar(image, () => {\n                    this.current_items = [];\n                    this.close();\n                    this.model.trigger('update_avatar_list');\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.model.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, () => {\n                            this.close();\n                            this.model.trigger('update_avatar_list');\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    createFileFromURL: async function (url) {\n        let response = await fetch(url);\n        let data = await response.blob();\n        let metadata = {\n            type: 'image/png'\n        };\n        let file = new File([data], \"avatar.png\", metadata);\n        return file\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.WebcamProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal webcam-panel',\n    template: templates.webcam_panel,\n\n    events: {\n        \"click .btn-save\": \"saveAvatar\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n\n        this.width = 171;\n        this.height = 128;\n        this.streaming = false;\n        this.video = null;\n        this.canvas = null;\n        this.photo = null;\n        this.startbutton = null;\n\n        this.show();\n        this.startupStream();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        if (this.video && this.video.srcObject && this.video.srcObject.getTracks()){\n            let tracks = this.video.srcObject.getTracks()\n            tracks.forEach(function(track) {\n                track.stop();\n            });\n            this.video.srcObject = null\n        }\n        this.$el.detach();\n\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    startupStream: function (ev) {\n        this.video = this.$('.webcam-video')[0];\n        this.canvas = this.$('#canvas')[0];\n        this.photo = this.$('.webcam-photo')[0];\n        this.startbutton = this.$('.btn-take-photo')[0];\n        navigator.mediaDevices.getUserMedia({video: true, audio: false})\n            .then((stream) => {\n                this.video.srcObject = stream;\n                this.video.play();\n            })\n            .catch((err) => {\n                console.log(\"An error occurred: \" + err);\n            });\n\n        this.video.addEventListener('canplay', (ev) => {\n            if (!this.streaming) {\n                if (isNaN(this.height)) {\n                    this.height = this.width / (4/3);\n                }\n                this.video.setAttribute('width', this.width);\n                this.video.setAttribute('height', this.height);\n                this.canvas.setAttribute('width', this.width);\n                this.canvas.setAttribute('height', this.height);\n                this.streaming = true;\n            }\n        }, false);\n\n        this.startbutton.addEventListener('click', (ev) =>{\n            this.takePicture();\n            ev.preventDefault();\n        }, false);\n\n        this.$('.circle-icon')[0].addEventListener('click', (ev) =>{\n            if ($(ev.target).closest('.circle-icon').hasClass('disabled'))\n                return;\n            this.clearPhoto();\n            ev.preventDefault();\n        }, false);\n\n        this.clearPhoto();\n\n    },\n\n\n    clearPhoto: function (ev) {\n        let context = this.canvas.getContext('2d');\n        context.fillStyle = \"#AAA\";\n        context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        let data = this.canvas.toDataURL('image/png');\n        this.photo.setAttribute('src', data);\n        this.$('.btn-take-photo').hideIf(false)\n        this.$('.btn-save').hideIf(true)\n        this.$('.output').hideIf(true)\n    },\n\n\n    takePicture: function (ev) {\n        let context = this.canvas.getContext('2d');\n        this.$('.btn-take-photo').hideIf(true)\n        this.$('.btn-save').hideIf(false)\n        this.$('.output').hideIf(false)\n        if (this.width && this.height) {\n            this.canvas.width = this.width;\n            this.canvas.height = this.height;\n            context.drawImage(this.video, 0, 0, this.width, this.height);\n            context.globalCompositeOperation='destination-in';\n            context.beginPath();\n            context.arc(this.width/2,this.height/2,this.height/2,0,Math.PI*2);\n            context.closePath();\n            context.fill();\n\n            let data = this.canvas.toDataURL('image/png');\n            this.photo.setAttribute('src', data);\n        } else {\n            this.clearPhoto();\n        }\n    },\n\n\n    saveAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            });\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            if (this.registration && this.registration_view){\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, ''), this.member_details_avatar_size);\n                this.close();\n            } else {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.$('.circle-icon').addClass('disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n});\n\nxabber.EmojiProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel',\n    template: templates.emoji_panel,\n\n    events: {\n        \"click .profile-image-background-color\": \"changeColor\",\n        \"click .avatar-wrap\": \"openEmojiPicker\",\n        \"click .close-modal\": \"close\",\n        \"click .btn-save\": \"saveAvatar\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n        this.emoji_panel_view = this.addChild('emoji_picker_panel', xabber.EmojiPickerView,{})\n        this.show();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    openEmojiPicker: function () {\n        this.emoji_panel_view.open(this);\n    },\n\n    changeColor: function (ev) {\n        let color = $(ev.target).data('value');\n        this.$('.profile-image-background-color').removeClass('chosen-background-color');\n        $(ev.target).addClass('chosen-background-color');\n        this.$('.circle-avatar').attr('class', 'circle-avatar');\n        this.$('.circle-avatar').attr('data-value', color);\n        this.$('.circle-avatar').addClass('ground-color-' + color + '-100');\n    },\n\n    saveAvatar: function (ev) {\n        if (this.registration && this.registration_view){\n            let blob = Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"bold 96px sans-serif\", 176, 176),\n                file = new File([blob], \"avatar.png\", {\n                    type: \"image/png\",\n                });\n            file.generated = true;\n            file.base64 = blob;\n            if (file && file.base64) {\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(blob, this.member_details_avatar_size);\n                xabber._settings.save('main_color', this.$('.circle-avatar').attr('data-value'));\n                xabber.trigger('update_main_color');\n                this.close();\n            }\n        } else {\n            let blob = Images.getBlobImage(Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"bold 96px sans-serif\", 176, 176)),\n                file = new File([blob], \"avatar.png\", {\n                    type: \"image/png\",\n                });\n            file.base64 = blob;\n            if (file && file.base64) {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n});\n\nxabber.EmojiPickerView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel emoji-picker',\n    template: templates.emoji_picker,\n\n    events: {\n        \"click .emojis-bottom-tab-selector\": \"pickEmojiTab\",\n        \"click .emoji-picker-emoji\": \"pickEmoji\",\n        \"click .close-modal\": \"close\",\n    },\n\n    open: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n        this.readEmojisJSON()\n        this.show();\n    },\n\n    readEmojisJSON: function () {\n        this.emojis = templates.emojis;\n\n        if (this.emojis.length) {\n            this.$('.emoji-picker-wrap').html(templates.emoji_picker_tabs({\n                emojis: this.emojis\n            }));\n            this.ps_container = this.$('.emojis-tab');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n    },\n\n    render: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container.each((index) => {\n            this.ps_container[index].scrollTop = offset;\n        });\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    pickEmojiTab: function (ev) {\n        let tab = $(ev.target).data('value');\n        this.$('.emojis-bottom-tab-selector').removeClass('chosen-emoji-selector');\n        $(ev.target).addClass('chosen-emoji-selector');\n        this.$('.emojis-tab').removeClass('chosen-emoji-tab').addClass('hidden');\n        this.$(`.emojis-tab[data-value=\"${tab}\"]`).removeClass('hidden').addClass('chosen-emoji-tab');\n        this.scrollToTop();\n    },\n\n    pickEmoji: function (ev) {\n        let emoji = $(ev.target).closest('.emoji-picker-emoji').data('value');\n        this.parent.$('.chosen-emoji').attr('data-value', emoji).text(emoji);\n        this.close();\n    },\n});\n\nxabber.ChangePasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-password-modal',\n    template: templates.change_password,\n\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.$('input[name=jid]').val(this.model.get('jid'));\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        return this;\n    },\n\n    render: function (options) {\n        options || (options = {});\n        this.is_login = options.login;\n        this.token_invalidated = options.token_invalidated;\n        this.$('.modal-header span').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"button_set_pass\"));\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$('.btn-change').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"set\"));\n        this.$el.openModal({\n            use_queue: true,\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n        this.authFeedback({});\n        this.$password_input.val('').focus();\n    },\n\n    getActionName: function () {\n        return this.is_login ? xabber.getString(\"login\") : xabber.getString(\"set\")\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.model.get('jid'),\n            password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (this.model.connection.connected) {\n            this.model.once('deactivate', () => {\n                this.setPassword(password);\n            });\n            this.model.deactivate();\n        } else {\n            this.setPassword(password);\n        }\n    },\n\n    setPassword: function (password) {\n        this.model.last_msg_timestamp = 0;\n        this.model.save({\n            auth_type: 'password',\n            password: utils.utoa(password),\n            enabled: true\n        });\n        this.model.auth_view = this;\n        this.model.connect();\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-change').text(authentication ? xabber.getString(\"stop\") : this.getActionName());\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    successFeedback: function () {\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    endAuth: function (account) {\n        this.model.save('is_new', undefined);\n        this.successFeedback(this.model)\n        this.model.auth_view = null;\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    onQuit: function () {\n        this.closeModal();\n    },\n\n    close: function () {\n        if (this.is_login)\n            this.model.save('enabled', false);\n        if (this.token_invalidated)\n            this.model.deleteAccount();\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.model.auth_view = null;\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ChangeAccountPasswordView = xabber.BasicView.extend({\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"render\",\n        \"keyup input\": \"keyUp\",\n    },\n\n    _initialize: function () {\n        this.account = this.model\n        this.$old_password_input = this.$('input[name=old_password]');\n        this.$password_input = this.$('input[name=password]');\n        this.$password_confirm_input = this.$('input[name=password_confirm]');\n        return this;\n    },\n\n    render: function (options) {\n        this.authFeedback({});\n        this.$password_input.val('');\n        this.$password_confirm_input.val('');\n        this.$old_password_input.val('').focus();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let jid = this.account.get('jid'),\n            old_password = this.$old_password_input.val(),\n            password = this.$password_input.val(),\n            password_confirm = this.$password_confirm_input.val();\n        if (!old_password)\n            return this.errorFeedback({old_password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (password != password_confirm)\n            return this.errorFeedback({password_confirm: xabber.getString(\"settings_account__alert_passwords_do_not_match\")});\n        old_password = old_password.trim();\n        this.authFeedback({password_confirm: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (!this.account.change_password_connection_manager) {\n            this.account.change_password_view = this;\n            this.account.change_password_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.change_password_connection = this.account.change_password_connection_manager.connection;\n            this.account.change_password_connection.account = this.account;\n            this.account.change_password_connection.register.connect_change_password(jid, old_password, this.account.changePasswordCallback.bind(this.account))\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n        this.$old_password_input.switchClass('invalid', options.old_password)\n            .siblings('span.errors').text(options.old_password || '');\n        this.$password_confirm_input.switchClass('invalid', options.password_confirm)\n            .siblings('span.errors').text(options.password_confirm || '');\n        this.parent && this.parent.updateHeight();\n    },\n\n    errorFeedback: function (options) {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.authFeedback(options);\n    },\n\n    successFeedback: function () {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.render();\n    },\n});\n\nxabber.AuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        return this;\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    onRender: function () {\n        this.account = null;\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$jid_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.$jid_input.val(),\n            password = this.$password_input.val();\n        if (this.data.get('registration')){\n            let domain = this.$('#new_account_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-xmpp-server .property-value').text();\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.errorRegistrationFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            jid = jid + '@' + domain\n        }\n        else if(\n            (this.$('.input-field-jid .xmpp-server-dropdown-wrap').length && !this.$('.input-field-jid .xmpp-server-dropdown-wrap').hasClass('hidden')) &&\n            (this.$('#sign_in_domain') && this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text())\n        ){\n            let domain = this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text();\n            jid = jid + '@' + domain\n        }\n        if (!jid) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        jid = jid.trim();\n        if (!password)  {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n            }\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        if (!this.data.get('registration') && !constants.LOGIN_CUSTOM_DOMAIN && !(constants.LOGIN_DOMAINS.indexOf(Strophe.getDomainFromJid(jid)) > -1))\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__login_custom_domain\")});\n        password = password.trim();\n        let at_idx = jid.indexOf('@');\n        if (at_idx <= 0 || at_idx === jid.length - 1) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n        }\n        jid = Strophe.getBareJidFromJid(jid).toLowerCase();\n        let account = xabber.accounts.get(jid);\n        if (account) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n            }\n            this.errorFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n        } else {\n            if (this.data.get('registration'))\n                this.registerFeedback({registration_success: true, password: xabber.getString(\"account_registration__feedback__text_registration\")});\n            else\n                this.authStepperShow();\n            this.getWebsocketURL(jid, (response) => {\n                this.account = xabber.accounts.create({\n                    jid: jid,\n                    websocket_connection_url: response || constants.CONNECTION_URL,\n                    password: utils.utoa(password),\n                    is_new: true\n                }, {auth_view: this});\n\n                if (this.data.get('registration')) {\n                    this.account.connection.register.connect(jid, this.account.registerCallback.bind(this.account))\n                }\n                else\n                    this.account.trigger('start');\n            });\n        }\n    },\n\n    getWebsocketURL: function (jid, callback) {\n        if (!constants.DISABLE_LOOKUP_WS) {\n            let domain = Strophe.getDomainFromJid(jid),\n                request = {\n                    type: 'GET',\n                    url: window.location.protocol + '//' + domain + '/.well-known/host-meta',\n                    dataType: 'xml',\n                    success: (success) => {\n                        let socket_url = $(success).find('Link').attr('href');\n                        if (socket_url)\n                            callback && callback(socket_url);\n                        else\n                            callback && callback(null);\n                    },\n                    error: () => {\n                        callback && callback(null);\n                    },\n                    timeout: 5000\n                };\n            $.ajax(request);\n        }\n        else\n            callback && callback(null);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n        if (this.account) {\n            this.account.destroy();\n            this.account = null;\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid)\n            .siblings('span.errors').text(options.jid || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    authStepperShow: function (){\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.successFeedback(this.account)\n        this.account.auth_view = null;\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email')\n            xabber.body.setScreen('login', {'login_screen': 'xabber'});\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\nxabber.XmppLoginPanel = xabber.AuthView.extend({\n    className: 'login-panel',\n    template: templates.xmpp_login,\n\n    events: {\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-sign-up-instead\": \"logoutAndRegister\",\n        \"click .btn-register-form\": \"openRegisterForm\",\n        \"click .btn-login-form\": \"openLoginForm\",\n        \"click .btn-register\": \"register\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-go-back-menu\": \"openButtonsMenu\",\n        \"click .btn-go-back\": \"openPreviousStep\",\n        \"click .btn-next\": \"openNextStep\",\n        \"click .btn-skip\": \"registerWithoutAvatar\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=register_nickname]\": \"keyUpNickname\",\n        \"keyup input[name=register_jid]\": \"keyUpJid\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"keyup input[name=register_domain]\": \"keyUpDomain\",\n        \"focusout input[name=register_domain]\": \"focusoutDomain\",\n        \"keyup input[name=register_password]\": \"keyUpPassword\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click #select-xmpp-server .property-variant\": \"changePropertyValueRegistration\",\n        \"click #select-auth-xmpp-server .property-variant\": \"changePropertyValueAuth\",\n    },\n\n    __initialize: function () {\n        this.$nickname_input = this.$('input[name=register_nickname]');\n        this.$domain_input = this.$('input[name=register_domain]');\n        this.data.on(\"change:step\", this.handleRegistrationStep, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.data.set('step', 1)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.registerFeedback({});\n        Materialize.updateTextFields();\n        this.$('.btn-go-back').hideIf(false);\n        this.$('.btn-skip').hideIf(true)\n        this.$nickname_input.val('');\n        this.$jid_input.val('');\n        this.$password_input.val('');\n        this.$('.circle-avatar').css({'background-image': ''});\n        this.$('.circle-avatar').css({'background-color': ''});\n        this.updateButtons();\n        this.updateDomains();\n        this.updateAuthDomains();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.avatar-wrap.dropdown-button').dropdown(dropdown_settings);\n        this.$('.btn-register-form').hideIf(!constants.REGISTRATION_BUTTON);\n        this.$('.btn-login-form').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n        this.$('.register-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.REGISTRATION_CUSTOM_DOMAIN);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        this.updateOptions && this.updateOptions();\n        this.$('#select-xmpp-server').hideIf(xabber.url_params.rkey)\n        this.$('.select-xmpp-server .caret').hideIf(xabber.url_params.rkey)\n        if (xabber.url_params.anchor == 'signup' || xabber.url_params.rkey)\n            this.data.set('step', 2)\n        else if (xabber.url_params.anchor == 'signin')\n            this.data.set('step', 0)\n    },\n\n    openButtonsMenu: function () {\n        this.data.set('step', 1)\n    },\n\n    register: function () {\n        if (this.data.get('registration')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('registration', true);\n        this.$jid_input.prop('disabled', true);\n        this.$password_input.prop('disabled', true);\n        this.submit();\n    },\n\n    login: function () {\n        this.submit();\n    },\n\n    keyUpNickname: function (ev) {\n        if(this.$nickname_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$nickname_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpJid: function (ev) {\n        clearTimeout(this._check_user_timeout);\n        if (!this.$('.btn-next').prop('disabled') && ev && ev.keyCode === constants.KEY_ENTER) {\n            this.openNextStep();\n            return;\n        }\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.REGISTRATION_CUSTOM_DOMAIN){\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'))\n            this.$domain_input.val(this.$jid_input.val().split('@')[1]);\n            this.$jid_input.val(this.$jid_input.val().split('@')[0]);\n            this.$domain_input.focus();\n            return;\n        }\n        this.$('.btn-next').prop('disabled', true);\n        if(this.$jid_input.val()){\n            let regexp_local_part = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))$/,\n                regexp_domain = /^((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n            if (!regexp_local_part.test(this.$jid_input.val()))\n                return this.registerFeedback({jid: xabber.getString(\"account_add__alert_localpart_invalid\")});\n            else if (!(regexp_domain.test(domain)))\n                return this.registerFeedback({domain: xabber.getString(\"account_add__alert_invalid_domain\")});\n            else\n                this.registerFeedback({});\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.registerFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            this._check_user_timeout = setTimeout(() => {\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n                this.$('.btn-next').prop('disabled', true);\n                this._registration_username = this.$jid_input.val()\n                this._registration_domain = domain\n                if (domain) {\n                    if (this.auth_connection && this.auth_connection.domain != domain)\n                        this.auth_connection.disconnect()\n                    if (!this.auth_connection) {\n                        this.getWebsocketURL(domain, (response) => {\n                            this.CONNECTION_URL = response || constants.CONNECTION_URL;\n                            this.auth_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                            this.auth_connection = this.auth_conn_manager.connection;\n                            this.auth_connection.register.connect_check_user(domain, this.checkUserCallback.bind(this))\n                        });\n                    }\n                    else if(this.auth_connection && this.auth_connection.connected) {\n                        this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                            null, \"iq\", null, null);\n                        this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                            {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n                    }\n                }\n                else {\n                    this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                }\n            }, 1000);\n        }\n        else\n            this.registerFeedback({});\n    },\n\n    keyUpPassword: function (ev) {\n        if(this.$password_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$password_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpDomain: function () {\n    },\n\n    keyUpLogin: function (ev) {\n        if(this.$jid_input.val() && this.$password_input.val()){\n            this.$('.btn-log-in').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        this.$('.login-step-wrap').hideIf(true);\n        this.authFeedback({});\n        this.$('.input-field-jid .xmpp-server-dropdown-wrap').hideIf(this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN)\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN){\n            this.$('.input-field-jid').addClass('input-field-jid-borders')\n        }else {\n            this.$('.input-field-jid').removeClass('input-field-jid-borders')\n        }\n        if (ev && this.$jid_input.val() && this.$password_input.val())\n            ev.keyCode === constants.KEY_ENTER && this.login();\n    },\n\n    focusoutDomain: function () {\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    handleRegisterStanza: function (stanza) {\n        let i, query, field, username_taken, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'username') {\n                if (Strophe.getText(field))\n                    this._supports_check_user = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'registered') {\n                username_taken = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        if (this._supports_check_user){\n            if (username_taken)\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, null);\n            else\n                conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n        else\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"not-supported\");\n\n        return false;\n    },\n\n    checkUserCallback: function (status, condition) {\n        if (status === Strophe.Status.REGISTER || status === Strophe.Status.REGIFAIL) {\n            if (!this.$('.select-xmpp-server .property-variant[data-value=\"' + this.auth_connection.register.domain + '\"]').length && constants.REGISTRATION_CUSTOM_DOMAIN) {\n                $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                    .text(this.auth_connection.register.domain)\n                    .attr('data-value', this.auth_connection.register.domain)\n                    .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n            }\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n            this.$('.select-xmpp-server .xmpp-server-item-wrap .property-value').text(this.auth_connection.register.domain)\n                .removeClass('hidden').attr('data-value', this.auth_connection.register.domain);\n        }\n        if (status === Strophe.Status.REGISTER) {\n            if (this.auth_connection && this.auth_connection.connected) {\n                this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                    null, \"iq\", null, null);\n                this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                    {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n            }\n        } else if (status === Strophe.Status.REGISTERED) {\n            this.registerFeedback({user_success: true, jid: xabber.getString(\"xmpp_login__registration_jid_available\")});\n            this.$('.btn-next').prop('disabled', false);\n        } else if (status === Strophe.Status.CONFLICT) {\n            this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_occupied\")});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.CONNFAIL) {\n            this.registerFeedback({jid: xabber.getString(\"CONNECTION_FAILED\") + ': ' + condition});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.REGIFAIL) {\n            if (condition === 'not-supported'){\n                this.registerFeedback({});\n                this.$('.btn-next').prop('disabled', false);\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_not_supported\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_connection.disconnect()\n        } else if (status === Strophe.Status.CONNECTING) {\n            clearTimeout(this._check_user_connection_timeout);\n                this._check_user_connection_timeout = setTimeout(() => {\n                    if(this.auth_connection && !this.auth_connection.connected){\n                        this.auth_connection._no_response = true\n                        this.auth_connection.disconnect()\n                    }\n                }, 10000);\n        } else if (status === Strophe.Status.DISCONNECTED) {\n            if (this.auth_connection && this.auth_connection._no_response) {\n                this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_conn_manager = undefined;\n            this.auth_connection = undefined;\n        }\n    },\n\n    openPreviousStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step--;\n            this.data.set('step', step)\n        }\n    },\n\n    openNextStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step++;\n            this.data.set('step', step)\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.login-form-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-server-features .register-form-step-header').text(xabber.getString(\"signin_checking_features_message\", [this.account.domain]));\n            this.$('.btn-go-back-menu').hideIf(true);\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n        if (step === 0){\n            this.$jid_input = this.$('input[name=jid]');\n            this.$password_input = this.$('input[name=password]');\n            this.$domain_input = this.$('input[name=sign_in_domain]');\n            this.$domain_input.val('')\n            this.$jid_input.val('')\n            this.$password_input.val('')\n            this.keyUpLogin();\n            this.$('.login-step-wrap').hideIf(true);\n            this.authFeedback({});\n            this.resetAuthStepper();\n            this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n            this.$('.login-form-header').text(xabber.getString(\"title_login_xabber_account\"));\n            this.$('.btn-go-back-menu').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(false);\n            this.$('.login-form-jid').hideIf(false);\n            this.$('.login-form-server-features').hideIf(true);\n            this.$('.btn-log-in').hideIf(false);\n            this.$('.btn-finish-log-in').hideIf(true);\n            this.$('.btn-sign-up-instead').hideIf(true);\n            this.$jid_input.focus();\n        }\n        else if (step === 1){\n            this.$('.login-panel-intro').hideIf(false);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(true);\n        }\n        else if (step === 2){\n            this.$jid_input = this.$('input[name=register_jid]');\n            this.$password_input = this.$('input[name=register_password]');\n            this.$domain_input = this.$('input[name=register_domain]');\n            this.keyUpNickname();\n            this.$('.login-form-header').text(xabber.getString(\"title_register_xabber_account\"));\n            this.$('.login-form-url').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(false);\n            this.$('.xmpp-login-form').hideIf(true);\n            this.$('.register-form-nickname').hideIf(false);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(true);\n            this.$nickname_input.focus();\n        }\n        else if (step === 3){\n            if (this.$nickname_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_username\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(false);\n                this.$('.register-form-password').hideIf(true);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpJid();\n                this.$jid_input.focus();\n                this.$password_input.val('');\n            }\n            else {\n                this.registerFeedback({nickname: xabber.getString(\"dialog_add_circle__error__text_input_name\")});\n                return this.data.set('step', 2);\n            }\n\n        }\n        else if (step === 4){\n            if (this.$jid_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_pass\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(true);\n                this.$('.register-form-password').hideIf(false);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpPassword();\n                this.$password_input.focus();\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n                return this.data.set('step', 3);\n            }\n\n        }\n        else if (step === 5){\n            if (this.$password_input.val()) {\n                this.register();\n            }\n            else {\n                this.registerFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                return this.data.set('step', 4);\n            }\n        }\n        else if (step === 6){\n            this.$('.login-form-header').text(xabber.getString(\"xmpp_login__registration_header_avatar\"));\n            this.$('.login-form-url').hideIf(true);\n            this.$('.btn-go-back').hideIf(true);\n            this.$('.btn-skip').hideIf(false)\n            this.$('.register-form-nickname').hideIf(true);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(false);\n            this.$('.btn-next').prop('disabled', true);\n        }\n        else if (step >= 7){\n            if(this.avatar)\n                this.account.pubAvatar(this.avatar, () => {\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            this.successRegistrationFeedback();\n        }\n    },\n\n    registerWithoutAvatar: function () {\n        this.successRegistrationFeedback();\n    },\n\n    logoutAndRegister: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.openRegisterForm()\n    },\n\n    openRegisterForm: function () {\n        this.data.set('step', 2)\n    },\n\n    openLoginForm: function () {\n        this.data.set('step', 0)\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').prop('disabled', authentication);\n    },\n\n    updateDomains: function () {\n        let all_servers = constants.REGISTRATION_DOMAINS;\n        if (xabber.url_params.rkey && all_servers.length){\n            for (let i = all_servers.length - 1; i >= 0; i--) {\n                if (!sha1(all_servers[i]).substr(0, 10).includes(xabber.url_params.rkey.substr(0, 10))){\n                    all_servers.splice(i, 1)\n                }\n            }\n        }\n        this.$('.register-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.register-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.register-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    updateAuthDomains: function () {\n        let all_servers = constants.LOGIN_DOMAINS;\n\n        this.$('.login-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.login-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainAuth(this.$('.login-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.login-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.login-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    setCustomDomainRegistration: function ($property_value) {\n        this.$('#new_account_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        this.$('.select-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    setCustomDomainAuth: function ($property_value) {\n        this.$('#sign_in_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-auth-xmpp-server .caret').addClass('hidden');\n        this.$('.select-auth-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValueRegistration: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainRegistration($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden');\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    changePropertyValueAuth: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainAuth($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-auth-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#sign_in_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-auth-xmpp-server .caret').removeClass('hidden');\n    },\n\n    chooseAvatar: function () {\n        this.$('.circle-avatar input').click();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.avatar = file;\n                this.$('.btn-next').prop('disabled', false);\n                this.$('.circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n            }\n        });\n    },\n\n    successFeedback: function () {\n        this.data.set('step', -1)\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').addClass('server-features-additional-button');\n                                        this.$('.btn-sign-up-instead').hideIf(false);\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6) {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                        this.$('.btn-finish-log-in').addClass('btn-main').removeClass('btn-main-filled')\n                                    }\n                                    else {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                        this.$('.btn-finish-log-in').removeClass('btn-main').addClass('btn-main-filled')\n                                    }\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats', {right: null});\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password);\n        this.$('.login-form-jid .login-password-error').text(options.password || '').showIf(options.password);\n        this.$('.login-form-jid .register-form-step-description').hideIf(options.password || options.jid);\n    },\n\n    resetAuthStepper: function (){\n        this.$(`.login-step .preloader-wrapper`).addClass('active').addClass('visible');\n        this.$(`.login-step .mdi`).hideIf(true);\n        this.$(`.login-step`).removeClass('active-feature')\n        this.$(`.login-step .mdi`).addClass('mdi-alert-circle').removeClass('mdi-checkbox-marked-circle')\n    },\n\n    authStepperShow: function (){\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step`).hideIf(true);\n    },\n\n    authStepperStart: function (){\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            this.$(`.login-step.connecting-step`).addClass('active-feature');\n            this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n            this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n            this.$(`.login-step.credentials-step`).hideIf(false);\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step`).addClass('active-feature');\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                setTimeout(() => {\n                    if (constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1){\n                        this.endAuth();\n                    } else {\n                        this.stepped_auth_complete = true\n                        if (this.first_features_received)\n                            this.successFeedback();\n                    }\n                },timeout_timer)\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    authStepperError: function (auth_error, options){\n        let timeout_timer = 1000;\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        setTimeout(() => {\n            if (auth_error){\n                this.$(`.login-step.connecting-step`).addClass('active-feature');\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                this.$(`.login-step.credentials-step`).hideIf(false);\n            }\n            else {\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n                return;\n            }\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    registerFeedback: function (options) {\n        if(options.user_success) {\n            this.$('.register-form-jid .register-form-step-error').addClass('available').text(options.jid || '').showIf(options.jid);\n            this.$jid_input.removeClass('invalid');\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid);\n        }\n        else if(options.registration_success) {\n            this.$('.register-form-password .register-form-step-error').addClass('available').text(options.password || '').showIf(options.password);\n            this.$password_input.removeClass('invalid');\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n        else {\n            this.$nickname_input.switchClass('invalid', options.nickname);\n            this.$('.register-form-nickname.register-form-step-error').text(options.nickname || '').showIf(options.nickname);\n            this.$('.register-form-nickname .register-form-step-description').hideIf(options.nickname);\n            this.$jid_input.switchClass('invalid', options.jid);\n            this.$domain_input.switchClass('invalid', options.domain);\n            this.$('.register-form-jid .register-form-step-error').removeClass('available').text(options.jid || options.domain || '').showIf(options.jid || options.domain);\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid || options.domain);\n            this.$password_input.switchClass('invalid', options.password);\n            this.$('.register-form-password .register-form-step-error').removeClass('available').text(options.password || '').showIf(options.password);\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n    },\n\n    errorRegistrationFeedback: function (options) {\n        this.registerFeedback(options);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false);\n        if(this.account)\n            this.account.destroy();\n    },\n\n    successRegistrationFeedback: function () {\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false)\n        this.account.trigger('start');\n    },\n});\n\n\nxabber.AddAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal add-account-modal',\n    template: templates.add_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-cancel\": \"logout\",\n        \"click .btn-go-back-menu\": \"close\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.data.set('step', 0)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$domain_input = this.$('input[name=sign_in_domain]');\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        this.updateAuthDomains();\n        this.$('.login-step-wrap').hideIf(true);\n        this.resetAuthStepper();\n        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n        this.$('.modal-header').text(xabber.getString(\"account_add\"));\n        this.$('.login-form-jid').hideIf(false);\n        this.$('.login-form-server-features').hideIf(true);\n        this.$('.btn-log-in').hideIf(false);\n        this.$('.btn-cancel').hideIf(true);\n        this.$('.btn-finish-log-in').hideIf(true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        Materialize.updateTextFields();\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.modal-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n    },\n\n    logout: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.closeModal();\n    },\n\n    endAuth: function () {\n        this.account.save('is_new', undefined);\n        this.data.set('authentication', false);\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n        this.closeModal();\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6)\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                    else\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                    this.$('.btn-cancel').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.xmpp_login_panel = xabber.login_page.addChild('xmpp_login', this.XmppLoginPanel);\n    this.account_settings = xabber.wide_panel.addChild('account_settings',\n        this.NodeView, {classlist: 'settings-panel account-settings-panel'});\n    this.account_settings_modal = xabber.main_overlay_panel.addChild('account_settings_modal',\n        this.Container, {classlist: 'account-settings-panel'});\n    this.acc_settings_left = xabber.account_settings.addChild('left',\n        this.Container, {classlist: 'account-settings-left-container'});\n    this.acc_settings_right = xabber.account_settings.addChild('right',\n        this.Container, {classlist: 'account-settings-right-container'});\n\n    this.accounts = new this.Accounts(null, {\n        storage_name: this.getStorageName() + '-accounts'\n    });\n    this.accounts.fetch();\n\n    this.trigger('accounts_ready');\n\n    this.toolbar_view.addChild('accounts', this.ToolbarAccountsBlockView,\n        {model: this.accounts, el: this.toolbar_view.$('.accounts')[0]});\n    this.settings_view.addChild('accounts', this.SettingsAccountsBlockView,\n        {model: this.accounts, el: this.settings_view.$('.xmpp-accounts')[0]});\n    this.settings_modal_view.addChild('accounts_modal', this.SettingsAccountsModalBlockView,\n        {model: this.accounts, el: this.settings_modal_view.$('.accounts-info-wrap')[0]});\n\n\n    this.on(\"add_account\", function () {\n        if (!this.add_account_view)\n            this.add_account_view = new this.AddAccountView();\n        this.add_account_view.show();\n    }, this);\n\n    $(window).bind('beforeunload',function(){\n        xabber.current_voip_call && xabber.current_voip_call.reject();\n        return;\n    });\n\n    window.onbeforeunload = () => {\n        _.each(this.accounts.connected, function (account) {\n            account.sendPresence('offline');\n        });\n    };\n\n    this.login_page.patchTree = function (tree, options) {\n        let login_screen = options.login_screen || constants.DEFAULT_LOGIN_SCREEN;\n        return login_screen === 'xmpp' ? { xmpp_login: null } : { xabber_login: null };\n    };\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq;\n\nxabber.ClientFeature = Backbone.Model.extend({\n    idAttribute: 'namespace'\n});\n\nxabber.FeatureView = xabber.BasicView.extend({\n    className: 'client-feature',\n    template: function () {\n        this.$el.append('<div class=\"feature-check-icon mdi mdi-24px\"/>')\n                .append('<div class=\"feature-name one-line\"/>');\n        this.$('.feature-check-icon').append(env.templates.svg['check-circle']());\n    },\n\n    _initialize: function (options, attrs) {\n        this.render();\n        this.model.collection.account.settings_account_modal && this.$el.appendTo(this.model.collection.account.settings_account_modal.$('.capabilities'));\n        if (options.single_account && options.single_account.$('.capabilities').length){\n            this.$el.appendTo(options.single_account.$('.capabilities'));\n        }\n        this.model.on(\"change\", this.render, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function () {\n        let name = this.model.get('verbose_name'),\n            supports = this.model.get('supports');\n        this.$('.feature-name').text(name);\n        this.$('.feature-check-icon').showIf(supports);\n    }\n});\n\nxabber.ClientFeatures = Backbone.Collection.extend({\n    model: xabber.ClientFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on('render_settings', this.render, this);\n        this.account.on('render_single_settings', this.renderSingleAccount, this);\n        this.connection = this.account.connection;\n        this.connection.disco.addIdentity(\n            'client',\n            'web',\n            xabber.get('client_name'),\n            'en'\n        );\n        this.addFeature(Strophe.NS.LAST, 'XEP-0012: Last Activity');\n        this.addFeature(Strophe.NS.VCARD, 'XEP-0054: vCard-temp');\n        this.addFeature(Strophe.NS.RSM, 'XEP-0059: Result Set Management');\n        this.addFeature(Strophe.NS.PUBSUB, 'XEP-0060: Publish-Subscribe');\n        this.addFeature(Strophe.NS.REGISTER, 'XEP-0077: In-Band Registration');\n        this.connection.disco.addFeature(Strophe.NS.CHATSTATES);\n        this.addFeature(Strophe.NS.BLOCKING, 'XEP-0191: Blocking Command');\n        this.addFeature(Strophe.NS.PING, 'XEP-0199: XMPP Ping');\n        this.connection.disco.addFeature(Strophe.NS.ATTENTION, 'XEP-0244: Attention');\n        this.addFeature(Strophe.NS.CARBONS, 'XEP-0280: Message carbons');\n        this.addFeature(Strophe.NS.MAM, 'XEP-0313: Message archive management');\n        this.connection.disco.addFeature(Strophe.NS.CHAT_MARKERS);\n        this.connection.disco.addFeature(Strophe.NS.PUBSUB_AVATAR_METADATA + '+notify');\n        this.addFeature(Strophe.NS.HTTP_UPLOAD, 'XEP-0363: HTTP File Upload');\n        this.addFeature(Strophe.NS.SYNCHRONIZATION, 'XEP-SYNC: Client Synchronization');\n        this.addFeature(Strophe.NS.AUTH_DEVICES, 'XEP-DEVICES: HOTP and Device Management');\n        this.addFeature(Strophe.NS.ARCHIVE, 'XEP-ARCHIVED: Archived Chats');\n        this.addFeature(Strophe.NS.DELIVERY, 'XEP-DELIVERY: Reliable message delivery');\n        this.addFeature(Strophe.NS.GROUP_CHAT, 'XEP-GROUPS: Groups');\n        this.addFeature(Strophe.NS.REWRITE, 'XEP-RETRACT: Message Delete and Rewrite');\n    },\n\n    addFeature: function (namespace, verbose_name) {\n        let feature = this.create({\n            namespace: namespace,\n            verbose_name: verbose_name\n        });\n        this.connection.disco.addFeature(namespace);\n    },\n\n    render: function () {\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature});\n        });\n    },\n\n    renderSingleAccount: function (single_account) {\n        single_account.$('.capabilities').html('');\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature, single_account: single_account});\n        });\n    },\n});\n\nxabber.ServerFeature = Backbone.Model.extend({\n    idAttribute: 'var'\n});\n\nxabber.ServerFeatures = Backbone.Collection.extend({\n    model: xabber.ServerFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.connection = this.account.connection;\n        this.on(\"add\", this.onFeatureAdded, this);\n    },\n\n    request: function () {\n        this.account.cached_server_features.getAllFromCachedFeatures((res) => {\n            if (res && res.length){\n                res.forEach((item) => {\n                    this.create({\n                        'var': item.var,\n                        from: item.from\n                    });\n                });\n                this.is_cached = true;\n            } else {\n                this.connection.disco.info(this.account.domain, null, this.onInfo.bind(this));\n            }\n            this.connection.disco.items(this.account.domain, null, this.onItems.bind(this));\n        });\n    },\n\n    onItems: function (stanza) {\n        let groupchat_servers_list = [];\n        $(stanza).find('query item').each((idx, item) => {\n            let jid = $(item).attr('jid'),\n                name = $(item).attr('name'),\n                node = $(item).attr('node');\n            if (node === Strophe.NS.GROUP_CHAT) {\n                groupchat_servers_list.push(jid);\n                this.account.set('groupchat_servers_list', groupchat_servers_list);\n            }\n            this.connection.disco.addItem(jid, name, node, () => {});\n            (!this.is_cached) && this.connection.disco.info(\n                jid,\n                null,\n                this.onInfo.bind(this));\n        });\n    },\n\n    onInfo: function (stanza) {\n        let $stanza = $(stanza),\n            from = $stanza.attr('from'),\n            self = this;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            self.create({\n                'var': namespace,\n                from: from\n            });\n        });\n        $stanza.find('x').each(function () {\n            let form_type_val = $(this).find('field[var=\"FORM_TYPE\"] value');\n            if (form_type_val.length && form_type_val.text() === Strophe.NS.URLDISCO && self.account.domain === from){\n                let media_gallery_url = $(this).find('field[var=\"' + Strophe.NS.MEDIAGALLERY + '\"] value');\n                if (media_gallery_url.length && media_gallery_url.text()){\n                    self.create({\n                        'var': 'media-gallery',\n                        from: media_gallery_url.text()\n                    });\n                }\n            }\n        });\n        if (this.account.auth_view && !(constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1)){\n            this.account.auth_view.first_features_received = true\n            if (this.account.auth_view.stepped_auth_complete)\n                this.account.auth_view.successFeedback();\n        }\n    },\n\n    onFeatureAdded: function (feature) {\n        let _var = feature.get('var'),\n            client_feature = this.account.client_features.get(_var);\n        client_feature && client_feature.set('supports', true);\n        (_var != Strophe.NS.SUBSCRIPTION_PREAPPROVAL && _var != Strophe.NS.SYNCHRONIZATION) && this.account.cached_server_features.putInCachedFeatures({\n            var: _var,\n            from: feature.get('from'),\n        });\n        if (_var === 'media-gallery') {\n            this.account.set('gallery_auth', false)\n            if (!(this.account.get('gallery_token') && this.account.get('gallery_url')) || (this.account.get('gallery_url') != feature.get('from')))\n                this.account.initGalleryAuth(feature);\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.client_features = new xabber.ClientFeatures(null, {account: this});\n    this.server_features = new xabber.ServerFeatures(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.last_stanza_timestamp = moment.now();\n\n    this.connection.deleteHandler(this._last_stanza_handler);\n    this._last_stanza_handler = this.connection.addHandler(() => {\n        this.last_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.connection.deleteHandler(this._pong_handler);\n    this._pong_handler = this.connection.ping.addPingHandler((ping) => {\n        this.last_stanza_timestamp = moment.now();\n        this.connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._main_interval_worker)\n        this._main_interval_worker.terminate();\n\n    this._main_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._main_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n            }\n            console.log('downtime main to disconnect: ' + downtime);\n            console.log(this.connection.connected);\n            if (this.connection.connected)\n                this.connection.disconnect();\n            else\n                this.connect();\n            this._main_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime main to ping: ' + downtime);\n            this.connection && this.connection.ping.ping(this.get('domain'));\n        }\n    };\n\n    this._main_interval_worker.postMessage({});\n\n    this.server_features.request();\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.last_fast_stanza_timestamp = moment.now();\n\n    this.fast_connection.deleteHandler(this._last_fast_stanza_handler);\n    this._last_fast_stanza_handler = this.fast_connection.addHandler(() => {\n        this.last_fast_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.fast_connection.deleteHandler(this._fast_pong_handler);\n    this._fast_pong_handler = this.fast_connection.ping.addPingHandler((ping) => {\n        this.last_fast_stanza_timestamp = moment.now();\n        this.fast_connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._fast_interval_worker)\n        this._fast_interval_worker.terminate();\n\n    this._fast_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._fast_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_fast_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n            }\n            console.log('downtime fast to disconnect: ' + downtime);\n            console.log(this.connection.connected);\n            if (this.fast_connection.connected)\n                this.fast_connection.disconnect();\n            else\n                this.fast_connection.connect('password', this.fast_connection.jid, this.fast_connection.pass);\n            this._fast_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime fast to ping: ' + downtime);\n            this.fast_connection && this.fast_connection.ping.ping(this.get('domain'));\n        }\n    };\n    this._fast_interval_worker.postMessage({});\n}, true, true);\n\nxabber.Account.addConnPlugin(function () {\n    let disco = this.connection.disco;\n    this.connection.addHandler(disco._onDiscoInfo.bind(disco),\n            Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n    this.connection.addHandler(disco._onDiscoItems.bind(disco),\n            Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n}, false, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.contacts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    VanillaQR = env.VanillaQR,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Contact = Backbone.Model.extend({\n    idAttribute: 'jid',\n    defaults: {\n        status: \"offline\",\n        status_message: \"\",\n        subscription: undefined,\n        subscription_request_in: false,\n        subscription_request_out: false,\n        groups: [],\n        group_chat: false\n    },\n\n    initialize: function (_attrs, options) {\n        this.on(\"change:group_chat\", this.onChangedGroupchat, this);\n        this.account = options.account;\n        if (_attrs.avatar) {\n            _attrs.image = _attrs.avatar;\n            delete _attrs.avatar;\n        }\n        let attrs = _.clone(_attrs);\n        if (attrs.resource) {\n            attrs.full_jid = attrs.jid + '/' + attrs.resource;\n        } else if (attrs.group_chat) {\n            attrs.full_jid = attrs.jid + '/Group';\n        }\n        (this.account && this.account.domain === attrs.jid) && _.extend(attrs, {server: true, status: 'online'});\n        attrs.name = attrs.roster_name || attrs.name || attrs.jid;\n        if (!attrs.image) {\n            attrs.photo_hash = \"\";\n            attrs.image = Images.getDefaultAvatar(attrs.name);\n        }\n        if (this.account.blocklist.isBlocked(attrs.jid))\n            attrs.blocked = true;\n        this.cached_image = Images.getCachedImage(attrs.image);\n        attrs.vcard = utils.vcard.getBlank(attrs.jid);\n        this.set(attrs);\n        this.onChangedGroupchat();\n        this.domain = Strophe.getDomainFromJid(this.get('jid'));\n        !this.get('group_chat') && this.account && this.account.chat_settings && this.set('group_chat', _.contains(this.account.chat_settings.get('group_chat'), this.get('jid')));\n        this.hash_id = env.b64_sha1(this.account.get('jid') + '-' + attrs.jid);\n        this.resources = new xabber.ContactResources(null, {contact: this});\n        this.on(\"update_avatar\", this.updateAvatar, this);\n        this.on(\"change:full_jid\", this.updateCachedInfo, this);\n        this.on(\"change:name\", this.updateCachedInfo, this);\n        this.on(\"change:roster_name\", this.updateName, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.account.dfd_presence.done(() => {\n            if (!this.get('blocked') && !this.get('vcard_updated') && !attrs.is_deleted)\n                this.getVCard();\n        });\n    },\n\n    getStatusMessage: function () {\n        let subscription = this.get('subscription'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_text = \"\";\n        if (this.get('blocked'))\n            status_text = xabber.getString(\"action_contact_blocked\");\n        else if (this.get('group_chat')) {\n            if (this.get('group_info')) {\n                if (this.get('group_info').members_num)\n                    status_text += xabber.getQuantityString(\"contact_groupchat_status_member\", this.get('group_info').members_num);\n                if (this.get('group_info').online_members_num > 0)\n                    status_text += xabber.getString(\"contact_groupchat_status_online\", [this.get('group_info').online_members_num || 0]);\n            } else if (!subscription)\n                status_text = xabber.getString(\"contact_state_no_subscriptions\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        } else {\n            if (subscription === 'from') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else\n                    status_text = xabber.getString(\"chat_receives_presence_updates\");\n            } else if (subscription === 'none') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else if (in_request)\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n                else\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n            }\n            else if (!subscription)\n                status_text = xabber.getString(\"contact_state_not_in_contact_list\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        }\n        return status_text;\n    },\n\n    getSubscriptionStatuses: function () {\n        let subscription = this.get('subscription'),\n            subscription_preapproved = this.get('subscription_preapproved'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_description = \"\",\n            status_out_color = \"\",\n            status_in_color = \"\",\n            status_out_text = \"\",\n            status_in_text = \"\";\n        if (this.get('blocked'))\n            status_out_text = xabber.getString(\"action_contact_blocked\");\n        if (subscription === 'both') {\n            status_out_text = xabber.getString(\"subscription_status_out_to\");\n            status_in_text = xabber.getString(\"subscription_status_in_from\");\n            status_description = xabber.getString(\"subscription_status_description_both\");\n        }\n        else if (subscription === 'from') {\n            if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_from\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_from\");\n            }\n        }\n        else if (subscription === 'to') {\n            if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_to_in_allowed\");\n                }\n            }\n        } else if (subscription === 'none') {\n            if (out_request && in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_request_incoming\");\n            }\n            else if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_request_in_allowed\");\n                }\n            }\n            else if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_none_in_allowed\");\n                }\n            }\n        }\n        else if (!subscription)\n            status_out_text = xabber.getString(\"contact_add\");\n\n        if (out_request)\n            status_out_color = \"request\";\n        if (in_request)\n            status_in_color = \"request\";\n        if (subscription === 'to')\n            status_out_color = \"subbed\";\n        if (subscription === 'from')\n            status_in_color = \"subbed\";\n        if (subscription === 'both') {\n            status_out_color = \"subbed\";\n            status_in_color = \"subbed\";\n        }\n        return {\n            status_out: status_out_text,\n            status_in: status_in_text,\n            status_out_color: status_out_color,\n            status_in_color: status_in_color,\n            status_description: status_description,\n        };\n    },\n\n    getIcon: function () {\n        if (this.get('blocked'))\n            return 'blocked';\n        if (this.get('invitation'))\n            return 'group-invite';\n        if (this.get('group_chat')) {\n            if (this.get('jid').includes('redmine_issue_'))\n                return 'task';\n            if (this.get('private_chat'))\n                return 'group-private';\n            if (this.get('incognito_chat'))\n                return 'group-incognito';\n            return 'group-public';\n        }\n        if (this.get('server'))\n            return 'server';\n        if (this.get('bot'))\n            return 'bot';\n        return;\n    },\n\n    updateAvatar: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            if (cached_info && this.get('photo_hash') === cached_info.photo_hash)\n                return;\n            this.getVCard();\n        });\n    },\n\n    getVCard: function (callback) {\n        let jid = this.get('jid'),\n            is_callback = _.isFunction(callback);\n        this.account.getConnectionForIQ().vcard.get(jid,\n             (vcard) => {\n                if (vcard.group_info) {\n                    let group_info = this.get('group_info') || {};\n                    group_info = _.extend(group_info, vcard.group_info);\n                    this.set({group_info});\n                    delete vcard.group_info;\n                }\n                let attrs = {\n                    vcard: vcard,\n                    vcard_updated: moment.now(),\n                    name: this.get('roster_name')\n                };\n                if (!attrs.name) {\n                    if (this.get('group_chat'))\n                        attrs.name = vcard.nickname || this.get('name');\n                    else\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                }\n                if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                    if (vcard.photo.image) {\n                        attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                        attrs.image = vcard.photo.image;\n                    }\n                    else\n                        attrs.image = Images.getDefaultAvatar(attrs.name);\n                    this.cached_image = Images.getCachedImage(attrs.image);\n                }\n                this.set(attrs);\n                is_callback && callback(vcard);\n            },\n            function () {\n                is_callback && callback(null);\n            }\n        );\n    },\n\n    updateCachedInfo: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            cached_info = cached_info || {};\n            let roster_info = {\n                jid: this.get('jid'),\n                in_roster: !_.isUndefined(this.get('in_roster')) ? this.get('in_roster') : cached_info.in_roster,\n                groups: this.get('groups'),\n                subscription: !_.isUndefined(this.get('subscription')) ? this.get('subscription') : cached_info.subscription,\n                roster_name: !_.isUndefined(this.get('roster_name')) ? this.get('roster_name') : cached_info.roster_name,\n                subscription_request_out: this.get('subscription_request_out'),\n                subscription_request_in: this.get('subscription_request_in'),\n                name: this.get('name'),\n                vcard_updated: this.get('vcard_updated')\n            }, full_jid = this.get('full_jid');\n            if (this.get('photo_hash') || this.get('image'))\n                _.extend(roster_info, {\n                    photo_hash: (this.get('photo_hash') || this.account.getAvatarHash(this.get('image'))),\n                    avatar_priority: this.get('avatar_priority'),\n                    avatar: this.get('image')\n                });\n            if (full_jid)\n                roster_info.resource = Strophe.getResourceFromJid(full_jid);\n            this.account.cached_roster.putInRoster(roster_info);\n        });\n    },\n\n    onChangedGroupchat: function () {\n        if (this.get('group_chat') && this.get('removed')) {\n            xabber.error(\"removed contact became groupchat\")\n        }\n        if (this.get('group_chat')) {\n            this.updateCounters();\n            this.participants = new xabber.Participants(null, {contact: this});\n        }\n    },\n\n    onDestroy: function () {\n        if (this.account && this.account.groupchat_settings && this.participants) {\n            this.participants.reset();\n            this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n        }\n    },\n\n    getBlockedParticipants: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.get('full_jid') || this.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#block'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    updateCounters: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    getLastSeen: function() {\n        if (this.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.get('jid'))) {\n                this.set({status_message: 'Server'});\n                return;\n            }\n            let iq = $iq({type: 'get', to: this.get('jid') }).c('query', {xmlns: Strophe.NS.LAST});\n            this.account.sendIQFast(iq, (iq) => {\n                let last_seen = this.getLastSeenStatus(iq);\n                if (this.get('status') == 'offline')\n                    this.set({status_message: last_seen});\n                return this;\n            });\n        }\n    },\n\n    getMyInfo: function (callback) {\n        this.participants.participantsRequest({id: '', properties: true}, (response) => {\n            let $item = $($(response).find('query user')),\n                cached_avatar = this.account.chat_settings.getAvatarInfoById($item.find('id').text());\n            $item.length && this.participants && this.participants.createFromStanza($item, {my_info: true});\n            cached_avatar && (cached_avatar.avatar_hash == this.my_info.get('avatar')) && this.my_info.set('b64_avatar', cached_avatar.avatar_b64);\n            this.trigger('update_my_info');\n            this.participants.participantsRequest({id: ''}, (response) => {\n                let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                this.my_rights = data_form;\n                this.trigger('permissions_changed');\n                callback && callback();\n            });\n        });\n    },\n\n    getAvatar: function (avatar, node, callback, errback) {\n        let jid = this.get('group_chat') ? this.get('full_jid') : this.get('jid'),\n            iq_request_avatar = $iq({type: 'get', to: jid})\n            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n            .c('items', {node: node})\n            .c('item', {id: avatar});\n        this.account.sendIQFast(iq_request_avatar, (iq) => {\n            let pubsub_avatar = $(iq).find('data').text();\n            if (pubsub_avatar == \"\")\n                errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n            else\n                callback && callback(pubsub_avatar);\n        });\n    },\n\n    pubAvatar: function (image, node, callback, errback) {\n        let avatar_hash = sha1(image.base64),\n            iq_pub_data = $iq({type: 'set', to: this.get('jid') })\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA + node})\n                .c('item', {id: avatar_hash})\n                .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(image.base64),\n            iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                .c('item', {id: avatar_hash})\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n        this.account.sendIQFast(iq_pub_data, () => {\n                this.account.sendIQFast(iq_pub_metadata, () => {\n                        callback && callback(avatar_hash);\n                    },\n                    function (data_error) {\n                        errback && errback(data_error);\n                    });\n            }, (data_error) => {\n                errback && errback(data_error);\n            });\n    },\n\n    getLastSeenStatus: function(iq) {\n        let seconds = $(iq).children('query').attr('seconds'),\n            message_time = moment.now() - 1000*seconds;\n        this.set({ last_seen: message_time });\n        return xabber.pretty_last_seen(seconds);\n    },\n\n    pres: function (type) {\n        let pres = $pres({to: this.get('jid'), type: type});\n        this.account.sendPres(pres);\n        return this;\n    },\n\n    pushInRoster: function (attrs, callback, errback) {\n        attrs || (attrs = {});\n        let name = attrs.name || this.get('roster_name'),\n            groups = attrs.groups || this.get('groups');\n        let iq = $iq({type: 'set'})\n            .c('query', {xmlns: Strophe.NS.ROSTER})\n            .c('item', {jid: this.get('jid'), name: name});\n        _.each(groups, function (group) {\n            iq.c('group').t(group).up();\n        });\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('known', true);\n        this.set('removed', false);\n        return this;\n    },\n\n    removeFromRoster: function (callback, errback) {\n        if (!this.get('removed')){\n            let iq = $iq({type: 'set'})\n                .c('query', {xmlns: Strophe.NS.ROSTER})\n                .c('item', {jid: this.get('jid'), subscription: \"remove\"});\n            this.account.cached_roster.removeFromRoster(this.get('jid'));\n            this.account.sendIQFast(iq, callback, errback);\n            this.set('known', false);\n            this.set('removed', true);\n            if (this.get('group_chat')){\n                this.set('group_chat', false);\n                this.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n            }\n        }\n        return this;\n    },\n\n    acceptRequest: function (callback) {\n        this.pres('subscribed');\n        callback && callback();\n    },\n\n    askRequest: function (callback) {\n        this.pres('subscribe');\n        callback && callback();\n    },\n\n    blockRequest: function (callback) {\n        this.block(callback);\n    },\n\n    declineRequest: function (callback) {\n        this.pres('unsubscribed');\n        this.removeFromRoster(callback);\n    },\n\n    declineSubscription: function () {\n        this.pres('unsubscribe');\n        this.set('subscription_request_out', false);\n    },\n\n    declineSubscribe: function () {\n        this.pres('unsubscribed');\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', false)\n    },\n\n    deleteWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            header = is_group ? xabber.getString(\"group_remove\") : xabber.getString(\"remove_contact\"),\n            msg_text = is_group ? xabber.getString(\"group_remove_confirm\", [this.get('name').bold()]) : xabber.getString(\"contact_delete_confirm_short\", [this.get('name').bold()]),\n            optional_buttons = is_group ? null : [{ name: 'delete_history', checked: false, text: xabber.getString(\"delete_contact__label_delete_history\")}];\n        utils.dialogs.ask(header, msg_text, optional_buttons, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (is_group) {\n                    let domain = this.domain,\n                        localpart = Strophe.getNodeFromJid(this.get('jid')),\n                        iq = $iq({to: domain, type: 'set'})\n                            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#delete`}).t(localpart);\n                    this.account.sendIQFast(iq, () => {\n                        this.declineSubscription();\n                        let chat = this.account.chats.getChat(this);\n                        this.removeFromRoster();\n                        chat.trigger(\"close_chat\");\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    });\n                } else {\n                    let chat = this.account.chats.getChat(this);\n                    this.removeFromRoster();\n                    if (result.delete_history) {\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    }\n                    xabber.trigger(\"clear_search\");\n                }\n            }\n        });\n    },\n\n    blockWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            contact = this,\n            header = is_group ? xabber.getString(\"block_group__header\") : xabber.getString(\"contact_block\"),\n            buttons = { ok_button_text: xabber.getString(\"contact_bar_block\")},\n            msg_text = xabber.getString(\"block_contact_confirm_short\", [this.get('name').bold()]);\n        if (!is_group) {\n            buttons.optional_button = xabber.getString(\"contact_block_and_delete\");\n            msg_text += `\\n${xabber.getString(\"block_contact_warning\", [this.get('jid')])}`;\n        }\n        utils.dialogs.ask(header, msg_text, null, buttons).done(function (result) {\n            if (result) {\n               if (!is_group) {\n                    let chat = contact.account.chats.getChat(contact);\n                    if (result === 'block & delete') {\n                        contact.removeFromRoster();\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        chat.set('active', false);\n                    }\n                }\n                contact.blockRequest();\n                xabber.trigger(\"clear_search\");\n                if (!is_group)\n                    xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n            }\n        });\n    },\n\n    unblockWithDialog: function () {\n        let contact = this;\n        utils.dialogs.ask(xabber.getString(\"chat_settings__button_unblock_contact\"), xabber.getString(\"unblock_contact_confirm_short\", [this.get('name')]), null, { ok_button_text: xabber.getString(\"contact_bar_unblock\")}).done(function (result) {\n            if (result) {\n                contact.unblock();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n    },\n\n    block: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', true);\n        this.set('known', false);\n    },\n\n    unblock: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', false);\n    },\n\n    setActiveStateSendInterval: function () {\n        let stanza = $msg({to: this.get('jid'), type: 'chat'}).c('active', {xmlns: Strophe.NS.CHATSTATES});\n        clearTimeout(this._sending_active_chatstate_timeout);\n        clearInterval(this._sending_active_chatstate_interval);\n        this._sending_active_chatstate_timeout = setTimeout(() => {\n            this._sending_active_chatstate_interval = setInterval(() => {\n                this.account.sendMsg(stanza);\n            }, constants.PRESENT_INTERVAL);\n        }, constants.PRESENT_INTERVAL)\n    },\n\n    handlePresence: function (presence) {\n        let $presence = $(presence),\n            type = presence.getAttribute('type'),\n            $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCARD_UPDATE}\"]`);\n        if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n            this.set('photo_hash', $vcard_update.find('photo').text());\n            this.trigger('update_avatar');\n        }\n        let $group_chat_info = $(presence).find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`);\n        if ($group_chat_info.length > 0 && $group_chat_info.children().length) {\n            this.set('full_jid', $presence.attr('from'));\n            if (!this.get('group_chat')) {\n                this.set('group_chat', true);\n                this.account.chat_settings.updateGroupChatsList(this.get('jid'), this.get('group_chat'));\n            }\n            if (this.details_view && !this.details_view.child('participants')) {\n                this.details_view = new xabber.GroupChatDetailsView({model: this});\n            }\n            let group_chat_info = this.parseGroupInfo($(presence)),\n                prev_group_info = this.get('group_info') || {};\n            if (this.details_view && this.details_view.isVisible() && group_chat_info.online_members_num != prev_group_info.online_members_num)\n                this.trigger('update_participants');\n            _.extend(prev_group_info, group_chat_info);\n            this.set('group_info', prev_group_info);\n            if (!this.get('roster_name') && (prev_group_info.name !== this.get('name')))\n                this.set('name', prev_group_info.name);\n            this.set({status: prev_group_info.status, status_updated: moment.now(), status_message: (prev_group_info.members_num + ' members' + xabber.getString(\"contact_groupchat_status_online\", [prev_group_info.online_members_num || 0]))});\n        }\n        if (type === 'subscribe') {\n            this.set('subscription_request_in', true);\n            if (this.get('subscription_preapproved')) {\n                this.pres('subscribed');\n            } else {\n                this.trigger('presence', this, 'subscribe');\n            }\n        } else if (type === 'subscribed') {\n            if (this.get('group_chat') && (this.get('subscription_request_out') || this.get('subscription') === 'to')) {\n\n            }\n            if (this.get('subscription') === 'to') {\n                // this.pres('subscribed');\n            }\n            this.trigger('presence', this, 'subscribed');\n        } else if (type === 'unsubscribe') {\n            this.set('subscription_request_in', false);\n            if (this.get('group_chat')) {\n                let chat = this.account.chats.getChat(this),\n                    sync_deleted = this.get('sync_deleted');\n                this.removeFromRoster();\n                if (!sync_deleted){\n                    chat.deleteFromSynchronization(() => {\n                        chat.trigger(\"close_chat\");\n                    }, () => {\n                        chat.trigger(\"close_chat\");\n                    });\n                } else {\n                    chat.trigger(\"close_chat\");\n                }\n            }\n        } else if (type === 'unsubscribed') {\n            this.set('subscription_request_out', false);\n            // this.trigger('presence', this, 'unsubscribed');\n        } else {\n            let jid = presence.getAttribute('from'),\n                resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                $status_message = $presence.find('status'),\n                status_message = $status_message.text();\n            _.isNaN(priority) && (priority = 0);\n            clearTimeout(this._reset_status_timeout);\n            let resource_obj = this.resources.get(resource);\n            if (type === 'unavailable') {\n                this.set({ last_seen: moment.now() });\n                resource_obj && resource_obj.destroy();\n            } else {\n                this.set({ last_seen: undefined });\n                let attrs = {\n                    resource: resource,\n                    priority: priority,\n                    status: status\n                };\n                $status_message.length && (attrs.status_message = status_message);\n                if (!resource_obj) {\n                    resource_obj = this.resources.create(attrs);\n                } else {\n                    resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n\n    parseGroupInfo: function ($presence) {\n        let jid = this.get('jid'),\n            $group_chat = $presence.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`),\n            name = $group_chat.find('name').text(),\n            $model = $group_chat.find('membership'),\n            status = $presence.children('show').text() || (($presence.attr('type') === 'unavailable') ? 'unavailable' : 'online'),\n            status_msg = $presence.children('status').text(),\n            privacy = $group_chat.find('privacy').text(),\n            $index = $group_chat.find('index'),\n            $description = $group_chat.find('description'),\n            pinned_message = Number($group_chat.find('pinned-message').text()),\n            prev_pinned_message = this.get('pinned_message') ? this.get('pinned_message').get('stanza_id') : 0,\n            private_chat = $group_chat.find('parent-chat').text() || false,\n            members_num = Number($group_chat.find('members').text()),\n            $online_members_num = $group_chat.find('present'),\n            info = {jid, name, status_msg, privacy, status, members_num};\n        $index.length && (info.searchable = $index.text());\n        $model.length && (info.model = $model.text());\n        $description.length && (info.description = $description.text());\n        $online_members_num.length && (info.online_members_num = Number($online_members_num.text()));\n        private_chat && this.set('private_chat', private_chat);\n        privacy === 'incognito' && this.set('incognito_chat', true);\n        let chat = this.account.chats.get(this.hash_id), pinned_msg_elem;\n        if ($group_chat.find('pinned-message').length) {\n            if (prev_pinned_message != pinned_message) {\n                if (chat) {\n                    if (chat.item_view && !chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    pinned_msg_elem = chat.item_view.content.$pinned_message;\n                }\n                if (pinned_msg_elem) {\n                    if (pinned_message) {\n                        this.getMessageByStanzaId(pinned_message, ($message) => {\n                            this.parsePinnedMessage($message, pinned_msg_elem);\n                        });\n                    }\n                    else {\n                        this.set('pinned_message', undefined);\n                        this.parsePinnedMessage(undefined, pinned_msg_elem);\n                    }\n                }\n            }\n        }\n        return info;\n    },\n\n    getAllRights: function (callback) {\n        let iq_get_rights = $iq({type: 'get', to: this.get('full_jid') || this.get('jid') })\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights` });\n        this.account.sendIQFast(iq_get_rights, (iq_all_rights) => {\n            let all_permissions = $(iq_all_rights).find('permission'),\n                all_restrictions = $(iq_all_rights).find('restriction');\n            this.all_rights = {permissions: all_permissions, restrictions: all_restrictions};\n            callback && callback();\n        });\n    },\n\n    getMessageByStanzaId: function (stanza_id, callback, options) {\n        options = options || {};\n        let queryid = uuid(),\n            account = this.account,\n            is_fast = account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            receiver = this.get('group_chat') ? this.get('full_jid') || this.get('jid') : this.account.get('jid'),\n            iq = $iq({type: 'set', to: receiver})\n                .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                .c('value').t(Strophe.NS.MAM).up().up()\n                .c('field', {'var': 'ids'})\n                .c('value').t(stanza_id).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            if (options.encrypted){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n        }\n        let handler = conn.addHandler((message) => {\n            let $msg = $(message);\n            if ($msg.find('result').attr('queryid') === queryid)\n                callback && callback($msg);\n            return true;\n        }, Strophe.NS.MAM);\n        this.account.sendIQFast(iq, () => {\n                conn.deleteHandler(handler);\n            }, () => {\n                conn.deleteHandler(handler);\n            }\n        );\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            contact = this,\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            if (options.encrypted){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n            iq.c('field', {'var': `with-tags`});\n            if (options.filter_image)\n                iq.c('value').t('image').up();\n            if (options.filter_video)\n                iq.c('value').t('video').up();\n            if (options.filter_voice)\n                iq.c('value').t('voice').up();\n            if (options.filter_files)\n                iq.c('value').t('document').up();\n            iq.up();\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let handler = conn.addHandler(function (message) {\n                if ((contact && is_groupchat == contact.get('group_chat'))) {\n                    let $msg = $(message);\n                    if ($msg.find('result').attr('queryid') === queryid) {\n                        messages.push(message);\n                    }\n                }\n                else {\n                    messages = [];\n                    success = false;\n                }\n                return true;\n            }, Strophe.NS.MAM);\n            let callb = function (res) {\n                    conn.deleteHandler(handler);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                    if ($fin.length && $fin.attr('queryid') === queryid) {\n                        let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                        rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                        callback && callback(success, messages, rsm);\n                    }\n                },\n                errb = function (err) {\n                    conn.deleteHandler(handler);\n                    xabber.error(\"MAM error\");\n                    xabber.error(err);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    errback && errback(err);\n                };\n            if (is_fast)\n                account.sendFast(iq, callb, errb);\n            else\n                account.sendIQ(iq, callb, errb);\n        });\n    },\n\n    getFilesFromStanza: function ($message, options) {\n        $message = options && options.cached_message? $message.find('content') : $message.find('message')\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n            items = [], cached_stanza_id;\n        options && options.cached_stanza_id && (cached_stanza_id = options.cached_stanza_id);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type');\n            if (type === 'mutable') {\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        uniqueid: $message.attr('id') || cached_stanza_id ,\n                        id: $file.children('gallery-id').text(),\n                        created_at: $file.children('created').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        media_type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        file_attrs.has_encrypted_files = true;\n                    }\n                    items.push(file_attrs);\n                }\n            }\n        });\n        return items\n    },\n\n    parsePinnedMessage: function ($message, pinned_msg_elem) {\n        if (!$message) {\n            this.renderPinnedMessage(null, pinned_msg_elem);\n        }\n        else {\n            let $msg = $message.find('result message').first();\n            if (this.get('pinned_message'))\n                if (this.get('pinned_message').stanza_id === $msg.find('stanza-id').attr('id'))\n                    return;\n            let message = this.account.chats.receiveChatMessage($message, {pinned_message: true});\n            this.set('pinned_message', message);\n            this.renderPinnedMessage(message, pinned_msg_elem);\n        }\n    },\n\n    renderPinnedMessage: function (message, pinned_msg_elem) {\n        if (!message) {\n            pinned_msg_elem.html(\"\");\n            pinned_msg_elem.siblings('.chat-content').css({'height':'100%'});\n        }\n        else {\n            let images = message.get('images') || [],\n                files = message.get('files') || [],\n                locations = message.get('locations'),\n                fwd_message = message.get('forwarded_message'),\n                fwd_msg_author = null,\n                msg_text = _.escape(message.get('message'));\n            message.get('videos') && message.get('videos').length && (files = files.concat(message.get('videos')));\n            if (fwd_message) {\n                let user_info = fwd_message[0].get('user_info') || {};\n                if (msg_text) {\n                } else if (fwd_message.length > 1)\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", fwd_message.length);\n                else {\n                    msg_text = fwd_message[0].get('message') || fwd_message[0].get('forwarded_message') && xabber.getString(\"forwarded_messages_count_plural_0\", [fwd_message[0].get('forwarded_message').length]);\n                    fwd_msg_author = user_info.nickname || fwd_message[0].get('from_jid') || user_info.id;\n                }\n            }\n            if ((images && images.length) && (files && files.length))\n                msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__attachments\", [images.length + files.length])}</span>`;\n            else {\n                if (images && images.length) {\n                    if (images.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__images_plural_0\")}: </span>` + images[0].name;\n                    if (images.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__images\", images.length)}</span>`;\n                }\n                if (files && files.length) {\n                    if (files.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__files_plural_0\")}: </span>` + files[0].name + ' (' + files[0].size + ')';\n                    if (files.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__files\", files.length)}</span>`;\n                }\n            }\n            if (locations && locations.length) {\n                if (locations.length == 1)\n                    msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__locations_plural_0\")}</span>`;\n                if (locations.length > 1)\n                    msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length)}</span>`;\n            }\n            let participant_info = this.participants.get(message.get('user_info')),\n                participant_nickname = participant_info && participant_info.get('nickname') ? participant_info.get('nickname') : null;\n            let user_info = message.get('user_info') || {},\n                chat_content = this.account.chats.get(this.hash_id).item_view.content,\n                is_scrolled = chat_content.isScrolledToBottom(),\n                msg_author = participant_nickname || user_info.nickname || message.get('from_jid') || user_info.id,\n                pinned_msg = {\n                    author: msg_author,\n                    time: pretty_datetime(message.get('time')),\n                    message: msg_text,\n                    fwd_author: fwd_msg_author\n                },\n                pinned_msg_html = $(templates.group_chats.pinned_message(pinned_msg));\n            pinned_msg_elem.html(pinned_msg_html).emojify('.chat-msg-content', {emoji_size: 18});\n            let height_pinned_msg = pinned_msg_elem.height();\n            pinned_msg_elem.siblings('.chat-content').css({\n                'height': 'calc(100% - ' + height_pinned_msg + 'px)'\n            });\n            if (is_scrolled)\n                chat_content.scrollToBottom();\n            pinned_msg_elem.attr('data-uniqueid', message.get('unique_id'));\n        }\n    },\n\n    resetStatus: function (timeout) {\n        clearTimeout(this._reset_status_timeout);\n        this._reset_status_timeout = setTimeout(() => {\n            this.set({\n                status_updated: moment.now(),\n                status: 'offline',\n                status_message: ''\n            });\n        }, timeout || 5000);\n    },\n\n    searchByParticipants: function (query, callback) {\n        if (!this.participants.version) {\n            this.participants.participantsRequest({}, () => {\n                let participants_list = this.participants.search(query);\n                callback && callback(participants_list);\n            });\n        } else {\n            let participants_list = this.participants.search(query);\n            callback && callback(participants_list);\n        }\n    },\n\n    updateName: function () {\n        if (this.get('roster_name') && this.get('name') !== this.get('roster_name'))\n            this.set('name', this.get('roster_name'));\n    },\n\n    showDetails: function (screen) {\n        if (!this.details_view)\n            this.details_view = (this.get('group_chat')) ? new xabber.GroupChatDetailsView({model: this}) : new xabber.ContactDetailsView({model: this});\n        screen || (screen = 'contacts');\n        xabber.body.setScreen(screen, {right: 'contact_details', contact: this});\n    },\n\n    showDetailsRight: function (screen, options) {\n        let chat = this.account.chats.getChat(this),\n             scrolled_top_chats_view, scrolled_top_chat;\n        if (chat)\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            scrolled_top_chat = chat.item_view.content.getScrollTop()\n        if (xabber.chats_view)\n            scrolled_top_chats_view = xabber.chats_view.getScrollTop();\n        options = options || {};\n        if (!this.details_view_right && !options.encrypted)\n            this.details_view_right = (this.get('group_chat')) ? new xabber.GroupChatDetailsViewRight({model: this}) : new xabber.ContactDetailsViewRight({model: this});\n        if (!this.details_view_right_encrypted && options.encrypted)\n            this.details_view_right_encrypted = new xabber.ContactDetailsViewRight({model: this, encrypted: true});\n        screen || (screen = 'contacts');\n        if (xabber.body.screen.get('right_contact') && options.type != 'search' && options.type != 'members' && options.type != 'participant' && !options.right_saved) {\n            this.set('search_hidden', true)\n            xabber.body.setScreen(screen, {right_contact: '', contact: this});\n        }\n        else {\n            if (options.encrypted)\n                xabber.body.setScreen(screen, {right_contact: 'contact_details_encrypted', contact: this});\n            else\n                xabber.body.setScreen(screen, {right_contact: 'contact_details', contact: this});\n            if (this.details_view_right && this.details_view_right.contact_searched_messages_view){\n                this.details_view_right.contact_searched_messages_view.hideSearch();\n                if (options.type === 'search') {\n                    this.details_view_right.contact_searched_messages_view.clearSearch();\n                    this.details_view_right.showSearchMessages();\n                }\n                if (options.type === 'members') {\n                    this.details_view_right.$('.tabs:not(.participant-tabs) .list-variant[data-value=\"participants\"]').click()\n                }\n                this.details_view_right.onScroll()\n            }\n        }\n        if (scrolled_top_chat)\n            chat.item_view.content.scrollTo(scrolled_top_chat);\n        if (scrolled_top_chats_view)\n            xabber.chats_view.scrollTo(scrolled_top_chats_view);\n    },\n});\n\nxabber.SetGroupchatStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.group_chats.set_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\"\n    },\n\n    open: function (contact) {\n        this.contact = contact;\n        this.account = this.contact.account;\n        this.show();\n        this.getStatuses();\n    },\n\n    updateIcons: function () {\n        let ic_name = this.contact.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    highlightStatus: function (status) {\n        this.$(`.status-values li[data-value=\"${status}\"]`).addClass('active')\n            .siblings().removeClass('active');\n        this.updateIcons();\n    },\n\n    getStatuses: function () {\n        let iq_get_properties = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'get'})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`});\n        this.account.sendFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find('x[xmlns=\"' + Strophe.NS.DATAFORM + '\"]'));\n            let status_field = this.data_form.fields.find(field => field.var == 'status'),\n                options = (this.data_form.fields.find(field => field.var == 'status') || []).options || [];\n            if (!options.length || status_field.type == 'fixed') {\n                this.closeModal();\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                return;\n            }\n            this.renderStatuses(options);\n        }, () => {\n            this.closeModal();\n            utils.dialogs.error(xabber.getString(\"set_group_status__error__service_unavailable\"));\n            return;\n        });\n    },\n\n    renderStatuses: function (options) {\n        this.$('.status-values').html(\"\");\n        options.forEach((option) => {\n            let status = option,\n                status_field = this.data_form.fields.find(f => f.var == status.value);\n            if (status_field)\n                status.show = status_field.values[0];\n            else\n                status.show = status.value;\n            let $status_item = $(templates.group_chats.status_item({status}));\n            this.$('.status-values').append($status_item);\n        });\n        this.highlightStatus(this.contact.get('status'));\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value');\n        this.setStatus(status);\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    setStatus: function (status) {\n        if (!this.data_form || this.contact.get('group_info').status === status)\n            return;\n        let iq_set_status = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`}),\n            status_field = this.data_form.fields.find(field => field.var === 'status'),\n            idx = this.data_form.fields.indexOf(status_field);\n        status_field.values = [status];\n        this.data_form.fields[idx] = status_field;\n        iq_set_status = this.account.addDataFormToStanza(iq_set_status, this.data_form);\n        this.account.sendFast(iq_set_status);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ContactItemView = xabber.BasicView.extend({\n    className: 'roster-contact list-item',\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$el.attr({'data-id': uuid(), 'data-jid': this.model.get('jid')});\n        this.$('.jid').text(this.model.get('jid'));\n        this.interval_last;\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.selectView();\n        this.updateGroupChat();\n        this.updateIcon();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:subscription\", this.updateStatus, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatus, this);\n        this.model.on(\"change:private_chat\", this.updateIcon, this);\n        this.model.on(\"change:incognito_chat\", this.updateIcon, this);\n        this.model.on(\"change:bot\", this.updateIcon, this);\n        this.model.on(\"change:blocked\", this.onBlocked, this);\n        this.model.on(\"change:status_message\", this.updateStatusMsg, this);\n        this.model.on(\"change:last_seen\", this.lastSeenUpdated, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n    },\n\n    updateAvatar: function () {\n        this.$('.circle-avatar').setAvatar(this.model.cached_image, this.avatar_size);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n        this.$('.chat-icon').attr('data-status', this.model.get('status'));\n        this.$('.status-message').text(this.model.getStatusMessage());\n        if (this.model.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.model.get('jid'))) {\n                this.model.set({status_message: 'Server'});\n                return;\n            }\n            if (this.model.get('last_seen')) {\n            let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.model.set({ status_message: new_status });\n            }\n        }\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    selectView: function () {\n        if (this.model.get('group_chat')) {\n            this.$('.private-chat').addClass('hidden');\n            this.$('.group_chat').removeClass('hidden');\n        }\n    },\n\n    lastSeenUpdated: function () {\n        if (this.model.get('status') == 'offline' && this.model.get('last_seen') && _.isUndefined(this.interval_last)) {\n            this.interval_last = setInterval(() => {\n                let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                    new_status = xabber.pretty_last_seen(seconds);\n                this.model.set({ status_message: new_status });\n            }, 60000);\n        }\n        else\n        {\n            clearInterval(this.interval_last);\n        }\n    },\n\n    updateGroupChat: function () {\n        let is_group_chat = this.model.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.updateIcon();\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.chat-icon').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    updateStatusMsg: function() {\n        this.$('.status-message').text(this.model.getStatusMessage());\n    }\n});\n\nxabber.ContactItemRightView = xabber.ContactItemView.extend({\n    template: templates.contact_right_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_RIGHT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\",\n        \"mouseover\": \"showJid\",\n        \"mouseleave\": \"hideJid\",\n    },\n\n    showJid: function () {\n        if (this.$('.name').text() !== this.model.get('jid')) {\n            this.$('.status-message').addClass('hidden');\n            this.$('.jid').removeClass('hidden');\n        }\n    },\n\n    hideJid: function () {\n        this.$('.jid').addClass('hidden');\n        this.$('.status-message').removeClass('hidden');\n    },\n\n    clickOnItem: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    }\n});\n\nxabber.ContactItemLeftView = xabber.ContactItemView.extend({\n    template: templates.contact_left_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_LEFT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\"\n    },\n\n    __initialize: function () {\n        this.updateDisplayStatus();\n        this.updateBlockedState();\n        this.updateMutedState();\n        this.updateGroupChat();\n        this.model.on(\"change:display\", this.updateDisplayStatus, this);\n        this.model.on(\"change:blocked\", this.updateBlockedState, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateDisplayStatus: function () {\n        this.$el.switchClass('active', this.model.get('display'));\n    },\n\n    updateBlockedState: function () {\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n    updateMutedState: function () {\n        this.$('.muted-icon').hide();\n    },\n\n    clickOnItem: function () {\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    }\n});\n\nxabber.ContactResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.jid = options.contact.get('jid');\n        this.connection = options.contact.account.connection;\n        this.on(\"add change\", this.onResourceUpdated, this);\n        this.on(\"remove\", this.onResourceRemoved, this);\n    },\n\n    onResourceUpdated: function (resource) {\n        if (resource === this.first()) {\n            this.contact.set({\n                status_updated: moment.now(),\n                status: resource.get('status'),\n                status_message: resource.get('status_message')\n            });\n        }\n    },\n\n    onResourceRemoved: function () {\n        let attrs = {status_updated: moment.now()};\n        if (this.length) {\n            attrs.status = this.first().get('status');\n            attrs.status_message = this.first().get('status_message');\n        } else {\n            attrs.status = 'offline';\n            attrs.status_message = '';\n        }\n        this.contact.set(attrs);\n    }\n});\n\nxabber.ContactResourcesView = xabber.ResourcesView.extend({\n    onResourceAdded: function (resource) {\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactResourcesRightView = xabber.ResourcesView.extend({\n    className: 'modal main-modal resource-modal',\n\n    _initialize: function () {\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    open: function () {\n        if (this.model.length) {\n            this.$el.openModal({\n                ready: () => {\n                    this.$el.html('<svg class=\"details-icon mdi mdi-24px \"></svg><div class=\"resources-wrap\"></div>')\n                    this.$el.find('.details-icon').html(env.templates.svg['ic-jabber']())\n                    this.renderByInit();\n                },\n                // complete: () => {\n                //     this.$el.detach();\n                //     this.data.set('visible', false);\n                // }\n            });\n        }\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceRightView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .details-icon\": \"onClickIcon\"\n    }\n});\n\nxabber.ContactRightVCardView = xabber.VCardRightView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .info-wrap.more\": \"showVCard\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n});\n\nxabber.ContactDetailsView = xabber.BasicView.extend({\n    className: 'details-panel contact-details-panel',\n    template: templates.contact_details,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape\": \"openChat\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute\": \"changeNotifications\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n        \"change .subscription-info-wrap input\": \"onChangedSubscription\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.resources_view = this.addChild('resources',\n            xabber.ContactResourcesView, {model: this.model.resources,\n                el: this.$('.resources-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.model.on(\"change\", this.update, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.setButtonsWidth();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .contact-name').addClass('name-is-custom');\n        else\n            this.$('.main-info .contact-name').removeClass('name-is-custom');\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-delete').showIf(in_roster);\n        this.$('.btn-block-wrap i').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap)').switchClass('non-active', is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    // updateNotifications: function () {\n    //     let chat = this.account.chats.getChat(this.model);\n    //     this.$('.btn-mute').switchClass('mdi-bell-off', chat.get('muted'));\n    //     this.$('.btn-mute').switchClass('mdi-bell', !chat.get('muted'));\n    // },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    onChangedSubscription: function (ev) {\n        let contact = this.model,\n            $target = $(ev.target),\n            is_checked = $target.prop('checked');\n        if (is_checked) {\n            if ($target.attr('id') === \"outcoming-subscription\")\n                contact.askRequest();\n            else {\n                contact.set('subscription_preapproved', true);\n                contact.acceptRequest();\n            }\n        }\n        else {\n            if ($target.attr('id') === \"outcoming-subscription\")\n                contact.declineSubscription();\n            else\n                contact.declineSubscribe();\n        }\n    },\n\n    openChat: function (ev) {\n        if (ev && ($(ev.target).closest('.button-wrap').hasClass('non-active') || $(ev.target).closest('.button-wrap').length && this.model.get('blocked')))\n            return;\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        this.openChat();\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    changeNotifications: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return\n        let chat = this.account.chats.getChat(this.model);\n        chat.muteChat();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.ContactDetailsViewRight = xabber.ContactDetailsView.extend({\n    className: 'details-panel-right contact-details-panel',\n    template: templates.contact_details_right,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .list-variant\": \"changeList\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n    },\n\n    _initialize: function (options) {\n        this.encrypted = options.encrypted;\n        this.ps_container = this.$('.panel-content-wrap');\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model, options.encrypted && 'encrypted');\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        if (!this.encrypted){\n            this.contact_edit_view = this.addChild('edit', xabber.ContactEditView,\n                {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        }\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactRightVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        if (this.encrypted){\n            this.$('.btn-search-messages').remove()\n            this.$('.btn-edit').remove()\n            this.$('.btn-qr-code').remove()\n        }\n        this.updateChilds();\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.updateNotifications();\n        this.setButtonsWidth();\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.onScroll();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n    },\n\n    updateChilds: function () {\n        if (this.vcard_view && !this.model.get('vcard_hidden'))\n            this.vcard_view.hideVCard();\n        if (this.contact_edit_view && !this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.main-info').removeClass('fixed-scroll');\n        this.$('.main-info .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.bottom-block:not(.edit-bottom-block) .tabs').removeClass('fixed-scroll');\n        this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('roster_name') && this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.buttons-wrap.fixed-scroll').removeClass('hidden2');\n            this.$('.main-info').addClass('fixed-scroll');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.main-info .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.main-info .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.main-info .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.main-info .block-name').addClass('fade-out');\n        }\n        if (!this.$('.bottom-block:not(.edit-bottom-block)').hasClass('fixed-scroll') && bottom_block_scroll && bottom_block_scroll < 160\n            || this.$('.bottom-block:not(.edit-bottom-block)').hasClass('fixed-scroll') && bottom_block_scroll && bottom_block_scroll < 110) {\n            this.$('.bottom-block:not(.edit-bottom-block)').addClass('fixed-scroll');\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').addClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.main-info .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.main-info .block-name.second-text').removeClass('fade-out');\n            this.$('.main-info .block-name.second-text').text(this.$('.list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block:not(.edit-bottom-block)').removeClass('fixed-scroll');\n            this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-block-wrap .contact-btn').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap):not(.btn-search-messages)').switchClass('non-active', is_blocked);\n        this.$('.contact-mute-dropdown').hideIf(is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.chat.isMuted());\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop()-70},\n            200,\n            () => {\n                this.onScroll();\n                this.ps_container.animate(\n                    {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop()-70},\n                    0,\n                );\n        });\n        this.$('.header-buttons .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, encrypted: this.encrypted, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.GroupChatDetailsView = xabber.BasicView.extend({\n    className: 'details-panel groupchat-details-panel',\n    template: templates.group_chats.group_chat_details,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute\": \"changeNotifications\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"editDefaultRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .btn-escape\": \"openChat\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.participants = this.addChild('participants', xabber.ParticipantsView, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesView, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusView, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit = new xabber.DefaultRestrictionsView({model: this.model});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.updateList('participants');\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n        this.setButtonsWidth();\n        return this;\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .contact-name').addClass('name-is-custom');\n        else\n            this.$('.main-info .contact-name').removeClass('name-is-custom');\n    },\n\n    changeNotifications: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        let chat = this.account.chats.getChat(this.model);\n        chat.muteChat();\n    },\n\n    // updateNotifications: function () {\n    //     let chat = this.account.chats.getChat(this.model);\n    //     this.$('.btn-mute').switchClass('mdi-bell-off', chat.get('muted'));\n    //     this.$('.btn-mute').switchClass('mdi-bell', !chat.get('muted'));\n    // },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    editDefaultRestrictions: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active'))\n            this.default_restrictions_edit.open();\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                let chat = this.account.chats.getChat(contact);\n                contact.removeFromRoster();\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    },\n});\n\nxabber.GroupChatDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right groupchat-details-panel',\n    template: templates.group_chats.group_chat_details_right,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-clear-history-chat\": \"clearHistory\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"showRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .tabs:not(.participant-tabs) .list-variant\": \"changeList\",\n        \"click .edit-pictured-buttons .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model);\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        this.participants = this.addChild('participants', xabber.ParticipantsViewRight, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.contact_edit_view = this.addChild('edit', xabber.GroupEditView,\n            {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesViewRight, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusViewRight, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit_right = this.addChild('restrictions',\n            xabber.DefaultRestrictionsRightView,\n            {model: this.model, el: this.$('.restrictions-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.onScroll();\n        this.updateChilds();\n        this.updateNotifications();\n        this.updateList('participants');\n        this.setButtonsWidth();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n        return this;\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs.not-edit .indicator').remove();\n        this.$('.tabs.not-edit').tabs();\n        this.$('.tabs.not-edit .indicator').addClass('ground-color-500');\n    },\n\n    updateChilds: function () {\n        if (!this.model.get('vcard_hidden'))\n            this.group_chat_properties.hideVCard();\n        if (!this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n        if (!this.model.get('restrictions_hidden'))\n            this.default_restrictions_edit_right.hideRestrictions();\n        this.model.set('participant_hidden', true);\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    showRestrictions: function (ev) {\n        this.default_restrictions_edit_right.showRestrictions();\n    },\n\n    hideRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', true);\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'));\n        this.showEdit();\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.buttons-wrap.fixed-scroll').removeClass('hidden2');\n            this.$('.main-info').addClass('fixed-scroll');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (!this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').hasClass('fixed-scroll') && bottom_block_scroll && bottom_block_scroll < 160\n            || this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').hasClass('fixed-scroll') && bottom_block_scroll && bottom_block_scroll < 110) {\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').addClass('fixed-scroll');\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').addClass('fixed-scroll');\n            this.$('.main-info .buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').removeClass('fixed-scroll');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n            this.$('.main-info .buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clearHistory: function () {\n        if (this.chat && this.chat.item_view && this.chat.item_view.content && this.chat.item_view.content.head){\n            this.chat.item_view.content.head.clearHistory()\n        }\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                let chat = this.account.chats.getChat(contact);\n                contact.removeFromRoster();\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.main-info').removeClass('fixed-scroll');\n        this.$('.header-buttons .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').removeClass('fixed-scroll');\n        this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n        this.$('.main-info .buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        if (list_name != 'blocked' && list_name != 'invitations') {\n            this.$('.main-info .header-buttons .block-name.second-text').text($target.text())\n            this.$('.tabs').animate({scrollLeft: $target.position().left - 80}, 400);\n            this.ps_container.animate(\n                {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 70},\n                400,\n                () => {\n                    this.onScroll();\n                    this.ps_container.animate(\n                        {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 70},\n                        0,\n                    );\n                });\n        }\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            if (name === 'invitations' || name === 'blocked'){\n                this.$('.edit-wrap .tabs .list-variant a').removeClass('active');\n                this.$('.edit-wrap .tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            else {\n                this.$('.tabs.not-edit .list-variant a').removeClass('active');\n                this.$('.tabs.not-edit .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func, edit_view;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                edit_view = true;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                edit_view = true;\n                break;\n        };\n        if (constructor_func && edit_view)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-edit-wrap')[0]});\n        else if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    }\n});\n\nxabber.GroupChatStatusView = xabber.BasicView.extend({\n    template: templates.group_chats.group_status,\n    events: {\n        \"click .status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatStatusViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_status_right,\n    events: {\n        \"click .group-chat-status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.updateIcon()\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatPropertiesView = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties,\n\n    events: {\n        \"click .group-chat-properties .details-icon\": \"onClickIcon\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            if ($target_info.hasClass('searchable-info-wrap')) {\n                let label_name = $target_info.find('.label').first().text();\n                if (value_text === xabber.getString(\"groupchat_index_type_none\"))\n                    value_text += ' ' + label_name.toLowerCase();\n            }\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties_right,\n\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.hideMoreDescription();\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.update();\n        });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    hideMoreDescription: function (ev) {\n        if (!this.$('.vcard-wrap .info.description').hasClass('short')) {\n            this.$('.vcard-wrap .info.description').addClass('short');\n            this.$('.show-vcard').hideIf(false);\n        }\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesEditView = xabber.BasicView.extend({\n    className: 'modal dialog-modal group-chat-properties-edit',\n\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        \"click .btn-cancel\": \"close\",\n        \"change input\": \"updateSaveButton\",\n        \"keyup .property-wrap .text-field\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model;\n        this.model.on(\"change:name\", this.updateName, this);\n    },\n\n    open: function (data_form) {\n        this.data_form = data_form;\n        let all_fixed = this.data_form.fields.filter(f => f.type == 'fixed' || f.type == 'hidden').length == this.data_form.fields.length;\n        this.$el.html(templates.group_chats.group_chat_properties_edit({all_fixed: all_fixed, fields: data_form.fields, privacy: this.contact.get('incognito_group'), jid: this.model.get('jid')}));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('height', this.$el.height() - 115).perfectScrollbar({theme: 'item-list'});\n                this.updateScrollBar();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateName: function () {\n        this.$('.name-info-wrap').find('.name').find('.value').text(this.model.get('name'));\n    },\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('non-active'))\n            return;\n\n        let has_changes = false,\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            if (value !== new_value) {\n                let field_idx = this.data_form.fields.indexOf(field);\n                field.values = [new_value];\n                this.data_form.fields[field_idx] = field;\n                has_changes = true;\n            }\n        });\n\n        if (has_changes) {\n            iq = this.account.addDataFormToStanza(iq, this.data_form);\n            this.account.sendIQFast(iq, (result) => {\n                let $result  = $(result),\n                    group_info = _.clone(this.contact.get('group_info')),\n                    attrs = {\n                        name: $result.find('field[var=\"name\"] value').text(),\n                        searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                        model: $result.find('field[var=\"membership\"]').children('value').text(),\n                        description: $result.find('field[var=\"description\"] value').text(),\n                        status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n                this.$('button').addClass('non-active');\n                this.close();\n                _.extend(group_info, attrs);\n                this.model.set('group_info', group_info);\n            }, (error) => {\n                this.$('button').addClass('non-active');\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        } else\n            this.$('button').removeClass('non-active');\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            (value !== new_value) && (has_changes = true);\n        });\n        this.$('.btn-save').switchClass('non-active', !has_changes);\n    }\n\n});\n\nxabber.InvitationsView = xabber.BasicView.extend({\n    events: {\n    },\n    status: 'invitations',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.contact.participants.on(\"participants_updated\", this._render, this);\n        this.contact.on(\"invitations_send\", this._render, this);\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateInvitations();\n    },\n\n    updateInvitations: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"groupchat_invitations\"))\n        this.parent.getInvitations((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').find('user').each((idx, item) => {\n                let user = {jid: $(item).attr('jid'), status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').find('user').length)\n                this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showInviteButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user'),\n            member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    },\n\n    revokeInvitationByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    }\n});\n\nxabber.MediaBaseView = xabber.BasicView.extend({\n    status: 'base',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.participant = options.participant;\n        this.encrypted = options.encrypted;\n        this.account = this.contact.account;\n        this.chat = this.account.chats.getChat(this.contact, this.encrypted && 'encrypted');\n        this.temporary_items = []\n        this.parent.ps_container.on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onUpdatedScreen, this);\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.all_messages_loaded = false;\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({}, () => {\n                this.$el.html(\"<div class='gallery-files'></div>\");\n                this.updateMedia();\n            });\n        }\n    },\n\n    onScroll: function () {\n        if (!this.active)\n            return\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && this.last_rsm_message && !this.all_messages_loaded && !this.loading_messages){\n            this.loadMoreFiles();\n        }\n    },\n\n    onUpdatedScreen: function () {\n        let block_height = xabber.body.$el.height() - 350;\n        this.$el.css('min-height', `${block_height}px`);\n    },\n\n    updateForParticipant: function () {\n        this.delegateEvents({})\n        this.parent.ps_container.off('ps-scroll-up.mediagallery').off('ps-scroll-down.mediagallery').on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        this.$('.gallery-file').on('click', (ev) => {\n            this.onClickFile(ev);\n        });\n    },\n\n    getMediaFromDecryptedMessages: function () {\n\n        let dfd = new $.Deferred();\n\n        dfd.done(() => {\n            if (this.filter_type === 'filter_image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n            else if (this.filter_type === 'filter_video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n            else if (this.filter_type === 'filter_voice')\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n            else if (this.filter_type === 'filter_files')\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n            else\n                this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia();\n        }).fail(() => {\n            this.temporary_items = [];\n            this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia()\n        });\n\n        if (this.account.omemo && this.account.omemo.cached_messages){\n\n            let cached_messages = this.account.omemo.cached_messages.getMessages(this.contact);\n\n            for (let [key, value] of Object.entries(cached_messages)) {\n                let msg_items = this.contact.getFilesFromStanza($(value), {cached_message: true, cached_stanza_id: key});\n                if (msg_items.length)\n                    this.temporary_items = this.temporary_items.concat(msg_items);\n            }\n\n            if (this.temporary_items.length){\n\n                let filtered_items = [],\n                    items_count = 0;\n\n                this.temporary_items.forEach((item, idx) => {\n                    if (this.filter_type === 'filter_image' && constants.MIME_TYPES.image.includes(item.media_type) ||\n                        this.filter_type === 'filter_video' && constants.MIME_TYPES.video.includes(item.media_type) ||\n                        this.filter_type === 'filter_voice' && constants.MIME_TYPES.audio.includes(item.media_type) ||\n                        this.filter_type === 'filter_files' &&\n                        !(\n                            constants.MIME_TYPES.image.includes(item.media_type) ||\n                            constants.MIME_TYPES.video.includes(item.media_type) ||\n                            constants.MIME_TYPES.audio.includes(item.media_type)\n                        )){\n                        if (this.filter_type === 'filter_image' && item.sources && item.sources[0]){\n                            this.chat.messages.decryptFile(item.sources[0], item.key).then((result) => {\n                                item.sources[0] = result;\n                                item.thumbnail = null;\n                                filtered_items = filtered_items.concat([item]);\n                                items_count++;\n                                if (items_count === this.temporary_items.length){\n                                    this.temporary_items = filtered_items;\n                                    dfd.resolve();\n                                }\n                            });\n\n                        } else {\n                            filtered_items = filtered_items.concat([item]);\n                            items_count++;\n                        }\n                    } else\n                        items_count++;\n                    if (items_count === this.temporary_items.length){\n                        this.temporary_items = filtered_items;\n                        dfd.resolve();\n                    }\n                });\n            } else {\n                dfd.reject();\n            }\n        } else {\n            dfd.reject();\n        }\n\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.updateMedia(true);\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items;\n    },\n\n    encryptedFilesHandler: function () {\n        let files_count = 0;\n        this.temporary_items = this.filterEncryptedFiles();\n\n        if (this.temporary_items.length)\n            this.temporary_items.forEach((item, idx) => {\n                let source = item.sources[0];\n                if (!item.key){\n                    files_count++;\n                    return;\n                }\n                this.chat.messages.decryptFile(source, item.key).then((result) => {\n                    if (!this.active)\n                        return\n                    item.sources[0] = result\n                    files_count++;\n                    if (files_count === this.temporary_items.length) {\n                        this.updateEncryptedMedia()\n                        this.loading_messages = false;\n                    }\n                });\n            });\n        else {\n            this.updateEncryptedMedia()\n            this.loading_messages = false;\n            if (!this.all_messages_loaded){\n                this.loadMoreFiles();\n            }\n        }\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files').length && this.$el.html(\"<div class='gallery-files'></div>\");\n        this.updateMedia();\n    },\n\n    updateMedia: function (is_loaded) {\n        if (!this.active)\n            return;\n        if (this.temporary_items.length){\n            this.temporary_items.reverse();\n            this.temporary_items.forEach((item) => {\n                if (this.filter_type === 'filter_voice')\n                    item.true_voice = true;\n                let $gallery_file = $(templates.media_item({file: item, is_encrypted: this.encrypted, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                $gallery_file.appendTo(this.$('.gallery-files'));\n            });\n        }\n        this.temporary_items = [];\n        this.$('.gallery-files .gallery-empty').remove();\n        $(templates.media_items_empty()).appendTo(this.$('.gallery-files'));\n        if (this.filter_type === 'filter_image')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_images\")}`);\n        else if (this.filter_type === 'filter_video')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_videos\")}`);\n        else if (this.filter_type === 'filter_voice')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_voice_messages\")}`);\n        this.$('.gallery-files .preloader-wrapper').remove();\n    },\n\n    messagesFileRequest: function (query, callback) {\n        if (!this.active || this.loading_messages)\n            return;\n        let options = query || {},\n            queryid = uuid();\n        this.loading_messages = true;\n        !options.max && (options.max = xabber.settings.mam_messages_limit);\n        !options.after && !options.before && (options.before = '');\n        this.encrypted && (options.encrypted = this.encrypted)\n        this.parent.participant && (options.var = [{var: 'with', value: this.parent.participant.id}]);\n        this.contact.MAMRequest(options, (success, messages, rsm) => {\n            let messages_count = 0;\n            if (this.encrypted) {\n                if (messages.length)\n                    $(templates.preloader()).appendTo(this.$('.gallery-files'));\n                else {\n                    this.loading_messages = false;\n                    callback && callback();\n                    return;\n                }\n            }\n            $(messages).each((idx, message) => {\n                let $message = $(message),\n                    msg_items = [];\n                if (this.encrypted) {\n                    let deferred = new $.Deferred();\n                    deferred.done(($msg) => {\n                        msg_items = this.contact.getFilesFromStanza($msg);\n                        if (msg_items.length)\n                            this.temporary_items = this.temporary_items.concat(msg_items)\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.encryptedFilesHandler();\n                        }\n                    }).fail(() => {\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.all_messages_loaded = true;\n                            this.encryptedFilesHandler();\n                        }\n                    });\n                    this.account.omemo.receiveChatMessage($message, {\n                        searched_message: true,\n                        gallery: true,\n                        query: query\n                    }, deferred);\n                } else{\n                    msg_items = this.contact.getFilesFromStanza($message);\n                    this.account.chats.receiveChatMessage($message, {\n                        searched_message: true,\n                        query: query\n                    });\n                    if (msg_items.length)\n                        this.temporary_items = this.temporary_items.concat(msg_items)\n                }\n            });\n            if (!this.encrypted){\n                this.last_rsm_message = rsm.first;\n                if (!messages.length)\n                    this.all_messages_loaded = true;\n                this.loading_messages = false;\n                (this.filter_type === 'filter_files') && (this.temporary_items = this.temporary_items.filter(file => !(file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files)))));\n                if (!(this.temporary_items.length >= xabber.settings.mam_messages_limit) && this.filter_type === 'filter_files' && !this.all_messages_loaded) {\n                    this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, callback);\n                }else\n                    callback && callback();\n            }\n        }, () => {\n\n        });\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n        else if ($elem.hasClass('mdi-play') || $elem.children('.mdi-play').length) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n        else if ($elem.hasClass('mdi-pause') || $elem.children('.mdi-pause').length) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n        else if (!$elem.parents('.gallery-file-audio-container').length || $elem.closest('.audio-control-time').length) {\n            let $file = $elem.closest('.gallery-file');\n            this.parent.saveScrollBarOffset()\n            xabber.body.data.set('contact_details_view', this.parent)\n            this.chat.getMessageContext($file.data('uniqueid'), {searched_messages: true, encrypted: this.encrypted});\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').length && $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n});\n\nxabber.MediaImagesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.images .gallery-file\": \"onClickFile\",\n    },\n    status: 'image',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_image';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.images.grid').length && this.$el.html(\"<div class='gallery-files images grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n            this.updateMedia(true);\n        });\n    },\n\n});\n\nxabber.MediaVideosView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.videos .gallery-file\": \"onClickFile\",\n    },\n    status: 'video',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_video';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.videos.grid').length && this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaFilesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.files .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_files';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'));\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.files').length && this.$el.html(\"<div class='gallery-files files'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaVoiceView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.voice .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_voice'\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => item.voice)\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => item.voice);\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.voice').length && this.$el.html(\"<div class='gallery-files voice'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => item.voice)\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.BlockedView = xabber.BasicView.extend({\n    status: 'blocked',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateBlockedParticipants();\n    },\n\n    updateBlockedParticipants: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"group_settings__block_list__header\"))\n        this.contact.getBlockedParticipants((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').children().each((idx, item) => {\n                let jid = $(item).attr('jid') ? $(item).attr('jid') : $(item).text(),\n                    user = {jid: jid, status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').children.length)\n                this.$el.append(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showBlockButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    unblockUser: function (ev) {\n        let $member_item = $(ev.target).closest('.blocked-user'),\n            member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    unblockUserByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    blockId: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"contact_bar_block\"), xabber.getString(\"groupchat_dialog_block__text\"), {input_placeholder_value: xabber.getString(\"groupchat_dialog_block__input_placeholder\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let tag = result.includes('@') ? 'jid' : 'domain',\n                    iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                        .c(tag).t(result);\n                this.account.sendIQFast(iq, () => {\n                    this.updateBlockedParticipants()\n                }, function (err) {\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n            }\n        });\n    },\n});\n\nxabber.ParticipantsView = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_selector: '.members-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-block\": \"blockParticipant\",\n        \"click .btn-kick\": \"kickParticipant\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.$(this.ps_selector).perfectScrollbar(this.ps_settings);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.participant_properties_panel = new xabber.ParticipantPropertiesView({model: this.model});\n        this.updateParticipants();\n        this.$('.members-list-wrap').perfectScrollbar({theme: 'item-list'});\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.$el.find('.members-list-wrap tbody').html('');\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        $item_view.emojify('.badge', {emoji_size: 16});\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantsViewRight = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants_right_panel,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-kick\": \"kickParticipantDialog\",\n        \"click .btn-edit-member\": \"showParticipantPropertiesEdit\",\n        \"click .btn-mute\": \"kickParticipantDialog\",\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"change\", this.onParticipantsChanged, this);\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.participant_properties_panel = this.addChild('participant_properties_panel', xabber.ParticipantPropertiesViewRight, {model: this.model, el: this.parent.$('.participant-view-wrap')[0], parent: this.parent});\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.updateParticipants();\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    onParticipantsChanged: function () {\n        this.updateParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        if (this.$('.participants-search-form input').val())\n            this.searchParticipant();\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    let participant = this.participants.get($target.attr('data-id'));\n                    if (participant)\n                        participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    let participant = this.participants.get($target.attr('data-id'));\n                    participant.kick(() => {\n                        $target.remove();\n                        this.parent.updateScrollBar();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item_right(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    showParticipantPropertiesEdit: function (ev) {\n        let $target = $(ev.target),\n            participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n            this.participant_properties_panel.showNamePanel();\n            this.participant_properties_panel.changeBackButton();\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantPropertiesView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_rights,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .btn-cancel-changes\": \"close\",\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"click .participant-details-item:not(.unsubscribed) .nickname\": \"editNickname\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-block-participant\": \"block\",\n        \"click .btn-kick-participant\": \"kick\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.$el.openModal({\n            ready: () => {\n                this.$el.css('height', \"\");\n                if (($(window).height() * 0.1 + this.$el.height()) > $(window).height())\n                    this.$el.css('height', $(window).height() * 0.9);\n                this.$('.modal-content').css('max-height', 'calc(100% - ' + (64 + this.$('.header').height()) + 'px)');\n                this.scrollToTop();\n                this.updateSaveButton();\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n                this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n            },\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    render: function () {\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item(attrs));\n        this.$('.header').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.$('.content').perfectScrollbar({theme: 'item-list'});\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.participant-details-item[data-id=\"${participant_id}\"] .circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        this.$('.participant-details-item[data-id=\"'+ member.id +'\"]').emojify('.badge', {emoji_size: 18});\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            this.close();\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.circle-avatar').addClass('changed').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                            .removeClass('default-value')\n                            .text(moment(Number(attrs.expires)*1000).fromNow());\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                this.account.chats.openChat(contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (!this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-info .nickname').text(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.ParticipantPropertiesViewRight = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_details_right,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n\n    events: {\n        \"click .btn-back:not(.btn-top)\": \"close\",\n        \"click .btn-back.btn-top\": \"scrollToTopSmooth\",\n        'click .btn-edit-participant': 'showNamePanel',\n        'click .btn-back-name': 'hidePanel',\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-reset\": \"render\",\n        \"click .btn-reset-name\": \"resetPanel\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-kick-participant\": \"kickParticipantDialog\",\n        \"click .btn-set-visibility-wrap\": \"setVisibility\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat-participant\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        this.model.set('participant_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.updateSaveButton();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n        this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n    },\n\n    close: function () {\n        this.model.set('participant_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n            this.parent.onScroll();\n        };\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'));\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details_item_right(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item_right(attrs));\n        this.$('.participant-details-info-wrap').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.onScroll();\n        this.participant_name_field = new xabber.ParticipantNameRightWidget({\n            el: this.$('.edit-participant-name-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.participant_badge_field = new xabber.ParticipantBadgeRightWidget({\n            el: this.$('.edit-participant-badge-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.updateIndicator()\n        this.$('.participant-details-edit-wrap').hideIf(true);\n        this.$('.block-name:not(.second-text)').hideIf(true);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    showNamePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(false)\n        this.$('.btn-edit-participant').hideIf(true)\n        this.$('.parent-btn').hideIf(true)\n        this.$('.child-btn').hideIf(false)\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name:not(.second-text)').text(xabber.getString(\"groupchat_member_edit\"));\n        this.$('.block-name:not(.second-text)').hideIf(false);\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participant-details-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    changeBackButton: function () {\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n    },\n\n    hidePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(true)\n        this.$('.btn-edit-participant').hideIf(false)\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n        this.$('.block-name:not(.second-text)').hideIf(true);\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.onScroll();\n    },\n\n    resetPanel: function () {\n        this.participant_name_field.updateValue(true);\n        this.participant_badge_field.updateValue(true);\n        this.new_avatar = \"\";\n        this.updateMemberAvatar(this.participant);\n        this.updateSaveButton()\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block').position().top + this.ps_container.scrollTop() - 70},\n            400,\n            () => {\n                this.onScroll();\n                this.ps_container.animate(\n                    {scrollTop: this.$('.bottom-block').position().top + this.ps_container.scrollTop() - 70},\n                    0,\n                );\n            });\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, participant: true, el: this.$('.participants-details-media-wrap')[0]});\n        else\n            return;\n    },\n\n    changeName: function (value) {\n        this.updateSaveButton()\n    },\n\n    changeBadge: function (value) {\n        this.updateSaveButton()\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name.second-text').addClass('fade-out');\n        this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        this.$('.btn-back').removeClass('btn-top');\n        this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.bottom-block').removeClass('fixed-scroll');\n        this.$('.bottom-block .participants-search-form').removeClass('fixed-scroll');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 220) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').text(this.participant.get('nickname'));\n            this.$('.block-name.second-text').removeClass('fade-out');\n            this.$('.block-name:not(.second-text)').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 1) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.block-name.second-text').text('');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        let bottom_block_scroll\n        if (this.$('.bottom-block'))\n            bottom_block_scroll = this.$('.bottom-block').get(0).getBoundingClientRect().top;\n        if (!this.$('.bottom-block').hasClass('fixed-scroll') && bottom_block_scroll && bottom_block_scroll < 160\n            || this.$('.bottom-block').hasClass('fixed-scroll') && bottom_block_scroll && bottom_block_scroll < 110) {\n            this.$('.bottom-block').addClass('fixed-scroll');\n            this.$('.btn-back').addClass('btn-top');\n            this.$('.btn-back i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block .participants-search-form').addClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-back').removeClass('btn-top');\n            this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block').removeClass('fixed-scroll');\n            this.$('.bottom-block .participants-search-form').removeClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        $avatar.removeClass('changed');\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n            this.open(this.participant, this.data_form);\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.participant-details-edit-wrap .circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n        this.$('.participant-info').emojify('.participant-edit-badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n        this.$('.btn-save-user-rights').switchClass('fade-out', !has_changes);\n        this.$('.btn-edit-participant').switchClass('fade-out', has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.block-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').removeClass('btn-back').addClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').removeClass('btn-back-name').addClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.block-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.block-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').addClass('btn-back').removeClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').addClass('btn-back-name').removeClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.block-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    this.participant.block(() => {\n                            this.close();\n                            this.parent.participants._render();\n                        },\n                        (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    this.participant.kick(() => {\n                        this.close();\n                        this.parent.participants._render();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    setVisibility: function (ev) {\n            utils.dialogs.error('Feature not yet implemented')\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0 || field.values && field.label)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        if ($current_restriction.find('.select-timer .property-value').length)\n                            $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                                .removeClass('default-value')\n                                .text(moment(Number(attrs.expires)*1000).fromNow());\n                        else{\n                            $current_restriction.append($('<div class=\"select-timer\"/>'));\n                            $current_restriction.find('.select-timer').attr('data-value', attrs.expires)\n                                .text(moment(Number(attrs.expires)*1000).fromNow())\n                        }\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                this.account.chats.openChat(contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (this.actual_rights && !this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights && this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-name-input').val(),\n            new_badge = this.$('.participant-badge-input').val(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        if (Array.from(new_badge).length > 32)\n            utils.dialogs.error(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                has_changes = true;\n                iq_changes.c('badge').t(new_badge).up();\n            }\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                // this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.$(`.circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n                this.close();\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.EditBadgeView = xabber.BasicView.extend({\n    className: 'modal edit-badge',\n    template: templates.group_chats.badge_edit_view,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-save\": \"saveNewBadge\",\n        \"keydown .badge-text\": \"checkKey\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.participant = this.model.participant;\n        this.$el.openModal({\n            ready: () => {\n                if (this.participant.get('badge'))\n                    this.typeEmoticon(this.participant.get('badge'));\n                else\n                    this.$('.badge-text').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            $target.length && this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n        }});\n    },\n\n    saveNewBadge: function () {\n        let new_badge = this.$('.badge-text').getTextFromRichTextarea();\n        if (Array.from(new_badge).length > 32)\n            this.$('.modal-content .error').text(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                let iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                    .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`})\n                    .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: this.participant.get('id')})\n                    .c('badge').t(new_badge);\n                this.account.sendIQFast(iq_changes, () => {\n                    this.model.updateBadge(new_badge);\n                    this.close();\n                }, () => {\n                    this.$('.modal-content .error').text(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                })\n            }\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        let emoji_node = emoji.emojify({tag_name: 'span'}),\n            $textarea = this.$('.badge-text');\n        $textarea.focus().pasteHtmlAtCaret(emoji_node);\n    },\n\n    checkKey: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.saveNewBadge();\n        }\n    }\n\n});\n\nxabber.DefaultRestrictionsView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"close\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.hide.bind(this);\n            }\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('non-active');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('non-active', !has_changes);\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('non-active'))\n            return;\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.close();\n            }, (error) => {\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.close();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.DefaultRestrictionsRightView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions_right,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"hideRestrictions\",\n        \"click .btn-back\": \"hideRestrictions\",\n        \"click .btn-reset\": \"showRestrictions\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n        this.model.set('restrictions_hidden', true)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n    },\n\n    showRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', false);\n        this.update(() => {\n            this.$('.select-timer .dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n            this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n            this.updateSaveButton()\n        });\n    },\n\n    hideRestrictions: function (ev) {\n        this.parent.hideRestrictions();\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('fade-out');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('fade-out', !has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.restrictions-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.restrictions-header .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.restrictions-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.restrictions-header .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-default-restrictions-save').addClass('fade-out')\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            }, (error) => {\n\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.Participant = Backbone.Model.extend({\n    idAttribute: 'id',\n\n    initialize: function (_attrs, options) {\n        let attrs = _.clone(_attrs);\n        this.model = options.model;\n        this.contact = options.contact ? options.contact : this.model.contact;\n        this.account = this.contact.account;\n        this.on(\"change:avatar\", this.getBase64Avatar, this);\n        this.set(attrs);\n        this.getBase64Avatar();\n    },\n\n    getBase64Avatar: function () {\n        if (!this.get('id'))\n            return;\n        if (this.get('avatar')) {\n            let cached_info = this.account.chat_settings.getAvatarInfoById(this.get('id'));\n            if (cached_info) {\n                if (cached_info.avatar_hash == this.get('avatar')) {\n                    this.set('b64_avatar', cached_info.avatar_b64);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                    return;\n                }\n            }\n            if (this.get('avatar_url')){\n                this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), this.get('avatar_url'));\n                this.set('b64_avatar', this.get('avatar_url'));\n                (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n\n            } else {\n                let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + this.get('id');\n                this.contact.getAvatar(this.get('avatar'), node, (avatar) => {\n                    this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), avatar);\n                    this.set('b64_avatar', avatar);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                });\n\n            }\n        }\n    },\n\n    kick: function (callback, errback) {\n        let id = this.get('id'),\n            jid = this.get('jid'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('kick', {xmlns: Strophe.NS.GROUP_CHAT});\n        if (jid)\n            iq.c('jid').t(jid);\n        else\n            iq.c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, (err) => {\n            errback && errback(err);\n        });\n    },\n\n    block: function (callback, errback) {\n        let id = this.get('id'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, function (err) {\n            errback && errback(err);\n        });\n    }\n});\n\nxabber.Participants = Backbone.Collection.extend({\n    model: xabber.Participant,\n    comparator: 'nickname',\n\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.account = this.contact.account;\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid'));\n        this.getCachedParticipants();\n        this.contact.on(\"update_participants\", this.updateParticipants, this);\n        this.on(\"change:nickname\", this.sort, this);\n    },\n\n    updateVersion: function () {\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid')) || this.version;\n    },\n\n    getCachedParticipants: function () {\n        this.account.groupchat_settings.getParticipantsList(this.contact.get('jid')).forEach((participant) => {\n            this.mergeParticipant(participant);\n        });\n    },\n\n    mergeParticipant: function (attrs) {\n        if (typeof attrs !== \"object\")\n            attrs = {id: attrs};\n        let participant = this.get(attrs.id);\n        if (participant)\n            participant.set(attrs);\n        else {\n            participant = this.create(attrs, {model: this});\n        }\n        return participant;\n    },\n\n    resetParticipants: function () {\n        this.version = 0;\n        _.each(_.clone(this.models), function (participant) {\n            participant.destroy();\n        });\n    },\n\n    getRights: function (rights) {\n        let pretty_rights = [];\n        $(rights).each((idx, permission) => {\n            let name = $(permission).attr('name'),\n                pretty_name = $(permission).attr('translation'),\n                issued_time = $(permission).attr('issued-at'),\n                expires_time = $(permission).attr('expires');\n            pretty_rights.push({\n                name: name,\n                pretty_name: pretty_name,\n                issued_time: issued_time,\n                expires_time: expires_time\n            });\n        });\n        return pretty_rights;\n    },\n\n        updateParticipants: function () {\n            this.participantsRequest({version: this.version}, () => {\n                this.trigger(\"participants_updated\");\n                let chat = this.account.chats.getChat(this.contact);\n                if (chat.item_view) {\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.updatePinnedMessage()\n                }\n            });\n        },\n\n    participantsRequest: function (options, callback, errback) {\n        options = options || {};\n        let participant_id = options.id,\n            version = options.version || 0,\n            iq = $iq({to: this.contact.get('full_jid'), type: 'get'});\n        if (participant_id != undefined) {\n            if (options.properties)\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, id: participant_id});\n            else\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights`}).c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: participant_id});\n        }\n        else\n            iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, version: version});\n        this.account.sendFast(iq, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            version && (this.version = Number(version));\n            $response.find(`query user`).each((idx, item) => {\n                let $item = $(item),\n                    subscription = $item.find('subscription').text(),\n                    id = $item.attr('id');\n                if (subscription === 'none') {\n                    this.get(id) && this.get(id).destroy();\n                    this.account.groupchat_settings.removeParticipantFromList(this.contact.get('jid'), id);\n                    this.trigger(\"participants_updated\");\n                }\n                else\n                    this.createFromStanza($item);\n            });\n            callback && callback(response);\n        }, (error) => {\n            errback && errback(error);\n        });\n    },\n\n    search: function (query) {\n        let list = [];\n        this.models.forEach((participant) => {\n            let jid = participant.get('jid');\n            if (query) {\n                query = query.toLowerCase();\n                let nickname = participant.get('nickname');\n                if (jid && jid.toLowerCase().indexOf(query) > -1 || nickname && nickname.toLowerCase().indexOf(query) > -1)\n                    list.push(participant);\n            } else\n                list.push(participant);\n        });\n        return list;\n    },\n\n    createFromStanza: function ($item, options) {\n        let jid = $item.find('jid').text(),\n            nickname = $item.find('nickname').text(),\n            id = $item.attr('id'),\n            badge = $item.find('badge').text(),\n            present = $item.find('present').text(),\n            photo = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('id'),\n            photo_url = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('url'),\n            role = $item.find('role').text();\n        !nickname.trim().length && (nickname = jid || id);\n\n        let attrs = {\n            jid: jid,\n            id: id,\n            avatar: photo,\n            avatar_url: photo_url,\n            nickname: nickname,\n            badge: badge,\n            present: present,\n            role: role\n        };\n        (this.contact.get('incognito_chat') && options && options.my_info === true) && (attrs.jid = this.account.get('jid'));\n\n        let participant = this.mergeParticipant(attrs);\n        (this.account.get('jid') === participant.get('jid')) && (this.contact.my_info = participant) && this.contact.trigger('update_my_info');\n        this.account.groupchat_settings.updateParticipant(this.contact.get('jid'), attrs);\n        return participant;\n    }\n});\n\nxabber.GroupChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        participants_lists: []\n    },\n\n    getParticipantsListVersion: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result)\n            return result.version;\n        else\n            return 0;\n    },\n\n    setParticipantsListVersion: function (jid, version) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid),\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        if (!participants_list) {\n            participants_list = {jid: jid, participants_list: [], version: 0};\n        }\n        else\n            participants_list.version = version;\n        all_participants_lists.push(participants_list);\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    getParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result && result.participants_list)\n            return result.participants_list;\n        else\n            return [];\n    },\n\n    updateParticipant: function (jid, participant_info) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            chat_participants = all_participants_lists.find(list => list.jid === jid),\n            version = chat_participants && chat_participants.version || 0,\n            participants_list = chat_participants && chat_participants.participants_list || [],\n            participants_list_idx = all_participants_lists.indexOf(chat_participants);\n        if (participants_list.length) {\n            let participant = participants_list.find(participant_item => participant_item.id === participant_info.id),\n                participant_idx = participants_list.indexOf(participant);\n            if (participant_idx != -1)\n                participants_list[participant_idx] = participant_info;\n            else\n                participants_list.push(participant_info);\n        }\n        else\n            participants_list.push(participant_info);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        all_participants_lists.push({jid: jid, participants_list: participants_list, version: version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    setParticipantsList: function (jid, updated_participants_list) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid) || [],\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: updated_participants_list, version: participants_list.version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    removeParticipantFromList: function (jid, participant_id) {\n        let participants_list = this.getParticipantsList(jid);\n        if (participants_list.length) {\n            let participant_idx = participants_list.indexOf(participants_list.find(participant => participant.id === participant_id));\n            if (participant_idx != -1)\n                participants_list.splice(participant_idx, 1);\n            this.setParticipantsList(jid, participants_list);\n        }\n    },\n\n    resetParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list_idx = all_participants_lists.indexOf(all_participants_lists.find(list => list.jid === jid));\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: [], version: 0});\n        this.save('participants_lists', all_participants_lists);\n    }\n});\n\nxabber.GroupchatInvitationView = xabber.BasicView.extend({\n    className: 'details-panel invitation-view',\n    template: templates.group_chats.invitation,\n    ps_selector: '.panel-content',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-join\": \"join\",\n        \"click .btn-decline\": \"reject\",\n        \"click .btn-block\": \"blockContact\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$('.msg-text').text(options.message && options.message.get('message') ? options.message.get('message') : xabber.getString(\"groupchat__public_group__text_invitation\", [this.account.get('jid')]));\n        this.message = options.message;\n        this.model.on(\"change\", this.update, this);\n    },\n\n    render: function () {\n        this.model.set('visible', true);\n        this.updateAvatar();\n        this.updateName();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.model.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n    },\n\n    openChat: function () {\n        this.model.set('in_roster', true);\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    closeChat: function () {\n        let chat = this.account.chats.getChat(this.model);\n        chat.set({'opened': false, 'display': false, 'active': false, 'is_accepted': undefined});\n        xabber.body.setScreen('all-chats', { right: undefined });\n        chat.item_view.content.readMessages();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateName: function () {\n        this.$('.main-info  .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name-wrap') == this.model.get('jid')) {\n            this.$('.main-info .name-wrap').addClass('name-is-jid');\n            this.$('.main-info  .jid').text('');\n        }\n        else {\n            this.$('.main-info .name-wrap').removeClass('name-is-jid');\n            this.$('.main-info  .jid').text(this.model.get('jid'));\n        }\n    },\n\n    blockInvitation: function () {\n        if (this.account.connection && this.account.connection.do_synchronization)\n            return;\n        let contact_jid = this.model.get('jid'),\n            iq_get_blocking = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING}),\n            iq_unblocking = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING}),\n            iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.model.get('jid') + '/' + moment.now()});\n        this.account.sendIQFast(iq_get_blocking, (iq_blocking_items) => {\n            let items = $(iq_blocking_items).find('item');\n            if (items.length > 0) {\n                items.each(function (idx, item) {\n                    let item_jid = $(item).attr('jid');\n                    if (item_jid.indexOf(contact_jid) > -1)\n                        iq_unblocking.c('item', {jid: item_jid}).up();\n                });\n            }\n            if ($(iq_unblocking.nodeTree).find('item').length)\n                this.account.sendIQFast(iq_unblocking, () => {\n                    this.account.sendIQFast(iq_set_blocking);\n                });\n            else\n                this.account.sendIQFast(iq_set_blocking);\n        });\n    },\n\n    join: function () {\n        let contact = this.model;\n        contact.set('subscription_preapproved', true);\n        contact.pres('subscribed');\n        contact.set('known', true);\n        contact.set('removed', false);\n        setTimeout(() => {\n            contact.pres('subscribe');\n        }, 500);\n        this.blockInvitation();\n        contact.getMyInfo();\n        this.openChat();\n        contact.trigger('remove_invite', contact);\n        let chat = this.account.chats.getChat(this.model);\n    },\n\n    reject: function () {\n        let contact = this.model;\n        this.closeChat();\n        let iq = $iq({to: contact.get('full_jid') || contact.get('jid'), type: 'set'})\n            .c('decline', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`});\n        this.account.sendFast(iq, () => {}, () => {\n            contact.declineRequest();\n            this.blockInvitation();\n        });\n        contact.trigger('remove_invite', contact);\n    },\n\n    blockContact: function () {\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"contact_block\"), xabber.getString(\"block_contact_confirm\", [contact.get('name'), this.account.get('jid')]), null, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done(function (result) {\n            if (result) {\n                contact.trigger('remove_invite', contact);\n                contact.block();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n        this.blockInvitation();\n        this.closeChat();\n        contact.trigger('remove_invite', contact);\n    }\n});\n\nxabber.ContactNameWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    }\n});\n\nxabber.ContactNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n    template: templates.group_chats.group_name_input_widget,\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val()) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('roster_name'))\n                this.$input.val(this.model.get('roster_name'))\n        }\n        if (!this.model.get('roster_name'))\n            this.$value.addClass('name-is-default');\n        else\n            this.$value.removeClass('name-is-default');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    },\n});\n\nxabber.GroupNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                this.$input.val(this.model.get('group_info').name)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('nickname'))\n            name = this.model.get('nickname');\n        else\n            name = this.model.get('jid');\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('nickname'))\n                this.$input.val(this.model.get('nickname'))\n            if (force_reset)\n                this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        if (this.model.get('nickname'))\n            return this.model.get('nickname');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantBadgeRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-badge',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue(true);\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        this.parent.changeBadge(value);\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        if (force_reset) {\n            this.$input.val(value);\n            this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        let badge = _.escape(this.model.get('badge'));\n        return badge;\n    },\n\n    keyUp: function () {\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        this.changeValue();\n    },\n});\n\nxabber.GroupDescriptionRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-description',\n    template: templates.group_chats.description_input_widget,\n    placeholder: \"\",\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.parent.changeDescription(value);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').description)\n                name = this.model.get('group_info').description;\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n            if (force_reset && this.model.get('group_info'))\n                this.$input.val(this.model.get('group_info').description)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').description;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n        this.changeValue();\n    },\n});\n\nxabber.ContactEditGroupsView = xabber.BasicView.extend({\n    template: templates.groups,\n    events: {\n        'click .group': 'removeGroup',\n        'click .existing-group-field label': 'editGroup',\n        'change .new-group-name input': 'checkNewGroup',\n        'keyup .new-group-name input': 'checkNewGroup',\n        'click .new-group-checkbox': 'addNewGroup',\n        \"keyup #new-group-name\": \"keyupAddNewGroup\",\n        \"focusin #new-group-name\": \"focusinAddNewGroup\",\n        \"focusout #new-group-name\": \"focusoutAddNewGroup\",\n        \"keydown #new-group-name\": \"keydownAddNewGroup\",\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('groups_hidden', true)\n        this.model.on(\"change:in_roster update_groups\", this.onUpdate, this);\n    },\n\n    render: function (view, args) {\n        this.$el.html(this.template());\n        if (this.model.get('in_roster')) {\n            let groups = _.clone(this.model.get('groups')),\n                all_groups = _.map(this.account.groups.notSpecial(), function (group) {\n                    let name = group.get('name');\n                    return {name: name, checked: _.contains(groups, name), id: uuid()};\n                }),\n                all_groups_unchecked = all_groups.filter(function(group) {\n                    if (group.checked)\n                        return false;\n                    return true;\n                }).length;\n            if (all_groups_unchecked)\n                this.$('.groups-wrap').removeClass('empty-groups-wrap')\n            else\n                this.$('.groups-wrap').addClass('empty-groups-wrap')\n\n            this.$('.checkbox-list').html(templates.groups_checkbox_list({\n                groups: all_groups\n            })).appendTo(this.$('.groups-wrap'));\n            this.ps_container = this.$('.checkbox-list');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.scrollToTop();\n            if (groups.length)\n                this.$('.groups').html(templates.groups_list({\n                    groups: all_groups\n                })).appendTo(this.$('.groups-wrap-list'));\n            else\n                this.$('.groups').html('<div class=\"empty-groups\">'+ xabber.getString(\"contact_circles_empty\") + '</div>')\n            this.$('.groups').append(templates.groups_new_group());\n\n        }\n        this.$el.showIf(this.model.get('in_roster'));\n        if (args && args.on_add)\n            this.$('.groups-wrap').hideIf(false)\n        else\n            this.$('.groups-wrap').hideIf(true)\n        this.parent.updateScrollBar();\n    },\n\n    onUpdate: function (ev) {\n        if (this._update_template){\n            this.render(this, {on_add: true});\n            this.$('.new-group-name input').addClass('visible');\n            this.$('.new-group-name input').focus();\n        }\n        else{\n            this.render();\n            this.$('.new-group-name input').addClass('visible');\n        }\n\n    },\n\n    removeGroup: function (ev) {\n        let $target = $(ev.target).closest('.group'),\n            group_name = $target.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = false\n        this.model.pushInRoster({groups: groups});\n    },\n\n    removeLastGroup: function (ev) {\n        let groups = _.clone(this.model.get('groups'));\n        if (groups.length) {\n            groups.pop();\n            this._update_template = true\n            this.model.pushInRoster({groups: groups});\n        }\n    },\n\n    editGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            groups.push(group_name);\n        } else if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = true\n        this.model.pushInRoster({groups: groups});\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox');\n        $checkbox.showIf(name && !this.account.groups.get(name));\n    },\n\n    keyupAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_ENTER && name) {\n            this.addNewGroup();\n        }\n    },\n\n    keydownAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_BACKSPACE && !name) {\n            this.removeLastGroup();\n        }\n    },\n\n    focusinAddNewGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        this.$('.groups-wrap').hideIf(false)\n        this.$('.empty-groups').hideIf(true)\n    },\n\n    focusoutAddNewGroup: function (ev) {\n        this.$('.empty-groups').hideIf(false)\n        if (this.$('.new-group-name input').val())\n            this.addNewGroup();\n        this._hide_timeout = setTimeout(() => {\n            this.$('.new-group-name input').removeClass('visible');\n            this.$('.groups-wrap').hideIf(true)\n            this.$('.new-group-name input').val('')\n        }, 100)\n    },\n\n    addNewGroup: function () {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            groups.push(name);\n        }\n        this.model.pushInRoster({groups: groups});\n    }\n});\n\nxabber.ContactEditView = xabber.BasicView.extend({\n    template: templates.edit_contact,\n    events: {\n        'click .btn-back': 'hideEdit',\n        'click .btn-request': 'requestSubscription',\n        'click .btn-allow': 'allowSubscription',\n        'click .btn-cancel-request': 'cancelSubscriptionRequest',\n        'click .btn-allow-request': 'handleSubscriptionRequest',\n        'click .btn-disallow-request': 'cancelSubscriptionIn',\n        'click .btn-disallow-preapproved': 'cancelSubscriptionIn',\n        'click .btn-cancel-subscription-out': 'cancelSubscriptionOut',\n        'click .btn-cancel-subscription-in': 'cancelSubscriptionIn',\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on(\"change:status_updated\", this.updateStatuses, this);\n        this.model.on(\"change:subscription\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatuses, this);\n        this.model.on(\"change:blocked\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatuses, this);\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.name_field = new xabber.ContactNameRightWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.$('.status-out.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.status-in.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.updateStatuses();\n    },\n\n    showEdit: function () {\n        this.model.set('edit_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n    },\n\n    updateStatuses: function () {\n        let statuses = this.model.getSubscriptionStatuses(),\n            subscription_preapproved = this.model.get('subscription_preapproved');\n        if (statuses){\n            this.$('.status-out').addClass(statuses.status_out_class)\n            this.$('.status-out .value').text(statuses.status_out)\n            this.$('.status-out').showIf(statuses.status_out)\n            this.$('.status-in').addClass(statuses.status_in_class)\n            this.$('.status-in  .value').text(statuses.status_in)\n            this.$('.status-in').showIf(statuses.status_in)\n            this.$('.status-description .value').html(statuses.status_description)\n            this.$('.status-description').showIf(statuses.status_description)\n            this.$('.btn-delete').hideIf(!this.model.get('in_roster'));\n            if (statuses.status_out_color === 'request') {\n                this.$('.status-out').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'request') {\n                this.$('.status-in').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === 'subbed') {\n                this.$('.status-out').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'subbed') {\n                this.$('.status-in').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === '') {\n                this.$('.status-out').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-out').removeClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === '') {\n                this.$('.status-in').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-in').removeClass('text-decoration-color-300')\n            }\n            this.$('.btn-request').hideIf(!(statuses.status_out_color === ''))\n            this.$('.btn-allow').hideIf(!(statuses.status_in_color === '' && !subscription_preapproved))\n            this.$('.btn-disallow-preapproved').hideIf(!(statuses.status_in_color === '' && subscription_preapproved))\n            this.$('.btn-cancel-request').hideIf(!(statuses.status_out_color === 'request'))\n            this.$('.btn-allow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-disallow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-cancel-subscription-out').hideIf(!(statuses.status_out_color === 'subbed'))\n            this.$('.btn-cancel-subscription-in').hideIf(!(statuses.status_in_color === 'subbed'))\n        }\n    },\n\n    requestSubscription: function () {\n        this.model.askRequest();\n    },\n\n    allowSubscription: function () {\n        this.model.acceptRequest();\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', true)\n    },\n\n    cancelSubscriptionRequest: function () {\n        this.model.declineSubscription();\n    },\n\n    handleSubscriptionRequest: function () {\n        this.model.acceptRequest();\n    },\n\n    cancelSubscriptionOut: function () {\n        this.model.declineSubscription();\n    },\n\n    cancelSubscriptionIn: function () {\n        this.model.declineSubscribe();\n        this.model.set('subscription_request_in', false);\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.GroupEditView = xabber.BasicView.extend({\n    template: templates.edit_group,\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        'click .edit-header:not(.property-header) .btn-back': 'hideEdit',\n        'click .btn-reset': 'resetPanel',\n        'click .btn-edit': 'showDescriptionProperty',\n        'click .btn-back-panel': 'hidePanel',\n        'click .membership-field .property-radio input': 'changeMembership',\n        'click .index-field .property-radio input ': 'changeIndex',\n        'click .index-property:not(.property-disabled)': 'showIndexProperty',\n        'click .membership-property:not(.property-disabled)': 'showMembershipProperty',\n        'click .btn-back.btn-property-back': 'hideProperty',\n        \"click .list-variant\": \"showPanel\",\n        \"click .revoke-invitation\": \"revokeInvitation\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .participants-edit-wrap .list-item\": \"selectParticipant\",\n        \"click .unblock-user\": \"unblockUser\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-add-block\": \"blockId\",\n        \"keydown .field-input\": \"keyDownName\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on('change:group_info', this.update, this)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.property-dropdown').dropdown(dropdown_settings);\n        // this.name_field = new xabber.ContactNameRightWidget({\n        //     el: this.$('.name-wrap')[0],\n        //     model: this.model\n        // });\n        this.group_name_field = new xabber.GroupNameRightWidget({\n            el: this.$('.edit-group-name-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.group_description_field = new xabber.GroupDescriptionRightWidget({\n            el: this.$('.edit-group-description-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {},\n            model, searchable, privacy;\n        if (info){\n            if (info.privacy === 'public')\n                privacy = xabber.getString(\"groupchat_public_group\");\n            if (info.privacy === 'incognito')\n                privacy = xabber.getString(\"groupchat_incognito_group\");\n            if (info.searchable === 'none') {\n                searchable = xabber.getString(\"groupchat_index_type_none\");\n                this.$('.property-wrap #none').prop(\"checked\", true);\n            }\n            if (info.searchable === 'local') {\n                searchable = xabber.getString(\"groupchat_index_type_local\");\n                this.$('.property-wrap #local').prop(\"checked\", true);\n            }\n            if (info.searchable === 'global') {\n                searchable = xabber.getString(\"groupchat_index_type_global\");\n                this.$('.property-wrap #global').prop(\"checked\", true);\n            }\n            if (info.model === 'open') {\n                model = xabber.getString(\"groupchat_membership_type_open\");\n                this.$('.property-wrap #open').prop(\"checked\", true);\n            }\n            if (info.model === 'member-only') {\n                model = xabber.getString(\"groupchat_membership_type_members_only\");\n                this.$('.property-wrap #member-only').prop(\"checked\", true);\n            }\n        }\n        this.$('.main-edit-header .block-name:not(.second-text)').text(privacy);\n        this.$('.membership-property span').text(model);\n        this.$('.index-property span').text(searchable);\n        this.$('.edit-group-name').text(info.name);\n        this.$('.edit-group-description').text(info.description);\n        this.group_name_field && this.group_name_field.updateValue(true);\n        this.group_description_field && this.group_description_field.updateValue(true);\n        this.$('.btn-save').switchClass('fade-out', true);\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values);\n        if (is_owner){\n            let iq_get_rights = $iq({type: 'get', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n            this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n                let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)),\n                    restrictions_count = 0;\n                data_form.fields.forEach((field) => {\n                    if (field.type === 'fixed' || field.type === 'hidden')\n                        return;\n                    let expires = field.values ? field.values[0] : undefined;\n                    if (expires) {\n                        restrictions_count++;\n                    }\n                });\n                if (restrictions_count === 0)\n                    restrictions_count = '';\n                this.$('.btn-default-restrictions .edit-button-value').text(restrictions_count);\n            }, () => {\n                utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n            });\n        }\n        this.updateAvatar();\n\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    showMembershipProperty: function () {\n        this.$('.membership-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showIndexProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showDescriptionProperty: function () {\n        this.$('.description-edit-wrap').hideIf(false)\n        this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user');\n        if (this.parent.children && this.parent.children.invitations)\n            this.parent.children.invitations.revokeInvitation(ev)\n    },\n\n    showBlockButton: function (ev) {\n        this.$('.edit-bottom-block .btn-add-block').hideIf(false);\n    },\n\n    showInviteButton: function (ev) {\n        this.$('.edit-bottom-block .btn-invite').hideIf(false);\n    },\n\n    unblockUser: function (ev) {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.unblockUser(ev)\n    },\n\n    actionSelectedParticipants: function (ev) {\n        let selected = this.$('.list-item.selected');\n        selected.each((index, item) => {\n            if ($(item).hasClass('invitations-user') && this.parent.children && this.parent.children.invitations)\n                this.parent.children.invitations.revokeInvitationByElement($(item))\n            if ($(item).hasClass('blocked-user') && this.parent.children && this.parent.children.blocked)\n                this.parent.children.blocked.unblockUserByElement($(item))\n            if ($(item).hasClass('blocked-user') || $(item).hasClass('invitations-user'))\n                $(item).removeClass('selected')\n        });\n        this.updateRemoveParticipantButton();\n    },\n\n    blockId: function () {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.blockId()\n    },\n\n    deselectParticipants: function (ev) {\n        this.$('.list-item.selected').removeClass('selected')\n        this.updateRemoveParticipantButton();\n    },\n\n    selectParticipant: function (ev) {\n        if ($(ev.target).parent().hasClass('revoke-invitation') || $(ev.target).parent().hasClass('unblock-user') ||\n            $(ev.target).hasClass('revoke-invitation') || $(ev.target).hasClass('unblock-user'))\n            return;\n        let $member_item = $(ev.target).closest('.list-item'),\n            is_selected = $member_item.hasClass('selected');\n        $member_item.switchClass('selected', !is_selected)\n        this.updateRemoveParticipantButton();\n    },\n\n    updateRemoveParticipantButton: function () {\n        let has_changes = this.$('.list-item.selected').length;\n        this.$('.block-name-panel.second-text span').html(has_changes)\n        if (has_changes) {\n            this.$('.participants-edit-back').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.participants-edit-back').removeClass('btn-back-panel').addClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').addClass('fade-out');\n            this.$('.block-name-panel.second-text').removeClass('fade-out');\n            this.$('.btn-remove-selected').removeClass('fade-out');\n        }\n        else{\n            this.$('.participants-edit-back').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.participants-edit-back').addClass('btn-back-panel').removeClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').removeClass('fade-out');\n            this.$('.block-name-panel.second-text').addClass('fade-out');\n            this.$('.btn-remove-selected').addClass('fade-out');\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    hidePanel: function () {\n        this.parent.getInvitations((response) => {\n            let inv_count = $(response).find('query').find('user').length;\n            if (inv_count === 0)\n                inv_count = '';\n            this.$('.invitations-variant .counted').html(inv_count);\n        });\n        this.model.getBlockedParticipants((response) => {\n            let blocked_count = $(response).find('query').children().length;\n            if (blocked_count === 0)\n                blocked_count = '';\n            this.$('.blocked-variant .counted').html(blocked_count);\n        });\n        this.$('.btn-back-panel').hideIf(true)\n        this.$('.block-name-panel').hideIf(true)\n        this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n        this.$('.edit-bottom-block .btn-invite').hideIf(true)\n        this.$('.btn-remove-selected').hideIf(true)\n        this.$('.participants-edit-wrap').hideIf(true)\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar('destroy')\n        // }\n        // this.ps_container = this.$('.edit-wrap');\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar(\n        //         _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n        //     );\n        // }\n        // this.hideEdit();\n    },\n\n    showPanel: function () {\n        this.$('.btn-back-panel').hideIf(false)\n        this.$('.block-name-panel').hideIf(false)\n        this.$('.btn-remove-selected').hideIf(false)\n        this.$('.participants-edit-wrap').hideIf(false)\n        this.updateRemoveParticipantButton();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participants-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    resetPanel: function () {\n        this.updateSaveButton()\n        this.showEdit()\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null;\n            if ((field.var in this.original_data_form_values) && this.original_data_form_values[field.var] != value) {\n                has_changes = true;\n            }\n        });\n        this.$('.btn-save').switchClass('fade-out', !has_changes);\n        this.$('.btn-qr-code').hideIf(has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').addClass('fade-out');\n        }\n        let info = this.model.get('group_info') || {};\n        if (info){\n            if (info.privacy === 'public')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_public_group\"));\n            if (info.privacy === 'incognito')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_incognito_group\"));\n        }\n    },\n\n    changeName: function (value) {\n        if (this.data_form && value){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'name')\n            if (!this.original_data_form_values.name)\n                this.original_data_form_values.name = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeDescription: function (value) {\n        if (this.data_form){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'description')\n            if (!this.original_data_form_values.description)\n                this.original_data_form_values.description = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeMembership: function (ev) {\n        let membership = $(ev.target).attr('id'),\n            membership_text;\n        if (this.data_form && membership){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'membership')\n            if (!this.original_data_form_values.membership)\n                this.original_data_form_values.membership = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [membership]\n            if (membership === 'open')\n                membership_text = xabber.getString(\"groupchat_membership_type_open\");\n            if (membership === 'member-only')\n                membership_text = xabber.getString(\"groupchat_membership_type_members_only\");\n            this.$('.membership-property span').text(membership_text);\n            this.updateSaveButton()\n        }\n    },\n\n    changeIndex: function (ev) {\n        let index = $(ev.target).attr('id'),\n            index_text;\n        if (this.data_form && index){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'index')\n            if (!this.original_data_form_values.index)\n                this.original_data_form_values.index = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [index]\n            if (index === 'none')\n                index_text = xabber.getString(\"groupchat_index_type_none\");\n            if (index === 'local')\n                index_text = xabber.getString(\"groupchat_index_type_local\");\n            if (index === 'global')\n                index_text = xabber.getString(\"groupchat_index_type_global\");\n            this.$('.index-property span').text(index_text);\n            this.updateSaveButton()\n        }\n    },\n\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-save').addClass('fade-out')\n        this.group_name_field.$input.prop('disabled', true);\n        this.group_description_field.$input.prop('disabled', true);\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        let iq = $iq({type: 'set', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        iq = this.account.addDataFormToStanza(iq, this.data_form);\n        this.account.sendIQFast(iq, (result) => {\n            let $result  = $(result),\n                group_info = _.clone(this.model.get('group_info')),\n                attrs = {\n                    name: $result.find('field[var=\"name\"] value').text(),\n                    searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                    model: $result.find('field[var=\"membership\"]').children('value').text(),\n                    description: $result.find('field[var=\"description\"] value').text(),\n                    status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n            _.extend(group_info, attrs);\n            this.model.set('group_info', group_info);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n            this.resetPanel()\n        }, (error) => {\n\n            let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n            utils.dialogs.error(err_text);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n        });\n    },\n\n    showEdit: function (ev) {\n        let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.parent.$('.group-edit-preloader').html(env.templates.contacts.preloader())\n        this.account.sendIQFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.original_data_form_values = {}\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.$('.group-property:not(.privacy-property)').removeClass('disabled')\n            this.group_name_field.$input.hideIf(false)\n            this.group_description_field.$input.hideIf(false)\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.$('.circle-avatar input').prop('disabled', false);\n            this.$('.set-groupchat-avatar-text').hideIf(false);\n            this.$('.group-property').removeClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(false);\n            this.$('.index-property .details-icon-right').hideIf(false);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(false);\n            this.$('.btn-edit').hideIf(false)\n            this.$('.edit-bottom-block').hideIf(false)\n            this.$('.btn-default-restrictions').hideIf(false)\n            this.$('.btn-delete-group').hideIf(false)\n            this.$('.btn-clear-history-chat').hideIf(false)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            this.parent.getInvitations((response) => {\n                let inv_count = $(response).find('query').find('user').length;\n                if (inv_count === 0)\n                    inv_count = '';\n                this.$('.invitations-variant .counted').html(inv_count);\n            });\n            this.model.getBlockedParticipants((response) => {\n                let blocked_count = $(response).find('query').children().length;\n                if (blocked_count === 0)\n                    blocked_count = '';\n                this.$('.blocked-variant .counted').html(blocked_count);\n            });\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        }, () => {\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.group_name_field.$input.prop('disabled', true);\n            this.group_description_field.$input.prop('disabled', true);\n            if (!this.group_description_field.$input.val())\n                this.group_description_field.$input.hideIf(true)\n            this.$('.circle-avatar input').prop('disabled', true);\n            this.$('.set-groupchat-avatar-text').hideIf(true);\n            this.$('.group-property').addClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(true);\n            this.$('.index-property .details-icon-right').hideIf(true);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(true);\n            this.$('.group-property:not(.privacy-property)').addClass('disabled')\n            this.$('.btn-edit').hideIf(true)\n            this.$('.edit-bottom-block').hideIf(true)\n            this.$('.btn-default-restrictions').hideIf(true)\n            this.$('.btn-delete-group').hideIf(true)\n            this.$('.btn-clear-history-chat').hideIf(true)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            let info = this.model.get('group_info') || {};\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        });\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.ContactsBase = Backbone.Collection.extend({\n    model: xabber.Contact\n});\n\nxabber.GroupContacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.group = options.group;\n        this.on(\"change\", this.onContactChanged, this);\n    },\n\n    comparator: function (contact1, contact2) {\n        if (xabber.settings.roster.sorting === 'online-first') {\n            let s1 = contact1.get('status'),\n                s2 = contact2.get('status'),\n                sw1 = constants.STATUS_WEIGHTS[s1],\n                sw2 = constants.STATUS_WEIGHTS[s2],\n                sw1_offline = sw1 >= constants.STATUS_WEIGHTS.offline,\n                sw2_offline = sw2 >= constants.STATUS_WEIGHTS.offline;\n            if (sw1_offline ^ sw2_offline) {\n                return sw1_offline ? 1 : -1;\n            }\n        }\n        let name1, name2;\n        name1 = contact1.get('name').toLowerCase();\n        name2 = contact2.get('name').toLowerCase();\n        return name1 < name2 ? -1 : (name1 > name2 ? 1 : 0);\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed;\n        if (_.has(changed, 'name') || _.has(changed, 'status_updated')) {\n            this.sort();\n            this.trigger('update_contact_item', contact);\n        }\n    }\n});\n\nxabber.Group = Backbone.Model.extend({\n    defaults: {\n        counter: {all: 0, online: 0}\n    },\n\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        attrs.name || (attrs.name = attrs.id);\n        this.set(attrs);\n        this._settings = this.account.groups_settings.get(attrs.name);\n        if (!this._settings)\n            this._settings = this.account.groups_settings.create({name: attrs.name});\n        this.settings = this._settings.attributes;\n        this.contacts = new xabber.GroupContacts(null, {group: this});\n        this.settings_view = new xabber.GroupSettingsView({model: this});\n        this.contacts.on(\"add update_contact_item\", this.updateCounter, this);\n        this.contacts.on(\"destroy\", this.onContactRemoved, this);\n        xabber._roster_settings.on(\"change\", this.onChangedRosterSettings, this);\n    },\n\n    isSpecial: function () {\n        return _.isNumber(this.get('id'));\n    },\n\n    updateCounter: function () {\n        let all = this.contacts.length,\n            online = all - this.contacts.where({status: 'offline'}).length;\n        this.set('counter', {all: all, online: online});\n    },\n\n    renameGroup: function (new_name) {\n        let name = this.get('name'),\n            attrs = _.clone(this.settings);\n        attrs.name = new_name;\n        this._settings.destroy();\n        this._settings = this.account.groups_settings.create(attrs);\n        this.settings = this._settings.attributes;\n        this.set({id: new_name, name: new_name});\n        this.trigger('rename', this, name);\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            index = groups.indexOf(new_name);\n            if (index < 0) {\n                groups.push(new_name);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    deleteGroup: function () {\n        let name = this.get('name');\n        this._settings.destroy();\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    removeContact: function (contact) {\n        if (this.contacts.get(contact)) {\n            this.contacts.remove(contact);\n            this.onContactRemoved(contact);\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        this.updateCounter();\n        this.trigger('remove_contact', contact);\n        this.contacts.length || this.destroy();\n    },\n\n    onChangedRosterSettings: function () {\n        let changed = xabber._roster_settings.changed;\n        if (_.has(changed, 'show_offline')) {\n            this._settings.trigger('change:show_offline');\n        }\n        if (_.has(changed, 'sorting')) {\n            this.contacts.sort();\n            this._settings.trigger('change:sorting');\n        }\n    },\n\n    showSettings: function () {\n        this.settings_view.show();\n    }\n});\n\nxabber.GroupView = xabber.BasicView.extend({\n    className: 'roster-group',\n    events: {\n        \"click .group-head\": \"toggle\",\n        \"click .group-head .group-icon\": \"showGroupSettings\",\n        \"mouseover .group-head\": \"showSettingsIcon\",\n        \"mouseleave .group-head\": \"updateGroupIcon\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.updateName();\n        this.updateGroupIcon();\n        this.updateMembersCounter();\n        this.model.contacts.on(\"add\", this.onContactAdded, this);\n        this.model.on(\"remove_contact\", this.onContactRemoved, this);\n        this.model.contacts.on(\"update_contact_item\", this.updateContactItem, this);\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:counter\", this.updateMembersCounter, this);\n        this.model._settings.on(\"change:show_offline\", this.onChangedOfflineSetting, this);\n        this.model._settings.on(\"change:sorting\", this.onChangedSortingSetting, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.roster-contact').showIf(expanded);\n        this.parent.parent.onListChanged();\n    },\n\n    updateGroupIcon: function () {\n        let mdi_icon, show_offline = this.model.settings.show_offline;\n        if (show_offline === 'default') {\n            mdi_icon = 'settings';\n        } else if (show_offline === 'yes') {\n            mdi_icon = 'group-filled';\n        } else if (show_offline === 'no') {\n            mdi_icon = 'group-outline';\n        }\n        this.$('.group-icon').attr('data-mdi', mdi_icon).hideIf(mdi_icon === 'settings');\n    },\n\n    updateName: function () {\n        this.$('.group-name').text(this.model.get('name'));\n    },\n\n    updateMembersCounter: function () {\n        let counter = this.model.get('counter');\n        this.$('.participant-counter').text('('+counter.online+'/'+counter.all+')');\n    },\n\n    onContactAdded: function (contact) {\n        let view = this.addChild(contact.get('jid'), this.item_view, {model: contact});\n        this.updateContactItem(contact);\n    },\n\n    onContactRemoved: function (contact) {\n        this.removeChild(contact.get('jid'));\n        this.parent.parent.onListChanged();\n    },\n\n    updateContactItem: function (contact) {\n        let view = this.child(contact.get('jid'));\n        if (!view) return;\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes'),\n            is_offline = constants.STATUS_WEIGHTS[contact.get('status')] >= 6;\n\n        view.$el.switchClass('invisible', is_offline && !show_offline).detach();\n        let index = this.model.contacts.indexOf(contact);\n        if (index === 0) {\n            this.$('.group-head').after(view.$el);\n        } else {\n            this.$('.roster-contact').eq(index - 1).after(view.$el);\n        }\n        view.$el.showIf(this.data.get('expanded'));\n        this.parent.parent.onListChanged();\n        return view;\n    },\n\n    showSettingsIcon: function () {\n        this.$('.group-icon').attr('data-mdi', 'settings').removeClass('hidden');\n    },\n\n    showGroupSettings: function (ev) {\n        ev.stopPropagation();\n        this.model.showSettings();\n    },\n\n    onChangedOfflineSetting: function () {\n        this.updateGroupIcon();\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes');\n        _.each(this.children, function (view) {\n            let is_offline = constants.STATUS_WEIGHTS[view.model.get('status')] >= 6;\n            view.$el.switchClass('invisible', is_offline && !show_offline);\n        });\n        this.parent.parent.onListChanged();\n    },\n\n    onChangedSortingSetting: function () {\n        _.each(this.children, function (view) { view.$el.detach(); });\n        this.model.contacts.each((c) => { this.updateContactItem(c); });\n        this.parent.parent.onListChanged();\n    }\n});\n\nxabber.GroupRightView = xabber.GroupView.extend({\n    template: templates.group_right,\n    item_view: xabber.ContactItemRightView,\n\n    __initialize: function () {\n        this.data.set('expanded', this.model.settings.expanded);\n    },\n\n    toggle: function () {\n        let expanded = !this.data.get('expanded');\n        this.data.set('expanded', expanded);\n        this.model._settings.save('expanded', expanded);\n    }\n});\n\nxabber.GroupLeftView = xabber.GroupView.extend({\n    template: templates.group_left,\n    item_view: xabber.ContactItemLeftView,\n\n    __initialize: function () {\n        this.data.set('expanded', true);\n    },\n\n    toggle: function (ev) {\n        ev.stopPropagation();\n        this.data.set('expanded', !this.data.get('expanded'));\n    }\n});\n\nxabber.GroupSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal group-settings',\n    template: templates.group_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.GROUP_SETTINGS,\n\n    events: {\n        \"change .offline input[type=radio][name=offline]\": \"setOffline\",\n        \"click .btn-apply\": \"applySettings\",\n        \"click .btn-delete\": \"deleteGroup\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this._settings = this.model._settings;\n        let name = this.model.get('name');\n        if (this.model.isSpecial()) {\n            this.$('.group-name input').attr('readonly', true);\n            this.$('.btn-delete').addClass('hidden');\n        }\n        this.model.on(\"destroy\", this.onDestroy, this);\n    },\n\n    render: function () {\n        this.$('.group-name input').val(this.model.get('name'));\n        this.$('.group-name .errors').addClass('hidden');\n        this.$('.offline input[type=radio][name=offline][value='+\n            (this.model.settings.show_offline)+']').prop('checked', true);\n        this.$el.openModal({\n            ready: function () {\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    setOffline: function (ev) {\n        this.model._settings.save('show_offline', ev.target.value);\n    },\n\n    validateName: function (name) {\n        if (!name) {\n            return xabber.getString(\"dialog_add_circle__error__text_input_name\");\n        }\n        if (this.model.collection.get(name)) {\n            return xabber.getString(\"dialog_add_circle__error__text_wrong_name\");\n        }\n    },\n\n    applySettings: function () {\n        let new_name = this.$('.group-name input').val();\n        if (new_name !== this.model.get('name')) {\n            let name_error = this.validateName(new_name);\n            if (name_error) {\n                this.$('.group-name .errors').text(name_error).removeClass('hidden');\n                return;\n            } else {\n                this.model.renameGroup(new_name);\n            }\n        }\n        this.close();\n    },\n\n    deleteGroup: function () {\n        let name = this.model.get('name');\n        utils.dialogs.ask(xabber.getString(\"circle_remove\"), xabber.getString(\"circle_remove_confirm\", [name]), null, { ok_button_text: xabber.getString(\"remove\")})\n            .done((result) => {\n                result && this.model.deleteGroup();\n            });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onDestroy: function () {\n        this.$el.closeModal({ complete: this.remove.bind(this) });\n    }\n});\n\nxabber.Groups = Backbone.Collection.extend({\n    model: xabber.Group,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"change:id\", this.sort, this);\n        this.account.on('render_settings', this.render, this);\n        this.account.on('render_single_settings', this.renderSingleAccount, this);\n    },\n\n    comparator: function (a, b) {\n        if (a.isSpecial() === b.isSpecial()) {\n            return a.get('id') < b.get('id') ? -1 : 1;\n        }\n        return a.isSpecial() ? 1 : -1;\n    },\n\n    notSpecial: function () {\n        return this.filter(function (group) { return !group.isSpecial(); });\n    },\n\n    onGroupAdded: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group});\n    },\n\n    onGroupAddedSingleAccount: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group, single_account: this.single_account});\n    },\n\n    render: function () {\n        this.on(\"add\", this.onGroupAdded, this);\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group});\n        });\n    },\n\n    renderSingleAccount: function (single_account) {\n        single_account.$('.groups').html('');\n        !this.rendered_once && this.on(\"add\", this.onGroupAddedSingleAccount, this);\n        this.single_account = single_account\n        this.rendered_once = true\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group, single_account: single_account});\n        });\n    }\n});\n\nxabber.Contacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"deactivate destroy\", this.removeAllContacts, this);\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    mergeContact: function (attrs) {\n        if (typeof attrs !== \"object\") {\n            attrs = {jid: attrs};\n        }\n        let contact = this.get(attrs.jid);\n        if (contact) {\n            if (attrs.avatar) {\n                attrs.image = attrs.avatar;\n                delete attrs.avatar;\n                contact.cached_image = Images.getCachedImage(attrs.image);\n            }\n            if (attrs.group_chat && attrs.is_deleted) {\n                delete attrs.group_chat;\n            }\n            contact.set(attrs);\n        } else {\n            contact = this.create(attrs, {account: this.account});\n        }\n        return contact;\n    },\n\n    blockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    unblockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    removeAllContacts: function () {\n        _.each(_.clone(this.models), function (contact) {\n            contact.destroy();\n        });\n        this.account.trigger('remove_saved_chat');\n    },\n\n    handlePresence: function (presence, jid) {\n        let contact = this.mergeContact(jid);\n        contact.handlePresence(presence);\n    }\n});\n\nxabber.BlockList = Backbone.Model.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.list = {};\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    length: function () {\n        return Object.keys(this.list).length;\n    },\n\n    isBlocked: function (jid) {\n        return this.list.hasOwnProperty(jid);\n    },\n\n    onContactRemoved: function (jid) {\n        delete this.list[jid];\n    },\n\n    onContactAdded: function (attrs) {\n        this.list[attrs.jid] = attrs;\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onBlockingIQ.bind(this),\n            Strophe.NS.BLOCKING, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n        this.account.sendIQFast(iq, this.onBlockingIQ.bind(this));\n    },\n\n    onBlockingIQ: function (iq) {\n        let $elem = $(iq).find(`[xmlns=\"${Strophe.NS.BLOCKING}\"]`),\n            tag = $elem[0].tagName.toLowerCase(),\n            blocked = tag.startsWith('block');\n        $elem.find('item').each((idx, item) => {\n            let jid = item.getAttribute('jid'),\n                resource = Strophe.getResourceFromJid(jid),\n                domain = Strophe.getDomainFromJid(jid),\n                attrs = {jid},\n                contact = this.contacts.get(jid);\n            resource && (attrs.resource = true);\n            (domain === jid) && (attrs.domain = true);\n            if (blocked)\n                this.contacts.trigger(\"add_to_blocklist\", attrs);\n            else {\n                this.contacts.trigger(\"remove_from_blocklist\", jid);\n                contact && contact.trigger(\"remove_from_blocklist\", contact);\n            }\n            contact && contact.set('blocked', blocked);\n        });\n        return true;\n    }\n});\n\nxabber.Roster = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.roster_version = options.roster_version || 0;\n        this.groups = this.account.groups;\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_roster\", this.onContactAdded, this);\n        this.contacts.on(\"change_in_roster\", this.onContactChanged, this);\n        this.contacts.on(\"remove_from_roster\", this.onContactRemoved, this);\n    },\n\n    update: function (contact, event) {\n        let contains = contact.get('in_roster') || contact.get('known');\n        if (contains) {\n            if (!this.get(contact)) {\n                this.add(contact);\n                contact.trigger(\"add_to_roster\", contact);\n            } else if (event === 'change') {\n                contact.trigger(\"change_in_roster\", contact);\n            }\n        } else if (this.get(contact)) {\n            this.remove(contact);\n            contact.trigger(\"remove_from_roster\", contact);\n        }\n    },\n\n    onContactAdded: function (contact) {\n        if (!contact.get('in_roster'))\n            return;\n        let groups = contact.get('groups');\n        if (!groups.length) {\n            this.addContactToGroup(contact, constants.GENERAL_GROUP_ID);\n        } else {\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n        }\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed,\n            known_changed = _.has(changed, 'known'),\n            in_roster_changed = _.has(changed, 'in_roster'),\n            groups_changed = _.has(changed, 'groups');\n        if (in_roster_changed || known_changed || groups_changed) {\n            let groups;\n            if (contact.get('in_roster')) {\n                groups = _.clone(contact.get('groups'));\n                if (!groups.length) {\n                    groups.push(constants.GENERAL_GROUP_ID);\n                }\n            } else if (contact.get('known')) {\n                groups = [];\n            }\n            // TODO: optimize\n            let groups_to_remove = this.groups.filter(function (group) {\n                return !_.contains(groups, group.get('id'));\n            });\n            _.each(groups_to_remove, function (group) {\n                group.removeContact(contact);\n            });\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n            contact.trigger('update_groups');\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        _.each(this.groups.filter(), function (group) {\n            group.removeContact(contact);\n        });\n    },\n\n    getGroup: function (name) {\n        let group = this.groups.get(name);\n        if (group)\n            return group;\n        let attrs = {id: name};\n        if (name === constants.GENERAL_GROUP_ID) {\n            attrs.name = xabber.settings.roster.general_group_name;\n        } else if (name === constants.NON_ROSTER_GROUP_ID) {\n            attrs.name = xabber.settings.roster.non_roster_group_name;\n        }\n        return this.groups.create(attrs, {account: this.account});\n    },\n\n    addContactToGroup: function (contact, name) {\n        let group = this.getGroup(name);\n        group.contacts.add(contact);\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onRosterIQ.bind(this),\n            Strophe.NS.ROSTER, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    syncFromServer: function (options, synchronization_with_stamp, is_first_sync) {\n        options = options || {};\n        let request_attrs = {xmlns: Strophe.NS.SYNCHRONIZATION},\n            cached_conversations_exclude = options.cached_conversations_exclude || [];\n        if (options.stamp)\n            request_attrs.stamp = options.stamp;\n        delete(options.stamp);\n        delete(options.cached_conversations_exclude);\n        let iq = $iq({type: 'get'}).c('query', request_attrs).cnode(new Strophe.RSM(options).toXML());\n        this.account.sendFast(iq, (response) => {\n            this.onSyncIQ(response, request_attrs.stamp, synchronization_with_stamp, is_first_sync, options.last_version_sync, cached_conversations_exclude).then(() => {\n            });\n        });\n    },\n\n    syncCachedConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(cached_conversations).each((idx, item) => {\n            this.syncConversation(null, null, item.conversation, is_first_sync);\n        });\n    },\n\n    syncConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(iq).find('conversation').each((idx, item) => {\n            this.syncConversation(iq, request_with_stamp, item, is_first_sync, cached_conversations);\n        });\n    },\n\n    syncConversation: function (iq, request_with_stamp, item, is_first_sync, cached_conversations) {\n        if (!$(item).length){\n            return;\n        }\n        if (!iq)\n            item = $($.parseXML(item)).find('conversation')[0];\n        let $item = $(item),\n            jid = $item.attr('jid'), saved = false;\n        if (cached_conversations){\n            $(cached_conversations).each((idx, conv) => {\n                if (!(conv.account_conversation_type && conv.account_conversation_type.split))\n                    return;\n                let cached_conv_type_jid = conv.account_conversation_type.split('/')[0];\n                if ((cached_conv_type_jid === jid) && (conv.account_conversation_type !== ($(item).attr('jid') +  '/' + $(item).attr('type')))){\n                    if ($item.attr('type') === Strophe.NS.GROUP_CHAT || conv.account_conversation_type.includes(Strophe.NS.GROUP_CHAT)){\n                        this.account.cached_sync_conversations.removeFromCachedConversations(conv.account_conversation_type);\n                    }\n                };\n            });\n        }\n        if (jid === this.account.get('jid'))\n            saved = true;\n        if ($item.attr('type') === Strophe.NS.SYNCHRONIZATION_OLD_OMEMO)\n            return true;\n        let $sync_metadata = $item.children('metadata[node=\"' + Strophe.NS.SYNCHRONIZATION + '\"]'),\n            type = $item.attr('type'),\n            presence = $item.children('presence'),\n            $group_metadata = $item.children('metadata[node=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_incognito =  type === Strophe.NS.GROUP_CHAT && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('privacy').text() === 'incognito',\n            is_private = is_incognito && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('parent').text(),\n            is_group_chat =  type === Strophe.NS.GROUP_CHAT || is_private || is_incognito,\n            encrypted = type === Strophe.NS.SYNCHRONIZATION_OMEMO,\n            contact = !saved && this.contacts.mergeContact({jid: jid, group_chat: is_group_chat, private_chat: is_private, incognito_chat: is_incognito, is_deleted: $item.attr('status') === 'deleted'}),\n            chat = saved ? this.account.chats.getSavedChat() : this.account.chats.getChat(contact, encrypted && 'encrypted', true),\n            message = $sync_metadata.children('last-message').children('message'),\n            current_call = $item.children('metadata[node=\"' + Strophe.NS.JINGLE_MSG + '\"]').children('call'),\n            $unread_messages = $sync_metadata.children('unread'),\n            chat_timestamp = Math.trunc(Number($item.attr('stamp'))/1000),\n            last_read_msg = $unread_messages.attr('after'),\n            last_delivered_msg = $sync_metadata.children('delivered').attr('id'),\n            last_displayed_msg = $sync_metadata.children('displayed').attr('id'),\n            unread_msgs_count = Number($unread_messages.attr('count')) || 0,\n            is_invite =  message.find('invite').length,\n            msg_retraction_version = $item.children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n            msg, options = {synced_msg: true,},\n            current_chat_timestamp = chat.get('last_sync_timestamp');\n        if (current_chat_timestamp && current_chat_timestamp > chat_timestamp){\n            console.log('old_sync_conv');\n            console.log(item);\n            return;\n        }\n        chat.set('last_sync_timestamp', chat_timestamp);\n        if (message.children('stanza-id').length\n            && message.children('stanza-id').attr('id')\n            && chat.retracted_msg_id_list.includes(message.children('stanza-id').attr('id'))){\n            return;\n        };\n        chat.set('sync_type', type);\n        (iq && !($item.attr('status') === 'deleted')) && this.account.cached_sync_conversations.putInCachedConversations({\n            account_conversation_type: $(item).attr('jid') +  '/' + $(item).attr('type'),\n            conversation: item.outerHTML,\n        });\n        if (!chat.item_view.content && (is_invite || encrypted && this.account.omemo)) {\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n        if ($item.attr('pinned') || $item.attr('pinned') === '0'){\n            chat.set('pinned', $item.attr('pinned'));\n        }\n        if (encrypted && this.account.omemo) {\n            chat.set('timestamp', chat_timestamp);\n            chat.set('opened', true);\n            if (!(chat.last_message && chat.last_message.get('message')))\n                chat.item_view.updateEncryptedChat();\n        }\n        if (!saved) {\n            if ($item.attr('mute') || $item.attr('mute') === '0') {\n                if ($item.attr('mute') < (Date.now() / 1000))\n                    chat.set('muted', false);\n                else\n                    chat.set('muted', $item.attr('mute'));\n                this.account.chat_settings.updateMutedList(contact.get('jid'), $item.attr('mute'));\n                if (contact.details_view_right)\n                    contact.details_view_right.updateNotifications();\n            } else {\n                chat.set('muted', false);\n            }\n        }\n        if ($item.attr('status') === 'archived')\n            chat.set('archived', true);\n        else if ($item.attr('status') === 'active' && !saved)\n            chat.set('archived', false);\n        if ($item.attr('status') === 'deleted') {\n            contact && contact.details_view && contact.details_view.isVisible() && xabber.body.setScreen(xabber.body.screen.get('name'), {right: undefined});\n            chat.get('display') && xabber.body.setScreen(xabber.body.screen.get('name'), {right_contact: '', right: undefined});\n            chat.set('opened', false);\n            chat.set('const_unread', 0);\n            this.account.cached_sync_conversations.removeFromCachedConversations($(item).attr('jid') +  '/' + $(item).attr('type'));\n            this.account.chat_settings.updateGroupChatsList(contact.get('jid'), false);\n            xabber.toolbar_view.recountAllMessageCounter();\n            xabber.chats_view.clearSearch();\n            contact && contact.set('sync_deleted', true);\n            if (is_group_chat) {\n                contact && contact.set('in_roster', false);\n                contact && contact.set('known', false);\n                contact && contact.set('removed', true);\n                this.account.cached_roster.removeFromRoster(jid);\n                contact.participants && contact.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(contact.get('jid'));\n            }\n        }\n        else\n            contact && contact.set('sync_deleted', false);\n        if (current_call.length) {\n            let $jingle_message = current_call.children('message'),\n                full_jid = $jingle_message.attr('from'),\n                session_id = $jingle_message.children('propose').attr('id');\n            chat.getCallingAvailability(full_jid, session_id, () => {\n                if (xabber.current_voip_call) {\n                    let reason = Strophe.getBareJidFromJid(full_jid) === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                    chat.sendReject({session_id: session_id, reason: reason});\n                    chat.messages.createSystemMessage({\n                        from_jid: this.account.get('jid'),\n                        message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                    });\n                } else {\n                    chat.initIncomingCall(full_jid, session_id);\n                }\n            });\n        }\n        chat.set('last_delivered_id', last_delivered_msg);\n        chat.set('last_displayed_id', last_displayed_msg);\n        chat.set('last_read_msg', last_read_msg);\n        chat.trigger('update_last_read_msg', {sync_update: true});\n        if (!message.length) {\n            chat.set('timestamp', chat_timestamp);\n            if (!(Number(last_delivered_msg) || Number(last_displayed_msg) || Number(last_read_msg))\n                && !chat.item_view.content && !chat.get('group_chat')){\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            }\n            chat.item_view.updateEmptyChat();\n        }\n        if (request_with_stamp && chat.retraction_version !== 0 && chat.retraction_version < msg_retraction_version)\n            chat.trigger(\"get_retractions_list\");\n        msg_retraction_version && (chat.retraction_version = msg_retraction_version);\n        if (request_with_stamp && chat.item_view && chat.item_view.content && !is_invite) {\n            chat.trigger('get_missed_history', request_with_stamp/1000);\n        }\n        unread_msgs_count && (options.is_unread = true);\n        options.delay = message.children('time');\n        message.length && (msg = this.account.chats.receiveChatMessage(message, options));\n        if (!(encrypted && !this.account.omemo)){\n            chat.messages_unread.reset();\n            chat.set('unread', 0);\n            chat.set('const_unread', unread_msgs_count);\n        }\n        if (msg) {\n            if (!msg.get('is_unread') && $unread_messages.attr('count') > 0 && !msg.isSenderMe() && !(msg.get('type') === 'system') && ($unread_messages.attr('after') < msg.get('stanza_id') || $unread_messages.attr('after') < msg.get('contact_stanza_id')))//TODO: change to timestamp checking\n                msg.set('is_unread', true);\n            if(!(is_invite || encrypted && this.account.omemo)) {\n                if (msg.isSenderMe() && msg.get('stanza_id') == last_displayed_msg)\n                    msg.set('state', constants.MSG_DISPLAYED);\n                else if (msg.isSenderMe() && msg.get('stanza_id') == last_delivered_msg)\n                    msg.set('state', constants.MSG_DELIVERED);\n                this.account.messages.add(msg);\n                if ((chat.last_message && (msg.get('timestamp') > chat.last_message.get('timestamp'))) || !chat.last_message){\n                    chat.last_message = msg;\n                    chat.item_view.updateLastMessage(msg);\n                    msg.get('stanza_id') && chat.set('synced_msg', msg);\n                }\n            }\n            chat.set('first_archive_id', msg.get('stanza_id'));\n        }\n        if (presence.length)\n            contact && contact.handlePresence(presence[0]);\n        else {\n            contact && contact.set('subscription_request_in', false)\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onSyncIQ: async function (iq, request_with_stamp, synchronization_with_stamp, is_first_sync, is_last_sync, cached_conversations_exclude) {\n        let sync_timestamp = Number($(iq).children(`query[xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).attr('stamp')),\n            sync_rsm_after = $(iq).find(`query set[xmlns=\"${Strophe.NS.RSM}\"]`).children('last').text();\n        this.account.last_msg_timestamp = Math.round(sync_timestamp/1000);\n        let last_chat_msg_id = $(iq).find('set last');\n        if (!request_with_stamp)\n            last_chat_msg_id.length ? (this.last_chat_msg_id = last_chat_msg_id.text()) : (this.conversations_loaded = true);\n        this.account.set('last_sync', sync_timestamp);\n        this.account.settings.update_settings({last_sync_timestamp: sync_timestamp});\n        xabber.chats_view.hideChatsFeedback();\n        if (!request_with_stamp)\n            this.account.chats.getSavedChat();\n        if (is_first_sync)\n            this.account.set('first_sync', sync_timestamp);\n        if (!$(iq).find('conversation').length || $(iq).find('conversation').length < constants.SYNCHRONIZATION_RSM_MAX ){\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                if (!is_last_sync){\n                    cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                        return $(this).attr('jid') +  '/' + $(this).attr('type');\n                    }).toArray());\n                    res = res.filter(item => !cached_conversations_exclude.includes(item.account_conversation_type));\n                    this.syncCachedConversations(null, request_with_stamp, is_first_sync, res);\n                }\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                this.account.cached_sync_conversations.putInCachedConversations({\n                    account_conversation_type: 'last_sync_timestamp',\n                    timestamp: sync_timestamp,\n                });\n                if (!is_last_sync){\n                    this.account.sendPresence();\n                    let saved_chat = this.account.chats.getSavedChat();\n                    saved_chat.set('opened', true);\n                    saved_chat.item_view.updateLastMessage();\n                    this.account.getAllMessageRetractions((result) => {\n                        let retract_version = $(result).find(`query[xmlns=\"${Strophe.NS.REWRITE}\"]`).attr('version');\n                        if (retract_version > this.account.retraction_version)\n                            this.account.retraction_version = retract_version;\n                    })\n                    this.account.get('first_sync') && this.syncFromServer({stamp: this.account.get('first_sync'), max: constants.SYNCHRONIZATION_RSM_MAX, last_version_sync: true}, true);\n                }\n            });\n        }\n        else if ($(iq).find('conversation').length) {\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                    return $(this).attr('jid') +  '/' + $(this).attr('type');\n                }).toArray());\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                let sync_options = {max: constants.SYNCHRONIZATION_RSM_MAX, after: sync_rsm_after};\n                if (request_with_stamp)\n                    sync_options.stamp = request_with_stamp;\n                if (is_last_sync)\n                    sync_options.last_version_sync = true;\n                if (cached_conversations_exclude && cached_conversations_exclude.length)\n                    sync_options.cached_conversations_exclude = cached_conversations_exclude;\n                this.syncFromServer(sync_options);\n            });\n        }\n    },\n\n    getRoster: function () {\n        let request_ver = this.roster_version;\n        this.account.cached_roster.getAllFromRoster((roster_items) => {\n            // $(roster_items).each((idx, roster_item) => {\n            //     this.contacts.mergeContact(roster_item);\n            // });\n            if (!roster_items.length && request_ver != 0) {\n                this.roster_version = 0;\n            }\n            this.getFromServer();\n        });\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.ROSTER, ver: this.roster_version});\n        this.account.sendIQFast(iq, (iq) => {\n            this.onRosterIQ(iq);\n            this.account.dfd_presence.resolve();\n        });\n    },\n\n    onRosterIQ: function (iq) {\n        let new_roster_version = $(iq).children('query').attr('ver');\n        $(iq).children('query').find('item').each((idx, item) => {\n            this.onRosterItem(item);\n        });\n        if (iq.getAttribute('type') === 'set') {\n            this.account.onSetIQResult(iq);\n        }\n        else {\n            if (iq.getAttribute('type') === 'result') {\n                new_roster_version && (this.roster_version = new_roster_version);\n                this.account.cached_roster.putInRoster({\n                    jid: 'roster_version',\n                    is_version: true,\n                    version: this.roster_version\n                });\n            }\n        }\n        return true;\n    },\n\n    onRosterItem: function (item) {\n        let jid = item.getAttribute('jid');\n        if (jid === this.account.get('jid'))\n            return;\n        let contact = this.contacts.mergeContact(jid),\n            subscription = item.getAttribute(\"subscription\"),\n            subscription_preapproved = item.getAttribute(\"approved\"),\n            ask = item.getAttribute(\"ask\");\n        if (contact.get('invitation') && (subscription === 'both' || subscription === 'to')) {\n            contact.set('invitation', false);\n            contact.trigger('remove_invite');\n        }\n        if (subscription === 'remove') {\n            contact.set({\n                in_roster: false,\n                known: false,\n                name: contact.get('jid'),\n                subscription: undefined,\n                subscription_request_out: false\n            });\n            contact.set('subscription_preapproved', false)\n            this.account.cached_roster.removeFromRoster(jid);\n            return;\n        }\n        let groups = [];\n        $(item).find('group').each(function () {\n            let group = $(this).text();\n            groups.indexOf(group) < 0 && groups.push(group);\n        });\n        let attrs = {\n            subscription: subscription || 'none',\n            in_roster: true,\n            roster_name: item.getAttribute(\"name\"),\n            groups: groups\n        };\n        if (subscription === 'both') {\n            attrs.subscription_request_out = false;\n            attrs.subscription_request_in = false;\n        }\n        if (subscription === 'from')\n            attrs.subscription_request_in = false;\n        if (subscription === 'to')\n            attrs.subscription_request_out = false;\n        if (ask === 'subscribe')\n            attrs.subscription_request_out = true;\n        else\n            attrs.subscription_request_out = false;\n        attrs.roster_name && (attrs.name = attrs.roster_name);\n        this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && (attrs.subscription_preapproved = subscription_preapproved ? true : subscription_preapproved);\n        contact.set(attrs);\n        contact.updateCachedInfo();\n    }\n});\n\nxabber.AccountRosterView = xabber.BasicView.extend({\n    className: 'account-roster-wrap',\n\n    events: {\n        \"click .roster-account-info-wrap .status-button\": \"openChangeStatus\",\n        \"click .roster-account-info\": \"toggle\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.groups = this.account.groups;\n        this.roster = this.account.roster;\n        this.contacts = this.account.contacts;\n        this.$el.attr('data-jid', this.account.get('jid'));\n        this.$el.appendTo(this.parent.$('.contact-list'));\n        this.$info = this.$('.roster-account-info-wrap');\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.on(\"change:name\", this.updateName, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on(\"change:status_updated\", this.updateStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.groups.on(\"add\", this.onGroupAdded, this);\n        this.groups.on(\"rename\", this.onGroupRenamed, this);\n        this.groups.on(\"destroy\", this.onGroupRemoved, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', true);\n    },\n\n    updateName: function () {\n        this.$info.find('.name').text(this.account.get('name'));\n    },\n\n    updateStatus: function () {\n        this.$info.find('.status').attr('data-status', this.account.get('status'));\n        this.$info.find('.status-message').text(this.account.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.account.cached_image;\n        this.$info.find('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.parent.updateScrollBar();\n    },\n\n    updateGroupPosition: function (view) {\n        view.$el.detach();\n        let index = this.groups.indexOf(view.model);\n        if (index === 0) {\n            this.$info.after(view.$el);\n        } else {\n            this.$('.roster-group').eq(index - 1).after(view.$el);\n        }\n        this.parent.updateScrollBar();\n    },\n\n    onGroupAdded: function (group) {\n        let view = this.addChild(group.get('id'), this.group_view, {model: group});\n        this.updateGroupPosition(view);\n    },\n\n    onGroupRenamed: function (group, old_name) {\n        let view = this.child(old_name);\n        delete this.children[old_name];\n        this.children[group.get('name')] = view;\n        view && this.updateGroupPosition(view);\n    },\n\n    onGroupRemoved: function (group) {\n        this.removeChild(group.get('id'));\n    },\n\n    toggle: function (ev) {\n        this.data.set('expanded', !this.data.get('expanded'));\n    },\n\n    openChangeStatus: function (ev) {\n        if (!xabber.change_status_view)\n            xabber.change_status_view = new xabber.ChangeStatusView();\n        xabber.change_status_view.open(this.account);\n    }\n});\n\nxabber.AccountRosterRightView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_right,\n    group_view: xabber.GroupRightView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_RIGHT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.contacts.on(\"add_to_roster change_in_roster remove_from_roster\",\n            this.updateCounter, this);\n        this.contacts.on(\"add_to_roster remove_from_roster\",\n            this.updateGlobalCounter, this);\n    },\n\n    updateCounter: function () {\n        if (!this.roster)\n            this.roster = this.account.roster;\n        let all = this.roster.length,\n            online = all - this.roster.where({status: 'offline'}).length;\n        this.$info.find('.counter').text(online + '/' + all);\n    },\n\n    updateGlobalCounter: function () {\n        this.parent.updateCounter();\n    }\n});\n\nxabber.AccountRosterLeftView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_left,\n    group_view: xabber.GroupLeftView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_LEFT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.$info.find('.jid').text(this.account.get('jid'));\n    },\n\n    search: function (query) {\n        this.$el.removeClass('shrank');\n        this.$('.group-head').addClass('hidden');\n        let count = 0, hashes = {};\n        this.$('.roster-contact').each((idx, item) => {\n            let $item = $(item),\n                jid = $item.data('jid'),\n                contact = this.roster.get(jid);\n            if (!contact) return;\n            if (hashes[contact.hash_id]) {\n                $item.addClass('hidden');\n                return;\n            }\n            hashes[contact.hash_id] = true;\n            let name = contact.get('name').toLowerCase(),\n                hide = name.indexOf(query) < 0 && jid.indexOf(query) < 0;\n            $item.hideIf(hide);\n            hide || count++;\n        });\n        this.$('.roster-account-info-wrap').showIf(count);\n    },\n\n    searchAll: function () {\n        this.$el.switchClass('shrank', !this.data.get('expanded'));\n        this.$('.roster-account-info-wrap').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n        this.$('.list-item').removeClass('hidden');\n    }\n});\n\nxabber.BlockListView = xabber.BasicView.extend({\n    avatar_size: constants.AVATAR_SIZES.CONTACT_BLOCKED_ITEM,\n    events: {\n        \"click .blocked-item\": \"onTabClick\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .blocked-contact input\": \"selectUnblock\",\n        \"click .btn-unblock-selected\": \"unblockSelected\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        for (let jid in this.account.blocklist.list) {\n            this.onContactAdded(this.account.blocklist.list[jid], false);\n        };\n        this.$('.blocked-item:not(.hidden)').first().click().find('a').addClass('active');\n        this.hideTabs();\n        this.account.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.account.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    render: function (options) {\n        this.deselectBlocked();\n        this.updateIndicator();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    selectUnblock: function (ev) {\n        this.updateUnblockButton();\n    },\n\n    deselectBlocked: function (ev) {\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    updateUnblockButton: function () {\n        let has_changes = this.$('.blocked-contact input:checked').length;\n        this.parent.$('.btn-unblock-selected').hideIf(!has_changes)\n        this.parent.$('.btn-deselect-blocked').hideIf(!has_changes)\n        this.parent.$('.btn-block').hideIf(has_changes)\n    },\n\n    unblockSelected: function (ev) {\n        let selected = this.$('.blocked-contact input:checked').closest('.blocked-contact');\n        selected.each((index, item) => {\n            this.unblockContactByJid($(item).attr('data-jid'))\n        });\n    },\n\n    unblockContactByJid: function (jid) {\n        let contact = this.account.contacts.get(jid);\n        if (contact)\n            contact.unblock();\n        else {\n            this.account.contacts.unblockContact(jid);\n        }\n    },\n\n    onTabClick: function (ev) {\n        let tab = $(ev.target).closest('.blocked-item'),\n            tab_name = $(ev.target).closest('.blocked-item').attr('data-tab-name');\n        this.$('.blocked-item a').removeClass('active');\n        tab.find('a').addClass('active');\n        this.$('.blocked-items-container').addClass('hidden');\n        this.$('.' + tab_name).removeClass('hidden');\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n        if (this.parent && this.parent.updateHeight){\n            this.parent.updateHeight();\n            setTimeout(() => {\n                this.parent.updateScrollBar();\n            }, 250)\n        }\n    },\n\n    hideTabs: function () {\n        this.$('.tabs').hideIf(this.$('.blocked-item:not(.hidden)').length === 1)\n    },\n\n    hideEmptyContainers: function () {\n        let tabs = this.$('.blocked-list:empty');\n        tabs.each((idx, item) => {\n            let tab_name = $(item).closest('.blocked-items-container').addClass('hidden').attr('data-tab-name');\n            this.$('.' + tab_name).addClass('hidden').removeClass('tab');\n        });\n        if (this.$('.blocked-item.hidden .active').length){\n            this.$('.blocked-item:not(.hidden)').first().click().find('a').addClass('active');\n\n        }\n        this.hideTabs();\n        this.updateUnblockButton();\n        this.updateIndicator();\n    },\n\n    onContactAdded: function (attrs) {\n        let tmp = templates.contact_blocked_item({jid: attrs.jid});\n        if (attrs.resource) {\n            this.$('.invitations-item').removeClass('hidden').addClass('tab');\n            this.$('.blocked-invitations-wrap').find('.blocked-invitations').append(tmp);\n        }\n        else if (attrs.domain) {\n            this.$('.domains-item').removeClass('hidden').addClass('tab');\n            let $domain_wrap = this.$('.blocked-domains-wrap'),\n                $desc = $domain_wrap.find('.blocked-item-description');\n            $domain_wrap.find('.blocked-domains').append(tmp);\n            $desc.text($desc.text() + ($desc.text() ? ', ' : \"\") + attrs.jid);\n        }\n        else {\n            this.$('.contacts-item').removeClass('hidden').addClass('tab');\n            this.$('.blocked-contacts-wrap').find('.blocked-contacts').append(tmp);\n            let $desc = this.$('.blocked-contacts-wrap .blocked-item-description');\n            $desc.text($desc.text() + ($desc.text() ? ', ' : \"\") + attrs.jid);\n        }\n        this.$('.placeholder').addClass('hidden');\n        this.hideTabs();\n        this.updateIndicator();\n        if (this.$('.blocked-items-container.hidden').length === 3)\n            this.$('.blocked-list:not(:empty)').closest('.blocked-items-container').removeClass('hidden');\n        if (this.parent && this.parent.updateHeight){\n            this.parent.updateBlockedLabel();\n            this.parent.updateHeight();\n            setTimeout(() => {\n                this.parent.updateScrollBar();\n            }, 250)\n        }\n    },\n\n    onContactRemoved: function (jid) {\n        let $elem = this.$(`.blocked-contact[data-jid=\"${jid}\"]`);\n        let blocked_list = $elem.closest('.blocked-list'),\n            reg = new RegExp(('\\\\,\\\\s' + jid + '|' + jid + '\\\\,\\\\s' + '|' + jid)),\n            blocked_contacts_desc = $elem.closest('.blocked-contacts-wrap').showIf(blocked_list.children().length > 1).find('.blocked-item-description'),\n            blocked_domains_desc = $elem.closest('.blocked-domains-wrap').showIf(blocked_list.children().length > 1).find('.blocked-item-description');\n        $elem.closest('.blocked-invitations-wrap').showIf(blocked_list.children().length > 1);\n        blocked_contacts_desc.text(blocked_contacts_desc.text().replace(reg, \"\"));\n        blocked_domains_desc.text(blocked_domains_desc.text().replace(reg, \"\"));\n        $elem.detach();\n        this.$('.placeholder').hideIf(this.account.blocklist.length());\n        if (this.parent && this.parent.updateHeight){\n            this.parent.updateBlockedLabel();\n            this.parent.updateHeight();\n            setTimeout(() => {\n                this.parent.updateScrollBar();\n            }, 250)\n        }\n        this.hideEmptyContainers();\n    },\n});\n\nxabber.RosterView = xabber.SearchPanelView.extend({\n    ps_selector: '.contact-list-wrap',\n\n    _initialize: function () {\n        this._settings = xabber._roster_settings;\n        this.model.on(\"activate\", this.updateOneRosterView, this);\n        this.model.on(\"update_order\", this.updateRosterViews, this);\n        this.model.on(\"deactivate destroy\", this.removeRosterView, this);\n        this.on(\"before_hide\", this.saveScrollBarOffset, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    updateOneRosterView: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view) {\n            view.$el.detach();\n        } else if (account.isConnected()) {\n            view = this.addChild(jid, this.account_roster_view, {account: account});\n        } else {\n            return;\n        }\n        let index = this.model.connected.indexOf(account);\n        if (index === 0) {\n            this.$('.contact-list').prepend(view.$el);\n        } else {\n            this.$('.contact-list').children().eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    },\n\n    updateRosterViews: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            view && this.$('.contact-list').append(view.$el);\n        });\n        this.updateScrollBar();\n    },\n\n    removeRosterView: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateScrollBar();\n    }\n});\n\n\nxabber.RosterLeftView = xabber.RosterView.extend({\n    className: 'roster-left-container container',\n    template: templates.roster_left,\n    ps_settings: {theme: 'item-list'},\n    main_container: '.contact-list',\n    account_roster_view: xabber.AccountRosterLeftView,\n\n    __initialize: function () {\n        this.model.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    updateLeftIndicator: function () {\n        this.$el.attr('data-indicator', this.model.connected.length > 1);\n    },\n\n    getContactForItem: function (item) {\n        let $item = $(item),\n            account_jid = $item.parent().parent().data('jid'),\n            jid = $item.data('jid'),\n            roster_view = this.child(account_jid);\n        return roster_view && roster_view.roster.get(jid);\n    },\n\n    render: function (options) {\n        (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    searchAll: function () {\n        _.each(this.children, function (view) {\n            view.searchAll();\n        });\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id) {\n            (arrow === 'up') && (this.ps_container[0].scrollTop = 0);\n            return;\n        }\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if ($selection.length && arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n        || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        if ($selection.length && arrow === 'up' && ($selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop <= this.ps_container[0].scrollTop\n        || $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            let contact = this.getContactForItem(selection);\n            contact && contact.showDetails();\n        }\n    },\n\n    onListChanged: function () {\n        this.updateSearch();\n    }\n});\n\nxabber.RosterSettingsView = xabber.BasicView.extend({\n    className: 'roster-settings-wrap',\n    template: templates.roster_settings,\n\n    events: {\n        \"change .offline-contacts input\": \"setOfflineSetting\",\n        \"change .sorting-contacts input\": \"setSortingSetting\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-subblock-wrap.contact-list'));\n    },\n\n    render: function () {\n        this.$('.offline-contacts input[type=radio][name=offline-contacts][value='+\n            (this.model.get('show_offline'))+']').prop('checked', true);\n        this.$('.sorting-contacts input[type=radio][name=sorting-contacts][value='+\n            (this.model.get('sorting'))+']').prop('checked', true);\n    },\n\n    setOfflineSetting: function () {\n        this.model.save('show_offline',\n            this.$('.offline-contacts input[type=radio][name=offline-contacts]:checked').val());\n    },\n\n    setSortingSetting: function () {\n        this.model.save('sorting',\n            this.$('.sorting-contacts input[type=radio][name=sorting-contacts]:checked').val());\n    }\n});\n\nxabber.AccountGroupView = xabber.BasicView.extend({\n    className: 'group',\n    template: function () {\n        this.$el.append('<div class=\"group-name one-line\"/><span class=\"group-members-count\"/>');\n    },\n\n    events: {\n        \"click\": \"showGroupSettings\"\n    },\n\n    _initialize: function (options, attrs) {\n        this.$('.group-name').text(this.model.get('name'));\n        this.$('.group-members-count').text(this.model.get('counter').all);\n        let index = this.model.collection.indexOf(this.model),\n            $parent_el;\n        if (options.single_account && options.single_account.model.get('jid') != this.model.account.get('jid'))\n            return;\n        if (options.single_account)\n            $parent_el = options.single_account.$('.groups');\n        else\n            $parent_el = this.model.account.settings_account_modal.$('.groups');\n        if (index === 0) {\n            $parent_el.prepend(this.$el);\n        } else {\n            $parent_el.children().eq(index - 1).after(this.$el);\n        }\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    showGroupSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.ContactPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap contact-placeholder-wrap noselect',\n    template: templates.contact_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"contact_list__placeholder\"));\n        }\n    },\n});\n\nxabber.AddContactView = xabber.BasicView.extend({\n    className: 'modal main-modal add-contact-modal',\n    template: templates.add_contact,\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .dropdown-content#select-account-for-add-contact\": \"selectAccount\",\n        \"click .existing-group-field label\": \"editGroup\",\n        \"change .new-group-name input\": \"checkNewGroup\",\n        \"keyup .new-group-name input\": \"checkNewGroup\",\n        \"keyup .name-field #new_contact_username\": \"checkJid\",\n        \"focusout .name-field #new_contact_username\": \"focusoutInputField\",\n        \"focusout .new-group-name #new-group-name\": \"addNewGroup\",\n        \"click .btn-add\": \"stepForward\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.group_data = new Backbone.Model;\n        this.group_data.on(\"change\", this.updateGroups, this);\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = options.account ? [options.account] : xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-add-contact').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-add-contact').append(\n                this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            ready: () => {\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                });\n                this.$('input[name=\"username\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.renderGroupsForAccount(account);\n    },\n\n    stepForward: function () {\n        let jid = this.$('input[name=username]').val().trim();\n        this.$el.append($(templates.preloader()))\n        this.$('.btn-add').addClass('hidden-disabled')\n        this.$('input[name=contact_name]').val('');\n        if (this.account.connection && this.account.connection.connected) {\n            this.account.getConnectionForIQ().vcard.get(jid, (vcard) => {\n                    let username = vcard.username ? vcard.username : vcard.fullname ? vcard.fullname : ''\n                    username && this.$('input[name=contact_name]').val(username);\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.addContact()\n                },\n                (err) => {\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.$('input[name=username]').addClass('invalid')\n                        .siblings('.errors').text($(err).find('error text').text());\n                });\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_contact_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    renderGroupsForAccount: function (account) {\n        this.group_data.set({\n            selected: [],\n            groups: _.map(account.groups.notSpecial(), function (group) {\n                return group.get('name');\n            })\n        }, {silent: true});\n        this.updateGroups();\n    },\n\n    updateGroups: function () {\n        let selected = this.group_data.get('selected');\n        this.$('.groups').html(templates.groups_checkbox_list_contact({\n            groups: _.map(this.group_data.get('groups'), function (name) {\n                return { name: name, id: uuid(), checked: _.contains(selected, name) };\n            })\n        }));\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    editGroup: function (ev) {\n        ev.preventDefault();\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            selected = _.clone(this.group_data.get('selected')),\n            idx = selected.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            idx < 0 && selected.push(group_name);\n        } else if (idx >= 0) {\n            selected.splice(idx, 1);\n        }\n        this.group_data.set('selected', selected);\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox #new_group_checkbox');\n        $checkbox.prop('disabled', !(name && !_.contains(this.group_data.get('groups'), name)));\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.addNewGroup();\n    },\n\n    addNewGroup: function (ev) {\n        ev && ev.preventDefault();\n        if (this.$('.new-group-checkbox #new_group_checkbox').prop('disabled'))\n            return;\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.group_data.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            let selected = _.clone(this.group_data.get('selected'));\n            selected.push(name);\n            groups.push(name);\n            this.group_data.set({groups: groups, selected: selected});\n        }\n    },\n\n    focusoutInputField: function () {\n        if (!this.$('input[name=username]').val().trim()) {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n        }\n    },\n\n    checkJid: function (ev) {\n        let jid = this.$('input[name=username]').val().trim(),\n            error_text,\n            regexp_full_jid = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))|(([0-9]{1,3}\\.){3}[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!regexp_full_jid.test(jid) && jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        }\n        else {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n            if (ev.keyCode === constants.KEY_ENTER)\n                this.stepForward();\n        }\n    },\n\n    addContact: function () {\n        this.$('span.errors').text('').addClass('hidden');\n        let jid = this.$('input[name=username]').removeClass('invalid').val().trim(),\n            name = this.$('input[name=contact_name]').removeClass('invalid').val(),\n            groups = this.group_data.get('selected'),\n            contact, error_text,\n            regexp = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (jid)\n            jid = jid.toLowerCase()\n        jid = Strophe.getBareJidFromJid(jid);\n        if (!jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_input_username\");\n        } else if (jid === this.account.get('jid')) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_can_not_add_youself\");\n        } else if (!regexp.test(jid)) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        else {\n            contact = this.account.contacts.mergeContact(jid);\n            if (contact.get('in_roster')) {\n                error_text = xabber.getString(\"dialog_add_contact__error__text_already_in_roster\");\n            }\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        } else {\n            !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            contact.trigger('presence', contact, 'subscribe_from');\n            contact.trigger(\"open_chat\", contact, {right_force_close: true});\n            this.close();\n        }\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.GroupSettings = Backbone.Model.extend({\n    idAttribute: 'name',\n    defaults: {\n        expanded: true,\n        show_offline: 'default',\n        sorting: 'default',\n        custom_notifications: false,\n        notifications: false,\n        message_preview: false\n    }\n});\n\nxabber.GroupsSettings = Backbone.CollectionWithStorage.extend({\n    model: xabber.GroupSettings,\n\n    _initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"destroy\", this.clearStorage, this);\n        this.fetch();\n    }\n});\n\nxabber.RosterSettings = Backbone.ModelWithStorage.extend({\n\n    defaults: function () {\n        let general_group_name = xabber.getString(\"circles__name_general_circle\"),\n            non_roster_group_name = xabber.getString(\"circles__name_non_roster_circle\");\n        return {\n            pinned: false,\n            show_offline: 'yes',\n            sorting: 'online-first',\n            general_group_name,\n            non_roster_group_name\n        };\n    }\n});\n\nxabber.CachedRoster = Backbone.ModelWithDataBase.extend({\n    putInRoster: function (value, callback) {\n        this.database.put('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromRoster: function (value, callback) {\n        this.database.get('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromRoster: function (callback) {\n        this.database.get_all('roster_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromRoster: function (value, callback) {\n        this.database.remove('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('roster_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('roster_items');\n    }\n});\n\nxabber.CachedSyncСonversations = Backbone.ModelWithDataBase.extend({\n    putInCachedConversations: function (value, callback) {\n        this.database.put('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedConversations: function (value, callback) {\n        this.database.get('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedConversations: function (callback) {\n        this.database.get_all('conversation_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedConversations: function (value, callback) {\n        this.database.remove('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('conversation_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('conversation_items');\n    }\n});\n\nxabber.CachedServerFeatures = Backbone.ModelWithDataBase.extend({\n    putInCachedFeatures: function (value, callback) {\n        this.database.put('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedFeatures: function (value, callback) {\n        this.database.get('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedFeatures: function (callback) {\n        this.database.get_all('server_features_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedFeatures: function (value, callback) {\n        this.database.remove('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('server_features_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('server_features_items');\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.groups_settings = new xabber.GroupsSettings(null, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-groups-settings-' + this.get('jid')\n    });\n    this.cached_roster = new xabber.CachedRoster(null, {\n        name:'cached-roster-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'roster_items',\n        primKey: 'jid'\n    });\n    this.cached_sync_conversations = new xabber.CachedSyncСonversations(null, {\n        name:'cached-conversation-list-v108-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'conversation_items',\n        primKey: 'account_conversation_type'\n    });\n    this.cached_server_features = new xabber.CachedServerFeatures(null, {\n        name:'cached-features-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'server_features_items',\n        primKey: 'var'\n    });\n\n    this.groupchat_settings = new xabber.GroupChatSettings({id: 'group-chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-group-chat-settings-' + this.get('jid'),\n        fetch: 'after'\n    });\n    this.groups = new xabber.Groups(null, {account: this});\n    this.contacts = new xabber.Contacts(null, {account: this});\n\n    this.cached_roster.on(\"database_open_failed\", () => {\n        this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: 0}));\n        this.trigger('roster_created');\n    });\n\n    this.cached_roster.on(\"database_opened\", () => {\n        this.cached_roster.getFromRoster('roster_version', (res) => {\n            let roster_version = res && res.version ? res.version : 0;\n            this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: roster_version}));\n            this.trigger('roster_created');\n        });\n    });\n\n    this.blocklist = new xabber.BlockList(null, {account: this});\n\n    this._added_pres_handlers.push(this.contacts.handlePresence.bind(this.contacts));\n\n    this.on(\"ready_to_get_roster\", function () {\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            this.resources.reset();\n            this.contacts.each(function (contact) {\n                contact.resources.reset();\n                contact.resetStatus();\n            });\n            this.cached_roster.getAllFromRoster((roster_items) => {\n                $(roster_items).each((idx, roster_item) => {\n                    if (roster_item.jid === 'roster_version'){\n                        return;\n                    }\n                    this.contacts.mergeContact(roster_item);\n                });\n                if (this.connection && this.connection.do_synchronization && xabber.chats_view) {\n                    let options = {};\n                    this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                        let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                        !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                        last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                        this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                        this.roster.getRoster();\n                    });\n                }\n                else {\n                    this.roster.getRoster();\n                }\n                this.blocklist.getFromServer();\n            });\n        });\n        console.log(this.roster);\n        if (this.roster) {\n            dfd.resolve();\n        } else {\n            this.once('roster_created', () => {\n                dfd.resolve();\n            });\n        }\n    }, this);\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.registerIQHandler();\n    this.registerSyncedIQHandler();\n    if (this.roster) {\n        this.roster.registerHandler();\n    } else {\n        this.once('roster_created', () => {\n            this.roster.registerHandler();\n        });\n    }\n    this.blocklist.registerHandler();\n}, true, true);\n\nxabber.once(\"start\", function () {\n    this._roster_settings = new this.RosterSettings({id: 'roster-settings'},\n        {storage_name: this.getStorageName(), fetch: 'after'});\n    this.settings.roster = this._roster_settings.attributes;\n    this.roster_settings_view = xabber.settings_view.addChild(\n        'roster_settings', this.RosterSettingsView, {model: this._roster_settings});\n    this.contacts_view = this.left_panel.addChild('contacts', this.RosterLeftView,\n        {model: this.accounts});\n    this.contact_container = this.right_panel.addChild('details', this.Container);\n    this.details_container = this.right_contact_panel.addChild('details', this.Container);\n    this.contact_placeholder = this.right_panel.addChild('contact_placeholder',\n        this.ContactPlaceholderView);\n    this.add_contact_view = new this.AddContactView();\n    this.on(\"add_contact\", function () {\n        this.add_contact_view.show();\n    }, this);\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.chats,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $msg = env.$msg,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_date = (timestamp) => { return utils.pretty_date(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'dddd, D MMMM YYYY')},\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Message = Backbone.Model.extend({\n    idAttribute: 'unique_id',\n\n    defaults: function () {\n        let msgid = uuid();\n        return {\n            msgid: msgid,\n            unique_id: msgid,\n            type: 'main',\n            state: constants.MSG_PENDING\n        };\n    },\n\n    initialize: function () {\n        let time = this.get('time'), attrs = {};\n        if (time) {\n            attrs.timestamp = Number(moment(time));\n        } else {\n            attrs.timestamp = moment.now();\n            attrs.time = moment(attrs.timestamp).format();\n        }\n        if (!this.get('origin_id'))\n            (this.isSenderMe() && !this.get('synced_from_server') && !this.get('carbon_copied') && !this.get('is_archived')) && this.set('origin_id', this.get('msgid'));\n        this.updateUniqueId();\n        this.set(attrs);\n        this.on(\"change:origin_id change:stanza_id change:archived_id\", this.updateUniqueId, this);\n    },\n\n    updateUniqueId: function () {\n        this.set('unique_id',  this.get('stanza_id') || this.get('archived_id') || this.get('origin_id') || this.get('msgid'));\n    },\n\n    destroyOnEcho: function () {\n        this.set('state', constants.MSG_DELIVERED);\n        if (this.collection && this.collection.chat && this.collection.chat.item_view && this.collection.chat.item_view.content)\n            this.collection.chat.item_view.content.removeMessage(this);\n        else\n            this.destroy();\n    },\n\n    getText: function () {\n        let forwarded_message = this.get('forwarded_message');\n        if (forwarded_message && forwarded_message.length) {\n            return forwarded_message[0].get('message');\n        }\n        return this.get('message');\n    },\n\n    getState: function () {\n        return constants.MSG_STATE[this.get('state')];\n    },\n\n    getVerboseState: function () {\n        let state = xabber.getString(constants.MSG_VERBOSE_STATE[this.get('state')]);\n        if (this.account) {\n            if (!this.account.isOnline())\n                state = xabber.getString(\"account_is_offline\");\n        }\n        else if (!this.collection.account.isOnline())\n            state = xabber.getString(\"account_is_offline\");\n        return state;\n    },\n\n    isSenderMe: function () {\n        if (this.account)\n            return this.account.get('jid') === this.get('from_jid');\n        else if (this.collection && this.collection.account)\n            return this.collection.account.get('jid') === this.get('from_jid');\n        else\n            false;\n    }\n});\n\nxabber.MessagesBase = Backbone.Collection.extend({\n    model: xabber.Message,\n});\n\n  xabber.SearchedMessages = xabber.MessagesBase.extend({\n      comparator: 'timestamp',\n\n      initialize: function () {\n          this.collections = [];\n          this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n          this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n      },\n\n      addCollection: function (collection) {\n          this.collections.push(collection);\n      },\n\n      updateInCollections: function (event, contact) {\n          _.each(this.collections, function (collection) {\n              collection.update(contact, event);\n          });\n      }\n  });\n\n  xabber.Messages = Backbone.Collection.extend({\n    model: xabber.Message,\n    comparator: 'timestamp',\n\n    initialize: function (models, options) {\n        this.chat = options.chat;\n        this.account = options.account;\n    },\n\n    createInvitationFromStanza: function ($message, options) {\n        options = options || {};\n        let $invite_item = $message.find('invite'),\n            full_jid = $invite_item.attr('jid') || $message.attr('from'),\n            $delay = options.delay || $message.children('delay'),\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').text(),\n            markable = $message.find('markable').length > 0,\n            msgid = $message.attr('id'),\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id),\n            $group_info = $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_private_invitation,\n            group_info_attributes = {};\n\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n\n        if (message)\n            return message;\n\n        if (!from_jid)\n            return;\n\n        let attrs = {\n            xml: options.xml || $message[0],\n            carbon_copied: options.carbon_copied && !options.is_archived,\n            markable: markable,\n            msgid: msgid,\n            is_forwarded: options.is_forwarded,\n            forwarded_message: options.forwarded_message || null,\n            from_jid: from_jid,\n            origin_id: origin_id,\n            stanza_id: options.stanza_id,\n            archive_id: archive_id,\n            contact_stanza_id: options.contact_stanza_id,\n            is_archived: options.is_archived\n        };\n\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        options.synced_msg && (attrs.synced_invitation_from_server = true);\n        body && (attrs.message = body);\n\n        let contact = this.account.contacts.mergeContact({jid: Strophe.getBareJidFromJid(from_jid), group_chat: true}),\n            chat = this.account.chats.getChat(contact);\n\n        !chat.item_view.content && (chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view}));\n\n        contact.set('in_roster', false);\n        if ($group_info.length) {\n            let name = $group_info.find('name').text(),\n                model = $group_info.find('membership').text(),\n                privacy = $group_info.find('privacy').text(),\n                searchable = $group_info.find('index').text(),\n                parent_chat = $group_info.find('parent-chat').text(),\n                description = $group_info.find('description').text();\n            name && (group_info_attributes.name = name);\n            model && (group_info_attributes.model = name);\n            privacy && (group_info_attributes.privacy = privacy);\n            searchable && (group_info_attributes.searchable = searchable);\n            description && (group_info_attributes.description = description);\n            parent_chat.length && (is_private_invitation = true);\n            is_private_invitation && contact.set('private_chat', true);\n            privacy === 'incognito' && contact.set('incognito_chat', true);\n            let prev_group_info = contact.get('group_info') || {};\n            _.extend(prev_group_info, group_info_attributes);\n            contact.set('group_info', prev_group_info);\n        }\n\n        let invite_msg = chat.messages.createSystemMessage(_.extend(attrs, {\n            from_jid: from_jid,\n            auth_request: true,\n            invite: true,\n            private_invite: is_private_invitation || false,\n            is_accepted: false,\n            silent: false,\n            message: $message.find('reason').text()\n        }));\n        return invite_msg;\n    },\n\n    createFromStanza: function ($message, options) {\n        options || (options = {});\n        let $delay = options.delay || $message.children('delay'),\n            full_jid = $message.attr('from') || options.from_jid,\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text(),\n            markable = $message.find('markable').length > 0,\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            msgid = $message.attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id);\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n        if (!message){\n            message = this.findWhere({'origin_id': origin_id});\n        }\n        if (options.replaced) {\n            let conversation = $message.children('replace').attr('conversation');\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.SYNCHRONIZATION_OLD_OMEMO}\"]`).length)\n                return;\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && this.account.omemo && !options.forwarded) {\n                this.account.omemo.receiveChatMessage($message, _.extend(options, {from_jid: conversation, conversation: conversation}));\n                return;\n            }\n            $message = $message.children('replace').children('message');\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text();\n            let sid = $message.children('stanza-id').first().attr('id');\n            message = this.find(m => m.get('stanza_id') === sid || m.get('contact_stanza_id') === sid);\n            if (!message)\n                return;\n            from_jid = message.get('from_jid');\n            msgid = message.get('msgid');\n            let xml = message.get('xml');\n            xml.innerHTML = $message[0].innerHTML;\n            options.xml = xml;\n            options.forwarded_message = message.get('forwarded_message');\n        }\n\n        if (message && !options.replaced && !options.context_message && !options.is_unread_archived && !options.searched_message && !options.pinned_message && !options.participant_message && !options.echo_msg && !options.is_searched)\n            return message;\n\n        let attrs = {\n                xml: options.xml || $message[0],\n                original_message: body,\n                carbon_copied: options.carbon_copied && !options.is_archived,\n                markable: markable,\n                msgid: msgid,\n                is_forwarded: options.is_forwarded,\n                forwarded_message: options.forwarded_message || null,\n                from_jid: from_jid,\n                contact_stanza_id: options.contact_stanza_id,\n                is_archived: options.is_archived,\n                is_unread_archived: options.is_unread_archived,\n                is_between_anchors: options.is_between_anchors,\n                not_encrypted: options.not_encrypted || null,\n            },\n            mentions = [], blockquotes = [], markups = [], mutable_content = [], files = [], images = [], videos = [], locations = [], link_references = [];\n\n        options.encrypted && _.extend(attrs, {encrypted: true});\n        options.hasOwnProperty('is_trusted') && _.extend(attrs, {is_trusted: options.is_trusted});\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type'),\n                begin = parseInt($reference.attr('begin')),\n                end = parseInt($reference.attr('end'));\n            if (type === 'decoration') {\n                if ($reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`).length) {\n                    let $mention = $reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`),\n                        target = $mention.text(),\n                        is_gc = $mention.attr('node') === Strophe.NS.GROUP_CHAT ? true : false;\n                    mentions.push({start: begin, end: end, target: target, is_gc: is_gc});\n                } else {\n                    let markup = [];\n                    $reference.children().each((i, child_ref) => {\n                        if (constants.MARKUP_TAGS.indexOf(child_ref.tagName) > -1 && $(child_ref).attr('xmlns') === Strophe.NS.MARKUP) {\n                            if (child_ref.tagName === 'link')\n                                markup.push({type: child_ref.tagName, uri: $(child_ref).text()});\n                            else if (child_ref.tagName === 'quote') {\n                                blockquotes.push({start: begin, end: end});\n                            } else\n                                markup.push(child_ref.tagName);\n                        }\n                    });\n                    markup.length && markups.push({start: begin, end: end, markup: markup});\n                }\n            } else if (type === 'mutable') {\n                let $geolocation = $reference.children(`geoloc[xmlns=\"${Strophe.NS.GEOLOC}\"]`).first(),\n                    loc_attrs = {};\n                if ($geolocation.children('lat').text() && $geolocation.children('lon').text()){\n                    loc_attrs = {\n                        lat: $geolocation.children('lat').text(),\n                        lon: $geolocation.children('lon').text()\n                    }\n                    locations.push(loc_attrs);\n                    mutable_content.push({ start: begin, end: end, type: 'geolocation'});\n                };\n                if ($reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).length) {\n                    let $ogp = $reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).first(),\n                        link_reference_attrs = {};\n                    if ($ogp.length) {\n                        link_reference_attrs = {\n                            site: $ogp.children('meta[property=\"og:site_name\"]').attr('content'),\n                            type: $ogp.children('meta[property=\"og:type\"]').attr('content'),\n                            url: $ogp.children('meta[property=\"og:url\"]').attr('content'),\n                            description: $ogp.children('meta[property=\"og:description\"]').attr('content'),\n                            title: $ogp.children('meta[property=\"og:title\"]').attr('content'),\n                            image: $ogp.children('meta[property=\"og:image\"]').attr('content'),\n                            image_width: $ogp.children('meta[property=\"og:image:width\"]').attr('content'),\n                            image_height: $ogp.children('meta[property=\"og:image:height\"]').attr('content'),\n                            video_url: $ogp.children('meta[property=\"og:video:url\"]').attr('content'),\n                            original_text: $ogp.attr('url'),\n                            start: begin,\n                            end: end,\n                        }\n                        link_references.push(link_reference_attrs);\n                        mutable_content.push({start: begin, end: end, type: 'link_reference'});\n                    };\n                }\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($reference.children('forwarded').length)\n                    mutable_content.push({ start: begin, end: end, type: 'forward'});\n                else if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    mutable_content.push({ start: begin, end: end, type: type});\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        id: $file.children('gallery-id').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        attrs.has_encrypted_files = true;\n                    }\n                    if (this.getFileType($file.children('media-type').text()) === 'image')\n                        images.push(file_attrs);\n                    else if (this.getFileType($file.children('media-type').text()) === 'video')\n                        videos.push(file_attrs);\n                    else\n                        files.push(file_attrs);\n                }\n            } else if (type === 'data') {}\n        });\n\n        $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').each((idx, x_elem) => {\n            let $reference = $(x_elem).children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n                $user = $reference.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                if ($reference.length) {\n                    let begin = parseInt($reference.attr('begin')),\n                        end = parseInt($reference.attr('end'));\n                    mutable_content.push({start: begin, end: end, type: 'groupchat'});\n                    let user_id = $user.attr('id'),\n                        user_jid = $user.children('jid').text();\n                    _.extend(attrs, {\n                        user_info: {\n                            id: user_id,\n                            jid: user_jid,\n                            nickname: $user.children('nickname').text() || user_jid || user_id,\n                            role: $user.children('role').text(),\n                            avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                            avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                            badge: $user.children('badge').text()\n                        },\n                        from_jid: user_jid || user_id,\n                        groupchat_jid: Strophe.getBareJidFromJid(options.is_sender ? $message.attr('to') : $message.attr('from'))\n                    });\n                }\n        });\n\n        blockquotes.length && (attrs.blockquotes = blockquotes);\n        mentions.length && (attrs.mentions = mentions);\n        markups.length && (attrs.markups = markups);\n        images.length && (attrs.images = images);\n        videos.length && (attrs.videos = videos);\n        files.length && (attrs.files = files);\n        locations.length && (attrs.locations = locations);\n        link_references.length && (attrs.link_references = link_references);\n        attrs.mutable_content = mutable_content;\n        if (!attrs.mutable_content.length)\n            attrs.forwarded_message = null;\n\n        options.stanza_id && (attrs.stanza_id = options.stanza_id);\n        origin_id && (attrs.origin_id = origin_id);\n        archive_id && (attrs.archive_id = archive_id);\n\n        (options.replaced || mentions.length) && (attrs.mentions = mentions);\n        (options.replaced || markups.length) && (attrs.markups = markups);\n        (options.replaced || files.length) && (attrs.files = files);\n        (options.replaced || images.length) && (attrs.images = images);\n        (options.replaced || videos.length) && (attrs.videos = videos);\n        (options.replaced || link_references.length) && (attrs.link_references = link_references);\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            attrs.type = 'system';\n            attrs.participants_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).length &&\n            $message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).find('field[var=\"FORM_TYPE\"][type=\"hidden\"] value').text() === Strophe.NS.WEBCHAT) {\n            let addresses = [];\n            $message.children(`addresses[xmlns=\"${Strophe.NS.ADDRESS}\"]`).children('address').each((idx, address) => {\n                let $address = $(address);\n                addresses.push({type: $address.attr('type'), jid: $address.attr('jid')});\n            });\n            attrs.data_form = _.extend(this.account.parseDataForm($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)), {addresses: addresses});\n        }\n\n        body && (body = utils.slice_pretty_body(body, mutable_content));\n\n        if (!attrs.forwarded_message && body.removeEmoji() === \"\")\n            attrs.only_emoji = Array.from(body).length;\n\n        attrs.message = body;\n\n        options.echo_msg && ($delay = $message.children('time'));\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        (attrs.carbon_copied || from_jid == this.account.get('jid') && (options.is_archived || options.synced_msg)) && (attrs.state = constants.MSG_SENT);\n        options.synced_msg && (attrs.synced_from_server = true);\n        options.missed_history && (attrs.missed_msg = true);\n        if (options.is_unread_archived && (attrs.type !== 'system')){\n            let last_read_msg = this.find(m => this.chat.get('last_read_msg') && (m.get('stanza_id') === this.chat.get('last_read_msg') || m.get('contact_stanza_id') === this.chat.get('last_read_msg')));\n            if (last_read_msg){\n                if (Number(moment(attrs.time)) > last_read_msg.get('timestamp'))\n                    attrs.is_unread = true\n            } else {\n                attrs.is_unread = true\n            }\n        }\n        if (options.echo_msg) {\n            attrs.state = constants.MSG_DELIVERED;\n            attrs.timestamp = Number(moment(attrs.time));\n            attrs.from_jid = this.account.get('jid');\n        }\n        (options.context_message || options.participant_message || options.searched_message || options.is_searched) && (attrs.state = constants.MSG_ARCHIVED);\n\n        if (options.carbon_copied && options.encrypted && this.chat && this.chat.item_view && !this.chat.item_view.content)\n            this.chat.item_view.content = new xabber.ChatContentView({chat_item: this.chat.item_view});\n\n        if (options.pinned_message)\n            return this.account.pinned_messages.create(attrs);\n\n        if (options.participant_message)\n            return this.account.participant_messages.create(attrs);\n\n        if (options.searched_message) {\n            options.query && (attrs.query = options.query);\n            options.searched_in_contact_messages && (attrs.searched_in_contact_messages = options.searched_in_contact_messages)\n            return this.account.searched_messages.create(attrs);\n        }\n\n        if (options.context_message)\n            return this.account.context_messages.create(attrs);\n\n        if (options.echo_msg && message) {\n            message.destroyOnEcho();\n        }\n        if ((options.replaced || options.encrypted && options.is_unread_archived) && message) {\n            message.set(attrs);\n            return;\n        }\n\n        if (options.is_searched) {\n            let msg_contact = Strophe.getBareJidFromJid($message.attr('from'));\n            (msg_contact === this.account.get('jid')) && (msg_contact = Strophe.getBareJidFromJid($message.attr('to')));\n            message = xabber.all_searched_messages.create(attrs);\n            message.contact = this.account.contacts.mergeContact(msg_contact);\n            message.account = this.account;\n            return message;\n        }\n\n        message = this.create(attrs);\n\n        (options.encrypted && options.is_unread) && message.set('is_unread', true);\n\n        return message;\n    },\n\n      decryptFile: async function (uri, key) {\n          return new Promise((resolve, reject) => {\n              fetch(uri).then((r) => {\n                  r.blob().then((blob) => {\n                      let filereader = new FileReader();\n                      filereader.onloadend = () => {\n                          let arrayBuffer = filereader.result,\n                              exportedMasterKey = key.slice(0, 32),\n                              HMACData = key.slice(32);\n                          utils.AES.decrypt(exportedMasterKey, HMACData, arrayBuffer).then((enc_file) => {\n                              resolve(enc_file);\n                          });\n                      };\n                      filereader.readAsArrayBuffer(blob);\n                  });\n              }).catch(() => {\n                  resolve(null)\n              });\n          });\n      },\n\n    getFilename: function (url_media) {\n        let idx = url_media.lastIndexOf(\"/\");\n        return url_media.substr(idx + 1, url_media.length - 1);\n    },\n\n    getFileType: function(full_type) {\n        let end_idx = (full_type.indexOf(\"/\") > -1) ? full_type.indexOf(\"/\") : full_type.length,\n            type = full_type.slice(0, end_idx);\n        return type;\n    },\n\n    createSystemMessage: function (attrs) {\n        return this.create(_.extend({\n            type: 'system',\n            silent: true,\n            state: constants.MSG_DISPLAYED\n        }, attrs));\n    }\n});\n\n  xabber.JingleMessage = Backbone.Model.extend({\n      defaults: {\n          duration: 0,\n          contact_full_jid: \"\",\n          session_id: 0,\n          audio: true,\n          volume_on: true,\n          video_in: false,\n          video_screen: false,\n          state: 0\n      },\n\n      initialize: function (attrs, options) {\n          attrs = attrs || {};\n          attrs.video_live = attrs.video_live || false;\n          attrs.video = attrs.video_live;\n          this.contact = options.contact;\n          this.account = this.contact.account;\n          this.registerIqHandler();\n          this.audio_notifiation = xabber.playAudio(attrs.call_initiator ? xabber.settings.sound_on_call : xabber.settings.sound_on_dialtone, true);\n          this.modal_view = new xabber.JingleMessageView({model: this});\n          this.conn = new RTCPeerConnection({\n              iceServers: [\n                  {\n                      urls: \"stun:stun.l.google.com:19302\"\n                  },\n                  {\n                      urls: \"stun:stun01.pool-01.xabber.org:3478\"\n                  },\n              ].concat(constants.TURN_SERVERS_LIST),\n              sdpSemantics: 'unified-plan'\n          });\n          this.$remote_video_el = $('<video autoplay class=\"webrtc-remote-video\"/>');\n          this.$remote_audio_el = $('<audio autoplay class=\"webrtc-remote-audio hidden\"/>');\n          this.$local_video = this.modal_view.$el.find('.webrtc-local-video');\n          this.current_timer = 0;\n          this.conn.onconnectionstatechange = this.onChangeConnectionState.bind(this);\n          this.set(attrs);\n          this.get('in') && this.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n          this.onChangedMediaType();\n          this.conn.ontrack = (ev) => {\n              this.remote_stream = ev.streams[0];\n              this.modal_view.$el.find('.webrtc-remote-audio')[0].srcObject = ev.streams[0];\n          };\n          this._waiting_timeout = setTimeout(() => {\n              (!this.get('state') && this.get('status') === 'calling' && this.get('call_initiator') === this.account.get('jid')) && this.reject();\n          }, constants.JINGLE_WAITING_TIME * 1000);\n          this.conn.onicecandidate = this.onIceCandidate.bind(this);\n          this.conn.oniceconnectionstatechange = this.onChangeIceConnectionState.bind(this);\n          this.on('change:audio', this.setEnabledAudioTrack, this);\n          this.on('change:video', this.onChangedVideoValue, this);\n          this.on('change:video_live', this.setEnabledVideoTrack, this);\n          this.on('change:video_screen', this.setEnabledScreenShareVideoTrack, this);\n          this.on('change:video_in', this.onChangedRemoteVideo, this);\n          this.on('change:volume_on', this.onChangedVolume, this);\n          this.on('destroy', this.onDestroy, this);\n      },\n\n      registerIqHandler: function () {\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.iq_handler = this.account.connection.addHandler((iq) => {\n                  this.onIQ(iq);\n                  return true;\n              }, null, 'iq', 'set');\n\n      },\n\n      updateStatus: function (status) {\n          this.modal_view.updateStatusText(status);\n      },\n\n      updateTimer: function () {\n          this.updateStatus(utils.pretty_duration(++this.current_timer));\n      },\n\n      startTimer: function () {\n          this.updateTimer();\n          clearInterval(this.call_timer);\n          this.call_timer = setInterval(() => {\n              this.updateTimer();\n          }, 1000);\n      },\n\n      onConnected: function () {\n          this.get('video_live') && this.onChangedVideoValue();\n          xabber.stopAudio(this.audio_notifiation);\n          setTimeout(() => {\n              this.set('status', 'connected');\n              xabber.trigger('update_jingle_button');\n              this.updateStatus();\n              this.startTimer();\n          }, 1000);\n      },\n\n      onChangeConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.connectionState;\n          if (conn_state === 'connected') {\n              this.onConnected();\n          } else {\n              this.updateStatus(utils.pretty_name(conn_state) + '...');\n              if (conn_state === \"failed\") {\n                  clearTimeout(this._timeout_failed);\n                  this._timeout_failed = setTimeout(() => {\n                      if (peer_conn.connectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                          this.set('status', conn_state);\n                          xabber.trigger('update_jingle_button');\n                          this.reject();\n                          this.destroy();\n                          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                          xabber.current_voip_call = null;\n                      }\n                  }, 40000);\n                  peer_conn.restartIce();\n              }\n              if (conn_state === 'disconnected') {\n                  this.set('status', conn_state);\n                  xabber.trigger('update_jingle_button');\n                  this.destroy();\n                  xabber.current_voip_call = null;\n              }\n          }\n      },\n\n      onIceCandidate: function (ice) {\n          if (!ice || !ice.candidate || !ice.candidate.candidate)\n              return;\n          this.sendCandidate(ice.candidate);\n      },\n\n      onChangeIceConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.iceConnectionState;\n          if (conn_state === \"failed\") {\n              clearTimeout(this._timeout_failed);\n              this._timeout_failed = setTimeout(() => {\n                  if (peer_conn.iceConnectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                      this.set('status', conn_state);\n                      xabber.trigger('update_jingle_button');\n                      this.reject();\n                      this.destroy();\n                      this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                      xabber.current_voip_call = null;\n                  }\n              }, 40000);\n              peer_conn.restartIce();\n          }\n          if (conn_state === \"connected\")\n              !this.conn.connectionState && this.onConnected();\n      },\n\n      onChangedMediaType: function () {\n          this.$local_video.switchClass('hidden', !this.get('video'));\n      },\n\n      onChangedRemoteVideo: function () {\n          let incoming_video = this.get('video_in');\n          if (incoming_video) {\n              this.$remote_video_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-audio').replaceWith(this.$remote_video_el);\n              this.modal_view.$el.switchClass('multiple-videos', this.get('video') && this.get('video_in'));\n          }\n          else {\n              this.$remote_audio_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-video').replaceWith(this.$remote_audio_el);\n          }\n          this.modal_view.$el.find('.default-screen').switchClass('hidden', incoming_video);\n          this.onChangedVolume();\n      },\n\n      onChangedVolume: function () {\n          if (this.get('volume_on')) {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = false);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = false);\n          }\n          else {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = true);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = true);\n          }\n      },\n\n      setEnabledAudioTrack: function () {\n          this.local_stream.getAudioTracks()[0].enabled = this.get('audio');\n      },\n\n      setEnabledVideoTrack: function () {\n          let value = this.get('video_live'),\n              default_video = this.conn.getSenders().find(sender => sender.track && (sender.track.default || sender.track.screen));\n          value && this.set('video_screen', false);\n          (default_video && value) && this.createVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_screen'));\n      },\n\n      onDestroy: function () {\n          clearTimeout(this._waiting_timeout);\n          clearInterval(this.call_timer);\n          clearTimeout(this._timeout_failed);\n          xabber.stopAudio(this.audio_notifiation);\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.stopTracks();\n          this.conn.close();\n      },\n\n      setEnabledScreenShareVideoTrack:  function () {\n          let value = this.get('video_screen'),\n              default_video = this.conn.getSenders().find(sender => sender.track && !sender.track.screen);\n          value && this.set('video_live', false);\n          (default_video && value) && this.createScreenShareVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_live'));\n      },\n\n      onChangedVideoValue: function () {\n          let video_state = this.get('video') ? 'enable' : 'disable';\n          this.sendVideoStreamState(video_state);\n          this.onChangedMediaType();\n      },\n\n      createScreenShareVideoStream: function () {\n          navigator.mediaDevices.getDisplayMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  _.extend(track, {screen: true});\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      sendVideoStreamState: function (state) {\n          let $iq_video = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n              .c('video', {state: state, id: this.get('session_id')});\n          this.account.sendIQFast($iq_video);\n      },\n\n      onIQ: function (iq) {\n          let $incoming_iq = $(iq),\n              $jingle_initiate = $incoming_iq.find('jingle[action=\"session-initiate\"]'),\n              $jingle_accept = $incoming_iq.find('jingle[action=\"session-accept\"]'),\n              $jingle_info = $incoming_iq.find('jingle[action=\"session-info\"]'),\n              $jingle_video = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"] video`),\n              from_jid = $incoming_iq.attr('from'),\n              $result_iq = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')});\n          if ($jingle_initiate.length) {\n              if ($jingle_initiate.attr('sid') !== this.get('session_id'))\n                  return;\n              let offer_sdp = $jingle_initiate.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              offer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'offer', sdp: offer_sdp}));\n              this.acceptSession(offer_sdp);\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_accept.length) {\n              if ($jingle_accept.attr('sid') !== this.get('session_id'))\n                  return;\n              let answer_sdp = $jingle_accept.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              answer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: answer_sdp}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_info.length) {\n              if ($jingle_info.attr('sid') !== this.get('session_id'))\n                  return;\n              let candidate = $jingle_info.find('candidate');\n              candidate.length && this.conn.addIceCandidate(new RTCIceCandidate({candidate: candidate.text(), sdpMLineIndex: candidate.attr('sdpMLineIndex'), sdpMid: candidate.attr('sdpMid')}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_video.length) {\n              let session_id = $jingle_video.attr('id');\n              if (session_id === this.get('session_id')) {\n                  let video_state = $jingle_video.attr('state');\n                  if (video_state === 'enable')\n                      this.set('video_in', true);\n                  if (video_state === 'disable')\n                      this.set('video_in', false);\n              }\n              this.account.sendIQFast($result_iq);\n          }\n      },\n\n      startCall: function () {\n          this.set('call_initiator', this.account.get('jid'));\n          this.createAudioStream();\n          this.get('video_live') && this.createVideoStream();\n          this.propose();\n      },\n\n      createAudioStream: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n          });\n      },\n\n      createVideoStream: function () {\n          navigator.mediaDevices.getUserMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      stopTracks: function () {\n          this.local_stream && this.local_stream.getTracks().forEach((track) => {\n              track.stop();\n              this.local_stream.removeTrack(track);\n          });\n      },\n\n      propose: function () {\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_search\"));\n          let $propose_msg = $msg({type: 'chat', to: this.contact.get('jid')})\n              .c('propose', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up().up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('body').t(xabber.getString(\"jingle__text_body_message\")).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($propose_msg);\n      },\n\n      accept: function () {\n          let $accept_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('accept', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')}).up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.set('jingle_start', moment.now());\n          this.account.sendMsg($accept_msg);\n          xabber.stopAudio(this.audio_notifiation);\n          this.set('status', 'connecting');\n          xabber.trigger('update_jingle_button');\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n          this.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection, true);\n      },\n\n      reject: function (reason) {\n          if (this.get('status') === 'disconnected' || this.get('status') === 'disconnecting')\n              return;\n          let $reject_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')});\n          if (this.get('jingle_start')) {\n              let end = moment.now(),\n                  duration = Math.round((end - this.get('jingle_start'))/1000),\n                  call_attrs = {initiator: this.get('call_initiator')};\n              if (this.call_timer)\n                  _.extend(call_attrs, {start: moment(this.get('jingle_start')).format(), end: moment(end).format(), duration: duration});\n              reason && (call_attrs.reason = reason);\n              $reject_msg.c('call', call_attrs).up();\n          }\n          $reject_msg.up().c('store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($reject_msg);\n          this.createSystemMessage($reject_msg);\n          this.set('status', 'disconnected');\n          xabber.trigger('update_jingle_button');\n          this.destroy();\n          xabber.current_voip_call = null;\n      },\n\n      createSystemMessage: function (message) {\n          let $message = $(message.nodeTree),\n              chat = this.account.chats.getChat(this.contact),\n              time = $message.find('call').attr('end');\n          if (time) {\n              let duration = $message.find('call').attr('duration'),\n                  initiator = $message.find('call').attr('initiator');\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)])\n              });\n          }\n          else {\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(\"jingle__system_message__cancelled_call\")\n              });\n          }\n      },\n\n      initVideoTrack: function () {\n          let canvas = Object.assign(document.createElement(\"canvas\"), {width: 320, height: 240});\n          let ctx = canvas.getContext('2d');\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          let p = ctx.getImageData(0, 0, canvas.width, canvas.height);\n          requestAnimationFrame(function draw(){\n              for (let i = 0; i < p.data.length; i++)\n                  p.data[i++] = p.data[i++] = p.data[i++] = 1;\n              ctx.putImageData(p, 0, 0);\n              requestAnimationFrame(draw);\n          });\n          return _.extend(canvas.captureStream(60).getTracks()[0], {default: true});\n      },\n\n      initSession: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n              return this.conn.createOffer({offerToReceiveAudio:true, offerToReceiveVideo: true});\n          }).then((offer) => {\n                  this.set('session_initiator', this.account.get('jid'));\n                  this.conn.setLocalDescription(offer).then(() => {\n                      let offer_sdp = offer.sdp,\n                          $iq_offer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-initiate', initiator: this.account.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(offer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                      this.account.sendIQFast($iq_offer_sdp);\n                  });\n          });\n      },\n\n      sendCandidate: function (candidate) {\n          let $iq_candidate = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-info', initiator: this.get('session_initiator'), sid: this.get('session_id')})\n              .c('content', {creator: 'initiator', name: 'voice'})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up()\n              .c('transport', {xmlns: Strophe.NS.JINGLE_TRANSPORTS_ICE})\n              .c('candidate', {sdpMLineIndex: candidate.sdpMLineIndex, sdpMid: candidate.sdpMid }).t(candidate.candidate);\n          this.account.sendIQFast($iq_candidate);\n      },\n\n      acceptSession: async function () {\n          this.set('session_initiator', this.contact.get('jid'));\n          this.conn.createAnswer().then((answer) => {\n              this.conn.setLocalDescription(answer).then(() => {\n                  let answer_sdp = answer.sdp,\n                      $iq_answer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-accept', initiator: this.contact.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(answer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                  this.account.sendIQFast($iq_answer_sdp);\n              });\n          });\n      }\n  });\n\n  xabber.Chat = Backbone.Model.extend({\n    defaults: {\n        opened: true,\n        active: false,\n        display: false,\n        displayed_sent: false,\n        last_displayed_id: 0,\n        last_delivered_id: 0,\n        unread: 0,\n        timestamp: 0,\n        const_unread: 0,\n        encrypted: false\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.sync_created = options.sync_created;\n        this.account = this.contact ? this.contact.account : options.account;\n        let jid = this.contact ? this.contact.get('jid') : attrs.jid;\n        this.set({\n            id: attrs && attrs.id || this.contact.hash_id,\n            jid: jid\n        });\n        (attrs && attrs.type === 'encrypted') && this.set('encrypted', true);\n        if (attrs && attrs.type === 'saved') {\n            this.set('saved', true);\n            this.account.on('remove_saved_chat', this.onContactDestroyed, this);\n        }\n        this.retraction_version = 0;\n        if (this.contact) {\n            this.set('group_chat', this.contact.get('group_chat'));\n            this.contact.on(\"destroy\", this.onContactDestroyed, this);\n            this.contact.on(\"change:group_chat\", this.onChangedContact, this);\n        } else {\n            this.set({'group_chat': false, 'name': attrs.name});\n        }\n        this.messages = new xabber.Messages(null, {account: this.account, chat: this});\n        this.messages_unread = new xabber.Messages(null, {account: this.account});\n        this.item_view = new xabber.ChatItemView({model: this});\n        this.plyr_players = [];\n        this.retracted_msg_id_list = [];\n        this.on(\"get_retractions_list\", this.getAllMessageRetractions, this);\n        this.on(\"change:timestamp\", this.onChangedTimestamp, this);\n        this.on(\"update_last_read_msg\", this.onChangedLastReadMsg, this);\n    },\n\n    onChangedTimestamp: function () {\n    },\n\n    onChangedLastReadMsg: function (options) {\n        if (this.get('prev_last_read_msg') && this.get('last_read_msg') && this.get('prev_last_read_msg') !== this.get('last_read_msg')){\n            if (this.item_view && !this.item_view.content){\n                this.item_view.content = new xabber.ChatContentView({chat_item: this.item_view});\n            }\n            this.item_view.content._no_scrolling_event = true;\n            let query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                is_first: true,\n                sync_update: options && options.sync_update ? true : false,\n                var: [\n                    {var: 'after-id', value: this.get('prev_last_read_msg')},\n                    {var: 'before-id', value: this.get('last_read_msg')},\n                ]\n            };\n            this.requestHistoryBetweenAnchors(query);\n\n        }\n        this.set('prev_last_read_msg', this.get('last_read_msg'));\n    },\n\n    requestHistoryBetweenAnchors: function (query) {\n        this.item_view.content.MAMRequest(query, (success, messages, rsm) => {\n            if (rsm.complete)\n                this.set('last_sync_unread_id', this.get('last_read_msg'));\n            if (query.is_first && !query.sync_update) {\n                let read_count = Number(rsm.count) + 1;\n                read_count = this.get('const_unread') - read_count;\n                (read_count < 0) && (read_count = 0);\n                this.set('const_unread', read_count);\n            }\n            if (!rsm.complete && (rsm.count > messages.length)){\n                query.after = rsm.last;\n                query.is_first = false;\n                this.requestHistoryBetweenAnchors(query);\n            }\n            _.each(messages, (message) => {\n                let message_item = this.account.chats.receiveChatMessage(message,\n                        {\n                            is_archived: true,\n                            is_between_anchors: true,\n                        }\n                    );\n                message_item && message_item.set('is_unread', false)\n            });\n            if (rsm.complete){\n                let last_read_msg = this.messages.find(m => this.get('last_read_msg') && (m.get('stanza_id') === this.get('last_read_msg') || m.get('contact_stanza_id') === this.get('last_read_msg'))),\n                    deferred = new $.Deferred();\n                deferred.done(() => {\n                    last_read_msg && last_read_msg.set('is_unread', false);\n                    if (this.item_view.content.isVisible()){\n                        this.item_view.content._long_reading_timeout = true;\n                        this.item_view.content.scrollToUnread();\n                    } else {\n                        this.set('show_new_unread', true);\n                    }\n                    this.item_view.content._no_scrolling_event = false;\n                });\n                if (!last_read_msg){\n                    this.contact.getMessageByStanzaId(this.get('last_read_msg'), ($message) => {\n                        last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        deferred.resolve()\n                    });\n                } else {\n                    deferred.resolve()\n                }\n            }\n        }, (err) => {\n            console.log('error');\n        });\n    },\n\n\n    isMuted: function () {\n          if (this.get('muted') && (this.get('muted') < (Date.now() / 1000)))\n              this.set('muted', false)\n          return this.get('muted')\n    },\n\n      onChangedContact: function () {\n          let changed = this.contact.changed;\n          if (_.has(changed, 'group_chat'))\n              this.set('group_chat', this.contact.get('group_chat'));\n          if (_.has(changed, 'blocked'))\n              this.set('blocked', this.contact.get('blocked'));\n      },\n\n    recountUnread: function () {\n        this.set('unread', this.messages_unread.length);\n        if (this.contact && this.get('archived') && this.isMuted()) {\n        }\n        else {\n            xabber.toolbar_view.recountAllMessageCounter();\n        }\n    },\n\n    onContactDestroyed: function () {\n        this.resetUnread();\n        this.destroy();\n    },\n\n    resetUnread: function () {\n        let unread = this.get('unread');\n        if (unread > 0) {\n            this.set('unread', 0);\n            xabber.recountAllMessageCounter(unread);\n            xabber.toolbar_view.recountAllMessageCounter(unread);\n        }\n    },\n\n    searchMessages: function (query, callback) {\n        this.messages_view = new xabber.SearchedMessagesView({\n            query_text: query,\n            model: this\n        });\n        this.messages_view.messagesRequest({}, () => {\n            xabber.body.setScreen('all-chats', {\n                right: 'searched_messages',\n                model: this\n            });\n        });\n    },\n\n    sendDataForm: function (message, variable) {\n        let data_form = message.get('data_form');\n        if (!data_form)\n            return;\n        let msg = $msg({type: 'chat'});\n        data_form.fields.forEach((field) => {\n            if (field.type  === 'boolean') {\n                if (field.var === variable)\n                    field.values = [true];\n                else\n                    field.values = [false];\n            }\n        });\n        msg = this.account.addDataFormToStanza(msg, data_form);\n        data_form.addresses.forEach((address) => {\n            if (address.type === 'replyto')\n                $(msg.nodeTree).attr('to', address.jid);\n            this.account.sendMsg(msg);\n        });\n    },\n\n    setStanzaId: function (unique_id, stanza_id) {\n        let message = this.messages.get(unique_id),\n            origin_id = message.get('origin_id');\n        if (this.item_view && this.item_view.content && stanza_id)\n            this.item_view.content.$(`.chat-message[data-uniqueid=\"${unique_id}\"]`).data('uniqueid', stanza_id)[0].setAttribute('data-uniqueid', stanza_id);\n        message.set('stanza_id', stanza_id);\n        if (this.get('encrypted'))\n            this.account.omemo && this.account.omemo.updateMessage({stanza_id, origin_id}, this.contact);\n    },\n\n    getCallingAvailability: function (to, session_id, callback) {\n        let iq = $iq({to: to, type: 'get'})\n            .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n            .c('session', {id: session_id});\n        this.account.sendIQFast(iq, callback);\n    },\n\n    sendReject: function (options) {\n        !options && (options = {});\n        let msg_to = options.to || this.contact.get('jid'),\n            $reject_msg = $msg({\n                type: 'chat',\n                to: msg_to\n            })\n                .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: options.session_id})\n                .c('call', {reason: options.reason}).up().up()\n                .c('store', {xmlns: Strophe.NS.HINTS}).up()\n                .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n                .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n        this.account.sendMsg($reject_msg);\n    },\n\n    initIncomingCall: function (full_jid, session_id) {\n        if (!xabber.get('audio') || !xabber.settings.jingle_calls) {\n            return;\n        }\n        xabber.current_voip_call = new xabber.JingleMessage({contact_full_jid: full_jid, session_id: session_id, call_initiator: this.contact.get('jid')}, {contact: this.contact, });\n        xabber.current_voip_call.modal_view.show({status: 'in'});\n        xabber.trigger('update_jingle_button');\n        if (xabber.body.screen.get('name') === 'all-chats' && !xabber.body.screen.get('right') && this.item_view)\n            this.item_view.open();\n    },\n\n    endCall: function (status) {\n        status && xabber.current_voip_call.set('status', status);\n        xabber.trigger('update_jingle_button');\n        xabber.current_voip_call.destroy();\n        xabber.current_voip_call = null;\n        xabber.trigger('update_jingle_button');\n    },\n\n    getAllMessageRetractions: function () {\n        if (!this.contact.get('group_chat'))\n            return;\n        let retractions_query = $iq({type: 'get', to: this.contact.get('jid')})\n            .c('query', {xmlns: Strophe.NS.REWRITE, version: this.retraction_version});\n        this.account.sendIQ(retractions_query);\n    },\n\n    receiveMessage: function ($message, options) {\n        let from_bare_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            carbon_copied = options.carbon_copied;\n        // searching chat marker message\n        let $marker = $message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`),\n            $receipt_request = $message.children(`request[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $receipt_response = $message.children(`received[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $jingle_msg_propose = $message.children(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_accept = $message.children(`accept[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_reject = $message.children(`reject[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n        if ($jingle_msg_propose.length && !options.searched_message) {\n            if (carbon_copied && (from_bare_jid == this.account.get('jid'))) {\n                return;\n            }\n            if (options.synced_msg){\n                if (this.get('saved'))\n                    return;\n                let view = xabber.chats_view.child(this.contact.hash_id);\n                $message.find('time').attr('stamp') && this.set('timestamp', $message.find('time').attr('stamp'));\n                if (!view.content)\n                    view.content = new xabber.ChatContentView({chat_item: view});\n                if (view && view.content)\n                    view.content.receiveNoTextMessage($message, carbon_copied);\n                return;\n            }\n            if (options.is_archived)\n                return;\n            else {\n                let session_id = $jingle_msg_propose.attr('id'),\n                    iq_to = $message.attr('from');\n                this.getCallingAvailability(iq_to, session_id, () => {\n                    if (xabber.current_voip_call) {\n                        let reason = from_bare_jid === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                        this.sendReject({session_id: session_id, reason: reason});\n                        this.messages.createSystemMessage({\n                            from_jid: this.account.get('jid'),\n                            message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                        });\n                        return;\n                    }\n                    this.initIncomingCall(iq_to, session_id);\n                });\n            }\n        }\n        if ($jingle_msg_accept.length) {\n            if (options.is_archived || options.synced_msg)\n                return;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_accept.attr('id')) {\n                if (carbon_copied)\n                    this.endCall();\n                else {\n                    !xabber.current_voip_call.get('state') && xabber.current_voip_call.set('state', constants.JINGLE_MSG_ACCEPT);\n                    xabber.trigger('update_jingle_button');\n                    let jingle_start = $jingle_msg_accept.find('time').attr('stamp');\n                    jingle_start = jingle_start ? Number(moment(jingle_start)) : moment.now();\n                    xabber.current_voip_call.set('jingle_start', jingle_start);\n                    !xabber.current_voip_call.get('contact_full_jid') && xabber.current_voip_call.set('contact_full_jid', $message.attr('from'));\n                    xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                    xabber.current_voip_call.set('status', 'connecting');\n                    xabber.trigger('update_jingle_button');\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n                    xabber.current_voip_call.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection);\n                }\n            }\n        }\n        if ($jingle_msg_reject.length) {\n            if (this.messages.filter(m => m.get('session_id') === $jingle_msg_reject.attr('id')).length)\n                return;\n            let time = options.delay && options.delay.attr('stamp') || $message.find('delay').attr('stamp') || $message.find('time').attr('stamp'), message, msg_text = \"\";\n            if ($jingle_msg_reject.children('call').length) {\n                let duration = $jingle_msg_reject.children('call').attr('duration'),\n                    initiator = $jingle_msg_reject.children('call').attr('initiator');\n                if (duration && initiator)\n                    msg_text =xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)]);\n                else\n                    msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            }\n            else\n                msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            options.is_unread && (options.reject_contact_stanza_id = options.contact_stanza_id);\n            message = this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                time: time,\n                session_id: $jingle_msg_reject.attr('id'),\n                stanza_id: options.stanza_id,\n                contact_stanza_id: options.reject_contact_stanza_id,\n                is_unread: options.is_unread,\n                message: msg_text\n            });\n            if (options.is_archived || options.synced_msg)\n                return message;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_reject.attr('id')) {\n                xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                let busy_audio = xabber.playAudio('busy');\n                setTimeout(() => {\n                    xabber.stopAudio(busy_audio);\n                }, 1500);\n                this.endCall($jingle_msg_reject.children('call').attr('reason') == 'device_busy' ? 'device_busy' : $jingle_msg_reject.children('call').attr('reason') == 'busy' ? 'busy' : 'disconnected');\n            }\n            return message;\n        }\n        if (!options.is_archived) {\n            let $stanza_id, $contact_stanza_id;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n                stanza_id = $(stanza_id);\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length) {\n                    if (stanza_id.attr('by') === from_bare_jid) {\n                        !$stanza_id && ($stanza_id = stanza_id);\n                        $contact_stanza_id = stanza_id;\n                    }\n                    else\n                        $stanza_id = stanza_id;\n                }\n                else {\n                    if (stanza_id.attr('by') === from_bare_jid)\n                        $contact_stanza_id = stanza_id;\n                    else\n                        $stanza_id = stanza_id;\n                }\n            });\n            (!options.stanza_id && $stanza_id) && (options.stanza_id = $stanza_id.attr('id'));\n            (!options.contact_stanza_id && $contact_stanza_id) && (options.contact_stanza_id = $contact_stanza_id.attr('id'));\n        }\n        if ($marker.length) {\n            let marker_tag = $marker[0].tagName.toLowerCase();\n            if ((marker_tag === 'markable') && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread)) {\n                this.sendMarker($message.attr('id'), 'received', options.stanza_id, options.contact_stanza_id);\n                this.get('saved') && this.sendMarker($message.attr('id'), 'displayed', options.stanza_id, options.contact_stanza_id);\n            }\n            if ((marker_tag !== 'markable') && !carbon_copied) {\n                this.receiveMarker($message, marker_tag, carbon_copied);\n                return;\n            }\n            if ((marker_tag === 'displayed') && carbon_copied)\n                this.receiveCarbonsMarker($marker);\n        }\n\n        if ($receipt_request.length && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread))\n            this.sendDeliveryReceipt($message);\n\n        if ($receipt_response.length)\n            this.receiveDeliveryReceipt($message);\n\n        if (!$message.find('body').length || $jingle_msg_propose.length || $jingle_msg_accept.length || $jingle_msg_reject.length) {\n            if (this.get('saved'))\n                return;\n            let view = xabber.chats_view.child(this.contact.hash_id);\n            if (!view.content)\n                view.content = new xabber.ChatContentView({chat_item: view});\n            if (view && view.content)\n                view.content.receiveNoTextMessage($message, carbon_copied);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (from_bare_jid === this.account.get('jid'))\n                return;\n            let group_jid = $message.find('invite').attr('jid') || $message.find('message').attr('from'),\n                contact = this.account.contacts.get(group_jid), chat;\n            if (contact)\n                if (contact.get('subscription') == 'both')\n                    return;\n            if (this.account.connection && this.account.connection.do_synchronization) {\n                if (options.synced_msg || !options.synced_msg && !options.is_archived)\n                    return this.messages.createInvitationFromStanza($message, options);\n            } else {\n                let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n                this.account.sendIQFast(iq, (iq) => {\n                        let items = $(iq).find('item'),\n                            current_timestamp = Number(moment($message.find('delay').attr('stamp') || $message.find('time').attr('stamp') || (options.delay) && Number(moment(options.delay.attr('stamp'))) || moment.now())),\n                            last_blocking_timestamp,\n                            has_blocking = false;\n                        if (items.length > 0) {\n                            items.each((idx, item) => {\n                                let $item = $(item),\n                                    item_jid = $item.attr('jid'), blocking_timestamp = \"\";\n                                if (item_jid.indexOf(group_jid) > -1) {\n                                    has_blocking = true;\n                                    blocking_timestamp = item_jid.substr(item_jid.lastIndexOf(\"/\") + 1, item_jid.length - group_jid.length);\n                                    if (!blocking_timestamp) {\n                                        last_blocking_timestamp = \"\";\n                                        return false;\n                                    } else if (!last_blocking_timestamp || last_blocking_timestamp < blocking_timestamp)\n                                        last_blocking_timestamp = blocking_timestamp;\n                                }\n                            });\n                        }\n                        if (_.isUndefined(last_blocking_timestamp) || last_blocking_timestamp && last_blocking_timestamp < current_timestamp)\n                            return this.messages.createInvitationFromStanza($message, options);\n                    }, () => {\n                        return this.messages.createInvitationFromStanza($message, options);\n                    });\n            }\n        }\n        else{\n            return this.messages.createFromStanza($message, options);\n        }\n    },\n\n    getMessageContext: function (unique_id, options) {\n        options = options || {};\n        let messages = options.mention && this.account.messages || options.searched_messages && !options.encrypted && this.account.searched_messages || options.message && xabber.all_searched_messages || this.account.messages,\n            message = messages.get(unique_id),\n            dfd = new $.Deferred;\n\n        dfd.done(() => {\n            if (message) {\n                if (options.searched_messages)\n                    message.set('searched_message', false);\n                let stanza_id = message.get('stanza_id');\n                this.messages_view = new xabber.MessageContextView({\n                    contact: this.contact,\n                    mention_context: options.mention,\n                    model: this,\n                    stanza_id_context: stanza_id,\n                    encrypted: options.encrypted\n                });\n                this.account.context_messages.add(message);\n                this.messages_view.messagesRequest({after: stanza_id}, () => {\n                    let screen = 'all-chats';\n                    if (options.mention)\n                        screen = 'mentions';\n                    else if (options.message)\n                        screen = xabber.body.screen.get('name');\n                    xabber.body.setScreen(screen, {\n                        right: 'message_context',\n                        model: this,\n                    }, {\n                        right_contact_save: true\n                    });\n                });\n            }\n\n        })\n        if (!message) {\n            message = messages.models.find(item => {\n                return item.get('origin_id') === unique_id;\n            })\n            if (!message) {\n                this.contact.getMessageByStanzaId(unique_id, ($message) => {\n                    if (options.encrypted && this.account.omemo) {\n                        let omemo_dfd = new $.Deferred;\n                        omemo_dfd.done(($msg, msg_options) => {\n                            msg_options = msg_options || {};\n                            msg_options.searched_message = true;\n                            message = this.account.chats.receiveChatMessage($msg[0], msg_options);\n                            dfd.resolve();\n                        }).fail(() => {\n                            dfd.resolve();\n                        });\n                        message = this.account.omemo.receiveChatMessage($message, {\n                            searched_message: true,\n                            gallery: true,\n                        }, omemo_dfd);\n\n                    } else {\n                        message = this.account.chats.receiveChatMessage($message, {\n                            searched_message: true,\n                        });\n                        dfd.resolve();\n                    }\n                }, {encrypted: options.encrypted});\n\n            } else {\n                dfd.resolve()\n            }\n        } else {\n            dfd.resolve()\n        }\n    },\n\n    sendDeliveryReceipt: function ($message) {\n        let $delivery_msg = $msg({\n            to: this.contact.get('jid'),\n            type: 'chat',\n            id: uuid()})\n            .c('received', { xmlns: Strophe.NS.RECEIPTS, id: $message.attr('id')});\n        this.account.sendMsg($delivery_msg);\n    },\n\n    sendMarker: function (msg_id, status, stanza_id, contact_stanza_id) {\n        status || (status = 'displayed');\n        let stanza = $msg({\n            to: this.get('jid'),\n            type: 'chat',\n            id: uuid()\n        }).c(status).attrs({\n            xmlns: Strophe.NS.CHAT_MARKERS,\n            id: msg_id || stanza_id || contact_stanza_id || \"\"\n        });\n        stanza_id && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: stanza_id, by: this.account.get('jid')}).up();\n        (!this.get('saved') && contact_stanza_id) && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: contact_stanza_id, by: this.contact.get('jid')}).up();\n        this.account.sendMsg(stanza);\n    },\n\n    receiveMarker: function ($message, tag, carbon_copied) {\n        let $displayed = $message.find('displayed'),\n            $received = $message.find('received'),\n            error = $message.attr('type') === 'error';\n        if (error || !$displayed.length && !$received.length)\n            return;\n        let marked_msg_id = $displayed.attr('id') || $received.attr('id'),\n            marked_stanza_id = $displayed.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id') || $received.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(`${this.id}:encrypted`),\n                enc_msg = enc_chat && enc_chat.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n            if (enc_msg)\n                enc_chat.receiveMarker($message, tag, carbon_copied);\n            return;\n        }\n        if (msg.isSenderMe()) {\n            if ($received.length) {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DELIVERED)\n                    return;\n                }\n                if (msg_state !== constants.MSG_DISPLAYED) {\n                    let delivered_time = $received.children('time').attr('stamp');\n                    if (delivered_time) {\n                        msg.set('time', pretty_datetime(delivered_time));\n                        msg.set('timestamp', Number(delivered_time));\n                    }\n                }\n                this.setMessagesDelivered(msg.get('timestamp'));\n            } else {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DISPLAYED)\n                    return;\n                }\n                this.setMessagesDisplayed(msg.get('timestamp'));\n            }\n        } else {\n            msg.set('is_unread', false);\n        }\n    },\n\n    setMessagesDelivered: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DELIVERED));\n    },\n\n    setMessagesDisplayed: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DISPLAYED));\n    },\n\n    receiveCarbonsMarker: function ($marker) {\n        let stanza_id = $marker.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg_id = $marker.attr('id'),\n            msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id), msg_idx;\n        msg && (msg_idx = this.messages.indexOf(msg));\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(this.id + ':encrypted'),\n                enc_msg = enc_chat && enc_chat.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id);\n            if (enc_msg){\n                enc_chat.receiveCarbonsMarker($marker);\n                return;\n            }\n        }\n        if (this.get('const_unread') && this.get('last_read_msg')){\n            let last_read_msg_id = this.get('last_read_msg'),\n                last_read_msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === last_read_msg_id || m.get('contact_stanza_id') === last_read_msg_id)),\n                deferred = new $.Deferred(),\n                second_deferred = new $.Deferred(),\n                new_last_read_msg = msg;\n            second_deferred.done(() => {\n                if (last_read_msg.get('timestamp') < new_last_read_msg.get('timestamp')){\n                    this.set('last_read_msg', new_last_read_msg.get('stanza_id'))\n                    this.trigger('update_last_read_msg');\n                }\n            });\n            deferred.done(() => {\n                if (!new_last_read_msg){\n                    this.contact.getMessageByStanzaId(stanza_id, ($message) => {\n                        new_last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        second_deferred.resolve()\n                    });\n                } else {\n                    second_deferred.resolve()\n                }\n            });\n            if (!last_read_msg){\n                this.contact.getMessageByStanzaId(last_read_msg_id, ($message) => {\n                    last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                    deferred.resolve()\n                });\n            } else {\n                deferred.resolve()\n            }\n        }\n        if (msg_idx > -1) {\n            for (let i = msg_idx; i >= 0; i--) {\n                let message = this.messages.models[i];\n                message.set('is_unread', false);\n            }\n        }\n        else {\n            let unread_msg = this.messages_unread.find(m => m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id || m.get('msgid') === msg_id);\n            unread_msg && unread_msg.set('is_unread', false);\n        }\n    },\n\n    receiveDeliveryReceipt: function ($message) {\n        let $received = $message.find('received'),\n            delivered_origin_id = $received.attr('id'),\n            delivered_stanza_id = $received.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.get(delivered_origin_id || delivered_stanza_id);\n        if (!msg)\n            return;\n        msg.isSenderMe() && msg.set('state', constants.MSG_DELIVERED);\n    },\n\n    onPresence: function (type) {\n        let jid = this.get('jid');\n        if (!this.contact.get('group_chat') && !this.contact.get('in_roster')) {\n            if (type === 'subscribe') {\n                this.messages.createSystemMessage({\n                    from_jid: jid,\n                    auth_request: true,\n                    message: xabber.getString(\"action_subscription_received\")\n                });\n            }\n        }\n    },\n\n    onRosterPush: function (type) {\n        let jid = this.get('jid');\n        // not used\n        if (type === 'remove')\n            this.messages.createSystemMessage({\n                from_jid: jid,\n                silent: false,\n                message: xabber.getString(\"action_contact_deleted\")\n            });\n\n    },\n\n    retractMessages: function (msgs, group_chat, symmetric) {\n        let msgs_responses = 0, count = msgs.length, dfd = new $.Deferred();\n        dfd.done((num) => {\n            if (num === 0) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n            else if (num !== msgs.length) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n        });\n        $(msgs).each((idx, item) => {\n            let stanza_id = item.get('stanza_id'),\n                contact_stanza_id = item.get('contact_stanza_id');\n            if (stanza_id || contact_stanza_id) {\n                let iq_retraction = $iq({type: 'set', to: group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')})\n                    .c('retract-message', {\n                        id: (this.get('group_chat') && contact_stanza_id || stanza_id),\n                        xmlns: Strophe.NS.REWRITE,\n                        symmetric: symmetric,\n                        type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                        by: this.account.get('jid')\n                    });\n                this.account.sendIQFast(iq_retraction, (success) => {\n                        this.item_view.content.removeMessage(item);\n                        msgs_responses++;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    }, (error) => {\n                        msgs_responses++;\n                        if ($(error).find('not-allowed').length)\n                            count--;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    });\n            }\n        });\n    },\n\n    retractMessagesByUser: function (user_id) {\n        let iq_retraction = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('retract-user', {\n                id: user_id,\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: true\n            });\n        this.account.sendIQFast(iq_retraction, (success) => {\n            let user_msgs = this.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == user_id));\n            $(user_msgs).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    retractAllMessages: function (symmetric, callback, errback) {\n        let is_group_chat = this.get('group_chat'),\n            iq_retraction = $iq({type: 'set', to: is_group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')}),\n            retract_attrs = {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: symmetric\n        };\n        retract_attrs.conversation = this.get('jid');\n        this.get('encrypted') && (retract_attrs.type = 'encrypted');\n        iq_retraction.c('retract-all', retract_attrs);\n        this.account.sendIQFast(iq_retraction, (iq_response) => {\n            let all_messages = this.messages.models;\n            $(all_messages).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n            callback && callback();\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            errback && errback();\n        });\n    },\n\n    showBlockedRequestMessage: function () {\n        if (this.messages.length)\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"action_contact_blocked\"),\n                time: this.messages.last().get('time')\n            });\n    },\n\n    muteChat: function (muted_seconds) {\n        let muted = this.isMuted(),\n            is_muted = muted && muted !== '0' ? true : false,\n            muted_value = is_muted ? '' : '0';\n        if (muted_seconds || muted_seconds === '')\n            muted_value = muted_seconds;\n        let conversation_options = {\n            jid: this.contact.get('jid'),\n            mute: muted_value,\n            type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this)\n        },\n        iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq);\n    },\n\n    getConversationType: function (chat) {\n        if(chat.get('encrypted'))\n            return Strophe.NS.SYNCHRONIZATION_OMEMO;\n        if(chat.contact.get('group_chat'))\n            return Strophe.NS.GROUP_CHAT;\n        return Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT\n    },\n\n    deleteFromSynchronization: function (callback, errback) {\n        let conversation_options = {jid: this.get('jid'), status: 'deleted', type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this) };\n        this.account.cached_sync_conversations.removeFromCachedConversations(conversation_options.jid +  '/' + conversation_options.type);\n        let iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq, (success) => {\n            callback && callback(success);\n        }, (error) => {\n            errback && errback(error);\n        });\n    }\n});\n\nxabber.ChatItemView = xabber.BasicView.extend({\n    className: 'chat-item list-item',\n    template: templates.chat_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.message_counter = 0;\n        this.$el.attr('data-id', this.model.id);\n        if (!this.model.sync_created)\n            this.content = new xabber.ChatContentView({chat_item: this});\n        this.content_placeholder = new xabber.ChatContentPlaceholderView();\n        this.updateName();\n        this.updateStatus();\n        this.updateCounter();\n        this.updateAvatar();\n        this.updateMutedState();\n        this.updatePinned();\n        this.updateArchivedState();\n        this.updateColorScheme();\n        this.updateGroupChats();\n        this.updateIcon();\n        this.updateEncrypted();\n        this.updateChatError();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.model.on(\"change:archived\", this.updateArchivedState, this);\n        this.model.on(\"change:muted\", this.updateMutedState, this);\n        this.model.on(\"open\", this.open, this);\n        this.model.on(\"remove_opened_chat\", this.onClosed, this);\n        this.model.messages.on(\"add\", this.updateChatCard, this);\n        this.model.messages.on(\"destroy\", this.onMessageRemoved, this);\n        this.model.messages.on(\"change:state\", this.onChangedMessageState, this);\n        if (this.contact) {\n            this.updateIncomingSubscription();\n            this.contact.on(\"change:name\", this.updateName, this);\n            this.contact.on(\"change:invitation\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_in\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_out\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:status\", this.updateStatus, this);\n            this.contact.on(\"change:private_chat\", this.updateIcon, this);\n            this.contact.on(\"change:invitation\", this.updateIcon, this);\n            this.contact.on(\"change:incognito_chat\", this.updateIcon, this);\n            this.contact.on(\"change:image\", this.updateAvatar, this);\n            this.contact.on(\"change:blocked\", this.onBlocked, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChats, this);\n            this.contact.on(\"change:in_roster\", this.updateAcceptedStatus, this);\n            this.contact.on(\"remove_invite\", this.removeInvite, this);\n            this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        }\n        this.$el.switchClass('saved-chat', this.model.get('saved'));\n        this.$el.find('.circle-avatar').switchClass('ground-color-700', this.model.get('saved'));\n        this.model.get('saved') && this.$el.find('.circle-avatar').html(env.templates.svg['saved-messages']());\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n    },\n\n    render: function () {\n        if (this.model.get('saved') && (this.$('.chat-title').text() !== xabber.getString(\"saved_messages__header\"))) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n        }\n    },\n\n    updateChatCard: function (msg) {\n        if (this.content){\n            return;\n        }\n        if (this.message_counter == 0 && !(!msg.get('synced_from_server') && msg.get('encrypted') && this.model.get('encrypted'))){\n            this.message_counter++;\n            return\n        }\n        this.content = new xabber.ChatContentView({ chat_item: this, new_message: msg });\n        this.updateLastMessage(msg);\n        return;\n    },\n\n    onChangedMessageState: function (message) {\n        if (message.get('state') === constants.MSG_DISPLAYED && this.model.get('last_displayed_id') < message.get('stanza_id')) {\n            this.model.set('last_displayed_id', message.get('stanza_id'));\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        } else if (message.get('state') === constants.MSG_DELIVERED && this.model.get('last_delivered_id') < message.get('stanza_id')) {\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        }\n        if (this.content) {\n            let $message = this.content.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n                $elem = $message.find('.msg-delivering-state');\n            $elem.attr({\n                'data-state': message.getState(),\n                'title': message.getVerboseState()\n            });\n            ($elem.attr('data-state') === constants.MSG_STATE[constants.MSG_ERROR]) && $elem.dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n        }\n        if (message === this.model.last_message) {\n            this.updateLastMessage();\n        }\n        this.updateChatError();\n    },\n\n    updateName: function () {\n        if (this.model.get('saved')) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n            return;\n        }\n        this.$('.chat-title').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        if (this.model.get('saved'))\n            return;\n        let status = this.contact.get('status');\n        this.$('.status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n    },\n\n    updateActiveStatus: function () {\n        this.$el.switchClass('active', this.model.get('active'));\n        this.updateLastMessage();\n    },\n\n    updateAcceptedStatus: function () {\n        let in_roster = this.contact.get('in_roster');\n        if (in_roster)\n            this.model.set('is_accepted', true);\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.msg-counter').showIf(unread).text(unread || '');\n        this.updateTextClipping();\n    },\n\n    updateIncomingSubscription: function () {\n        this.$('.msg-incoming-subscription').showIf(this.contact.get('invitation') || (this.contact.get('subscription_request_in') && this.contact.get('subscription') != 'both'));\n        this.updateTextClipping();\n    },\n\n    updateChatError: function () {\n        let error_msgs = this.model.messages.filter(m => m.get('state') === -1)\n        this.$('.msg-chat-error').showIf(error_msgs.length);\n        this.updateTextClipping();\n    },\n\n    updateTextClipping: function () {\n        let indicators_count = this.$('.chat-item-notifications-wrap').children(':not(.hidden)').length;\n        this.$('.last-msg').switchClass('triple-indicators', indicators_count === 3)\n        this.$('.last-msg').switchClass('quad-indicators', indicators_count === 4)\n    },\n\n    updateAvatar: function () {\n        if (this.model.get('saved'))\n            return;\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updatePinned: function () {\n        let is_pinned = this.model.get('pinned');\n        this.$('.pinned-icon').showIf(is_pinned && is_pinned !== '0');\n        if (is_pinned)\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateIcon: function () {\n        if (!this.contact)\n            return;\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    updateMutedState: function () {\n        if (!this.contact)\n            return;\n        this.$('.msg-counter').switchClass('muted-chat-counter', this.model.isMuted());\n        this.$('.muted-icon').switchClass('mdi-bell-off', (this.model.isMuted() > 4800000000)).switchClass('mdi-bell-sleep', (this.model.isMuted() <= 4800000000));\n        this.$('.muted-icon').showIf(this.model.isMuted());\n    },\n\n    updateArchivedState: function () {\n        if (!this.contact)\n            return;\n        let archived = this.model.get('archived');\n        if (archived || (!archived && xabber.toolbar_view.$('.active').hasClass('archive-chats')))\n            this.$el.detach();\n        if (archived && xabber.toolbar_view.$('.active').hasClass('archive-chats') || !archived && !xabber.toolbar_view.$('.active').hasClass('archive-chats'))\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateGroupChats: function () {\n        if (!this.contact)\n            return;\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.$('.chat-icon').showIf(is_group_chat);\n        this.updateIcon();\n        if (is_group_chat) {\n            this.$el.addClass('group-chat');\n            this.model.set('group_chat', true);\n        }\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onMessageRemoved: function (msg) {\n        if (this.model.last_message === msg) {\n            let last_message;\n            for (let idx = this.model.messages.length-1; idx >= 0; idx--) {\n                last_message = this.model.messages.at(idx);\n                if (!last_message.get('silent'))\n                    break;\n            }\n            this.model.last_message = last_message;\n            this.updateLastMessage();\n        }\n        this.deletePlayersFromMessage(msg);\n    },\n\n    deletePlayersFromMessage: function (message) {\n        let players = []\n        message.get('msg_player_videos') && (players = players.concat(message.get('msg_player_videos')));\n        message.get('msg_player_audios') && (players = players.concat(message.get('msg_player_audios')));\n        if (players.length){\n            if (xabber.current_plyr_player){\n                let is_current_player = xabber.current_plyr_player.is_popup ?\n                    players.includes(xabber.current_plyr_player.chat_item.model.plyr_players[xabber.current_plyr_player.player_index])\n                    : players.includes(xabber.current_plyr_player);\n\n                if (is_current_player){\n                    xabber.plyr_players.forEach((item) => {\n                        if (item.$audio_elem){\n                            if (item.$audio_elem.voice_message)\n                                item.$audio_elem.voice_message.stopTime()\n                        }\n                        else\n                            item.stop();\n                    })\n                    if (xabber.current_plyr_player.is_popup && xabber.plyr_player_popup){\n                        xabber.plyr_player_popup.closePopup();\n                    } else {\n                        xabber.current_plyr_player = null;\n                        xabber.trigger('plyr_player_updated');\n                    }\n                }\n            }\n            this.model.plyr_players = this.model.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.plyr_players = xabber.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    updateEmptyChat: function () {\n        let msg_time = this.model.get('timestamp'),\n            is_empty = Number(this.model.get('last_delivered_id')) || Number(this.model.get('last_displayed_id')) || Number(this.model.get('last_read_msg'));\n        this.$('.last-msg').html(xabber.getString(is_empty ? \"recent_chat__last_message_retracted\" : \"no_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateEncryptedChat: function () {\n        let msg_time = this.model.get('timestamp');\n        this.$('.last-msg').html(xabber.getString(\"recent_chat__decrypting_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateLastMessage: function (msg) {\n        msg || (msg = this.model.last_message);\n        if (!this.model.get('active') && this.model.item_view && this.model.item_view.content && this.model.item_view.content.bottom && this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea().trim()){\n            let draft_message = this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea();\n            this.$('.last-msg').html(draft_message).prepend($(`<span class=\"text-color-700\">${xabber.getString(\"draft\")}: </span>`));\n            this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n            msg && this.model.set({timestamp: msg.get('timestamp')});\n            return;\n        }\n        if (!msg) {\n            !this.model.messages.length && this.updateEmptyChat();\n            return;\n        }\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'), msg_from = \"\",\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = forwarded_message ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n            msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact && this.contact.my_info && this.contact.my_info.attributes || {};\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (this.model.get('group_chat'))\n            msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n        msg_from && (msg_from = $('<span class=text-color-700/>').text(msg_from + ': '));\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg.get('type') === 'file_upload') {\n                msg_images = msg_files.filter(f => f && f.type && utils.isImageType(f.type));\n                msg_files = msg_files.filter(f => f && !(f.type && utils.isImageType(f.type)));\n            }\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                    msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                else if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n        }\n        else {\n            if (msg.get('type') == 'system') {\n                msg_from = \"\";\n                if (msg.get('invite'))\n                    msg_text = xabber.getString(\"groupchat_invitation_to_group_chat\", [(this.contact && this.contact.get('incognito_chat')) ? 'incognito' : 'public']);\n                msg.get('private_invite') && (msg_text = xabber.getString(\"recent_chat__last_message__private_invitation\"));\n                if (this.model.get('group_chat'))\n                    msg_text = $('<i/>').text(msg_text);\n                else\n                    msg_text = $('<span class=text-color-500/>').text(msg_text);\n                this.$('.last-msg').html(msg_text);\n                if (msg.get('auth_request')){\n                    xabber.toolbar_view.recountAllMessageCounter();\n                }\n            }\n            else {\n                if (forwarded_message) {\n                    if (msg.get('message')) {\n                        msg_text = msg.get('message');\n                        this.$('.last-msg').text(msg_text);\n                    }\n                    else {\n                        let first_forwarded_msg = forwarded_message[0];\n                        if (first_forwarded_msg.get('message')) {\n                            let fwd_msg_files = first_forwarded_msg.get('files') || [],\n                                fwd_msg_images = first_forwarded_msg.get('images') || [],\n                                fwd_msg_locations = first_forwarded_msg.get('locations') || [];\n                            first_forwarded_msg.get('videos') && first_forwarded_msg.get('videos').length && (fwd_msg_files = fwd_msg_files.concat(first_forwarded_msg.get('videos')));\n                            if (fwd_msg_files.length || fwd_msg_images.length || fwd_msg_locations.length) {\n                                let $colored_span = $('<span class=\"text-color-500\"/>');\n                                if (msg.get('type') === 'file_upload') {\n                                    fwd_msg_images = fwd_msg_files.filter(f => f.type && utils.isImageType(f.type));\n                                    fwd_msg_files = fwd_msg_files.filter(f => !(f.type && utils.isImageType(f.type)));\n                                }\n                                if (fwd_msg_files.length && fwd_msg_images.length)\n                                    msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [fwd_msg_files.length + fwd_msg_images.length]));\n                                else {\n                                    if (fwd_msg_files.length == 1 && (fwd_msg_files[0].is_audio || fwd_msg_files[0].voice))\n                                        msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(fwd_msg_files[0].duration));\n                                    else if (fwd_msg_files.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_files.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_images.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_images.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_locations.length > 0) {\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_msg_locations.length));\n                                    }\n                                }\n                                if (this.model.get('group_chat')) {\n                                    this.$('.last-msg').html(\"\").append(msg_from).append('» ').append(msg_text);\n                                } else {\n                                    this.$('.last-msg').html(\"» \").append(msg_text);\n                                }\n                            } else if (this.model.get('group_chat')) {\n                                msg_text = first_forwarded_msg.get('message');\n                                msg_text = '» ' + msg_text;\n                                this.$('.last-msg').text(msg_text);\n                            } else {\n                                msg_text = first_forwarded_msg.get('message');\n                                this.$('.last-msg').text(msg_text);\n                                msg_from = '» ';\n                            }\n                        }\n                        else {\n                            if (forwarded_message.length === 1) {\n                                let fwd_msg_txt = xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).slice(2)\n                                fwd_msg_txt = fwd_msg_txt.charAt(0).toUpperCase() + fwd_msg_txt.slice(1)\n                                msg_text = $('<i/>').text(fwd_msg_txt);\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                            else {\n                                msg_text = $('<i/>').text(xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length));\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                        }\n                    }\n                }\n                else {\n                    msg_text = msg.getText();\n                    this.$('.last-msg').text(msg_text);\n                }\n            }\n            this.$('.last-msg').prepend(msg_from);\n        }\n        if (msg.get('not_encrypted'))\n            this.$('.last-msg').html(this.$('.last-msg').html().italics());\n        this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n        this.$('.msg-delivering-state').showIf(msg.get('type') !== 'system' && msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n            .attr('data-state', msg.getState());\n    },\n\n    openByClick: function () {\n        this.open();\n    },\n\n    open: function (options) {\n        if (!this.content){\n            this.content = new xabber.ChatContentView({chat_item: this});\n        }\n        options || (options = {right_contact_save: true, clear_search: false});\n        xabber.chats_view.openChat(this, options);\n        this.content.bottom.click_counter = 0;\n        this.content.bottom.setDefaultPlaceholder();\n    },\n\n    removeInvite: function (options) {\n        if (!this.account.server_features.get(Strophe.NS.REWRITE))\n            return;\n        options || (options = {});\n        let msgs = _.clone(this.model.messages.models);\n        this.model.set({'last_archive_id': undefined, 'first_archive_id': undefined});\n        msgs.forEach((item) => {\n            if (item.get('invite')) {\n                let iq_retraction = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('retract-message', {\n                        id: item.get('stanza_id'),\n                        xmlns: Strophe.NS.REWRITE,\n                        type: Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT,\n                        symmetric: false,\n                    });\n                this.account.sendIQFast(iq_retraction);\n                item && this.content.removeMessage(item);\n            }\n        });\n        this.model.recountUnread();\n        delete this.contact.attributes.invitation;\n        this.updateIcon();\n    },\n\n    onClosed: function () {\n        this.parent.onChatRemoved(this.model, {soft: true});\n    }\n});\n\n  xabber.MessagesView = xabber.BasicView.extend({\n      template: templates.chat_content,\n      ps_selector: '.chat-content',\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n          this.$search_form = this.$('.search-form-header');\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this._scrolltop = this.getScrollTop();\n          this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          let wheel_ev = this.defineMouseWheelEvent();\n          this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n          this.$('.back-to-bottom').click(this.backToBottom.bind(this));\n      },\n\n      defineMouseWheelEvent: function () {\n          if (!_.isUndefined(window.onwheel)) {\n              return \"wheel\";\n          } else if (!_.isUndefined(window.onmousewheel)) {\n              return \"mousewheel\";\n          } else {\n              return \"MozMousePixelScroll\";\n          }\n      },\n\n      keyupSearch: function (ev) {\n          if (ev.keyCode === constants.KEY_ENTER) {\n              let query = this.$search_form.find('input').val();\n              this.model.searchMessages(query, (messages) => {\n              });\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              this.chat_content.head.renderSearchPanel();\n          }\n      },\n\n      onMouseWheel: function (ev) {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onClickMessage:function (ev) {\n          this.chat_content.onClickMessage(ev);\n      },\n\n      onClickLink:function (ev) {\n          this.chat_content.onClickLink(ev);\n      },\n\n      onClickLocationLink:function (ev) {\n          this.chat_content.onClickLocationLink(ev);\n      },\n\n      onClickLocation:function (ev) {\n          this.chat_content.onClickLocation(ev);\n      },\n\n      onHoverLocation:function (ev) {\n          this.chat_content.onHoverLocation(ev);\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          if (!this.history_loaded && !this.loading_history && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n              this.loading_history = true;\n              this.messagesRequest({before: this.first_msg_id}, () => {\n                  this.loading_history = false;\n              });\n          }\n      },\n\n      backToBottom: function () {\n          this.openChat();\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function () {},\n\n      emptyChat: function () {\n          this.$('.chat-content').html($('<span class=\"error\"/>').text(xabber.getString(\"no_messages\")));\n      },\n\n      openChat: function () {\n          this.model.item_view.open({right_contact_save: true, clear_search: false});\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          let scrolled_from_top,\n              scrolled_from_bottom = this.getScrollBottom();\n          if (index === 0)\n              $message.prependTo(this.$('.chat-content'));\n          else\n              $message.insertAfter(this.$('.chat-message').eq(index - 1));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          this.chat_content.updateMessageInChat($message[0], msg);\n          if ($next_message.length) {\n              this.chat_content.updateMessageInChat($next_message[0]);\n          }\n          this.chat_content.initPopup($message);\n          if (scrolled_from_top)\n              this.scrollTo(scrolled_from_top);\n          else\n              this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n          return $message;\n      }\n\n  });\n\n  xabber.MessageContextView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap messages-context-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          options = options || {};\n          this.stanza_id = options.stanza_id_context;\n          this.encrypted = options.encrypted;\n          this.mention_context = options.mention_context;\n          if (!this.model.item_view.content)\n              this.chat_content = new xabber.ChatContentView({chat_item: this.model.item_view});\n          this.$history_feedback = this.$('.load-history-feedback');\n          this.account.context_messages = new xabber.Messages(null, {account: this.account});\n          this.account.context_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.context_messages.on(\"add\", this.addMessage, this);\n          this.account.context_messages.on(\"change:is_unread\", this.onChangedReadState, this);\n          xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n      },\n\n      render: function () {\n          this.scrollToTop();\n          this.onUpdatePlyr();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this.encrypted && this.$el.attr('data-trust', true)\n      },\n\n      onMouseWheel: function (ev) {\n          if (!this.loading_history)\n              if (ev.originalEvent.deltaY < 0) {\n                  if (!this.first_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({before: this.first_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n              else {\n                  if (!this.last_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          this._scrollbottom = this.getScrollBottom();\n\n          if (!this.loading_history)\n              if (!this.first_history_loaded && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n                  this.loading_history = true;\n                  this.showHistoryFeedback();\n                  this.messagesRequest({before: this.first_msg_id}, () => {\n                      this.loading_history = false;\n                      this.hideHistoryFeedback();\n                  });\n              }\n              else {\n                  if (!this.last_history_loaded && (this._scrolltop > this._prev_scrolltop) && (this._scrollbottom < 100 || this.getPercentScrolled() > 0.9)) {\n                      this.loading_history = true;\n                      this.showHistoryFeedback();\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                          this.hideHistoryFeedback();\n                      });\n                  }\n              }\n\n          clearTimeout(this._onscroll_read_messages_timeout);\n          this._onscroll_read_messages_timeout = setTimeout(() => {\n              this.chat_content.readVisibleMessages(true);\n          }, 100)\n      },\n\n      onChangedReadState: function (message) {\n          let is_unread = message.get('is_unread'),\n              $msg = this.$(`.chat-message[data-uniqueid=\"${message.get(\"unique_id\")}\"]`);\n          if (is_unread) {\n              $msg.addClass('unread-message');\n              $msg.addClass('unread-message-background');\n          } else {\n              $msg.removeClass('unread-message');\n              setTimeout(() => {\n                  $msg.removeClass('unread-message-background');\n              }, 1000);\n          }\n      },\n\n      showHistoryFeedback: function () {\n          this.$history_feedback.text(xabber.getString(\"loading_history\")).removeClass('hidden');\n      },\n\n      hideHistoryFeedback: function () {\n          this.$history_feedback.addClass('hidden');\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.after && !options.before && (options.before = '');\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first) && (this.last_msg_id = rsm.last);\n                  if (options.after && (messages.length < options.max))\n                      this.last_history_loaded = true;\n                  if (options.before && (messages.length < options.max))\n                      this.first_history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {context_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          if (this.mention_context && (message.get('stanza_id') === this.stanza_id)) {} else message.set('is_archived', true);\n\n          let msg_item = this.model.messages.find(msg => msg.get('stanza_id') == message.get('stanza_id') || msg.get('contact_stanza_id') == message.get('stanza_id'));\n          if (msg_item) {\n              msg_item.get('is_unread') && message.set('is_unread', msg_item.get('is_unread'));\n              msg_item.get('is_unread_archived') && message.set('is_unread_archived', msg_item.get('is_unread_archived'));\n          }\n\n          let $message = this.chat_content.buildMessageHtml(message).addClass('context-message'),\n              index = this.account.context_messages.indexOf(message);\n          if (message.get('stanza_id') === this.stanza_id) {\n              $message.addClass('message-from-context');\n              setTimeout(() => {\n                  $message.removeClass('message-from-context')\n              }, 3000);\n          }\n          this.addMessageHTML($message, message, index, this.account.context_messages.findLastIndex());\n      },\n\n      onUpdatePlyr: function (ev) {\n          this.$('.plyr-video-container').removeClass('active-plyr-container');\n          if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n              let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n              if ($message.length) {\n                  $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n              }\n          }\n      },\n  });\n\n  xabber.SearchedMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.query_text = options.query_text;\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          this.account.searched_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          return this;\n      },\n\n      render: function () {\n          this.$search_form.find('input').val(this.query_text);\n          this.$search_form.slideToggle(10, () => {\n              if (this.$search_form.css('display') !== 'none')\n                  this.$search_form.find('input').focus();\n              this.scrollToBottom();\n          });\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'withtext', value: this.query_text}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {searched_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n              index = this.account.searched_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.ContactSearchedMessagesView = xabber.MessagesView.extend({\n      template: templates.chat_content_contact,\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\",\n          \"click .close-search-icon\": \"clearSearch\",\n          'click .btn-back': 'hideSearch'\n      },\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          this.$search_form = this.$('.search-form-header');\n          this.timer = null;\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          this.parent.model.set('search_hidden', true)\n          return this;\n      },\n\n      render: function () {\n          if (this.account.searched_messages)\n              this.searched_messages = this.account.searched_messages\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          if (this.searched_messages)\n              this.account.searched_messages.add(this.searched_messages.toJSON(), {silent : true});\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$el.html(this.parent.model.get('saved_search_panel'));\n              this.model.set('saved_search_panel', undefined);\n          }\n          else {\n              this.emptyChat();\n              this.$el.html(this.template());\n              this.emptyChat();\n              if (this.parent.model.get('search_hidden'))\n                  this.hideSearch();\n          }\n          this.ps_container = this.$('.search-messages-content-wrap');\n          if (this.ps_container.length) {\n              this.ps_container.perfectScrollbar(\n                  _.extend(this.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$search_form = this.$('.search-form-header');\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$search_form.find('input').focus();\n              if (this.parent.model.get('saved_search_panel_scroll'))\n                  this.scrollTo(this.parent.model.get('saved_search_panel_scroll'));\n          }\n      },\n\n      clearSearch: function () {\n          this.$search_form.find('input').val('');\n          this.emptyChat();\n      },\n\n\n      keyupSearch: function (ev) {\n          this.$('.close-search-icon').hideIf(!this.$search_form.find('input').val());\n          if (ev.keyCode === constants.KEY_ENTER) {\n              this.emptyChat();\n              let query = this.$search_form.find('input').val();\n              this.$('.preloader-wrap').hideIf(false);\n              this.loading_timestamp = Number(moment.now());\n              this.messagesRequest(query, this.loading_timestamp, undefined, [], (messages, rsm) => {\n              });\n          }\n      },\n\n      emptyChat: function () {\n          if (this.account.searched_messages)\n              this.account.searched_messages.reset();\n          this.$('.chat-content').html('');\n          this.$('.messages-count').hideIf(true);\n          this.$('.preloader-wrap').hideIf(true);\n          this.$('.search-results').hideIf(true);\n          this.$('.close-search-icon').hideIf(true);\n      },\n\n      messagesRequest: function (query, timestamp, rsm, loaded_messages, callback) {\n          if(!query || this.loading_timestamp != timestamp) {\n              this.emptyChat();\n              return true;\n          }\n          let messages = [],\n              options = {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              var: [{var: 'withtext', value: query}]\n          });\n          if (rsm && rsm.last)\n              _.extend(options, {\n                  after: rsm.last,\n              });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  loaded_messages = loaded_messages.concat(messages)\n                  if (messages.length == options.max){\n                      if (this.parent &&  this.parent.data && !this.parent.data.get('visible') || this.parent.model.get('search_hidden'))\n                          return;\n                      else\n                          this.messagesRequest(query, timestamp, rsm, loaded_messages, (messages, rsm) => {});\n                  }\n                  else if (loaded_messages.length == rsm.count) {\n                      if (rsm.count != 0) {\n                          let message_count = rsm.count;\n                          this.emptyChat()\n                          // list.sort((a, b) => (a.color > b.color) ? 1 : -1)\n                          $(loaded_messages).each((idx, message) => {\n                              let $message = $(message),\n                                  $jingle_msg_propose = $message.find(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n                              if ($jingle_msg_propose.length)\n                                  message_count--;\n                              this.account.chats.receiveChatMessage($message, {\n                                  searched_message: true,\n                                  searched_in_contact_messages: true,\n                                  query: query\n                              });\n                          });\n                          this.$('.messages-count').hideIf(!message_count);\n                          this.$('.close-search-icon').hideIf(!message_count);\n                          this.$('.search-results').hideIf(message_count);\n                          this.$('.messages-count').text(xabber.getQuantityString(\"searched_messages_count\", message_count));\n                      }\n                      else {\n                          this.emptyChat();\n                          this.$('.close-search-icon').hideIf(false);\n                          this.$('.search-results').hideIf(false);\n                      }\n\n                  }\n                  callback && callback(messages, rsm);\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          $message.prependTo(this.$('.chat-content'));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          // this.chat_content.updateMessageInChat($message[0]);\n          // if ($next_message.length) {\n          //     this.chat_content.updateMessageInChat($next_message[0]);\n          // }\n          // this.chat_content.initPopup($message);\n          return $message;\n      },\n\n      addMessage: function (message) {\n          if (!this.parent.model.get('search_hidden')) {\n              if (message.get('auth_request') || !message.get('searched_in_contact_messages'))\n                  return;\n              message.set('is_archived', true);\n              message.set('searched_message', true);\n              let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n                  index = this.account.searched_messages.indexOf(message);\n              this.chat_content.showMessageAuthor($message);\n              this.addMessageHTML($message, message, index);\n          }\n      },\n\n      hideSearch: function (ev) {\n          this.parent.model.set('search_hidden', true);\n          this.$('.search-input').val('')\n          this.emptyChat();\n          if (this.parent.ps_container.length) {\n              this.parent.ps_container.perfectScrollbar(\n                  _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$('.search-wrap').hideIf(this.parent.model.get('search_hidden'))\n      },\n\n      onClickMessage: function (ev) {\n          let $elem = $(ev.target),\n              $msg = $elem.closest('.chat-message');\n          this.parent.model.set('saved_search_panel_scroll', this.ps_container[0].scrollTop);\n          this.ps_container.perfectScrollbar('destroy');\n          this.parent.model.set('saved_search_panel', this.$el.clone());\n          this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n      }\n  });\n\n  xabber.ParticipantMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap participant-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          'click .btn-cancel-selection' : 'openChat',\n          'click .btn-retract-messages' : 'retractMessages',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.participant = options.participant;\n          this.member_jid = this.participant.jid;\n          this.member_id = this.participant.id;\n          this.member_nickname = this.participant.nickname;\n          this.account.participant_messages = new xabber.Messages(null, {account: this.account});\n          this.account.participant_messages.on(\"add\", this.addMessage, this);\n          this.account.participant_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n          return this;\n      },\n\n      render: function () {\n          this.$('.chat-content').css('height', 'calc(100% - 32px)');\n          this.$('.participant-messages-header .messages-by-header .participant-nickname').text(this.member_nickname);\n          this.$('.participant-messages-header').removeClass('hidden');\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScrollY: function () {\n\n      },\n\n      retractMessages: function () {\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__confirm\", [(this.member_nickname || this.member_jid || this.member_id)]),\n              null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n              if (result) {\n                  if (this.member_id) {\n                      this.chat_content.model.retractMessagesByUser(this.member_id, () => {\n                          this.emptyChat();\n                      });\n                  }\n              }\n          });\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              member_id = this.member_id,\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'with', value: member_id}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid) {\n                  messages.push(message);\n              }\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options,\n              (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.participant_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {participant_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('participant-message'),\n              index = this.account.participant_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.SubscriptionButtonsView = xabber.BasicView.extend({\n      template: templates.subscription_buttons,\n\n      events: {\n          \"click .btn-decline\": \"declineSubscription\",\n          \"click .btn-allow\": \"allowSubscription\",\n          \"click .btn-add\": \"addContact\",\n          \"click .btn-subscribe\": \"addContact\",\n          \"click .btn-block\": \"blockContact\"\n      },\n\n      _initialize: function (options) {\n          this.$el.html(this.template());\n          this.contact = options.contact;\n          this.contact.on(\"change:subscription\", this.render, this);\n          this.contact.on(\"change:in_roster\", this.render, this);\n          this.contact.on(\"change:blocked\", this.render, this);\n          this.contact.on(\"change:subscription_request_in\", this.render, this);\n          this.contact.on(\"change:subscription_request_out\", this.render, this);\n      },\n\n      render: function () {\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n          if (this.contact.get('group_chat')) {\n              this.$el.addClass('hidden');\n              return;\n          }\n          let subscription = this.contact.get('subscription'),\n              in_request = this.contact.get('subscription_request_in'),\n              in_roster = this.contact.get('in_roster'),\n              out_request = this.contact.get('subscription_request_out');\n          this.$('.button').removeClass('hidden');\n          this.$('.subscription-info').text(\"\");\n          this.$el.addClass('hidden');\n          if (subscription === 'both' || this.contact.get('blocked'))\n              return;\n          else if (subscription === 'to' && in_request || (subscription === 'none' && in_request && in_roster)) {\n              this.$('.subscription-info').text(xabber.getString(\"subscription_status_in_request_incoming\"));\n              this.$('.button:not(.btn-allow)').addClass('hidden');\n          } else if (!out_request && !in_roster && !in_request && (subscription === 'from' || subscription === 'none')) {\n              this.$('.subscription-info').text(xabber.getString(\"chat_subscribe_request_outgoing\"));\n              this.$('.button:not(.btn-subscribe)').addClass('hidden');\n          } else if (subscription === undefined || subscription === 'none' && in_request) {\n              this.$('.button:not(.btn-add):not(.btn-block)').addClass('hidden');\n          } else {\n              return;\n          }\n          this.$el.removeClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').addClass('with-before');\n      },\n\n      hideElement: function () {\n          this.$el.addClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n      },\n\n      declineSubscription: function () {\n          this.contact.declineSubscribe();\n          this.contact.set('subscription_request_in', false);\n          this.hideElement();\n      },\n\n      allowSubscription: function () {\n          this.contact.acceptRequest();\n          this.hideElement();\n      },\n\n      addContact: function () {\n          if (this.contact.get('subscription') === undefined)\n              this.contact.pushInRoster(null, () => {\n                  this.sendAndAskSubscription();\n              });\n          else\n              this.sendAndAskSubscription();\n          this.hideElement();\n      },\n\n      sendAndAskSubscription: function () {\n          this.contact.askRequest();\n          this.contact.acceptRequest();\n      },\n\n      blockContact: function () {\n          this.contact.blockRequest();\n          this.hideElement();\n      }\n  });\n\nxabber.ChatContentView = xabber.BasicView.extend({\n    className: 'chat-content-wrap',\n    template: templates.chat_content,\n    ps_selector: '.chat-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n    events: {\n        'mousedown .chat-message': 'onTouchMessage',\n        'click .chat-message': 'onClickMessage',\n        'click .chat-msg-location-content': 'onClickLocation',\n        'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n        'click .msg-copy-location' : 'onClickLocationLink',\n        'click .pinned-message' : 'showPinnedMessage',\n        \"keyup .messages-search-form\": \"keyupSearch\",\n        \"click .btn-cancel-searching\": \"cancelSearch\",\n        \"click .back-to-bottom\": \"backToBottom\",\n        \"click .back-to-unread:not(.back-to-bottom)\": \"scrollToUnreadWithButton\",\n        \"click .btn-retry-send-message\": \"retrySendMessage\",\n        \"click .btn-delete-message\": \"removeFileErrorMessage\",\n        \"click .encryption-warning\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.chat_item = options.chat_item;\n        this.current_day_indicator = null;\n        this._pending_avatars = [];\n        this.account = this.chat_item.account;\n        this.model = this.chat_item.model;\n        this.contact = this.model.contact;\n        this.head = this.model.get('saved') ? new xabber.SavedChatHeadView({content: this}) : new xabber.ChatHeadView({content: this});\n        this.bottom = new xabber.ChatBottomView({content: this});\n        this.$history_feedback = this.$('.load-history-feedback');\n        this.$pinned_message = this.$('.pinned-message');\n        this.$search_form = this.$('.search-form-header');\n        this.$el.attr('data-id', this.model.id);\n        this.updateContentColorScheme();\n        if ((this.model.sync_created && this.model.last_message) || options.new_message && !options.new_message.get('synced_from_server') && options.new_message.get('encrypted') && this.model.get('encrypted')){\n            this.model.last_message && this.onMessage(this.model.last_message);\n            if (options.new_message){\n                this.onMessage(options.new_message);\n                this.onChangedReadState(options.new_message);\n            }\n        }\n        this._scrolltop = this.getScrollTop();\n        this._is_scrolled_bottom = true;\n        this._long_reading_timeout = false;\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"load_last_history\", this.loadLastHistory, this);\n        this.model.on(\"get_missed_history\", this.requestMissedMessages, this);\n        this.model.messages.on(\"add\", this.onMessage, this);\n        this.model.messages.on(\"change:is_unread\", this.onChangedReadState, this);\n        this.model.messages.on(\"change:timestamp\", this.onChangedMessageTimestamp, this);\n        this.model.messages.on(\"change:trusted\", this.onTrustedChanged, this);\n        this.model.messages.on(\"change:last_replace_time\", this.updateMessage, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        if (this.contact) {\n            this.subscription_buttons = new xabber.SubscriptionButtonsView({contact: this.contact, el: this.$('.subscription-buttons-wrap')[0]});\n            this.contact.on(\"change:blocked\", this.updateBlockedState, this);\n            this.contact.on(\"change:subscription\", this.onSubscriptionChange, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n            this.contact.on(\"remove_from_blocklist\", this.loadLastHistory, this);\n            this.account.contacts.on(\"change:name\", this.updateName, this);\n            this.account.contacts.on(\"change:image\", this.updateAvatar, this);\n        }\n        this.account.on(\"change\", this.updateMyInfo, this);\n        this.account.settings.on(\"change:color\", this.updateContentColorScheme, this);\n        xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n        this.account.dfd_presence.done(() => {\n            !this.account.connection.do_synchronization && this.loadLastHistory();\n        });\n        return this;\n    },\n\n    render: function () {\n        this.cancelSearch();\n        if (this._prev_scrolltop)\n            this.scrollTo(this._prev_scrolltop);\n        else\n            this.scrollToBottom();\n        this.onScroll();\n        this.updateCounter();\n        this.updateContactStatus();\n        this.updateWaveforms();\n        this.onUpdatePlyr();\n        if (this.contact) {\n            this.contact.get('group_chat') && this.updatePinnedMessage();\n            this.subscription_buttons.render();\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    updateMyInfo: function () {\n        let changed = this.account.changed;\n        if (_.has(changed, 'name')) this.updateMyName();\n        if (_.has(changed, 'status')) this.updateMyStatus();\n        if (_.has(changed, 'image')) this.updateMyAvatar();\n    },\n\n    updateContentColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n        this.head.$el.attr('data-color', color);\n        this.bottom.$el.attr('data-color', color);\n    },\n\n    onTrustedChanged: function (message) {\n        let trusted = message.get('trusted'),\n            $message = this.$('.chat-message[data-uniqueid=\"' + message.get('unique_id') + '\"]');\n        (trusted === null) && (trusted = 'none');\n        $message.attr('data-trust', trusted);\n    },\n\n    updateGroupChat: function () {\n        this._loading_history = false;\n        this.model.set('history_loaded', false);\n    },\n\n    onSubscriptionChange: function () {\n        let subscription = this.contact.get('subscription');\n        if (subscription === 'both' && this.contact.get('group_chat')){\n            this.updateGroupChat();\n            this.loadPreviousHistory();\n            this.model.get('active') && this.onChangedActiveStatus();\n        }\n    },\n\n    cancelSearch: function () {\n        this.$search_form.hide().find('input').val(\"\");\n    },\n\n    updateContactStatus: function () {\n        if (this.head.$('.contact-status').attr('data-status') == 'offline' && this.contact.get('last_seen')) {\n            let seconds = (moment.now() - this.contact.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.contact.set({status_message: new_status });\n        }\n    },\n\n    updateWaveforms: function () {\n        this.model.plyr_players.forEach(function(item) {\n            if (item.$audio_elem && item.$audio_elem.voice_message && item.$audio_elem.voice_message.backend && item.$audio_elem.voice_message.backend.buffer)\n                item.$audio_elem.voice_message.drawBuffer();\n        });\n    },\n\n    updatePinnedMessage: function () {\n        let $pinned_message = this.contact.get('pinned_message');\n        this.contact.renderPinnedMessage($pinned_message, this.$pinned_message);\n    },\n\n    onChangedVisibility: function () {\n        if (this.isVisible()) {\n            this.model.set({display: true, active: true});\n        } else {\n            this.model.set({display: false});\n        }\n    },\n\n    onChangedActiveStatus: function () {\n        let active = this.model.get('active');\n        this.sendChatState(active ? 'active' : 'inactive');\n        if (this.model.get('group_chat') && !this.contact.get('invitation')) {\n            if (active){\n                this.contact.setActiveStateSendInterval();\n            }\n            else{\n                clearTimeout(this.contact._sending_active_chatstate_timeout);\n                clearInterval(this.contact._sending_active_chatstate_interval);\n            }\n        }\n    },\n\n    updateName: function (contact) {\n        let name = contact.get('name'),\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.chat-msg-author').text(name);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-msg-author').text(name);\n            });\n        }\n    },\n\n    updateAvatar: function (contact) {\n        let image = contact.cached_image,\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        }\n    },\n\n    updateMyStatus: function () {\n        let text;\n        if (!this.account.isOnline()) {\n            text = xabber.getString(\"connection_status__you_are_offline\");\n        }\n        this.bottom.showChatNotification(text || '', true);\n    },\n\n    updateMyName: function () {\n        let name = this.account.get('name'),\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.chat-msg-author').text(name);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-msg-author').text(name);\n        });\n    },\n\n    updateMyAvatar: function () {\n        let image = this.account.cached_image,\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n    },\n\n    updateBlockedState: function () {\n        if (this.model.get('blocked'))\n            this.model.showBlockedRequestMessage();\n        if (this.isVisible()) {\n            xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'chat', chat_item: this.chat_item, blocked: this.model.get('blocked')});\n            this.updateScrollBar();\n        }\n    },\n\n    readVisibleMessages: function (is_context) {\n        let self = is_context ? this.model.messages_view : this;\n        if (!self.isVisible())\n            return;\n        if (self.$('.chat-message.unread-message').length && xabber.get('focused') && !xabber.get('idle')){\n            let last_visible_unread_msg;\n            self.$('.chat-message.unread-message').each((idx, msg) => {\n                if ($(msg).isVisibleInContainer(self.$('.chat-content'))) {\n                    last_visible_unread_msg = msg;\n                }\n            });\n            if (last_visible_unread_msg){\n                this.readMessage(this.model.messages.get($(last_visible_unread_msg).data('uniqueid')), $(last_visible_unread_msg), is_context);\n            }\n        }\n    },\n\n    hideMessagesAfterSkipping: function () {\n        if (this.model.get('last_sync_unread_id') && this.model.get('synced_msg')){\n            let synced_message = this.model.get('synced_msg'),\n                $synced_message = this.$(`.chat-message[data-uniqueid=\"${synced_message.get('unique_id')}\"]`);\n            $synced_message.addClass('after-skip-message');\n            $synced_message.prevAll('.chat-message.after-skip-message').removeClass('after-skip-message');\n            $synced_message.nextAll('.chat-message:not(.after-skip-message)').addClass('after-skip-message');\n        } else {\n            this.$('.chat-message.after-skip-message').removeClass('after-skip-message');\n        }\n    },\n\n    readMessage: function (last_visible_msg, $last_visible_msg, is_context) {\n        clearTimeout(this._read_last_message_timeout);\n        this._read_last_message_timeout = setTimeout(() => {\n            this.model.sendMarker(last_visible_msg.get('msgid'), 'displayed', last_visible_msg.get('stanza_id'), last_visible_msg.get('contact_stanza_id'));\n            this.model.set('last_read_msg', last_visible_msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', last_visible_msg.get('stanza_id'));\n\n            if (is_context){\n                let unread_context_messages = _.clone(this.account.context_messages.models).filter(item => Boolean(item.get('is_unread')) || Boolean(item.get('is_unread_archived')));\n                _.each(unread_context_messages, (msg) => {\n                    let msg_item = this.model.messages.find(message => message.get('stanza_id') == msg.get('stanza_id') || message.get('contact_stanza_id') == msg.get('stanza_id'));\n                    if (msg_item) {\n                        msg.set('is_unread', msg_item.get('is_unread'));\n                        msg.set('is_unread_archived', msg_item.get('is_unread_archived'));\n                    }\n                });\n                setTimeout(() => {\n                    $last_visible_msg.removeClass('unread-message-background');\n                }, 1000);\n            }\n\n            xabber.toolbar_view.recountAllMessageCounter();\n        }, 1000)\n\n        if (last_visible_msg.get('is_unread_archived') || this.model.last_message && (last_visible_msg.get('unique_id') === this.model.last_message.get('unique_id')) || this.model.get('const_unread')){\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread'))),\n                read_count = 0;\n\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                    read_count++;\n                }\n            });\n            read_count = this.model.get('const_unread') - read_count;\n            (read_count < 0) && (read_count = 0);\n            this.model.set('const_unread', read_count);\n        } else {\n            let unread_messages = _.clone(this.model.messages_unread.models);\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                }\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n\n        if (!is_context){\n            setTimeout(() => {\n                $last_visible_msg.removeClass('unread-message-background');\n            }, 1000);\n        }\n    },\n\n    readMessages: function (timestamp) {\n        let unread_messages = _.clone(this.model.messages_unread.models);\n        if (unread_messages.length) {\n            let msg = unread_messages[unread_messages.length - 1];\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n            this.model.set('last_read_msg', msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        this.model.set('const_unread', 0);\n        this.model.set('show_new_unread', false);\n        _.each(unread_messages, (msg) => {\n            if (!timestamp || msg.get('timestamp') <= timestamp) {\n                msg.set('is_unread', false);\n            }\n        });\n        if (this.model.last_message && this.model.last_message.get('is_unread') && !unread_messages.length){\n            let msg = this.model.last_message;\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n            msg.set('is_unread', false);\n            msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n            msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        else if (this.model.last_message && this.model.last_message.get('auth_request') && this.model.messages.length){\n            let messages = _.clone(this.model.messages.models),\n                msg = messages[messages.length - 2];\n            if (msg && msg.get('is_unread')) {\n                this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n                msg.set('is_unread', false);\n                msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n                msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n            }\n        }\n        if (!unread_messages.length) {\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread')));\n            _.each(unread_messages, (msg) => {\n                msg.set('is_unread', false);\n            });\n        }\n    },\n\n    showUnreadMarker: function () {\n        this.$('.unread-marker').remove();\n        if (this.$(`.chat-message.unread-message`).length){\n            let text = xabber.getQuantityString(\"new_chat_messages_no_number\", this.model.get('const_unread') + this.model.get('unread')),\n                $template = $(templates.unread_marker({text: text}));\n            $template.insertBefore(this.$(`.chat-message.unread-message:first`));\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        if (ev.originalEvent.deltaY < 0)\n            this.loadPreviousHistory();\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    keyupSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            let query = this.$search_form.find('input').val();\n            this.model.searchMessages(query, (messages) => {});\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.head.renderSearchPanel();\n        }\n    },\n\n    scrollToUnread: function () {\n        let $last_read_msg = this.$(`.chat-message.unread-message:first`);\n        $last_read_msg.length && (this.scrollTo(this.getScrollTop()\n            - (this.$el.height() * 0.2) + $last_read_msg.offset().top));\n        if (this.model.get('last_sync_unread_id')) {\n            let mam_query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                after: this.model.get('last_sync_unread_id'),\n            };\n            if (this.model.get('synced_msg')) {\n                mam_query.var = [\n                    {var: 'after-id', value: this.model.get('last_sync_unread_id')},\n                    {var: 'before-id', value: this.model.get('synced_msg').get('stanza_id')},\n                ];\n            }\n            this.getMessageArchive(mam_query, {\n                unread_history: true,\n            });\n        }\n    },\n\n    scrollToUnreadWithButton: function () {\n        this.scrollToUnread();\n        this.$('.back-to-unread').addClass('back-to-bottom');\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.back-to-unread-counter').text(unread || '');\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n    },\n\n    onScrollY: function () {\n        this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n        this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n        this._is_scrolled_bottom = this.isScrolledToBottom();\n        if (this._scrolltop === 0 && this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', 1);\n            this.current_day_indicator = pretty_date(parseInt(this.$('.chat-content').children().first().data('time')));\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    onScroll: function (ev, is_focused) {\n        if (!this.isVisible() || this._no_scrolling_event)\n            return;\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n        let $chatday_indicator = this.$('.chat-day-indicator'),\n            $messages = this.$('.chat-message'),\n            indicator_idx = undefined,\n            opacity_value;\n        if (this.$('.unread-marker').length) {\n            let marker = this.$('.unread-marker');\n            if (marker[0].offsetTop < this._scrolltop)\n                marker.remove();\n        }\n        $chatday_indicator.each((idx, indicator) => {\n            if (this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop <= this._scrolltop) && (indicator.offsetTop >= this._scrolltop - 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop - 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 30) && (indicator.offsetTop >= this._scrolltop)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 30) && (indicator.offsetTop <= this._scrolltop)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n            else if (!$(indicator).hasClass('fixed-day-indicator-wrap')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop >= this._scrolltop + 30) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 62) && (indicator.offsetTop >= this._scrolltop + 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 62) && (indicator.offsetTop <= this._scrolltop + 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n        });\n        if (indicator_idx) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            this.current_day_indicator = pretty_date(parseInt($($chatday_indicator[indicator_idx]).attr('data-time')));\n        }\n        else {\n            $messages.each((idx, msg) => {\n                if ((msg.offsetTop + $(msg).height() > this._scrolltop) && (msg.offsetTop < this._scrolltop)) {\n                    indicator_idx = idx;\n                    opacity_value = 1;\n                    return false;\n                }\n            });\n            if (indicator_idx) {\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n                this.current_day_indicator = pretty_date(parseInt($($messages[indicator_idx]).attr('data-time')));\n            }\n            else if (!this.$('.subscription-buttons-wrap').hasClass('hidden') && this._scrolltop == 0){\n                opacity_value = 0;\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            }\n        }\n        if (this.current_day_indicator !== null) {\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        let scroll_read_timer = this._long_reading_timeout || is_focused ? 100 : 100;\n        clearTimeout(this._onscroll_read_messages_timeout);\n        this._onscroll_read_messages_timeout = setTimeout(() => {\n            this.readVisibleMessages();\n        }, scroll_read_timer)\n        this._long_reading_timeout = false;\n        if (this._scrolltop < this._prev_scrolltop &&\n            (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n            this.loadPreviousHistory();\n        }\n        this.hideMessagesAfterSkipping();\n        if (this._scrolltop > this._prev_scrolltop && this.model.get('last_sync_unread_id') && this.getPercentScrolled() > 0.2) {\n            let mam_query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                after: this.model.get('last_sync_unread_id'),\n            };\n            if (this.model.get('synced_msg')) {\n                mam_query.var = [\n                    {var: 'after-id', value: this.model.get('last_sync_unread_id')},\n                    {var: 'before-id', value: this.model.get('synced_msg').get('stanza_id')},\n                ];\n            }\n            this.getMessageArchive(mam_query, {\n                unread_history: true,\n            });\n        }\n    },\n\n    backToBottom: function () {\n        this.model.set('last_sync_unread_id', undefined);\n        this.hideMessagesAfterSkipping();\n        this._no_scrolling_event = true;\n        this.removeAllMessagesExceptLast();\n        this.readMessages();\n        this.model.resetUnread();\n        this.model.set('history_loaded', false);\n        this.loadPreviousHistory();\n        this._long_reading_timeout = false;\n        this._no_scrolling_event = false;\n        this.scrollToBottom();\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            contact = this.contact,\n            is_saved = this.model.get('saved'),\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq, _interval, handler;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE)) {\n            iq.c('field', {'var': `conversation-type`});\n            if (this.model.get('encrypted')){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.model.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let sendMAMRequest = function(func_conn) {\n                handler = func_conn.addHandler(function (message) {\n                    if ((contact && is_groupchat == contact.get('group_chat')) || is_saved) {\n                        let $msg = $(message);\n                        if ($msg.find('result').attr('queryid') === queryid) {\n                            messages.push(message);\n                        }\n                    }\n                    else {\n                        messages = [];\n                        success = false;\n                    }\n                    return true;\n                }, Strophe.NS.MAM);\n                let _delete_handler_timeout = setTimeout(() => {\n                    console.log('handler deleted');\n                    func_conn.deleteHandler(handler);\n                }, 14000);\n                let callb = function (res) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        account.chats.onCompletedMAMRequest(deferred);\n                        let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                        if ($fin.length && $fin.attr('queryid') === queryid) {\n                            let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                            rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                            callback && callback(success, messages, rsm);\n                        }\n                    },\n                    errb = function (err) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        xabber.error(\"MAM error\");\n                        xabber.error(err);\n                        account.chats.onCompletedMAMRequest(deferred);\n                        errback && errback(err);\n                    };\n                console.log('trying to send')\n                if (is_fast)\n                    account.sendFast(iq, callb, errb);\n                else\n                    account.sendIQ(iq, callb, errb);\n\n            };\n            let is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n                conn = is_fast ? account.fast_connection : account.connection;\n\n            if (conn.connected){\n                sendMAMRequest(conn);\n            }\n            let send_counter = 0;\n            _interval = setInterval(() => {\n                is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                    && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline';\n                conn = is_fast ? account.fast_connection : account.connection;\n                conn && console.log(conn.connected);\n                if (!conn || send_counter >= 1){\n                    clearInterval(_interval);\n                    errback && errback('No connection or too many attempts');\n                    return;\n                }\n                if (conn.connected && send_counter < 1){\n                    send_counter++;\n                    sendMAMRequest(conn);\n                }\n            }, 15000);\n        });\n    },\n\n    getMessageArchive: function (query, options) {\n        if (options.previous_history || options.unread_history) {\n            if (this._loading_history || this.model.get('history_loaded')) {\n                return;\n            }\n            this._loading_history = true;\n            clearTimeout(this._load_history_timeout);\n            this._load_history_timeout = setTimeout(() => {\n                this._loading_history = false;\n            }, 60000);\n            this.showHistoryFeedback();\n        }\n        let account = this.model.account, counter = 0;\n        this.MAMRequest(query, (success, messages, rsm) => {\n            clearTimeout(this._load_history_timeout);\n            this._loading_history = false;\n            this.hideHistoryFeedback();\n            if (options.missed_history && !rsm.complete && (rsm.count > messages.length))\n                this.getMessageArchive({after: rsm.last}, {missed_history: true});\n            if (options.unread_history){\n                if (messages.length)\n                    this.model.set('last_sync_unread_id', $(messages[messages.length - 1]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id'));\n                else {\n                    this.model.set('last_sync_unread_id', undefined);\n                    this.hideMessagesAfterSkipping();\n                }\n            }\n            if (options.unread_history_first && messages.length){\n                let first_unread_msg_stanza_id = $(messages[0]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id')\n                this.model.set('first_unread_msg_stanza_id', first_unread_msg_stanza_id);\n                if (messages.length < query.max){\n                    this.model.set('last_sync_unread_id', undefined);\n                    this.hideMessagesAfterSkipping();\n                }\n                this.getMessageArchive({\n                    fast: true,\n                    max: xabber.settings.mam_messages_limit,\n                    before : first_unread_msg_stanza_id\n                }, {unread_history_before: true});\n            }\n            if (this.model.get('group_chat')) {\n                if (this.contact && !this.contact.my_info)\n                    this.contact.getMyInfo();\n            }\n            else {\n                if (this.contact && !this.contact.get('last_seen') && !this.contact.get('server'))\n                    this.contact.getLastSeen();\n            }\n            if (options.previous_history && (messages.length < query.max) && success) {\n                this.model.set('history_loaded', true);\n            }\n            if (options.previous_history || options.unread_history_before || !this.model.get('first_archive_id')) {\n                rsm.first && this.model.set('first_archive_id', rsm.first);\n            }\n            if (options.last_history || !this.model.get('last_archive_id')) {\n                rsm.last && this.model.set('last_archive_id', rsm.last);\n            }\n            _.each(messages, function (message) {\n                let loaded_message = account.chats.receiveChatMessage(message,\n                    _.extend({\n                        is_archived: true,\n                        is_unread_archived: options.unread_history ? true : undefined,\n                    }, options)\n                );\n                if (loaded_message) counter++;\n            });\n            if ((counter === 0) && options.last_history && !this.model.get('history_loaded')) {\n                this.getMessageArchive(_.extend(query, {\n                    max: xabber.settings.mam_messages_limit,\n                    before: this.model.get('first_archive_id') || ''\n                }), {previous_history: true});\n            }\n            if (options.unread_history_before){\n                if (this.model.get('encrypted')){\n                    //TODO: make async func to start opening chat after all messages been handled in enc chat\n                    setTimeout(() => {\n                        this.model._wait_load_unread_history.resolve();\n                    }, 1000);\n                } else\n                    this.model._wait_load_unread_history.resolve();\n            }\n        }, (err) => {\n            if (options.previous_history) {\n                this._loading_history = false;\n                this.showHistoryFeedback(true);\n            }\n            if (options.unread_history_before || options.unread_history_first){\n                this.model._wait_load_unread_history.resolve();\n            }\n        });\n    },\n\n    requestMissedMessages: function (timestamp) {\n        if (!timestamp)\n            return;\n        let query = {};\n        query.var = [{var: 'start', value: moment(timestamp).format()}];\n        this.getMessageArchive(query, {missed_history: true});\n    },\n\n    loadLastHistory: function () {\n        if (!xabber.settings.load_history) {\n            return;\n        }\n        let last_archive_id = this.model.get('last_archive_id'),\n            query = {};\n        if (last_archive_id) {\n            query.after = last_archive_id;\n        } else {\n            query.before = '';\n            query.max = xabber.settings.mam_messages_limit_start;\n        }\n        this.getMessageArchive(query, {last_history: true});\n    },\n\n    loadPreviousHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.getMessageArchive({\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                before: this.model.get('first_archive_id') || '' },\n            {previous_history: true\n            });\n    },\n\n    loadUnreadHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.model.set('loading_unread_history', true)\n        this.getMessageArchive({\n            fast: true,\n            max: xabber.settings.mam_messages_limit,\n            after: this.model.get('last_read_msg'),\n        }, {\n            unread_history_first: true,\n            unread_history: true,\n        });\n    },\n\n    showHistoryFeedback: function (is_error) {\n        if (this._load_history_feedback_timeout) {\n            clearTimeout(this._load_history_feedback_timeout);\n            this._load_history_feedback_timeout = null;\n        }\n        let text = xabber.getString(is_error ? \"loading_archived_messages_error\" : \"loading_history\");\n        this.$history_feedback.text(text).removeClass('hidden');\n        if (is_error) {\n            this._load_history_feedback_timeout = setTimeout(\n                this.hideHistoryFeedback.bind(this), 5000);\n        }\n    },\n\n    showDayIndicator: function (text) {\n        this.$('.fixed-day-indicator').text(text);\n        this.$('.fixed-day-indicator-wrap').removeClass('hidden');\n    },\n\n    showPinnedMessage: function (ev) {\n        if ($(ev.target).hasClass('close'))\n            this.unpinMessage();\n        else {\n            let pinned_message = this.contact.get('pinned_message'),\n                participant_info = {};\n            pinned_message.get('user_info') && this.contact.participants && (participant_info = this.contact.participants.get(pinned_message.get('user_info').id));\n            participant_info && participant_info.attributes && pinned_message.set('user_info', participant_info.attributes);\n\n            let msg = this.buildMessageHtml(pinned_message),\n                pinned_msg_modal = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this, message: pinned_message, pinned: true});\n            pinned_msg_modal.$el.attr('data-color', this.account.settings.get('color'));\n            this.updateMessageInChat(msg, pinned_message);\n            this.initPopup(msg);\n            pinned_msg_modal.open(msg);\n        }\n    },\n\n    imageOnload: function ($message) {\n        let $image_container = $message.find('.img-content'),\n            $copy_link_icon = $message.find('.mdi-link-variant');\n        $image_container.css('background-image', 'none');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    videoOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n        this.initPlyrEmbedPlayer($message, message);\n    },\n\n    OGPLinkOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    locationOnload: function ($message) {\n        let $copy_location_div = $message.find('.msg-copy-location-content');\n        $copy_location_div.html(env.templates.svg['map-marker-outline']());\n        $copy_location_div.attr({\n            'data-location': 'true'\n        });\n    },\n\n    unpinMessage: function () {\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message');\n        this.account.sendIQFast(iq, () => {}, (error) => {\n            if ($(error).find('error not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    loadLocationInChat: function ($message, attrs) {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            let $map_element = $message.find(`#${attrs.id}`);\n            if (!$map_element.length)\n                return;\n            let map = new ol.Map({\n                target: $map_element[0],\n                view: new ol.View\n                ({\tzoom: 15,\n                    center: ol.proj.transform([attrs.lon, attrs.lat], 'EPSG:4326', 'EPSG:3857')\n                }),\n                interactions: ol.interaction_defaults({\n                    altShiftDragRotate:false,\n                    doubleClickZoom:false,\n                    keyboard:false,\n                    mouseWheelZoom:false,\n                    shiftDragZoom:false,\n                    dragPan:false,\n                    pinchRotate:false,\n                    pinchZoom:false\n                }),\n                layers: [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n            });\n\n            map.once('rendercomplete', function(event) {\n                let mapCanvas = document.createElement('canvas');\n                let size = map.getSize();\n                mapCanvas.width = size[0];\n                mapCanvas.height = size[1];\n                let mapContext = mapCanvas.getContext('2d');\n                Array.prototype.forEach.call(\n                    document.querySelectorAll(`#${attrs.id} .ol-layer canvas`),\n                    function (canvas) {\n                        if (canvas.width > 0) {\n                            let opacity = canvas.parentNode.style.opacity;\n                            mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\n                            let transform = canvas.style.transform;\n                            // Get the transform parameters from the style's transform matrix\n                            let matrix = transform\n                                .match(/^matrix\\(([^\\(]*)\\)$/)[1]\n                                .split(',')\n                                .map(Number);\n                            // Apply the transform to the export map context\n                            CanvasRenderingContext2D.prototype.setTransform.apply(\n                                mapContext,\n                                matrix\n                            );\n                            let path = new Path2D('M 18 17.25 C 15.9289 17.25 14.25 15.5711 14.25 13.5 C 14.25 12.5054 14.6451 11.5516 15.3483 10.8483 C 16.0516 10.1451 17.0054 9.75 18 9.75 C 20.0711 9.75 21.75 11.4289 21.75 13.5 C 21.75 14.4946 21.3549 15.4484 20.6517 16.1517 C 19.9484 16.8549 18.9946 17.25 18 17.25 M 18 3 C 12.201 3 7.5 7.701 7.5 13.5 C 7.5 21.375 18 33 18 33 C 18 33 28.5 21.375 28.5 13.5 C 28.5 7.701 23.799 3 18 3 Z');\n                            mapContext.fillStyle = getComputedStyle(document.querySelector(`#${attrs.id}`)).color;\n                            mapContext.drawImage(canvas, 0, 0);\n                            mapContext.translate(157, 117);\n\n                            mapContext.fill(path);\n                        }\n                    }\n                );\n                if (navigator.msSaveBlob) {\n                    // link download attribute does not work on MS browsers\n                    navigator.msSaveBlob(mapCanvas.msToBlob(), 'map.png');\n                } else {\n                    let img = document.getElementById(`img_${attrs.id}`),\n                        dataURL = mapCanvas.toDataURL('image/png');\n                    map.setTarget(null)\n                    map = null;\n                    img.src= dataURL\n                }\n            });\n        });\n    },\n\n    hideHistoryFeedback: function () {\n        this.$history_feedback.addClass('hidden');\n    },\n\n    receiveNoTextMessage: function ($message, carbon_copied) {\n        let from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($message.attr('to')),\n            is_sender = from_jid === this.account.get('jid'),\n            $chat_state = $message.find(`[xmlns=\"${Strophe.NS.CHATSTATES}\"]`);\n        if ($chat_state.length) {\n            if (!is_sender) {\n                let $subtype = $chat_state.children('subtype');\n                if ($subtype.attr('type') == 'encrypted') {\n                    let view = xabber.chats_view.child(`${this.contact.hash_id}:encrypted`);\n                    if (view && view.content)\n                        view.content.showChatState($chat_state[0].tagName.toLowerCase());\n                } else\n                    this.showChatState($chat_state[0].tagName.toLowerCase(), $subtype.attr('type'), $subtype.attr('mime-type'));\n            }\n        }\n    },\n\n    showChatState: function (state, type, mime_type) {\n        clearTimeout(this._chatstate_show_timeout);\n        let message, name = this.contact.get('name');\n        if (state === 'composing') {\n            if (type) {\n                this._current_composing_msg = {type: type};\n                if (type === 'upload') {\n                    let file_type = mime_type ? utils.pretty_file_type_with_article(mime_type) : null;\n                    mime_type && (this._current_composing_msg.mime_type = mime_type);\n                    message = file_type ? xabber.getString(\"chat_state_composing_upload_filetype\", [file_type]) : xabber.getString(\"chat_state_composing_upload\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState();\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                } else {\n                    if (type === 'voice')\n                        message = xabber.getString(\"chat_state_composing_voice\");\n                    if (type === 'video')\n                        message = xabber.getString(\"chat_state_composing_video\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState('paused', type);\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                }\n            }\n            else {\n                this._current_composing_msg = undefined;\n                message = xabber.getString(\"chat_state_composing\");\n                this._chatstate_show_timeout = setTimeout(() => {\n                    this.showChatState();\n                }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            }\n        } else if (state === 'paused') {\n            this.showChatState();\n            return;\n        } else {\n            this.bottom.showChatNotification('');\n            this.chat_item.updateLastMessage();\n            return;\n        }\n        if (message)\n            this.bottom.showChatNotification(`${this.contact.get('name')} ${message}`);\n        else\n            this.bottom.showChatNotification();\n        this.chat_item.$('.last-msg').text(message);\n        this.chat_item.$('.last-msg-date').text(utils.pretty_short_datetime())\n            .attr('title', pretty_datetime());\n        this.chat_item.$('.msg-delivering-state').addClass('hidden');\n    },\n\n    updateMentions: function (message) {\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\";\n                if (this.contact.get('group_chat') || message.get('groupchat_jid')) {\n                    let id = mention_target.match(/\\?id=\\w*/),\n                        jid = mention_target.match(/\\?jid=.*/);\n                    if (id && this.contact.my_info) {\n                        mention_target = id[0].slice(4);\n                        (mention_target === this.contact.my_info.get('id')) && (mention.me = true);\n                    }\n                    else if (jid) {\n                        mention_target = jid[0].slice(5);\n                        (mention_target === this.account.get('jid')) && (mention.me = true);\n                    }\n                }\n                else {\n                    mention_target = mention_target.slice(5);\n                    if (mention_target === this.account.get('jid'))\n                        mention.me = true;\n                }\n            });\n        }\n    },\n\n    onMessage: function (message) {\n        this.updateMentions(message);\n        this.account.messages.add(message);\n        let is_scrolled_to_bottom = this.isScrolledToBottom(),\n            scrolled_from_bottom = this.getScrollBottom();\n        if (!_.isUndefined(message.get('is_accepted'))) {\n            this.model.set('is_accepted', false);\n        }\n        this.model.set('opened', true);\n        if (!message.get('is_archived') && !message.get('is_unread_archived') && message.get('stanza_id'))\n            this.model.set('last_archive_id', message.get('stanza_id'));\n\n        if (message.get('participants_version')) {\n            if (this.contact.participants && this.contact.participants.version < message.get('participants_version'))\n                this.contact.trigger('update_participants');\n        }\n\n        let $message = this.addMessage(message);\n\n        if (message.get('type') === 'file_upload') {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.startGalleryUploadFile(message, $message);\n            else\n                this.startUploadFile(message, $message);\n        }\n\n        if (!(message.get('synced_from_server') || (message.get('is_archived') && !message.get('missed_msg')))) {\n            if (message.get('missed_msg')){\n                let last_read_msg = this.model.messages.find(m => this.model.get('last_read_msg') && (m.get('stanza_id') === this.model.get('last_read_msg') || m.get('contact_stanza_id') === this.model.get('last_read_msg'))),\n                    deferred = new $.Deferred();\n                deferred.done(() => {\n                    if (last_read_msg && message.get('timestamp') > last_read_msg.get('timestamp')){\n                        message.set('is_unread', true);\n                        if (!xabber.get('focused')) {\n                            if (this.model.get('saved') || this.model.isMuted())\n                                message.set('muted', true);\n                        }\n                        this.model.setMessagesDisplayed(message.get('timestamp'));\n                    }\n                });\n                if (!last_read_msg){\n                    this.contact.getMessageByStanzaId(this.model.get('last_read_msg'), ($message) => {\n                        last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        deferred.resolve();\n                    });\n                } else {\n                    deferred.resolve();\n                }\n            } else {\n                if (!(message.isSenderMe() || message.get('silent') || ((message.get('type') === 'system') && !message.get('auth_request')))) {\n                    message.set('is_unread', true);\n                    if (message.get('is_unread') && xabber.get('focused') && !xabber.get('idle') && this.isVisible()){\n                        this.readVisibleMessages();\n                    }\n                    if (!xabber.get('focused')) {\n                        if (this.model.get('saved') || this.model.isMuted())\n                            message.set('muted', true);\n                        else if (!message.get('synced_invitation_from_server'))\n                            this.notifyMessage(message);\n                    }\n                    this.model.setMessagesDisplayed(message.get('timestamp'));\n                }\n            }\n            if (this.contact && this.model.get('archived')){\n                if (this.model.isMuted())\n                    message.set('archived', true);\n                else {\n                    this.head.archiveChat();\n                    this.model.set('archived', false);\n                }\n            }\n            if (this.model.get('saved')) {\n                message.set('muted', true);\n                message.set('state', constants.MSG_DISPLAYED);\n            }\n        }\n\n        if (this.isVisible() && (!message.get('is_unread') || is_scrolled_to_bottom) && !message.get('is_between_anchors')) {\n            let is_scrolling_needed;\n            if (is_scrolled_to_bottom){\n                if (this.$(`.chat-message.unread-message`).length){\n                    if (this.$(`.chat-message.unread-message`)[0].offsetTop > (this._scrolltop + 140)) {\n                        is_scrolling_needed = true;\n                    }\n                } else\n                    is_scrolling_needed = true;\n            }\n            if ((is_scrolled_to_bottom && is_scrolling_needed) || message.get('submitted_here')) {\n                this.scrollToBottom();\n            } else if (!is_scrolled_to_bottom) {\n                this.updateScrollBar();\n                this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n            }\n        }\n\n        if (message.get('synced_from_server') && message.get('is_unread')) {\n            this.onChangedReadState(message);\n        }\n        if (message.get('attention')) {\n            this.attentionMessage(message);\n        }\n\n        if (message.isSenderMe()) {\n            if (!message.get('is_archived') && !message.get('missed_msg') && message.get('type') != 'system')\n                this.readMessages(message.get('timestamp'));\n            if (this.model.get('last_displayed_id') >= message.get('stanza_id') && message.get('stanza_id') !== message.get('origin_id'))\n                message.set('state', constants.MSG_DISPLAYED);\n            else if (message.get('stanza_id') !== message.get('origin_id') && (this.model.get('last_delivered_id') >= message.get('stanza_id') || message.get('is_archived')))\n                message.set('state', constants.MSG_DELIVERED);\n        }\n\n        if (message.get('private_invite') || message.get('invite')) {\n            if (!(this.contact.invitation && this.contact.invitation.message.get('timestamp') > message.get('timestamp')))\n                this.contact.invitation = new xabber.GroupchatInvitationView({model: this.contact, message: message});\n            this.model.contact.set('invitation', true);\n            this.model.get('active') && this.model.contact.trigger('open_chat', this.model.contact);\n            message.set('is_unread', false);\n        }\n\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') >= last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (this.contact.my_info)\n                    (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                else if (this.contact.get('group_chat')) {\n                    if (this._pending_my_info) {\n                        this._pending_my_info.done(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                            this._pending_my_info = null;\n                        });\n                    }\n                    else {\n                        this._pending_my_info = new $.Deferred();\n                        this.contact.getMyInfo(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {\n                                message: message,\n                                contact: this.contact\n                            });\n                            this._pending_my_info.resolve();\n                        });\n                    }\n                }\n                (mention_target === this.account.get('jid') || mention_target === \"\") && this.account.mentions.create(null, {message: message, contact: this.contact});\n            });\n        }\n\n        if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context' && this.model.messages_view.last_history_loaded)\n            this.account.context_messages.add(message);\n\n    },\n\n\n    decryptImages: function (message, force) {\n        let scrolled_from_bottom = this.getScrollBottom();\n        if (this.model.get('encrypted') || message.get('encrypted') || force) {\n            let images = message.get('images') || [];\n            if (images.length) {\n                images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = [];\n                        if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context')\n                            $msg = this.model.messages_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        else\n                            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            }\n            let fwd_msgs = message.get('forwarded_message') || [];\n            fwd_msgs.forEach((fwd_msg) => {\n                let fwd_images = fwd_msg.get('images') || [];\n                fwd_images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] .fwd-message[data-uniqueid=\"${fwd_msg.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            });\n        }\n    },\n\n    addMessage: function (message) {\n        let $message = this.buildMessageHtml(message),\n            index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            $message.prependTo(this.$('.chat-content'));\n        } else {\n            let $prev_message = this.$(`.chat-message[data-uniqueid=\"${this.model.messages.models[index - 1].get('unique_id')}\"]`);\n            if (!$prev_message.length) {\n                $prev_message = this.addMessage(this.model.messages.models[index - 1]);\n            }\n            $message.insertAfter($prev_message);\n        }\n        let $next_message = $message.nextAll('.chat-message').first();\n        this.updateMessageInChat($message[0], message);\n        if ($next_message.length) {\n            this.updateMessageInChat($next_message[0]);\n        }\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n        return $message;\n    },\n\n    initPopup: function ($message) {\n        let $one_image = $message.find('.uploaded-img'),\n            $collage_image = $message.find('.uploaded-img-for-collage');\n        if ($one_image.length) {\n            $one_image.each((idx, item) => {\n                this.initMagnificPopup($(item));\n            });\n        }\n        if ($collage_image.length) {\n            this.initZoomGallery($message);\n        }\n    },\n\n    getImagesInformation: function (msg) {\n        let images = msg.get('images'),\n            servers = [];\n        if (!images)\n            return;\n        images.forEach((img) => {\n            let server = new URL(img.sources[0]).hostname;\n            img.pretty_size = utils.pretty_size(img.size)\n            servers.push(server);\n        });\n        servers = [...new Set(servers)]\n\n        return {images, servers};\n    },\n\n    initMagnificPopup: function ($elem) {\n        let self = this;\n        $elem.length && $elem.magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    initZoomGallery: function ($message) {\n        let self = this;\n        $message.find('.zoom-gallery').length && $message.find('.zoom-gallery').magnificPopup({\n            delegate: 'img',\n            type: 'image',\n            closeOnContentClick: false,\n            closeBtnInside: false,\n            mainClass: 'mfp-with-zoom mfp-img-mobile',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            gallery: {\n                enabled: true\n            },\n            zoom: {\n                enabled: true,\n                duration: 300,\n                opener: function(element) {\n                    return element;\n                }\n            }\n        });\n    },\n\n    updateMessage: function (item) {\n        let $message, images = item.get('images'), emoji = item.get('only_emoji'), $new_message,\n            files =  item.get('files');\n        if (item instanceof xabber.Message) {\n            this.updateMentions(item);\n            $new_message = this.buildMessageHtml(item);\n            $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        }\n        else\n            return;\n        $message.replaceWith($new_message)\n        $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        this.updateMessageInChat($message[0], item);\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n\n        if (item.get('data_form')) {\n            let data_form = utils.render_data_form(item.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n        let short_datetime = utils.pretty_short_datetime(item.get('last_replace_time')),\n            datetime = moment(item.get('last_replace_time')).format('D MMMM, YYYY HH:mm:ss'),\n            new_title = `${pretty_datetime(item.get('time'))} ${xabber.getString(\"edited\", [moment(item.get('timestamp')).startOf('day').isSame(moment(item.get('last_replace_time')).startOf('day')) ? short_datetime : datetime])}`;\n        $message.find('.msg-time').prop('title', new_title);\n        $message.find('.edited-info').removeClass('hidden').text(xabber.getString(\"chat_screen__message__label_edited\")).prop('title', new_title);\n    },\n\n    removeAllMessagesExceptLast: function () {\n        let messages_to_save = [];\n        if (!this.model.messages)\n            return;\n        this.model.messages.forEach((message, idx) => {\n            if (idx === (this.model.messages.length - 1)){\n                messages_to_save.push(message);\n                this.model.set('first_archive_id', message.get('stanza_id'));\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message');\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message-background');\n                return;\n            }\n            let $message, $message_in_chat;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`));\n            $message.prev('.chat-day-indicator').remove();\n            $message.remove();\n        });\n        this.model.messages.reset(messages_to_save);\n        this.updateScrollBar();\n    },\n\n    removeMessage: function (item) {\n        let message, $message, $message_in_chat;\n        if (item instanceof xabber.Message) {\n            message = item;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`));\n        } else {\n            $message = item;\n            if (!$message.length) return;\n            message = this.model.messages.get($message.data('uniqueid'));\n        }\n        message && message.destroy();\n        if ($message_in_chat) {\n            this.removeMessageFromDOM($message_in_chat);\n        }\n        if ($message && ($message !== $message_in_chat))\n            this.removeMessageFromDOM($message);\n    },\n\n    removeMessageFromDOM: function ($message) {\n        if (($message.hasClass('with-author')) && (!$message.next().hasClass('with-author'))) {\n            let avatar = $message.find('.circle-avatar')[0];\n            $message.next().addClass('with-author');\n            $message.next().find('.circle-avatar').replaceWith(avatar);\n        }\n        $message.prev('.chat-day-indicator').remove();\n        $message.remove();\n        this.bottom.manageSelectedMessages();\n        if (!this._clearing_history) {\n            this.updateScrollBar();\n        }\n    },\n\n    clearHistory: function () {\n        let dialog_options = [],\n            dialog_message = this.contact.get('group_chat') ? xabber.getString(\"clear_group_chat_history_dialog_message\") : xabber.getString(\"clear_chat_history_dialog_message\"),\n            is_group_chat = this.contact.get('group_chat') ? true : false;\n        this._clearing_history = true;\n        if (this.account.server_features.get(Strophe.NS.REWRITE)) {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), dialog_message,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                this.model.retractAllMessages(is_group_chat, () => {\n                    this._clearing_history = false;\n                    this.chat_item.updateLastMessage();\n                    this.updateScrollBar();\n                }, () => {\n                    this._clearing_history = false;\n                });\n            });\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), `${dialog_message}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')})`,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                let msgs = _.clone(this.model.messages.models);\n                msgs.forEach((item) => { this.removeMessage(item); });\n            });\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url, chat) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.link-file');\n        chat = chat || this.model;\n        $elem.addClass('voice-message-rendering').html($(templates.messages.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, $elem.find('#' + unique_id));\n\n        let hideShowCursor = () => {\n            let current_time = aud.getCurrentTime(),\n                duration = aud.getDuration();\n            if (current_time === 0 || current_time === duration)\n                $msg_element.addClass('wave-cursor-hidden');\n            else\n                $msg_element.removeClass('wave-cursor-hidden');\n        };\n\n        aud.on('ready', () => {\n            let duration = Math.round(aud.getDuration());\n            hideShowCursor();\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.addClass('playing');\n            $msg_element.removeClass('wave-cursor-hidden');\n            let is_popup;\n            xabber.current_plyr_player && (is_popup = xabber.current_plyr_player.is_popup);\n            xabber.current_plyr_player = chat.plyr_players.find(item => item.$audio_elem === $msg_element[0]);\n            xabber.current_plyr_player && (xabber.current_plyr_player.chat_item = chat.item_view);\n            xabber.current_plyr_player && (xabber.current_plyr_player.is_popup = is_popup);\n            let other_players = xabber.plyr_players.filter(other => other != xabber.current_plyr_player);\n            other_players.forEach(function(other) {\n                if (other.$audio_elem){\n                    if (other.$audio_elem.voice_message)\n                        other.$audio_elem.voice_message.stopTime();\n                }\n            });\n            (xabber.plyr_player_popup && xabber.plyr_player_popup.player) && xabber.plyr_player_popup.player.stop();\n            (!xabber.current_plyr_player && xabber.plyr_player_popup) && xabber.plyr_player_popup.closePopup();\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('finish', () => {\n            hideShowCursor();\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.removeClass('playing');\n            hideShowCursor();\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('seek', () => {\n            hideShowCursor();\n        });\n\n        aud.stopTime = () => {\n            aud.stop()\n            $elem.find('.voice-msg-current-time').text(utils.pretty_duration(0));\n        };\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createImageGrid: function (attrs) {\n        let template_for_images;\n        if (attrs.images.length > 6) {\n            let tpl_name = 'template-for-6',\n                hidden_images = attrs.images.length - 5;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n            template_for_images = $(templates.messages[tpl_name](attrs));\n            template_for_images.find('.last-image').addClass('hidden-images');\n            template_for_images.find('.image-counter').text('+' + hidden_images);\n        }\n        else {\n            let tpl_name = 'template-for-' + attrs.images.length;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + attrs.images.length)\n            template_for_images = $(templates.messages[tpl_name](attrs));\n        }\n        if (!xabber.settings.load_media) {\n            template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n        }\n        return template_for_images;\n    },\n\n    buildMessageHtml: function (message) {\n        let attrs = _.clone(message.attributes),\n            is_sender = (message instanceof xabber.Message) ? message.isSenderMe() : false,\n            user_info = attrs.user_info || {}, username,\n            images = attrs.images,\n            videos = attrs.videos,\n            emoji = message.get('only_emoji'),\n            files =  attrs.files,\n            locations =  attrs.locations,\n            link_references =  attrs.link_references,\n            is_video = Boolean(videos && videos.length),\n            is_image = Boolean(images && images.length),\n            is_location = locations ? true : false,\n            is_file = files ? true : false,\n            is_audio = false,\n            template_for_images,\n            avatar_id = user_info.avatar,\n            avatar_url = user_info.avatar_url,\n            role = user_info.role,\n            badge = user_info.badge,\n            from_id = user_info.id,\n            has_encrypted_files = attrs.has_encrypted_files,\n            audio_player_list = [];\n\n        username = user_info.nickname || this.model.get('saved') && this.account.get('name') || (attrs.from_jid === this.contact.get('jid') && this.contact.get('name'));\n        if (!username) {\n            if (is_sender) {\n                if (this.model.get(\"group_chat\")) {\n                    if (this.contact.my_info)\n                        username = this.contact.my_info.get('nickname');\n                    else if (this.contact)\n                        this.contact.getMyInfo(() => {\n                            username = this.contact.my_info.get('nickname');\n                            if ($message) {\n                                $message.children(\".msg-wrap\").find(\".chat-msg-author-wrap .chat-msg-author\").text(Strophe.xmlescape(username));\n                            }\n                        });\n                    else\n                        username = this.account.get('name');\n                } else\n                    username = this.account.get('name');\n            } else {\n                username = this.account.contacts.get(attrs.from_jid) ? this.account.contacts.get(attrs.from_jid).get('name') : attrs.from_jid;\n            }\n        }\n        username = Strophe.xmlescape(username || \"\");\n\n        if (is_sender && this.model.get('group_chat')) {\n            if (this.contact.my_info) {\n                role = this.contact.my_info.get('role');\n                badge = this.contact.my_info.get('badge');\n            }\n        }\n        _.extend(attrs, {\n            username: username,\n            state: (message instanceof xabber.Message) ? message.getState() : 'sent',\n            verbose_state: (message instanceof xabber.Message) ? message.getVerboseState() : 'sent',\n            time: pretty_datetime(attrs.time),\n            short_time: utils.pretty_time(attrs.time),\n            avatar_id: avatar_id,\n            avatar_url: avatar_url,\n            is_image: is_image,\n            is_video: is_video,\n            is_file: is_file,\n            is_location: is_location,\n            files: files,\n            locations: locations,\n            link_references: link_references,\n            role: utils.pretty_name(role),\n            badge: badge,\n            from_id: from_id\n        });\n        attrs.encrypted = attrs.encrypted || this.model.get('encrypted');\n        attrs.not_encrypted = attrs.not_encrypted || null;\n\n        if (attrs.type === 'system') {\n            let tpl_name = attrs.invite ? 'group_request' : 'system';\n            return $(templates.messages[tpl_name](attrs));\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                template_for_images = this.createImageGrid(attrs);\n            }\n        }\n\n        let classes = [\n            attrs.is_unread && 'unread-message',\n            attrs.is_unread && 'unread-message-background',\n            attrs.not_encrypted && 'not-decrypted',\n            attrs.forwarded_message && 'forwarding',\n            (attrs.encrypted || this.model.get('encrypted')) ? 'encrypted' : \"\"\n        ];\n\n        let markup_body = utils.markupBodyMessage(message), $message;\n        if (attrs.searched_message){\n            let myRegexp = new RegExp('(.{0,12})(' + attrs.query + ')(.{0,12})','gmius'),\n                matching_markup = myRegexp.exec(markup_body);\n            if (matching_markup) {\n                if (matching_markup[1].length == 12)\n                    matching_markup[1] = '...' + matching_markup[1].substring(1);\n                if (matching_markup[3].length == 12)\n                    matching_markup[3] = matching_markup[3].substring(0, matching_markup[3].length - 1) + '...';\n                markup_body = matching_markup[1] + '<span class=\"mention ground-color-100\">' + matching_markup[2] + '</span>' + matching_markup[3];\n                markup_body = markup_body.replace(/\\n/g, \" \");;\n            }\n        }\n\n        if (this.model.get('saved') && !markup_body.length && attrs.forwarded_message && attrs.forwarded_message.length == 1) {\n            $message = $(templates.messages.saved_main(_.extend(attrs, {\n                classlist: classes.join(' ')\n            })));\n        } else if (attrs.searched_message)\n            $message = $(templates.messages.searched(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                msg_time: utils.pretty_short_datetime_recent_chat(attrs.time),\n                classlist: classes.join(' ')\n            })));\n        else if (attrs.type === 'file_upload')\n            $message = $(templates.messages.file_upload(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n        else\n            $message = $(templates.messages.main(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n\n        if (attrs.hasOwnProperty('encrypted')){\n            if (attrs.hasOwnProperty('submitted_here')){\n                $message.attr('data-trust', true);\n            } else if (attrs.hasOwnProperty('is_trusted')){\n                $message.attr('data-trust', attrs.is_trusted);\n            } else {\n                $message.attr('data-trust', this.$el.attr('data-trust'));\n            }\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                $message.find('.chat-msg-media-content').html(template_for_images);\n                !xabber.settings.load_media && $message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            if (images.length == 1) {\n                let $img_html = this.createImage(images[0]),\n                    img_content = this.createImageContainer(images[0]);\n                $img_html.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.find('.chat-msg-media-content').html($(img_content).html($img_html));\n                !xabber.settings.load_media && $message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                this.updateScrollBar();\n            }\n        }\n        if (is_video) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n\n        if (is_file && attrs.type !== 'file_upload') {\n            if (files.length > 0) {\n                let file_attrs = _.clone(files),\n                    template_for_file_content;\n                $(file_attrs).each((idx, file) => {\n                    let copied_attrs = _.clone(file_attrs[idx]);\n                    if (file.type) {\n                        if (file.voice)\n                            is_audio = true;\n                        else\n                            is_audio = false;\n                    }\n                    ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                    let mdi_icon_class = utils.file_type_icon(file.type);\n                    _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size) });\n                    template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                    $message.find('.chat-msg-media-content').append(template_for_file_content);\n                    if (is_audio && $message.find('.link-file').length) {\n                        let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                        audio_player.msg_time = $message.attr('data-time');\n                        audio_player.author = username;\n                        audio_player.message_unique_id = $message.attr('data-uniqueid');\n                        if (attrs.from_jid === this.account.get('jid')) {\n                            if (this.model.get('group_chat')) {\n                                if (this.contact.my_info) {\n                                    audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                    if (!audio_player.contact_avatar) {\n                                        if (this.account.cached_image)\n                                            audio_player.contact_avatar = this.account.cached_image;\n                                        !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                                    } else\n                                        audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                }\n                            }\n                            if (!audio_player.contact_avatar)\n                                audio_player.contact_avatar = this.account.cached_image;\n                        } else {\n                            if (this.model.get('group_chat')) {\n                                let author = $message.find('.msg-wrap .chat-msg-author').text();\n                                audio_player.contact_avatar = Images.getDefaultAvatar(author);\n                            }\n                            else {\n                                let author = this.account.contacts.get($message.data('from')) || $message.find('.msg-wrap .chat-msg-author').text() || $message.data('from');\n                                audio_player.contact_avatar = author.cached_image || Images.getDefaultAvatar(author);\n                            }\n                        }\n                        if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                            this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                            xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                            audio_player_list = audio_player_list.concat([audio_player]);\n                        } else {\n                            audio_player_list = message.get('msg_player_audios');\n                        }\n\n                        let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                        $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                        audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                        xabber.trigger('plyr_player_updated');\n                    }\n                });\n            }\n        }\n\n        if (is_file && attrs.type === 'file_upload') {\n            let images = [];\n            $(files).each((idx, file_) => {\n                file_.upload_id = idx;\n                if (utils.isImageType(file_.type)) {\n                    file_.sources = [file_.key ? file_.image_prev.src : window.URL.createObjectURL(new Blob([file_])),];\n                    images.push(file_);\n                }\n            });\n            if (images.length > 0) {\n                if (images.length > 1) {\n                    let template_for_images;\n                    if (images.length > 6) {\n                        let tpl_name = 'template-for-6',\n                            hidden_images = images.length - 5;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                        template_for_images.find('.last-image').addClass('hidden-images');\n                        template_for_images.find('.image-counter').text('+' + hidden_images);\n                    }\n                    else {\n                        let tpl_name = 'template-for-' + images.length;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                    }\n                    template_for_images.addClass('unuploaded-images');\n                    $(templates.messages.loading_circle()).insertAfter(template_for_images.find('img'));\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(template_for_images);\n                } else {\n                    let $img_html = this.createImage(images[0]),\n                        img_content = this.createImageContainer(images[0]),\n                        maxHeight = 400,\n                        maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7,\n                        imgHeight = images[0].height,\n                        imgWidth = images[0].width;\n                    maxWidth = maxWidth > 400 ? 400 : maxWidth;\n                    if (imgHeight && imgWidth) {\n                        if (imgWidth > maxWidth) {\n                            imgHeight = imgHeight * (maxWidth/imgWidth);\n                            imgWidth = maxWidth;\n                        }\n                        if (imgHeight > maxHeight) {\n                            imgWidth = imgWidth * (maxHeight/imgHeight);\n                            imgHeight = maxHeight;\n                        }\n                    }\n                    imgWidth = imgWidth ? imgWidth : 200;\n                    imgHeight = imgHeight ? imgHeight : 200;\n                    $(img_content).addClass('unuploaded-images');\n                    $(img_content).attr('data-upload-file-id', images[0].upload_id);\n                    $(img_content).css({\n                        width: imgWidth,\n                        height: imgHeight,\n                        'max-height': maxHeight,\n                        'max-width': maxWidth,\n                    });\n                    $(img_content).html($img_html)\n                    $(img_content).append(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(img_content);\n                }\n            }\n            if (files.length > 0) {\n                $(files).each((idx, item) => {\n                    if (images.includes(item))\n                        return;\n                    let file_attrs = {\n                            name: item.name,\n                            type: item.type,\n                            upload_id: item.upload_id,\n                        },\n                        template_for_file_content;\n                    _.extend(file_attrs, {size: utils.pretty_size(item.size)});\n                    template_for_file_content = $(templates.messages.file_loading(file_attrs));\n                    template_for_file_content.find('.file-loading-container').html(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                });\n            }\n        }\n        if (is_location) {\n            if (locations.length > 0) {\n                let location_attrs = _.clone(locations),\n                    template_for_location_content;\n                $(location_attrs).each((idx, location) => {\n                    let copied_attrs = _.clone(location_attrs[idx]);\n                    _.extend(copied_attrs, { id: '_' + Math.random().toString(36).substr(2, 9)});\n                    if (xabber.settings.mapping_service){\n                        template_for_location_content = $(templates.messages.location(copied_attrs));\n                        $message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                        $message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                        $message.find('.chat-msg-location-content').append(template_for_location_content);\n                        this.loadLocationInChat($message, copied_attrs);\n                        this.locationOnload($message);\n                    } else {\n                        $message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                    }\n                });\n            }\n        }\n\n        if (link_references && link_references.length > 0) {\n            let link_references_attrs = _.clone(link_references),\n                template_for_link_reference_content,\n                youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n            $(link_references_attrs).each((idx, link) => {\n                let copied_attrs = _.clone(link_references_attrs[idx]);\n                copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                    copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                    copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                    copied_attrs.is_video = true;\n                    youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                    vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                } else\n                    copied_attrs.is_video = false;\n                template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                $message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n            });\n            this.OGPLinkOnload($message, message);\n        }\n\n        if (message.get('data_form')) {\n            let data_form = utils.render_data_form(message.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n\n        if (attrs.forwarded_message && !attrs.searched_message) {\n            $(attrs.forwarded_message).each((idx, fwd_msg) => {\n                is_sender = fwd_msg.isSenderMe();\n                attrs = _.clone(fwd_msg.attributes);\n                let is_image_forward = Boolean(attrs.images && attrs.images.length),\n                    images_forward = is_image_forward ? _.clone(attrs.images) : undefined,\n                    $img_html_forward,\n                    is_forward_video = Boolean(attrs.videos && attrs.videos.length),\n                    is_forward_file = Boolean(attrs.files && attrs.files.length),\n                    is_forward_location = Boolean(attrs.locations && attrs.locations.length),\n                    is_fwd_voice_message,\n                    user_info = attrs.user_info || {},\n                    avatar_id = user_info.avatar,\n                    avatar_url = user_info.avatar_url,\n                    role = utils.pretty_name(user_info.role),\n                    badge = user_info.badge,\n                    from_id = user_info.id,\n                    from_jid = attrs.from_jid;\n                !has_encrypted_files && (has_encrypted_files = attrs.has_encrypted_files);\n                if (is_sender) {\n                    username = Strophe.xmlescape(user_info.nickname || this.account.get('name'));\n                } else {\n                    username = Strophe.xmlescape(user_info.nickname || user_info.id || this.account.contacts.mergeContact({jid: from_jid}).get('name'));\n                }\n\n                let fwd_markup_body = utils.markupBodyMessage(fwd_msg);\n\n                let $f_message = $(templates.messages.forwarded(_.extend(attrs, {\n                    time: pretty_datetime(attrs.time),\n                    short_time: utils.pretty_short_month_date(attrs.time),\n                    username: username,\n                    avatar_id: avatar_id,\n                    avatar_url: avatar_url,\n                    message: fwd_markup_body,\n                    is_file: is_forward_file,\n                    is_location: is_forward_location,\n                    is_audio: is_fwd_voice_message,\n                    role: role,\n                    badge: badge,\n                    from_id: from_id\n                })));\n\n                if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                    $f_message.append($message.children('.right-side').clone());\n                }\n\n                if (fwd_msg.get('forwarded_message')) {\n                    let fwd_messages_count = fwd_msg.get('forwarded_message').length,\n                        fwd_messages_link = xabber.getQuantityString(\"forwarded_messages_count\", fwd_messages_count);\n                    $f_message.children('.msg-wrap').children('.fwd-msgs-block').append($('<a/>', {class: 'collapsed-forwarded-message', 'data-uniqueid': attrs.unique_id}).text(fwd_messages_link));\n                }\n\n                if (is_image_forward) {\n                    if (images_forward.length > 1) {\n                        template_for_images = this.createImageGrid(attrs);\n                        $f_message.find('.chat-msg-media-content').html(template_for_images);\n                        !xabber.settings.load_media && $f_message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                    if (images_forward.length == 1) {\n                        $img_html_forward = this.createImage(images_forward[0]);\n                        $img_html_forward.onload = () => {\n                            this.imageOnload($message);\n                        };\n                        let img_content_forward = this.createImageContainer(images_forward[0]);\n                        $f_message.find('.chat-msg-media-content').html($(img_content_forward).html($img_html_forward));\n                        !xabber.settings.load_media && $f_message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                }\n                if (is_forward_video) {\n                    let video_content = this.createVideoContainer();\n                    $f_message.find('.chat-msg-media-content').append(video_content);\n                    attrs.videos.forEach((video, idx) => {\n                        let video_el = this.createVideo(video, idx);\n                        $f_message.find('.video-content').append(video_el);\n                    });\n                    this.videoOnload($message, message);\n                    $f_message.removeClass('file-upload noselect');\n                }\n\n                if (is_forward_file) {\n                    if (attrs.files.length > 0) {\n                        let file_attrs = _.clone(attrs.files),\n                            template_for_file_content;\n                        $(file_attrs).each((idx, file) => {\n                            let copied_attrs = _.clone(file_attrs[idx]);\n                            if (file.type) {\n                                if (file.voice)\n                                    is_audio = true;\n                                else\n                                    is_audio = false;\n                            }\n                            ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                            let mdi_icon_class = utils.file_type_icon(file.type);\n                            _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size)});\n                            template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                            $f_message.find('.chat-msg-media-content').append(template_for_file_content);\n                            if (is_audio && $f_message.find('.link-file').length) {\n                                let audio_player = {$audio_elem : $f_message.find('.link-file')[0]};\n                                audio_player.msg_time = $message.attr('data-time');\n                                audio_player.author = username;\n                                audio_player.message_unique_id = $message.attr('data-uniqueid') + '-' + $f_message.attr('data-uniqueid');\n                                if (is_sender) {\n                                    if (this.model.get('group_chat')) {\n                                        if (this.contact.my_info) {\n                                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                            if (!audio_player.contact_avatar)\n                                                audio_player.contact_avatar = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                                            else\n                                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                        }\n                                    }\n                                    if (!audio_player.contact_avatar)\n                                        audio_player.contact_avatar = this.account.cached_image;\n                                } else if (this.account.contacts.mergeContact({jid: from_jid})) {\n                                    let contact = this.account.contacts.mergeContact({jid: from_jid})\n                                    audio_player.contact_avatar = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($f_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n                                }\n                                if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                                    this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                                    xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                                    audio_player_list = audio_player_list.concat([audio_player]);\n                                } else {\n                                    audio_player_list = message.get('msg_player_audios');\n                                }\n                                let f_url = $f_message.find('.link-file').find('.file-link-download').attr('href');\n                                $f_message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                                audio_player.$audio_elem.voice_message = this.renderVoiceMessage($f_message.find('.link-file').find('.file-container')[0], f_url);\n                                xabber.trigger('plyr_player_updated');\n                            }\n                        });\n                    }\n                }\n                if (is_forward_location) {\n                    if (attrs.locations.length > 0) {\n                        let location_attrs = _.clone(attrs.locations),\n                            template_for_location_content;\n                        $(location_attrs).each((idx, location) => {\n                            let copied_attrs = _.clone(location_attrs[idx]);\n                            _.extend(copied_attrs, { id: '_fwd' + Math.random().toString(36).substr(2, 9) });\n                            if (xabber.settings.mapping_service){\n                                template_for_location_content = $(templates.messages.location(copied_attrs));\n                                $f_message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                                $f_message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                                $f_message.find('.chat-msg-location-content').append(template_for_location_content);\n                                this.loadLocationInChat($message, copied_attrs);\n                            } else {\n                                $f_message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                            }\n                        });\n                    }\n                }\n                if (attrs.link_references && attrs.link_references.length > 0) {\n                    let link_references_attrs = _.clone(attrs.link_references),\n                        template_for_link_reference_content,\n                        youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                        vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n                    $(link_references_attrs).each((idx, link) => {\n                        let copied_attrs = _.clone(link_references_attrs[idx]);\n                        copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                        if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                            copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                        if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                            copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                            copied_attrs.is_video = true;\n                            youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                            vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                        } else\n                            copied_attrs.is_video = false;\n                        template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                        $f_message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n                    });\n                    this.OGPLinkOnload($message, message);\n                }\n                if (fwd_msg.get('data_form')) {\n                    let data_form = utils.render_data_form(fwd_msg.get('data_form'));\n                    $f_message.find('.chat-msg-content').append(data_form);\n                }\n                $message.children('.msg-wrap').length ? $message.children('.msg-wrap').children('.fwd-msgs-block').append($f_message) : $message.children('.fwd-msgs-block').append($f_message);\n            });\n            this.updateScrollBar();\n            if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                $message.children('.right-side').remove();\n            }\n        }\n        else\n            $message.find('.fwd-msgs-block').remove();\n\n        if (attrs.encrypted || this.model.get('encrypted') || has_encrypted_files) {\n            this.decryptImages(message, has_encrypted_files);\n        }\n\n        if (attrs.searched_message) {\n            let msg_text = '';\n            msg_text = (attrs.forwarded_message) ? (xabber.getQuantityString(\"forwarded_messages_count\", attrs.forwarded_message.length)) : '';\n            if (is_file && is_image && files.length && images.length)\n                msg_text = xabber.getString(\"recent_chat__last_message__attachments\", [files.length + images.length]);\n            else {\n                if (is_file && files.length == 1 && (files[0].is_audio || files[0].voice))\n                    msg_text = `${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(files[0].duration);\n                else if (is_file && files.length > 0) {\n                    let total_size = 0;\n                    files.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_image && images.length > 0) {\n                    let total_size = 0;\n                    images.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__images\", images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_location && locations.length > 0) {\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length);\n                }\n            }\n            if (msg_text)\n                $message.find('.chat-msg-content').text(msg_text)\n        }\n        message.set('msg_player_audios', audio_player_list);\n        return $message.hyperlinkify({selector: '.chat-text-content', embed_video: true}).emojify('.chat-text-content', {tag_name: 'div', emoji_size: utils.emoji_size(emoji)}).emojify('.chat-msg-author-badge', {emoji_size: 16});\n    },\n\n    getDateIndicator: function (date) {\n        let day_date = moment(date).startOf('day');\n        return $('<div class=\"chat-day-indicator one-line noselect\"' + (this.model.get('encrypted') ? (' data-trust=\"' + (this.bottom.$el.attr('data-trust') || this.bottom.$el.attr('data-contact-trust')) + '\"') : \"\") + ' data-time=\"'+\n            day_date.format('x')+'\">'+pretty_date(day_date)+'</div>');\n    },\n\n    initPlyrEmbedPlayer: function ($msg, msg) {\n        let message = this.model.messages.get($msg.data('uniqueid')) || msg,\n            msg_players = [],\n            msg_videos = message && message.get('videos') && message.get('videos').length ? message.get('videos') : null;\n        $msg.find('.plyr-video-container:not(.no-load)').each((idx, item) => {\n            if ($(item).hasClass('no-load'))\n                return;\n            let existing_player = this.model.plyr_players.filter(obj => { return (obj.message_id === idx && obj.message_unique_id === $msg.attr('data-uniqueid'))}),\n                player;\n            if (existing_player.length){\n                player = existing_player[0]\n                msg_players = msg_players.concat([player]);\n            } else {\n                player = {video_src: $(item).attr('data-src')}\n                player.provider = $(item).attr('data-provider');\n                player.video_id = $(item).attr('data-msg-video-id');\n                player.msg_time = $msg.attr('data-time');\n                player.chat_item = this.model.item_view;\n                player.message_id = idx;\n                player.message_unique_id = $msg.attr('data-uniqueid');\n                if (msg_videos && msg_videos.length && player.video_id >= 0) {\n                    let video_file = msg_videos[player.video_id];\n                    video_file && (player.video_file = video_file);\n                }\n                this.model.plyr_players = this.model.plyr_players.concat([player]).sort((a, b) => a.msg_time - b.msg_time);\n                xabber.plyr_players = xabber.plyr_players.concat([player]);\n                msg_players = msg_players.concat([player]);\n            }\n            $(item).attr('data-message-id', player.message_id);\n            $(item).addClass('no-load');\n            if (xabber.current_plyr_player && xabber.current_plyr_player.player_item)\n                if (xabber.current_plyr_player.player_item.message_id === player.message_id && xabber.current_plyr_player.player_item.message_unique_id === player.message_unique_id)\n                    $(item).addClass('active-plyr-container');\n        });\n        msg_players.length && message && message.set('msg_player_videos', msg_players);\n        xabber.trigger('plyr_player_updated');\n    },\n\n    hideMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showMessageAuthor: function ($msg) {\n        if ($msg.hasClass('system'))\n            return;\n        $msg.addClass('with-author');\n        let image, $avatar = $msg.find('.left-side .circle-avatar'),\n            from_jid = $msg.data('from');\n        if (from_jid === this.account.get('jid')) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image) {\n                        if (this.account.cached_image)\n                            image = this.account.cached_image;\n                        !image && (image = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                    } else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else {\n            if (this.model.get('group_chat')) {\n                let author = $msg.find('.msg-wrap .chat-msg-author').text();\n                image = Images.getDefaultAvatar(author);\n            }\n            else {\n                let author = this.account.contacts.get($msg.data('from')) || $msg.find('.msg-wrap .chat-msg-author').text() || $msg.data('from');\n                image = author.cached_image || Images.getDefaultAvatar(author);\n            }\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        if ($msg.data('avatar')) {\n            if ($msg.data('from-id')) {\n                if (this.account.chat_settings.getHashAvatar($msg.data('from-id')) == $msg.data('avatar') && (this.account.chat_settings.getB64Avatar($msg.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($msg.data('from-id')), this.avatar_size);\n                }\n                else {\n                    let pending_avatar = this._pending_avatars.find(a => a.hash == $msg.data('avatar'));\n                    if (pending_avatar) {\n                        pending_avatar.dfd.done((data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            let idx = this._pending_avatars.indexOf(pending_avatar);\n                            if (idx > -1)\n                                this._pending_avatars.splice(idx, 1);\n                        });\n                    } else {\n                        if($msg.data('avatar-url')){\n                            $avatar.setAvatar($msg.data('avatar-url'), this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), $msg.data('avatar-url'));\n                        }\n                        else\n                        {\n                            let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $msg.data('from-id'), dfd = new $.Deferred();\n                            this._pending_avatars.push({hash: $msg.data('avatar'), dfd: dfd});\n                            this.contact.getAvatar($msg.data('avatar'), node, (data_avatar) => {\n                                $avatar.setAvatar(data_avatar, this.avatar_size);\n                                this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), data_avatar);\n                                dfd.resolve(data_avatar);\n                            });\n\n                        }\n                    }\n                }\n            }\n        }\n    },\n\n    hideFwdMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showFwdMessageAuthor: function ($fwd_message) {\n        if (!$fwd_message.length)\n            return;\n        $fwd_message.addClass('with-author');\n        let image,\n            $avatar = $fwd_message.find('.circle-avatar'),\n            from_jid = $fwd_message.data('from'),\n            is_sender = (from_jid === this.account.get('jid')),\n            contact = this.account.contacts.get(from_jid) || from_jid;\n        if (is_sender) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image)\n                        image = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                    else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else if (contact) {\n            image = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($fwd_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        $avatar.removeClass('hidden');\n        if ($fwd_message.data('avatar')) {\n            if ($fwd_message.data('from-id')) {\n                if ((this.account.chat_settings.getHashAvatar($fwd_message.data('from-id')) == $fwd_message.data('avatar')) && (this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')), this.avatar_size);\n                }\n                else {\n                    if($fwd_message.data('avatar-url')){\n                        $avatar.setAvatar($fwd_message.data('avatar-url'), this.avatar_size);\n                        this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), $fwd_message.data('avatar-url'));\n                    }\n                    else {\n                        let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $fwd_message.data('from-id');\n                        this.contact && this.contact.getAvatar($fwd_message.data('avatar'), node, (data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), data_avatar);\n                        });\n                    }\n                }\n            }\n        }\n    },\n\n    updateMessageInChat: function (msg_elem, msg) {\n        let $msg = $(msg_elem);\n        $msg.prev('.chat-day-indicator').remove();\n        if ($msg.find('.plyr-video-container').length) {\n            this.initPlyrEmbedPlayer($msg, msg);\n        }\n        let $prev_msg = $msg.prevAll('.chat-message').first();\n        if (!$prev_msg.length) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n            $msg.find('.fwd-message').each((idx, fwd_msg_item) => {\n                this.showFwdMessageAuthor($(fwd_msg_item));\n            });\n            return;\n        }\n        if ($msg.find('.data-form').length) {\n            this.showMessageAuthor($msg);\n            return;\n        }\n        let is_system = $prev_msg.hasClass('system'),\n            is_same_sender = ($msg.data('from') === $prev_msg.data('from')),\n            is_same_date = moment($msg.data('time')).startOf('day')\n                .isSame(moment($prev_msg.data('time')).startOf('day'));\n        if (!is_same_date) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n        } else if (is_system || !is_same_sender || $prev_msg.hasClass('saved-main')) {\n            this.showMessageAuthor($msg);\n        } else {\n            this.hideMessageAuthor($msg);\n        }\n        if ($msg.hasClass('forwarding')) {\n            let $fwd_message = $msg.find('.fwd-message');\n            $fwd_message.each((idx, fwd_msg_item) => {\n                let $fwd_msg_item = $(fwd_msg_item),\n                    $prev_fwd_message = (idx > 0) ? $fwd_msg_item.prev() : [];\n                $fwd_msg_item.switchClass('hide-date', is_same_date && $prev_fwd_message.length);\n                $fwd_msg_item.removeClass('hide-time');\n                if ($prev_fwd_message.length) {\n                    let is_same_fwded_sender = ($fwd_msg_item.data('from') === $prev_fwd_message.data('from'));\n                    if (is_same_fwded_sender) {\n                        this.hideFwdMessageAuthor($fwd_msg_item);\n                    } else {\n                        this.showFwdMessageAuthor($fwd_msg_item);\n                    }\n                } else {\n                    this.showMessageAuthor($msg);\n                    this.showFwdMessageAuthor($fwd_msg_item);\n                }\n            });\n        }\n\n        ($msg.find('.not-decrypted-icon').length) && $msg.find('.not-decrypted-icon').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        });\n    },\n\n    notifyMessage: function (message) {\n        if (xabber.settings.notifications && ((xabber.settings.notifications_private && !this.model.get('group_chat')) || (xabber.settings.notifications_group && this.model.get('group_chat')))) {\n            let notification_text;\n            if ((this.model.get('group_chat') && xabber.settings.message_preview_group) || (!this.model.get('group_chat') && xabber.settings.message_preview_private))\n                notification_text = message.getText();\n            else\n                notification_text = xabber.getString(\"notification__text_sent_a_message\");\n            let notification = xabber.popupNotification({\n                title: this.contact.get('name'),\n                text: notification_text,\n                icon: this.contact.cached_image.url\n            });\n            notification.onclick = () => {\n                window.focus();\n                this.model.trigger('open');\n            };\n        }\n        if (xabber.settings.group_sound && xabber.settings.notifications_group && this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_group_message;\n            }\n            xabber.playAudio(sound, false, xabber.settings.notifications_volume);\n        }\n        else if (xabber.settings.private_sound && xabber.settings.notifications_private && !this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_private_message;\n            }\n            xabber.playAudio(sound, false, xabber.settings.notifications_volume);\n        }\n        xabber.recountAllMessageCounter();\n    },\n\n    attentionMessage: function () {\n        let notification = xabber.popupNotification({\n            title: this.contact.get('name'),\n            text: xabber.getString(\"chats_attention\"),\n            icon: this.contact.cached_image.url\n        });\n        notification.onclick = () => {\n            window.focus();\n            this.model.trigger('open');\n        };\n        let sound = xabber.settings.sound_on_attention;\n        xabber.playAudio(sound);\n    },\n\n    sendMessage: function (message) {\n        let body = message.get('message'),\n            legacy_body = '',\n            mutable_content = [],\n            forwarded_message = message.get('forwarded_message'),\n            unique_id = message.get('unique_id'),\n            msg_id = message.get('msgid'),\n            link_references = message.get('link_references'),\n            stanza = $msg({\n                to: this.model.get('jid'),\n                type: 'chat',\n                id: msg_id\n            });\n\n        if (forwarded_message) {\n            legacy_body = [];\n            $(forwarded_message).each((idx, fwd_msg) => {\n                let legacy_fwd_msg = Array.from(_.escape(_.unescape(this.bottom.createTextMessage([fwd_msg], \">\"))) + ((idx === forwarded_message.length - 1 && !body.length) ? \"\" : '\\n')),\n                    idx_begin = legacy_body.length,\n                    fwd = $(fwd_msg.get('xml')).clone(),\n                    idx_end = legacy_body.concat(legacy_fwd_msg).length;\n                if (!fwd.attr('from'))\n                    fwd.attr('from', this.account.get('jid'));\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: idx_begin,\n                    end: idx_end\n                })\n                    .c('forwarded', {xmlns: 'urn:xmpp:forward:0'})\n                    .c('delay', {\n                        xmlns: 'urn:xmpp:delay',\n                        stamp: fwd_msg.get('time')\n                    }).up().cnode(fwd[0]).up().up().up();\n                legacy_body = legacy_body.concat(legacy_fwd_msg);\n                mutable_content.push({\n                    start: idx_begin,\n                    end: idx_end,\n                    type: 'forward'\n                });\n            });\n            body = _.unescape(legacy_body.join(\"\")) + body;\n        }\n\n        if (message.get('mentions') && message.get('mentions').length) {\n            message.get('mentions').forEach((mention) => {\n                let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n                mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: mention.start + legacy_body.length,\n                    end: mention.end + legacy_body.length,\n                    type: 'decoration',\n                })\n                    .c('mention', mention_attrs).t(mention.target).up().up();\n            });\n        }\n\n        if (message.get('markups')) {\n            message.get('markups').forEach((markup) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: markup.start + legacy_body.length,\n                    end: markup.end + legacy_body.length,\n                    type: 'decoration'\n                });\n                for (let idx in markup.markup) {\n                    stanza.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n                }\n                stanza.up();\n            });\n        }\n\n        if (message.get('blockquotes')) {\n            message.get('blockquotes').forEach((blockquote) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: blockquote.start + legacy_body.length,\n                    end: blockquote.end + legacy_body.length,\n                    type: 'decoration'\n                })\n                    .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n            });\n        }\n\n        if (message.get('type') == 'file_upload') {\n            let files = message.get('files') || [],\n                images = message.get('images') || [],\n                videos = message.get('videos') || [],\n                all_files = files.concat(images);\n            all_files = all_files.concat(videos)\n            all_files.forEach((file, idx) => {\n                (idx === 0) && (body += '\\n');\n                legacy_body = file.sources[0] + ((idx != all_files.length - 1) ? '\\n' : \"\");\n                let start_idx = Array.from(_.escape(body)).length,\n                    end_idx = start_idx + legacy_body.length;\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && stanza.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                stanza.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && stanza.c('media-type').t(file.type).up();\n                file['id'] && stanza.c('gallery-id').t(file['id']).up();\n                file.thumbnail && stanza.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && stanza.c('created').t(file.created).up();\n                file.name && stanza.c('name').t(file.name).up();\n                file.size && stanza.c('size').t(file.size).up();\n                file.height && stanza.c('height').t(file.height).up();\n                file.width && stanza.c('width').t(file.width).up();\n                file.duration && stanza.c('duration').t(file.duration).up();\n                file.description && stanza.c('desc').t(file.description).up();\n                stanza.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    stanza.c('uri').t(u).up();\n                });\n                stanza.up().up().up();\n                file.voice && stanza.up();\n                body += legacy_body;\n                mutable_content.push({start: start_idx, end: end_idx});\n            });\n            message.set({type: 'main'});\n        }\n\n        if (link_references && link_references.length) {\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(body)).length;\n                    body = body + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && stanza.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && stanza.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && stanza.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && stanza.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && stanza.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && stanza.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && stanza.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && stanza.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && stanza.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                stanza.up().up();\n                mutable_content.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n\n        mutable_content.length && message.set({mutable_content: mutable_content});\n\n        this.account._pending_messages.push({chat_hash_id: this.model.id, unique_id: unique_id, timestamp: moment.now()});\n\n        message.set('original_message', body);\n        body && stanza.c('body').t(body).up();\n        stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n            .c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n        message.set({xml: $(stanza.tree()).clone()[0]});\n        if (message.get('state') === constants.MSG_ERROR) {\n            stanza.c('retry', {xmlns: Strophe.NS.DELIVERY}).up();\n            message.set('state', constants.MSG_PENDING);\n        }\n        if (stanza.toString().length >= constants.STANZA_MAX_SIZE) {\n            utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n            this.removeMessage(message);\n            return;\n        }\n        if (message.get('encrypted') && this.account.omemo) {\n            stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($(stanza.tree()).children('body').length) {\n                stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $(stanza.tree()).children('body').detach()\n            }\n            if ($(stanza.tree()).children('reference').length) {\n                $(stanza.tree()).children('reference').each((idx, reference) => {\n                    stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                });\n                $(stanza.tree()).children('reference').detach()\n            }\n            stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            stanza.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, stanza).then((msg) => {\n                if (msg) {\n                    stanza = msg.message;\n                    message.set('trusted', msg.is_trusted);\n                    message.set({xml: $(stanza.tree()).clone()[0]});\n                }\n                let msg_sending_timestamp = moment.now();\n                this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n            });\n            return;\n        } else {\n            let msg_sending_timestamp = moment.now();\n            this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n        }\n    },\n\n    msgCallback: function (msg_sending_timestamp, message) {\n        this.bottom.click_counter = 0;\n        this.bottom.setDefaultPlaceholder();\n        if (!this.model.get('group_chat') && !this.account.server_features.get(Strophe.NS.DELIVERY)) {\n            setTimeout(() => {\n                if ((this.account.last_stanza_timestamp > msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING)) {\n                    message.set('state', constants.MSG_SENT);\n                } else {\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {\n                        (message.get('state') === constants.MSG_PENDING) && message.set('state', constants.MSG_SENT);\n                    });\n                    setTimeout(() => {\n                        if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING))\n                            message.set('state', constants.MSG_ERROR);\n                    }, 5000);\n                }\n            }, 1000);\n        }\n        else {\n            let _pending_time = 5, was_reconnecting;\n            if (!(this.account.connection.authenticated && !this.account.connection.disconnecting && this.account.session.get('connected') && this.account.session.get('ready_to_send') && this.account.get('status') !== 'offline'))\n                was_reconnecting = true;\n            if (this.account.session.get('reconnecting'))\n                was_reconnecting = true;\n            this.account.session.once('change:reconnecting', () => {\n                console.log('change reconnecting');\n                console.log(this.account.session.get('reconnecting'));\n                was_reconnecting = true;\n            })\n            let _interval = setInterval(() => {\n                console.log(was_reconnecting);\n                if (was_reconnecting)\n                    clearInterval(_interval);\n                if (_pending_time >= 8 && message.get('state') === constants.MSG_PENDING && !was_reconnecting){\n                    console.log('ping on message pending');\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {},  () => {\n                        let downtime = (moment.now() - this.account.last_stanza_timestamp) / 1000;\n                        if (downtime >= 2){\n                            console.log('message initiated reconnection');\n                            console.log(message);\n                            this.account.connection.disconnect();\n                        } else {\n                            console.log('ping was sent and got no result after 2 seconds, but didnt reconnect because last stanza time was: ' + downtime + ' sec')\n                        }\n                    }, 2000);\n                }\n                if (((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 40) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 40)) && !was_reconnecting) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 3;\n            }, 3000);\n        }\n    },\n\n    initJingleMessage: function (media_type) {\n        xabber.current_voip_call && xabber.current_voip_call.destroy();\n        media_type = media_type || {};\n        media_type = media_type.video ? 'video' : 'audio';\n        let session_id = uuid();\n        xabber.current_voip_call = new xabber.JingleMessage({session_id: session_id, video_live: media_type === 'video'}, {contact: this.contact});\n        xabber.current_voip_call.startCall();\n        xabber.current_voip_call.modal_view.show({status: constants.JINGLE_MSG_PROPOSE});\n        xabber.trigger('update_jingle_button');\n    },\n\n    saveForwardedMessage: function (msg) {\n        let forwarded_message = null;\n        if ($(msg).get('forwarded_message')) {\n            forwarded_message = $(msg).get('forwarded_message');\n            if (this.account.forwarded_messages.indexOf(forwarded_message) < 0) {\n                forwarded_message = this.saveForwardedMessage(forwarded_message);\n            }\n        }\n        msg = this.account.forwarded_messages.create(_.extend({\n            is_forwarded: true,\n            forwarded_message: forwarded_message\n        }, msg.attributes));\n        return msg;\n    },\n\n    onSubmit: function (text, fwd_messages, options) {\n        // send forwarded messages before\n        options = options || {};\n        let attrs = {\n            from_jid: this.account.get('jid'),\n            message: text,\n            mentions: options.mentions,\n            blockquotes: options.blockquotes,\n            markups: options.markup_references,\n            files: options.attached_files,\n            link_references: options.link_references,\n            encrypted: this.model.get('encrypted'),\n            submitted_here: true,\n            forwarded_message: null\n        }, _dfd_info = new $.Deferred();\n        _dfd_info.done(() => {\n            if (!fwd_messages.length && !(attrs.files && attrs.files.length) && !(attrs.link_references && attrs.link_references.length) && text.removeEmoji() === \"\")\n                attrs.only_emoji = Array.from(text).length;\n            if (fwd_messages.length) {\n                let new_fwd_messages = [];\n                _.each(fwd_messages, (msg) => {\n                    if (this.account.forwarded_messages.indexOf(msg) < 0) {\n                        msg = this.saveForwardedMessage(msg);\n                    }\n                    new_fwd_messages.push(msg);\n                });\n                attrs.forwarded_message = new_fwd_messages;\n                if (attrs.files && attrs.files.length) {\n                    attrs.type = 'file_upload';\n                    this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                    this.model.messages.create(attrs);\n                } else {\n                    let message = this.model.messages.create(attrs);\n                    this.sendMessage(message);\n                }\n            } else if (attrs.files && attrs.files.length) {\n                attrs.type = 'file_upload';\n                this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                this.model.messages.create(attrs);\n            } else if (text || (attrs.link_references && attrs.link_references.length)) {\n                let message = this.model.messages.create(attrs);\n                this.sendMessage(message);\n            }\n            if (this.contact && this.model.get('archived') && !this.model.isMuted()) {\n                message.set('muted', false);\n                this.head.archiveChat();\n                this.model.set('archived', false);\n                xabber.chats_view.updateScreenAllChats();\n            }\n            if (this.model.get('group_chat') && xabber.toolbar_view.$('.active').hasClass('chats'))\n                if (this.contact && !this.model.isMuted() && !this.model.get('archived'))\n                    xabber.chats_view.updateScreenAllChats();\n            xabber.chats_view.scrollToTop();\n            xabber.chats_view.clearSearch();\n        });\n\n        if (this.contact && this.contact.get(\"group_chat\") && !this.contact.my_info)\n            this.contact.getMyInfo(() => {\n                _dfd_info.resolve();\n            });\n        else\n            _dfd_info.resolve();\n    },\n\n    addFileMessage: function (files, is_voice) {\n        let new_files = [], file_counter = 0;\n        if (this.model.messages_view)\n            if (this.model.messages_view.data.get('visible'))\n                this.model.messages_view.openChat();\n        if (files.length > 10 && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        let http_upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        if (!http_upload_service && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"error_file_upload_not_support\", [this.account.domain]));\n            return;\n        }\n        let deferred_all = new $.Deferred();\n        deferred_all.done((data) => {\n            if (is_voice) {\n                this.model.messages.create({\n                    from_jid: this.account.get('jid'),\n                    type: 'file_upload',\n                    files: data,\n                    encrypted: this.model.get('encrypted'),\n                    upload_service: http_upload_service.get('from'),\n                    message: '',\n                    submitted_here: true\n                });\n            } else\n                this.bottom.addFileSnippets(data);\n        });\n        $(files).each((idx, file) => {\n            if (utils.isImageType(file.type)) {\n                let reader = new FileReader(), deferred = new $.Deferred();\n                Images.compressImage(file).done((image) => {\n                    reader.readAsDataURL(image);\n                    deferred.done((data) => {\n                        if (data) {\n                            image.height = data.height;\n                            image.width = data.width;\n                        }\n                        if (data.encrypted_file)\n                            new_files.push(data.encrypted_file);\n                        else\n                            new_files.push(image);\n                        file_counter++;\n                        if (file_counter === files.length)\n                            deferred_all.resolve(new_files);\n                    });\n                });\n                reader.onload = (e) => {\n                    if (this.model.get('encrypted')) {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                new_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            new_file.key = key;\n                            if (new_file.type === 'image/svg+xml') {\n                                deferred.resolve({encrypted_file: new_file,key: key});\n                            } else {\n                                let image_prev = new Image();\n                                image_prev.onload = function () {\n                                    let height = this.height,\n                                        width = this.width;\n                                    new_file.image_prev = image_prev;\n                                    deferred.resolve({height: height, width: width, encrypted_file: new_file, key: key});\n                                };\n                                image_prev.src = e.target.result;\n                            }\n                        });\n                    } else {\n                        if (file.type === 'image/svg+xml') {\n                            deferred.resolve({});\n                        } else {\n                            let image_prev = new Image();\n                            image_prev.onload = function () {\n                                let height = this.height,\n                                    width = this.width;\n                                deferred.resolve({height: height, width: width});\n                            };\n                            image_prev.src = e.target.result;\n                        }\n                    }\n                };\n            }\n            else {\n                if (this.model.get('encrypted')) {\n                    let reader = new FileReader();\n                    reader.onload = (e) => {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                encrypted_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            file.voice && (encrypted_file.voice = true);\n                            file.duration && (encrypted_file.duration = file.duration);\n                            encrypted_file.key = key;\n                            new_files.push(encrypted_file);\n                            file_counter++;\n                            if (file_counter === files.length)\n                                deferred_all.resolve(new_files);\n                        });\n                    };\n                    reader.readAsDataURL(file);\n                } else {\n                    new_files.push(file);\n                    file_counter++;\n                    if (file_counter === files.length)\n                        deferred_all.resolve(new_files);\n                }\n            }\n        });\n    },\n\n    startUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        $message.find('.repeat-upload').hide();\n        $message.find('.status').hide();\n        $message.find('.progress').show();\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        let files_count = 0;\n        $(message.get('files')).each((idx, file) => {\n            let enc_file = new File([file], file.name);\n            enc_file.key && (delete enc_file.key);\n            let iq = $iq({type: 'get', to: message.get('upload_service')})\n                    .c('request', {xmlns: Strophe.NS.HTTP_UPLOAD})\n                    .c('filename').t(enc_file.name).up()\n                    .c('size').t(enc_file.size).up()\n                    .c('content-type').t(enc_file.type).up(),\n                deferred = new $.Deferred(), self = this;\n            this.account.sendIQFast(iq,\n                function (result) {\n                    let $slot = $(result).find(`slot[xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`);\n                    deferred.resolve({\n                        get_url: $slot.find('get').text(),\n                        put_url: $slot.find('put').text()\n                    });\n                },\n                function (err) {\n                    let error_text = $(err).find(`error text[xml\\\\:lang=\"${xabber._settings.get('language')}\"]`).text(),\n                        error_type = $(err).find('error').attr('type');\n                    !error_text && (error_text = $(err).find(`error text`).text());\n                    self.onFileNotUploaded(message, $message, error_text, 'xmpp');\n                }\n            );\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n            deferred.done((data) => {\n                clearInterval(_interval);\n                let xhr = new XMLHttpRequest(),\n                    $bar = $message.find('.progress');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').click(() => {\n                    xhr.abort();\n                });\n                xhr.onabort = () => {\n                    this.removeMessage($message);\n                };\n                xhr.upload.onprogress = (event) => {\n                    let percentage = event.loaded / event.total;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n                };\n                xhr.onload = xhr.onerror = function () {\n                    if (this.status === 201) {\n                        message.get('files')[idx].url = data.get_url;\n                        files_count++;\n                        if (files_count == message.get('files').length) {\n                            self.onFileUploaded(message, $message);\n                        }\n                    } else {\n                        self.onFileNotUploaded(message, $message, this.responseText, 'http');\n                    }\n                };\n                if ($message.data('cancel')) {\n                    xhr.abort();\n                } else {\n                    xhr.open(\"PUT\", data.put_url, true);\n                    xhr.send(enc_file);\n                }\n            });\n        });\n    },\n\n    startGalleryUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files_count = 0,\n            cancelled_files_count = 0,\n            self = this,\n            is_error = false,\n            xhr_requests = [],\n            msg_files_count = message.get('files').length;\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.uploaded-file').removeClass('uploaded-file');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        $(message.get('files')).each((idx, file) => {\n            if (is_error)\n                return;\n            if (file.key) {\n                file = new File([file], file.name);\n                delete file.key\n            }\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n\n            let formData = new FormData();\n            formData.append('file', file, file.name);\n            if (file.duration)\n                formData.append('duration', file.duration);\n            if (file.size)\n                formData.append('size', file.size);\n            if (file.width)\n                formData.append('width', file.width);\n            if (file.height)\n                formData.append('height', file.height);\n            if (file.voice)\n                formData.append('media_type', file.type + '+voice');\n            else\n                formData.append('media_type', file.type);\n            clearInterval(_interval);\n            message.get('files')[idx].is_errored = false;\n            let xhr = new XMLHttpRequest(),\n                $bar = $message.find('.progress');\n            xhr.formData = formData;\n            xhr_requests = xhr_requests.concat([xhr]);\n            xhr.arrayIndex = xhr_requests.indexOf(xhr);\n            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').one(\"click\",() => {\n                cancelled_files_count++;\n                if (xhr.is_uploading)\n                    xhr.abort();\n                else {\n                    if ((msg_files_count - cancelled_files_count) == 0) {\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        xhr.is_cancelled = true;\n                        $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        message.get('files')[idx] = null;\n                    }\n                }\n            });\n            xhr.upload.onprogress = (event) => {\n                let percentage = event.loaded / event.total;\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n            };\n            xhr.oncancel = xhr.onload = xhr.onerror = xhr.onabort = function () {\n                let xhr_status = this.fakeStatus || this.status;\n                if (xhr_status >= 200 && xhr_status < 300) {\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('mdi-check').removeClass('mdi-close');\n                    let response = this.response ? JSON.parse(this.response) : this.fakeResponse;\n                    message.get('files')[idx].id = response.id;\n                    message.get('files')[idx].created_at = response.created_at;\n                    (response.thumbnail && response.thumbnail.url) && (message.get('files')[idx].thumbnail = response.thumbnail.url);\n                    message.get('files')[idx].url = response.file;\n                    files_count++;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('uploaded-file');\n                    while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                        files_count++;\n                    }\n                    if (files_count == message.get('files').length) {\n                        self.onFileUploaded(message, $message);\n                    } else if (xhr_requests[files_count]){\n                        self.account.testGalleryTokenExpire(() => {\n                            self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                if (!is_error) {\n                                    if (slot_response && slot_response.quota){\n                                        if (slot_response.file && slot_response.hash){\n                                            xhr_requests[files_count].fakeStatus = 200;\n                                            xhr_requests[files_count].fakeResponse = {\n                                                file: slot_response.file,\n                                                id: slot_response.id,\n                                                name: slot_response.name,\n                                                thumbnail: slot_response.thumbnail,\n                                                created_at: slot_response.created_at,\n                                            };\n                                            xhr_requests[files_count].oncancel();\n                                        } else {\n                                            xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                            xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                            xhr_requests[files_count].is_uploading = true;\n                                            xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                        }\n                                    } else {\n                                        xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                        xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                        xhr_requests[files_count].oncancel();\n                                    }\n                                }\n                            });\n                        });\n                    }\n                } else {\n                    if (xhr_status === 0 && is_error)\n                        return;\n                    if ((msg_files_count - cancelled_files_count) == 0 && xhr_status === 0){\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        let response_text, error_status;\n                        self.account.handleCommonGalleryErrors(this.response)\n                        if (xhr_status === 500)\n                            response_text = this.fakeResponse || this.statusText;\n                        else if (xhr_status === 400 || this.fakeStatus){\n                            response_text = this.fakeResponse || JSON.parse(this.response).error;\n                            error_status = this.fakeStatus || JSON.parse(this.response).status;\n                            if (error_status && error_status == 429){\n                                setTimeout(() => {\n                                    self.account.testGalleryTokenExpire(() => {\n                                        self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                            if (!is_error) {\n                                                if (slot_response && slot_response.quota){\n                                                    if (slot_response.file && slot_response.hash){\n                                                        xhr_requests[files_count].fakeStatus = 200;\n                                                        xhr_requests[files_count].fakeResponse = {\n                                                            file: slot_response.file,\n                                                            id: slot_response.id,\n                                                            name: slot_response.name,\n                                                            thumbnail: slot_response.thumbnail,\n                                                            created_at: slot_response.created_at,\n                                                        };\n                                                        xhr_requests[files_count].oncancel();\n                                                    } else {\n                                                        xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                        xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                        xhr_requests[files_count].is_uploading = true;\n                                                        xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                                    }\n                                                } else {\n                                                    xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                                    xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                                    xhr_requests[files_count].oncancel();\n                                                }\n                                            }\n                                        });\n                                    });\n                                }, 1000);\n                                return;\n                            }\n                        }\n                        else if (xhr_status === 0) {\n                            $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        };\n                        (xhr_status === 0) && (message.get('files')[idx] = null);\n                        if (!message.get('files').filter((element) => { return element != null}).length && !message.get('message')){\n                            self.bottom.setEditedMessageAttachments(message, true);\n                            self.bottom.setRedactedUploadMessage(message);\n                            self.removeMessage($message);\n                            return;\n                        }\n                        files_count++;\n                        if (xhr_status != 0) {\n                            if (!$message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').closest('.img-content-template.hidden').length){\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                            } else {\n                                $message.find('.hidden-images .circle-percent-text').text(response_text);\n                                $message.find('.hidden-images .mdi-alert-circle').removeClass('hidden');\n                                $message.find('.hidden-images .mdi-alert-circle').prop('title', response_text);\n                                $message.find('.hidden-images .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('.hidden-images').addClass('upload-error');\n                                $message.find('.hidden-images').css({ 'border-color': '#EF9A9A'});\n                            }\n                            message.get('files')[idx].is_errored = true;\n                            is_error = true;\n                            $(xhr_requests).each((idx, request) => {\n                                request.abort();\n                            })\n                            self.onFileNotUploaded(message, $message, response_text);\n                        }\n                        else if (files_count == msg_files_count) {\n                            self.onFileUploaded(message, $message);\n                        } else {\n                            while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                                files_count++;\n                            }\n                            if (files_count == msg_files_count) {\n                                self.onFileUploaded(message, $message);\n                            } else {\n                                self.account.testGalleryTokenExpire(() => {\n                                    self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                        if (!is_error) {\n                                            if (slot_response && slot_response.quota){\n                                                if (slot_response.file && slot_response.hash){\n                                                    xhr_requests[files_count].fakeStatus = 200;\n                                                    xhr_requests[files_count].fakeResponse = {\n                                                        file: slot_response.file,\n                                                        id: slot_response.id,\n                                                        name: slot_response.name,\n                                                        thumbnail: slot_response.thumbnail,\n                                                        created_at: slot_response.created_at,\n                                                    };\n                                                    xhr_requests[files_count].oncancel();\n                                                } else {\n                                                    xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                    xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                    xhr_requests[files_count].is_uploading = true;\n                                                    xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                                }\n                                            } else {\n                                                xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                                xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                                xhr_requests[files_count].oncancel();\n                                            }\n                                        }\n                                    });\n                                });\n                            }\n                        }\n                    }\n                }\n            };\n        });\n        if (xhr_requests.length){\n            if ($message.data('cancel')) {\n                xhr_requests[0].abort();\n            } else {\n                this.account.testGalleryTokenExpire(() => {\n                    this.account.testGalleryFileSlot(xhr_requests[0].formData.get('file'), (slot_response) => {\n                        if (!is_error) {\n                            if (slot_response && slot_response.quota){\n                                if (slot_response.file && slot_response.hash){\n                                    xhr_requests[0].fakeStatus = 200;\n                                    xhr_requests[0].fakeResponse = {\n                                        file: slot_response.file,\n                                        id: slot_response.id,\n                                        name: slot_response.name,\n                                        thumbnail: slot_response.thumbnail,\n                                        created_at: slot_response.created_at,\n                                    };\n                                    xhr_requests[0].oncancel();\n                                } else {\n                                    xhr_requests[0].open(\"POST\", this.account.get('gallery_url') + 'v1/files/upload/', true);\n                                    xhr_requests[0].setRequestHeader(\"Authorization\", 'Bearer ' + this.account.get('gallery_token'));\n                                    xhr_requests[0].is_uploading = true;\n                                    xhr_requests[0].send(xhr_requests[0].formData);\n                                }\n                            } else {\n                                xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                xhr_requests[0].oncancel();\n                            }\n                        }\n                    });\n                });\n            }\n        }\n\n    },\n\n    encryptFile: async function (file) {\n        return await utils.AES.encrypt(file);\n    },\n\n    onFileUploaded: function (message, $message) {\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files = message.get('files'),\n            self = this, is_audio = false,\n            images = [], files_ = [], videos = [];\n        if (!files.length)\n            this.onFileNotUploaded(message, $message)\n        $(files).each((idx, file_) => {\n            let file_new_format = {\n                name: file_.name,\n                type: file_.type,\n                size: file_.size,\n                description: file_.description || '',\n                sources: [file_.url]\n            };\n            file_.key && (file_new_format.key = file_.key);\n            file_.voice && (file_new_format.voice = true);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')){\n                _.extend(file_new_format, { id: file_.id, created: file_.created_at, thumbnail: file_.thumbnail });\n            }\n            if (utils.isImageType(file_.type)) {\n                _.extend(file_new_format, { width: file_.width, height: file_.height });\n                images.push(file_new_format);\n            }\n            else if (utils.isVideoType(file_.type)) {\n                _.extend(file_new_format, { duration: file_.duration});\n                videos.push(file_new_format);\n            }\n            else {\n                _.extend(file_new_format, { duration: file_.duration});\n                files_.push(file_new_format);\n            }\n        });\n        $message.find('.unuploaded-images').remove();\n        $message.find('.unuploaded-file').remove();\n        //  loaded and send image\n        if (images.length > 0) {\n            if (images.length > 1) {\n                let template_for_images;\n                if (images.length > 6) {\n                    let tpl_name = 'template-for-6',\n                        hidden_images = images.length - 5;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                    template_for_images.find('.last-image').addClass('hidden-images');\n                    template_for_images.find('.image-counter').text('+' + hidden_images);\n                }\n                else {\n                    let tpl_name = 'template-for-' + images.length;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + images.length)\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                }\n                if (!xabber.settings.load_media) {\n                    template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n                }\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_images);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            else {\n                let img = this.createImage(images[0]),\n                    img_content = self.createImageContainer(images[0]);\n                img.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(img_content);\n                $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').html(img);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n        }\n        message.set('videos', videos);\n        if (videos.length > 0) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n        if (files_.length > 0) {\n            $message.removeClass('file-upload noselect');\n            $(files_).each((idx, item) => {\n                if (!idx && !images.length){\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').removeClass('chat-file-content');\n                }\n                if (item.type) {\n                    if (item.voice)\n                        is_audio = true;\n                    else\n                        is_audio = false;\n                }\n                let file_attrs = {\n                        name: item.name,\n                        type: item.type,\n                        sources: item.sources\n                    },\n                    template_for_file_content,\n                    mdi_icon_class = utils.file_type_icon(item.type);\n                ((files_.length === 1) && is_audio) && (file_attrs.name = xabber.getString(\"voice_message\"));\n                _.extend(file_attrs, {size: utils.pretty_size(item.size), is_audio: is_audio, duration: utils.pretty_duration(item.duration), mdi_icon: mdi_icon_class});\n                template_for_file_content = is_audio ? $(templates.messages.audio_file(file_attrs)) : $(templates.messages.file(file_attrs));\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                if (is_audio && $message.find('.link-file').length) {\n                    let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                    audio_player.msg_time = $message.attr('data-time');\n                    audio_player.author = $message.find('.chat-msg-author').text();\n                    audio_player.message_unique_id = $message.attr('data-uniqueid');\n                    if (this.model.get('group_chat')) {\n                        if (this.contact.my_info) {\n                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                            if (!audio_player.contact_avatar) {\n                                if (this.account.cached_image)\n                                    audio_player.contact_avatar = this.account.cached_image;\n                                !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                            } else\n                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                        }\n                    }\n                    if (!audio_player.contact_avatar)\n                        audio_player.contact_avatar = this.account.cached_image;\n                    if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                        this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                        xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                    }\n\n                    let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                    $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                    audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                    message.set('msg_player_audios', [audio_player])\n                    xabber.trigger('plyr_player_updated');\n                }\n            });\n        }\n        this.initPopup($message);\n        message.set('images', images);\n        message.set('files', files_);\n        if ((message.get('encrypted') || this.model.get('encrypted')) && message.get('images').length) {\n            this.decryptImages(message);\n        }\n        this.sendMessage(message);\n        this.scrollToBottom();\n    },\n\n    createAudio: function(file_url, $elem) {\n        let audio = WaveSurfer.create({\n            container: $elem[0],\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    createImage: function(image) {\n        let imgContent = new Image(),\n            maxHeight = 400,\n            maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7;\n        if (image.height)\n            imgContent.height = image.height;\n        if (image.width)\n            imgContent.width = image.width;\n        maxWidth = maxWidth > 400 ? 400 : maxWidth;\n        if (xabber.settings.load_media) {\n            imgContent.src = image.sources[0];\n            $(imgContent).addClass('uploaded-img popup-img');\n        } else {\n            $(imgContent).addClass('unloaded-img');\n        }\n        $(imgContent).attr({'data-mfp-src': image.sources[0], title: (image.description || '')});\n        if (imgContent.height && imgContent.width) {\n            if (imgContent.width > maxWidth) {\n                imgContent.height = imgContent.height * (maxWidth/imgContent.width);\n                imgContent.width = maxWidth;\n            }\n            if (imgContent.height > maxHeight) {\n                imgContent.width = imgContent.width * (maxHeight/imgContent.height);\n                imgContent.height = maxHeight;\n            }\n        }\n        return imgContent;\n    },\n\n    createVideo: function(video, idx) {\n        video.pretty_size = utils.pretty_size(video.size)\n        let video_attrs = {video_src: video.sources[0], thumbnail: video.thumbnail, video_id: idx},\n            $video_wrap_template = $(templates.messages.video(video_attrs));\n        return $video_wrap_template;\n    },\n\n    createImageContainer: function() {\n        return $('<div class=\"img-content\"/>')[0];\n    },\n\n    createVideoContainer: function() {\n        return $('<div class=\"video-content\"/>')[0];\n    },\n\n    onFileNotUploaded: function (message, $message, error_text, type, error_type) {\n        let error_message = error_text ? xabber.getString(\"file_upload__error\", [error_text]) : xabber.getString(\"file_upload__error_default\");\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        $message.find('.circle-wrap .mdi-close').unbind( \"click\" );\n        message.set('state', constants.MSG_ERROR);\n        if (type == 'http' || error_type == 'wait'){\n            $message.find('.repeat-upload').one(\"click\",() => {\n                this.startUploadFile(message, $message);\n            });\n        }\n        else {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.bottom.deleteFilesFromMessages([message]);\n            $message.find('.edit-upload').one(\"click\",() => {\n                this.bottom.setEditedMessageAttachments(message, true);\n                this.bottom.setRedactedUploadMessage(message);\n                this.removeMessage($message);\n            });\n            $message.find('.repeat-upload').one(\"click\",() => {\n                message.set('state', constants.MSG_PENDING);\n                $message.find('.upload-error .circle-percent-text').text('0%');\n                $message.find('.mdi-alert-circle').addClass('hidden');\n                $message.find('.mdi-close').removeClass('hidden');\n                $message.find('.upload-error').css({ 'border-color': ''});\n                $message.find('.upload-error').removeClass('upload-error');\n                $message.find('.preloader-path-new').css({ 'stroke-dasharray': '0, 149.825'});\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.startGalleryUploadFile(message, $message);\n                else\n                    this.startUploadFile(message, $message);\n            });\n        }\n    },\n\n    sendChatState: function (state, type) {\n        if (this.model.get('saved') || this.contact && this.contact.get('status') === 'offline')\n            return;\n        clearTimeout(this._chatstate_timeout);\n        clearTimeout(this._chatstate_send_timeout);\n        this.chat_state = false;\n        let stanza = $msg({to: this.model.get('jid'), type: 'chat'}).c(state, {xmlns: Strophe.NS.CHATSTATES});\n        if (this.model.get('encrypted')) {\n            if (this.account.settings.get('encrypted_chatstates'))\n                type = 'encrypted';\n            else\n                return;\n        }\n        type && stanza.c('subtype', {xmlns: Strophe.NS.EXTENDED_CHATSTATES, type: type});\n        (state === 'composing') && (this.chat_state = true);\n        this.account.sendMsg(stanza);\n        if (state === 'composing') {\n            this._chatstate_timeout = setTimeout(() => {\n                this.chat_state = false;\n            }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            this._chatstate_send_timeout = setTimeout(() => {\n                (!this.chat_state && xabber.settings.typing_notifications) && this.sendChatState('paused');\n            }, constants.CHATSTATE_TIMEOUT_PAUSED*2);\n        }\n    },\n\n    onChangedMessageTimestamp: function (message) {\n        let $message = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n            $next_msg = $message.next(),\n            $old_prev_msg = $message.prev();\n        $message.attr({\n            'data-time': message.get('timestamp')\n        });\n        $message.detach();\n        $message.children('.right-side').find('.msg-time').attr({title: pretty_datetime(message.get('time'))}).text(utils.pretty_time(message.get('time')));\n        message.get('user_info') && $message.attr('data-from-id', message.get('user_info').id);\n        this.model.messages.sort();\n        let index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            if ($old_prev_msg.hasClass('chat-day-indicator'))\n                $old_prev_msg.after($message);\n            else\n                $message.prependTo(this.$('.chat-content'));\n        } else {\n            let $prev_msg = this.$('.chat-message').eq(index - 1),\n                is_same_sender = ($message.data('from') === $prev_msg.data('from')),\n                is_same_date = moment($message.data('time')).startOf('day')\n                    .isSame(moment($prev_msg.data('time')).startOf('day'));\n            if (($old_prev_msg.data('from') !== $message.data('from')) && ($next_msg.data('from') === $message.data('from')) && (($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'delivered') || ($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'displayed')))\n                this.showMessageAuthor($next_msg);\n            if ($prev_msg.next().hasClass('chat-day-indicator') && (moment($prev_msg.next().data('time')).format('DD.MM.YY') === moment(message.get('timestamp')).format('DD.MM.YY'))) {\n                $message.insertAfter($prev_msg.next());\n                this.showMessageAuthor($message);\n            }\n            else\n                $message.insertAfter($prev_msg);\n            if (message.get('data_form') || message.get('forwarded_message') || !is_same_date || !is_same_sender || $prev_msg.hasClass('system') || $prev_msg.hasClass('saved-main'))\n                this.showMessageAuthor($message);\n            else\n                this.hideMessageAuthor($message);\n        }\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') > last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n    },\n\n    onChangedReadState: function (message) {\n        let is_unread = message.get('is_unread'),\n            is_synced = message.get('synced_from_server'),\n            is_unread_archived = message.get('is_unread_archived'),\n            is_missed_msg = message.get('missed_msg'),\n            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get(\"unique_id\")}\"]`);\n        if (is_unread) {\n            if (!is_unread_archived && !is_synced && !is_missed_msg)\n                this.model.messages_unread.add(message);\n            $msg.addClass('unread-message');\n            $msg.addClass('unread-message-background');\n            this.model.recountUnread();\n        } else {\n            if ((!is_unread_archived && !is_synced && !is_missed_msg) || this.model.messages_unread.indexOf(message) > -1)\n                this.model.messages_unread.remove(message);\n            $msg.removeClass('unread-message');\n            setTimeout(() => {\n                $msg.removeClass('unread-message-background');\n            }, 1000);\n            this.model.recountUnread();\n            if (!message.get('muted')) {\n                xabber.recountAllMessageCounter();\n            }\n        }\n    },\n\n    onTouchMessage: function (ev) {\n        if (ev.which === 3)\n            return;\n        let $elem = $(ev.target), $msg;\n\n        if ($elem.hasClass('chat-message')) {\n            $msg = $elem;\n        } else {\n            $msg = $elem.parents('.chat-message');\n        }\n        if (window.getSelection() != 0) {\n            utils.clearSelection();\n            $msg.attr('data-no-select-on-mouseup', '1');\n        }\n    },\n\n    onClickLink: function (ev) {\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let files = msg.get('files'),\n            videos = msg.get('videos'),\n            images = msg.get('images'),\n            link_references = msg.get('link_references'),\n            fwd_messages = [],\n            fwd_link_references = [],\n            files_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('images') && fwd_messages.push(message.get('images'));\n                message.get('videos') && fwd_messages.push(message.get('videos'));\n                message.get('link_references') && fwd_link_references.push(message.get('link_references'));\n            });\n        }\n        $(files).each(function(idx, file) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += file.sources[0];\n        });\n        $(images).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(videos).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(link_references).each(function(idx, link_reference) {\n            if (files_links != \"\")\n                files_links += '\\n';\n            files_links += link_reference.url;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, file) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += file.sources[0];\n            });\n        });\n        $(fwd_link_references).each(function (idx, message) {\n            $(message).each(function (i, link_reference) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += link_reference.url;\n            });\n        });\n        utils.copyTextToClipboard(files_links, xabber.getString(\"toast_link_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n\n    onClickLocationLink: function (ev) {\n        ev.preventDefault()\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let locations = msg.get('locations'),\n            fwd_messages = [],\n            location_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('locations') && fwd_messages.push(message.get('locations'));\n            });\n        }\n        $(locations).each(function(idx, location) {\n            location_links += 'geo:' + location.lat + ',' + location.lon;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, object) {\n                if (location_links != \"\")\n                    location_links += '\\n';\n                location_links += 'geo:' + object.lat + ',' + object.lon;\n            });\n        });\n\n        utils.copyTextToClipboard(location_links, xabber.getString(\"toast_location_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n    showParticipantProperties: function (participant_id, options) {\n        options = options || {};\n        let participant = this.contact.participants.get(participant_id);\n        if (!participant) {\n            this.contact.getBlockedParticipants((response) => {\n                _.extend(options, {present: null, subscription: null});\n                if ($(response).find(`query user:contains(${participant_id})`).length)\n                    options.blocked = true;\n                else\n                    options.blocked = false;\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            }, (err) => {\n                _.extend(options, {present: null, subscription: null});\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            });\n            return;\n        }\n        (this.contact.my_info && this.contact.my_info.get('id') === participant_id) && (participant_id = '');\n        this.contact.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.contact.showDetailsRight('all-chats', {type: 'participant'});\n            this.contact.details_view_right.participants.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    onClickMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('file-link-download')) {\n            ev.preventDefault();\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')) || this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')),\n                uri = $elem.attr('href'),\n                file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n            if (file && file.key) {\n                this.model.messages.decryptFile(uri,file.key).then((result) => {\n                    if (result === null)\n                        return;\n                    let download = document.createElement(\"a\");\n                    download.href = result;\n                    download.download = file.name;\n                    download.click();\n                });\n                return;\n            } else\n                xabber.openWindow($elem.attr('href'));\n        }\n        if ($elem.hasClass('msg-delivering-state') || $elem.hasClass('not-decrypted-icon') || $elem.hasClass('not-decrypted-tooltip') || $elem.hasClass('audio-control-panel') || $elem.hasClass('voice-msg-current-time') || $elem.hasClass('voice-msg-total-time')) {\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if (!$elem.hasClass('mdi-link-variant') && !$elem.hasClass('msg-copy-location-content') && !$elem.hasClass('btn-retry-send-message') && !$elem.hasClass('btn-delete-message') && !$elem.hasClass('file-link-download') && !$elem.is('canvas') && !$elem.hasClass('voice-message-volume')) {\n            let $msg = $elem.closest('.chat-message'), msg,\n                $fwd_message = $elem.parents('.fwd-message').first(),\n                is_forwarded = $fwd_message.length > 0,\n                no_select_message = $msg.attr('data-no-select-on-mouseup');\n            $msg.attr('data-no-select-on-mouseup', '');\n\n            if ($elem.hasClass('data-form-field')) {\n                msg = this.model.messages.get($msg.data('uniqueid'));\n                if (msg)\n                    this.model.sendDataForm(msg, $elem.attr('id'));\n                return;\n            }\n\n            if (window.getSelection() != 0) {\n                return;\n            }\n\n            if ($elem.hasClass('collapsed-forwarded-message')) {\n                let msg = this.buildMessageHtml(this.account.forwarded_messages.get($elem.data('uniqueid'))),\n                    expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this});\n                expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n                this.updateMessageInChat(msg, this.account.forwarded_messages.get($elem.data('uniqueid')));\n                this.initPopup(msg);\n                expanded_fwd_message.open(msg);\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-author') || $elem.hasClass('fwd-msg-author')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from'),\n                    from_id = is_forwarded ? $fwd_message.data('fromId') : $msg.data('fromId');\n                if (this.contact && this.contact.get('group_chat')) {\n                    this.bottom.quill.focus();\n                    let caret_position = this.bottom.quill.getSelection(),\n                        participant_attrs = {jid: from_jid, id: from_id, nickname: $elem.text()};\n                    caret_position && (caret_position = caret_position.index);\n                    participant_attrs.position = caret_position || 0;\n                    this.bottom.insertMention(participant_attrs);\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    if (from_jid == from_id)\n                        return;\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact.showDetails();\n                }\n                return;\n            }\n\n            if ($elem.hasClass('circle-avatar')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from');\n                if (this.model.get('group_chat')) {\n                    let member_id = (is_forwarded) ? $fwd_message.attr('data-from-id') : $msg.attr('data-from-id'),\n                        unique_id = (is_forwarded) ? $fwd_message.attr('data-uniqueid') : $msg.attr('data-uniqueid'),\n                        msg = this.model.messages.get(unique_id) || this.account.context_messages.get(unique_id) || this.account.searched_messages.get(unique_id),\n                        user_info = msg && msg.get('user_info');\n                    member_id && this.showParticipantProperties(member_id, user_info);\n                    return;\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact.showDetails();\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mention')) {\n                let member_id = $elem.data('target');\n                if (this.contact.get('group_chat')) {\n                    if (member_id && !this.contact.participants.get(member_id)) {\n                        let participant = this.contact.participants.find(p => p.get('jid') === member_id);\n                        participant && (member_id = participant.get('id'));\n                    }\n                    member_id && this.showParticipantProperties(member_id);\n                }\n                else {\n                    if (member_id === this.account.get('jid'))\n                        this.account.showSettings();\n                    else if (member_id === this.model.get('jid')) {\n                        this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    } else {\n                        let contact = this.account.contacts.mergeContact(member_id);\n                        contact.showDetails();\n                    }\n                }\n                return;\n            }\n\n            if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n                let $audio_elem = $elem.closest('.link-file'),\n                    f_url = $audio_elem.find('.file-link-download').attr('href');\n                $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n                if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                    let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                        uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                        file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                    if (file && file.key) {\n                        this.model.messages.decryptFile(f_url, file.key).then((result) => {\n                            if (result === null)\n                                return;\n                            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                        });\n                    }\n                } else {\n                    $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.play();\n                return;\n            }\n\n            if ($elem.hasClass('mdi-pause') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.pause();\n                return;\n            }\n\n            if ($elem.hasClass('msg-hyperlink')) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.closest(\".msg-hyperlink\").length > 0) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.closest(\".msg-hyperlink\").attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.hasClass('uploaded-img')||$elem.hasClass('img-content')||($elem.hasClass('uploaded-img-for-collage'))) {\n                $elem.hasClass('img-content') && $elem.children('img').click();\n                return;\n            }\n\n            if ($elem.hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        $elem.attr('src',$elem.attr('data-mfp-src'));\n                        $elem.removeClass('unloaded-img');\n                        $elem.addClass('uploaded-img');\n                        this.initPopup($elem.closest('.chat-message'));\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('img-content-template') && $elem.find('img').hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        let $msg = $elem.closest('.chat-message'),\n                            $imgs = $msg.find('.img-content-template img');\n                        $imgs.each((idx, img) => {\n                            $(img).attr('src',$(img).attr('data-mfp-src'));\n                        });\n                        $imgs.removeClass('unloaded-img');\n                        $imgs.addClass('uploaded-img-for-collage');\n                        this.initPopup($msg);\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-location-content') || $elem.hasClass('location-link') || $elem.closest(\".video-file-wrap\").length > 0 || $elem.closest(\".embed-video\").length > 0) {\n                return;\n            }\n\n            if ($elem.hasClass('last-image')) {\n                $elem.find('img').length && $elem.find('img')[0].click();\n                return;\n            }\n\n            if ($elem.hasClass('image-counter')) {\n                $elem.closest('.last-image').find('img')[0].click();\n                return;\n            }\n\n            if ($msg.hasClass('searched-message')) {\n                this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n                return;\n            }\n\n            let processClick = () => {\n                let $prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').last() : $msg.prevAll('.chat-message.selected').first();\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.nextAll('.chat-message.selected').last() : $msg.nextAll('.chat-message.selected').first());\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').first() : $msg.prevAll('.chat-message.selected').last());\n                if ((xabber.shiftctrl_pressed || xabber.shift_pressed) && $prev_selected.length) {\n                    let $all_msgs = [], is_selected = $msg.hasClass('selected');\n                    if ($prev_selected.attr('data-time') < $msg.attr('data-time'))\n                        $all_msgs = $prev_selected.nextUntil($msg, '.chat-message:not(.system)');\n                    else\n                        $all_msgs = $msg.nextUntil($prev_selected, '.chat-message:not(.system)');\n                    xabber.shift_pressed && this.$('.chat-message').removeClass('selected');\n                    $prev_selected.switchClass('selected', !is_selected);\n                    $all_msgs.switchClass('selected', !is_selected);\n                    $msg.switchClass('selected', !is_selected);\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n                if (!no_select_message) {\n                    $msg.switchClass('selected', !$msg.hasClass('selected'));\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n            };\n\n            if ($msg.hasClass('participant-message') || $msg.hasClass('context-message')) {\n                if ($msg.hasClass('system'))\n                    return;\n                processClick();\n                return;\n            }\n\n            msg = this.model.messages.get($msg.data('uniqueid'));\n            if (!msg) {\n                return;\n            }\n\n            let type = msg.get('type');\n            if (type === 'file_upload') {\n                return;\n            }\n\n            if (type === 'system') {\n                return;\n            } else if (is_forwarded) {\n                let fwd_message = this.account.forwarded_messages.get($fwd_message.data('uniqueid'));\n                if (!fwd_message) {\n                    return;\n                }\n                processClick();\n            } else {\n                processClick();\n            }\n        }\n    },\n\n    onClickLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    onHoverLocation: function (ev) {\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat');\n\n        fetch('https://nominatim.openstreetmap.org/reverse?format=json&lon=' + lon + '&lat=' + lat).then(function(response) {\n            return response.json();\n        }).then(function(json) {\n            if (!json.error) {\n                $(ev.target).attr('title', json.display_name);\n            }\n            else {\n                $(ev.target).attr('title', xabber.getString(\"location_fragment__address_error__title\"));\n            }\n            $(ev.target).removeClass('no-title')\n        })\n    },\n\n    retrySendMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message'),\n            msg = this.model.messages.get($msg.data('uniqueid'));\n        if (msg.get('type') === 'file_upload') {\n            msg.set('state', constants.MSG_PENDING);\n            this.startUploadFile(msg, $msg);\n        }\n        else\n            this.sendMessage(msg);\n        ev.preventDefault();\n    },\n\n    removeFileErrorMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message');\n        this.removeMessage($msg);\n        ev.preventDefault();\n        this.chat_item.updateChatError();\n    },\n\n    onUpdatePlyr: function (ev) {\n        this.$('.plyr-video-container').removeClass('active-plyr-container');\n        if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n            let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n            if ($message.length) {\n                $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n            }\n        }\n    },\n});\n\n\nxabber.ChatContentPlaceholderView = xabber.BasicView.extend({\n    className: 'chat-body-content-placeholder-wrap',\n    template: templates.chat_content_placeholder,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        return this;\n    },\n\n    render: function () {\n    },\n});\n\nxabber.ExpandedMessagePanel = xabber.BasicView.extend({\n    className: 'modal expanded-message',\n    template: templates.group_chats.pinned_message_panel,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .collapsed-forwarded-message\": \"expandFwdMessage\",\n        \"click .chat-message\": \"onClickPinnedMessage\",\n        'click .chat-msg-location-content': 'onClickExpandedMessageLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.chat_content = options.chat_content;\n        this.message = options.message;\n    },\n\n    open: function ($message) {\n        this.$el.css('width', $message.find('.chat-text-content').text().length <= 60 ? 540 : xabber.main_panel.$el.width() * 0.715);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.modal-content').css('height', this.$el.height() - 12);\n                if ($message.find('.plyr-video-container').length) {\n                    this.chat_content.initPlyrEmbedPlayer($message, this.message);\n                }\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        $message.find('.right-side .msg-delivering-state').remove();\n        this.$('.modal-content').html($message);\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onClickLink:function (ev) {\n        this.chat_content.onClickLink(ev);\n    },\n\n    onClickPinnedMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('msg-hyperlink')) {\n            ev && ev.preventDefault();\n            let link = $elem.attr('href');\n            utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                if (result)\n                    utils.openWindow(link);\n            });\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.forwarded_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n            let $audio_elem = $elem.closest('.link-file'),\n                f_url = $audio_elem.find('.file-link-download').attr('href');\n            $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n            if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                    uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                    file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                if (file && file.key) {\n                    this.chat_content.model.messages.decryptFile(f_url, file.key).then((result) => {\n                        if (result === null)\n                            return;\n                        $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                    });\n                }\n            } else {\n                $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n            }\n            return;\n        }\n        if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n            let $audio_elem = $elem.closest('.link-file');\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n    },\n    onClickExpandedMessageLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    expandFwdMessage: function (ev) {\n        let $target = $(ev.target),\n            unique_id = $target.data('uniqueid'),\n            msg = this.chat_content.buildMessageHtml(this.account.forwarded_messages.get(unique_id)),\n            expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this.chat_content});\n        expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n        this.chat_content.updateMessageInChat(msg, this.account.forwarded_messages.get(unique_id));\n        this.chat_content.initPopup(msg);\n        expanded_fwd_message.open(msg);\n    }\n});\n\nxabber.ChatsBase = Backbone.Collection.extend({\n    model: xabber.Chat\n});\n\nxabber.Chats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    registerQuillEmbeddedsTags: function () {\n        let Inline = Quill.import('blots/inline'),\n            Image = Quill.import('formats/image');\n\n        class Mention extends Inline {\n            static create(paramValue) {\n                let node = super.create(), data, target;\n                if (paramValue.on_format){\n                    data = paramValue.data;\n                    target = paramValue.target;\n                } else {\n                    data = JSON.parse(paramValue);\n                    target = data.jid ? ('?jid=' + data.jid) : (data.id ?  ('?id=' + data.id) : \"\");\n                    node.innerHTML = data.nickname;\n                }\n                data.is_me && node.classList.add('ground-color-100');\n                node.setAttribute('data-target', target);\n                return node;\n            }\n\n            static value(node) {\n                return node.innerHTML;\n            }\n\n            static formats(node) {\n                return {\n                    on_format: true,\n                    data: {\n                        nickname: node.innerHTML,\n                        is_me: node.classList.contains(\"ground-color-100\")\n                    },\n                    target: node.getAttribute('data-target')\n                };\n            }\n        }\n        Mention.blotName = 'mention';\n        Mention.tagName = 'mention';\n        Mention.prototype.optimize = function () {};\n\n        class QuillEmoji extends Image {\n            static create(value) {\n                if (typeof value == 'string') {\n                    let emoji = $(value.emojify({tag_name: 'img'}))[0];\n                    emoji.style.display = 'none';\n                    emoji.onload = function () {\n                        this.style.display = 'unset';\n                    };\n                    return emoji;\n                } else {\n                    return value;\n                }\n            }\n\n            static value(domNode) {\n                return domNode;\n            }\n        }\n        QuillEmoji.blotName = 'emoji';\n        QuillEmoji.className = 'emoji';\n        QuillEmoji.tagName = 'img';\n        QuillEmoji.prototype.optimize = function () {};\n\n        Quill.register(QuillEmoji);\n        Quill.register(Mention);\n    }\n});\n\nxabber.OpenedChats = xabber.ChatsBase.extend({\n    comparator: function (item1, item2) {\n        let t1 = item1.get('timestamp'),\n            t2 = item2.get('timestamp');\n        return t1 > t2 ? -1 : (t1 < t2 ? 1 : 0);\n    },\n\n    initialize: function (models, options) {\n        this.on(\"change:timestamp\", this.sort, this);\n    },\n\n    update: function (chat, event) {\n        let contains = chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_opened_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_opened_chat\", chat);\n        }\n    }\n});\n\nxabber.ClosedChats = xabber.ChatsBase.extend({\n    update: function (chat, event) {\n        let contains = !chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_closed_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_closed_chat\", chat);\n        }\n    }\n});\n\nxabber.AccountChats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.mam_requests = 0;\n        this.deferred_mam_requests = [];\n        this.account.contacts.on(\"open_chat\", this.openChat, this);\n        this.account.contacts.on(\"open_mention\", this.openMention, this);\n        this.account.contacts.on(\"presence\", this.onPresence, this);\n        this.account.contacts.on(\"roster_push\", this.onRosterPush, this);\n    },\n\n    getSavedChat: function () {\n      let jid = this.account.get('jid'),\n          attrs = {jid: jid, type: 'saved', name: xabber.getString(\"saved_messages__header\"), id: `${jid}:saved`},\n          chat = this.get(attrs.id);\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {account: this.account});\n            this.add(chat);\n            chat.trigger(\"load_last_history\");\n        }\n        return chat;\n    },\n\n    getChat: function (contact, identifier, sync_created) {\n        let attrs = null,\n            id = identifier && `${contact.hash_id}:${identifier}`,\n            chat = id ? this.get(id) : this.get(contact.hash_id);\n        if (id)\n            attrs = {id};\n        if (identifier === 'encrypted')\n            attrs.type = identifier;\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {contact: contact, sync_created: sync_created});\n            this.add(chat);\n            contact.set('known', true);\n        }\n        return chat;\n    },\n\n    openChat: function (contact, options) {\n        options = options || {};\n        _.isUndefined(options.clear_search) && (options.clear_search = true);\n        let chat = this.getChat(contact, options.encrypted && 'encrypted');\n        chat.trigger('open', {clear_search: options.clear_search, right_force_close: options.right_force_close});\n    },\n\n    openMention: function (contact, unique_id) {\n        let chat = this.getChat(contact);\n        xabber.body.setScreen('mentions', {right: 'mentions', chat_item: chat.item_view});\n        unique_id && chat.getMessageContext(unique_id, {mention: true});\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message');\n    },\n\n    onStartedMAMRequest : function (deferred) {\n        this.deferred_mam_requests.push(deferred);\n        this.runMAMRequests();\n    },\n\n    onCompletedMAMRequest: function (deferred) {\n        this.mam_requests--;\n        this.runMAMRequests();\n    },\n\n    runMAMRequests: function () {\n        while (this.mam_requests < xabber.settings.mam_requests_limit) {\n            let deferred = this.deferred_mam_requests.shift();\n            if (!deferred) break;\n            this.mam_requests++;\n            deferred.resolve();\n        }\n    },\n\n    parsePubSubNode: function (node) {\n        if (!node)\n            return null;\n        let is_member_id = node.indexOf('#');\n        if (is_member_id !== -1)\n            return node.slice(is_member_id + 1, node.length);\n        else\n            return null;\n    },\n\n    receivePubsubMessage: function ($message) {\n        let photo_id =  $message.find('info').attr('id'),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if (node.indexOf(Strophe.NS.OMEMO) > -1)\n            return;\n        if (node.indexOf(Strophe.NS.PUBSUB_AVATAR_METADATA) > -1) {\n            let member_id = this.parsePubSubNode(node),\n                photo_url =  $message.find('info').attr('url'),\n                contact = this.account.contacts.get(from_jid);\n            if (contact) {\n                if (member_id) {\n                    if (contact.my_info) {\n                        if ((member_id == contact.my_info.get('id')) && (photo_id == contact.my_info.get('avatar'))) {\n                            contact.trigger('update_my_info');\n                            return;\n                        }\n                    }\n                    if (photo_id && (this.account.chat_settings.getHashAvatar(member_id) != photo_id)) {\n                        let member_node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + member_id;\n                        contact.getAvatar(photo_id, member_node, (new_avatar) => {\n                                this.account.chat_settings.updateCachedAvatars(member_id, photo_id, new_avatar);\n                                if (contact.my_info) {\n                                    if (member_id == contact.my_info.id) {\n                                        contact.my_info.set({avatar: photo_id, b64_avatar: new_avatar});\n                                        contact.trigger('update_my_info');\n                                    }\n                                }\n                                let participant = contact.participants && contact.participants.get(member_id);\n                                if (participant) {\n                                    participant.set({avatar: photo_id, b64_avatar: new_avatar});\n                                    this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                }\n                            }, () => {\n                                if (photo_url) {\n                                    this.account.chat_settings.updateCachedAvatars(member_id, photo_id, photo_url);\n                                    if (contact.my_info) {\n                                        if (member_id == contact.my_info.id) {\n                                            contact.my_info.set({avatar: photo_id, b64_avatar: photo_url});\n                                            contact.trigger('update_my_info');\n                                        }\n                                    }\n                                    let participant = contact.participants && contact.participants.get(member_id);\n                                    if (participant) {\n                                        participant.set({avatar: photo_id, b64_avatar: photo_url});\n                                        this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                    }\n                                    return;\n                                }\n                            });\n                    }\n                }\n                else if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.PUBSUB_AVATAR) {\n                    if (!photo_id) {\n                        let image = Images.getDefaultAvatar(contact.get('name'));\n                        contact.cached_image = Images.getCachedImage(image);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', null);\n                        contact.set('image', image);\n                        contact.updateCachedInfo();\n                        return;\n                    }\n                    if ((photo_id !== \"\") && (contact.get('photo_hash') === photo_id)) {\n                        return;\n                    } else if (photo_url) {\n                        contact.cached_image = photo_url;\n                        contact.set({photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR});\n                    }\n                    contact.getAvatar(photo_id, Strophe.NS.PUBSUB_AVATAR_DATA, (data_avatar) => {\n                        contact.cached_image = Images.getCachedImage(data_avatar);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', photo_id);\n                        contact.set('image', data_avatar);\n                        contact.updateCachedInfo();\n                    });\n                }\n            }\n            else if (from_jid === this.account.get('jid')) {\n                if (photo_url) {\n                    let avatar_attrs = {photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR};\n                    this.account.cached_image = photo_url;\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                if (!photo_id) {\n                    let image = Images.getDefaultAvatar(this.account.get('name'));\n                    this.account.cached_image = Images.getCachedImage(image);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: image};\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                this.account.getAvatar(photo_id, (data_avatar) => {\n                    this.account.cached_image = Images.getCachedImage(data_avatar);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: data_avatar};\n                    this.account.save(avatar_attrs);\n                });\n            }\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type'),\n            $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n        if (this.account.connection.do_synchronization && Strophe.getBareJidFromJid($(message).attr('from')) !== this.account.get('jid')) {\n            let time = $message.children('time').attr('stamp') || $message.children('delay').attr('stamp'),\n                timestamp = Number(moment(time));\n            (timestamp > this.account.last_msg_timestamp) && (this.account.last_msg_timestamp = timestamp);\n        }\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n        if (type === 'chat' || (type === 'normal') || (!type && !$mam.length)) {\n            return this.receiveChatMessage(message);\n        }\n        if (type === 'error') {\n            return this.receiveErrorMessage(message);\n        }\n    },\n\n    receiveHeadlineMessage: function (message) {\n        let $message = $(message),\n            msg_from = Strophe.getBareJidFromJid($message.attr('from')),\n            $stanza_received = $message.find(`received[xmlns=\"${Strophe.NS.DELIVERY}\"]`),\n            $echo_msg = $message.children(`x[xmlns=\"${Strophe.NS.DELIVERY}\"]`).children('message');\n        if ($stanza_received.length) {\n            let stanza_id = $stanza_received.children('stanza-id').attr('id'),\n                origin_msg_id = $stanza_received.children('origin-id').first().attr('id');\n            if (origin_msg_id) {\n                let msg = this.account.messages.get(origin_msg_id || stanza_id),\n                    delivered_time = $stanza_received.children('time').attr('stamp') || moment(stanza_id/1000).format();\n                if (!msg)\n                    return;\n                let pending_message = this.account._pending_messages.find(msg => msg.unique_id == (origin_msg_id || stanza_id));\n                if (!pending_message)\n                    return;\n                let chat = this.account.chats.get(pending_message.chat_hash_id);\n                if (chat && chat.get('group_chat'))\n                    return;\n                if (!msg.get('stanza_id') && msg.get('locations'))\n                    msg.set({'stanza_id': stanza_id})\n                msg.set({'state': constants.MSG_SENT, 'time': delivered_time, 'timestamp': Number(moment(delivered_time))}); // delivery receipt, changing on server time\n                chat.setStanzaId(pending_message.unique_id, stanza_id);\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            return;\n        }\n\n        if ($echo_msg.length) {\n            console.log(this.account._pending_messages);\n            console.log(this.account._pending_messages.length);\n            let origin_msg_id = $echo_msg.children('origin-id').first().attr('id'),\n                pending_message = this.account._pending_messages.find(msg => msg.unique_id == origin_msg_id);\n            if (pending_message) {\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            console.log(this.account._pending_messages.length);\n            return this.receiveChatMessage($echo_msg[0], {echo_msg: true, stanza_id: $echo_msg.children('stanza-id').attr('id')});\n        }\n\n        let $token_revoke = $message.children(`revoke[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n        if ($token_revoke.length) {\n            $token_revoke.children('device').each((idx, token) => {\n                let $token = $(token),\n                    token_uid = $token.attr('id');\n                if (!token_uid)\n                    return;\n                if (this.account.get('x_token') && this.account.get('x_token').token_uid === token_uid) {\n                    this.account.deleteAccount();\n                    return;\n                }\n                if (this.account.x_tokens_list) {\n                    let token = this.account.x_tokens_list.find(token => token.token_uid == token_uid),\n                        token_idx = token ? this.account.x_tokens_list.indexOf(token) : -1;\n                    (token_idx > -1) && this.account.x_tokens_list.splice(token_idx, 1);\n                }\n            });\n            this.account.settings_right && this.account.settings_right.updateXTokens();\n            return;\n        }\n\n        if ($message.find(`event[xmlns=\"${Strophe.NS.PUBSUB}#event\"]`).length) {\n            this.receivePubsubMessage($message);\n            return;\n        }\n\n        let contact = this.account.contacts.get(msg_from), chat;\n        if (contact) {\n            contact && (chat = this.account.chats.getChat(contact));\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version)\n                contact.trigger('update_participants');\n        }\n\n        if ($message.children(`attention[xmlns=\"${Strophe.NS.ATTENTION}\"]`).length && xabber.settings.call_attention) {\n            if (!chat)\n                return;\n            return chat.messages.createSystemMessage({from_jid: msg_from, message: xabber.getString(\"action_attention_requested\"), attention: true});\n        }\n\n        if ($message.find(`replace[xmlns=\"${Strophe.NS.REWRITE}#notify\"]`).length) {\n            !contact && (contact = this.account.contacts.get($message.find('replace').attr('conversation'))) && (chat = this.account.chats.getChat(contact));\n            if ($message.find('replace').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let stanza_id = $message.find('replace').attr('id'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id),\n                active_right_screen = xabber.body.screen.get('right'),\n                participant_messages = active_right_screen === 'participant_messages' && this.account.participant_messages || active_right_screen === 'message_context' && this.account.context_messages || active_right_screen === 'searched_messages' && this.account.searched_messages || [],\n                participant_msg_item = participant_messages.find(msg => msg.get('stanza_id') == stanza_id);\n            this.receiveChatMessage($message, {replaced: true});\n            if (participant_msg_item) {\n                participant_msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n            }\n            if (msg_item) {\n                msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n                if (contact && contact.get('pinned_message'))\n                    if (contact.get('pinned_message').get('unique_id') === msg_item.get('unique_id')) {\n                        contact.get('pinned_message').set('message', msg_item.get('message'));\n                        if (!chat.item_view.content)\n                            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                        chat.item_view.content.updatePinnedMessage();\n                    }\n                chat && chat.item_view.updateLastMessage(chat.last_message);\n            }\n        }\n        if ($message.find('retract-message').length) {\n            let is_encrypted = $message.find('retract-message').attr('type') == Strophe.NS.OMEMO;\n            !contact && (contact = this.account.contacts.get($message.find('retract-message').attr('conversation'))) && (chat = this.account.chats.getChat(contact,  is_encrypted && 'encrypted'));\n            if ($message.find('retract-message').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let $retracted_msg = $message.find('retract-message'),\n                retracted_msg_id = $retracted_msg.attr('id'),\n                retract_version = $retracted_msg.attr('version'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == retracted_msg_id || msg.get('contact_stanza_id') == retracted_msg_id);\n            chat.retracted_msg_id_list.push(retracted_msg_id);\n            if (msg_item) {\n                msg_item.set('is_unread', false);\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(msg_item);\n                chat.item_view.updateLastMessage(chat.last_message);\n            }\n            if (!chat.get('group_chat') && retract_version > this.account.retraction_version) {\n                this.account.retraction_version = retract_version;\n            }\n        }\n        if ($message.find('retract-user').length) {\n            let $retracted_user_msgs = $message.find('retract-user'),\n                retracted_user_id = $retracted_user_msgs.attr('id'),\n                msg_item = chat.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == retracted_user_id));\n            if (msg_item)\n                $(msg_item).each((idx, item) => {\n                    item.set('is_unread', false);\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.removeMessage(item);\n                });\n            chat.item_view.updateLastMessage(chat.last_message);\n        }\n        if ($message.find('retract-all').length) {\n            !contact && (contact = this.account.contacts.get($message.find('retract-all').attr('conversation'))) && (chat = this.getChat(contact, $message.find('retract-all').attr('type') == 'encrypted' && 'encrypted'));\n            if (!chat)\n                return;\n            let all_messages = chat.messages.models;\n            $(all_messages).each((idx, item) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(item);\n            });\n            chat.item_view.updateLastMessage();\n        }\n        if ($message.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`).length) {\n            let code =  $message.find('confirm').attr('id');\n            if (($message.attr('from') == this.account.xabber_auth.api_jid) && ($message.attr('id') == this.account.xabber_auth.request_id)) {\n                this.account.verifyXabberAccount(code, (data) => {\n                    if (xabber.api_account && this.account.get('auto_login_xa')) {\n                        xabber.api_account.save('token', data);\n                        xabber.api_account.login_by_token();\n                    }\n                });\n            }\n            else {\n                return this.receiveChatMessage(message);\n            }\n        }\n        return;\n    },\n\n    receiveStanzaId: function ($message, options) {\n        options.replaced && ($message = $message.children('replace').children('message'));\n        let $stanza_id, $contact_stanza_id, attrs = {},\n            from_bare_jid = options.from_bare_jid;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n            stanza_id = $(stanza_id);\n            if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && !($message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE_HTTP}\"]`).length || $message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE}\"]`).length)) {\n                if (stanza_id.attr('by') === from_bare_jid) {\n                    $stanza_id = stanza_id;\n                    $contact_stanza_id = stanza_id;\n                }\n                else\n                    $stanza_id = stanza_id;\n            }\n            else {\n                if (stanza_id.attr('by') === this.account.get('jid'))\n                    $stanza_id = stanza_id;\n                else\n                    $contact_stanza_id = stanza_id;\n            }\n        });\n        $stanza_id && (attrs.stanza_id = $stanza_id.attr('id'));\n        $contact_stanza_id && (attrs.contact_stanza_id = $contact_stanza_id.attr('id'));\n        return attrs;\n    },\n\n    receiveChatMessage: function (message, options) {\n        options = options || {};\n        let $message = $(message),\n            $forwarded = $message.find('forwarded'),\n            $delay = options.delay,\n            to_jid = $message.attr('to'),\n            to_bare_jid = Strophe.getBareJidFromJid(to_jid),\n            to_resource = to_jid && Strophe.getResourceFromJid(to_jid),\n            from_jid = $message.attr('from') || options.from_jid;\n\n        if ($message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && !options.forwarded) {\n            if (this.account.omemo)\n                this.account.omemo.receiveChatMessage(message, options);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (options.forwarded)\n                return;\n        }\n\n        if (!from_jid) {\n            from_jid = this.account.get('jid');\n        }\n        let from_bare_jid = Strophe.getBareJidFromJid(from_jid),\n            is_sender = from_bare_jid === this.account.get('jid');\n\n        if (options.forwarded && (!$forwarded.length || (options.xml))) {\n            return this.account.forwarded_messages.createFromStanza($message, {\n                is_forwarded: true,\n                forwarded_message: options.forwarded_message || null,\n                delay: $delay,\n                replaced: options.replaced,\n                from_jid: from_jid,\n                xml: options.xml\n            });\n        }\n\n        if ($forwarded.length && !options.xml) {\n            let $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n            if ($mam.length) {\n                if (!Object.keys(options).length)\n                    return;\n                $forwarded = $mam.children('forwarded');\n                if ($forwarded.length) {\n                    $message = $forwarded.children('message');\n                    $delay = $forwarded.children('delay');\n                }\n                let stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid});\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    is_mam: true,\n                    delay: $delay,\n                    stanza_id: stanza_ids.stanza_id || $mam.attr('id'),\n                    contact_stanza_id: stanza_ids.contact_stanza_id\n                }));\n            }\n            let $carbons = $message.find(`[xmlns=\"${Strophe.NS.CARBONS}\"]`);\n            if (!options.carbon_copied && $carbons.length && ['received', 'sent'].includes($carbons[0].tagName)) {\n                if ($message.find('invite').length) {\n                    if ($carbons[0].tagName === 'sent')\n                        return;\n                }\n                if (!is_sender)\n                    return;\n                $forwarded = $carbons.children('forwarded');\n                if ($forwarded.length)\n                    $message = $forwarded.children('message');\n                if ($carbons.find(`request[xmlns=\"${Strophe.NS.DELIVERY}\"][to=\"${to_bare_jid}\"]`).length)\n                    return;\n                if (this.account.fast_connection && ($message.attr('from') === this.account.fast_connection.jid))\n                    return;\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    carbon_copied: true, carbon_direction: $carbons[0].tagName\n                }));\n            }\n            let forwarded_msgs = [];\n            $forwarded = $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n                $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]') :\n                $message.children('envelope').children('content').children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]');\n            $forwarded.each((idx, forwarded_msg) => {\n                let $forwarded_msg = $(forwarded_msg),\n                    $forwarded_message = $forwarded_msg.children('message'),\n                    $forwarded_delay = $forwarded_msg.children('delay');\n                let forwarded_message = this.receiveChatMessage($forwarded_message[0], {\n                    forwarded: true,\n                    pinned_message: options.pinned_message,\n                    participant_message: options.participant_message,\n                    searched_message: options.searched_message,\n                    is_searched: options.is_searched,\n                    context_message: options.context_message,\n                    from_jid: from_jid,\n                    delay: $forwarded_delay\n                });\n                forwarded_msgs.push(forwarded_message);\n            });\n            if (!Object.keys(options).length && !forwarded_msgs.length)\n                return;\n            return this.receiveChatMessage($message[0], _.extend({\n                forwarded_message: forwarded_msgs.length ? forwarded_msgs : null,\n                xml: $message[0]\n            }, options));\n        }\n\n        if (!options.is_mam && to_resource && to_resource !== this.account.resource) {\n            xabber.warn('Message to another resource');\n            xabber.warn(message);\n        }\n\n        let contact_jid = is_sender ? to_bare_jid : from_bare_jid;\n        options.replaced && (contact_jid = $message.children('replace').attr('conversation'));\n\n        if (contact_jid === this.account.get('jid')) {\n            if (options.carbon_copied && options.carbon_direction === 'sent' || !options.carbon_copied) {\n                let chat = this.getSavedChat(),\n                    stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n                return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n            } else {\n                xabber.warn('Message from me to me');\n                xabber.warn(message);\n                return;\n            }\n        }\n\n        let contact = this.account.contacts.mergeContact(contact_jid),\n            chat = this.account.chats.getChat(contact, (options.encrypted || options.not_encrypted) && 'encrypted'),\n            stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version){\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && chat.contact.get('pinned_message')){\n                    $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '#system-message\"]').each((idx, x_elem) => {\n                        let $user = $(x_elem).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                        if ($user.length) {\n                            let user_id = $user.attr('id'),\n                                user_jid = $user.children('jid').text();\n                            if (chat.contact.get('pinned_message').get('from_jid') === user_jid) {\n                                let pinned_message = chat.contact.get('pinned_message'),\n                                    user_info = {\n                                        id: user_id,\n                                        jid: user_jid,\n                                        nickname: $user.children('nickname').text() || user_jid || user_id,\n                                        role: $user.children('role').text(),\n                                        avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                                        avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                                        badge: $user.children('badge').text()\n                                    };\n                                pinned_message.set('user_info', user_info);\n                                chat.contact.set('pinned_message', pinned_message);\n                            }\n                        }\n                    });\n                }\n                if (contact.details_view && contact.details_view.isVisible())\n                    contact.trigger('update_participants');\n            }\n        }\n        if (chat.contact.get('group_chat') && options.carbon_direction === 'sent' && !$message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`).length)\n            return;\n\n        return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n    },\n\n    receiveErrorMessage: function (message) {\n        let msgid = message.getAttribute('id'),\n            origin_id = $(message).children('origin-id').attr('id');\n        if (msgid) {\n            let code = $(message).find('error').attr('code'),\n                msg = this.account.messages.get(origin_id || msgid);\n            if (msg) {\n                if (code === '405') {\n                    msg.set('state', constants.MSG_BLOCKED);\n                }\n                if (code === '406') {\n                    msg.set('state', constants.MSG_ERROR);\n                }\n            }\n        }\n    },\n\n    onPresence: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onPresence(type);\n    },\n\n    onRosterPush: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onRosterPush(type);\n    }\n});\n\nxabber.AddGroupChatView = xabber.SearchView.extend({\n    className: 'modal main-modal add-group-chat-modal add-contact-modal',\n    template: templates.group_chats.add_group_chat,\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_ITEM,\n    ps_selector: '.rich-textarea',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .dropdown-content#select-account-for-creating-groupchat\": \"selectAccount\",\n        \"click .btn-add\": \"addGroupChat\",\n        \"keyup .input-group-chat-name input\": \"updateGroupJid\",\n        \"keyup .rich-textarea\": \"showPlaceholder\",\n        \"keyup .input-group-chat-jid input\": \"fixJid\",\n        \"click .btn-cancel\": \"close\",\n        \"click .property-variant\": \"changePropertyValue\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        this.setDefaultSettings(options);\n        let accounts = options.account ? [options.account] : xabber.accounts.connected;\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-creating-groupchat').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-creating-groupchat').append(\n                    this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$el.openModal({\n            ready: () => {\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown(dropdown_settings);\n                this.$('.property-field .dropdown-button').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n                this.$('input[name=\"chat_name\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    setDefaultSettings: function (options) {\n        this.$('.incognito-field .public-item-wrap').showIf(options.public);\n        this.$('.incognito-field .incognito-item-wrap').showIf(options.incognito);\n        if (options.public)\n            this.$('.modal-header span').text(xabber.getString(\"create_group\"));\n        if (options.incognito)\n            this.$('.modal-header span').text(xabber.getString(\"create_incognito_group\"));\n        this.$('input[name=chat_jid]').removeClass('fixed-jid').val(\"\");\n        this.$('#new_chat_domain').val(\"\");\n        this.$('input[name=chat_name]').val(\"\");\n        this.$('.description-field .rich-textarea').text(\"\");\n        this.$('.btn-add').addClass('non-active');\n        this.showPlaceholder();\n        this.$('span.errors').text('').addClass('hidden');\n        this.$('input').removeClass('invalid');\n        let $global_wrap = this.$('.global-dropdown-wrap'),\n            default_global_value = $global_wrap.find('.dropdown-content .default-value');\n        $global_wrap.find('.global-item-wrap .property-value').attr('data-value', default_global_value.attr('data-value')).text(default_global_value.text());\n        let $membership_wrap = this.$('.membership-dropdown-wrap'),\n            default_membership_value = $membership_wrap.find('.dropdown-content .default-value');\n        $membership_wrap.find('.membership-item-wrap .property-value').attr('data-value', default_membership_value.attr('data-value')).text(default_membership_value.text());\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.input-group-chat-domain').addClass('hidden');\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n                .replaceWith(this.renderAccountItem(account));\n        let all_servers = this.account.get('groupchat_servers_list');\n        all_servers = all_servers.sort((x,y) => { return x == this.account.domain ? -1 : y == this.account.domain ? 1 : 0; })\n        if (all_servers.length){\n            this.$('.xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n            this.$('.select-xmpp-server .caret').removeClass('hidden')\n            this.$('.xmpp-server-item-wrap .property-value').removeClass('hidden')\n        }\n        else\n            this.setCustomDomain(this.$('.property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.modal-content .jid-field .set-default-domain').remove();\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'}).text(all_servers[i]).insertBefore(this.$('.modal-content .jid-field .set-custom-domain'));\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_chat_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    setCustomDomain: function ($property_value) {\n        this.$('#new_chat_domain').val(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomain($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.input-group-chat-domain').addClass('hidden');\n            this.$('#new_chat_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden')\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateGroupJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        if (!elem.hasClass('fixed-jid')) {\n            let text = slug(this.$('.input-group-chat-name input').get(0).value, {lower: true});\n            this.$(\"label[for=new_chat_jid]\").addClass('active');\n            this.$('.input-field #new_chat_jid').get(0).value = text;\n        }\n        this.$('.btn-add').switchClass('non-active', !this.$('.input-group-chat-name input').get(0).value);\n    },\n\n    showPlaceholder: function () {\n        let textarea_is_empty = (this.$('.rich-textarea ').text() !== \"\") ? false : true;\n        this.$('.rich-textarea-wrap .placeholder').hideIf(!textarea_is_empty);\n    },\n\n    fixJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        !elem.hasClass('fixed-jid') && elem.addClass('fixed-jid');\n        (elem.get(0).value == \"\") && elem.removeClass('fixed-jid');\n    },\n\n    createGroupChat: function () {\n        let name = this.$('input[name=chat_name]').val(),\n            chat_jid = this.$('input[name=chat_jid]').val() ? this.$('input[name=chat_jid]').val() : undefined,\n            privacy = this.$('.incognito-field .property-wrap:not(.hidden) .property-value').attr('data-value'),\n            domain = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            searchable = this.$('input[name=\"group_index\"]:checked').attr('data-value'),\n            description = this.$('.description-field .rich-textarea').text() || \"\",\n            model = this.$('input[name=\"group_membership\"]:checked').attr('data-value'),\n            iq = $iq({type: 'set', to: domain}).c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#create'})\n                .c('name').t(name).up()\n                .c('privacy').t(privacy).up()\n                .c('index').t(searchable).up()\n                .c('description').t(description).up()\n                .c('membership').t(model).up();\n            if (chat_jid)\n                iq.c('localpart').t(chat_jid);\n        this.account.sendIQFast(iq, (iq) => {\n            let group_jid = $(iq).find('query localpart').text().trim() + '@' + $(iq).attr('from').trim(),\n                contact = this.account.contacts.mergeContact(group_jid);\n            contact.set('group_chat', true);\n            contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            this.close();\n            xabber.chats_view.updateScreenAllChats();\n            contact.trigger(\"open_chat\", contact);\n            if (!(this.account.connection && this.account.connection.do_synchronization)) {\n                let iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n                    .c('item', {jid: group_jid + '/' + moment.now()});\n                this.account.sendIQFast(iq_set_blocking);\n            }\n\n        }, () => {\n            this.$('span.errors').removeClass('hidden').text(xabber.getString(\"groupchat_jid_already_exists\"));\n            this.$('input[name=\"chat_jid\"]').addClass('invalid');\n        });\n    },\n\n    addGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            $(ev.target).blur();\n            return;\n        }\n        let xmpp_server = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            input_value = this.$('input[name=chat_jid]').val();\n        if (this.$('input[name=chat_name]').val() == \"\") {\n            this.$('span.errors').text(xabber.getString(\"group_is_empty\")).removeClass('hidden');\n            this.$('input[name=\"chat_name\"]').addClass('invalid');\n        } else {\n            if ((input_value == \"\")||((input_value.search(/[А-яЁё]/) == -1)&&(input_value.search(/\\s/) == -1)&&(input_value != \"\"))) {\n                this.$('span.errors').text('').addClass('hidden');\n                this.$('input').removeClass('invalid');\n                let iq = $iq({type: 'get', to: xmpp_server}).c('query', {xmlns: Strophe.NS.DISCO_INFO}),\n                    group_chats_support;\n                this.account.sendIQFast(iq, (iq) => {\n                    $(iq).children('query').children('feature').each((elem, item) => {\n                        if ($(item).attr('var') == Strophe.NS.GROUP_CHAT)\n                            group_chats_support = true;\n                    });\n                    if (group_chats_support)\n                        this.createGroupChat();\n                    else {\n                        this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_server_does_not_support\")}`);\n                        this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                    }\n                }, (response) => {\n                    this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_invalid_domain\")}`); // !!!!!!!!!!!!!!!!!! :::::\n                    this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                });\n            }\n            else {\n                this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_localpart_invalid\")}`);\n                this.$('input[name=\"chat_jid\"]').addClass('invalid');\n            }\n        }\n    }\n});\n\nxabber.ChatsView = xabber.SearchPanelView.extend({\n    className: 'recent-chats-container container',\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    main_container: '.chat-list',\n    template: templates.chats_panel,\n\n    _initialize: function () {\n        this.active_chat = null;\n        this.model.on(\"add\", this.onChatAdded, this);\n        this.model.on(\"destroy\", this.onChatRemoved, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"add_opened_chat\", this.onChangedActiveStatus, this);\n        this.model.on(\"change:unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:const_unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:timestamp\", this.updateChatPosition, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('.read-all-button').click(this.readAllMessages.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onWindowResized, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (options.right === undefined)\n            this.active_chat = null;\n        this.$('.chat-list-wrap').switchClass('with-padding', xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').length);\n        if (options.right !== 'chat' && options.right !== 'contact_details' && !options.no_unread && options.right !== 'searched_messages' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search) {\n            this.clearSearch();\n            if (xabber.toolbar_view.$('.active').hasClass('all-chats') && !xabber.toolbar_view.data.get('account_filtering')) {\n                this.showAllChats();\n            }\n        }\n    },\n\n    readAllMessages: function () {\n        let chats = this.model,\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (active_toolbar.hasClass('chats')) {\n            let private_chats = chats.filter(chat => chat.get('saved') || !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            private_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('all-chats')) {\n            let all_chats = chats.filter(chat => chat.get('saved') || chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            all_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('group-chats')) {\n            let group_chats = chats.filter(chat => chat.get('saved') || chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            group_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onUpdatedScreen: function (name) {\n        this.$('.read-all-button').switchClass('hidden', !xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo).active.unread').length);\n    },\n\n    // onWindowResized: function (options) {\n    //     options.size_changed && this.onScroll();\n    // },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        // if (ev.originalEvent.deltaY > 0)\n        //     this.onScroll();\n    },\n\n    hideChatsFeedback: function () {\n        clearTimeout(this._load_chats_timeout);\n        this.$('.load-chats-feedback').addClass('hidden');\n        this.updateScrollBar();\n        this._load_chats_timeout = null;\n    },\n\n    // onScroll: function () {\n    //     if (this.getScrollBottom() < 12 && !this._load_chats_timeout && this.isVisible()) {\n    //         this._load_chats_timeout = setTimeout(() => {\n    //             this.hideChatsFeedback();\n    //         }, 5000);\n    //         let accounts = xabber.accounts.connected.filter(account => !account.roster.conversations_loaded && account.connection && account.connection.do_synchronization);\n    //         if (accounts.length) {\n    //             this.$('.load-chats-feedback').text(xabber.getString(\"placeholder_loading\")).removeClass('hidden');\n    //             this.updateScrollBar();\n    //         }\n    //         accounts.forEach((account) => {\n    //             let options = {max: xabber.settings.mam_messages_limit};\n    //             account.roster.last_chat_msg_id && (options.after = account.roster.last_chat_msg_id);\n    //             account.roster.syncFromServer(options);\n    //         });\n    //     }\n    // },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    onChatAdded: function (chat) {\n        this.addChild(chat.id, chat.item_view);\n        this.updateChatPosition(chat);\n    },\n\n    onChatRemoved: function (chat, options) {\n        if (this.active_chat === this.child(chat.id)) {\n            this.active_chat = null;\n            xabber.body.setScreen(null, {chat_item: null, right: undefined},\n                    {silent: !xabber.body.isScreen('all-chats')});\n        }\n        this.removeChild(chat.id, options);\n        this.updateScrollBar();\n    },\n\n    onChangedActiveStatus: function (chat) {\n        if (chat.get('active')) {\n            let previous_chat = this.active_chat;\n            this.active_chat = this.child(chat.id);\n            previous_chat && previous_chat.model.set('active', false);\n        }\n    },\n\n    onChangedReadStatus: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (!active_toolbar.hasClass('unread') || (active_toolbar.hasClass('unread') && (item.get('unread') || item.get('const_unread'))))\n            return;\n        view.detach();\n        if (!this.$('.chat-item').length && active_toolbar.hasClass('unread')) {\n            active_toolbar.click();\n        }\n    },\n\n    replaceChatItem: function (item, chats, pinned_chats) {\n        let view = this.child(item.id);\n        if (view && item.get('pinned') && item.get('pinned') !== '0' && pinned_chats ){\n            pinned_chats = pinned_chats.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            let index = pinned_chats.indexOf(item);\n            if (index === 0) {\n                this.$('.pinned-chat-list').prepend(view.$el);\n            } else {\n                let $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                while (!$chat_item.length && index > 0) {\n                    index--;\n                    $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                }\n                $chat_item.after(view.$el);\n            }\n        }\n        else if (view && (item.get('timestamp') || item.get('saved'))) {\n            view.$el.detach();\n            let index = chats.indexOf(item);\n            if (index === 0) {\n                this.$('.chat-list').prepend(view.$el);\n            } else {\n                this.$('.chat-list .chat-item').eq(index - 1).after(view.$el);\n            }\n        }\n    },\n\n    updateChatPosition: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (active_toolbar.hasClass('unread') && !(item.get('unread') || item.get('const_unread')))\n            return;\n        if (active_toolbar.hasClass('account-item') && view.account.get('jid') !== active_toolbar.attr('data-jid')){\n            return;\n        }\n        active_toolbar.hasClass('group-chats') && (view.model.get('saved') || view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('chats') && (view.model.get('saved') || !view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        (active_toolbar.hasClass('all-chats') || active_toolbar.hasClass('settings-modal') || (xabber.accounts.enabled.length === 1 && active_toolbar.hasClass('saved-chats'))) && (view.model.get('saved') || !view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('archive-chats') && (view.model.get('saved') || view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved') || chat.get('archived')));\n        active_toolbar.hasClass('saved-chats') && (xabber.accounts.enabled.length !== 1) && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved'))));\n        active_toolbar.hasClass('mentions') && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => (chat.get('jid') === chat.account.domain))));\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = this.child(selection.data('id'));\n                view && view.open();\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.getChat(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')));\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            view = this.child(selection.data('id'));\n            view && view.open();\n        }\n    },\n\n    openChat: function (view, options) {\n        if (!view.content)\n            view.content = new xabber.ChatContentView({chat_item: view});\n        options = options || {};\n        this.$('.list-item.active').removeClass('active');\n        view.updateActiveStatus();\n        let scrolled_top = xabber.chats_view.getScrollTop();\n        options.clear_search && this.clearSearch();\n        if (view.contact && !view.contact.get('in_roster') && (view.model.get('is_accepted') == false)) {\n            view.model.set('display', true);\n            view.model.set('active', true);\n            xabber.body.setScreen('all-chats', {right: 'group_invitation', contact: view.contact });\n        }\n        else {\n            if (xabber.toolbar_view.$('.active').hasClass('contacts'))\n                this.updateScreenAllChats();\n            if (!view.model.get('history_loaded')) {\n                if (\n                    (view.model.get('const_unread') || view.model.get('unread'))\n                    && view.model.get('last_read_msg') &&\n                    (!view.content._prev_scrolltop || (view.content._prev_scrolltop && view.content._is_scrolled_bottom) || (view.model.get('show_new_unread') === true))\n                    && !view.model.get('loading_unread_history') && !options.force_bottom && xabber.body.screen.get('chat_item') !== view\n                ){\n                    view.model.set('show_new_unread', false);\n                    view.model._wait_load_unread_history = new $.Deferred();\n                    view.content._no_scrolling_event = true;\n                    view.content.loadUnreadHistory();\n                } else if (view.model.messages.length < 20)\n                    view.content.loadPreviousHistory();\n            }\n            if (!options.right_force_close && (\n                xabber.body.screen.get('right_contact') && (xabber.body.screen.get('right') === 'chat' || xabber.body.screen.get('right') === 'message_context' )\n            )) {\n                if (view.model.get('saved'))\n                    xabber.body.setScreen((options.screen || 'all-chats'), {right_contact: ''});\n                else if(xabber.right_contact_panel_saveable)\n                    view.contact.showDetailsRight('all-chats', {right_saved: true, encrypted: view.model.get('encrypted')});\n                else\n                    view.contact.showDetailsRight('all-chats', {right_saved: false});\n            }\n            if (!view.model.get('loading_unread_history')){\n                let current_scrolling = view.content.getScrollTop() || view.content._scrolltop;\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                view.content.scrollTo(current_scrolling);\n            } else {\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    show_placeholder: true,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                view.model.set('active', true);\n                view.model._wait_load_unread_history.done(() => {\n                    if (xabber.body.screen.get('chat_item') === view) {\n                        view.model.set('loading_unread_history', false)\n                        xabber.body.setScreen((options.screen || 'all-chats'), {\n                            right: 'chat',\n                            clear_search: options.clear_search,\n                            chat_item: view,\n                            blocked: view.model.get('blocked')\n                        },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                        view.content.scrollToUnread();\n                        view.content._long_reading_timeout = true;\n                        view.content._no_scrolling_event = false;\n                        view.content.onScroll();\n                        if (options.scroll_to_chat) {\n                            xabber.chats_view.scrollToChild(view.$el);\n                        } else {\n                            xabber.chats_view.scrollTo(scrolled_top);\n                        }\n                    }\n                });\n            }\n            if (view.contact && (!view.contact.get('vcard_updated') || (view.contact.get('group_chat') && !view.contact.get('group_info')) || (view.contact.get('vcard_updated') && !moment(view.contact.get('vcard_updated')).startOf('hour').isSame(moment().startOf('hour'))))) {\n                view.contact.getVCard();\n            }\n        }\n        if (options.scroll_to_chat) {\n            xabber.chats_view.scrollToChild(view.$el);\n        } else {\n            xabber.chats_view.scrollTo(scrolled_top);\n        }\n    },\n\n    showGroupChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            group_chats = [],\n            group_chats_pinned = [];\n        if (is_unread) {\n            group_chats = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!group_chats.length && !group_chats_pinned.length) {\n            group_chats = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        group_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (group_chats_pinned) {\n            group_chats_pinned = group_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            group_chats_pinned.forEach((chat) => {\n                let index = group_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            private_chats = [],\n            private_chats_pinned = [];\n        if (is_unread) {\n            private_chats = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!private_chats.length && !private_chats_pinned.length) {\n            private_chats = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        private_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (private_chats_pinned) {\n            private_chats_pinned = private_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            private_chats_pinned.forEach((chat) => {\n                let index = private_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChatsByAccount: function (account) {\n        xabber.body.setScreen('all-chats');\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            account_chats = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && (chat.get('pinned') === '0' || !chat.get('pinned'))),\n            account_chats_pinned = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        this.$(`.omemo-item:not([data-id=\"${account.get('jid')}\"])`).addClass('hidden');\n        account_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (account_chats_pinned) {\n            account_chats_pinned = account_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            account_chats_pinned.forEach((chat) => {\n                let index = account_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showArchiveChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            archive_chats = chats.filter(chat => !chat.get('saved') && chat.get('archived'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            archive_chats = archive_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        archive_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showSavedChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            saved_chats = chats.filter(chat => chat.get('saved'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            saved_chats = saved_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        saved_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n            this.$(`.chat-list .chat-item[data-id=\"${chat.id}\"] .chat-title`).text(chat.get('jid'));\n        });\n    },\n\n    showNotifications: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            notificatons_chats = chats.filter(chat => (chat.get('jid') === chat.account.domain || chat.contact && chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both' ));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            notificatons_chats = notificatons_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        notificatons_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showAllChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = no_unread || xabber.toolbar_view.data.get('account_filtering') ? false : xabber.toolbar_view.$('.active.unread').length,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (is_unread) {\n            all_chats = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && (chat.get('pinned') === '0' || !chat.get('pinned')) );\n            all_chats_pinned = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        if (xabber.toolbar_view.data.get('account_filtering')){\n            all_chats = all_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n            all_chats_pinned = all_chats_pinned.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n        }\n        all_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                let index = all_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    updateScreenAllChats: function () {\n        xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active')\n            .filter('.all-chats:not(.toolbar-logo)').addClass('active');\n        this.showAllChats();\n    }\n});\n\n  xabber.MessageItemView = xabber.BasicView.extend({\n      className: 'message-item list-item',\n      template: templates.message_item,\n      avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n      events: {\n          'click': 'openByClick'\n      },\n\n      _initialize: function () {\n          this.contact = this.model.contact;\n          this.account = this.contact ? this.contact.account : this.model.account;\n          this.$el.attr('data-id', this.model.id + '-' + this.cid);\n          this.$el.attr('data-contact-jid', this.contact.get('jid'));\n          this.updateName();\n          this.updateLastMessage();\n          this.updateAvatar();\n          this.updateColorScheme();\n          this.updateGroupChats();\n          this.updateIcon();\n          this.updateStatus();\n          this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n          this.contact.on(\"change:status\", this.updateStatus, this);\n          this.contact.on(\"change:name\", this.updateName, this);\n      },\n\n      updateName: function () {\n          this.$('.chat-title').text(this.contact.get('name'));\n      },\n\n      updateAvatar: function () {\n          let image = this.contact.cached_image;\n          this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n      },\n\n      updateStatus: function () {\n          let status = this.contact.get('status'),\n              status_message = this.contact.getStatusMessage();\n          this.$('.contact-status').attr('data-status', status);\n          this.$('.chat-icon').attr('data-status', status);\n          this.model.get('blocked') ? this.$('.contact-status-message').text(xabber.getString(\"action_contact_blocked\")) : this.$('.contact-status-message').text(status_message);\n      },\n\n      updateGroupChats: function () {\n          let is_group_chat = this.contact.get('group_chat');\n          this.$('.status').hideIf(is_group_chat);\n          this.updateIcon();\n          if (is_group_chat) {\n              this.$el.addClass('group-chat');\n              this.$('.chat-title').css('color', '#424242');\n              this.model.set('group_chat', true);\n          }\n      },\n\n      updateIcon: function () {\n          this.$('.chat-icon').addClass('hidden');\n          let ic_name = this.contact.getIcon();\n          ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n      },\n\n      updateColorScheme: function () {\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n      },\n\n      updateLastMessage: function (msg) {\n          msg || (msg = this.model);\n          if (!msg)\n              return;\n          let msg_time = msg.get('time'),\n              timestamp = msg.get('timestamp'),\n              forwarded_message = msg.get('forwarded_message'),\n              msg_files = msg.get('files') || [],\n              msg_images = msg.get('images') || [],\n              msg_locations = msg.get('locations') || [],\n              msg_text = (forwarded_message) ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n              msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes || {}, msg_from = \"\";\n          msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n          this.model.set({timestamp: timestamp});\n          if (this.model.get('group_chat'))\n              msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n          if (msg_files.length || msg_images.length || msg_locations.length) {\n              let $colored_span = $('<span class=\"text-color-500\"/>');\n              if (msg_files.length && msg_images.length)\n                  msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n              else {\n                  if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                      msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                  else if (msg_files.length > 0) {\n                      let total_size = 0;\n                      msg_files.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_images.length > 0) {\n                      let total_size = 0;\n                      msg_images.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_locations.length > 0) {\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                  }\n              }\n              this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n          }\n          else {\n              this.$('.last-msg').text(\"\").append(msg_text);\n              if (msg_from)\n                  this.$('.last-msg').prepend($('<span class=text-color-700>' + msg_from + ': ' + '</span>'));\n          }\n          this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n          this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n              .attr('title', pretty_datetime(msg_time));\n          this.$('.msg-delivering-state').showIf(msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n              .attr('data-state', msg.getState());\n      },\n\n      openByClick: function () {\n          let chat = this.account.chats.getChat(this.contact);\n          this.$el.closest('.left-panel-list-wrap').find('.list-item').removeClass('active');\n          this.$el.addClass('active');\n          xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n          xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n          if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n              if (xabber.right_contact_panel_saveable)\n                  chat.contact.showDetailsRight('all-chats', {right_saved: true});\n              else\n                  chat.contact.showDetailsRight('all-chats', {right_saved: false});\n          }\n          this.model.get('unique_id') && chat.getMessageContext(this.model.get('unique_id'), {message: true});\n      }\n  });\n\n\n  xabber.ForwardPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal forward-panel-modal',\n    template: templates.forward_panel,\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n      events: {\n          \"keyup .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\"\n      },\n\n    open: function (messages, account) {\n        this.messages = messages;\n        this.account = account;\n        this.$('.chat-list-wrap .pinned-chat-list').html(\"\");\n        this.$('.chat-list-wrap .chat-list').html(\"\");\n        this.$('.chat-list-wrap .contact-list').html(\"\");\n        this.saved_chat = false;\n        let chats = xabber.chats_view.model,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                if (chat.account.get('jid') === this.account.get('jid')) {\n                    if (chat.id == `${this.account.get('jid')}:saved`) {\n                        let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                        $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                        this.saved_chat = true;\n                        this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                    } else\n                        this.$('.chat-list-wrap .pinned-chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n                }\n            });\n        }\n        all_chats.forEach((chat) => {\n            if (chat.account.get('jid') === this.account.get('jid')) {\n                if (chat.id == `${this.account.get('jid')}:saved`) {\n                    let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                    $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                    this.saved_chat = true;\n                    this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                } else\n                    this.$('.chat-list-wrap .chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n            }\n        });\n        if (!this.saved_chat) {\n            let saved_chat = this.account.chats.getSavedChat(),\n                $cloned_item = saved_chat.item_view.$el.clone();\n            $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n            this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n        }\n        this.$('.chat-list-wrap .pinned-chat-list').prepend($('<div/>', { class: 'forward-panel-list-title recent-chats-title hidden'}).text(xabber.getString(\"category_recent_chats\")));\n        this.$('.chat-list-wrap .chat-list').append($('<div/>', { class: 'forward-panel-list-title contacts-title hidden'}).text(xabber.getString(\"category_title_contacts\")));\n        this.$('.chat-item').removeClass('active');\n        this.clearSearch();\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n            this.$el.detach();\n            this.data.set('visible', false);\n            deferred.resolve();\n        }});\n        return deferred.promise();\n    },\n\n    onClickItem: function (ev) {\n        let $target = $(ev.target).closest('.list-item');\n        this.onEnterPressed($target);\n    },\n\n    search: function (query) {\n        let jid, name, is_match = false, has_matches_chats = false, has_matches_contacts = false;\n        query = query.toLowerCase();\n        this.$('.roster-contact.list-item').remove();\n        query && this.account.roster.forEach((contact) => {\n            let jid = contact.get('jid'),\n                chat_id = contact.hash_id,\n                name = contact.get('name').toLowerCase(),\n                is_match = (name.indexOf(query) < 0 && jid.indexOf(query) < 0) ? true : false;\n            if (!is_match) {\n                if (!this.$('.chat-list-wrap .chat-item[data-id=\"' + chat_id + '\"]').length) {\n                    let contact_list_item = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-contact[data-jid=\"${jid}\"]`).first().clone();\n                    contact_list_item.find('.muted-icon').hide();\n                    this.$('.chat-list-wrap .contact-list').append(contact_list_item);\n                }\n                else\n                    is_match = true;\n            }\n            !is_match && (has_matches_contacts = true);\n        });\n        this.$('.contacts-title').switchClass('hidden', !has_matches_contacts);\n        this.$('.chat-item').each((idx, item) => {\n            let chat = this.account.chats.get($(item).data('id'));\n            if (!chat) {\n                $(item).addClass('hidden');\n                return;\n            }\n            jid = chat.get('jid');\n            name = (chat.contact ? chat.contact.get('name') : chat.get('name'));\n            if (name)\n                name = name.toLowerCase();\n            is_match = (!name || name && (name.indexOf(query) < 0 && jid.indexOf(query) < 0)) ? false : true;\n            $(item).hideIf(!is_match);\n            is_match && (has_matches_chats = true);\n        });\n        this.$('.recent-chats-title').switchClass('hidden', !has_matches_chats);\n        this.$('.modal-content .error').showIf(!has_matches_contacts && !has_matches_chats);\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.roster-contact.list-item').remove();\n        this.$('.contacts-title').addClass('hidden');\n        this.$('.modal-content .error').addClass('hidden');\n        this.$('.recent-chats-title').addClass('hidden');\n    },\n\n    onEnterPressed: function (selection) {\n        let chat_item;\n        if (selection.hasClass('roster-contact'))\n            chat_item = this.account.chats.getChat(this.account.contacts.get(selection.data('jid'))).item_view;\n        if (selection.hasClass('chat-item'))\n            chat_item = xabber.chats_view.child(selection.data('id'));\n        chat_item && this.forwardTo(chat_item);\n    },\n\n    forwardTo: function (chat_item) {\n        if (chat_item.model.get('saved')) {\n            this.messages.forEach((message) => {\n                chat_item.content.onSubmit(\"\", [message]);\n            });\n        }\n        else {\n            if (!chat_item.content)\n                chat_item.content = new xabber.ChatContentView({chat_item: chat_item});\n            chat_item.content.bottom.setForwardedMessages(this.messages);\n        }\n        this.messages = [];\n        this.close().done(() => {\n            chat_item.open({clear_search: true});\n        });\n    }\n});\n\nxabber.InvitationPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal add-user-group-chat',\n    template: templates.group_chats.invitation_panel_view,\n    ps_selector: '.contacts-list-wrap',\n    ps_settings: {theme: 'item-list'},\n\n    _initialize: function () {\n        this.registerClickEvents();\n    },\n\n    open: function (account, contact) {\n        this.selected_contacts = [];\n        this.account = account;\n        this.contact = contact;\n        this.clearPanel();\n        xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-group`).each((idx, item) => {\n            let group_node = $(item).clone();\n            $(group_node).find('.list-item').each((i, list_item) => {\n                let contact_node = this.account.contacts.get($(list_item).attr('data-jid'));\n                if (contact_node.get('group_chat'))\n                        list_item.remove();\n            });\n            if (group_node.children('.list-item').length) {\n                this.$('.contacts-list-wrap').append(group_node);\n                group_node.find('.arrow').click((ev) => {\n                    this.toggleContacts(ev);\n                });\n                group_node.find('.group-head').click((ev) => {\n                    this.selectAllGroup(ev);\n                });\n            }\n        });\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                this.selected_contacts = [];\n            }\n        });\n    },\n\n    addSelectedUsers: function () {\n        if (!this.selected_contacts.length) {\n            this.$('.modal-footer button').blur();\n            return;\n        }\n        let selected_users_count = this.selected_contacts.length,\n            _dfd_invitations = new $.Deferred(), invitations_count = 0;\n        _dfd_invitations.done((count) => {\n            let toast_text;\n            if (count == selected_users_count)\n                toast_text = xabber.getQuantityString(\"groupchat__toast__invitations_sent\", selected_users_count);\n            else\n                toast_text = xabber.getQuantityString(\"groupchat__toast_failed_to_sent_invitations\", selected_users_count);\n            utils.callback_popup_message(toast_text, 2000);\n            this.contact.trigger('invitations_send')\n        });\n        $(this.selected_contacts).each((idx, item) => {\n            this.sendInvite(item, () => {\n                invitations_count++;\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            }, () => {\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            });\n        });\n        this.close();\n    },\n\n    clearPanel: function () {\n        this.$('.modal-footer .errors').text('');\n        this.$('.counter').text('');\n        this.$('.contacts-list-wrap').empty();\n        this.clearSearch();\n    },\n\n    registerClickEvents: function () {\n        this.$('.btn-cancel').click(() => {\n            this.close();\n        });\n        this.$('.btn-add').click(() => {\n            this.addSelectedUsers();\n        });\n    },\n\n    addUser: function (ev) {\n        let $target = $(ev.target).closest('.list-item'),\n            contact_jid = $target.attr('data-jid');\n        $target.toggleClass('click-selected');\n        let itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        else\n            this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n    },\n\n    sendInvite: function (contact_jid, callback, errback) {\n        let iq = $iq({type: 'set', to: (this.contact.get('full_jid') || this.contact.get('jid'))})\n                .c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(contact_jid).up()\n                .c('send').t('false').up()\n                .c('reason').t((this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [contact_jid]));\n        this.account.sendIQFast(iq, () => {\n            this.sendInviteMessage(contact_jid);\n            this.close();\n            callback && callback();\n        }, (iq) => {\n            this.onInviteError(iq);\n            errback && errback();\n        });\n    },\n\n    onInviteError: function (iq) {\n        let err_text;\n        if ($(iq).find('not-allowed').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n        }\n        if ($(iq).find('conflict').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat__invitation__error_already_invited\", [$(iq).find('invite').find('jid').text()]);\n        }\n        this.$('.modal-footer .errors').removeClass('hidden').text(err_text);\n    },\n\n    sendInviteMessage: function(jid_to) {\n        let body = xabber.getString(\"groupchat_legacy_invitation_body\", [this.contact.get('jid')]),\n            stanza = $msg({\n                to: jid_to,\n                type: 'chat',\n                id: uuid()\n            }).c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`, jid: this.contact.get('jid')})\n                .c('reason').t((this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [jid_to])).up().up()\n                .c('x', {xmlns: Strophe.NS.GROUP_CHAT})\n                .c('privacy').t(this.contact.get('group_info').privacy).up().up()\n                .c('body').t(body).up();\n        this.account.sendMsg(stanza);\n    },\n\n    search: function (query) {\n        query = query.toLowerCase();\n        query && this.$('.list-item').each((idx, item) => {\n            let jid = $(item).attr('data-jid'),\n                name = this.account.contacts.get(jid).get('name').toLowerCase(),\n                hide_clone = (this.$(`.list-item[data-jid=\"${jid}\"]`).length > 1) && (!this.$(`.list-item[data-jid=\"${jid}\"]`).first().is($(item)));\n            $(item).hideIf((name.indexOf(query) < 0 && jid.indexOf(query) < 0) || hide_clone);\n        });\n        this.$('.group-head').addClass('hidden');\n        this.$('.modal-content .error').switchClass('hidden', !(this.$('.list-item').length === this.$('.list-item.hidden').length));\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.list-item').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n    },\n\n    onClickItem: function (ev) {\n        this.addUser(ev);\n    },\n\n    onEnterPressed: function (selection) {\n        let contact_jid = selection.attr('data-jid'),\n            itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n        this.addSelectedUsers();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    toggleContacts: function (ev) {\n        let is_visible = $(ev.target).hasClass('mdi-chevron-down');\n        if (is_visible) {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).addClass('hidden');\n            });\n        }\n        else\n        {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).removeClass('hidden');\n            });\n        }\n        $(ev.target).switchClass('mdi-chevron-right', is_visible);\n        $(ev.target).switchClass('mdi-chevron-down', !is_visible);\n        this.updateScrollBar();\n    },\n\n    selectAllGroup: function (ev) {\n        if ($(ev.target).hasClass('arrow'))\n            return;\n       let group_roster = $(ev.target).closest('.roster-group');\n       if (group_roster.hasClass('click-selected')) {\n           group_roster.removeClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1) {\n                   this.selected_contacts.splice(itemIdx, 1);\n                   $(item).removeClass('click-selected');\n               }\n           });\n       }\n       else\n       {\n           group_roster.addClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1)\n                   return;\n               else\n                   this.selected_contacts.push(contact_jid);\n               $(item).addClass('click-selected');\n           });\n       }\n        this.updateCounter();\n    },\n\n    updateCounter: function () {\n        let selected_counter = this.$('.list-item.click-selected').length;\n        (selected_counter) ? this.$('.counter').removeClass('hidden').text(selected_counter) : this.$('.counter').text('');\n    }\n\n});\n\n  xabber.SavedChatHeadView = xabber.BasicView.extend({\n      className: 'chat-head-wrap saved-chat',\n      template: templates.saved_chat_head,\n      events: {\n          \"click .contact-name\": \"showSettings\",\n          \"click .circle-avatar\": \"showSettings\",\n          \"click .btn-chat-pin\": \"pinSavedChat\",\n          \"click .btn-delete-chat\": \"deleteChat\",\n          \"click .btn-set-status\": \"setStatus\",\n          \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n          \"click .btn-next-plyr\": \"nextPlyr\",\n          \"click .btn-previous-plyr\": \"previousPlyr\",\n          \"click .btn-stop-plyr\": \"stopPlyr\",\n          \"click .btn-popup-plyr\": \"popupPlyr\",\n          \"click .btn-jingle-message\": \"openJingleMessage\",\n          \"click .btn-search-messages\": \"renderSearchPanel\"\n      },\n\n      _initialize: function (options) {\n          this.content = options.content;\n          this.contact = this.content.contact;\n          this.model = this.content.model;\n          clearInterval(this._update_oneliner_interval);\n          this.updateOneLiner();\n          this._update_oneliner_interval = setInterval(() => {\n              this.updateOneLiner();\n          }, 1000*60*2);\n          this.account = this.model.account;\n          this.$el.find('.circle-avatar:not(.voice-message-player-avatar)').html(env.templates.svg['saved-messages']());\n          this.model.on(\"close_chat\", this.closeChat, this);\n          this.model.on(\"hide_chat\", this.hideChat, this);\n          xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n          xabber.on('update_layout', this.updatePlyrTitle, this);\n          xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n          xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n      },\n\n      render: function () {\n          this.$('.tooltipped').tooltip({delay: 50});\n          this.$('.btn-more').dropdown({\n              inDuration: 100,\n              outDuration: 100,\n              hover: false\n          });\n          this.$('.chat-head-menu').hide();\n          this.updatePlyrControls();\n          this.updatePlyrTime();\n          this.updateJingleButton();\n          return this;\n      },\n\n      updateOneLiner: function () {\n          let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n              one_liner = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n          if (!one_liner) {\n              this.updateOneLiner();\n              return;\n          }\n          this.$('.one-liner').text(one_liner);\n      },\n\n      closeChat: function () {\n          this.model.set({'opened': false, 'display': false, 'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      hideChat: function () {\n          this.model.set({'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      showSettings: function () {\n          this.account.showSettings();\n      },\n\n      deleteChat: function () {\n          let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_saved_messages__header\"), xabber.getString(\"dialog_delete_saved_messages__confirm\") +\n              (rewrite_support ? \"\" : (\"\\n\" + xabber.getString(\"dialog_delete_saved_messages__confirm\", [this.account.domain]).fontcolor('#E53935'))), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n              if (result) {\n                  if (this.account.connection && this.account.connection.do_synchronization) {\n                      this.model.deleteFromSynchronization();\n                  }\n                  if (rewrite_support) {\n                      this.model.retractAllMessages(false);\n                  }\n                  else {\n                      let all_messages = this.model.messages.models;\n                      $(all_messages).each((idx, item) => {\n                          this.content.removeMessage(item);\n                      });\n                  }\n                  this.closeChat();\n                  this.model.set('timestamp', 0);\n              }\n          });\n      },\n\n      pinSavedChat: function () {\n          let pinned = this.model.get('pinned'),\n              is_pinned = pinned && pinned !== '0' ? true : false,\n              pinned_value = is_pinned ? '0' : + new Date(),\n              conversation_options = {\n                  jid: this.account.get('jid'),\n                  pinned: pinned_value,\n                  type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n              },\n              iq = $iq({type: 'set', to: this.account.get('jid')})\n                  .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                  .c('conversation', conversation_options);\n          this.account.sendIQFast(iq);\n          this.model.set('pinned', pinned_value);\n      },\n\n      renderSearchPanel: function () {\n          let visible_view;\n          if (this.content.isVisible())\n              visible_view = this.content;\n          this.model.messages_view && this.model.messages_view.isVisible() && (visible_view = this.model.messages_view);\n          visible_view && visible_view.$search_form.slideToggle(200, () => {\n              if (visible_view.$search_form.css('display') !== 'none')\n                  visible_view.$search_form.find('input').focus();\n          });\n      },\n\n      playPausePlyr: function () {\n          if (!xabber.current_plyr_player)\n              return;\n          if (xabber.current_plyr_player.$audio_elem){\n              if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                  let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                  $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                  xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n              } else {\n                  xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n              }\n          } else\n              xabber.current_plyr_player.togglePlay();\n          xabber.trigger('plyr_player_updated');\n      },\n\n      stopPlyr: function () {\n          if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n              return;\n          xabber.plyr_players.forEach((item) => {\n              if (item.$audio_elem){\n                  if (item.$audio_elem.voice_message)\n                      item.$audio_elem.voice_message.stopTime();\n              }\n          });\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.closePopup();\n          else {\n              xabber.current_plyr_player = null;\n              xabber.trigger('plyr_player_updated');\n          }\n      },\n\n      popupPlyr: function () {\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.minimizePopup();\n      },\n\n      nextPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n              let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n              if (!next_item.$audio_elem.voice_message){\n                  let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  next_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n          }\n      },\n\n      previousPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n              let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n              if (!prev_item.$audio_elem.voice_message){\n                  let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  prev_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n          }\n      },\n\n      updatePlyrControls: function () {\n          this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n          this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              if (xabber.current_plyr_player.$audio_elem.voice_message){\n                  let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                  this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                  // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                  this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                  let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                  this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                  this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n                  this.$('.voice-message-player-avatar').removeClass('hidden');\n                  this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                  this.updatePlyrTitle();\n                  let duration = Math.round(voice_message.getDuration());\n                  this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                  let timerId = setInterval(function() {\n                      let cur_time = Math.round(voice_message.getCurrentTime());\n                      if (voice_message.isPlaying())\n                          this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                      else\n                          clearInterval(timerId);\n                  }, 100);\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n              }\n          }\n          else if (xabber.current_plyr_player) {\n              this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n              this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n              this.updatePlyrTitle();\n              let poster = xabber.current_plyr_player.poster;\n              if (poster){\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').removeClass('hidden');\n                  this.$('.player-poster').attr(\"src\", poster);\n              } else {\n                  this.$('.mdi-player-type-icon').removeClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n              }\n              this.$('.voice-message-player-avatar').addClass('hidden');\n              if (xabber.current_plyr_player.provider != 'html5')\n                  this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n              else\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n              this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n              // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n              this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n              let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n              this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n              this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n          }\n      },\n\n      updatePlyrTime: function () {\n          if (xabber.current_plyr_player){\n              if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              }\n              else if (!isNaN(xabber.current_plyr_player.currentTime))\n                  this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n          }\n      },\n\n      updatePlyrTitle: function () {\n          if (!xabber.current_plyr_player)\n              return\n          let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n              title;\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n              title = xabber.current_plyr_player.author;\n          else if (xabber.current_plyr_player)\n              title = xabber.current_plyr_player.config.title ?\n                  xabber.current_plyr_player.config.title :\n                  xabber.current_plyr_player.provider === 'html5' ?\n                      xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                      : xabber.getString(\"chat_message_video\");\n          $title_elem.text(title);\n          if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n              $title_elem.addClass('active-animation-player-title');\n              $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n          } else\n              $title_elem.removeClass('active-animation-player-title');\n\n      },\n\n      updateJingleButton: function () {\n          this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n          if (xabber.current_voip_call){\n              this.$('.btn-jingle-message').removeClass('hidden');\n              let voip_status = xabber.current_voip_call.get('status');\n              if (voip_status)\n                  this.$('.btn-jingle-message').attr('data-state', voip_status);\n              else\n                  this.$('.btn-jingle-message').attr('data-state', '');\n              if (voip_status === 'disconnected')\n                  this.$('.btn-jingle-message').removeClass('active-call');\n          } else\n              this.$('.btn-jingle-message').addClass('hidden');\n      },\n\n      openJingleMessage: function () {\n          if (xabber.current_voip_call) {\n              xabber.current_voip_call.modal_view.collapse();\n              return;\n          }\n      },\n  });\n\n  xabber.ChatHeadView = xabber.BasicView.extend({\n    className: 'chat-head-wrap',\n    template: templates.chat_head,\n    avatar_size: constants.AVATAR_SIZES.CHAT_HEAD,\n\n    events: {\n        \"click .chat-head-wrap\": \"showContactDetailsRight\",\n        \"click .chat-head-details\": \"showContactDetailsRight\",\n        \"click .contact-name\": \"showContactDetailsRight\",\n        \"click .circle-avatar\": \"showContactDetailsRight\",\n        \"click .contact-status-message.resource-hover\": \"showContactResources\",\n        \"click .contact-status-message.members-hover\": \"showMembersDetails\",\n        \"click .btn-contact-details\": \"showContactDetails\",\n        \"click .btn-clear-history\": \"clearHistory\",\n        \"click .btn-invite-users\": \"inviteUsers\",\n        \"click .btn-delete-chat\": \"deleteChat\",\n        \"click .btn-delete-contact\": \"deleteContact\",\n        \"click .btn-block-contact\": \"blockContact\",\n        \"click .btn-unblock-contact\": \"unblockContact\",\n        \"click .btn-export-history\": \"exportHistory\",\n        \"click .btn-show-fingerprints\": \"showFingerprints\",\n        \"click .btn-start-encryption\": \"startEncryptedChat\",\n        \"click .btn-open-encrypted-chat\": \"openEncryptedChat\",\n        \"click .btn-open-regular-chat\": \"openRegularChat\",\n        \"click .btn-chat-pin\": \"pinChat\",\n        \"click .btn-archive-chat\": \"archiveChat\",\n        \"click .btn-call-attention\": \"callAttention\",\n        \"click .btn-search-messages\": \"renderSearchPanel\",\n        \"click .btn-jingle-message\": \"sendJingleMessage\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-notifications.muted\": \"unmuteChat\",\n        \"click .btn-set-status\": \"setStatus\",\n        \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .btn-stop-plyr\": \"stopPlyr\",\n        \"click .btn-popup-plyr\": \"popupPlyr\",\n    },\n\n    _initialize: function (options) {\n        this.content = options.content;\n        this.contact = this.content.contact;\n        this.model = this.content.model;\n        this.account = this.model.account;\n        this.resources_view = new xabber.ContactResourcesRightView({model: this.contact.resources});\n        this.updateName();\n        this.updateStatus();\n        this.updateEncrypted();\n        this.updateAvatar();\n        this.updateNotifications();\n        this.updateArchived();\n        this.updatePinned();\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"close_chat\", this.closeChat, this);\n        this.model.on(\"hide_chat\", this.hideChat, this);\n        this.model.on(\"pinned\", this.pinChat, this);\n        this.model.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"change:archived\", this.updateArchived, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.contact.on(\"change\", this.onContactChanged, this);\n        this.contact.on(\"archive_chat\", this.archiveChat, this);\n        this.contact.on(\"change:name\", this.updateName, this);\n        this.contact.on(\"change:status\", this.updateStatus, this);\n        this.contact.on(\"change:status_updated\", this.updateStatus, this);\n        this.contact.on(\"change:image\", this.updateAvatar, this);\n        this.contact.on(\"change:blocked\", this.onChangedBlocked, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChatHead, this);\n        this.contact.on(\"change:subscription\", this.updateMenu, this);\n        this.contact.on(\"change:in_roster\", this.updateMenu, this);\n        this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        xabber._settings.on(\"change:jingle_calls\", this.updateGroupChatHead, this);\n        xabber.on('change:audio', this.updateGroupChatHead, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n        xabber.on('update_layout', this.updatePlyrTitle, this);\n        xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n        xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n    },\n\n    render: function (options) {\n        this.$('.tooltipped').tooltip('remove');\n        this.$('.tooltipped').tooltip({delay: 50});\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-notifications').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: true, // Activate on hover\n            belowOrigin: true, // Displays dropdown below the button\n        });\n        this.$('.chat-head-menu').hide();\n        this.updateStatusMsg();\n        this.updateGroupChatHead();\n        if (this.contact.get('group_chat'))\n            this.$('.contact-status-message').addClass('members-hover')\n        else\n            this.$('.contact-status-message').addClass('resource-hover')\n        this.updatePlyrControls();\n        this.updatePlyrTime();\n        this.updateJingleButton();\n        return this;\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateName: function () {\n        this.$('.contact-name').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        let status = this.contact.get('status'),\n            status_message = this.contact.getStatusMessage();\n        this.$('.contact-status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n        this.model.get('blocked') ? this.$('.contact-status-message').text('Contact blocked') : this.$('.contact-status-message').text(status_message);\n    },\n\n    updateStatusMsg: function () {\n        this.$('.contact-status-message').text(this.contact.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    onContactChanged: function () {\n        let changed = this.contact.changed;\n        if (_.has(changed, 'subscription_request_in') || _.has(changed, 'subscription_request_out') || _.has(changed, 'subscription') || _.has(changed, 'status_message'))\n            this.updateStatusMsg();\n        if (_.has(changed, 'private_chat') || _.has(changed, 'incognito_chat') || _.has(changed, 'invitation'))\n            this.updateIcon();\n    },\n\n    onChangedBlocked: function () {\n        this.updateMenu();\n        this.updateStatusMsg();\n        this.updateIcon();\n    },\n\n    updateMenu: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.btn-invite-users').showIf(is_group_chat && !this.contact.get('private_chat') && this.contact.get('subscription') == 'both');\n        this.$('.btn-call-attention').hideIf(is_group_chat || this.model.get('encrypted'));\n        this.$('.btn-clear-history').hideIf(is_group_chat);\n        this.$('.btn-start-encryption').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && !this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-encrypted-chat').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-regular-chat').showIf(this.model.get('encrypted'));\n        this.$('.btn-show-fingerprints').showIf(!is_group_chat && this.account.omemo && this.model.get('encrypted'));\n        this.$('.btn-retract-own-messages').showIf(is_group_chat);\n        this.$('.btn-block-contact').hideIf(this.contact.get('blocked'));\n        this.$('.btn-unblock-contact').showIf(this.contact.get('blocked'));\n        this.$('.btn-delete-contact').showIf(this.contact.get('in_roster') && !is_group_chat);\n        this.$('.btn-notifications').hideIf(this.contact.get('blocked'));\n        this.$('.btn-jingle-message').hideIf((this.contact.get('blocked') || is_group_chat) && xabber.current_voip_call);\n        this.$('.btn-jingle-message').hideIf(!xabber.settings.jingle_calls);\n    },\n\n    renderSearchPanel: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'search'});\n    },\n\n    showContactDetails: function () {\n        this.contact.showDetails('all-chats');\n    },\n\n    showContactDetailsRight: function () {\n        this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n    },\n\n    showContactResources: function () {\n        this.resources_view.open();\n    },\n\n    showMembersDetails: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'members'});\n    },\n\n    updatePinned: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false;\n        if (is_pinned)\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_unpin\"))\n        else\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_pin\"))\n    },\n\n    updateNotifications: function () {\n        if (this.model.isMuted()) {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_unmute\"));\n            this.$('.btn-notifications').addClass('muted');\n        }\n        else {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_mute\"));\n            this.$('.btn-notifications').removeClass('muted');\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.model.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.model.isMuted());\n    },\n\n      muteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n              muted_seconds;\n          if (mute_type === 'minutes15')\n              muted_seconds = 900\n          if (mute_type === 'hours1')\n              muted_seconds = 3600\n          if (mute_type === 'hours2')\n              muted_seconds = 7200\n          if (mute_type === 'day')\n              muted_seconds = 86400\n          if (mute_type === 'forever')\n              muted_seconds = 0\n          this.model.muteChat(muted_seconds);\n      },\n\n      unmuteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          this.model.muteChat('');\n      },\n\n    callAttention: function (ev) {\n        let msg = $msg({type: 'headline', to: this.contact.get('jid')})\n            .c('attention', {xmlns: Strophe.NS.ATTENTION});\n        this.account.sendMsg(msg);\n        this.model.messages.createSystemMessage({\n            from_jid: this.account.get('jid'),\n            message: xabber.getString(\"action_attention_called\")\n        });\n    },\n\n\n    updateArchived: function () {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!is_archived)\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_unarchive\"))\n        else\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_archive\"))\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-up', !is_archived);\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-down', is_archived);\n        if (this.model.item_view && archived){\n            !this.model.messages.length && this.model.item_view.updateLastMessage();\n            this.account.chat_settings.updateArchiveChatsList(this.contact.get('jid'), archived);\n            if (this.model.get('active')) {\n                xabber.chats_view.updateScreenAllChats();\n            }\n        }\n    },\n\n    archiveChat: function (ev, no_iq) {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!no_iq) {\n            let is_archived_status = is_archived ? 'archived' : 'active',\n                conversation_options = {\n                    jid: this.contact.get('jid'),\n                    status: is_archived_status,\n                    type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n                },\n                iq = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                    .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('archived', archived);\n        }\n    },\n\n    pinChat: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false,\n            pinned_value = is_pinned ? '0' : + new Date(),\n            conversation_options = {\n                jid: this.contact.get('jid'),\n                pinned: pinned_value,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n            },\n            iq = $iq({type: 'set', to: this.account.get('jid')})\n                .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('pinned', pinned_value);\n    },\n\n    sendJingleMessage: function () {\n        if (!xabber.settings.jingle_calls){\n            return;\n        }\n        if (xabber.current_voip_call) {\n            xabber.current_voip_call.modal_view.collapse();\n            return;\n        }\n        xabber.chats_view.scrollToTop();\n        xabber.chats_view.clearSearch();\n        !this.contact.get('group_chat') && this.content.initJingleMessage();\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.contact);\n    },\n\n    playPausePlyr: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n        xabber.trigger('plyr_player_updated');\n    },\n\n    stopPlyr: function () {\n        if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n            return;\n        xabber.plyr_players.forEach((item) => {\n            if (item.$audio_elem){\n                if (item.$audio_elem.voice_message)\n                    item.$audio_elem.voice_message.stopTime();\n            }\n        });\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.closePopup();\n        else {\n            xabber.current_plyr_player = null;\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    popupPlyr: function () {\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.minimizePopup();\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n        this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            if (xabber.current_plyr_player.$audio_elem.voice_message){\n                let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n                this.$('.voice-message-player-avatar').removeClass('hidden');\n                this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                this.updatePlyrTitle();\n                let duration = Math.round(voice_message.getDuration());\n                this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                let timerId = setInterval(function() {\n                    let cur_time = Math.round(voice_message.getCurrentTime());\n                    if (voice_message.isPlaying())\n                        this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                    else\n                        clearInterval(timerId);\n                }, 100);\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n            }\n        }\n        else if (xabber.current_plyr_player) {\n            this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n            this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n            this.updatePlyrTitle();\n            let poster = xabber.current_plyr_player.poster;\n            if (poster){\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').removeClass('hidden');\n                this.$('.player-poster').attr(\"src\", poster);\n            } else {\n                this.$('.mdi-player-type-icon').removeClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n            }\n            this.$('.voice-message-player-avatar').addClass('hidden');\n            if (xabber.current_plyr_player.provider != 'html5')\n                this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n            else\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n            this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n            // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n            this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n        }\n    },\n\n    updatePlyrTime: function () {\n        if (xabber.current_plyr_player){\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            }\n            else if (!isNaN(xabber.current_plyr_player.currentTime))\n                this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n        }\n    },\n\n    updatePlyrTitle: function () {\n        if (!xabber.current_plyr_player)\n            return\n        let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n            title;\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            title = xabber.current_plyr_player.author;\n        else if (xabber.current_plyr_player)\n            title = xabber.current_plyr_player.config.title ?\n                xabber.current_plyr_player.config.title :\n                xabber.current_plyr_player.provider === 'html5' ?\n                    xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                    : xabber.getString(\"chat_message_video\");\n        $title_elem.text(title);\n        if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n            $title_elem.addClass('active-animation-player-title');\n            $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n        } else\n            $title_elem.removeClass('active-animation-player-title');\n\n    },\n\n\n    updateJingleButton: function () {\n        this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n        if (xabber.current_voip_call){\n            this.contact.get('group_chat') && this.$('.btn-jingle-message').removeClass('hidden');\n            let voip_status = xabber.current_voip_call.get('status');\n            if (voip_status)\n                this.$('.btn-jingle-message').attr('data-state', voip_status);\n            else\n                this.$('.btn-jingle-message').attr('data-state', '');\n            if (voip_status === 'disconnected')\n                this.$('.btn-jingle-message').removeClass('active-call');\n        } else if (this.contact.get('group_chat'))\n            this.$('.btn-jingle-message').addClass('hidden');\n    },\n\n    getActiveScreen: function () {\n        let active_screen = xabber.toolbar_view.$('.active');\n        this.$('.omemo-item').removeClass('hidden');\n        if (active_screen.hasClass('archive-chats')) {\n            xabber.toolbar_view.showArchive();\n            return;\n        }\n        if (active_screen.hasClass('all-chats')) {\n            xabber.toolbar_view.showAllChats();\n            return;\n        }\n        if (active_screen.hasClass('chats')) {\n            xabber.toolbar_view.showChats();\n            return;\n        }\n        if (active_screen.hasClass('group-chats')) {\n            xabber.toolbar_view.showGroupChats();\n            return;\n        }\n        if (active_screen.hasClass('account-item')) {\n            xabber.toolbar_view.showChatsByAccount();\n            return;\n        }\n    },\n\n    updateGroupChatHead: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.updateIcon();\n        this.$('.btn-jingle-message').showIf(!is_group_chat && xabber.get('audio') || xabber.current_voip_call);\n        this.$('.btn-jingle-message').hideIf(!xabber.settings.jingle_calls);\n        this.$('.contact-status').hideIf(is_group_chat);\n        this.updateMenu();\n    },\n\n    updateIcon: function () {\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    inviteUsers: function () {\n        if (!xabber.invite_panel)\n            xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n        xabber.invite_panel.open(this.account, this.contact);\n    },\n\n    clearHistory: function () {\n        this.content.clearHistory();\n        xabber.chats_view.clearSearch();\n    },\n\n    leaveGroupChat: function () {\n        this.contact.declineSubscription();\n        this.contact.removeFromRoster();\n        this.contact.set('in_roster', false);\n    },\n\n    closeChat: function () {\n        this.model.set({'opened': false, 'display': false, 'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    hideChat: function () {\n        this.model.set({'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    deleteChat: function () {\n        if (this.contact.get('group_chat')) {\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"dialog_group_remove__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                if (result) {\n                    let scrolled_top = xabber.chats_view.getScrollTop() || 0;\n                    (this.account.connection && this.account.connection.do_synchronization) && this.model.deleteFromSynchronization();\n                    this.leaveGroupChat();\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                    xabber.chats_view.scrollTo(scrolled_top);\n                }\n            });\n        }\n        else {\n            let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"delete_chat_dialog_message\") +\n            (rewrite_support ? \"\" : `\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n                if (result) {\n                    let scrolled_top = xabber.chats_view.getScrollTop() || 0;\n                    if (rewrite_support) {\n                        this.model.retractAllMessages(false);\n                    }\n                    if (this.account.connection && this.account.connection.do_synchronization) {\n                        this.model.deleteFromSynchronization();\n                    }\n                    else {\n                        let all_messages = this.model.messages.models;\n                        $(all_messages).each((idx, item) => {\n                            this.content.removeMessage(item);\n                        });\n                    }\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                    xabber.chats_view.scrollTo(scrolled_top);\n                }\n            });\n        }\n    },\n\n    deleteContact: function () {\n        this.contact.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.contact.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.contact.unblockWithDialog();\n    },\n\n    exportHistory: function () {\n\n    },\n\n    showFingerprints: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    startEncryptedChat: function () {\n        this.account.chats.openChat(this.contact, {encrypted: true});\n        let chat = this.account.chats.get(this.contact.hash_id + ':encrypted');\n        chat.set('timestamp', moment.now());\n        chat.item_view.updateLastMessage();\n    },\n\n    openEncryptedChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact, {encrypted: true});\n    },\n\n    openRegularChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact);\n    }\n});\n\n\n  xabber.SendMediaView = xabber.BasicView.extend({\n      className: 'modal main-modal avatar-picker background-panel',\n      template: templates.send_media,\n      ps_selector: '.modal-content',\n      ps_settings: {theme: 'item-list'},\n\n      events: {\n          \"click .menu-btn\": \"updateActiveMenu\",\n          \"click .library-wrap .image-item\": \"setActiveImage\",\n          'change input[type=\"file\"]': \"onFileInputChanged\",\n          'keyup input.url': \"onInputChanged\",\n          \"click .btn-add\": \"addMedia\",\n          \"click .btn-cancel\": \"close\"\n      },\n\n      _initialize: function () {\n          this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n      },\n\n      render: function (options) {\n          this.model = options.model;\n          this.parent = options.parent;\n          this.createLibrary();\n          this.$('.menu-btn').removeClass('active');\n          this.$('.menu-btn[data-screen-name=\"upload\"]').addClass('active');\n          this.$('.modal-header span').text(xabber.getString(\"chat_bottom__tooltip_add_media\"));\n          this.$el.openModal({\n              ready: () => {\n                  this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n              },\n              complete: this.close.bind(this)\n          });\n          let draggable = this.$('.upload-wrap');\n          draggable[0].ondragenter = function (ev) {\n              ev.preventDefault();\n              draggable.addClass('file-drop');\n          };\n          draggable[0].ondragover = function (ev) {\n              ev.preventDefault();\n          };\n          draggable[0].ondragleave = function (ev) {\n              if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                  return;\n              ev.preventDefault();\n              draggable.removeClass('file-drop');\n          };\n          draggable[0].ondrop = (ev) => {\n              ev.preventDefault();\n              ev.stopPropagation();\n              draggable.removeClass('file-drop');\n              let files = ev.dataTransfer.files || [];\n              this.parent.view.addFileMessage(files);\n              this.close();\n          };\n      },\n\n      onPaste: function (ev) {\n          let url = ev.clipboardData.getData('text').trim();\n          this.$('.image-preview img')[0].onload = () => {\n              this.$('.image-preview img').removeClass('hidden');\n              this.updateActiveButton();\n          };\n          this.$('.image-preview img').addClass('hidden')[0].src = url;\n          this.updateActiveButton();\n      },\n\n      updateActiveMenu: function (ev) {\n          let screen_name = ev.target.getAttribute('data-screen-name');\n          this.$('.menu-btn').removeClass('active');\n          this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n          this.updateScreen(screen_name);\n      },\n\n      updateScreen: function (name) {\n          this.$('.screen-wrap').addClass('hidden');\n          this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n          this.scrollToTop();\n          this.updateActiveButton();\n      },\n\n      updateActiveButton: function () {\n          let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n              non_active = true;\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video') {\n              $active_screen.find('div.active').length && (non_active = false);\n          } else {\n              $active_screen.find('img:not(.hidden)').length && (non_active = false);\n          }\n          this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n      },\n\n      renderFiles: function (response) {\n          this.$(`.library-wrap[data-screen=\"${response.type}\"] .preloader-wrapper`).remove()\n          if (response.items.length){\n              response.items.forEach((item) => {\n                  let img = $(`<div class=\"image-item\"/>`);\n                  img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                  img.attr('data-src', item.file);\n                  img.attr('data-name', item.name);\n                  this.$(`.library-wrap[data-screen=\"${response.type}\"]`).append(img);\n              });\n          }\n      },\n\n      createLibrary: function () {\n          this.model.testGalleryTokenExpire(() => {\n              if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                  this.$('.library-wrap').html(env.templates.contacts.preloader())\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'image'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'image'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"image\"] .preloader-wrapper').remove()\n                      }\n                  });\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'video'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'video'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"video\"] .preloader-wrapper').remove()\n                      }\n                  });\n              }\n          });\n      },\n\n      setActiveImage: function (ev) {\n          let $target = $(ev.target),\n              $active_screen = this.$('.screen-wrap:not(.hidden)');\n          if ($target.hasClass('active'))\n              $target.removeClass('active');\n          else {\n              this.$('.library-wrap>div').removeClass('active');\n              $target.addClass('active');\n          }\n          this.updateActiveButton();\n      },\n\n      onFileInputChanged: function (ev) {\n          let target = ev.target,\n              files = [];\n          for (let i = 0; i < target.files.length; i++) {\n              files.push(target.files[i]);\n          }\n\n          if (files && files.length) {\n              this.parent.view.addFileMessage(files);\n              $(target).val('');\n              this.close();\n          }\n      },\n\n      onInputChanged: function (ev) {\n          if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n              return;\n          if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n              let url = ev.target.value.trim();\n              this.$('.image-preview img')[0].onload = () => {\n                  this.$('.image-preview img').removeClass('hidden');\n                  this.updateActiveButton();\n              };\n              this.$('.image-preview img').addClass('hidden')[0].src = url;\n              this.updateActiveButton();\n          } else {\n              this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n              this.updateActiveButton();\n          }\n      },\n\n      addMedia: function () {\n          if (this.$('.btn-add').hasClass('non-active'))\n              return;\n          let file, filename, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n          dfd.done((resolved_file) => {\n              this.parent.view.addFileMessage([resolved_file])\n              this.close();\n          });\n          this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n          this.$('.btn-add').addClass('hidden-disabled');\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' || $active_screen.attr('data-screen') == 'web-address') {\n              file = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-src') :\n                  $active_screen.find('img:not(.hidden)')[0].src;\n              filename = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-name') : '';\n\n              this.createFileFromURL(file, filename).then((file) => {\n                  dfd.resolve(file);\n              })\n          } else\n              dfd.resolve(this.current_file);\n      },\n\n      createFileFromURL: async function (url, filename) {\n          let response = await fetch(url);\n          let data = await response.blob();\n          let metadata = {\n              type: data.type\n          };\n          let file = new File([data], filename || url.split('#').shift().split('?').shift().split('/').pop() || 'file', metadata);\n          return file\n      },\n\n      close: function () {\n          this.$el.closeModal({ complete: () => {\n                  this.$el.detach();\n                  this.data.set('visible', false);\n              }\n          });\n      }\n  });\n\nxabber.ChatLocationView = xabber.BasicView.extend({\n    className: 'modal main-modal chat-location ',\n    template: templates.location_popup,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-apply\": \"sendLocation\",\n        \"click #map canvas\": \"closeLocationName\",\n        \"click .nominatim.ol-search input\": \"initializeScrollbar\",\n        \"focusout .nominatim.ol-search input\": \"destroyScrollbar\",\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.account = this.view.account;\n\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.initMap();\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    initMap: function () {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            this.$el.find('.modal-content').switchClass('popup', xabber.popup_coordinates);\n\n            let layers = [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n                coordinates = xabber.popup_coordinates ? ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857') : [-9639318.435625363, 1667475.03690917],\n                zoom = xabber.popup_coordinates ? 15 : 0,\n                placemark = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"48px\" height=\"48px\" viewBox=\"0 0 24 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#000000\" fill-rule=\"nonzero\"></path></g></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                }),\n                placemark_my_location = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"36px\" height=\"36px\"><circle class=\"outer\" cx=\"20\" cy=\"20\" r=\"16\" stroke=\"none\" stroke-width=\"1.5\" fill=\"none\" style=\"opacity: 0.6;\"></circle><circle class=\"inner\" cx=\"20\" cy=\"20\" r=\"8\" stroke=\"white\" stroke-width=\"1.5\" fill=\"none\"></circle></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                });\n\n            let map = new ol.Map\n            ({\ttarget: 'map',\n                view: new ol.View\n                ({\tzoom: zoom,\n                    center: coordinates\n                }),\n                interactions: ol.interaction_defaults({ altShiftDragRotate:false, pinchRotate:false }),\n                layers: layers,\n                overlays: [placemark, placemark_my_location]\n            });\n\n            let getCurrentPositionControl = function (e) {\n                navigator.geolocation.getCurrentPosition(success, error, options);\n            };\n\n            let options = {\n                enableHighAccuracy: true,\n                timeout: 5000,\n                maximumAge: 0\n            };\n\n            function success(pos) {\n                let crd = pos.coords;\n                map.getView().setCenter(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                placemark_my_location.show(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                map.getView().setZoom(17);\n                button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-gps\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\" id=\"mdi:crosshairs-gps\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n            };\n\n            function error(err) {\n                console.warn(`ERROR(${err.code}): ${err.message}`);\n            };\n\n            let button_geoposition = document.createElement('button');\n            button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-question\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\" id=\"mdi:crosshairs-question\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n            button_geoposition.addEventListener('click', getCurrentPositionControl, false);\n\n            let custom_element_position = document.createElement('div');\n\n            if (xabber.popup_coordinates) {\n                custom_element_position.className = 'geoposition placemark-exist ol-control ol-unselectable';\n            }\n            else {\n                custom_element_position.className = 'geoposition ol-control ol-unselectable';\n            }\n            custom_element_position.appendChild(button_geoposition);\n\n            let geoposition = new ol.control.Control({\n                className: 'myControl',\n                element: custom_element_position,\n                target: document.getElementById(\"myCustomControl\")\n            });\n\n            map.addControl(geoposition);\n\n            if (xabber.popup_coordinates) {\n                placemark.show(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                $('.ol-zoom.ol-unselectable.ol-control').addClass('placemark-exist');\n                let getPlacemarkPositionControl = function (e) {\n                    map.getView().setCenter(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                    map.getView().setZoom(15);\n                    $('.ol-location').show()\n\n                };\n\n                let button_placemark_position = document.createElement('button');\n                button_placemark_position.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n                button_placemark_position.addEventListener('click', getPlacemarkPositionControl, false);\n\n                let custom_element_placemark_position = document.createElement('div');\n                custom_element_placemark_position.className = 'placemark-position ol-control ol-unselectable';\n                custom_element_placemark_position.appendChild(button_placemark_position);\n\n                let placemark_position = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_placemark_position,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(placemark_position);\n\n                let custom_element_show_location_name = document.createElement('div');\n                custom_element_show_location_name.innerHTML = xabber.location_name || '';\n\n\n                custom_element_show_location_name.className = 'ol-location ol-control ol-unselectable';\n\n                let show_location_name = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_show_location_name,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(show_location_name);\n\n            }\n\n            if (!xabber.popup_coordinates) {\n\n                let send_buttom = document.createElement('button');\n                send_buttom.className = 'btn-apply mdi mdi-28px mdi-send';\n\n                let send_address_div = document.createElement('div');\n                send_address_div.setAttribute(\"id\", \"send_address\");\n                send_address_div.className = 'ol-send-address';\n\n                let send_div = document.createElement('div');\n                send_div.setAttribute(\"id\", \"send_text\");\n                send_div.className = 'ol-send-text';\n\n                let custom_element_send = document.createElement('div');\n                custom_element_send.className = 'ol-send ol-control ol-unselectable';\n                custom_element_send.appendChild(send_address_div);\n                custom_element_send.appendChild(send_div);\n                custom_element_send.appendChild(send_buttom);\n\n                let send = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_send,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(send);\n\n                let sLayer = new ol.layer.Vector({\n                    source: new ol.source.Vector(),\n                    style: new ol.style.Style({\n                        image: new ol.style.Circle({\n                            radius: 5,\n                            stroke: new ol.style.Stroke ({\n                                color: 'rgb(255,165,0)',\n                                width: 3\n                            }),\n                            fill: new ol.style.Fill({\n                                color: 'rgba(255,165,0,.3)'\n                            })\n                        }),\n                        stroke: new ol.style.Stroke ({\n                            color: 'rgb(255,165,0)',\n                            width: 3\n                        }),\n                        fill: new ol.style.Fill({\n                            color: 'rgba(255,165,0,.3)'\n                        })\n                    })\n                });\n\n                map.addLayer(sLayer);\n\n                let search = new ol.control.SearchNominatim (\n                    {\t//target: $(\".options\").get(0),\n                        polygon: $(\"#polygon\").prop(\"checked\"),\n                        reverse: true,\n                        position: true\t// Search, with priority to geo position\n                    });\n\n                map.addControl (search);\n\n                search.on('select', function(e){\n                    sLayer.getSource().clear();\n                    // Check if we get a geojson to describe the search\n                    if (e.search.geojson) {\n                        let format = new ol.format.GeoJSON();\n                        let f = format.readFeature(e.search.geojson, { dataProjection: \"EPSG:4326\", featureProjection: map.getView().getProjection() });\n                        sLayer.getSource().addFeature(f);\n                        let view = map.getView();\n                        let resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n                        let zoom = view.getZoomForResolution(resolution);\n                        let center = ol.extent.getCenter(f.getGeometry().getExtent());\n                        // redraw before zoom\n                        setTimeout(function(){\n                            view.animate({\n                                center: center,\n                                zoom: Math.min (zoom, 16)\n                            });\n                        }, 100);\n                    }\n                    else {\n                        map.getView().animate({\n                            center:e.coordinate,\n                            zoom: Math.max (map.getView().getZoom(),16)\n                        });\n                    }\n                });\n\n                function reverseGeocode(json) {\n                    if (!json[0].error) {\n                        let house_number = json[0].address.house_number ? ' ' + json[0].address.house_number : '',\n                            road = json[0].address.road ? json[0].address.road + house_number + ', ' : '',\n                            state = json[0].address.state ? json[0].address.state + ', ' : '',\n                            neighbourhood = json[0].address.neighbourhood ? json[0].address.neighbourhood + ', ' : '',\n                            allotments = json[0].address.allotments ? json[0].address.allotments + ', ' : '',\n                            village = json[0].address.village ? json[0].address.village + ', ' : '',\n                            city = json[0].address.city ? json[0].address.city + ', ' : '',\n                            country = json[0].address.country ? state + json[0].address.country : '',\n                            final_text = ''\n                        if ( !road ){\n                            final_text = neighbourhood + allotments + village + city + country\n                        }\n                        else {\n                            final_text = road + neighbourhood + allotments + village + city + state.replace(', ','')\n                        }\n                        $('#send_address').text(final_text);\n                    }\n                    else {\n                        $('#send_address').text(xabber.getString(\"location_fragment__address_error__title\"));\n                    }\n                }\n\n                map.on('click', function(e) {\n                    placemark.show(e.coordinate);\n                    search.reverseGeocode(e.coordinate, reverseGeocode);\n                    let coordinates = ol.proj.transform(e.coordinate, map.getView().getProjection(), 'EPSG:4326');\n                    $('.ol-control.ol-send').show();\n                    $('#send_text').text(coordinates[1].toFixed(6) + ':' + coordinates[0].toFixed(6));\n                    $('#output').text('geo:' + coordinates[1] + ',' + coordinates[0]);\n                    $('#lat').text(coordinates[1]);\n                    $('#lon').text(coordinates[0]);\n                });\n            }\n            window.setTimeout(function () { map.updateSize(); }, 200)\n        });\n    },\n\n    sendLocation: function (e) {\n        if (this.$('#output').val()) {\n            let body = this.$('#output').val(),\n                legacy_body = '',\n                start_idx = legacy_body.length,\n                end_idx = (body + legacy_body).length,\n                lat = this.$('#lat').val(),\n                lon = this.$('#lon').val(),\n                locations = [{\n                        lat: lat,\n                        lon: lon\n                    }],\n                mutable_content = [{\n                    start: start_idx,\n                    end: end_idx,\n                    type: 'geolocation'\n                    }],\n                attrs = {\n                    from_jid: this.account.get('jid'),\n                    locations: locations,\n                    mutable_content: mutable_content,\n                    message: this.$('#output').val(),\n                    begin: start_idx,\n                    end: end_idx\n                },\n                message = this.model.messages.create(attrs),\n                msg_id = message.get('msgid'),\n                stanza = $msg({\n                    to: this.model.get('jid'),\n                    type: 'chat',\n                    id: msg_id\n                });\n            stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up();\n            stanza.c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n            stanza.c('reference', {\n                xmlns: Strophe.NS.REFERENCE,\n                type: 'mutable',\n                begin: start_idx,\n                end: end_idx\n            }).c('geoloc', {\n                xmlns: Strophe.NS.GEOLOC,\n            }).c('lat').t(lat).up().c('lon').t(lon).up().up().up();\n            stanza.c('body').t(body).up();\n            if (this.model.get('encrypted') && this.account.omemo) {\n                stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n                if ($(stanza.tree()).children('body').length) {\n                    stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                    $(stanza.tree()).children('body').detach()\n                }\n                if ($(stanza.tree()).children('reference').length) {\n                    $(stanza.tree()).children('reference').each((idx, reference) => {\n                        stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                    });\n                    $(stanza.tree()).children('reference').detach()\n                }\n                stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n                stanza.c('from', {jid: this.account.get('jid')}).up().up()\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.omemo.encrypt(this.model.contact, stanza).then((msg) => {\n                    if (msg) {\n                        stanza = msg.message;\n                        message.set('trusted', msg.is_trusted);\n                    }\n                    this.account.sendMsg(stanza);\n                });\n            } else {\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.sendMsg(stanza);\n            }\n        }\n        this.close();\n    },\n\n    closeLocationName: function (e) {\n        this.$el.find('.ol-location').hide()\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    initializeScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar(\n            _.extend(this.ps_settings || {}, xabber.ps_settings)\n        );\n    },\n\n    destroyScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar('destroy');\n    },\n});\n\nxabber.ChatBottomView = xabber.BasicView.extend({\n    className: 'chat-bottom-wrap',\n    ps_selector: '.message-reference-preview-container',\n    template: templates.chat_bottom,\n    avatar_size: constants.AVATAR_SIZES.CHAT_BOTTOM,\n    mention_avatar_size: constants.AVATAR_SIZES.MENTION_ITEM,\n\n    events: {\n        \"click\": \"onClickBottom\",\n        \"click .ql-editor\": \"focusOnInput\",\n        \"click .my-avatar\": \"showAccountSettings\",\n        \"keyup .input-message .rich-textarea\": \"keyUp\",\n        \"keydown .input-message .rich-textarea\": \"keyDown\",\n        \"change .attach-file input\": \"onFileInputChanged\",\n        \"click .attach-location\": \"showLocationPopup\",\n        \"click .attach-media\": \"showMediaPopup\",\n        \"mouseup .message-input-panel\": \"stopWritingVoiceMessage\",\n        \"mousedown .attach-voice-message\": \"writeVoiceMessage\",\n        \"click .chat-mention\": \"onMentionButtonClick\",\n        \"click .close-forward\": \"unsetForwardedMessages\",\n        \"click .close-attachments\": \"removeAttachments\",\n        \"click .send-message\": \"submit\",\n        \"click .markup-text\": \"onShowMarkupPanel\",\n        \"click .reply-message\": \"replyMessages\",\n        \"click .forward-message\": \"forwardMessages\",\n        \"click .pin-message\": \"pinMessage\",\n        \"click .copy-message\": \"copyMessages\",\n        \"click .edit-message\": \"showEditPanel\",\n        \"click .delete-message\": \"deleteMessages\",\n        \"click .close-message-panel\": \"resetSelectedMessages\",\n        \"click .mention-item\": \"inputMention\",\n        \"click .format-text\": \"updateMarkupPanel\",\n        \"click .link-message-reference .mdi-close\": \"removeLinkReference\",\n        \"click .preview-preloader-container .preview-cancel-preloader\": \"stopLoadingLinkReference\",\n        \"click .message-reference-preview-item-file .mdi-close\": \"removeFileSnippet\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.click_counter = 0;\n        let rich_textarea_wrap = this.$('.rich-textarea-wrap');\n        let bindings = {\n            enter: {\n                key: 13,\n                handler: function(range) {\n                    if (xabber.settings.hotkeys !== \"enter\")\n                        this.quill.insertText(range.index, \"\\n\");\n                }\n            },\n            arrow_up: {\n                key: constants.KEY_ARROW_UP,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length)  {\n                            let $prev_elem = active_item.prev('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$prev_elem.length) {\n                                $prev_elem = this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                                this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            }\n                            $prev_elem.addClass('active');\n                            if ($prev_elem.length && ($prev_elem[0].offsetTop <= this.$('.mentions-list')[0].scrollTop))\n                                this.$('.mentions-list')[0].scrollTop = $prev_elem[0].offsetTop;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_down: {\n                key: constants.KEY_ARROW_DOWN,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length) {\n                            let $next_elem = active_item.next('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$next_elem.length) {\n                                $next_elem = this.$('.mentions-list').children('.mention-item').first();\n                                this.$('.mentions-list')[0].scrollTop = 0;\n                            }\n                            $next_elem.addClass('active');\n                            if ($next_elem.length && ($next_elem[0].offsetTop + $next_elem[0].clientHeight >= this.$('.mentions-list')[0].scrollTop + this.$('.mentions-list')[0].clientHeight))\n                                this.$('.mentions-list')[0].scrollTop = $next_elem[0].offsetTop - this.$('.mentions-list')[0].clientHeight + $next_elem[0].clientHeight;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = 0;\n                            this.$('.mentions-list').children('.mention-item').first().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_left: {\n                key: constants.KEY_ARROW_LEFT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            },\n            arrow_right: {\n                key: constants.KEY_ARROW_RIGHT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            }\n        };\n        this.quill = new Quill(rich_textarea_wrap[0], {\n            modules: {\n                keyboard: {\n                    bindings: bindings\n                },\n                toolbar: [\n                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                    this.model.get('group_chat') ? ['mention'] : [],\n                    ['clean']\n                ]\n            },\n            formats: ['bold', 'italic', 'underline', 'strike', 'blockquote', 'clean', 'emoji', 'mention'],\n            placeholder: xabber.getString(this.model.get('encrypted') ? \"chat_bottom__hint_default_encrypted\" : \"chat_bottom__hint_default\"),\n            scrollingContainer: '.rich-textarea',\n            theme: 'snow'\n        });\n        this.quill.container.firstChild.classList.add('rich-textarea');\n        this.$('.ql-mention').prop('disabled', true);\n        this.$('.ql-mention').append('<div class=\"chat-mention\" =\"\">@</div>');\n        this.contact = this.view.contact;\n        this.account = this.view.account;\n        this.fwd_messages = [];\n        this.edit_message = null;\n        this.stopped_loading_link_reference = false;\n        this.link_references = [];\n        this.link_reference_exempted = [];\n        this.currently_loaded_link_references = [];\n        this.attached_files = [];\n        this.loading_link_reference = false;\n        this.$('.account-jid').text(this.account.get('jid'));\n        this.updateAvatar();\n        this.quill.on(\"text-change\", this.onChangedText, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on('trusting_updated', this.updateEncrypted, this);\n        if (this.contact) {\n            this.contact.on(\"change:blocked\", this.onBlockedUpdate, this);\n            this.contact.on('update_my_info', this.updateInfoInBottom, this);\n        }\n        this.model.on(\"reply_selected_messages\", this.replyMessages, this);\n        this.model.on(\"forward_selected_messages\", this.forwardMessages, this);\n        this.model.on(\"copy_selected_messages\", this.copyMessages, this);\n        this.model.on(\"delete_selected_messages\", this.deleteMessages, this);\n        this.model.on(\"edit_selected_message\", this.showEditPanel, this);\n        this.model.on(\"pin_selected_message\", this.pinMessage, this);\n        this.model.on(\"reset_selected_messages\", this.resetSelectedMessages, this);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            rich_textarea = $rich_textarea[0],\n            $rich_textarea_wrap = $rich_textarea.parent('.rich-textarea-wrap'),\n            $placeholder = $rich_textarea.siblings('.placeholder');\n        rich_textarea.onpaste = this.onPaste.bind(this);\n        rich_textarea.oncut = this.onCut.bind(this);\n        rich_textarea.ondragenter = (ev) => {\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__drag_and_drop__text_drop_files_here\"));\n            $rich_textarea_wrap.addClass('file-drop');\n        };\n        rich_textarea.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n        rich_textarea.ondragleave = (ev) => {\n            if ($(ev.relatedTarget).closest('.rich-textarea').length)\n                return;\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n        };\n        rich_textarea.ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [];\n            this.view.addFileMessage(files);\n        };\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        let onloaded_sprites = 0,\n            i = 0,\n            all_sprites = Object.keys(Emoji.all).length;\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`);\n            $(`<div id=${emoji_list} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: emoji_list})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: emoji_list, title: xabber.getString(constants.EMOJI_LIST_NAME(emoji_list)), tag_name: 'a', emoji_size: 20}));\n            let img = new Image();\n            img.onload = () => {\n                onloaded_sprites++;\n                (onloaded_sprites === all_sprites) && $emoji_panel_wrap.find('.uploading-emoticons').detach();\n            };\n            img.src = constants.ASSETS_URL_PREFIX + 'assets/images/emoji/spritesheet' + i++ + '.png';\n        }\n        let window_onclick = function (ev) {\n            if ($(ev.target).closest('.emoticons-panel-wrap').length || $(ev.target).closest('.insert-emoticon').length)\n                return;\n            $emoji_panel_wrap.removeClass('opened');\n            window.removeEventListener(\"click\" , window_onclick);\n        };\n        $emoji_panel.perfectScrollbar(\n                _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.click((ev) => {\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if ($emoji_panel_wrap.hasClass('opened')) {\n                $emoji_panel_wrap.removeClass('opened');\n                window.removeEventListener( \"click\" , window_onclick);\n            }\n            else {\n                $emoji_panel_wrap.addClass('opened');\n                window.addEventListener( \"click\" , window_onclick);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(() => {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev.button)\n                return;\n            let $target = $(ev.target),\n                $target_emoji = $target.closest('.emoji-wrap').find('.emoji');\n            if ($target.closest('.emoji-menu').length)\n                return;\n            $target_emoji.length && this.typeEmoticon($target_emoji.data('emoji'));\n        });\n        this.renderLastEmoticons();\n    },\n\n    render: function (options) {\n        this.$('.message-input-panel').hideIf(options.blocked);\n        this.$('.blocked-msg').showIf(options.blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', options.blocked);\n        this.updateAvatar();\n        this.updateEncrypted();\n        let http_upload = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        this.messages_arr = this.content_view.$el.hasClass('participant-messages-wrap') && this.account.participant_messages || this.content_view.$el.hasClass('messages-context-wrap') && this.account.context_messages || this.model.messages;\n        this.renderLastEmoticons();\n        this.$('.attach-file').showIf(http_upload);\n        this.$('.attach-location').showIf(xabber.settings.mapping_service);\n        this.$('.attach-media').showIf(this.account.get('gallery_token') && this.account.get('gallery_url'));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left', !xabber.settings.mapping_service || !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left-extra', !xabber.settings.mapping_service && !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        if (this.model.get('group_chat')) {\n            this.updateInfoInBottom();\n        }\n        else {\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n        this.focusOnInput();\n        this.manageSelectedMessages();\n        xabber.chat_body.updateHeight();\n        return this;\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.message-actions-panel .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        (Math.max.apply(null, widths) !== 0) && this.$('.message-actions-panel .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateEncrypted: function () {\n        this.$el.children('.preloader-wrapper').detach();\n        this.$el.children('.omemo-disabled').detach();\n        this.view.$el.removeClass('encrypted');\n        this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('encryption-warning').html(\"\");\n        this.$el.attr('data-trust', null);\n        this.$el.attr('data-contact-trust', null);\n        this.$el.find('.warning-wrap').detach();\n        if (!this.model.get('encrypted'))\n            return;\n        if (this.account.omemo) {\n            this.$el.addClass('loading');\n            this.$el.prepend(env.templates.contacts.preloader());\n            this.account.omemo.checkOwnFingerprints().then((is_trusted) => {\n                if (is_trusted == 'none' || is_trusted == 'error') {\n                    let is_scrolled_bottom = this.view.isScrolledToBottom();\n                    this.$el.attr('data-trust', is_trusted);\n                    this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_trusted);\n                    this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_trusted);\n                    this.view.$el.attr('data-trust', is_trusted);\n                    this.$el.removeClass('loading');\n                    this.$el.children('.preloader-wrapper').detach();\n                    if (is_trusted == 'none')\n                        this.$el.prepend(templates.encryption_warning({color: 'amber', message: xabber.getString(\"omemo__alert_new_device_yours__text_new_device\")}));\n                    else\n                        this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_yours__text_keys_changed\")}));\n                    xabber.chat_body.updateHeight();\n                    is_scrolled_bottom && this.view.scrollToBottom();\n                    this.account.omemo.checkContactFingerprints(this.contact);\n                    (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                } else {\n                    this.account.omemo.checkContactFingerprints(this.contact).then((obj) => {\n                        let is_contact_trusted = obj.trust,\n                            unverified_counter = obj.unverified_counter;\n                        let is_scrolled_bottom = this.view.isScrolledToBottom();\n                        this.$el.removeClass('loading');\n                        this.$el.children('.preloader-wrapper').detach();\n                        if (is_contact_trusted === 'nil') {\n                            this.$el.prepend($(`<div class=\"warning-wrap no-fingerprints\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            return;\n                        }\n                        if (is_contact_trusted === 'error') {\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_partner__text_keys_changed\")}));\n                        } else {\n                            if (is_contact_trusted === 'none') {\n                                this.view.$el.addClass('encrypted');\n                                this.view.$('.chat-notification').removeClass('hidden').addClass('encryption-warning').attr('data-unverified-device-count', unverified_counter).html(templates.content_encryption_warning({message: xabber.getString(\"omemo__alert_new_device_partner__text_new_device\")}));\n                            }\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                        }\n                        this.view.$el.attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_contact_trusted);\n                        xabber.chat_body.updateHeight();\n                        is_scrolled_bottom && this.view.scrollToBottom();\n                        (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                    });\n                }\n            });\n        } else {\n            this.$el.addClass('loading');\n            this.$el.prepend($('<div class=\"omemo-disabled warning-wrap\"/>').text(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\")));\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (this.account.omemo) {\n            if (this.$el.attr('data-trust') !== undefined) {\n                this.account.showSettings(null, 'tokens');\n            } else if (this.$el.attr('data-contact-trust') !== undefined) {\n                let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n                peer.fingerprints.open();\n            }\n        } else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    onBlockedUpdate: function () {\n        if (!this.isVisible())\n            return;\n        let is_blocked = this.model.get('blocked');\n        this.$('.message-input-panel').hideIf(is_blocked);\n        this.$('.blocked-msg').showIf(is_blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', is_blocked);\n    },\n\n    onClickBottom: function (ev) {\n        (this.$el.hasClass('chat-bottom-blocked-wrap') && !$(ev.target).closest('.message-actions-panel').length) && this.contact.showDetails(xabber.body.screen.get('name'));\n        if ($(ev.target).closest('.ql-editor.rich-textarea').length) {\n            if (!this.quill.getText().trim().length) {\n                if (++this.click_counter === 3) {\n                    this.click_counter = 0;\n                    this.setOneLiner();\n                }\n            }\n        }\n    },\n\n    updateInfoInBottom: function () {\n        if (this.contact && this.contact.my_info) {\n            let nickname = this.contact.my_info.get('nickname'),\n                badge = this.contact.my_info.get('badge'),\n                avatar = this.contact.my_info.get('b64_avatar'),\n                role = this.contact.my_info.get('role');\n            if (nickname) {\n                this.$('.account-jid').hide();\n                this.$('.account-nickname').show().text(nickname);\n            }\n            else\n                this.$('.account-nickname').hide();\n            if (badge)\n                this.$('.account-badge').show().text(badge);\n            else\n                this.$('.account-badge').hide();\n            if (role && role != 'member')\n                this.$('.account-role').show().text(utils.pretty_name(role));\n            else\n                this.$('.account-role').hide();\n            this.$('.input-toolbar').emojify('.account-badge', {emoji_size: 16});\n            if (!avatar && this.contact.my_info.get('avatar_url'))\n                avatar = this.contact.my_info.get('avatar_url');\n            if (!avatar && this.account.cached_image)\n                avatar = this.account.cached_image;\n            !avatar && (avatar = Images.getDefaultAvatar(nickname));\n            this.$('.my-avatar.circle-avatar').setAvatar(avatar, this.avatar_size);\n        }\n        else {\n            this.$('.account-jid').show();\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n    },\n\n    updateAvatar: function () {\n        let image;\n        if (this.contact && this.contact.get('group_chat')) {\n            if (this.contact.my_info){\n                if (this.contact.my_info.get('b64_avatar'))\n                    image = this.contact.my_info.get('b64_avatar');\n                if (!image && this.contact.my_info.get('avatar_url'))\n                    image = this.contact.my_info.get('avatar_url');\n                if (!image && this.account.cached_image)\n                    image = this.account.cached_image;\n            }\n            !image && (image = Images.getDefaultAvatar(this.contact.my_info && this.contact.my_info.nickname || this.account.get('jid')));\n        }\n        else\n            image = this.account.cached_image;\n        this.$('.my-avatar.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    focusOnInput: function () {\n        if (!xabber.body.$el.siblings('#modals').children('.open:not(.collapsed):not(.plyr-player-popup-view)').length){\n            this.quill.enable();\n            this.quill.focus();\n        } else {\n            this.quill.blur();\n            this.quill.disable();\n        }\n        return this;\n    },\n\n    moveCursorToEnd: function () {\n        this.quill.root.focus();\n        let range = document.createRange(),\n            sel = window.getSelection(),\n            target = this.quill.root.lastElementChild\n            && this.quill.root.lastElementChild.lastChild ? this.quill.root.lastElementChild.lastChild : this.quill.root.lastElementChild;\n        range.selectNodeContents(target);\n        range.collapse(false);\n        sel.removeAllRanges();\n        sel.addRange(range);\n        range.detach(); // optimization\n        this.quill.root.scrollTop = this.quill.root.scrollHeight;\n    },\n\n    keyDown: function (ev) {\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') ||\n                ev.keyCode === constants.KEY_BACKSPACE ||\n                ev.keyCode === constants.KEY_DELETE) {\n            return;\n        }\n        if (ev.keyCode === constants.KEY_ENTER || ev.keyCode === 10) {\n            if (this.$('.mentions-list').css('display') !== 'none') {\n                let active_item = this.$('.mentions-list').children('.active.mention-item');\n                active_item.length && active_item.click();\n                ev.preventDefault();\n                return;\n            }\n            let send_on_enter = xabber.settings.hotkeys === \"enter\";\n            if ((send_on_enter && ev.keyCode === constants.KEY_ENTER && !ev.shiftKey) ||\n                    (!send_on_enter && ev.ctrlKey)) {\n                ev.preventDefault();\n                this.submit();\n                return;\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().trim() && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n    },\n\n    displayMicrophone: function () {\n        this.$('.mdi-send').addClass('hidden');\n        this.$('.attach-voice-message').removeClass('hidden');\n    },\n\n    displaySend: function () {\n        this.$('.mdi-send').removeClass('hidden');\n        this.$('.attach-voice-message').addClass('hidden');\n    },\n\n    updateMarkupPanel: function (ev) {\n        let $ic_markup = $(ev.target).closest('.format-text');\n        $ic_markup.toggleClass('active');\n        if ($ic_markup.hasClass('active')) {\n            this.$('.ql-toolbar.ql-snow').show();\n            this.$('.last-emoticons').hide();\n        }\n        else {\n            this.$('.ql-toolbar.ql-snow').hide();\n            this.$('.last-emoticons').show();\n        }\n    },\n\n    setOneLiner: function () {\n        let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n            placeholder = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n        if (!placeholder) {\n            this.setOneLiner();\n            return;\n        }\n        this.updatePlaceholder(placeholder);\n    },\n\n    setDefaultPlaceholder: function () {\n        let placeholder = this.model.get('encrypted') ? xabber.getString(\"chat_bottom__hint_default_encrypted\") : xabber.getString(\"chat_bottom__hint_default\");\n        this.updatePlaceholder(placeholder);\n    },\n\n    updatePlaceholder: function (placeholder) {\n        this.quill.root.setAttribute('data-placeholder', placeholder);\n    },\n\n    changeEncryption: function () {\n        this.model.set('encrypted', !this.model.get('encrypted'));\n    },\n\n    getParticipantsList: function () {\n        let list = [];\n        this.contact.participants.each((participant) => {\n            list.push(participant.get('nickname') || participant.get('jid') || participant.get('id'));\n        });\n        return list.join(', ');\n    },\n\n    onChangedText: function () {\n        let current_height = this.$el.height(),\n            quill_textarea = $(this.quill.container).find('.rich-textarea'),\n            quill_current_height = quill_textarea.prop('scrollHeight');\n        if (quill_current_height !== this.text_input_height) {\n            if (this.text_input_height < quill_current_height){\n                quill_textarea.scrollTop(quill_current_height);\n            }\n            this.text_input_height = quill_current_height;\n        }\n\n        if (current_height !== this.bottom_height) {\n            this.bottom_height = current_height;\n            this.view.scrolled_to_bottom = this.view.isScrolledToBottom();\n        }\n        clearTimeout(this._timeout_textchange);\n        this._timeout_textchange = setTimeout(() => {\n            this.updateOpenGraphReference(this.quill.getText())\n        }, 500);\n    },\n\n    updateMentionsList: function (mention_text) {\n        mention_text = (mention_text || \"\").toLowerCase();\n        this.contact.searchByParticipants(mention_text, (participants) => {\n            if (participants.length || xabber.getString(\"chat_bottom__mentions_list__item_everyone\").toLowerCase().indexOf(mention_text) > -1 || mention_text === \"*\" || 'all'.indexOf(mention_text) > -1 || 'все'.indexOf(mention_text) > -1) {\n                this.$('.mentions-list').html(\"\").show().perfectScrollbar({theme: 'item-list'});\n                this.$('.mentions-list')[0].scrollTop = 0;\n                participants.forEach((participant) => {\n                    let attrs = _.clone(participant.attributes);\n                    if (!attrs.id)\n                        return;\n                    attrs.nickname = attrs.nickname ? Strophe.xmlescape(attrs.nickname) : attrs.id;\n                    let mention_item = $(templates.group_chats.mention_item(attrs));\n                    mention_item.find('.circle-avatar').setAvatar(participant.get('b64_avatar') || utils.images.getDefaultAvatar(participant.get('nickname') || participant.get('jid') || participant.get('id')), this.mention_avatar_size);\n                    mention_item.find('.nickname').text().replace(mention_text, mention_text.bold());\n                    this.$('.mentions-list').append(mention_item);\n                });\n                let mention_all = $(templates.group_chats.mention_item({jid: \"\", nickname: xabber.getString(\"chat_bottom__mentions_list__item_everyone\"), id: \"\"}));\n                mention_all.find('.circle-avatar').setAvatar(this.contact.cached_image, this.mention_avatar_size);\n                mention_all.find('.one-line.jid').text(this.getParticipantsList());\n                this.$('.mentions-list').append(mention_all);\n                this.$('.mentions-list').children('.mention-item').first().addClass('active');\n            } else\n                this.$('.mentions-list').html(\"\").hide();\n        });\n    },\n\n    onMentionButtonClick: function () {\n        if (this.$('.ql-mention').hasClass('ql-active')){\n            this.$('.ql-mention').prop('disabled', false);\n            this.$('.ql-mention').click();\n            this.$('.ql-mention').prop('disabled', true);\n\n            return;\n        }\n        let selection = this.quill.getSelection() ? this.quill.getSelection().index : (this.quill.getLength() - 1);\n        this.quill.insertText(selection, ' @ ', 'user')\n        this.quill.setSelection(selection + 2, 0)\n        let mention_text = \"\";\n        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n            this.updateMentionsList(mention_text);\n        } else {\n            this.contact.participants.participantsRequest({version: 0}, () => {\n                this.updateMentionsList(mention_text);\n            });\n        }\n\n    },\n\n    inputMention: function (ev) {\n        ev && ev.preventDefault();\n        let $rich_textarea = this.$('.rich-textarea'),\n            $participant_item = $(ev.target).closest('.mention-item'),\n            nickname = $participant_item.data('nickname'),\n            id = $participant_item.data('id') || \"\",\n            jid = !this.contact.get('incognito_chat') && $participant_item.data('jid') || \"\",\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\"),\n            caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n            mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n            mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n            to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji(),\n            mentions_at = to_caret_text && Array.from(to_caret_text.matchAll(mention_at_regexp)) || [],\n            mentions_plus = to_caret_text && Array.from(to_caret_text.matchAll(mention_plus_regexp)) || [],\n            at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n            plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n            mention_position = Math.max(at_position, plus_position),\n            mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\");\n        (mention_text.length && mention_text[0].match(/\\s/)) && mention_position++;\n        mention_text = mention_text.replace(/\\s?(@|[+])/, \"\");\n        this.$('.mentions-list').hide();\n        this.quill.deleteText(mention_position, (mention_text.length + 1));\n        if (!nickname.length) {\n            if (id.length)\n                nickname = id;\n            else\n                return;\n        }\n        this.insertMention({jid: jid, id: id, nickname: nickname, position: mention_position});\n        this.focusOnInput();\n    },\n\n    insertMention: function (options) {\n        if (!options)\n            return;\n        let id = options.id, jid = options.jid, nickname = options.nickname,\n            is_me = !id && !jid || this.account.get('jid') === jid || this.contact.my_info && this.contact.my_info.get('id') === id,\n            attrs = {jid: jid, id: id, nickname: Strophe.xmlescape(nickname), is_me: is_me},\n            position = options.position;\n        this.quill.insertEmbed(position, 'mention', JSON.stringify(attrs));\n        this.quill.pasteHTML(position + nickname.length, '<text> </text>');\n        this.quill.setSelection(position + nickname.length + 1, 0);\n    },\n\n    showAccountSettings: function () {\n        if (this.contact.get('group_chat')) {\n            if (this.contact.my_info && this.contact.my_rights) {\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n            } else\n                this.contact.getMyInfo(() => {\n                    this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                    this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n                });\n        } else {\n            this.account.showSettings();\n        }\n    },\n\n    keyUp: function (ev) {\n        let $rich_textarea = $(ev.target).closest('.rich-textarea'),\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\");\n        if (text) {\n            this.click_counter = 0;\n            this.setDefaultPlaceholder();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            if (!text) {\n                let $msg = this.view.$(`.chat-message[data-from=\"${this.account.get('jid')}\"]`).last();\n                (!$msg.length && this.contact.participants) && ($msg = this.view.$(`.chat-message[data-from=\"${this.contact.participants.find(m => m.get('jid') === this.account.get('jid')).get('id')}\"]`).last());\n                let edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n                if (!edit_msg)\n                    return;\n                this.edit_message = edit_msg;\n                this.setEditedMessageAttachments(edit_msg);\n                this.setEditedMessage(edit_msg);\n            }\n        }\n        if ((!text || text == \"\\n\") && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length))\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') && !this.edit_message) {\n            ev.preventDefault();\n            if (this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0) {\n                let $elem = this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').last();\n                if ($elem.hasClass('link-message-reference')){\n                    let url = $elem.attr('data-original-url');\n                    if (url) {\n                        $elem.remove();\n                        this.removeLinkReferenceByUrl(url);\n                    }\n                } else {\n                    let id = $elem.attr('data-id');\n                    if (id) {\n                        $elem.remove();\n                        this.removeFileSnippetById(id);\n                    }\n                }\n            } else {\n                this.unsetForwardedMessages();\n            }\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            this.unsetForwardedMessages();\n        } else {\n            if (ev.keyCode === constants.KEY_ARROW_UP || ev.keyCode === constants.KEY_ARROW_DOWN) {\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_ARROW_LEFT || ev.keyCode === constants.KEY_ARROW_RIGHT) && this.$('.mentions-list').css('display') !== 'none') {\n                this.$('.mentions-list').hide();\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_BACKSPACE || ev.keyCode === constants.KEY_DELETE) && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length)) {\n                if (!text || text == \"\\n\") {\n                    if (this.$('.fwd-messages-preview').hasClass('hidden'))\n                        this.displayMicrophone();\n                    else\n                        this.displaySend();\n                    $rich_textarea.flushRichTextarea();\n                }\n            }\n            if (ev.keyCode === constants.KEY_SPACE) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji();\n                if (to_caret_text[caret_position - 2] && to_caret_text[caret_position - 2].match(/@|[+]/)) {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n            }\n            if (this.model.get('group_chat')) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n                    mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replace(/\\n$/, \"\").replaceEmoji(),\n                    mentions_at = Array.from(to_caret_text.matchAll(mention_at_regexp)),\n                    mentions_plus = Array.from(to_caret_text.matchAll(mention_plus_regexp)),\n                    at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n                    plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n                    mention_position = Math.max(at_position, plus_position);\n                if (this.quill.selection.lastRange && this.quill.getLeaf(this.quill.selection.lastRange.index)[0].parent.domNode.tagName.toLowerCase() === 'mention') {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n                if (!(caret_position > -1) || mention_position === -1) {\n                    this.$('.mentions-list').hide();\n                }\n                if (mention_position > -1) {\n                    let mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\").replace(/\\s?(@|[+])/, \"\");\n                        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n                            this.updateMentionsList(mention_text);\n                        } else {\n                            this.contact.participants.participantsRequest({version: 0}, () => {\n                                this.updateMentionsList(mention_text);\n                            });\n                        }\n                }\n                else\n                    this.$('.mentions-list').hide();\n            }\n        }\n        $rich_textarea.updateRichTextarea();\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onCut: function () {\n        if (this.$('.fwd-messages-preview').hasClass('hidden'))\n            this.displayMicrophone();\n        else {\n            this.displaySend();\n        }\n    },\n\n    onPaste: function (ev) {\n        ev.preventDefault();\n        let $rich_textarea = $(ev.target),\n            clipboard_data = ev.clipboardData;\n        if (clipboard_data) {\n            if (clipboard_data.files.length > 0) {\n                let image_from_clipboard = clipboard_data.files[clipboard_data.files.length - 1],\n                    blob_image = window.URL.createObjectURL(new Blob([image_from_clipboard])),\n                    options = { blob_image_from_clipboard: blob_image};\n                this.view.addFileMessage([image_from_clipboard]);\n                this.focusOnInput();\n            }\n            else if (clipboard_data.items.length > 0) {\n                let image_from_clipboard = clipboard_data.items[clipboard_data.items.length - 1];\n                if (image_from_clipboard.kind === 'file') {\n                    let blob = image_from_clipboard.getAsFile(),\n                        reader = new FileReader(), deferred = new $.Deferred();\n                    reader.onload = function(event){\n                        let options = { blob_image_from_clipboard: event.target.result};\n                        deferred.resolve();\n                        this.focusOnInput();\n                    };\n                    deferred.done(() => {\n                        blob.name = 'clipboard.png';\n                        this.view.addFileMessage([blob]);\n                    });\n                    reader.readAsDataURL(blob);\n                }\n                else {\n                    let text = _.escape(clipboard_data.getData('text')),\n                        arr_text = Array.from(text);\n                    arr_text.forEach((item, idx) => {\n                        if (item == '\\n')\n                            arr_text.splice(idx, 1, '</p><p>');\n                    });\n                    text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                    window.document.execCommand('insertHTML', false, text);\n                }\n            }\n            else {\n                let text = _.escape(clipboard_data.getData('text')),\n                    arr_text = Array.from(text);\n                arr_text.forEach((item, idx) => {\n                    if (item == '\\n')\n                        arr_text.splice(idx, 1, '</p><p>');\n                    if (item == ' ')\n                        arr_text.splice(idx, 1, '&nbsp');\n                });\n                text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                window.document.execCommand('insertHTML', false, text);\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\") && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files && files.length) {\n            this.view.addFileMessage(files);\n            $(target).val('');\n        }\n    },\n\n    updateOpenGraphReference: function (text) {\n        if (!(this.account.get('gallery_token') && this.account.get('gallery_url')))\n            return;\n        let url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g,\n            list = text && text.match(url_regexp);\n        list = _.difference(list, this.link_reference_exempted);\n        list = _.difference(list, this.currently_loaded_link_references);\n        if (list && list.length){\n            this.stopped_loading_link_reference = false;\n            this.$('.preview-preloader-container').removeClass('hidden');\n            let request_count = 0;\n            this.link_reference_request_timestamp = Date.now();\n            let request_timestamp = this.link_reference_request_timestamp;\n            list.forEach((item, idx) => {\n                this.account.getOpenGraphData(item, (res) => {\n                    if (this.stopped_loading_link_reference || !(request_timestamp === this.link_reference_request_timestamp))\n                        return;\n                    if (this.currently_loaded_link_references.includes(item)){\n                        request_count++;\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        return;\n                    } else {\n                        this.currently_loaded_link_references = this.currently_loaded_link_references.concat([item]);\n                    }\n                    let dfd = new $.Deferred();\n                    dfd.done(() => {\n                        request_count++;\n                        this.displaySend();\n                        this.$('.message-reference-preview').removeClass('hidden');\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        res.original_text = item\n                        this.$('.message-reference-preview-container').append($(templates.messages.link_reference({\n                            item: res,\n                            domain: res.url ? utils.getDomainFromUrl(res.url) : res.site_name,\n                            url: null\n                        })));\n                        this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n                            type: 'image',\n                            closeOnContentClick: true,\n                            fixedContentPos: true,\n                            mainClass: 'mfp-no-margins mfp-with-zoom',\n                            image: {\n                                verticalFit: true,\n                                titleSrc: function(item) {\n                                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                                }\n                            },\n                            zoom: {\n                                enabled: true,\n                                duration: 300\n                            }\n                        });\n                        this.link_references = this.link_references.concat(res);\n                        xabber.chat_body.updateHeight();\n                        this.scrollToBottom();\n                    });\n                    if ((res.image_height && res.image_width) || !res.image){\n                        dfd.resolve()\n                    } else {\n                        let img = new Image();\n                        img.onload = (image) => {\n                            res.image_height = img.height;\n                            res.image_width = img.width;\n                            dfd.resolve()\n                        };\n                        img.onerror = img.onabort = (image) => {\n                            res.image = undefined;\n                            dfd.resolve()\n                        };\n                        img.src = res.image;\n                    }\n                }, (err) => {\n                    this.link_reference_exempted = this.link_reference_exempted.concat([item]);\n                    request_count++;\n                    if (request_count === list.length)\n                        this.$('.preview-preloader-container').addClass('hidden');\n                })\n\n            });\n        }\n    },\n\n    removeAttachments: function () {\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n    },\n\n    stopLoadingLinkReference: function () {\n        this.$('.preview-preloader-container').addClass('hidden');\n        this.stopped_loading_link_reference = true;\n    },\n\n    removeLinkReference: function (ev) {\n        let $elem = $(ev.target).closest('.link-message-reference'),\n            url = $elem.attr('data-original-url');\n        $elem.remove();\n        this.removeLinkReferenceByUrl(url);\n    },\n\n    removeLinkReferenceByUrl: function (url) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = this.link_references.filter(item => item.original_text != url);\n        this.currently_loaded_link_references = this.currently_loaded_link_references.filter(item => item != url);\n        this.link_reference_exempted = this.link_reference_exempted.concat([url]);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllLinkReferences: function () {\n        this.stopLoadingLinkReference();\n        this.$('.message-reference-preview-container .link-message-reference').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = [];//\n        this.currently_loaded_link_references = [];//\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    addFileSnippets: function (files) {\n        if (files && (this.attached_files.length + files.length) > 10){\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        if (this.edit_message)\n            return;\n        files && files.length && this.$('.message-reference-preview').removeClass('hidden');\n        files && files.length && this.displaySend();\n        files.forEach((file) => {\n            let id = uuid();\n            file.uid = id;\n            this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                file: file,\n                uid: id,\n                blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                filesize: utils.pretty_size(file.size),\n                typeicon: utils.file_type_icon(file.type),\n                filetype: utils.pretty_file_type(file.type),\n            })));\n            this.attached_files = this.attached_files.concat([file]);\n            xabber.chat_body.updateHeight();\n            this.scrollToBottom();\n        });\n        files && files.length && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    removeFileSnippet: function (ev) {\n        let $elem = $(ev.target).closest('.message-reference-preview-item-file'),\n            id = $elem.attr('data-id');\n        $elem.remove();\n        this.removeFileSnippetById(id);\n    },\n\n    removeFileSnippetById: function (id) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = this.attached_files.filter(item => item.uid != id);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllFileSnippets: function (ev) {\n        this.$('.message-reference-preview .message-reference-preview-item-file').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = [];\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    setEditedMessageAttachments: function (edit_msg, is_upload) {\n        !is_upload && this.$('.attach-file input').attr('disabled', true);\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n        let files = edit_msg.get('files') || [],\n            images = edit_msg.get('images') || [],\n            videos = edit_msg.get('videos') || [],\n            link_references = edit_msg.get('link_references') || [];\n        files = files.concat(images).concat(videos);\n        if ((link_references && link_references.length) || (files && files.length)) {\n            this.$('.message-reference-preview').removeClass('hidden');\n            this.displaySend();\n        }\n        link_references.forEach((item) => {\n            this.link_references = this.link_references.concat([item]);\n            this.currently_loaded_link_references = this.currently_loaded_link_references.concat(item.original_text);\n            this.$('.message-reference-preview-container').prepend($(templates.messages.link_reference({\n                item: item,\n                domain: item.url ? utils.getDomainFromUrl(item.url) : item.site_name,\n                url: null\n            })));\n            xabber.chat_body.updateHeight();\n        });\n        files.forEach((file) => {\n            if (!file)\n                return;\n            let id = uuid();\n            file.uid = id;\n            this.attached_files = this.attached_files.concat([file]);\n            if (is_upload){\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            } else{\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: file.sources.length && file.sources[0] && utils.isImageType(file.type) ? file.sources[0] : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            }\n            xabber.chat_body.updateHeight();\n        });\n        ((link_references && link_references.length) || (files && files.length)) && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    showLocationPopup: function (ev) {\n        if (!xabber.settings.mapping_service)\n            return;xabber\n        xabber.popup_coordinates = undefined;\n        xabber.location_name = undefined;\n        new xabber.ChatLocationView({content: this}).show(ev);\n    },\n\n    showMediaPopup: function (ev) {\n        if (this.edit_message)\n            return;\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let media_view = new xabber.SendMediaView();\n            media_view.render({parent: this, model: this.account});\n        }\n    },\n\n    stopWritingVoiceMessage: function (ev) {\n        let $bottom_panel = this.$('.message-input-panel');\n        if ($bottom_panel.find('.recording').length > 0) {\n            $bottom_panel.find('.recording').removeClass('recording');\n            return;\n        }\n    },\n\n    writeVoiceMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('recording'))\n            $elem.removeClass('recording');\n        else {\n            $elem.addClass('recording ground-color-50');\n            if (!this.model.get('recording_voice_message'))\n                this.initAudio();\n        }\n    },\n\n    initAudio: function() {\n        navigator.getUserMedia = (navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.webkitGetUserMedia || navigator.getUserMedia);\n        if (navigator.getUserMedia) {\n            this.model.set('recording_voice_message', true)\n            let constraints = { audio: true, channelCount: 1 },\n                chunks = [],\n                $mic = this.$('.send-area .attach-voice-message'),\n                onSuccess = (stream) => {\n                if (!$mic.is(\":hover\")) {\n                    $mic.removeClass('recording ground-color-50');\n                    this.model.set('recording_voice_message', false)\n                    return;\n                }\n                let mediaRecorder = new opusRecorder({\n                        encoderPath: opusRecorderEncoderPath,\n                        encoderSampleRate: 16000,\n                        numberOfChannels: 1\n                }),\n                    timer = 1, start_time, end_time,\n                    mic_hover = true;\n                    mediaRecorder.onstart = () => {\n                        if (xabber.settings.typing_notifications) {\n                            this.view.sendChatState('composing', 'voice');\n                            this._chatstate_send_timeout = setInterval(() => {\n                                this.view.sendChatState('composing', 'voice');\n                            }, constants.CHATSTATE_INTERVAL_COMPOSING_AUDIO);\n                        }\n                        start_time = moment.now();\n                        let $bottom_panel = this.$('.message-input-panel'),\n                            $timer_elem = this.$('.input-voice-message .timer'),\n                            $status_msg = this.$('.input-voice-message .voice-msg-status'),\n                            $voice_visualizer = this.$('.input-voice-message .voice-visualizer');\n                        $timer_elem.text('0:00');\n                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                        $bottom_panel.addClass('voice-message-recording');\n\n                        let timerId = setInterval(() => {\n                                if ($mic.hasClass('recording') && (timer < constants.VOICE_MSG_TIME)) {\n                                    if (timer%1 == 0)\n                                        $timer_elem.text(utils.pretty_duration(timer));\n                                    timer = (timer*10 + 2)/10;\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    if (!mic_hover)\n                                        $status_msg.css('color', '#D32F2F').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice_short\"));\n                                    else\n                                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                                }\n                                else\n                                {\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    mediaRecorder.stop();\n                                    $mic.removeClass('recording ground-color-50');\n                                    $bottom_panel.removeClass('voice-message-recording');\n                                    this.model.set('recording_voice_message', false)\n                                    clearInterval(timerId);\n                                }\n                            }, 200),\n                            flag = false,\n                            timerIdDot = setInterval(() => {\n                                if ($mic.hasClass('recording')) {\n                                    if (flag)\n                                        $voice_visualizer.css('background-color', '#FFF');\n                                    else\n                                        $voice_visualizer.css('background-color', '#D32F2F');\n                                    flag = !flag;\n                                }\n                                else\n                                    clearInterval(timerIdDot);\n                            }, 500);\n                    };\n\n                    mediaRecorder.start();\n\n                mediaRecorder.onstop = () => {\n                    clearInterval(this._chatstate_send_timeout);\n                    (xabber.settings.typing_notifications) && this.view.sendChatState('paused');\n                    end_time = moment.now();\n                    if (mic_hover && ((end_time - start_time)/1000 >= 1.5)) {\n                        let audio_name = (\"voice message \" + moment().format('YYYY-MM-DD HH:mm:ss') + '.ogg'), audio_type = 'audio/ogg; codecs=opus',\n                            blob = new Blob([chunks], { 'type' : audio_type}),\n                            file = new File([blob], audio_name, {\n                                type: audio_type,\n                            });\n                        file.voice = true;\n                        file.duration = Math.round((end_time - start_time)/1000);\n                        this.view.addFileMessage([file], true);\n                    }\n                    chunks = [];\n                };\n\n                mediaRecorder.ondataavailable = (e) => {\n                    chunks = e;\n                };\n            };\n\n            let onError = (error) => {\n                console.log(xabber.getString(\"file_upload__error\", [error]));\n                $mic.removeClass('recording ground-color-50');\n            };\n\n            window.navigator.getUserMedia(constraints, onSuccess, onError);\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        if (typeof emoji == 'number')\n            emoji = Number(emoji).toString();\n        let caret_idx = -1;\n        if (this.quill.selection.lastRange)\n            caret_idx = this.quill.selection.lastRange.index;\n        else if (this.quill.selection.savedRange)\n            caret_idx = this.quill.selection.savedRange.index;\n        this.quill.focus();\n        if (!this.edit_message)\n            this.displaySend();\n        (!this.view.chat_state && xabber.settings.typing_notifications) && this.view.sendChatState('composing');\n        this.quill.insertEmbed(caret_idx, 'emoji', emoji);\n        if (this.quill.getFormat(caret_idx, 1).mention) {\n            this.quill.formatText(caret_idx, 1, 'mention', false);\n        }\n        this.quill.setSelection(caret_idx + 1);\n        xabber.chat_body.updateHeight();\n    },\n\n    renderLastEmoticons: function () {\n        let cached_last_emoji = this.account.chat_settings.getLastEmoji(),\n            $last_emoticons = this.$('.last-emoticons').empty(), emoji;\n        if (cached_last_emoji.length < 7) {\n            for (let idx = 0; idx < 7; idx++) {\n                emoji = Emoji.getByIndex(idx);\n                this.account.chat_settings.updateLastEmoji(emoji);\n            }\n        }\n        cached_last_emoji = this.account.chat_settings.getLastEmoji();\n        for (let idx = 0; idx < 7; idx++) {\n            $('<div class=\"emoji-wrap\"/>').html(\n                cached_last_emoji[idx] && cached_last_emoji[idx].emojify({tag_name: 'div', emoji_size: 20})\n            ).appendTo($last_emoticons);\n        }\n        $last_emoticons.find('.emoji-wrap').mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button) {\n                return;\n            }\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    submit: function (ev, forced) {\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            mentions = [],\n            markup_references = [],\n            blockquotes = [],\n            link_references = this.link_references,\n            attached_files = this.attached_files,\n            text = $rich_textarea.getTextFromRichTextarea(),\n            dfd = new $.Deferred();\n\n\n        if (this.model.get('encrypted') && this.view.$('.chat-notification').hasClass('encryption-warning') && !forced){\n            let unverified_counter = this.view.$('.encryption-warning').attr('data-unverified-device-count');\n            utils.dialogs.ask_extended(xabber.getQuantityString(\"dialog_unverified_devices__header\", unverified_counter || 1), xabber.getQuantityString(\"dialog_unverified_devices__text\", unverified_counter || 1),\n                {modal_class: 'modal-unverified-devices', no_dialog_options: true},\n                { ok_button_text: xabber.getString(\"omemo__alert_new_device__button_manage_devices\"), optional_button: 'send-anyway', optional_button_text: xabber.getString(\"dialog_unverified_devices__send\")})\n                .done((result) => {\n                if (result) {\n                    if (result === 'send-anyway'){\n                        this.submit(ev, true);\n                    }\n                    else{\n                        this.openDevicesWindow();\n                    }\n                }\n            });\n            return;\n        }\n\n        dfd.done(() => {\n            this.$('.mentions-list').html(\"\").hide();\n            $rich_textarea.find('.emoji').each((idx, emoji_item) => {\n                let emoji = emoji_item.innerText;\n                this.account.chat_settings.updateLastEmoji(emoji);\n            });\n            let content_concat = [];\n            if (text.length >= constants.STANZA_MAX_SIZE) {\n                utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n                $rich_textarea.flushRichTextarea();\n                return;\n            }\n            if (text.length) {\n                this.quill.getContents().forEach((content) => {\n                    if (content.attributes) {\n                        let content_attrs = [],\n                            start_idx = content_concat.length,\n                            end_idx = start_idx + ((content.insert && content.insert.emoji) ? 1 : _.escape(content.insert).length);\n                        for (let attr in content.attributes)\n                            (attr !== 'alt' && attr !== 'blockquote') && content_attrs.push(attr);\n                        if (content_attrs.indexOf('mention') > -1) {\n                            let mention_idx = content_attrs.indexOf('mention'),\n                                is_gc = this.contact.get('group_chat'),\n                                target = $($rich_textarea.find('mention')[mentions.length]).attr('data-target');\n                            content_attrs.splice(mention_idx, mention_idx + 1);\n                            target = is_gc ? ('xmpp:' + this.contact.get('jid') + target) : ('xmpp:' + target);\n                            mentions.push({\n                                start: start_idx,\n                                end: end_idx,\n                                target: target,\n                                is_gc: is_gc\n                            });\n                        }\n                        if (content.attributes.blockquote) {\n                            if (content_concat.length) {\n                                Array.from(content.insert).forEach((ins) => {\n                                    let quote_start_idx = (content_concat.lastIndexOf('\\n') < 0) ? 0 : (content_concat.lastIndexOf('\\n') + 1),\n                                        quote_end_idx = content_concat.length;\n                                    blockquotes.push({\n                                        marker: constants.QUOTE_MARKER,\n                                        start: quote_start_idx,\n                                        end: quote_end_idx + constants.QUOTE_MARKER.length\n                                    });\n                                    text = Array.from(_.escape(text));\n\n                                    if (quote_start_idx === quote_end_idx) {\n                                        text[quote_start_idx - 1] += constants.QUOTE_MARKER;\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER;\n                                    }\n                                    else {\n                                        text[quote_start_idx] = constants.QUOTE_MARKER + text[quote_start_idx];\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER + content_concat[quote_start_idx];\n                                    }\n                                    (quote_end_idx > text.length) && (quote_end_idx = text.length);\n                                    text[quote_end_idx - 1] += '\\n';\n\n                                    text = _.unescape(text.join(\"\"));\n                                    content_concat = Array.from(content_concat.join(\"\"));\n\n                                    markup_references.forEach((markup_ref) => {\n                                        if (markup_ref.start >= quote_start_idx) {\n                                            markup_ref.start += constants.QUOTE_MARKER.length;\n                                            markup_ref.end += constants.QUOTE_MARKER.length;\n                                        }\n                                    });\n\n                                    content_concat = content_concat.concat(Array.from(_.escape(ins)));\n                                })\n                            }\n                        }\n                        content_attrs.length && markup_references.push({\n                            start: start_idx,\n                            end: end_idx,\n                            markup: content_attrs\n                        });\n                    }\n                    if (content.insert && content.insert.emoji) {\n                        content_concat = content_concat.concat(Array.from($(content.insert.emoji).data('emoji')));\n                    }\n                    else if (content.attributes && content.attributes.blockquote) {\n                    }\n                    else\n                        content_concat = content_concat.concat(Array.from(_.escape(content.insert)));\n                });\n            }\n            let start_length = text.length;\n            text = text.trimStart();\n            if (start_length > text.length) {\n                let delta = start_length - text.length;\n                mentions.forEach((mention) => {\n                    mention.start -= delta;\n                    mention.end -= delta;\n                });\n                markup_references.forEach((markup_reference) => {\n                    markup_reference.start -= delta;\n                    markup_reference.end -= delta;\n                });\n                blockquotes.forEach((blockquote) => {\n                    blockquote.start -= delta;\n                    blockquote.end -= delta;\n                });\n            }\n            if (link_references && link_references.length) {\n                link_references = link_references.filter(item => item.original_text);\n                link_references.forEach((link_reference) => {\n                    if (link_reference && link_reference.original_text) {\n                        link_reference.start = text.indexOf(link_reference.original_text);\n                        if (link_reference.start != -1) {\n                            link_reference.start = 0;\n                            link_reference.end = 0;\n                        }\n                    }\n                });\n            }\n            this.removeAllLinkReferences();\n            this.link_reference_exempted = [];\n            this.removeAllFileSnippets();\n            text = text.trimEnd();\n            $rich_textarea.flushRichTextarea();\n            this.quill.focus();\n            this.displayMicrophone();\n            if (this.edit_message) {\n                this.editMessage(text, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n                $rich_textarea.placeCaretAtEnd();\n                return;\n            }\n            if (text || this.fwd_messages.length || (attached_files && attached_files.length) || (link_references && link_references.length)) {\n                if (this.model.get('saved') && this.fwd_messages.length && !text)\n                    this.fwd_messages.forEach((message) => {\n                        this.view.onSubmit(\"\", [message]);\n                    });\n                else\n                    this.view.onSubmit(text, this.fwd_messages, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n            }\n            this.unsetForwardedMessages();\n            xabber.chats_view.clearSearch();\n            if (this.model.messages_view)\n                if (this.model.messages_view.data.get('visible'))\n                    xabber.chats_view.openChat(this.model.item_view, {right_contact_save: true, clear_search: true, screen: xabber.body.screen.get('name')});\n            $rich_textarea.placeCaretAtEnd();\n        });\n        if (attached_files && attached_files.length) {\n            let failed_files = [],\n                files_count = 0,\n                file_check_dfd = new $.Deferred();\n            file_check_dfd.done(() => {\n                if (failed_files.length){\n                    failed_files.forEach((file) => {\n                        this.$(`.message-reference-preview-item-file[data-id=\"${file.uid}\"]`).remove();\n                        this.removeFileSnippetById(file.uid);\n                    });\n                    utils.dialogs.error(\n                        '' + _.pluck(failed_files, 'name').join(` — ${xabber.getString(\"message__file_was_deleted__file_label\")}. \\n`) + ` — ${xabber.getString(\"message__file_was_deleted__file_label\")}.`,\n                        {},\n                        xabber.getQuantityString(\"message__file_was_deleted\", failed_files.length)\n                    );\n                    dfd.reject();\n                } else {\n                    dfd.resolve();\n                }\n            });\n            attached_files.forEach((file) => {\n                utils.tryReadingFile(file).then(()=> {\n                    files_count++;\n                    if (attached_files.length === files_count) {\n                        file_check_dfd.resolve();\n                    }\n                }, ()=> {\n                    failed_files = failed_files.concat([file]);\n                    files_count++;\n                    if (attached_files.length === files_count) {\n                        file_check_dfd.resolve();\n                    }\n                });\n            });\n        } else {\n            dfd.resolve();\n        }\n    },\n\n    setEditedMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.$('.fwd-messages-preview').showIf(this.edit_message);\n        this.$('.fwd-messages-preview .msg-author').text(xabber.getString(\"edit_message__header\"));\n        this.$('.fwd-messages-preview .msg-text').html(Strophe.xmlescape(msg_text));\n        this.$('.fwd-messages-preview').emojify('.msg-text', {emoji_size: 18});\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setRedactedUploadMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setForwardedMessages: function (messages) {\n        this.fwd_messages = messages || [];\n        this.$('.fwd-messages-preview').showIf(messages.length);\n        if (messages.length) {\n            let msg = messages[0],\n                msg_author, msg_text, image_preview, $img_html_preview;\n            if (messages.length > 1) {\n                msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n            } else {\n                if (msg.get('forwarded_message')) {\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n                }\n                else {\n                    msg_text = (msg.get('message') || msg.get('original_message')).emojify();\n                    let fwd_images = msg.get('images') || [],\n                        fwd_files = msg.get('files') || [],\n                        fwd_locations = msg.get('locations');\n                    msg.get('videos') && msg.get('videos').length && (fwd_files = fwd_files.concat(msg.get('videos')));\n                    if ((fwd_images && fwd_images.length) && (fwd_files && fwd_files.length)) {\n                        msg_text = fwd_images.length + fwd_files.length + ' attachments';\n                    }\n                    else {\n                        if (fwd_images && fwd_images.length) {\n                            if (fwd_images.length > 1) {\n                                msg_text =xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_images.length);\n                            }\n                            else {\n                                image_preview = _.clone(msg.get('images')[0]);\n                                $img_html_preview = this.createPreviewImage(image_preview);\n                            }\n                        }\n                        if (fwd_files && fwd_files.length) {\n                            if (fwd_files.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_files.length);\n                            }\n                            else {\n                                let filesize = fwd_files[0].size;\n                                msg_text = filesize ? fwd_files[0].name + \",   \" + filesize : fwd_files[0].name;\n                            }\n                        }\n                        if (fwd_locations && fwd_locations.length) {\n                            if (fwd_locations.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_locations.length);\n                            }\n                            else {\n                                msg_text = xabber.getString(\"recent_chat__last_message__locations_plural_0\");\n                            }\n                        }\n                    }\n                }\n            }\n            let from_jid = msg.get('from_jid');\n            if (msg.isSenderMe()) {\n                msg_author = this.account.get('name');\n            } else {\n                msg_author = (msg.get('user_info') && msg.get('user_info').nickname) || (this.account.contacts.get(from_jid) ? this.account.contacts.get(from_jid).get('name') : from_jid);\n            }\n            this.$('.fwd-messages-preview .msg-author').text(msg_author);\n            if (_.isUndefined(image_preview)) {\n                this.$('.fwd-messages-preview .msg-text').html(msg_text);\n            }\n            else {\n                this.$('.fwd-messages-preview .msg-text').html($img_html_preview);\n            }\n        }\n        xabber.chat_body.updateHeight();\n        this.displaySend();\n    },\n\n    onShowMarkupPanel: function (ev) {\n        let $clicked_icon = $(ev.target),\n            is_panel_opened = $clicked_icon.hasClass('opened');\n        this.$('.last-emoticons').showIf(is_panel_opened);\n        this.$('.markup-panel').showIf(!is_panel_opened);\n        $clicked_icon.switchClass('opened', !is_panel_opened);\n    },\n\n    createPreviewImage: function(image) {\n        let imgContent = new Image();\n            imgContent.src = image.sources[0];\n        $(imgContent).addClass('fwd-img-preview');\n        return imgContent;\n    },\n\n    unsetForwardedMessages: function (ev) {\n        ev && ev.preventDefault && ev.preventDefault();\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        this.fwd_messages = [];\n        if (this.edit_message) {\n            this.removeAllFileSnippets();\n            this.removeAllLinkReferences();\n            this.$('.attach-file input').attr('disabled', false);\n            $rich_textarea.flushRichTextarea();\n        }\n        this.edit_message = null;\n        this.$('.fwd-messages-preview').addClass('hidden');\n        let text = $rich_textarea.getTextFromRichTextarea();\n        if (!text || text == \"\\n\")\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        xabber.chat_body.updateHeight();\n        this.focusOnInput();\n    },\n\n    resetSelectedMessages: function () {\n        this.content_view.$('.chat-message.selected').removeClass('selected');\n        this.manageSelectedMessages();\n    },\n\n    manageSelectedMessages: function () {\n        let $selected_msgs = this.content_view.$('.chat-message.selected'),\n            $input_panel = this.$('.message-input-panel'),\n            $message_actions = this.$('.message-actions-panel');\n            length = $selected_msgs.length;\n        $input_panel.hideIf(this.model.get('blocked') || length);\n        $message_actions.showIf(length);\n        this.model.get('blocked') && this.$('.blocked-msg').hideIf(length);\n        if (length) {\n            this.setButtonsWidth();\n            let my_msg = false;\n            if (length === 1) {\n                if ($selected_msgs.first().data('from') === this.account.get('jid'))\n                    my_msg = true;\n                if (this.contact && this.contact.my_info)\n                    if ($selected_msgs.first().data('from') === this.contact.my_info.get('id'))\n                        my_msg = true;\n                if ($selected_msgs.first().find('.mdi-play').length)\n                    my_msg = false;\n            }\n            $message_actions.find('.pin-message-wrap').showIf(this.model.get('group_chat')).switchClass('non-active', ((length !== 1) && this.model.get('group_chat')));\n            $message_actions.find('.reply-message-wrap').switchClass('non-active', this.model.get('blocked'));\n            $message_actions.find('.forward-message-wrap').switchClass('non-active', this.model.get('encrypted'));\n            $message_actions.find('.edit-message-wrap').switchClass('non-active', !((length === 1) && my_msg) || this.content_view.$('.chat-message.saved-main.selected').length || this.model.get('blocked'));\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').removeClass('hidden').addClass('msgs-counter').text(xabber.getQuantityString(\"chat_screen__bottom_panel__selected_messages__text\", length));\n        } else {\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('msgs-counter').text(\"\");\n            this.focusOnInput();\n        }\n    },\n\n    pinMessage: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.pin-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            pinned_msg = this.messages_arr.get($msg.data('uniqueid')),\n            msg_id = pinned_msg.get('stanza_id');\n        this.resetSelectedMessages();\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message').t(msg_id);\n        this.account.sendIQFast(iq, () => {},\n            (error) => {\n                if ($(error).find('not-allowed').length)\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            });\n    },\n\n    copyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n        });\n        this.resetSelectedMessages();\n        this.pushMessagesToClipboard(msgs);\n    },\n\n    editMessage: function (text, text_markups) {\n        let original_body = Array.from(Strophe.xmlescape(this.edit_message.get('original_message') || \"\")),\n            forwarded_body = \"\",\n            mutable_refs = this.edit_message.get('mutable_content') || [],\n            groupchat_ref = mutable_refs && mutable_refs.find(item => item.type === 'groupchat'),\n            stanza_id = this.edit_message.get('stanza_id'),\n            forward_ref = mutable_refs && mutable_refs.filter(item => item.type === 'forward'),\n            markups = text_markups.markup_references || [],\n            files = text_markups.attached_files || [],\n            link_references = text_markups.link_references || [],\n            blockquotes = text_markups.blockquotes || [],\n            mentions = text_markups.mentions || [],\n            iq = $iq({type: 'set', to: (this.contact && this.contact.get('group_chat')) ? this.contact.get('jid') : this.account.get('jid')}).c('replace', {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model),\n                id: stanza_id\n            }),\n            $message = $build('message').attrs({xmlns: undefined});\n        forward_ref && forward_ref.forEach((fwd, idx) => {\n            let fwd_msg = this.edit_message.get('forwarded_message')[idx],\n                gc_length = groupchat_ref && (groupchat_ref.start + groupchat_ref.end);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: (groupchat_ref ? (fwd.start - gc_length) : fwd.start), end: (groupchat_ref ? (fwd.end - gc_length) : fwd.end), type: 'mutable'})\n                .c('forwarded', {xmlns: Strophe.NS.FORWARD})\n                .c('delay', {\n                    xmlns: 'urn:xmpp:delay',\n                    stamp: fwd_msg.get('time')\n                }).up().cnode(fwd_msg.get('xml')).up().up().up();\n            forwarded_body += original_body.slice(fwd.start, fwd.end).join('');\n        });\n        markups.forEach((markup) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: markup.start + Array.from(forwarded_body).length, end: markup.end + Array.from(forwarded_body).length, type: 'decoration'});\n            for (let idx in markup.markup)\n                $message.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n            $message.up();\n        });\n        blockquotes.forEach((blockquote) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: blockquote.start + Array.from(forwarded_body).length, end: blockquote.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n        });\n        mentions.forEach((mention) => {\n            let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n            mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: mention.start + Array.from(forwarded_body).length, end: mention.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('mention', mention_attrs).t(mention.target).up().up();\n        });\n\n        if (files && files.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'file')\n            files.forEach((file, idx) => {\n                (idx === 0) && (text += '\\n');\n                let legacy_body = file.sources[0] + ((idx != files.length - 1) ? '\\n' : \"\"),\n                    start_idx = Array.from(_.escape(text)).length + Array.from(forwarded_body).length,\n                    end_idx = start_idx + legacy_body.length;\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && $message.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                $message.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && $message.c('media-type').t(file.type).up();\n                file['id'] && $message.c('gallery-id').t(file['id']).up();\n                file.thumbnail && $message.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && $message.c('created').t(file.created).up();\n                file.name && $message.c('name').t(file.name).up();\n                file.size && $message.c('size').t(file.size).up();\n                file.height && $message.c('height').t(file.height).up();\n                file.width && $message.c('width').t(file.width).up();\n                file.duration && $message.c('duration').t(file.duration).up();\n                file.description && $message.c('desc').t(file.description).up();\n                $message.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    $message.c('uri').t(u).up();\n                });\n                $message.up().up().up();\n                file.voice && $message.up();\n                text += legacy_body;\n                mutable_refs.push({start: start_idx, end: end_idx});\n            });\n        }\n\n        if (link_references && link_references.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'link_reference')\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(text)).length + Array.from(forwarded_body).length;\n                    text = text + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && $message.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && $message.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && $message.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && $message.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && $message.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && $message.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && $message.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && $message.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && $message.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                $message.up().up();\n                mutable_refs.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n        mutable_refs && mutable_refs.length && this.edit_message.set({mutable_content: mutable_refs});\n        if (!(Strophe.xmlunescape(forwarded_body) + text)){\n            this.deleteMessages(null, [this.edit_message]);\n            return;\n        }\n        $message.c('body').t(Strophe.xmlunescape(forwarded_body) + text).up();\n        this.unsetForwardedMessages();\n        if (this.model.get('encrypted')) {\n            let decrypted_msg = $message.tree().innerHTML;\n            $message.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($($message.tree()).children('body').length) {\n                $message.cnode($($message.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $($message.tree()).children('body').detach()\n            }\n            if ($($message.tree()).children('reference').length) {\n                $($message.tree()).children('reference').each((idx, reference) => {\n                    $message.cnode($($message.tree()).children('reference')[idx]).up()\n                });\n                $($message.tree()).children('reference').detach()\n            }\n            $message.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            $message.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, $message).then((msg) => {\n                iq.cnode(msg.message.tree());\n                this.account.omemo.cached_messages.putMessage(this.contact, stanza_id, decrypted_msg);\n                this.account.sendIQFast(iq);\n            });\n        } else {\n            iq.cnode($message.tree());\n            this.account.sendIQFast(iq);\n        }\n    },\n\n    showEditPanel: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.edit-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n        this.edit_message = edit_msg;\n        this.resetSelectedMessages();\n        this.setEditedMessageAttachments(edit_msg);\n        this.setEditedMessage(edit_msg);\n    },\n\n    deleteMessages: function (ev, messages) {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [],\n            my_msgs = 0,\n            dialog_options = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n            msg.isSenderMe() && my_msgs++;\n        });\n        messages && messages.forEach((item, idx) => {\n            msgs.push(item);\n            item.isSenderMe() && my_msgs++;\n        });\n        if (this.account.server_features.get(Strophe.NS.REWRITE) || this.model.get('group_chat')) {\n            let dfd = new $.Deferred();\n            dfd.done(() => {\n                utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), xabber.getQuantityString(\"delete_message_question\", msgs.length),\n                    dialog_options, {ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n                    if (!res) {\n                        this._clearing_history = false;\n                        messages && messages.length && this.focusOnInput();\n                        return;\n                    }\n                    let symmetric = (this.model.get('group_chat')) ? true : (res.symmetric_deletion ? true : false);\n                    this.resetSelectedMessages();\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                        this.deleteFilesFromMessages(msgs);\n                    this.model.retractMessages(msgs, this.model.get('group_chat'), symmetric);\n                    messages && messages.length && this.unsetForwardedMessages();\n                });\n            });\n            if (!this.model.get('group_chat') && !this.model.get('saved') && my_msgs == $msgs.length && this.contact && this.contact.domain){\n                if (this.contact.get('server_has_rewrite')){\n                    dialog_options = [{\n                        name: 'symmetric_deletion',\n                        checked: false,\n                        text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                    }];\n                    dfd.resolve();\n                } else {\n                    this.account.connection.disco.info(this.contact.domain, null, (iq) => {\n                        let $rewrite = $(iq).find('feature[var=\"' + Strophe.NS.REWRITE + '\"]');\n                        if ($rewrite.length) {\n                            dialog_options = [{\n                                name: 'symmetric_deletion',\n                                checked: false,\n                                text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                            }];\n                            this.contact.set('server_has_rewrite', true);\n                            dfd.resolve();\n                        } else {\n                            dfd.resolve();\n                        }\n                    });\n                }\n            } else\n                dfd.resolve();\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), `${xabber.getQuantityString(\"delete_message_question\", msgs.length)}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`,\n                dialog_options, {ok_button_text: xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    messages && messages.length && this.focusOnInput();\n                    return;\n                }\n                this.resetSelectedMessages();\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.deleteFilesFromMessages(msgs);\n                msgs.forEach((item) => { this.view.removeMessage(item); })\n                messages && messages.length && this.unsetForwardedMessages();\n            });\n        }\n    },\n\n    deleteFilesFromMessages: function (messages) {\n        messages.forEach((item) => {\n            if (!item.isSenderMe())\n                return;\n            item.get('files') && _.isArray(item.get('files')) && item.get('files').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('images') && _.isArray(item.get('images')) && item.get('images').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('videos') && _.isArray(item.get('videos')) && item.get('videos').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n        });\n    },\n\n    pushMessagesToClipboard: function (messages) {\n        let fwd_msg_indicator = \"\",\n            copied_messages = this.createTextMessage(messages, fwd_msg_indicator);\n        utils.copyTextToClipboard(_.unescape(copied_messages));\n    },\n\n    createTextMessage: function (messages, fwd_msg_indicator) {\n        let text_message = \"\";\n        for (let i = 0; i < messages.length; i++) {\n            let $msg = messages[i];\n            if (this.model.get('saved') && $msg.get('forwarded_message') && $msg.get('forwarded_message').length === 1 && !$msg.get('message'))\n                $msg = $msg.get('forwarded_message')[0];\n            let current_date = moment($msg.get('timestamp')).startOf('day'),\n                prev_date = (i) ? moment(messages[i - 1].get('timestamp')).startOf('day') : moment(0),\n                msg_sender = \"\";\n                if (prev_date.format('x') != current_date.format('x')) {\n                    text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + pretty_date(current_date) + '\\n';\n                }\n                msg_sender = $msg.isSenderMe() ? this.account.get('name') : ($msg.get('user_info') && $msg.get('user_info').nickname || (this.account.contacts.get($msg.get('from_jid')) ? this.account.contacts.get($msg.get('from_jid')).get('name') : $msg.get('from_jid')));\n                text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + \"[\" + utils.pretty_time($msg.get('timestamp')) + \"] \" + msg_sender + \":\\n\";\n                fwd_msg_indicator.length && (text_message += fwd_msg_indicator);\n                let original_message = _.unescape(($msg.get('mutable_content') && $msg.get('mutable_content').find(ref => ref.type === 'groupchat')) ? $msg.get('original_message').slice($msg.get('mutable_content').find(ref => ref.type === 'groupchat').end) : $msg.get('original_message'));\n                fwd_msg_indicator.length && (original_message = original_message.replace(/\\n/g, '\\n&gt; '));\n                (fwd_msg_indicator.length && original_message.indexOf('&gt;') !== 0) && (text_message += ' ');\n                (original_message = _.unescape(original_message.replace(/\\n&gt; &gt;/g, '\\n&gt;&gt;')));\n                text_message += _.escape(original_message) + '\\n';\n        }\n        return text_message.trim();\n    },\n\n    replyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        this.setForwardedMessages(msgs);\n    },\n\n    forwardMessages: function () {\n        if (!this.model.get('active') || this.model.get('encrypted'))\n            return;\n        if (this.$('.forward-message-wrap').hasClass('non-active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        if (!xabber.forward_panel)\n            xabber.forward_panel = new xabber.ForwardPanelView({ model: xabber.opened_chats });\n        xabber.forward_panel.open(msgs, this.account);\n    },\n\n    showChatNotification: function (message, is_colored) {\n        if (!this.view.$('.chat-notification').hasClass('msgs-counter') && !this.view.$('.chat-notification').hasClass('encryption-warning')) {\n            this.view.$('.chat-notification').switchClass('hidden', !message).text(message)\n                .switchClass('text-color-300', is_colored);\n        }\n    }\n});\n\nxabber.ChatHeadContainer = xabber.Container.extend({\n    className: 'chat-head-container panel-head noselect'\n});\n\nxabber.ChatBodyContainer = xabber.Container.extend({\n    className: 'chat-body-container',\n\n    // TODO: refactor CSS and remove this\n    updateHeight: function () {\n        let bottom_height = xabber.chat_bottom.$el.height() + parseInt(xabber.chat_bottom.$el.css('bottom'));\n        if (bottom_height) {\n            let current_bottom = parseInt(this.$el.css('bottom'));\n            this.$el.css({bottom: bottom_height});\n            if (this.view) {\n                this.view.updateScrollBar();\n                (bottom_height != current_bottom) && !this.view.isScrolledToBottom() && this.view.scrollTo(this.view.ps_container[0].scrollTop + (bottom_height - current_bottom));\n            }\n        }\n    }\n});\n\nxabber.ChatBodyPlaceholderContainer = xabber.Container.extend({\n    className: 'chat-body-placeholder-container',\n});\n\nxabber.NotificationsPlaceholder = xabber.BasicView.extend({\n    className: 'notifications-placeholder',\n    events: {\n        \"click .btn-request-notifications\": \"requestNotifications\",\n        \"click .mdi-close\": \"close\"\n    },\n\n    _initialize: function (options) {\n        this.$el.html(`${xabber.getString(\"desktop_notifications__alert_enable__text\", [constants.CLIENT_NAME])} <span class=\"btn-request-notifications\">${xabber.getString(\"desktop_notifications__alert_enable__link_text\")}</span><button class=\"btn-request-notifications btn-flat btn-dark btn-main\">${xabber.getString(\"chat_allow\")}</button>`);\n        this.$el.append($('<i/>').addClass('mdi mdi-22px mdi-close'));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n    },\n\n    requestNotifications: function () {\n        window.Notification.requestPermission((permission) => {\n            xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n            this.close();\n        });\n    },\n\n    onUpdatedScreen: function () {\n        if (!xabber.notifications_placeholder)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    close: function () {\n        xabber._cache.save('ignore_notifications_warning', true);\n        this.remove();\n        xabber.notifications_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.ChatBottomContainer = xabber.Container.extend({\n    className: 'chat-bottom-container'\n});\n\nxabber.ChatPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap chat-placeholder-wrap noselect',\n    template: templates.chat_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"chat_list__placeholder\"));\n        }\n    },\n});\n\nxabber.ChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        last_emoji: [],\n        muted: [],\n        archived: [],\n        group_chat: [],\n        cached_avatars: [],\n        group_chat_members_lists: []\n    },\n\n    getLastEmoji: function () {\n        return _.clone(this.get('last_emoji'));\n    },\n\n    updateLastEmoji: function (emoji) {\n        let last_emoji_icons = _.clone(this.get('last_emoji'));\n        if (last_emoji_icons.length > 0) {\n            let index = last_emoji_icons.indexOf(emoji);\n            if (index != -1)\n                last_emoji_icons.splice(index, 1);\n            last_emoji_icons.push(emoji);\n            while (last_emoji_icons.length > 7)\n                last_emoji_icons.shift();\n        }\n        else\n            last_emoji_icons.push(emoji);\n        this.save('last_emoji', last_emoji_icons);\n    },\n\n    updateMutedList: function (jid, muted) {\n        let muted_list = _.clone(this.get('muted')),\n            index = muted_list.indexOf(jid);\n        if (muted && index < 0) {\n            muted_list.push(jid);\n        }\n        if (!muted && index >= 0) {\n            muted_list.splice(index, 1);\n        }\n        this.save('muted', muted_list);\n    },\n\n    updateArchiveChatsList: function (jid, archived) {\n        let archived_list = _.clone(this.get('archived')),\n            index = archived_list.indexOf(jid);\n        if (archived && index < 0) {\n            archived_list.push(jid);\n        }\n        if (!archived && index >= 0) {\n            archived_list.splice(index, 1);\n        }\n        this.save('archived', archived_list);\n    },\n\n    updateGroupChatsList: function (jid, group_chat) {\n        let group_chat_list = _.clone(this.get('group_chat')),\n            index = group_chat_list.indexOf(jid);\n        if (group_chat && index < 0) {\n            group_chat_list.push(jid);\n        }\n        if (!group_chat && index >= 0) {\n            group_chat_list.splice(index, 1);\n        }\n        this.save('group_chat', group_chat_list);\n    },\n\n    updateCachedAvatars: function (id, hash, avatar) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            member = avatar_list.indexOf(avatar_list.find(member => member.id === id));\n        if (member != -1) {\n            avatar_list.splice(member, 1);\n        }\n        avatar_list.push({id: id, avatar_hash: hash, avatar_b64: avatar});\n        this.save('cached_avatars', avatar_list);\n    },\n\n    getAvatarInfoById: function (id) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            result = avatar_list.find(member => member.id === id);\n        return result;\n    },\n\n    getB64Avatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_b64;\n        else\n            return;\n    },\n\n    getHashAvatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_hash;\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.chat_settings = new xabber.ChatSettings({id: 'chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + this.get('jid'),\n        fetch: 'after'\n    });\n    this.messages = new xabber.Messages(null, {account: this});\n    this.forwarded_messages = new xabber.Messages(null, {account: this});\n    this.pinned_messages = new xabber.Messages(null, {account: this});\n\n    this.chats = new xabber.AccountChats(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    let timestamp = this.last_msg_timestamp || this.disconnected_timestamp;\n    this.chats.registerMessageHandler();\n    this.chats.each((chat) => {\n        if (!this.connection.do_synchronization) {\n            if (chat.messages.length)\n                chat.trigger('get_missed_history', timestamp);\n            else\n                chat.trigger('load_last_history');\n        }\n    });\n\n    this.connection.deleteTimedHandler(this._get_msg_handler);\n    this._get_msg_handler = this.connection.addTimedHandler(60000, () => {\n        //readds msg handler if it somehow dissapears\n        if (this.connection && !this.connection.handlers.find(h => !h.ns && !h.options.encrypted && h.name === 'message')) {\n            let last_msg_timestamp = this.last_msg_timestamp;\n            this.chats.registerMessageHandler();\n            let options = {};\n            this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                this.roster && this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                this.roster && this.roster.getRoster();\n            });\n        }\n        return true;\n    });\n    if (_.isUndefined(this.settings.get('omemo')) && !this.omemo_enable_placeholder) {\n        this.omemo_enable_placeholder = new xabber.OMEMOEnablePlaceholder({account: this});\n    }\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.getVCard();\n    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n        this.trigger('ready_to_get_roster');\n}, true, true);\n\nxabber.once(\"start\", function () {\n    [\"keydown\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return !((e.ctrlKey || e.metaKey) && e.keyCode == constants.KEY_SHIFT || e.shiftKey && e.keyCode == constants.KEY_CTRL || e.keyCode == constants.KEY_SHIFT);\n            }\n        });\n    });\n    [\"keyup\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return true;\n            }\n        });\n    });\n    this.chats = new this.Chats;\n    this.chats.addCollection(this.opened_chats = new this.OpenedChats);\n    this.chats.addCollection(this.closed_chats = new this.ClosedChats);\n    this.chats.registerQuillEmbeddedsTags();\n\n    this.chats_view = this.left_panel.addChild('chats',\n            this.ChatsView, {model: this.opened_chats});\n    this.chat_head = this.right_panel.addChild('chat_head',\n            this.ChatHeadContainer);\n    this.chat_body = this.right_panel.addChild('chat_body',\n            this.ChatBodyContainer);\n    this.chat_body_placeholder = this.right_panel.addChild('chat_body_placeholder',\n            this.ChatBodyPlaceholderContainer);\n    this.chat_bottom = this.right_panel.addChild('chat_bottom',\n            this.ChatBottomContainer);\n    this.chat_placeholder = this.right_panel.addChild('chat_placeholder',\n            this.ChatPlaceholderView);\n\n    this.on(\"add_group_chat\", function (attrs) {\n        if (!this.add_group_chat_view)\n            this.add_group_chat_view = new this.AddGroupChatView();\n        this.add_group_chat_view.show(attrs);\n    }, this);\n\n    this.on(\"change:focused\", function () {\n        if (this.get('focused')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"change:idle\", function () {\n        if (!this.get('idle')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"show_group_chats\", function () {\n        this.chats_view.showGroupChats();\n    }, this);\n\n    this.on(\"show_chats\", function () {\n        this.chats_view.showChats();\n    }, this);\n\n    this.on(\"show_all_chats\", function (no_unread) {\n        this.chats_view.showAllChats(no_unread);\n    }, this);\n\n    this.on(\"show_archive_chats\", function (no_unread) {\n        this.chats_view.showArchiveChats(no_unread);\n    }, this);\n\n    this.on(\"show_saved_chats\", function (no_unread) {\n        this.chats_view.showSavedChats(no_unread);\n    }, this);\n\n    this.on(\"show_notification_chats\", function (no_unread) {\n        this.chats_view.showNotifications(no_unread);\n    }, this);\n\n    this.on(\"clear_search\", function () {\n        this.contacts_view.clearSearch();\n        this.chats_view.clearSearch();\n    }, this);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.searching,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images;\n\nxabber.DiscoveringView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.searching_wide,\n    ps_selector: '.chats-list-wrap',\n    ps_settings: {\n        wheelPropagation: true,\n        theme: 'existing-chats-list'\n    },\n\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-search\": \"search\",\n        \"click .existing-chat-wrap\": \"getChatProperties\",\n        \"keyup .search-input\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.data.on(\"change:color\", this.colorUpdated, this);\n        this.$('.searching-properties-field .dropdown-button').on('click', () => {\n            this.toggleProperties();\n        });\n    },\n\n    render: function (options) {\n        this.endDiscovering();\n        this.data.set('color','#9E9E9E');\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        if (accounts.length)\n            this.bindAccount(accounts[0]);\n        this.$('#select-searching-properties .account-field .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        return this;\n    },\n\n    toggleProperties: function () {\n        let is_visible = this.isPropertiesVisible();\n        this.$('#select-searching-properties').slideToggle(\"fast\");\n        this.$('.arrow').switchClass('mdi-chevron-up', !is_visible);\n        this.$('.arrow').switchClass('mdi-chevron-down', is_visible);\n    },\n\n    isPropertiesVisible: function () {\n        if (this.$('#select-searching-properties').css('display') === 'none')\n            return false;\n        else\n            return true;\n    },\n\n    discover: function () {\n        let domain = _.escape(this.$('.search-input.simple-input-field').val());\n        if (domain) {\n            if (this.isPropertiesVisible())\n                this.toggleProperties();\n            this.$('.searching-more').html(\"\");\n            let searching_title = this.$('#searching_property_title').val(),\n                searching_sort_by = this.$('#searching_property_sort_by').val();\n            this.$('.searching-result-wrap .preloader-wrapper').show();\n            this.searchExistingGroupChats(domain);\n        }\n    },\n\n    setColor: function () {\n        if (this.account) {\n            let color = this.account.settings.get('color');\n            this.data.set('color', color);\n        }\n    },\n\n    colorUpdated: function () {\n        let color = this.data.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    keyUp: function (ev) {\n        if (this.$('.search-input').val() === \"\")\n            this.$('.btn-search').addClass('none-active');\n        else\n            this.$('.btn-search').removeClass('none-active');\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.discover();\n    },\n\n    searchExistingGroupChats: function (domain) {\n        this.account.connection.disco.items((domain), null, this.getGroupchatService.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    onDiscoveringError: function (error) {\n        this.endDiscovering();\n        this.$('.chats-list').html(\"\");\n        this.$('.result-string').text(xabber.getString(\"discover__no_matches\", [$(error).attr('from')]));\n    },\n\n    endDiscovering: function () {\n        this.$('.searching-result-wrap .preloader-wrapper').hide();\n    },\n\n    getGroupchatService: function (stanza) {\n        $(stanza).find('query item').each((idx, item) => {\n            if ($(item).attr('node') === Strophe.NS.GROUP_CHAT) {\n                let jid = $(item).attr('jid');\n                this.getGroupchatFeatures(jid);\n            }\n        });\n        this.endDiscovering();\n    },\n\n    getGroupchatFeatures: function (jid) {\n        let iq = $iq({type: 'get', to: jid})\n            .c('query', {xmlns: Strophe.NS.DISCO_INFO, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, this.getServerInfo.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    getServerInfo: function (stanza) {\n        $(stanza).find('query identity').each((idx, item) => {\n            let $item = $(item);\n            if (($item.attr('category') === 'conference') && ($item.attr('type') === 'server')) {\n                let jid = $(stanza).attr('from');\n                this.getChatsFromSever(jid);\n            }\n        });\n    },\n\n    getChatsFromSever: function (jid) {\n        let iq = $iq({type: 'get', to: jid}).c('query', {xmlns: Strophe.NS.DISCO_ITEMS, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, (stanza) => {\n            this.$('.chats-list').html(\"\");\n            $(stanza).find('query item').each((idx, item) => {\n                let $item = $(item),\n                    name = $item.attr('name'),\n                    jid = $item.attr('jid'),\n                    $chat_item_html = $(templates.existing_groupchat_item({name: name, jid: jid, color: this.account.settings.get('color')})),\n                    avatar = Images.getDefaultAvatar(name);\n                $chat_item_html.find('.circle-avatar').setAvatar(avatar, 32);\n                $chat_item_html.appendTo(this.$('.searching-result-wrap .chats-list'));\n            });\n            this.$('.result-string').text(xabber.getString(\"discover__text_discovered_groups\", [$(stanza).find('query item').length, this.account.get('jid')]));\n        });\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.setColor();\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.searching_account_item({jid: account.get('jid')}));\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    getChatProperties: function (ev) {\n        let $target = $(ev.target).closest('.existing-chat-wrap'),\n            jid = $target.data('jid'),\n            name = $target.data('name'),\n            request_iq = $iq({type: 'get', to: jid})\n                .c('query', {xmlns: Strophe.NS.DISCO_INFO});\n        this.account.sendIQFast(request_iq, (iq_response) => {\n            let $iq_response = $(iq_response),\n                description = $iq_response.find('field[var=\"description\"] value').text(),\n                privacy = $iq_response.find('field[var=\"anonymous\"] value').text(),\n                membership = $iq_response.find('field[var=\"model\"] value').text(),\n                chat_properties = {jid: jid, name: name, privacy: privacy, description: description, membership: membership};\n            this.more_info_view = this.addChild('groupchat_properties', xabber.MoreInfoView,\n                {model: this, chat_properties: chat_properties, el: this.$('.searching-more')[0]})\n        });\n    }\n});\n\nxabber.MoreInfoView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.existing_groupchat_details_view,\n\n    events: {\n        \"click .btn-join-chat\": \"joinChat\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.chat_properties = options.chat_properties;\n        this.$el.html(this.template(this.chat_properties));\n    },\n\n    render: function (options) {\n\n    },\n\n    joinChat: function () {\n        let contact = this.account.contacts.mergeContact(this.chat_properties.jid);\n        contact.set('group_chat', true);\n        contact.acceptRequest();\n        contact.pushInRoster(null, () => {\n            contact.askRequest();\n            contact.getMyInfo();\n        });\n        contact.trigger(\"open_chat\", contact);\n    }\n});\n\nxabber.Searching = Backbone.Model.extend({\n\n    initialize: function (options) {\n        this.account = options.account;\n    },\n\n    getSearchingFields: function () {\n        let this_domain = 'xabber.com',//this.account.connection && this.account.connection.domain,\n            iq_get = $iq({type: 'get', to: 'index.' + this_domain}).c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'});\n        this.account.sendIQFast(iq_get, this.parseSearchingFields);\n    },\n\n    parseSearchingFields: function (iq_result) {\n        let $result = $(iq_result),\n            $fields = $result.find(`x[xmlns = \"${Strophe.NS.XDATA}\"] field`),\n            supported_fields = [];\n        $fields.each((idx, field) => {\n            let $field = $(field);\n            if ($field.attr('type') !== 'hidden')\n                supported_fields.push({var: $field.attr('var'), label: $field.attr('label')});\n        });\n    },\n});\n\nxabber.LocalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n    }\n});\n\nxabber.GlobalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.indexed_chats = [];\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n        this.indexed_chats = [];\n        let iq_search = $iq({to:'index.xabber.com', type: 'set'})\n            .c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'})\n            .c('x', {xmlns: Strophe.NS.XDATA, type: 'form'})\n            .c('field', {var: 'FORM_TYPE', type:'hidden'})\n            .c('value').t(Strophe.NS.INDEX + '#groupchat').up().up();\n        if (query.description)\n            iq_search.c('field', {var: 'description'})\n                .c('value').t(query.description).up().up();\n        if (query.name)\n            iq_search.c('field', {var: 'name'})\n                .c('value').t(query.name).up().up();\n        if (query.model)\n            iq_search.c('field', {var: 'model'})\n                .c('value').t(query.model).up().up();\n        if (query.anywhere)\n            iq_search.c('field', {var: 'anywhere'})\n                .c('value').t(query.anywhere).up().up();\n        this.account.sendIQFast(iq_search, this.onSearched.bind(this));\n    },\n\n    onSearched: function (result) {\n        let $result = $(result),\n            $chats = $($result.find('query item groupchat'));\n        $chats.each((idx, chat) => {\n            let $chat = $(chat),\n                chat_jid = $chat.attr('jid'),\n                attrs = {jid: chat_jid},\n                $properties = $chat.children();\n            $properties.each((idx, property) => {\n                let $property = $(property),\n                    property_name = $property[0].tagName.replace(/-/g, '_'),\n                    property_value = $property.text();\n                _.extend(attrs, {[property_name]: property_value});\n            });\n            this.indexed_chats.push(attrs);\n        });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.discovering = this.wide_panel.addChild('discovering_main',\n        this.DiscoveringView);\n    /*this.local_searching = new xabber.LocalSearching;\n    this.global_searching = new xabber.GlobalSearching;*/\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.mentions,\n    utils = env.utils,\n    $ = env.$,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\nxabber.Mention = Backbone.Model.extend({\n    defaults: {\n        active: false,\n        display: false,\n        timestamp: 0\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.message = options.message;\n        this.id = this.message.get('unique_id');\n        this.set('timestamp', this.message.get('timestamp'));\n        this.account = this.contact.account;\n        this.item_view = new xabber.MentionItemView({model: this});\n        this.contact.on(\"destroy\", this.destroy, this);\n        this.message.on(\"change:last_replace_time\", this.onMessageUpdated, this);\n    },\n\n    onMessageUpdated: function () {\n        if (this.message.get('mentions') && this.message.get('mentions').length) {\n            this.message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (id) {\n                    if (this.contact.my_info) {\n                        if (mention_target === this.contact.my_info.get('id'))\n                            this.item_view.updateLastMessage();\n                        else\n                            this.destroy();\n                    }\n                    else if (this.contact.get('group_chat')) {\n                        if (this._pending_my_info) {\n                            this._pending_my_info.done(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info = null;\n                            });\n                        }\n                        else {\n                            this._pending_my_info = new $.Deferred();\n                            this.contact.getMyInfo(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info.resolve();\n                            });\n                        }\n                    }\n                } else if (jid && mention_target === this.account.get('jid')) {\n                    this.item_view.updateLastMessage();\n                }\n                else\n                    this.destroy();\n            });\n        } else\n            this.destroy();\n    }\n});\n\nxabber.MentionsBase = Backbone.Collection.extend({\n    model: xabber.Mention\n});\n\nxabber.AccountMentions = xabber.MentionsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"add\", this.onMentionAdded, this)\n    },\n\n    onMentionAdded: function (mention) {\n        xabber.mentions.add(mention);\n    }\n});\n\nxabber.Mentions = xabber.MentionsBase.extend({\n    comparator: 'timestamp',\n    initialize: function () {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.MentionsView = xabber.SearchPanelView.extend({\n    className: 'mentions-container container',\n    ps_selector: '.mentions-list-wrap',\n    main_container: '.mentions-list',\n    ps_settings: {theme: 'item-list'},\n    template: templates.mentions_panel,\n\n    _initialize: function () {\n        this.active_mention = null;\n        this.keyup_timeout = null;\n        this.model.on(\"add\", this.onMentionAdded, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"destroy\", this.onMentionRemoved, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (!options.right && this.active_mention) {\n            this.active_mention.model.set('active', false);\n            this.active_mention = null;\n        }\n        (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    onMentionAdded: function (mention) {\n        this.addChild(mention.id, mention.item_view);\n        this.updateMentionPosition(mention);\n    },\n\n    onMentionRemoved: function (mention, options) {\n        options = options || {};\n        if (this.active_mention === this.child(mention.id)) {\n            this.active_mention = null;\n        }\n        this.removeChild(mention.id, options);\n        this.updateScrollBar();\n    },\n\n    selectItem: function (id) {\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        $selection.find('.mention-info-wrap').addClass('selected');\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n        this.$('.list-item .selected').removeClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            selection.find('.mention-info-wrap').click();\n        }\n    },\n\n    replaceMentionItem: function (item, mentions) {\n        let view = this.child(item.id);\n        if (view && item.get('timestamp')) {\n            view.$el.detach();\n            let index = mentions.indexOf(item);\n            if (index === 0) {\n                this.$('.mentions-list').append(view.$el);\n            } else {\n                this.$('.mention-item').eq(-index).before(view.$el);\n            }\n            let $prev_el = view.$el.prev('.mention-item'),\n                $next_el = view.$el.next('.mention-item'),\n                contact_jid = view.$el.data('contact-jid');\n                if ($prev_el.length) {\n                    let prev_contact_jid = $prev_el.data('contact-jid');\n                    if (prev_contact_jid !== contact_jid)\n                        view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                if ($next_el.length) {\n                    let next_contact_jid = $next_el.data('contact-jid');\n                    if (next_contact_jid === contact_jid) {\n                        $next_el.find('.group-chat-title-wrap').addClass('hidden');\n                    }\n                    else\n                        $next_el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n        }\n    },\n\n    readAllMentions: function () {\n        xabber.accounts.connected.forEach((account) => {\n            let mentions = _.clone(account.unread_mentions.models);\n            _.each(mentions, ((mention) => {\n                let msgid = mention.message.get('msgid'),\n                    archive_id = mention.message.get('archive_id'),\n                    contact_archive_id = mention.message.get('contact_archive_id'),\n                    chat = account.chats.getChat(mention.contact);\n                mention.message.set('is_unread', false);\n                chat.sendMarker(msgid, 'displayed', archive_id, contact_archive_id);\n            }));\n        });\n    },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    updateMentionPosition: function (item) {\n        let view = this.child(item.id);\n        if (!view)\n            return;\n        this.replaceMentionItem(item, this.model);\n    },\n\n    onChangedActiveStatus: function (mention) {\n        if (mention.get('active')) {\n            let previous_mention = this.active_mention;\n            this.active_mention = this.child(mention.id);\n            previous_mention && previous_mention.model.set('active', false);\n        }\n    }\n});\n\nxabber.MentionItemView = xabber.BasicView.extend({\n    className: 'mention-item list-item',\n    template: templates.mention_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click .mention-info-wrap': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.$el.attr('data-id', this.model.id);\n        this.$el.attr('data-contact-jid', this.contact.get('jid'));\n        this.updateContactName();\n        this.updateGroupChat();\n        this.updateName();\n        this.updateLastMessage();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateCounter();\n        this.updateIcon();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.contact.on(\"change:name\", this.updateContactName, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n        this.model.message.on(\"change:is_unread\", this.updateCounter, this);\n    },\n\n    updateName: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            contact_name = this.contact.get('name');\n        if (user_info)\n            contact_name = user_info.nickname || user_info.jid || user_info.id || this.model.message.get('from_jid');\n        this.$('.chat-title').text(contact_name);\n    },\n\n    updateIcon: function () {\n        this.$('.contact-icon .group-chat-icon').hideIf(!this.contact.get('group_chat') && this.contact.get('jid') === this.account.domain);\n        this.$('.contact-icon .server-icon').hideIf(this.contact.get('jid') !== this.account.domain);\n    },\n\n    updateContactName: function () {\n        let contact_name = this.contact.get('name');\n        this.$('.group-chat-name').text(contact_name);\n        if (!this.contact.get('group_chat')) {\n            this.updateName();\n            if (!this.contact.get('photo_hash')) {\n                let default_avatar = Images.getDefaultAvatar(contact_name);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n    },\n\n    updateGroupChat: function () {\n        this.updateIcon();\n    },\n\n    updateCounter:function () {\n        let unread = this.model.message.get('is_unread');\n        this.$('.msg-counter').switchClass('hidden', !unread);\n        if (unread)\n            this.account.unread_mentions.add(this.model);\n        else\n            this.account.unread_mentions.remove(this.model);\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    updateLastMessage: function () {\n        let msg = this.model.message;\n        if (!msg)\n            return;\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'),\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = (forwarded_message) ? (msg.get('message') || xabber.getString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText();\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').text(\"\").append(msg_text);\n        }\n        else {\n            this.$('.last-msg').text(msg_text);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateActiveStatus: function () {\n        this.$el.find('.mention-info-wrap').switchClass('active', this.model.get('active'));\n    },\n\n    updateAvatar: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            image;\n        if (user_info) {\n            if (user_info.avatar) {\n                image = user_info.b64_avatar || this.account.chat_settings.getB64Avatar(user_info.id);\n                if (image) {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + user_info.id;\n                    this.contact.getAvatar(user_info.avatar, node, (data_avatar) => {\n                        image = data_avatar;\n                        this.account.chat_settings.updateCachedAvatars(user_info.id, user_info.avatar, data_avatar);\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    }, () => {\n                        let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                        this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n                    });\n                }\n            }\n            else {\n                let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n        else {\n            image = this.contact.cached_image;\n            this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n        }\n    },\n\n    openByClick: function () {\n        let message = this.model.message,\n            chat = this.account.chats.getChat(this.contact);\n        this.model.message.set('is_unread', false);\n        chat.sendMarker(message.get('origin_id'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n        this.model.set('active', true);\n        this.contact.trigger(\"open_mention\", this.contact, message.get('unique_id'));\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    }\n\n});\n\nxabber.MentionsPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap mentions-placeholder-wrap noselect',\n    template: templates.mentions_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"mentions_list__placeholder\"));\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n   this.mentions = new xabber.AccountMentions(null, {account: this});\n   this.unread_mentions = new xabber.Mentions(null, {account: this});\n});\n\nxabber.once(\"start\", function () {\n    this.mentions = new this.Mentions;\n    this.mentions_view = this.left_panel.addChild('mentions',\n        this.MentionsView, {model: this.mentions});\n    this.mentions_placeholder = this.right_panel.addChild('mentions_placeholder',\n        this.MentionsPlaceholderView);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    $ = env.$;\n\nxabber.once(\"start\", function () {\n    $(window).on(\"keydown\", (ev) => {\n        if ((ev.ctrlKey || ev.metaKey) && ev.keyCode == constants.KEY_SHIFT || ev.shiftKey && ev.keyCode == constants.KEY_CTRL) {\n            this.shift_pressed = null;\n            this.shiftctrl_pressed = true;\n            ev.preventDefault();\n        } else if (ev.keyCode == constants.KEY_SHIFT) {\n            this.shift_pressed = true;\n            ev.preventDefault();\n        }\n        let attrs = xabber.body.screen.attributes;\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            if (xabber.body.$el.siblings('#modals').children('.open').length)\n                return;\n            if (attrs.name === 'all-chats' && attrs.right === 'contact_details')\n                attrs.contact.trigger('open_chat', attrs.contact);\n        }\n        if (attrs.chat_item && (attrs.name === 'mentions' || attrs.name === 'contacts' || attrs.name === 'all-chats') && (attrs.right === 'chat' || attrs.right === 'participant_messages' || attrs.right === 'message_context' || attrs.right === 'searched_messages')) {\n            if (!window.$('.message-actions-panel').hasClass('hidden')) {\n                if (!ev.ctrlKey && !ev.metaKey) {\n                    switch (ev.keyCode) {\n                        case 67:\n                            attrs.chat_item.model.trigger('copy_selected_messages');\n                            break;\n                        case 68:\n                            attrs.chat_item.model.trigger('delete_selected_messages');\n                            break;\n                        case 69:\n                            attrs.chat_item.model.trigger('edit_selected_message');\n                            break;\n                        case 70:\n                            attrs.chat_item.model.trigger('forward_selected_messages');\n                            break;\n                        case 80:\n                            attrs.chat_item.model.trigger('pin_selected_message');\n                            break;\n                        case 82:\n                            attrs.chat_item.model.trigger('reply_selected_messages');\n                            break;\n                        case constants.KEY_ESCAPE:\n                            if (!xabber.body.screen.get('right_contact'))\n                                attrs.chat_item.model.trigger('reset_selected_messages');\n                            break;\n                    }\n                    ev.preventDefault();\n                }\n            }\n        }\n        });\n    $(window).on(\"keyup\", (ev) => {\n        if (!(ev.shiftKey && ev.ctrlKey))\n            this.shiftctrl_pressed = null;\n        if (ev.shiftKey && !ev.ctrlKey)\n            this.shift_pressed = true;\n        if (!ev.shiftKey)\n            this.shift_pressed = null;\n    });\n\n    this.updateLayout = function (options) {\n        options || (options = {});\n        this.updateContainersLayout();\n        xabber.trigger('update_css', options);\n        this.body.$('.ps-container').perfectScrollbar('update');\n    };\n\n    this.updateContainersLayout = function () {\n        let width = this.body.$el.width(),\n            height = this.body.$el.height(),\n            is_wide = width >= constants.WIDTH_MEDIUM,\n            is_narrow = width < constants.WIDTH_MEDIUM;\n        let panel_width,\n            left_panel_width,\n            right_panel_width,\n            right_contact_panel_width,\n            chat_bottom_panel_width,\n            toolbar_width = 64,\n            toolbar_accounts_heigth = height - 506,\n            right_contact_panel_styles = {};\n        if (is_wide || !(is_narrow)) {\n            panel_width = 1536;\n        } else if (is_narrow) {\n            panel_width = width - toolbar_width - 20 - 44;\n        } else {\n            panel_width = (width - toolbar_width - 20) * 7 / 9;\n        }\n        left_panel_width = right_contact_panel_width = 384;\n        right_panel_width = panel_width - (left_panel_width + right_contact_panel_width);\n        chat_bottom_panel_width = '100%';\n        if (is_narrow){\n            right_contact_panel_width = left_panel_width = (panel_width * 0.264) < 288 ? 288 : panel_width * 0.264;\n\n        }\n        if (right_panel_width < 512 ){\n            right_panel_width = panel_width - left_panel_width;\n            this.right_contact_panel_saveable = false;\n            right_contact_panel_styles = {\n                position : 'absolute',\n                right : 0,\n                'z-index' : 499,\n            };\n            if ((right_panel_width - 384) < 128) {\n                right_contact_panel_width = right_panel_width;\n                this.right_contact_panel.$el.removeClass('background-click')\n            }\n            else {\n                right_contact_panel_width = 384\n                this.right_contact_panel.$el.addClass('background-click')\n            }\n        }\n        else {\n            this.right_contact_panel_saveable = true;\n            right_contact_panel_styles = {\n                position : 'static',\n                'z-index' : 0,\n            };\n            this.right_contact_panel.$el.removeClass('background-click')\n\n        }\n        this.right_contact_panel_width = right_contact_panel_width;\n\n        if (!this.body.screen.get('right_contact')) {\n            right_contact_panel_width = 0;\n            right_panel_width = panel_width - left_panel_width;\n        }\n        if (right_panel_width < 768) {\n            chat_bottom_panel_width = right_panel_width;\n        }\n\n        right_contact_panel_styles.width = right_contact_panel_width;\n        this.chat_head.$el.switchClass('chat-head-ultra-narrow', right_panel_width <= 650);\n        this.chat_head.$el.switchClass('chat-head-narrow', right_panel_width < 750);\n        this.chat_head.$el.switchClass('chat-head-normal', (right_panel_width < 850 && right_panel_width >= 750));\n        this.chat_head.$el.switchClass('chat-head-normal-wide', (right_panel_width < 1000 && right_panel_width >= 850));\n        this.chat_head.$el.switchClass('chat-head-wide', right_panel_width > 1000);\n        this.main_panel.setCustomCss({\n            width: panel_width,\n        });\n        this.left_panel.setCustomCss({\n            width: left_panel_width,\n        });\n        this.right_panel.setCustomCss({\n            width: right_panel_width,\n        });\n        this.right_contact_panel.setCustomCss(right_contact_panel_styles);\n        this.chat_bottom.setCustomCss({\n            width: chat_bottom_panel_width,\n        });\n        this.toolbar_view.$el.find('.toolbar-bottom .accounts-wrap .accounts').css({\n            'max-height': toolbar_accounts_heigth,\n        });\n    };\n\n    this.on(\"update_layout\", this.updateLayout, this);\n\n    this.body.addScreen('blank', {});\n\n    this.body.addScreen('login', {\n        login: { xmpp_login: null }\n    });\n\n    this.body.addScreen('settings', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { settings: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('settings-modal', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { chats: null },\n            right: {\n                chat_head: null,\n                chat_body: null,\n                chat_body_placeholder: null,\n                chat_bottom: null,\n                chat_placeholder: null\n            },\n            right_contact: {},\n            placeholders: null\n        },\n        main_overlay: {\n            settings_modal: null,\n        },\n        roster: null\n    });\n\n    this.body.addScreen('add_account', {\n        blur_overlay: null,\n        toolbar: null,\n        login: null\n    });\n\n    this.body.addScreen('about', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { about: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    let path_acc_settings_left = new this.ViewPath('account.settings_left'),\n        path_acc_settings_right = new this.ViewPath('account.settings_right'),\n        path_acc_settings_modal = new this.ViewPath('account.settings_account_modal'),\n        path_acc_vcard_edit = new this.ViewPath('account.vcard_edit');\n\n    this.body.addScreen('account_settings', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: {\n                account_settings: {\n                    left: path_acc_settings_left,\n                    right: path_acc_settings_right\n                }\n            },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('account_settings_modal', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { chats: null },\n            right: {\n                chat_head: null,\n                chat_body: null,\n                chat_body_placeholder: null,\n                chat_bottom: null,\n                chat_placeholder: null\n            },\n            right_contact: {},\n            placeholders: null\n        },\n        main_overlay: {\n            account_settings_modal: path_acc_settings_modal\n        },\n        roster: null\n    });\n\n    this.account_settings.patchTree = function (tree, options) {\n        if (options.right === 'vcard_edit') {\n            return {\n                left: path_acc_settings_left,\n                right: path_acc_vcard_edit\n            };\n        }\n    };\n\n\n    let path_chat_head = new this.ViewPath('chat_item.content.head'),\n        path_chat_body = new this.ViewPath('chat_item.content'),\n        path_chat_body_placeholder = new this.ViewPath('chat_item.content_placeholder'),\n        path_chat_bottom = new this.ViewPath('chat_item.content.bottom'),\n        path_group_invitation = new this.ViewPath('contact.invitation'),\n        path_enable_view = new this.ViewPath('omemo_item.account.omemo_enable_view'),\n        path_contact_details = new this.ViewPath('contact.details_view'),\n        path_contact_details_right = new this.ViewPath('contact.details_view_right'),\n        path_contact_details_right_encrypted = new this.ViewPath('contact.details_view_right_encrypted'),\n        path_participant_messages = new this.ViewPath('model.messages_view'),\n        path_details_participants = new this.ViewPath('contact.details_view.participants');\n\n    this.body.addScreen('contacts', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { contacts: null },\n            right: { contact_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('search', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { discovering_main: null},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('mentions', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { mentions: null },\n            right: { mentions_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('all-chats', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { chats: null },\n            right: { chat_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n\n    this.right_panel.patchTree = function (tree, options) {\n        if (options.right === undefined)\n            return;\n        if (options.show_placeholder) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: null,\n                chat_body_placeholder: path_chat_body_placeholder,\n                chat_bottom: null\n            };\n        }\n        if ((options.right === 'message_context') || (options.right === 'participant_messages') || (options.right === 'searched_messages')) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_participant_messages,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'group_invitation') {\n            return { details: path_group_invitation };\n        }\n        if (options.right === 'contact_details') {\n            return { details: path_contact_details };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n        if (options.chat_item) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_chat_body,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'enable_encryption' || options.omemo_item) {\n            return { details: path_enable_view };\n        }\n    };\n\n\n    this.right_contact_panel.patchTree = function (tree, options) {\n        if (options.right_contact === undefined)\n            return;\n        if (options.right_contact === 'contact_details') {\n            return { details: path_contact_details_right };\n        }\n        if (options.right_contact === 'contact_details_encrypted') {\n            return { details: path_contact_details_right_encrypted };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n    };\n\n    this.body.setScreen('blank');\n\n    // initial synchronization\n    if (this.api_account) {\n        this.api_account.once(\"settings_result\", function (result) {\n            if (result === null && !this.accounts.length) {\n                this.body.setScreen('login');\n            } else if (this.body.isScreen('blank')) {\n                this.body.setScreen('all-chats');\n            }\n        }, this);\n\n        this.api_account.ready.then(this.api_account.start.bind(this.api_account));\n    } else {\n        if (!this.accounts.length)\n            this.body.setScreen('login');\n        else if (this.body.isScreen('blank'))\n            this.body.setScreen('all-chats');\n        xabber.trigger(\"bind_xmpp_accounts\");\n    }\n\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    utils = env.utils,\n    $ = env.$,\n    templates = env.templates.base,\n    Strophe = env.Strophe,\n    _ = env._,\n    KeyHelper = env.libsignal.KeyHelper,\n    SignalProtocolAddress = env.libsignal.SignalProtocolAddress,\n    SessionBuilder = env.libsignal.SessionBuilder,\n    SessionCipher = env.libsignal.SessionCipher;\n\nxabber.Peer = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    initialize: function (attrs, options) {\n        attrs = attrs || {};\n        this.account = options.account;\n        this.devices = {};\n        this.store = this.account.omemo.store;\n        this.fingerprints = new xabber.Fingerprints({model: this});\n        this.updateDevices(attrs.devices);\n        this.set({\n            jid: attrs.jid\n        });\n    },\n\n    updateDevices: function (devices) {\n        if (!devices)\n            return;\n        for (let d in this.devices) {\n            if (!devices[d]) {\n                this.account.omemo.removeSession('session' + this.devices[d].address.toString());\n                delete this.devices[d];\n            }\n        }\n        for (let d in devices) {\n            let device = this.getDevice(d),\n                label = devices[d].label;\n            label && device.set('label', label);\n        }\n    },\n\n    getDevicesNode: async function () {\n        if (!this._pending_devices) {\n            this._pending_devices = true;\n            this._dfd_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getDevicesNode(this.get('jid'), (cb) => {\n                    this.updateDevices(this.account.getConnectionForIQ().omemo.parseUserDevices($(cb)));\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                }, () => {\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    encrypt: async function (message) {\n        let enc_promises = [],\n            aes = await utils.AES.encrypt(message),\n            is_trusted = true;\n\n        if (!_.keys(this.devices).length)\n            await this.getDevicesNode();\n        for (let device in this.devices) {\n            enc_promises.push(this.devices[device].encrypt(aes.keydata));\n        }\n\n        for (let device in this.account.omemo.own_devices) {\n            enc_promises.push(this.account.omemo.own_devices[device].encrypt(aes.keydata));\n        }\n\n        let keys = await Promise.all(enc_promises);\n\n        keys = keys.filter(key => key !== null);\n\n        for (let device_id in this.devices) {\n            let device = this.devices[device_id];\n            if (device.get('ik') === null)\n                continue;\n            if (device.get('trusted') === null)\n                is_trusted = 'error';\n            if (is_trusted && device.get('trusted') === undefined)\n                is_trusted = 'none';\n        }\n\n        return {\n            keys: keys,\n            payload: aes.payload,\n            is_trusted: is_trusted\n        };\n    },\n\n    decrypt: async function (deviceId, ciphertext, preKey) {\n        let device = this.getDevice(deviceId);\n\n        return device.decrypt(ciphertext, preKey);\n    },\n\n    getDevice: function (id) {\n        if (!this.devices[id]) {\n            this.devices[id] = new xabber.Device({jid: this.get('jid'), id: id }, { account: this.account, store: this.store});\n        }\n\n        return this.devices[id];\n    }\n});\n\nxabber.Peers = Backbone.Collection.extend({\n    model: xabber.Peer,\n\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.Fingerprints = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-wrap',\n    template: templates.fingerprints,\n    ps_selector: '.fingerprints-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-delete': \"deleteDevice\",\n        \"click .set-label + div\": \"editLabel\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        if (this.model.own_devices) {\n            this.account = this.model.account;\n            this.omemo = this.model;\n            this.jid = this.account.get('jid');\n            this.is_own_devices = true;\n        } else {\n            this.account = this.model.account;\n            this.omemo = this.account.omemo;\n            this.jid = this.model.get('jid');\n        }\n    },\n\n    open: function () {\n        this.omemo = this.account.omemo;\n        let name = \"\";\n        if (this.is_own_devices)\n            name = this.account.get('name');\n        else {\n            let contact = this.account.contacts.get(this.jid);\n            name = contact ? contact.get('name') : this.jid;\n        }\n        this.$('.header').text(xabber.getString('omemo__dialog_fingerprints__header', [name]));\n        this.data.set('visible', true);\n        this.show();\n        this.$('div.fingerprints-content').html(env.templates.contacts.preloader());\n        if (this.is_own_devices)\n            this.renderOwnDevices();\n        else\n            this.renderDevices();\n    },\n\n    renderDevices: function () {\n        this.model.getDevicesNode().then(() => {\n            let devices_count = _.keys(this.model.devices).length;\n            this.updateFingerprints(this.model.devices);\n        });\n        this.updateOwnFingerprint();\n    },\n\n    renderOwnDevices: function () {\n        this.omemo.getMyDevices().then(() => {\n            let devices_count = _.keys(this.model.own_devices).length;\n            this.updateFingerprints(this.model.own_devices);\n            this.updateOwnFingerprint();\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    editLabel: function () {\n        this.$('.set-label').removeClass('hidden');\n        this.$('.set-label').focus();\n        let saveLabel = (ev) => {\n            let label = ev.target.value.trim();\n            this.saveLabel(label);\n        };\n        this.$('.set-label')[0].onblur = saveLabel;\n        this.$('input.set-label')[0].onkeydown = (ev) => {\n            if (ev.keyCode == constants.KEY_ENTER)\n                saveLabel(ev);\n        };\n    },\n\n    saveLabel: function (label) {\n        this.$('.set-label').addClass('hidden');\n        if (label == this.account.settings.get('device_label_text'))\n            return;\n        this.account.settings.save('device_label_text', label);\n        this.account.getConnectionForIQ().omemo.publishDevice(this.omemo.get('device_id'), label, () => {\n            this.updateOwnFingerprint();\n        });\n    },\n\n    updateFingerprints: async function (devices) {\n        let counter = 0,\n            devices_count = _.keys(devices).length,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content');\n        dfd.done((f_count) => {\n            if (!f_count)\n                $container.html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n            else\n                this.$('.dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    container: this.$('.fingerprints-content')[0],\n                    alignment: 'left'\n                });\n            this.jid == this.account.get('jid') && f_count++;\n            this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n            $container.find('.preloader-wrapper').detach();\n        });\n        for (let device_id in devices) {\n            if (device_id == this.omemo.get('device_id')) {\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n                continue;\n            }\n            let device = devices[device_id];\n            if (device.get('ik')) {\n                let options = {},\n                    f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let options = {},\n                            f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                        $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                    }\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                }, () => {\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                });\n            }\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').append(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'trust').text(xabber.getString('omemo__dialog_fingerprints__button_trust'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, true);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'ignore').text(xabber.getString('omemo__dialog_fingerprints__button_ignore'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, false);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let delete_button = this.is_own_devices ? true : false,\n            edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            error;\n        if (fingerprint.match(/.{1,8}/g))\n            fingerprint = fingerprint.match(/.{1,8}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.is_own_devices ? this.account.omemo.own_devices[id] : this.model.devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,8}/g).join(\" \"));\n        let $row = templates.fingerprint_item({id,label,trust,fingerprint, delete_button, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            device_id = Number($target.find('div.device-id').text());\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                $target.detach();\n                let f_count = this.$('div.fingerprints-content').find('div.row').length;\n                if (!f_count)\n                    this.$('div.fingerprints-content').html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                this.jid == this.account.get('jid') && f_count++;\n                this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n                delete this.model.own_devices[device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        $target.detach();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                }\n            }\n        });\n    },\n});\n\nxabber.FingerprintsOwnDevices = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-devices-wrap',\n    template: templates.fingerprints_devices,\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.omemo = this.model;\n        this.jid = this.account.get('jid');\n        this.is_own_devices = true;\n    },\n\n    open: function (device_id, is_own) {\n        this.omemo = this.account.omemo;\n        this.data.set('visible', true);\n        this.updateColorScheme();\n        this.show();\n        this.renderOwnDevices(device_id, is_own);\n    },\n\n    updateTrustDevice: function (device_id, $container, context) {\n        this.omemo.getMyDevices().then(() => {\n            let device = this.model.own_devices[device_id];\n            if (!device)\n                return;\n            if (device.get('ik')) {\n                let f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                this.renderTrustOnFingerprint(is_trusted, $container, context);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        this.renderTrustOnFingerprint(is_trusted, $container, context);\n                    }\n                }, () => {\n                });\n            }\n        });\n    },\n\n    renderTrustOnFingerprint: function (is_trusted, $container, context) {\n        $container.find('.device-encryption').attr('data-trust', is_trusted).addClass('active');\n        $container.attr('data-trust', is_trusted);\n        is_trusted === 'unknown' && $container.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n        is_trusted === 'trust' && $container.find('.device-encryption span').text(xabber.getString(\"settings_account__trusted_device\"));\n        if (is_trusted !== 'trust' && is_trusted !== 'ignore'){\n            let $warning_container = $container.closest('.devices-wrap').find('.device-encryption-warning'),\n                untrusted_count = parseInt($warning_container.attr('data-not-trusted-count')) + 1;\n            $warning_container.removeClass('hidden').attr('data-not-trusted-count', untrusted_count);\n            $warning_container.find('.device-encryption-warning-label').html(xabber.getString(\"settings_account__encryption_warning_text\", [untrusted_count]));\n        }\n        $container.find('.device-encryption .mdi-lock').removeClass('hidden');\n        context && context.updateHeight && context.updateHeight();\n    },\n\n    renderOwnDevices: function (device_id, is_own) {\n        this.omemo.getMyDevices().then(() => {\n            this.device_id = device_id;\n            this.fingerprint = null;\n            if (is_own)\n                this.updateOwnFingerprint(device_id);\n            else{\n                this.updateOwnFingerprint(device_id);\n                this.updateFingerprints(device_id);\n            }\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateFingerprints: async function (device_id) {\n        let counter = 0,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content .other-device-content'),\n            device = this.model.own_devices[device_id];\n        $container.html('');\n        dfd.done((is_error) => {\n            console.log(is_error);\n            this.$('.dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                container: this.$('.fingerprints-content .other-device-content')[0],\n                alignment: 'left'\n            });\n        });\n        if (device.get('ik')) {\n            let options = {},\n                f = device.generateFingerprint(),\n                fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n            is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n            this.fingerprint = f;\n            $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n            dfd.resolve();\n        }\n        else {\n            this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                let $iq = $(iq),\n                    $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                    ik = $bundle.find(`ik`).text();\n                if (ik) {\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    let options = {},\n                        f = device.generateFingerprint(),\n                        fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                        is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                    is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                    this.fingerprint = f;\n                    $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                }\n                dfd.resolve();\n            }, () => {\n                dfd.resolve(true);\n            });\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').html(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, true);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, false);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            device_icons = [\n                'device-cellphone',\n                'device-console',\n                'device-desktop',\n                'device-tablet',\n                'device-web',\n            ],\n            error, svg_icon;\n        if (fingerprint.match(/.{1,4}/g))\n            fingerprint = fingerprint.match(/.{1,4}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.account.omemo.own_devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,4}/g).join(\" \"));\n        svg_icon = edit_setting ? 'device-web' : device_icons[Math.floor(Math.random()*device_icons.length)]\n        let $row = templates.fingerprint_devices_item({id,label,trust, svg_icon, fingerprint, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content');\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [this.device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                delete this.model.own_devices[this.device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[this.device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        this.account.trigger('trusting_updated');\n                        this.close();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, this.device_id);\n                }\n            }\n        });\n    },\n\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.Bundle = Backbone.Model.extend({\n    initialize: async function (attrs, options) {\n        this.preKeys = [];\n        this.model = options.model;\n        this.store = options.store;\n        if (this.model.get('identityKey'))\n            this.getIdentity();\n        else\n            await this.generateIdentity();\n       await this.getPreKeys();\n       if (this.model.get('resend_bundle')) {\n           this.model.publishBundle(this.model.get('device_attrs'));\n           this.model.set('resend_bundle', false);\n           this.model.set('device_attrs', null);\n       }\n    },\n\n    generateIdentity: function () {\n        return Promise.all([\n            KeyHelper.generateIdentityKeyPair(),\n            KeyHelper.generateRegistrationId(),\n        ]).then((result) => {\n            let identityKey = result[0],\n                registrationId = result[1];\n            this.store.put('identityKey', identityKey);\n            this.store.put('registrationId', registrationId);\n            this.model.account.trigger('update_omemo_devices');\n            this.cacheIdentity(identityKey, registrationId);\n        });\n    },\n\n    getIdentity: function () {\n        let identityKey = JSON.parse(this.model.get('identityKey')),\n            registrationId = this.model.get('registrationId'),\n            pubKey = utils.fromBase64toArrayBuffer(identityKey.pubKey),\n            privKey = utils.fromBase64toArrayBuffer(identityKey.privKey);\n        this.store.put('identityKey', {pubKey: pubKey, privKey: privKey});\n        this.store.put('registrationId', registrationId);\n    },\n\n    cacheIdentity: function (identityKey, registrationId) {\n        let pubKey = utils.ArrayBuffertoBase64(identityKey.pubKey),\n            privKey = utils.ArrayBuffertoBase64(identityKey.privKey);\n        this.model.save('identityKey', JSON.stringify({pubKey: pubKey, privKey: privKey}));\n        this.model.save('registrationId', registrationId);\n    },\n\n    generatePreKeys: async function () {\n        let preKeysPromises = [];\n        for (let i = 1; i <= constants.PREKEYS_COUNT; i++) {\n            preKeysPromises.push(this.generatePreKey(i));\n        }\n\n        preKeysPromises.push(this.generateSignedPreKey(1));\n\n        return await Promise.all(preKeysPromises);\n    },\n\n    getSignedPreKey: async function () {\n        let spk = this.model.get('signedPreKey');\n        if (spk) {\n            let pubKey = utils.fromBase64toArrayBuffer(spk.keyPair.pubKey),\n                privKey = utils.fromBase64toArrayBuffer(spk.keyPair.privKey),\n                signature = utils.fromBase64toArrayBuffer(spk.signature),\n                keyPair = {pubKey, privKey},\n                keyId = spk.keyId;\n            return {keyPair, keyId, signature};\n        }\n        else {\n            return await this.generateSignedPreKey(this.preKeys[0].keyId || 1);\n        }\n    },\n\n    getPreKeys: async function () {\n        let prekeys = this.model.prekeys.getAll();\n        if (Object.keys(prekeys).length >= constants.MIN_PREKEYS_COUNT) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    priv_pk = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pub_pk = utils.fromBase64toArrayBuffer(prekey.pubKey),\n                    key_pair = {pubKey: pub_pk, privKey: priv_pk};\n                this.preKeys.push({keyId: id, keyPair: key_pair});\n                this.store.storePreKey(id, key_pair);\n            }\n            this.getUsedPreKeys();\n            let spk = await this.getSignedPreKey();\n            this.preKeys.push(spk);\n            this.store.storeSignedPreKey(spk.keyId, spk.keyPair);\n        }\n        else {\n            await this.generatePreKeys().then((prekeys) => {\n                this.preKeys = prekeys;\n                this.getUsedPreKeys();\n            });\n        }\n    },\n\n    getUsedPreKeys: function () {\n        let prekeys = this.model.own_used_prekeys.getAll();\n        if (Object.keys(prekeys).length) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    privKey = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pubKey = utils.fromBase64toArrayBuffer(prekey.pubKey);\n                this.store.storePreKey(id, {pubKey, privKey});\n            }\n        }\n    },\n\n    generatePreKey: async function (id) {\n        let preKey = await KeyHelper.generatePreKey(id);\n        this.store.storePreKey(id, preKey.keyPair);\n\n        return preKey;\n    },\n\n    generateSignedPreKey: async function (id) {\n        let identity = await this.store.getIdentityKeyPair();\n        let signedPreKey = await KeyHelper.generateSignedPreKey(identity, id);\n\n        this.store.storeSignedPreKey(id, signedPreKey.keyPair);\n        this.cacheSignedPreKey(signedPreKey);\n\n        return signedPreKey;\n    },\n\n    cacheSignedPreKey: function (spk) {\n        let pubKey = utils.ArrayBuffertoBase64(spk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(spk.keyPair.privKey),\n            signature = utils.ArrayBuffertoBase64(spk.signature),\n            keyPair = {pubKey, privKey},\n            keyId = spk.keyId,\n            converted_spk = {keyPair, keyId, signature};\n        this.model.save('signedPreKey', converted_spk);\n    }\n\n});\n\nxabber.Prekeys = Backbone.Model.extend({\n    initialize: function (options) {\n        this.name = options.name;\n        this.model = options.model;\n    },\n\n    get: function (id) {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys[id];\n    },\n\n    put: function (prekey) {\n        if (!prekey.id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        prekeys[prekey.id] = prekey;\n        this.model.save(this.name, prekeys);\n    },\n\n    getAll: function () {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys;\n    },\n\n    remove: function (id) {\n        if (!id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        delete prekeys[id];\n        this.model.save(this.name, prekeys);\n    }\n});\n\nxabber.Device = Backbone.Model.extend({\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        this.id = attrs.id;\n        this.jid = attrs.jid;\n        this.store = options.store;\n        this.preKeys = null;\n        this.address = new SignalProtocolAddress(attrs.jid, attrs.id);\n    },\n\n    generateFingerprint: function () {\n        let identityKey = this.get('ik');\n        if (!identityKey)\n            return;\n        if (identityKey.byteLength == 33)\n            identityKey = identityKey.slice(1);\n        return Array.from(new Uint8Array(identityKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n    },\n\n    closeSession: function (reason) {\n        this.account.getConnectionForIQ().omemo.sendOptOut({\n            to: this.jid,\n            reason: reason\n        }, () => {});\n    },\n\n    getBundle: async function () {\n        if (!this._pending_bundle) {\n            this._pending_bundle = true;\n            this._dfd_bundle = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.jid, id: this.id}, (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${this.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        $spk = $bundle.find('spk'),\n                        spk = {id: $spk.attr('id'), key: $spk.text(), signature: $bundle.find('spks').text()},\n                        ik = $bundle.find(`ik`).text();\n                    this.preKeys = [];\n                    if (!ik)\n                        this.set('ik', null);\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        this.preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    this._pending_bundle = false;\n                    let pk = this.getRandomPreKey();\n                    if (!pk) {\n                        this._dfd_bundle.reject();\n                        reject();\n                    }\n                    else {\n                        this._dfd_bundle.resolve({pk, spk, ik});\n                        resolve({pk, spk, ik});\n                    }\n                }, () => {\n                    this.set('ik', null);\n                    this.preKeys = [];\n                    this._dfd_bundle.reject();\n                    this._pending_bundle = false;\n                    reject();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_bundle.done(({pk, spk, ik}) => {\n                    resolve({pk, spk, ik});\n                });\n                this._dfd_bundle.fail(() => {\n                    reject();\n                });\n            });\n        }\n    },\n\n    getRandomPreKey: function () {\n        let min = 0,\n            max = this.preKeys.length - 1,\n            i = Math.floor(min + Math.random() * (max + 1 - min));\n        return this.preKeys[i];\n    },\n\n    decrypt: async function (cipherText, preKey) {\n        try {\n            let sessionCipher = new SessionCipher(this.store, this.address), plainText;\n\n            if (preKey){\n                plainText = await sessionCipher.decryptPreKeyWhisperMessage(cipherText, 'binary');\n            }\n            else {\n                if (!this.store.hasSession(this.address.toString())) {\n                    let session = this.getCachedSession();\n                    if (session)\n                        await this.store.storeSession(this.address.toString(), session);\n                }\n                plainText = await sessionCipher.decryptWhisperMessage(cipherText, 'binary');\n            }\n\n            return plainText;\n        }\n        catch (e) {\n            throw e;\n        }\n    },\n\n    getPreKey: function () {\n        let pk = this.account.omemo.used_prekeys.get(String(this.id));\n        return pk;\n    },\n\n    getCachedSession: function () {\n        return this.account.omemo.getSession('session' + this.address.toString());\n    },\n\n    encrypt: async function (plainText) {\n        try {\n            if (this.get('trusted') === false && (this.id != this.account.omemo.get('device_id')))\n                return null;\n            if (!this.store.hasSession(this.address.toString()) || !this.is_session_initiated) { // this.preKeys ??\n                if (this.preKeys && !this.preKeys.length)\n                    return null;\n                this.is_session_initiated = true;\n                let s = await this.initSession();\n                if (!s)\n                    return null;\n            }\n\n            let session = this.getSession(),\n                ciphertext = await session.encrypt(plainText);\n\n            return {\n                preKey: ciphertext.type === 3,\n                ciphertext: ciphertext,\n                deviceId: this.address.getDeviceId()\n            };\n        } catch (e) {\n            console.log('Error:', e);\n            console.warn('Could not encrypt data for device with id ' + this.address.getDeviceId());\n\n            return null;\n        }\n    },\n\n    initSession: async function () {\n        let {pk, spk, ik} = await this.getBundle(),\n            cached_pk = this.getPreKey(),\n            id = this.id;\n        if (cached_pk) {\n            if (!spk || spk && JSON.stringify(spk) == JSON.stringify(cached_pk.spk) && JSON.stringify(ik) == JSON.stringify(cached_pk.ik))\n                pk = cached_pk.pk;\n            else\n                this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        }\n        else\n            this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        this.set({'pk': utils.fromBase64toArrayBuffer(pk.key), 'ik': utils.fromBase64toArrayBuffer(ik)});\n        this.fingerprint = this.generateFingerprint();\n        let trusted = this.account.omemo.isTrusted(this.jid, id, this.fingerprint);\n        this.set('trusted', trusted);\n        if ((this.id != this.account.omemo.get('device_id')) && trusted === false)\n            return false;\n        this.processPreKey({\n            registrationId: Number(id),\n            identityKey: utils.fromBase64toArrayBuffer(ik),\n            signedPreKey: {\n                keyId: Number(spk.id),\n                publicKey: utils.fromBase64toArrayBuffer(spk.key),\n                signature: utils.fromBase64toArrayBuffer(spk.signature)\n            },\n            preKey: {\n                keyId: Number(pk.id),\n                publicKey: utils.fromBase64toArrayBuffer(pk.key)\n            }\n        });\n        return true;\n    },\n\n    processPreKey: function (preKeyBundle) {\n        this.session = new SessionBuilder(this.store, this.address);\n        return this.session.processPreKey(preKeyBundle);\n    },\n\n    removeSession: function () {\n        this.store.removeSession(this.address.toString());\n        this.sessionCipher = null;\n    },\n\n    getSession: function () {\n        if (!this.sessionCipher) {\n            this.sessionCipher = new SessionCipher(this.store, this.address);\n        }\n        return this.sessionCipher;\n    }\n});\n\nxabber.Omemo = Backbone.ModelWithStorage.extend({\n    defaults: {\n        sessions: {},\n        fingerprints: {},\n        prekeys: {},\n        retract_version: 0,\n        used_prekeys: {},\n        own_used_prekeys: {},\n        device_id: \"\"\n    },\n\n    _initialize: function (attrs, options) {\n        this.on(\"change:device_id\", this.onDeviceIdUpdated, this);\n        this.on(\"destroy\", this.onOmemoDestroyed, this);\n        this.own_devices = {};\n        this.account = options.account;\n        this.peers = new xabber.Peers();\n        if (!this.get('device_id'))\n            this.set('device_id', this.generateDeviceId());\n        this.store = new xabber.SignalProtocolStore();\n        this.account.on(\"devices_updated\", this.onOwnDevicesUpdated, this);\n        this.store.on('prekey_removed', this.removePreKey, this);\n        this.store.on('session_stored', this.cacheSession, this);\n    },\n\n    storeSessions: function () {\n        let sessions = this.get('sessions');\n        for (let session_id in sessions) {\n            let session = sessions[session_id];\n            session && this.store.put(session_id, session);\n        }\n    },\n\n    onOmemoDestroyed: function () {\n        if (this.own_devices && Object.keys(this.own_devices).length != 0)\n            this.deleteOwnDevice();\n        this.cached_messages && this.cached_messages.destroy();\n        this.account.connection.deleteHandler(this._msg_handler);\n    },\n\n    deleteOwnDevice: function () {\n        let device_id = this.get('device_id');\n        delete this.own_devices[device_id];\n        let conn = this.account.getConnectionForIQ();\n        if (conn && conn.omemo) {\n            delete conn.omemo.devices[device_id];\n            conn.omemo.publishDevice(null, null, () => {});\n            conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n        }\n    },\n\n    onConnected: function () {\n        this.prekeys = new xabber.Prekeys({name: 'prekeys', model: this});\n        this.used_prekeys = new xabber.Prekeys({name: 'used_prekeys', model: this});\n        this.own_used_prekeys = new xabber.Prekeys({name: 'own_used_prekeys', model: this});\n        this.cached_messages = new xabber.DecryptedMessages({id: 'decrypted-messages'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-decrypted-messages-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        this.bundle = new xabber.Bundle(null, {store: this.store, model: this});\n        this.connection = this.account.connection;\n        this.registerMessageHandler();\n        this.addDevice();\n    },\n\n    getMyDevices: async function () {\n        if (!this._pending_own_devices) {\n            this._pending_own_devices = true;\n            this._dfd_own_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                let conn = this.account.getConnectionForIQ();\n                if (conn) {\n                    if (conn.omemo) {\n                        conn.omemo.getDevicesNode(null, (cb) => {\n                            conn.omemo.devices = conn.omemo.parseUserDevices($(cb));\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        }, function () {\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        });\n                    } else\n                        this._pending_own_devices = false;\n                } else\n                    this._pending_own_devices = false;\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_own_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    updateFingerprints: function (contact, device_id, fingerprint, trusted) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[contact])\n            fingerprints[contact] = {};\n        let contact_fingerprints = fingerprints[contact];\n        if (_.isArray(contact_fingerprints))\n            contact_fingerprints = {};\n        contact_fingerprints[device_id] = {fingerprint, trusted};\n        fingerprints[contact] = contact_fingerprints;\n        this.save('fingerprints', fingerprints);\n    },\n\n    isTrusted: function (jid, device_id, fingerprint) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[jid])\n            return;\n        if (!fingerprints[jid][device_id])\n            return;\n        let fing = fingerprints[jid][device_id];\n        if (fing) {\n            if (fing.fingerprint == fingerprint) {\n                if (fing.trusted === undefined)\n                    return;\n                else\n                    return fing.trusted;\n            }\n            else\n                return null;\n        }\n    },\n\n    cacheRetractVersion: function (version) {\n        console.log('version ' + version)\n        this.save('retract_version', version);\n    },\n\n    getRetractVersion: function () {\n        return this.get('retract_version');\n    },\n\n    addDevice: function () {\n        let device_id = this.get('device_id');\n        if (this.connection) {\n            let omemo = this.account.getConnectionForIQ().omemo;\n            if (Object.keys(omemo.devices).length) {\n                let device = omemo.devices[device_id];\n                if (!device) {\n                    let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                    this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                }\n                else {\n                    this.publishBundle();\n                }\n            }\n            else\n                omemo.getDevicesNode(null, (cb) => {\n                    this.account.getConnectionForIQ().omemo.devices = omemo.parseUserDevices($(cb));\n                    for (let dev_id in this.account.getConnectionForIQ().omemo.devices) {\n                        if (!this.own_devices[dev_id])\n                            this.own_devices[dev_id] = new xabber.Device({jid: this.account.get('jid'), id: dev_id}, { account: this.account, store: this.store});\n                    }\n                    let device = omemo.devices[device_id];\n                    if (!device) {\n                        let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                        this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                    }\n                    else {\n                        this.publishBundle();\n                    }\n                });\n        }\n    },\n\n    onDeviceIdUpdated: function () {\n        this.save('device_id', this.get('device_id'));\n    },\n\n    generateDeviceId: function () {\n        if (this.account.get('x_token') && this.account.get('x_token').token_uid && this.account.get('x_token').token_uid.length >= 8 && Number(this.account.get('x_token').token_uid.slice(0,8)))\n            return Number(this.account.get('x_token').token_uid.slice(0,8));\n        let min = 1,\n            max = Math.pow(2, 31) - 1,\n            rand = min + Math.random() * (max + 1 - min);\n        return Math.floor(rand);\n    },\n\n    updateMessage: function (attrs, contact) {\n        if (!this.cached_messages)\n            return;\n        this.cached_messages.updateMessage(attrs, contact);\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message', null, null, null, {'encrypted': true});\n    },\n\n    encrypt: function (contact, message) {\n        let peer = this.getPeer(contact.get('jid')),\n            $msg = $(message.tree()),\n            origin_id = $msg.children('origin-id').attr('id'),\n            plaintext = Strophe.serialize($msg.children('envelope')[0]) || \"\";\n\n        origin_id && this.cached_messages.putMessage(contact, origin_id, plaintext);\n\n        return peer.encrypt(plaintext).then((encryptedMessage) => {\n\n            let encryptedElement = $build('encrypted', {xmlns: Strophe.NS.OMEMO})\n                .c('header', {\n                    sid: this.get('device_id'),\n                    label: this.account.settings.get('device_label_text')\n                }),\n                myKeys = $build('keys', {jid: this.account.get('jid')});\n\n            encryptedElement.c('keys', { jid: contact.get('jid')});\n\n            for (let key of encryptedMessage.keys) {\n                let attrs = {\n                    rid: key.deviceId,\n                    kex: undefined\n                };\n                if (key.preKey) {\n                    attrs.kex = true;\n                }\n\n                if (peer.devices[key.deviceId])\n                    encryptedElement.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n                else\n                    myKeys.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n\n            }\n            encryptedElement.up().cnode(myKeys.tree());\n\n            encryptedElement.up().up()\n                .c('payload').t(utils.ArrayBuffertoBase64(encryptedMessage.payload));\n\n            $(message.tree()).find('envelope').remove();\n\n            message.cnode(encryptedElement.tree());\n            message.up().c('encryption', {\n                xmlns: Strophe.NS.EXPLICIT_MESSAGE_ENCRYPTION,\n                namespace: Strophe.NS.OMEMO\n            });\n            message.up().c('store', {\n                xmlns: 'urn:xmpp:hints'\n            }).up()\n                .c('body').t('This message is encrypted using OMEMO end-to-end encryption.').up();\n\n            return {message: message, is_trusted: encryptedMessage.is_trusted};\n        }).catch((msg) => {\n        });\n    },\n\n    hasChanges: function (o1, o2) {\n        let obj1 = _.clone(o1), obj2 = _.clone(o2);\n        for (let d in obj1) {\n            delete obj2[d];\n        }\n        for (let d in obj2) {\n            delete obj1[d];\n        }\n        return Object.keys(obj1).length || Object.keys(obj2).length;\n    },\n\n    receiveHeadlineMessage: function (message) {\n        if (!this.account.omemo || (this.account.omemo && this.cid != this.account.omemo.cid))\n            return;\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if ($message.find('event[xmlns=\"' + Strophe.NS.PUBSUB + '#event\"]').length) {\n            if (node == `${Strophe.NS.OMEMO}:devices`) {\n                let devices = this.account.getConnectionForIQ().omemo.parseUserDevices($message);\n                if (from_jid === this.account.get('jid')) {\n                    let has_devices = this.own_devices && Object.keys(this.own_devices).length,\n                        has_changes = this.hasChanges(this.own_devices, devices);\n                    this.account.getConnectionForIQ().omemo.devices = devices;\n                    let device_id = this.get('device_id'),\n                        device = this.account.getConnectionForIQ().omemo.devices[device_id];\n                    if (has_changes) {\n                        this.account.trigger(\"devices_updated\");\n                    }\n                    if (has_devices && has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                else {\n                    let peer = this.getPeer(from_jid),\n                        has_devices = peer.devices && Object.keys(peer.devices).length,\n                        has_changes = this.hasChanges(peer.devices, devices);\n                    peer.updateDevices(devices);\n                    if (has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                return;\n            }\n            if (node == `${Strophe.NS.OMEMO}:bundles`) {\n                let $item = $message.find('items item').first(),\n                    device_id = $item.attr('id'),\n                    $bundle = $item.children(`bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`), device;\n                if (from_jid === this.account.get('jid')) {\n                    let devices = this.account.getConnectionForIQ().omemo.devices\n                    if (devices && devices[device_id]) {\n                        if (!this.own_devices[device_id])\n                            this.own_devices[device_id] = new xabber.Device({jid: this.account.get('jid'), id: device_id}, { account: this.account, store: this.store});\n                        device = this.own_devices[device_id];\n                    }\n                } else {\n                    let peer = this.peers.get(from_jid);\n                    if (peer) {\n                        device = peer.devices[device_id];\n                    }\n                }\n                if (device) {\n                    let ik = $bundle.find(`ik`).text(),\n                        device_ik = device.get(`ik`), preKeys = [];\n                    if (!ik) {\n                        device.set('ik', null);\n                        return;\n                    }\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    device.preKeys = preKeys;\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    device.set('fingerprint', device.generateFingerprint());\n                    device_ik && (device_ik = utils.ArrayBuffertoBase64(device_ik));\n                    if (!_.isUndefined(device_ik) && device_ik != ik)\n                        this.account.trigger('trusting_updated');\n                }\n            }\n        }\n    },\n\n    receiveChatMessage: function (message, options, deferred) {\n        options = options || {};\n        let $message = $(message);\n        if ($message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length) {\n            if ($message.find('result[xmlns=\"' + Strophe.NS.MAM + '\"]').length)\n                _.extend(options, {\n                    is_mam: true,\n                    is_archived: true\n                });\n            if ($message.find('[xmlns=\"' + Strophe.NS.CARBONS + '\"]').length)\n                options.carbon_copied = true;\n\n            let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n                jid = (Strophe.getBareJidFromJid($msg.attr('from')) === this.account.get('jid') ? Strophe.getBareJidFromJid($msg.attr('to')) : Strophe.getBareJidFromJid($msg.attr('from'))) || options.from_jid,\n                contact = this.account.contacts.get(options.conversation ? options.conversation : jid),\n                stanza_id = $msg.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n                cached_msg = stanza_id && this.cached_messages && this.cached_messages.getMessage(contact, stanza_id);\n\n            if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid') && options.carbon_copied && options.carbon_direction && options.carbon_direction === 'sent')\n                return;\n\n            if (cached_msg) {\n                if (!options.replaced) {\n                    options.encrypted = true;\n                    this.getTrusted($message).then((is_trusted) => {\n                        options.is_trusted = is_trusted;\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                        if (options.gallery && deferred)\n                            deferred.resolve($message, options);\n                        this.account.chats.receiveChatMessage($message[0], options);\n                    });\n                    return;\n                }\n                else if (options.replaced && $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid') == this.get('device_id')) {\n                    options.encrypted = true;\n                    $message.find('body').remove();\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                    let chat = this.account.chats.getChat(contact, 'encrypted');\n                    chat && chat.messages.createFromStanza($message, options);\n                    let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                    if (msg_item) {\n                        msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                        chat && chat.item_view.updateLastMessage(chat.last_message);\n                    }\n                    return;\n                }\n            }\n\n            if (options.replaced) {\n                this.decrypt(message.children('replace').children('message'), options).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                        let chat = this.account.chats.getChat(contact, 'encrypted');\n                        chat && chat.messages.createFromStanza($message, options);\n                        let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                        if (msg_item) {\n                            msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                            chat && chat.item_view.updateLastMessage(chat.last_message);\n                        }\n                    }\n                });\n            } else {\n                this.getTrusted($message).then((is_trusted) => {\n                    options.is_trusted = is_trusted;\n                    return this.decrypt(message);\n                }).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                    }\n                    else {\n                        if (decrypted_msg === null) {\n                            this.account.chats.getChat(contact, 'encrypted').item_view.updateLastMessage();\n                            return;\n                        }\n                        options.not_encrypted = true;\n                        delete options.is_trusted;\n                    }\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                    if (options.gallery && decrypted_msg && deferred)\n                        deferred.resolve($message, options);\n                    else if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                }).catch((e) => {\n                    if (e.name === 'MessageCounterError')//for capturing double decryption of same message\n                        return;\n                    if (options.synced_msg && !options.decryption_retry) {\n                        this.receiveChatMessage($message[0], _.extend(options, {decryption_retry: true}));\n                        return;\n                    }\n                    options.not_encrypted = true;\n                    delete options.is_trusted;\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).remove();\n                    if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                });\n            }\n            if (options.gallery && deferred)\n                deferred.reject();\n        }\n        if (options.gallery && deferred)\n            deferred.reject();\n    },\n\n    checkOwnFingerprints: async function () {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                dfd = new $.Deferred(), counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                resolve(trust);\n            });\n            if (Object.keys(this.own_devices).length) {\n                counter = Object.keys(this.own_devices).length;\n                for (let device_id in this.own_devices) {\n                    let device = this.own_devices[device_id];\n                    if (device_id == this.get('device_id')) {\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                        continue;\n                    }\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null)\n                                is_trusted = null;\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        });\n                    }\n                }\n            }\n            else {\n                this.getMyDevices().then(() => {\n                    this.onOwnDevicesUpdated().then(() => {\n                        counter = Object.keys(this.own_devices).length;\n                        for (let device_id in this.own_devices) {\n                            if (device_id == this.get('device_id')) {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                                continue;\n                            }\n                            let device = this.own_devices[device_id];\n                            if (device.get('fingerprint')) {\n                                let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                                if (trusted === undefined && is_trusted !== null)\n                                    is_trusted = undefined;\n                                if (trusted === null)\n                                    is_trusted = null;\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            } else {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            }\n                        }\n                    });\n                });\n            }\n        });\n    },\n\n    checkContactFingerprints: function (contact) {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                peer = this.getPeer(contact.get('jid')),\n                dfd = new $.Deferred(), counter = 0, unverified_counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                contact.trigger('update_trusted', trust);\n                resolve({trust: trust, unverified_counter: unverified_counter});\n            });\n            if (Object.keys(peer.devices).length) {\n                counter = Object.keys(peer.devices).length;\n                for (let device_id in peer.devices) {\n                    let device = peer.devices[device_id];\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null){\n                            is_trusted = undefined;\n                            unverified_counter++;\n                        }\n                        if (trusted === null){\n                            is_trusted = null;\n                            unverified_counter++;\n                        }\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null){\n                            is_trusted = undefined;\n                            unverified_counter++;\n                        }\n                        if (trusted === null){\n                            is_trusted = null;\n                            unverified_counter++;\n                        }\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null){\n                                is_trusted = undefined;\n                                unverified_counter++;\n                            }\n                            if (trusted === null){\n                                is_trusted = null;\n                                unverified_counter++;\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                }\n            } else {\n                peer.getDevicesNode().then(() => {\n                    counter = Object.keys(peer.devices).length;\n                    !counter && dfd.resolve('nil');\n                    for (let device_id in peer.devices) {\n                        let device = peer.devices[device_id];\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null){\n                                is_trusted = undefined;\n                                unverified_counter++;\n                            }\n                            if (trusted === null) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                else{\n                                    is_trusted = null;\n                                    unverified_counter++;\n                                }\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                });\n\n            }\n        });\n    },\n\n    getTrusted: async function ($message) {\n        let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n            from_jid = Strophe.getBareJidFromJid($msg.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($msg.attr('to')),\n            contact = this.account.contacts.mergeContact(from_jid === this.account.get('jid') ? to_jid : from_jid);\n\n        let own_trusted = await this.checkOwnFingerprints(),\n            contact_trusted = await this.checkContactFingerprints(contact);\n        contact_trusted = contact_trusted.trust;\n        if (own_trusted === 'error' || (own_trusted === 'none' && contact_trusted !== 'error')) {\n            return own_trusted;\n        } else if (contact_trusted === 'error' || contact_trusted === 'none') {\n            return contact_trusted;\n        } else {\n            let device_id = $message.find('encrypted header').attr('sid'),\n                peer = this.getPeer(contact.get('jid')),\n                device = peer.devices[device_id];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                    if (trusted === false) {\n                        return 'untrusted';\n                    }\n                }\n            }\n            return true;\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type');\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n    },\n\n    parseEncrypted: function ($encrypted) {\n        let $payload = $encrypted.children(`payload`),\n            $header = $encrypted.children('header'),\n            payload = utils.fromBase64toArrayBuffer($payload.text()),\n            sid = Number($header.attr('sid'));\n\n        let keys = $header.find(`key`).get().map(function(keyElement) {\n            return {\n                preKey: $(keyElement).attr('kex') === 'true' || $(keyElement).attr('kex') === '1',\n                ciphertext: utils.fromBase64toArrayBuffer($(keyElement).text()),\n                deviceId: parseInt($(keyElement).attr('rid'))\n            };\n        });\n\n        return {sid, keys, payload};\n    },\n\n    getPeer: function (jid) {\n        if (!this.peers.get(jid))\n            this.peers.create({jid}, {account:this.account});\n        return this.peers.get(jid);\n    },\n\n    decrypt: async function (message, options) {\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')) || options.from_jid,\n            $encrypted;\n\n        if ($message.find('result[xmlns=\"'+Strophe.NS.MAM+'\"]').length) {\n            let $m = $message.find('message').first();\n            from_jid = Strophe.getBareJidFromJid($m.attr('from'));\n            $encrypted = $message.children(`result`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else if ($message.find('[xmlns=\"'+Strophe.NS.CARBONS+'\"]').length){\n            $encrypted = $message.children(`[xmlns=\"${Strophe.NS.CARBONS}\"]`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else\n            $encrypted = $message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n\n        let encryptedData = this.parseEncrypted($encrypted),\n            deviceId = this.get('device_id'),\n            ownPreKeysArr =  encryptedData.keys.filter(preKey => preKey.deviceId == deviceId),\n            ownPreKey = ownPreKeysArr[0];\n        if (!ownPreKey)\n            return null;\n        let peer = this.getPeer(from_jid),\n            exportedKey;\n        try {\n            exportedKey = await peer.decrypt(encryptedData.sid, ownPreKey.ciphertext, ownPreKey.preKey);\n        }\n        catch (e) {\n            throw e;\n        }\n        if (!exportedKey)\n            return;\n        let exportedMasterKey = exportedKey.slice(0, 32),\n            HMACData = exportedKey.slice(32);\n\n        return utils.AES.decrypt(exportedMasterKey, HMACData, encryptedData.payload);\n    },\n\n    toBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    publish: function (spk, ik, pks, callback) {\n        if (!this.account.connection)\n            return;\n        let conn_omemo = this.account.getConnectionForIQ().omemo,\n            prekeys = [];\n        pks.forEach((pk) => {\n            let id = pk.keyId,\n                pubKey = utils.ArrayBuffertoBase64(pk.keyPair.pubKey),\n                privKey = utils.ArrayBuffertoBase64(pk.keyPair.privKey),\n                key = JSON.stringify({pubKey, privKey});\n            if (!pk.signature) {\n                prekeys.push({id: id, key: pubKey});\n                this.prekeys.put({id, key});\n            }\n        });\n        conn_omemo.configNode(() => {\n            conn_omemo.publishBundle({\n                spk: {id: spk.keyId, key: utils.ArrayBuffertoBase64(spk.keyPair.pubKey)},\n                spks: utils.ArrayBuffertoBase64(spk.signature),\n                ik:  utils.ArrayBuffertoBase64(ik),\n                pks: prekeys,\n                device_id: this.get('device_id')\n            }, callback);\n        });\n    },\n\n    removePreKey: async function (id) {\n        if (!this.account)\n            return;\n        let bundle = this.bundle,\n            removed_pk = this.bundle.preKeys.find(p => p.keyId === id && !p.signature);\n        if (!removed_pk)\n            return;\n        let pubKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.privKey),\n            key = JSON.stringify({pubKey, privKey}),\n            idx = this.bundle.preKeys.indexOf(removed_pk);\n        bundle.preKeys.splice(idx, 1);\n        this.own_used_prekeys.put({id, key});\n        this.prekeys.remove(id);\n        if (bundle.preKeys.length && bundle.preKeys.length < constants.MIN_PREKEYS_COUNT) {\n            let missing_keys = constants.PREKEYS_COUNT - bundle.preKeys.length,\n                last_id = _.sortBy(bundle.preKeys, 'keyId')[bundle.preKeys.length - 1].keyId,\n                counter = 0;\n            for (let i = ++last_id; i < (last_id + missing_keys); i++){\n                await this.bundle.generatePreKey(i).then((prekey) => {\n                    bundle.preKeys[i] = prekey;\n                    counter++;\n                    if (counter === missing_keys)\n                        this.account.omemo.publishBundle();\n                });\n            }\n            if (missing_keys === 0)\n                this.account.omemo.publishBundle();\n        }\n        else\n            this.account.omemo.publishBundle();\n    },\n\n    cacheSession: function (attrs) {\n        let id = attrs.id,\n            session = attrs.rec,\n            sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        sessions[id] = session;\n        this.save('sessions', sessions);\n    },\n\n    removeSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        delete sessions[id];\n        this.save('sessions', sessions);\n    },\n\n    getSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        return sessions[id];\n    },\n\n    publishBundle: async function (device_attrs) {\n        if (!this.bundle)\n            return;\n        let spk = this.bundle.preKeys.find(pk => pk.signature),\n            ik = await this.store.getIdentityKeyPair(),\n            pks = this.bundle.preKeys;\n        if (!spk || !ik) {\n            this.set('resend_bundle', true);\n            this.set('device_attrs', device_attrs);\n            return;\n        }\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (device_attrs){\n                device_attrs.omemo.publishDevice(device_attrs.device_id, device_attrs.label);\n            }\n        });\n        this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.account.get('jid'), id: this.get('device_id')}, (res) => {\n            this.publish(spk, ik.pubKey, pks, () => {\n                dfd.resolve();\n            });\n        }, (err) => {\n            if (($(err).find('error').attr('code') == 404)){\n                this.account.getConnectionForIQ().omemo.createBundleNode(() => {\n                    this.publish(spk, ik.pubKey, pks, () => {\n                        dfd.resolve();\n                    });\n                });\n            }\n        });\n    },\n\n    onOwnDevicesUpdated: async function () {\n        return new Promise((resolve, reject) => {\n            let conn = this.account.getConnectionForIQ();\n            if (conn && conn.omemo && conn.omemo.devices) {\n                for (let d in this.own_devices) {\n                    if (!conn.omemo.devices[d]) {\n                        this.account.omemo.removeSession('session' + this.own_devices[d].address.toString());\n                        delete this.own_devices[d];\n                    }\n                }\n                let counter = Object.keys(conn.omemo.devices).length;\n                for (let device_id in conn.omemo.devices) {\n                    if (!this.own_devices[device_id])\n                        this.own_devices[device_id] = new xabber.Device({\n                            jid: this.account.get('jid'),\n                            id: device_id\n                        }, {account: this.account, store: this.store});\n                    let device = this.own_devices[device_id],\n                        label = conn.omemo.devices[device_id].label;\n                    if (!device.get('ik')) {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && resolve();\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            let fingerprint = device.generateFingerprint();\n                            if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                                device.set('fingerprint', fingerprint);\n                            counter--;\n                            !counter && resolve();\n                        }).catch(() => {\n                            counter--;\n                            !counter && resolve();\n                        });\n                    } else if (!device.get('fingerprint')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        counter--;\n                        !counter && resolve();\n                    } else {\n                        counter--;\n                        !counter && resolve();\n                    }\n                    label && device.set('label', label);\n                }\n            }\n        });\n    }\n});\n\nxabber.DecryptedMessages = Backbone.ModelWithStorage.extend({\n    defaults: {\n        messages: {}\n    },\n\n    getMessage: function (contact, stanza_id) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages[stanza_id];\n    },\n\n    getMessages: function (contact) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages;\n    },\n\n    putMessage: function (contact, stanza_id, message) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        contact_messages[stanza_id] = message;\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    removeMessage: function (attrs, contact) {\n        let origin_id = attrs.origin_id;\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        delete contact_messages[origin_id];\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    updateMessage: function (attrs, contact) {\n        let stanza_id = attrs.stanza_id,\n            origin_id = attrs.origin_id,\n            messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {},\n            message = contact_messages[origin_id];\n        if (origin_id)\n            this.removeMessage({origin_id}, contact);\n        if (stanza_id)\n            this.putMessage(contact, stanza_id, message);\n    }\n});\n\nxabber.SignalProtocolStore = Backbone.Model.extend({\n    initialize: function () {\n        this.Direction = {\n            SENDING: 1,\n            RECEIVING: 2\n        };\n        this.store = {};\n    },\n\n    getIdentityKeyPair: function () {\n        return Promise.resolve(this.get('identityKey'));\n    },\n\n    getLocalRegistrationId: function () {\n        return Promise.resolve(this.get('registrationId'));\n    },\n\n    put: function (key, value) {\n        if (key === undefined || value === undefined || key === null || value === null)\n            throw new Error(\"Tried to store undefined/null\");\n        this.store[key] = value;\n    },\n\n    get: function (key, defaultValue) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to get value for undefined/null key\");\n        if (key in this.store) {\n            return this.store[key];\n        } else {\n            return defaultValue;\n        }\n    },\n\n    remove: function (key) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to remove value for undefined/null key\");\n        delete this.store[key];\n    },\n\n    isTrustedIdentity: function (identifier, identityKey, direction) {\n        if (identifier === null || identifier === undefined) {\n            throw new Error(\"tried to check identity key for undefined/null key\");\n        }\n        if (!(identityKey instanceof ArrayBuffer)) {\n            throw new Error(\"Expected identityKey to be an ArrayBuffer\");\n        }\n        let trusted = this.get('identityKey' + identifier);\n        if (trusted === undefined) {\n            return Promise.resolve(true);\n        }\n        return Promise.resolve(util.toString(identityKey) === util.toString(trusted));\n    },\n\n    loadIdentityKey: function (identifier) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to get identity key for undefined/null key\");\n        return Promise.resolve(this.get('identityKey' + identifier));\n    },\n\n    saveIdentity: function (identifier, identityKey) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to put identity key for undefined/null key\");\n\n        let address = new SignalProtocolAddress.fromString(identifier);\n\n        let existing = this.get('identityKey' + address.getName());\n        this.put('identityKey' + address.getName(), identityKey);\n\n        if (existing && libsignal.toString(identityKey) !== libsignal.toString(existing)) {\n            return Promise.resolve(true);\n        } else {\n            return Promise.resolve(false);\n        }\n\n    },\n\n    /* Returns a prekeypair object or undefined */\n    loadPreKey: function (keyId) {\n        let res = this.get('25519KeypreKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storePreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeypreKey' + keyId, keyPair));\n    },\n\n    removePreKey: function (keyId) {\n        this.trigger('prekey_removed', keyId);\n        // return Promise.resolve(this.remove('25519KeypreKey' + keyId));\n    },\n\n    /* Returns a signed keypair object or undefined */\n    loadSignedPreKey: function (keyId) {\n        let res = this.get('25519KeysignedKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storeSignedPreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeysignedKey' + keyId, keyPair));\n    },\n\n    removeSignedPreKey: function (keyId) {\n        return Promise.resolve(this.remove('25519KeysignedKey' + keyId));\n    },\n\n    loadSession: function (identifier) {\n        return Promise.resolve(this.get('session' + identifier));\n    },\n\n    hasSession: function (identifier) {\n        return !!this.get('session' + identifier)\n    },\n\n    storeSession: function (identifier, record) {\n        this.trigger('session_stored', {id: 'session' + identifier, rec: record});\n        return Promise.resolve(this.put('session' + identifier, record));\n    },\n\n    removeSession: function (identifier) {\n        return Promise.resolve(this.remove('session' + identifier));\n    },\n\n    getAllSessions: function (identifier) {\n        let sessions = [];\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                sessions.push({id: id, session: this.store[id]});\n            }\n        }\n        return Promise.resolve(sessions);\n    },\n\n    removeAllSessions: function (identifier) {\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                delete this.store[id];\n            }\n        }\n        return Promise.resolve();\n    }\n});\n\nxabber.OMEMOEnablePlaceholder = xabber.BasicView.extend({\n    className: 'omemo-enable-placeholder',\n\n    events: {\n        'click .btn-enable': 'enableOmemo',\n        'click .btn-escape': 'closeOmemoPlaceholder'\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.updateColorScheme();\n        this.$el.html(templates.omemo_enable({jid: this.account.get('jid')}));\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.account.session.on(\"change:connected\", this.updateConnected, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.account.settings.on(\"change:omemo\", this.onOmemoChange, this);\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onUpdatedScreen: function () {\n        if (!this.account.omemo_enable_placeholder || this.account.omemo_enable_placeholder.cid !== this.cid)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    updateConnected: function () {\n        if (!this.account.isConnected())\n            this.close();\n    },\n\n    enableOmemo: function () {\n        this.account.settings.save('omemo', true);\n        this.close();\n        this.account.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.account.omemo.onConnected();\n        }, 2000);\n    },\n\n    closeOmemoPlaceholder: function () {\n        this.account.settings.save('omemo', false);\n        this.close();\n    },\n\n    onOmemoChange: function () {\n        if (this.account.settings.get('omemo'))\n            this.close();\n    },\n\n    close: function () {\n        this.trigger('remove') && this.remove();\n        this.account.omemo_enable_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo = new xabber.Omemo({id: 'omemo'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.get('jid'),\n        fetch: 'before'\n    });\n});\n\nxabber.Account.addConnPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo.onConnected();\n}, true, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nimport views from \"xabber-views\";\nimport api_service from \"xabber-api-service\";\nimport strophe from \"xabber-strophe\";\nimport vcard from \"xabber-vcard\";\nimport accounts from \"xabber-accounts\";\nimport discovery from \"xabber-discovery\";\nimport contacts from \"xabber-contacts\";\nimport chats from \"xabber-chats\";\nimport searching from \"xabber-searching\";\nimport mentions from \"xabber-mentions\";\nimport ui from \"xabber-ui\";\nimport omemo from \"xabber-omemo\";\n\nxabber.extendWith(views, api_service, strophe, vcard,\n    accounts, discovery, contacts, chats, searching, mentions, ui, omemo);\nglobal.xabber = xabber;\n\nexport default xabber;\n","var map = {\n\t\"./accounts/emojis.json\": 85304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 92444;","var map = {\n\t\"./accounts/account_settings_modal.html\": 59166,\n\t\"./accounts/add_account.html\": 24109,\n\t\"./accounts/audio_file_waveform.html\": 56949,\n\t\"./accounts/avatars_gallery.html\": 47837,\n\t\"./accounts/change_password.html\": 34999,\n\t\"./accounts/change_status.html\": 33999,\n\t\"./accounts/current_token_item.html\": 86348,\n\t\"./accounts/current_token_item_modal.html\": 5766,\n\t\"./accounts/emoji_panel.html\": 90231,\n\t\"./accounts/emoji_picker.html\": 25482,\n\t\"./accounts/emoji_picker_tabs.html\": 20458,\n\t\"./accounts/existing_groupchat_item.html\": 4870,\n\t\"./accounts/global_settings_item.html\": 98078,\n\t\"./accounts/global_settings_item_modal.html\": 56001,\n\t\"./accounts/media_gallery_account.html\": 57872,\n\t\"./accounts/media_gallery_account_file.html\": 39440,\n\t\"./accounts/resource.html\": 75216,\n\t\"./accounts/resource_right.html\": 255,\n\t\"./accounts/settings_left.html\": 35626,\n\t\"./accounts/settings_right.html\": 34987,\n\t\"./accounts/single_account_settings_modal.html\": 86572,\n\t\"./accounts/status_message_input_widget.html\": 71326,\n\t\"./accounts/token_item.html\": 52509,\n\t\"./accounts/token_item_modal.html\": 84377,\n\t\"./accounts/toolbar_item.html\": 54810,\n\t\"./accounts/webcam_panel.html\": 92797,\n\t\"./accounts/xmpp_login.html\": 64630,\n\t\"./api_service/add_xabber_account.html\": 64805,\n\t\"./api_service/linked_email_item.html\": 5398,\n\t\"./api_service/sync_settings.html\": 48881,\n\t\"./api_service/sync_settings_account_item.html\": 28522,\n\t\"./api_service/xabber_account.html\": 29674,\n\t\"./api_service/xabber_login.html\": 48755,\n\t\"./api_service/xabber_login_by_email.html\": 24864,\n\t\"./base/about.html\": 99288,\n\t\"./base/backgrounds_gallery.html\": 77428,\n\t\"./base/color_picker.html\": 51462,\n\t\"./base/color_scheme.html\": 83430,\n\t\"./base/dialog.html\": 62985,\n\t\"./base/fingerprint_devices_item.html\": 16969,\n\t\"./base/fingerprint_item.html\": 75551,\n\t\"./base/fingerprints.html\": 5822,\n\t\"./base/fingerprints_devices.html\": 26376,\n\t\"./base/input_widget.html\": 10596,\n\t\"./base/jingle_message_calling.html\": 62077,\n\t\"./base/omemo_enable.html\": 17661,\n\t\"./base/plyr_player_popup.html\": 14197,\n\t\"./base/settings.html\": 15887,\n\t\"./base/settings_modal.html\": 81012,\n\t\"./base/toolbar.html\": 45459,\n\t\"./chats/add_chat_account_item.html\": 56468,\n\t\"./chats/chat_bottom.html\": 74335,\n\t\"./chats/chat_content.html\": 10224,\n\t\"./chats/chat_content_contact.html\": 9031,\n\t\"./chats/chat_content_placeholder.html\": 36209,\n\t\"./chats/chat_head.html\": 29317,\n\t\"./chats/chat_item.html\": 95370,\n\t\"./chats/chat_placeholder.html\": 5696,\n\t\"./chats/chats_panel.html\": 80026,\n\t\"./chats/checkbox.html\": 40433,\n\t\"./chats/content_encryption_warning.html\": 96249,\n\t\"./chats/encryption_warning.html\": 53318,\n\t\"./chats/forward_panel.html\": 83176,\n\t\"./chats/group_chats/add_group_chat.html\": 23118,\n\t\"./chats/group_chats/invitation_panel_view.html\": 1015,\n\t\"./chats/group_chats/mention_item.html\": 79011,\n\t\"./chats/group_chats/pinned_message_panel.html\": 68096,\n\t\"./chats/location_popup.html\": 21732,\n\t\"./chats/message_item.html\": 59170,\n\t\"./chats/messages/attached_file.html\": 97042,\n\t\"./chats/messages/audio_file.html\": 94382,\n\t\"./chats/messages/audio_file_waveform.html\": 74211,\n\t\"./chats/messages/auth_request.html\": 63576,\n\t\"./chats/messages/file.html\": 89256,\n\t\"./chats/messages/file_loading.html\": 83034,\n\t\"./chats/messages/file_upload.html\": 46311,\n\t\"./chats/messages/forwarded.html\": 19038,\n\t\"./chats/messages/group_request.html\": 29794,\n\t\"./chats/messages/hidden-template-for-2.html\": 15867,\n\t\"./chats/messages/hidden-template-for-3.html\": 87486,\n\t\"./chats/messages/hidden-template-for-4.html\": 19761,\n\t\"./chats/messages/hidden-template-for-5.html\": 20365,\n\t\"./chats/messages/hidden-template-for-6.html\": 57344,\n\t\"./chats/messages/images_details.html\": 13786,\n\t\"./chats/messages/link_reference.html\": 59840,\n\t\"./chats/messages/link_reference_chat.html\": 39475,\n\t\"./chats/messages/loading_circle.html\": 54301,\n\t\"./chats/messages/location.html\": 55127,\n\t\"./chats/messages/main.html\": 76510,\n\t\"./chats/messages/saved_main.html\": 18479,\n\t\"./chats/messages/searched.html\": 83228,\n\t\"./chats/messages/system.html\": 85046,\n\t\"./chats/messages/template-for-2.html\": 2861,\n\t\"./chats/messages/template-for-3.html\": 70423,\n\t\"./chats/messages/template-for-4.html\": 90719,\n\t\"./chats/messages/template-for-5.html\": 39125,\n\t\"./chats/messages/template-for-6.html\": 20129,\n\t\"./chats/messages/video.html\": 87795,\n\t\"./chats/messages/voice_message.html\": 43795,\n\t\"./chats/saved_chat_head.html\": 21385,\n\t\"./chats/send_media.html\": 34054,\n\t\"./chats/subscription_buttons.html\": 47725,\n\t\"./chats/unread_marker.html\": 98875,\n\t\"./contacts/account_roster_left.html\": 69006,\n\t\"./contacts/account_roster_right.html\": 23643,\n\t\"./contacts/add_contact.html\": 24718,\n\t\"./contacts/add_contact_account_item.html\": 31238,\n\t\"./contacts/audio_file_waveform.html\": 49820,\n\t\"./contacts/contact_blocked_item.html\": 73253,\n\t\"./contacts/contact_details.html\": 62859,\n\t\"./contacts/contact_details_right.html\": 38624,\n\t\"./contacts/contact_left_item.html\": 24958,\n\t\"./contacts/contact_placeholder.html\": 19768,\n\t\"./contacts/contact_right_item.html\": 72055,\n\t\"./contacts/edit_contact.html\": 45078,\n\t\"./contacts/edit_group.html\": 4679,\n\t\"./contacts/group_chats/add_blocked_participant_form.html\": 37639,\n\t\"./contacts/group_chats/badge_edit_view.html\": 11868,\n\t\"./contacts/group_chats/default_restrictions.html\": 87004,\n\t\"./contacts/group_chats/default_restrictions_right.html\": 59115,\n\t\"./contacts/group_chats/description_input_widget.html\": 49080,\n\t\"./contacts/group_chats/file_item.html\": 79481,\n\t\"./contacts/group_chats/group_chat_details.html\": 69426,\n\t\"./contacts/group_chats/group_chat_details_right.html\": 18939,\n\t\"./contacts/group_chats/group_chat_properties.html\": 15159,\n\t\"./contacts/group_chats/group_chat_properties_edit.html\": 20904,\n\t\"./contacts/group_chats/group_chat_properties_right.html\": 69849,\n\t\"./contacts/group_chats/group_member_item.html\": 38114,\n\t\"./contacts/group_chats/group_member_item_right.html\": 53119,\n\t\"./contacts/group_chats/group_name_input_widget.html\": 82703,\n\t\"./contacts/group_chats/group_status.html\": 70569,\n\t\"./contacts/group_chats/group_status_right.html\": 27157,\n\t\"./contacts/group_chats/invitation.html\": 53464,\n\t\"./contacts/group_chats/invited_member_item.html\": 87824,\n\t\"./contacts/group_chats/participant_badge_input_widget.html\": 84939,\n\t\"./contacts/group_chats/participant_details_item.html\": 66493,\n\t\"./contacts/group_chats/participant_details_item_right.html\": 83326,\n\t\"./contacts/group_chats/participant_details_right.html\": 1593,\n\t\"./contacts/group_chats/participant_rights.html\": 76252,\n\t\"./contacts/group_chats/participants.html\": 93172,\n\t\"./contacts/group_chats/participants_right_panel.html\": 19295,\n\t\"./contacts/group_chats/pinned_message.html\": 54630,\n\t\"./contacts/group_chats/private_participant_details.html\": 15369,\n\t\"./contacts/group_chats/private_participant_details_item_right.html\": 79983,\n\t\"./contacts/group_chats/restriction_item.html\": 87050,\n\t\"./contacts/group_chats/right_expire_variants.html\": 54338,\n\t\"./contacts/group_chats/set_status.html\": 67065,\n\t\"./contacts/group_chats/status_item.html\": 27893,\n\t\"./contacts/group_left.html\": 57973,\n\t\"./contacts/group_right.html\": 95561,\n\t\"./contacts/group_settings.html\": 21612,\n\t\"./contacts/groups.html\": 62605,\n\t\"./contacts/groups_checkbox_list.html\": 54515,\n\t\"./contacts/groups_checkbox_list_contact.html\": 52661,\n\t\"./contacts/groups_list.html\": 58114,\n\t\"./contacts/groups_new_group.html\": 57713,\n\t\"./contacts/media_item.html\": 17905,\n\t\"./contacts/media_items_empty.html\": 23546,\n\t\"./contacts/preloader.html\": 4142,\n\t\"./contacts/roster_left.html\": 50869,\n\t\"./contacts/roster_right.html\": 22136,\n\t\"./contacts/roster_settings.html\": 54186,\n\t\"./mentions/mention_item.html\": 19253,\n\t\"./mentions/mentions_panel.html\": 50291,\n\t\"./mentions/mentions_placeholder.html\": 20103,\n\t\"./searching/existing_groupchat_details_view.html\": 31897,\n\t\"./searching/existing_groupchat_item.html\": 71655,\n\t\"./searching/searching_account_item.html\": 3103,\n\t\"./searching/searching_wide.html\": 43143,\n\t\"./svg/account-outline.html\": 20865,\n\t\"./svg/account.html\": 32721,\n\t\"./svg/address-outline.html\": 66656,\n\t\"./svg/address.html\": 94429,\n\t\"./svg/alarm-bell.html\": 47158,\n\t\"./svg/alert-circle.html\": 55133,\n\t\"./svg/bell-off.html\": 14759,\n\t\"./svg/bell-sleep.html\": 11713,\n\t\"./svg/bell.html\": 55155,\n\t\"./svg/birthday-outline.html\": 23977,\n\t\"./svg/birthday.html\": 74741,\n\t\"./svg/blocked-add.html\": 89768,\n\t\"./svg/blocked.html\": 33574,\n\t\"./svg/bot-variant.html\": 94862,\n\t\"./svg/bot.html\": 29568,\n\t\"./svg/bug.html\": 89965,\n\t\"./svg/call-outline.html\": 16938,\n\t\"./svg/call.html\": 9530,\n\t\"./svg/camera-retake.html\": 25430,\n\t\"./svg/cancel.html\": 80595,\n\t\"./svg/channel.html\": 40203,\n\t\"./svg/chat.html\": 71714,\n\t\"./svg/check-circle.html\": 62633,\n\t\"./svg/check.html\": 26446,\n\t\"./svg/chevron-down.html\": 79353,\n\t\"./svg/chevron-left-variant.html\": 32011,\n\t\"./svg/chevron-right-variant.html\": 19297,\n\t\"./svg/circles.html\": 61265,\n\t\"./svg/client-outline.html\": 52773,\n\t\"./svg/client.html\": 6625,\n\t\"./svg/clock-outline.html\": 93813,\n\t\"./svg/close.html\": 70874,\n\t\"./svg/cloud.html\": 55696,\n\t\"./svg/contact-add.html\": 63272,\n\t\"./svg/crosshairs-gps.html\": 57197,\n\t\"./svg/crosshairs-question.html\": 40765,\n\t\"./svg/crosshairs.html\": 82823,\n\t\"./svg/database-lock.html\": 17338,\n\t\"./svg/database.html\": 41473,\n\t\"./svg/description-outline.html\": 23373,\n\t\"./svg/description.html\": 63993,\n\t\"./svg/device-cellphone.html\": 79824,\n\t\"./svg/device-console.html\": 32111,\n\t\"./svg/device-desktop.html\": 5772,\n\t\"./svg/device-tablet.html\": 18955,\n\t\"./svg/device-web.html\": 16919,\n\t\"./svg/devices.html\": 50832,\n\t\"./svg/edit-outline.html\": 96840,\n\t\"./svg/edit.html\": 22845,\n\t\"./svg/email-outline.html\": 66206,\n\t\"./svg/email.html\": 22505,\n\t\"./svg/expires.html\": 21321,\n\t\"./svg/file-audio.html\": 3643,\n\t\"./svg/file-document.html\": 88700,\n\t\"./svg/file-pdf.html\": 3468,\n\t\"./svg/file-presentation.html\": 34417,\n\t\"./svg/file-video.html\": 98587,\n\t\"./svg/file-zip.html\": 89193,\n\t\"./svg/file.html\": 34058,\n\t\"./svg/fullname-outline.html\": 16109,\n\t\"./svg/fullname.html\": 12784,\n\t\"./svg/group-incognito.html\": 49703,\n\t\"./svg/group-invite.html\": 89411,\n\t\"./svg/group-private.html\": 81044,\n\t\"./svg/group-public.html\": 56403,\n\t\"./svg/history.html\": 35726,\n\t\"./svg/ic-at.html\": 81363,\n\t\"./svg/ic-jabber.html\": 9140,\n\t\"./svg/ic-searching.html\": 46476,\n\t\"./svg/id-outline.html\": 19324,\n\t\"./svg/id.html\": 50807,\n\t\"./svg/image.html\": 90226,\n\t\"./svg/index.html\": 2612,\n\t\"./svg/information-outline.html\": 52973,\n\t\"./svg/information.html\": 66035,\n\t\"./svg/invite-outline.html\": 34289,\n\t\"./svg/job-outline.html\": 31802,\n\t\"./svg/job.html\": 97579,\n\t\"./svg/key.html\": 46753,\n\t\"./svg/link.html\": 16205,\n\t\"./svg/lock-alert.html\": 63234,\n\t\"./svg/lock-check.html\": 14833,\n\t\"./svg/lock-cross.html\": 8513,\n\t\"./svg/lock-open.html\": 1652,\n\t\"./svg/lock-question.html\": 67160,\n\t\"./svg/lock.html\": 6258,\n\t\"./svg/map-marker-outline.html\": 83740,\n\t\"./svg/map-marker.html\": 70776,\n\t\"./svg/membership-outline.html\": 8872,\n\t\"./svg/message-bookmark-outline.html\": 6278,\n\t\"./svg/message-group.html\": 35529,\n\t\"./svg/minus.html\": 79092,\n\t\"./svg/mobile.html\": 33767,\n\t\"./svg/palette.html\": 43710,\n\t\"./svg/pause.html\": 58080,\n\t\"./svg/picture-in-picture-bottom-right.html\": 91421,\n\t\"./svg/picture-in-picture-minimize.html\": 42173,\n\t\"./svg/picture-in-picture-top-right.html\": 74578,\n\t\"./svg/pinned-circle-small.html\": 54052,\n\t\"./svg/pinned.html\": 9443,\n\t\"./svg/play.html\": 43069,\n\t\"./svg/player-float.html\": 30030,\n\t\"./svg/player-full.html\": 60259,\n\t\"./svg/player-mini-variant.html\": 70099,\n\t\"./svg/player-mini.html\": 77531,\n\t\"./svg/plus.html\": 85123,\n\t\"./svg/plyr.html\": 10410,\n\t\"./svg/qrcode.html\": 17943,\n\t\"./svg/restrictions-outline.html\": 89701,\n\t\"./svg/rss-variant.html\": 89657,\n\t\"./svg/rss.html\": 15645,\n\t\"./svg/saved-messages.html\": 11797,\n\t\"./svg/search.html\": 11146,\n\t\"./svg/security.html\": 91467,\n\t\"./svg/server.html\": 71188,\n\t\"./svg/star-face.html\": 1866,\n\t\"./svg/status-outline.html\": 52555,\n\t\"./svg/status.html\": 5000,\n\t\"./svg/subscription-from.html\": 5414,\n\t\"./svg/subscription-to.html\": 8020,\n\t\"./svg/task.html\": 41835,\n\t\"./svg/translate.html\": 98431,\n\t\"./svg/trash.html\": 61686,\n\t\"./svg/video.html\": 98070,\n\t\"./svg/volume-high.html\": 87658,\n\t\"./svg/volume-off-variant.html\": 7962,\n\t\"./svg/volume-off.html\": 14032,\n\t\"./svg/web.html\": 7094,\n\t\"./svg/xabber-offline.html\": 50033,\n\t\"./svg/xabber-online.html\": 74922,\n\t\"./svg/xmpp.html\": 92052,\n\t\"./vcard/vcard.html\": 73889,\n\t\"./vcard/vcard_edit.html\": 11803,\n\t\"./vcard/vcard_edit_modal.html\": 43918,\n\t\"./vcard/vcard_modal.html\": 59265,\n\t\"./vcard/vcard_right.html\": 93047\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 89293;","let client_translation_progress = {\"en\":100,\"ar\":27,\"az\":2,\"be\":13,\"bg\":63,\"bs\":0,\"ca\":24,\"cs\":99,\"cy\":0,\"da\":0,\"de\":48,\"el\":28,\"es-ES\":33,\"es-latin\":7,\"et\":0,\"fa\":4,\"fi\":9,\"fil\":14,\"fr\":34,\"ga-IE\":0,\"he\":20,\"hi\":0,\"hr\":0,\"hu\":14,\"hy-AM\":8,\"id\":75,\"is\":0,\"it\":70,\"ja\":19,\"ka\":0,\"kmr\":0,\"ko\":1,\"ku\":2,\"ky\":5,\"la-LA\":0,\"lb\":0,\"lt\":4,\"me\":0,\"mk\":0,\"mn\":0,\"mr\":0,\"ms\":6,\"nb\":20,\"ne-NP\":0,\"nl\":19,\"no\":0,\"oc\":12,\"pa-IN\":0,\"pl\":64,\"pt-BR\":68,\"pt-PT\":14,\"qya-AA\":0,\"ro\":16,\"ru\":67,\"sat\":1,\"sco\":0,\"si-LK\":36,\"sk\":19,\"sl\":27,\"sq\":3,\"sr\":13,\"sr-Cyrl-ME\":0,\"sv-SE\":36,\"sw\":1,\"ta\":1,\"te\":0,\"tg\":0,\"tk\":0,\"tlh-AA\":0,\"tr\":66,\"uk\":27,\"uz\":0,\"vi\":12,\"yo\":0,\"zh-CN\":37,\"zh-TW\":10,\"zu\":0}; typeof define === \"function\" && define(() => { return client_translation_progress;});","var map = {\n\t\"./ar-rSA.js\": [\n\t\t53591,\n\t\t5629\n\t],\n\t\"./az-rAZ.js\": [\n\t\t81101,\n\t\t1101\n\t],\n\t\"./be-rBY.js\": [\n\t\t86953,\n\t\t6953\n\t],\n\t\"./bg-rBG.js\": [\n\t\t41428,\n\t\t1428\n\t],\n\t\"./bs-rBA.js\": [\n\t\t76101,\n\t\t6101\n\t],\n\t\"./ca-rES.js\": [\n\t\t80049,\n\t\t49\n\t],\n\t\"./cs-rCZ.js\": [\n\t\t30011,\n\t\t11\n\t],\n\t\"./cy-rGB.js\": [\n\t\t98146,\n\t\t8146\n\t],\n\t\"./da-rDK.js\": [\n\t\t22348,\n\t\t2348\n\t],\n\t\"./de-rDE.js\": [\n\t\t78961,\n\t\t8961\n\t],\n\t\"./el-rGR.js\": [\n\t\t292,\n\t\t292\n\t],\n\t\"./en.js\": [\n\t\t53832,\n\t\t3832\n\t],\n\t\"./es-rES.js\": [\n\t\t85895,\n\t\t5895\n\t],\n\t\"./es419.js\": [\n\t\t93575,\n\t\t3575\n\t],\n\t\"./et-rEE.js\": [\n\t\t14103,\n\t\t4103\n\t],\n\t\"./fa-rIR.js\": [\n\t\t15729,\n\t\t5729\n\t],\n\t\"./fi-rFI.js\": [\n\t\t35069,\n\t\t5069\n\t],\n\t\"./fil-rPH.js\": [\n\t\t43250,\n\t\t3250\n\t],\n\t\"./fr-rFR.js\": [\n\t\t52716,\n\t\t2716\n\t],\n\t\"./ga-rIE.js\": [\n\t\t17872,\n\t\t7872\n\t],\n\t\"./hi-rIN.js\": [\n\t\t11361,\n\t\t1361\n\t],\n\t\"./hr-rHR.js\": [\n\t\t42324,\n\t\t2324\n\t],\n\t\"./hu-rHU.js\": [\n\t\t70833,\n\t\t833\n\t],\n\t\"./hy-rAM.js\": [\n\t\t63000,\n\t\t3000\n\t],\n\t\"./in-rID.js\": [\n\t\t31879,\n\t\t1879\n\t],\n\t\"./is-rIS.js\": [\n\t\t55298,\n\t\t5298\n\t],\n\t\"./it-rIT.js\": [\n\t\t8182,\n\t\t8182\n\t],\n\t\"./iw-rIL.js\": [\n\t\t5945,\n\t\t5945\n\t],\n\t\"./ja-rJP.js\": [\n\t\t91587,\n\t\t1587\n\t],\n\t\"./ka-rGE.js\": [\n\t\t21337,\n\t\t1337\n\t],\n\t\"./kmr-rTR.js\": [\n\t\t57057,\n\t\t7057\n\t],\n\t\"./ko-rKR.js\": [\n\t\t88756,\n\t\t8756\n\t],\n\t\"./ku-rTR.js\": [\n\t\t33678,\n\t\t3678\n\t],\n\t\"./ky-rKG.js\": [\n\t\t28404,\n\t\t8404\n\t],\n\t\"./la-rLA.js\": [\n\t\t27089,\n\t\t7089\n\t],\n\t\"./lb-rLU.js\": [\n\t\t85752,\n\t\t5752\n\t],\n\t\"./lt-rLT.js\": [\n\t\t23097,\n\t\t3097\n\t],\n\t\"./me-rME.js\": [\n\t\t59023,\n\t\t9023\n\t],\n\t\"./mk-rMK.js\": [\n\t\t52499,\n\t\t2499\n\t],\n\t\"./mn-rMN.js\": [\n\t\t68721,\n\t\t8721\n\t],\n\t\"./mr-rIN.js\": [\n\t\t33591,\n\t\t3591\n\t],\n\t\"./ms-rMY.js\": [\n\t\t10922,\n\t\t922\n\t],\n\t\"./nb-rNO.js\": [\n\t\t54778,\n\t\t4778\n\t],\n\t\"./ne-rNP.js\": [\n\t\t4463,\n\t\t4463\n\t],\n\t\"./nl-rNL.js\": [\n\t\t36447,\n\t\t6447\n\t],\n\t\"./no-rNO.js\": [\n\t\t16813,\n\t\t6813\n\t],\n\t\"./oc-rFR.js\": [\n\t\t76102,\n\t\t6102\n\t],\n\t\"./pa-rIN.js\": [\n\t\t49081,\n\t\t9081\n\t],\n\t\"./pl-rPL.js\": [\n\t\t60419,\n\t\t419\n\t],\n\t\"./pt-rBR.js\": [\n\t\t9226,\n\t\t9226\n\t],\n\t\"./pt-rPT.js\": [\n\t\t10201,\n\t\t201\n\t],\n\t\"./qya-rAA.js\": [\n\t\t39460,\n\t\t9460\n\t],\n\t\"./ro-rRO.js\": [\n\t\t16292,\n\t\t6292\n\t],\n\t\"./ru-rRU.js\": [\n\t\t74391,\n\t\t4391\n\t],\n\t\"./sat-rIN.js\": [\n\t\t1905,\n\t\t1905\n\t],\n\t\"./sco-rGB.js\": [\n\t\t52323,\n\t\t2323\n\t],\n\t\"./si-rLK.js\": [\n\t\t79773,\n\t\t9773\n\t],\n\t\"./sk-rSK.js\": [\n\t\t51874,\n\t\t1874\n\t],\n\t\"./sl-rSI.js\": [\n\t\t97658,\n\t\t7658\n\t],\n\t\"./sq-rAL.js\": [\n\t\t80596,\n\t\t596\n\t],\n\t\"./sr-rCyrl-rME.js\": [\n\t\t33343,\n\t\t3343\n\t],\n\t\"./sr-rSP.js\": [\n\t\t75384,\n\t\t5384\n\t],\n\t\"./sv-rSE.js\": [\n\t\t50608,\n\t\t608\n\t],\n\t\"./sw-rKE.js\": [\n\t\t6802,\n\t\t6802\n\t],\n\t\"./ta-rIN.js\": [\n\t\t51796,\n\t\t1796\n\t],\n\t\"./te-rIN.js\": [\n\t\t49782,\n\t\t9782\n\t],\n\t\"./tg-rTJ.js\": [\n\t\t33689,\n\t\t3689\n\t],\n\t\"./tk-rTM.js\": [\n\t\t60130,\n\t\t130\n\t],\n\t\"./tlh-rAA.js\": [\n\t\t73739,\n\t\t3739\n\t],\n\t\"./tr-rTR.js\": [\n\t\t4961,\n\t\t4961\n\t],\n\t\"./translation_progress.js\": [\n\t\t23297\n\t],\n\t\"./uk-rUA.js\": [\n\t\t88109,\n\t\t8109\n\t],\n\t\"./uz-rUZ.js\": [\n\t\t96886,\n\t\t6886\n\t],\n\t\"./vi-rVN.js\": [\n\t\t37216,\n\t\t7216\n\t],\n\t\"./yo-rNG.js\": [\n\t\t97045,\n\t\t7045\n\t],\n\t\"./zh-rCN.js\": [\n\t\t16806,\n\t\t6806\n\t],\n\t\"./zh-rTW.js\": [\n\t\t58545,\n\t\t8545\n\t],\n\t\"./zu-rZA.js\": [\n\t\t58810,\n\t\t8810\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8946;\nmodule.exports = webpackAsyncContext;","define(function () { return JSON.parse(\n'{\"version_number\":\"2.3.4.17\",\"version_description\":\"fixed wrong timeout value for idleJS\"}'\n)});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"xabber.\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkxabber_web\"] = self[\"webpackChunkxabber_web\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [1216], () => (__webpack_require__(10019)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","constants","ASSETS_URL_PREFIX","STORAGE_NAME","STORAGE_VERSION","CONTAINER_ELEMENT","FAVICON_DEFAULT","FAVICON_DEFAULT_GREY","FAVICON_MESSAGE","BACKGROUND_IMAGE","WIDTH_MEDIUM","WIDTH_NARROW","WIDTH_TINY","LOG_LEVEL_NONE","LOG_LEVEL_ERROR","LOG_LEVEL_WARN","LOG_LEVEL_INFO","LOG_LEVEL_DEBUG","LOG_LEVEL","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_CTRL","KEY_ESCAPE","KEY_SPACE","KEY_ARROW_LEFT","KEY_ARROW_UP","KEY_ARROW_RIGHT","KEY_ARROW_DOWN","KEY_DELETE","KEY_FORWARD_SLASH","KEY_AT","VOICE_MSG_TIME","PASSWORD_DOT","String","fromCharCode","CONNECTION_URL","CONN_STATUSES","PREKEYS_COUNT","MIN_PREKEYS_COUNT","AES_KEY_LENGTH","AES_TAG_LENGTH","AES_EXTRACTABLE","BAD_CONN_STATUSES","RECONNECTION_TIMEOUTS","DOWNTIME_RECONNECTION_TIMEOUT","PING_SENDING_INTERVAL","IDLING_MINIMAL_TIMEOUT","IDLING_MAXIMUM_TIMEOUT","IDLING_DEFAULT_TIMEOUT","STATUS_WEIGHTS","chat","online","away","xa","dnd","offline","unavailable","PRESENT_INTERVAL","CHATSTATE_INTERVAL_COMPOSING_AUDIO","CHATSTATE_TIMEOUT_PAUSED","CHATSTATE_TIMEOUT_STOPPED","CHATSTATE_TIMEOUT_PAUSED_AUDIO","JINGLE_WAITING_TIME","SYNCHRONIZATION_RSM_MAX","REGISTRATION_DOMAINS","LOGIN_DOMAINS","TRUSTED_DOMAINS","RECOMMENDED_DOMAIN","REGISTRATION_BUTTON","REGISTRATION_CUSTOM_DOMAIN","LOGIN_CUSTOM_DOMAIN","TURN_SERVERS_LIST","url","credential","username","urls","JINGLE_MSG_PROPOSE","JINGLE_MSG_REJECT","JINGLE_MSG_ACCEPT","MSG_BLOCKED","MSG_ERROR","MSG_PENDING","MSG_SENT","MSG_DELIVERED","MSG_DISPLAYED","MSG_ARCHIVED","MSG_SAVED","RSM_ATTRIBUTES","MAM_ATTRIBUTES","GENERAL_GROUP_ID","NON_ROSTER_GROUP_ID","MATERIAL_COLORS","MAX_AVATAR_FILE_SIZE","AVATAR_PRIORITIES","VCARD_AVATAR","PUBSUB_AVATAR","EMAIL_FOR_JOIN_TRANSLATION","AVATAR_SIZES","TOOLBAR_ACCOUNT_ITEM","SETTINGS_ACCOUNT_ITEM","XABBER_ACCOUNT","SYNCHRONIZE_ACCOUNT_ITEM","MENTION_ITEM","ACCOUNT_SETTINGS_LEFT","ACCOUNT_VCARD_EDIT","ROSTER_RIGHT_ACCOUNT_ITEM","ROSTER_LEFT_ACCOUNT_ITEM","PARTICIPANT_DETAILS_ITEM","CONTACT_RIGHT_ITEM","GROUPCHAT_MEMBER_ITEM","CONTACT_LEFT_ITEM","CONTACT_BLOCKED_ITEM","CONTACT_DETAILS","GROUP_SETTINGS","CHAT_ITEM","CHAT_HEAD","CHAT_MESSAGE","CHAT_BOTTOM","XABBER_VOICE_CALL_VIEW","OMEMO_ENABLE_SETTING","SOUNDS","beep_up","tiny_noize","retro_game","pixel_beep","beep_positive","good_chime","cellular_click","bleep","mono_u","plop","ether","pop","computer_chime","beep_a","call","connecting","busy","attention","SYNC_WAY_DATA","no","tip","icon","from_server","to_server","delete","off_local","off_remote","SYNCED_STATUS_DATA","off","yes","EMOJI_LIST_NAME","emoji_list","QUOTE_MARKER","MARKUP_TAGS","BLANK_VIDEO","OGG","MP4","WEBM","MIME_TYPES","image","audio","video","document","pdf","table","archive","presentation","languages","languages_another_locales","PERSONAL_AREA_URL","XABBER_ACCOUNT_URL","API_SERVICE_URL","USE_SOCIAL_AUTH","REGISTER_XMPP_ACCOUNT","REGISTER_XMPP_ACCOUNT_URL","CHECK_VERSION","DEFAULT_LOGIN_SCREEN","GCM_SENDER_ID","GCM_API_KEY","MESSAGE_ARCHIVE_DB_NAME","STANZA_MAX_SIZE","Math","pow","BLUR_VALUE","VIGNETTING_VALUE","TRANSPARENCY_VALUE","MAIN_COLOR","CLIENT_NAME","SHORT_CLIENT_NAME","SHORT_CLIENT_DESCRIPTION","CLIENT_LOGO","TOOLBAR_LOGO","ENABLE_XABBER_ACCOUNT","SCREEN_ABOUT","BACKGROUND_IMAGES_XML_URL","BACKGROUND_PATTERNS_XML_URL","DEVELOPER_URL","CLIENT_GITHUB_URL","PROJECT_CROWDIN_URL","CLIENT_LICENSE_GITHUB_URL","JINGLE_MSG_STATE","MSG_STATE","MSG_VERBOSE_STATE","$","_","moment","WaveSurfer","Plyr","plyr","Quill","libsignal","slug","sha1","idleJs","opusRecorder","opusRecorderEncoderPath","xabber_i18next","xabber_i18next_sprintf","sha256","VanillaQR","magnificPopup","Strophe","evaluate","interpolate","templates","_addTemplate","name","options","path","split","tpl","join","default","tpl_name","res","attr","is_svg","data","html","$html","find","each","$el","this","svg_name","removeClass","addClass","svg","insertSvg","addTemplate","addSvgTemplate","addJSONTemplate","raw_data","code","x","y","getEmoji","offset","lead","trail","emoji_data","item","emoji","push","emoji_regexp","prototype","emojify","sprite","tag_name","emoji_size","href","title","replace","emoji_code","Number","toString","length","repeat","img_src","removeEmoji","replaceEmoji","selector","text","all","get","getByIndex","idx","hasher","_image_cache","COLORS","MAX_IMG_SIZE","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","Blob","type","CachedImage","window","URL","createObjectURL","getCachedImage","isString","indexOf","isObject","getAccountColor","_name","trim","color_index","floor","getImageSize","size","max_size","width","height","fn","setAvatar","image_el","cached_image","img_size","$image_el","css","backgroundImage","backgroundSize","backgroundColor","setCss","getBlobImage","getDefaultAvatar","color","font","first_name","last_name","first_letter","second_letter","canvas","createElement","ctx","getContext","splitted_name","rect","fillStyle","fill","textAlign","textBaseline","fillText","toUpperCase","toDataURL","getAvatarFromFile","file","image_obj","Image","src","Deferred","onload","b64_image","hash","naturalWidth","naturalHeight","new_size","drawImage","revokeObjectURL","toBlob","blob","reader","FileReader","result","binary_file","bytes","resolve","bind","readAsDataURL","onerror","promise","getDefaultColor","getCachedBackground","base64","compressImage","file_type","file_name","includes","File","lastModified","Date","now","modal_queue","appendTo","Modal","modal_constructor","$modal","Function","closed","getString","id","params","postProcess","sprintf","extend","open","use_queue","throw","setTimeout","addEventListener","clickHandler","prop","modal_options","omit","is_default_complete","complete_data","one","ev","detach","value","shift","_openModal","close","complete","isUndefined","_closeModal","removeEventListener","trigger","keyCode","click","preventDefault","openModal","closeModal","modal","clear_queue","dialogs","common","header","buttons","dialog_options","flag","modal_class","dialog","ok_button","cancel_button","optional_buttons","reverse","no_dialog_options","inverted_buttons","img_details","append","xabber","switchClass","hasClass","blob_image_from_clipboard","appendChild","bottom_text","escape_button","input_placeholder_value","input_value","val","option","target","$options","user_value_input","$item","user_value","warning","error","ask","ok_text","cancel_text","ok_button_text","cancel_button_text","ask_extended","optional_button","optional_button_text","ask_enter_value","resend_button","resend_to","resend_button_text","notify","placeCaretAtEnd","el","focus","getSelection","createRange","body","createTextRange","textRange","moveToElementText","collapse","select","range","selectNodeContents","sel","removeAllRanges","addRange","updateRichTextarea","getTextFromRichTextarea","flushRichTextarea","pasteHtmlAtCaret","getRangeAt","rangeCount","deleteContents","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","insertNode","cloneRange","setStartAfter","selection","pasteHTML","$div","replaceWith","$this","remove","klass","condition","arguments","showIf","hideIf","isVisibleInViewport","elementTop","top","elementBottom","outerHeight","viewportTop","scrollTop","viewportBottom","isVisibleInContainer","container","eleTop","offsetTop","eleBottom","clientHeight","containerTop","containerBottom","isFullyVisibleInContainer","isBottomVisibleInContainer","getHyperLink","prot","escaped_url","encodeURI","decodeURI","escape","e","hyperlinkify","obj","$obj","html_concat","url_regexp","childNodes","forEach","$node","outerHTML","tagName","nodeName","list","match","from","Set","decode_uri","replaceAll","RegExp","utils","uuid","c","r","random","utoa","str","btoa","unescape","encodeURIComponent","atou","decodeURIComponent","pretty_time","timestamp","format","pretty_date","pretty_datetime","pretty_short_datetime_recent_chat","startOf","isSame","subtract","pretty_short_datetime","datetime","day","year","pretty_short_month_date","isImageType","tryReadingFile","Promise","reject","console","log","getDomainFromUrl","a","test","hostname","isVideoType","file_type_icon","mime_type","filetype","pretty_file_type","file_type_icon_svg","pretty_file_type_with_article","pretty_size","isNaN","toFixed","pretty_duration","duration","trunc","pretty_name","substr","toLowerCase","getKeyByValue","object","Object","keys","key","slice_string","to","isNumber","slice_pretty_body","mutable_refs","filter","m","pretty_body","ref","start","end","markupBodyMessage","message","mention_tag","attrs","clone","attributes","mentions","markups","mutable_content","blockquotes","markup_body","original_message","muted","mention","start_idx","end_idx","is_gc","jid","me","markup","start_tags","end_tags","mark_up_style","uri","quote","child_idx","getOS","platform","navigator","os","isOverflownWidth","element","scrollWidth","clientWidth","isOverflownHeight","scrollHeight","render_data_form","data_form","$data_form","fields","field","$fixed_field","label","values","$input","var","copyTextToClipboard","callback_msg","errback_msg","clipboard","writeText","then","info_msg","callback_popup_message","time","$body","$popup_msg","count","openWindow","errback","win","clearSelection","empty","getCookie","matches","cookie","undefined","isMobile","Android","userAgent","BlackBerry","iOS","Opera","Windows","any","fromBase64toArrayBuffer","b64_string","buffer","ArrayBuffertoBase64","arrayBuffer","generateHOTPKey","async","secret","counter","Crypto","crypto","subtle","counterArray","padCounter","importKey","sign","ArrayBuffer","bView","DataView","bCounter","byte","byteValue","parseInt","setUint8","DT","HS","truncate","uKey","Sbits","generateHOTP","hmacSha256","stringToArrayBuffer","string","AES","ALGO_NAME","decoder","TextDecoder","encoder","TextEncoder","decrypt","masterKey","HMACData","payload","masterObj","hkdfCtrParams","salt","info","deriveBits","encryptionKey","authenticationKey","iv","generatedHMAC","byteLength","decryptedBuffer","decode","encrypt","plaintext","getRandomValues","encrypted","generateAESencryptedMessage","keydata","encryptOptions","encodedPlaintext","encode","arrayBufferConcat","joined","set","generateAESKey","algo","generateKey","getBrowser","userAgentString","chromeAgent","IExplorerAgent","firefoxAgent","safariAgent","operaAgent","images","modals","client_translation_progress","bc","BroadcastChannel","onmessage","event","disabled_client","postMessage","Backbone","Model","defaults","version_number","actual_version_number","client_id","substring","client_name","initialize","env","fetchURLParams","cleanUpStorage","initDefaultLanguage","detectMediaDevices","mediaDevices","ondevicechange","check_config","_settings","Settings","storage_name","getStorageName","fetch","settings","location","host","pathname","_cache","ModelWithStorage","cache","save","extendFunction","plyr_players","current_plyr_player","on","throwNewVersion","onQuit","_version_interval","setInterval","readActualVersion","ononline","disconnectWhenConnecting","lang","language","loadTranslations","default_translation","translation","setLocale","translations","default_lang","_translations","use","init","lng","debug","pluralSeparator","resources","changeLanguage","locale","getFixedT","getOneLiners","exists","t","getQuantityString","services","pluralResolver","getRule","_count","compatibilityJSON","suffix","getSuffix","msg","warn","pretty_last_seen","seconds","calendar","rawFile","XMLHttpRequest","onreadystatechange","readyState","status","json","responseText","JSON","parse","version_description","send","trimStart","trimEnd","indexedDB","databases","db","deleteDatabase","accounts","acc","cached_roster","database","cached_sync_conversations","cached_server_features","full_storage_name","localStorage","startsWith","removeItem","cacheFavicons","getMediaDevices","media_devices","callback","enumerateDevices","devices","device","kind","catch","err","done","reload","max_connection_retries","idling","idling_time","notifications","notifications_private","notifications_group","jingle_calls","notifications_volume","message_preview_private","message_preview_group","private_sound","group_sound","background","side_panel","theme","blur","transparency","appearance","vignetting","main_color","sound_on_private_message","sound_on_group_message","call_attention","load_media","typing_notifications","mapping_service","sound_on_call","sound_on_dialtone","sound_on_connection","sound_on_attention","sound_on_auth_request","hotkeys","avatar_shape","load_history","mam_requests_limit","mam_messages_limit_start","mam_messages_limit","configure","config","pick","log_level","PRIVACY_LOAD_MEDIA","PRIVACY_TYPING_NOTIFICATIONS","PRIVACY_MAPPING_SERVICE","isArray","ios_msg","android_msg","any_mobile_msg","self","useLocalStorage","ignore_localstorage_warning","ignore","requestNotifications","granted","splitted_url","splitted_url_anchor","url_params","param","history","pushState","STORAGE_NAME_ENDING","Notification","permission","ignore_notifications_warning","notifications_placeholder","NotificationsPlaceholder","updateFaviconConnected","is_disconnected","account","isConnected","session","updateAllMessageCounterOnDisconnect","is_fast","connection","activate","extendWith","reduce","instance","module","base","applyTo","View","template","parent","vname","children","classlist","view","ps_selector","ps_container","perfectScrollbar","ps_settings","visible","onChangedVisibility","updateCSS","size_changed","windowResized","_initialize","__initialize","isVisible","show","onShow","apply","updateScrollBar","hide","onHide","render","child","addChild","constructor","removeChild","soft","removeChildren","view_id","setCustomCss","styles","removeCustomCss","removeAttr","saveScrollBarOffset","getScrollTop","scroll_top","scrollTo","scrollToTop","scrollToBottom","offsetHeight","scrollToChild","$child","prevAll","sum","getScrollBottom","getPercentScrolled","isScrolledToTop","isScrolledToBottom","tree","patchTree","has","className","isNull","new_view","events","keyUpOnSearch","stopPropagation","ids","map","toArray","$selection","getSelectedItem","selectNextItem","selectPreviousItem","onEnterPressed","clearSearch","updateSearch","selection_id","selectItem","arrow","clearSearchSelection","first","_update_search_timeout","query","search","onEmptyQuery","searchAll","keyUpOnSearchWithQuery","onClickItem","updateSearchWithMessages","search_messages","onScrollY","queryid","_loading_messages","_messages_loaded","query_id","first_message","searched_msgs_loaded","before","MAMRequest","query_text","messages","$message_item_view","message_from_stanza","chats","receiveChatMessage","is_searched","msg_idx","model","insertBefore","eq","onScroll","getSelectedItemWithQuery","selectNextItemWithQuery","selectPreviousItemWithQuery","selectItemWithQuery","main_container","clearTimeout","keyup_timeout","query_transliterated","saved_chat","getSavedChat","item_view","updateLastMessage","query_chats","comparator","sort","contact","searched_by","chat_item","prepend","screen","contacts","hash_id","chat_id","item_list","getChat","clear_search","searchMessages","preloader","max","iq","$iq","xmlns","NS","MAM","DATAFORM","up","cnode","RSM","toXML","handler","addHandler","sendIQFast","deleteHandler","$fin","field_type","input_widget","field_name","placeholder","$value","$btn","updateValue","input_mode","onChangedInputMode","bindModelEvents","model_field","showInput","keyDown","getValue","changeValue","keyUp","setValue","new_value","screen_map","update","onScreenMapChanged","updateBackground","updateMainColor","updateAvatarShape","insertAfter","addScreen","siblings","shape","background_settings","updateBoxShadow","updateBlur","setScreen","unbind","chat_item_view","new_attrs","stamp","uniqueId","isScreen","show_placeholder","right","right_force_close","right_contact","content","_prev_scrolltop","_scrolltop","changed","screen_changed","toolbar","state","setAttribute","getAttribute","removeAttribute","onUpdatedScreen","onChangedAllMessageCounter","onChangedGroupMessageCounter","onChangedMentionsCounter","onChangedMessageCounter","msg_counter","group_msg_counter","all_msg_counter","mentions_counter","dropdown","inDuration","outDuration","constrainWidth","hover","alignment","updateColor","contains","clickAllChats","showAllChats","no_unread","closest","is_active","showArchive","showSavedChats","right_contact_save","scroll_to_chat","once","showNotifications","showChatsByAccount","showContacts","showMentions","showSettings","showSettingsModal","showPlaceholder","screen_name","showAddContactView","showAddAccountView","showAddIncognitoGroupChatView","incognito","showAddPublicGroupChatView","public","setAllMessageCounter","count_msg","count_all_msg","count_group_msg","isMuted","incoming_subscriptions","unread_mentions","msgs","all_msgs","group_msgs","recountAllMessageCounter","unread_messages","jingle_message_calling","avatar_size","onDestroy","updateCallingStatus","updateButtons","updateCollapsedWindow","updateName","updateStatusText","updateAccountJid","dismissible","ready","updateAvatar","pos1","pos2","pos3","pos4","mousedown","clientX","clientY","didDrag","onmouseup","onmousemove","left","setFullScreen","local_video","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullScreen","cancelFullScreen","exitFullscreen","fullscreenElement","mozCancelFullScreen","mozFullScreenElement","webkitExitFullscreen","webkitCurrentFullScreenElement","msExitFullscreen","msFullscreenElement","shareScreen","isFullScreen","webkitFullscreenElement","accept","initSession","clickOnWindow","toggle","toggleClass","toggleMicrophone","videoCall","toggleVolume","cancel","plyr_player_popup","onVisibilityChange","updatePlyrControls","player","controls","youtube","disablekb","iv_load_policy","modestbranding","rel","showinfo","other","$audio_elem","voice_message","stopTime","detail","minimizePopup","showNewVideo","xPercent","innerWidth","yPercent","innerHeight","dfd","provider","updateColorScheme","player_item","message_unique_id","video_sources","video_src","source","sources","$minimize_element_float","$minimize_element_full","$show_message_element_full","play","video_file","video_decrypted","decryptFile","closePopup","visibility_state","hidePopup","floatPopup","fullPopup","nextPlyr","player_index","next_item","f_url","previousPlyr","prev_item","openMessage","showDetailsRight","right_saved","getMessageContext","togglePlay","renderVoiceMessage","toggleMute","checked","sound_private_value","sound_group_value","updateDescription","updateBackgroundSetting","belowOrigin","blur_switched","vignetting_switched","material_color","variations","v","hex","tone","weight","jumpToBlock","$tab","$elem","setIdling","setNotifications","$target","requestPermission","setPrivateNotifications","setGroupNotifications","setPrivateMessagePreview","setGroupMessagePreview","setCallAttention","setLoadMedia","setTypingNotifications","setMappingService","setPrivateSound","current_sound","pause","setGroupSound","setCallSound","setDialtoneSound","setAttentionSound","setBackground","changeBackgroundImage","openColorPicker","colorPicker","openMainColorPicker","mainColorPicker","changeBlur","changeNotificationsVolume","volume","sound","changeVignetting","switchVignetting","is_switched","switchBlur","setHotkeys","setAvatarShape","deleteAllAccounts","progress","progress_text","platform_text","settings_modal","updateLanguage","updateAvatarLabel","updateSoundsLabel","updateAccounts","updateHeight","updateSliders","settings_single_account_modal","first_account","single_account_has_rendered","forced_ps_container","range_min","range_max","range_value","closeSettings","backToMenu","backToSubMenu","block_name","setIdlingTimeout","setJingleCalls","chooseMainColor","label_text","sound_private_text","sound_group_text","sound_on_attention_text","color_scheme","min","setColor","materialColors","color_picker","$color_hex","updateInputField","keyUpInput","focusoutInputField","selectColor","color_name","backgrounds_gallery","onpaste","onPaste","createLibrary","draggable","ondragenter","ondragover","ondragleave","relatedTarget","ondrop","files","dataTransfer","addFile","loadMoreImages","getImagesFromXML","patterns_library","img_library","request","dataType","success","onGetPatternsCallback","onGetImagesCallback","ajax","img","thumbnail","$img","fs_img","clipboardData","getData","updateActiveButton","updateActiveMenu","updateScreen","$active_screen","non_active","current_count","img_sources","setActiveImage","onFileInputChanged","image_prev","onInputChanged","addBackground","headers","about","onmousedown","onMouseDown","onMouseMove","onMouseUp","which","draghandle_elem","elem","resetElem","downX","pageX","downY","pageY","avatar","abs","createAvatar","coords","getCoords","shiftX","shiftY","startDrag","style","drop_elem","findDropElem","updateDropElem","querySelector","finishDrag","box","getBoundingClientRect","pageYOffset","pageXOffset","$avatar","old","parentNode","nextSibling","position","zIndex","avatar_cursor","cursor","draghandle_elem_cursor","rollback","hidden","elementFromPoint","old_drop_elem","modal_settings","in_duration","out_duration","opacity","minScrollbarLength","suppressScrollX","wheelSpeed","startBlinkingFavicon","_blink_interval","clearInterval","$icon","favicon","favicon_gray","favicon_message","stopBlinkingFavicon","resetMessageCounter","onChangedFocusState","popupNotification","notification","playAudio","loop","filename","Audio","stopAudio","registerDOMEvents","initIdleJS","stop","idle","onIdle","onActive","keepTracking","startAtIdle","focused","hasFocus","Materialize","modalSettings","drag_manager","DragManager","Body","login_page","NodeView","toolbar_view","ToolbarView","blur_overlay","main_panel","main_overlay_panel","left_panel","right_panel","right_contact_panel","wide_panel","placeholders_wrap","settings_view","SettingsView","settings_modal_view","SettingsModalView","api_service","idAttribute","to_sync","synced","deleted","update_timestamp","update_settings","request_data","CollectionWithStorage","create_from_server","settings_item","create","token","sync_all","_attrs","settings_list","connected","sync_request","fcm_subscribe","fcm_unsubscribe","from_token","action","synchronize_main_settings","synchronize_order_settings","get_settings","social_auth","social_login","login_by_token","_call_method","method","context","textStatus","jqXHR","errorThrown","onAPIError","stringify","add_source","account_status","onUserData","onSettings","onSettingsFailed","delete_settings","where","settings_data","order_timestamp","order","order_data","fetch_from_server","deleted_list","order_list","order_map","max_order","order_item","response","responseJSON","reason","_login","credentials","password","login","onLogin","onLoginFailed","onLoginByToken","onLoginByTokenFailed","onSocialLogin","onSocialLoginFailed","revoke_token","storage","clear","xmpp_binding_jid","xmpp_binding","full_id","linked_email_list","email_list","linked_social","social_bindings","logout","delete_accounts","endpoint_key","$username_input","$password_input","onChangeAuthenticationState","onRender","authFeedback","updateTextFields","submit","errorFeedback","authentication","onChangeConnected","successFeedback","socialAuth","origin","xabber_login_by_email","auth","xabber_login","changeLoginType","openXmppLoginPanel","add_xabber_account","renderAccountItem","bindAccount","add_contact_account_item","selectAccount","loginXabberAccount","authXabberAccount","sync_settings","to_sync_map","accounts_map","deleted_map","settings_map","deleted_item","sync_way","sync_choose","acc1","acc2","addAccountHtml","updateSyncOptions","$account_el","sync_settings_account_item","updateAccountHtml","account_wrap","$account_wrap","account_item","mdiclass","$sync_icon","changeSyncAll","changeSyncOne","changeSyncWay","syncSettings","do_sync","xabber_account","updateForConnectedStatus","default_color","updateLastSyncInfo","updateSocialBindings","updateSyncButton","updateExpanded","changeExpanded","expanded","linked_emails","$social_item","email","email_id","email_address","is_verified","verified","linked_email_item","social","social_provider","social_name","linkSocial","mail","mail_data","openAccount","verifyEmail","unlinkSocial","$social_html","deleted_mail_index","splice","social_list","deleted_social_index","sync","last_sync","time_delta","fromNow","synchronize","onPasswordResetFailed","setPassword","verified_email","account_settings_list","AccountSettingsList","AccountsOrderTimestamp","api_account","APIAccount","xabber_login_panel","XabberLoginPanel","APIAccountView","add_api_account_view","AddAPIAccountView","email_auth_view","LogLevel","WARN","ERROR","addConnectionPlugin","_connection","conn","Status","addNamespace","REGIFAIL","REGISTER","REGISTERED","CONFLICT","NOTACCEPTABLE","disco","addFeature","addNode","items","reset","instructions","registered","connect_cb","_connect_cb","req","raw","_registering","_check_user","_register_cb_check_user","processed_features","_connect_cb_data","_register_cb","xmlInput","Connection","rawInput","auth_old","authenticate","matched","domain","authzid","getBareJidFromJid","authcid","getNodeFromJid","pass","connect_callback","connect","wait","hold","route","getDomainFromJid","connect_check_user","connect_change_password","registerSASLMechanisms","SASLAnonymous","SASLExternal","SASLMD5","SASLPlain","SASLSHA1","_callback","bodyWrap","_proto","_reqToData","strip","serialize","CONNFAIL","register","getElementsByTagName","mechanisms","_no_auth_received","_changeConnectStatus","_addSysHandler","_get_register_cb","stanza","getText","_submit_cb","error_text","SASLHOTP","SASLMechanism","onChallenge","out","len","charAt","utf16to8","hotp_pass","ConnectionManager","auth_type","registerSASLMechanism","_sasl_data","SASLXOAuth2","reconnect","_attemptSASLAuth","sortMechanismsByPriority","mechanism_found","_sasl_success_handler","_sasl_success_cb","_sasl_failure_handler","_sasl_failure_cb","_sasl_challenge_handler","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","$build","SASL","mechanism","isClientFirst","hotp_counter","_sasl_auth1_cb","features","do_bind","do_session","namespaceURI","AUTH_DEVICES","x_token_auth","SYNCHRONIZATION","server_features","do_synchronization","SUBSCRIPTION_PREAPPROVAL","x_token","expire","getXToken","expires_at","token_uid","_send_auth_bind","AUTHFAIL","_sasl_bind_cb","resource","getResourceFromJid","BIND","old_token","uniq_id","iqtype","Websocket","_onIdle","_conn","_data","paused","rawStanza","_buildStream","xmlOutput","rawOutput","socket","_pending_stanzas","xmlunescape","reg_exp","testRegexp","replaceRegexp","vcard","xmlToObject","$vcard","nickname","fullname","middle_name","birthday","job_title","role","description","jabber_id","org","photo","phone","address","group_info","anonymous","searchable","status_msg","members_num","$org","unit","$photo","number","work","home","mobile","pobox","extadd","street","locality","region","pcode","country","VCARD","sendIQ","objectToXml","getBlank","updateRefreshButton","getVCard","$info","$addr_info","show_addr_block","addr","onClickIcon","$target_value","copied_text","value_text","refresh","vcard_right","vcard_edit","pickadate","selectMonths","selectYears","autoOk","allowKeyboardControl","today","onClose","activeElement","weekday_display","date_display","navPrev","navNext","selected","buttonClear","buttonClose","evt","updateSaveButton","setData","changePlaceholder","nickname_placeholder","setVCard","vcard_edit_modal","$pres","Images","pretty_datetime_date","enabled","status_message","priority","auto_login_xa","account_unique_id","groupchat_servers_list","retraction_version","is_new","auth_view","is_invalid","last_msg_timestamp","collection","getLastOrder","deleteAccount","photo_hash","reconnected","ready_to_send","conn_retries","conn_feedback","_waiting_code","code_requests","gallery_code_requests","xabber_auth","onChangedConnected","websocket_connection_url","conn_manager","_added_pres_handlers","_pending_messages","dfd_presence","password_view","_init_plugins","plugin","xml","isOnline","getPassword","isReconnecting","sendMsg","authenticated","disconnecting","sendMsgPending","sendMsgFast","getConnectionForIQ","fast_connection","sendFast","nodeTree","is","pubAvatar","removeAvatar","http_avatar","avatar_hash","iq_pub_metadata","PUBSUB","PUBSUB_AVATAR_METADATA","thumbnails","PUBSUB_AVATAR_METADATA_THUMBNAIL","data_error","iq_pub_data","PUBSUB_AVATAR_DATA","uploaded","generated","uploadAvatar","getAvatar","iq_request_avatar","pubsub_avatar","is_iq","parseDataForm","$dataform","$field","field_var","field_label","field_value","field_options","$option","lbl","addDataFormToStanza","$stanza","field_attrs","sendPres","verifyXabberAccount","createFastConnection","token_invalidated","fast_conn_manager","disconnect","onFastConnected","reconnecting","auth_failed","restoreStatus","connectionCallback","timeout","connFeedback","reconnectionCallback","loginCallback","conn_status","conn_condition","onConnectionConflict","CONNECTED","onTokenRevoked","onAuthFailed","DISCONNECTED","flush","_main_interval_worker","terminate","connectXabberAccount","iq_private_storage","PRIVATE_STORAGE","requestPassword","api_jid","request_id","verifying_code","verifying_mess","idx_verifying_code","iq_send_auth_mark","msg_attrs","from_jid","is_archived","createMessageFromIQ","max_retries","registerCallback","$nickname_input","errorRegistrationFeedback","changePasswordCallback","change_password_view","old_password","change_password_connection","change_password_connection_manager","CONNECTING","stepped_auth","resetAuthStepper","authStepperStart","endAuth","stepper_auth_error","CONNTIMEOUT","authStepperError","destroy","no_reconnect","old_device_token","getAllXTokens","tokens_list","tokens","$token","client","omemo_id","last_auth","ip_address","ip","x_tokens_list","on_token_revoked","onReconnected","onConnected","onDisconnected","afterConnected","_after_connected_plugins","_after_fast_connected_plugins","_fast_interval_worker","_after_reconnected_plugins","sendPendingStanzas","sendPendingMessages","registerPresenceHandler","enableCarbons","getAllMessageRetractions","query_options","REWRITE","version","retractions_query","Builder","is_msg","b","msg_iq","unique_id","DELIVERY","disconnected_timestamp","last_stanza_timestamp","deactivate","CARBONS","is_callback","isFunction","vcard_updated","avatar_priority","vcardPhotoUpdated","getStatusMessage","setStatus","status_updated","status_prev","sendPresence","getAvatarHash","from_avatar","decoded_raw","bin","VCARD_UPDATE","caps","createCapsNode","has_settings_right","settings_right","settings_left","has_modal_settings","settings_account_modal","revokeXToken","token_num","revokeAllXTokens","show_settings","dont_change_screen","show_settings_after_delete","dont_change_screen_after_delete","omemo","groups_settings","clearStorage","groupchat_settings","chat_settings","deleteDataBase","registerIQHandler","_stanza_handler","onGetIQ","registerSyncedIQHandler","_synced_stanza_handler","onSyncedIQ","_pres_handler","presence","onPresence","onSetIQResult","roster","syncConversations","request_code","$incoming_iq","$confirm","HTTP_AUTH","$session_availability","JINGLE_MSG","onAuthCode","$session_availability_response","session_id","testGalleryTokenExpire","currentTime","tokenExpireTime","initGalleryAuth","testGalleryFileSlot","onloadend","b64","gallery_feature","handleCommonGalleryErrors","confirm_code","expires","prepareFiles","testFile","getStorageStats","uploadFile","formData","FormData","voice","processData","deleteFile","file_id","getOpenGraphData","site","ogp","image_height","image_width","video_url","mergeContact","$presence","bare_jid","$vcard_update","VCAD_UPDATE","resource_obj","$device","addInitPlugin","func","addConnPlugin","reconn","addFastConnPlugin","models","getEnabledList","getConnectedList","onAdd","onUpdatedOrder","onListChanged","onAccountDisconnected","onQuitAccounts","onSettingsAdded","last","used_colors","colors","moveBefore","index2","prev_order","at","_updateOrder","moveToBottom","index","toolbar_item","updateConnected","updateAuthState","updateStatus","setActive","filterChats","updateList","updateOneInList","onAccountRemoved","after","resource_right","Collection","r1","r2","p1","p2","requestInfo","$identity","attention_supported","isFeatureSupported","ATTENTION","ns","is_supported","renderByInit","onResourceAdded","onResourceRemoved","onReset","onPriorityChanged","updatePosition","showEditView","vcard_modal","media_gallery_account","onUpdateAvatars","updateStorage","loading_files","current_page","total_pages","current_options","page","getFiles","after_deletion","after_avatar_update","used_storage","total","used","quota","videos","voices","tabs","filterType","sorting","order_by","getAvatars","onTabClick","sortFiles","sort_type","onClickFile","prev_audio_message","file_url","not_expanded_msg","$msg_element","audio_file_waveform","waveform_id","aud","createAudio","round","getDuration","unAll","timerId","cur_time","getCurrentTime","isPlaying","onchange","setVolume","scrollParent","barWidth","barHeight","cursorColor","autoCenter","normalize","hideScrollBar","progressColor","load","assign","obj_per_page","current_rendered_type","renderFiles","total_objects","tab","$gallery_file","media_gallery_account_file","svg_icon","media_type","filesize","closeOnContentClick","fixedContentPos","mainClass","verticalFit","titleSrc","zoom","deleteAvatar","deleteFilesFiltered","days","date","setDate","getDate","toISOString","date_lte","openStoragePanel","wheelPropagation","status_field","updateBlocks","updateGallery","updateNameCSS","$name","wrap_width","font_size","chooseAvatar","openEmojiPanel","openWebcamPanel","changeAvatar","openChangeStatus","gallery_view","account_settings_modal","vcard_view","updateView","showConnectionStatus","updateSynchronizationBlock","updateXTokens","groups","updateGroupsLabel","updateReconnectButton","updateSyncOption","updateDelSettingsButton","updateSyncState","updateEnabled","updateOmemoDevices","updateEnabledOmemo","updateEncryptedChatstates","updateBlockedLabel","blocklist","blocked_count","jumpToBlockHandler","updateDeviceInformation","backToMenuHandler","backToSubMenuHandler","store","showResources","resource_id","hideResources","renderAllXTokens","sortBy","pretty_token","findWhere","toJSON","is_omemo","$cur_token_html","current_token_item_modal","$token_html","token_item_modal","omemo_own_devices","omemo_device_id","updateTrustDevice","_single_account","status_text","own_devices","fing","generateFingerprint","getBundle","pk","spk","ik","fingerprint","openFingerprint","is_own","groups_count","omemo_enable_view","setEnabled","setEnabledOmemo","initOmemo","destroyOmemo","setTypingNotification","openDevicesWindow","omemo_devices","purgeKeys","device_id","bundle","preKeys","removeItemFromNode","OMEMO","showPasswordView","changeSyncSetting","deleteSettings","delete_account","changeColor","showQRCode","qrcode","noBorder","domElement","openBlockWindow","block","blockContact","unblockSelected","deselectBlocked","single_account_settings_modal","dropdown_settings","current_token_item","token_item","status_message_input_widget","global_settings_item","onDragTo","onMoveAccount","global_settings_item_modal","updateNickname","onMoveAccountToBottom","updateHtml","change_status","highlightStatus","restoreStatusMessageInput","changeStatus","do_change","clearStatusMessageInput","verbose_status","apply_to_all","changeApplyToAll","avatars_gallery","current_items","current_file","addAvatar","img_from_gallery","createFileFromURL","webcam_panel","registration","registration_view","streaming","startbutton","startupStream","srcObject","getTracks","track","getUserMedia","stream","takePicture","clearPhoto","fillRect","globalCompositeOperation","beginPath","arc","PI","closePath","saveAvatar","member_details_avatar_size","emoji_panel","emoji_panel_view","openEmojiPicker","emoji_picker","readEmojisJSON","emojis","emoji_picker_tabs","pickEmojiTab","pickEmoji","change_password","is_login","getActionName","$old_password_input","$password_confirm_input","password_confirm","$jid_input","updateOptions","at_idx","registerFeedback","registration_success","authStepperShow","getWebsocketURL","DISABLE_LOOKUP_WS","protocol","socket_url","xmpp_login","$domain_input","handleRegistrationStep","stepped_auth_complete","updateDomains","updateAuthDomains","openButtonsMenu","keyUpNickname","openNextStep","keyUpJid","_check_user_timeout","setCustomDomainRegistration","regexp_local_part","regexp_domain","_registration_username","_registration_domain","auth_connection","handleRegisterStanza","auth_conn_manager","checkUserCallback","keyUpPassword","keyUpDomain","keyUpLogin","focusoutDomain","username_taken","_supports_check_user","class","user_success","_check_user_connection_timeout","_no_response","openPreviousStep","step","checkFeaturesStepper","successRegistrationFeedback","registerWithoutAvatar","logoutAndRegister","openRegisterForm","openLoginForm","all_servers","setCustomDomainAuth","$property_value","changePropertyValueRegistration","$property_item","changePropertyValueAuth","timeout_timer","HTTP_UPLOAD","first_features_received","auth_error","add_account","xmpp_login_panel","XmppLoginPanel","account_settings","Container","acc_settings_left","acc_settings_right","Accounts","ToolbarAccountsBlockView","SettingsAccountsBlockView","SettingsAccountsModalBlockView","add_account_view","AddAccountView","onbeforeunload","login_screen","single_account","supports","renderSingleAccount","addIdentity","LAST","CHATSTATES","BLOCKING","PING","CHAT_MARKERS","ARCHIVE","GROUP_CHAT","namespace","verbose_name","feature","onFeatureAdded","getAllFromCachedFeatures","is_cached","onInfo","onItems","addItem","form_type_val","URLDISCO","media_gallery_url","MEDIAGALLERY","_var","client_feature","client_features","putInCachedFeatures","_last_stanza_handler","_pong_handler","ping","addPingHandler","pong","Worker","downtime","onLine","last_fast_stanza_timestamp","_last_fast_stanza_handler","_fast_pong_handler","_onDiscoInfo","DISCO_INFO","_onDiscoItems","DISCO_ITEMS","Emoji","subscription","subscription_request_in","subscription_request_out","group_chat","onChangedGroupchat","full_jid","server","roster_name","isBlocked","blocked","b64_sha1","updateCachedInfo","is_deleted","out_request","online_members_num","getSubscriptionStatuses","subscription_preapproved","in_request","status_description","status_out_color","status_in_color","status_out_text","status_in_text","status_out","status_in","getIcon","getFromRoster","cached_info","roster_info","in_roster","putInRoster","updateCounters","participants","resetParticipantsList","getBlockedParticipants","getLastSeen","last_seen","getLastSeenStatus","getMyInfo","participantsRequest","properties","cached_avatar","getAvatarInfoById","createFromStanza","my_info","avatar_b64","my_rights","message_time","pres","pushInRoster","ROSTER","group","removeFromRoster","acceptRequest","askRequest","blockRequest","declineRequest","declineSubscription","declineSubscribe","deleteWithDialog","is_group","msg_text","bold","localpart","delete_history","retractAllMessages","deleteFromSynchronization","blockWithDialog","unblockWithDialog","unblock","setActiveStateSendInterval","$msg","_sending_active_chatstate_timeout","_sending_active_chatstate_interval","handlePresence","$group_chat_info","updateGroupChatsList","details_view","group_chat_info","parseGroupInfo","prev_group_info","sync_deleted","$status_message","_reset_status_timeout","$group_chat","$model","privacy","$index","$description","pinned_message","prev_pinned_message","private_chat","$online_members_num","pinned_msg_elem","$pinned_message","getMessageByStanzaId","$message","parsePinnedMessage","getAllRights","iq_get_rights","iq_all_rights","all_permissions","all_restrictions","all_rights","permissions","restrictions","stanza_id","receiver","XABBER_CHAT","fast","is_groupchat","filter_image","filter_video","filter_voice","filter_files","opt_var","onStartedMAMRequest","callb","onCompletedMAMRequest","rsm","errb","getFilesFromStanza","cached_stanza_id","references","cached_message","REFERENCE","reference","$reference","$file_sharing","FILES","VOICE_MESSAGE","$file","file_attrs","HASH","uniqueid","created_at","has_encrypted_files","renderPinnedMessage","locations","fwd_message","fwd_msg_author","concat","user_info","participant_info","participant_nickname","chat_content","is_scrolled","pinned_msg","author","fwd_author","pinned_msg_html","group_chats","height_pinned_msg","resetStatus","searchByParticipants","participants_list","showDetails","scrolled_top_chats_view","scrolled_top_chat","details_view_right","details_view_right_encrypted","contact_searched_messages_view","hideSearch","showSearchMessages","set_status","getStatuses","updateIcons","ic_name","iq_get_properties","renderStatuses","f","$status_item","status_item","iq_set_status","interval_last","selectView","updateGroupChat","updateIcon","onBlocked","updateStatusMsg","lastSeenUpdated","new_status","is_group_chat","contact_right_item","showJid","hideJid","clickOnItem","contact_left_item","updateDisplayStatus","updateBlockedState","updateMutedState","onResourceUpdated","showVCard","hideVCard","contact_details","name_field","resources_view","edit_groups_view","updateJingleButtons","updateSubscriptions","setButtonsWidth","widths","button","is_blocked","is_server","$label_outcoming","$label_incoming","prev","onChangedSubscription","openChat","voiceCall","initCall","initJingleMessage","deleteContact","unblockContact","changeNotifications","muteChat","addContact","requestAuthorization","contact_details_right","contact_edit_view","updateNotifications","updateChilds","updateIndicator","keydownHandler","hideEdit","isOpen","scrollToTopSmooth","animate","bottom_block_scroll","showEdit","muted_seconds","mute_type","unmuteChat","$search_form","changeList","list_name","scrollLeft","addList","_render","constructor_func","group_chat_details","member_avatar_size","group_chat_properties","group_chat_status","group_chat_properties_edit","default_restrictions_edit","is_owner","change_group","editProperties","editDefaultRestrictions","leaveGroupChat","inviteUser","getInvitations","deleteGroup","group_chat_details_right","default_restrictions_edit_right","hideRestrictions","showRestrictions","clearHistory","head","edit_view","group_status","group_status_right","$target_info","label_name","group_chat_properties_right","hideMoreDescription","all_fixed","saveChanges","has_changes","checked_inp","text_inp","textarea","field_idx","$result","err_text","$error","updateInvitations","user","$item_view","invited_member_item","showInviteButton","revokeInvitation","$member_item","member_jid","updateRemoveParticipantButton","revokeInvitationByElement","participant","temporary_items","all_messages_loaded","getMediaFromDecryptedMessages","messagesFileRequest","updateMedia","active","last_rsm_message","loading_messages","loadMoreFiles","block_height","updateForParticipant","delegateEvents","filter_type","fail","cached_messages","getMessages","entries","msg_items","filtered_items","items_count","filterEncryptedFiles","encryptedFilesHandler","files_count","updateEncryptedMedia","is_loaded","true_voice","media_item","is_encrypted","media_items_empty","messages_count","searched_message","gallery","parents","searched_messages","updateBlockedParticipants","showBlockButton","unblockUser","tag","unblockUserByElement","blockId","onParticipantsUpdated","updateParticipantsList","participant_properties_panel","updateParticipants","setParticipantsListVersion","updateVersion","renderParticipants","renderMemberItem","blockParticipant","kickParticipant","kick","removeParticipantFromList","badge","is_me","pretty_present","present","isValid","group_member_item","prependTo","updateMemberAvatar","member","getB64Avatar","getHashAvatar","avatar_url","updateCachedAvatars","showParticipantProperties","participant_item","participant_id","keyUpSearch","searchParticipant","participants_right_panel","onParticipantsChanged","kickParticipantDialog","group_member_item_right","showParticipantPropertiesEdit","showNamePanel","changeBackButton","participant_rights","onBadgeUpdated","new_avatar","$member_info_view","is_myself","is_blocked_contact","incognito_chat","private_participant_details","participant_details_item","participant_messages","actual_rights","setActualRights","new_nickname","updateRightsView","messages_view","messagesRequest","changeTimerValue","$input_item","updateBadge","$member_item_nickname","xmlescape","editNickname","editBadge","edit_badge_panel","checkKeydown","checkKeyup","retractUserMessages","retractMessagesByUser","restriction_expire","restriction_item","right_expire_variants","right_name","expire_options","getPrivateChat","participant_jid","participant_in_roster","iq_response","group_jid","createSystemMessage","private_chat_jid","changeRights","$right_item","saveRights","member_id","$participant_avatar","nickname_value","changed_avatar","rights_changed","iq_changes","right_item","right_expire","iq_rights_changes","participant_details_right","private_participant_details_item_right","participant_details_item_right","participant_name_field","participant_badge_field","hidePanel","resetPanel","changeName","changeBadge","clickAvatarInput","setVisibility","$current_restriction","new_badge","badge_edit_view","typeEmoticon","_timeout","$insert_emoticon","$emoji_panel_wrap","$emoji_panel","$emoji_list_wrap","saveNewBadge","emoji_node","checkKey","default_restrictions","actual_default_restrictions","showDefaultRestrictions","restriction_name","restriction_expires","restriction","changeRestriction","changePropertyValue","iq_change_default_rights","has_new_default_restrictions","changeExpiresTime","expire_time_item","new_expire_time","$restriction_item","default_restrictions_right","getBase64Avatar","getParticipantsListVersion","getCachedParticipants","getParticipantsList","mergeParticipant","resetParticipants","getRights","rights","pretty_rights","issued_time","expires_time","updatePinnedMessage","$response","photo_url","updateParticipant","participants_lists","all_participants_lists","participants_list_idx","chat_participants","participant_idx","setParticipantsList","updated_participants_list","invitation","closeChat","readMessages","blockInvitation","contact_jid","iq_get_blocking","iq_unblocking","iq_set_blocking","iq_blocking_items","item_jid","getDefaultName","group_name_input_widget","force_reset","description_input_widget","changeDescription","onUpdate","args","all_groups","notSpecial","groups_checkbox_list","groups_list","groups_new_group","on_add","_update_template","removeGroup","group_name","removeLastGroup","editGroup","_hide_timeout","checkNewGroup","keyupAddNewGroup","addNewGroup","keydownAddNewGroup","focusinAddNewGroup","focusoutAddNewGroup","edit_contact","updateStatuses","statuses","status_out_class","status_in_class","requestSubscription","allowSubscription","cancelSubscriptionRequest","handleSubscriptionRequest","cancelSubscriptionOut","cancelSubscriptionIn","edit_group","group_name_field","group_description_field","restrictions_count","showMembershipProperty","showIndexProperty","showDescriptionProperty","hideProperty","invitations","actionSelectedParticipants","deselectParticipants","selectParticipant","is_selected","inv_count","showPanel","original_data_form_values","data_form_index","findIndex","changeMembership","membership_text","membership","changeIndex","index_text","onContactChanged","contact1","contact2","s1","s2","sw1","sw2","sw1_offline","name1","name2","updateCounter","onContactRemoved","onChangedRosterSettings","isSpecial","renameGroup","new_name","removeContact","updateGroupIcon","updateMembersCounter","onContactAdded","updateContactItem","onChangedOfflineSetting","onChangedSortingSetting","mdi_icon","show_offline","roster_settings","group_settings","is_default_show_offline","is_offline","showSettingsIcon","showGroupSettings","group_right","group_left","setOffline","validateName","applySettings","name_error","onGroupAdded","acc_view","onGroupAddedSingleAccount","rendered_once","removeAllContacts","collections","updateInCollections","addCollection","hasOwnProperty","registerHandler","onBlockingIQ","getFromServer","roster_version","add","addContactToGroup","known_changed","in_roster_changed","groups_changed","groups_to_remove","getGroup","onRosterIQ","syncFromServer","synchronization_with_stamp","is_first_sync","request_attrs","cached_conversations_exclude","onSyncIQ","last_version_sync","syncCachedConversations","request_with_stamp","cached_conversations","syncConversation","conversation","parseXML","saved","conv","account_conversation_type","removeFromCachedConversations","SYNCHRONIZATION_OLD_OMEMO","$sync_metadata","$group_metadata","is_incognito","is_private","SYNCHRONIZATION_OMEMO","current_call","$unread_messages","chat_timestamp","last_read_msg","last_delivered_msg","last_displayed_msg","unread_msgs_count","is_invite","msg_retraction_version","synced_msg","current_chat_timestamp","retracted_msg_id_list","putInCachedConversations","last_message","updateEncryptedChat","updateMutedList","$jingle_message","getCallingAvailability","sendReject","initIncomingCall","sync_update","updateEmptyChat","is_unread","delay","messages_unread","isSenderMe","is_last_sync","sync_timestamp","sync_rsm_after","last_chat_msg_id","conversations_loaded","last_sync_timestamp","getAllFromCachedConversations","retract_version","sync_options","getRoster","request_ver","getAllFromRoster","roster_items","ver","new_roster_version","onRosterItem","is_version","known","onGroupRenamed","onGroupRemoved","updateGroupPosition","group_view","old_name","account_roster_right","updateGlobalCounter","account_roster_left","hashes","hideTabs","selectUnblock","updateUnblockButton","unblockContactByJid","tab_name","hideEmptyContainers","tmp","contact_blocked_item","$domain_wrap","$desc","blocked_list","reg","blocked_contacts_desc","blocked_domains_desc","updateOneRosterView","updateRosterViews","removeRosterView","account_roster_view","roster_left","updateLeftIndicator","getContactForItem","account_jid","roster_view","setOfflineSetting","setSortingSetting","$parent_el","contact_placeholder","onPlaceholderUpdate","add_contact","group_data","updateGroups","renderGroupsForAccount","stepForward","silent","groups_checkbox_list_contact","checkJid","custom_notifications","message_preview","pinned","general_group_name","non_roster_group_name","ModelWithDataBase","put","response_value","get_all","clearDataBase","clear_database","delete_database","getFromCachedConversations","getFromCachedFeatures","removeFromCachedFeatures","objStoreName","primKey","roster_item","Boolean","_roster_settings","RosterSettings","roster_settings_view","RosterSettingsView","contacts_view","RosterLeftView","contact_container","details_container","ContactPlaceholderView","add_contact_view","AddContactView","msgid","updateUniqueId","destroyOnEcho","removeMessage","forwarded_message","getState","getVerboseState","createInvitationFromStanza","is_private_invitation","$delay","markable","archive_id","origin_id","$group_info","group_info_attributes","carbon_copied","is_forwarded","contact_stanza_id","synced_invitation_from_server","parent_chat","auth_request","invite","private_invite","is_accepted","replaced","forwarded","sid","context_message","is_unread_archived","participant_message","echo_msg","is_between_anchors","not_encrypted","link_references","is_trusted","begin","MARKUP","$mention","child_ref","$geolocation","GEOLOC","loc_attrs","lat","lon","OGP","$ogp","link_reference_attrs","original_text","getFileType","x_elem","$user","user_id","user_jid","groupchat_jid","is_sender","participants_version","WEBCHAT","addresses","ADDRESS","$address","only_emoji","synced_from_server","missed_history","missed_msg","pinned_messages","searched_in_contact_messages","context_messages","msg_contact","filereader","exportedMasterKey","enc_file","readAsArrayBuffer","getFilename","url_media","lastIndexOf","full_type","contact_full_jid","volume_on","video_in","video_screen","video_live","registerIqHandler","audio_notifiation","call_initiator","modal_view","RTCPeerConnection","iceServers","sdpSemantics","$remote_video_el","$remote_audio_el","$local_video","current_timer","onconnectionstatechange","onChangeConnectionState","onChangedMediaType","ontrack","remote_stream","streams","_waiting_timeout","onicecandidate","onIceCandidate","oniceconnectionstatechange","onChangeIceConnectionState","setEnabledAudioTrack","onChangedVideoValue","setEnabledVideoTrack","setEnabledScreenShareVideoTrack","onChangedRemoteVideo","onChangedVolume","iq_handler","onIQ","updateTimer","startTimer","call_timer","peer_conn","conn_state","connectionState","_timeout_failed","restartIce","ice","candidate","sendCandidate","iceConnectionState","incoming_video","local_stream","getAudioTracks","default_video","getSenders","sender","createVideoStream","getVideoTracks","stopTracks","createScreenShareVideoStream","video_state","sendVideoStreamState","getDisplayMedia","media_stream","addTrack","replaceTrack","$iq_video","$jingle_initiate","$jingle_accept","$jingle_info","$jingle_video","$result_iq","offer_sdp","JINGLE_RTP","setRemoteDescription","RTCSessionDescription","sdp","acceptSession","answer_sdp","addIceCandidate","RTCIceCandidate","sdpMLineIndex","sdpMid","startCall","createAudioStream","propose","video_track","initVideoTrack","removeTrack","$propose_msg","media","HINTS","$accept_msg","$reject_msg","call_attrs","initiator","p","getImageData","requestAnimationFrame","draw","putImageData","captureStream","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","setLocalDescription","$iq_offer_sdp","JINGLE","creator","JINGLE_SECURITY_STUB","$iq_candidate","JINGLE_TRANSPORTS_ICE","createAnswer","answer","$iq_answer_sdp","opened","display","displayed_sent","last_displayed_id","last_delivered_id","unread","const_unread","sync_created","onContactDestroyed","onChangedContact","onChangedTimestamp","onChangedLastReadMsg","_no_scrolling_event","is_first","requestHistoryBetweenAnchors","read_count","message_item","_long_reading_timeout","scrollToUnread","recountUnread","resetUnread","sendDataForm","variable","setStanzaId","updateMessage","msg_to","endCall","receiveMessage","from_bare_jid","$marker","$receipt_request","RECEIPTS","$receipt_response","$jingle_msg_propose","$jingle_msg_accept","$jingle_msg_reject","receiveNoTextMessage","iq_to","jingle_start","reject_contact_stanza_id","busy_audio","$stanza_id","$contact_stanza_id","marker_tag","is_mam","sendMarker","receiveMarker","receiveCarbonsMarker","sendDeliveryReceipt","receiveDeliveryReceipt","last_blocking_timestamp","current_timestamp","has_blocking","blocking_timestamp","mention_context","stanza_id_context","omemo_dfd","msg_options","$delivery_msg","msg_id","by","$displayed","$received","marked_msg_id","marked_stanza_id","msg_state","delivered_time","setMessagesDelivered","setMessagesDisplayed","enc_chat","undelivered_messages","last_read_msg_id","second_deferred","new_last_read_msg","unread_msg","delivered_origin_id","delivered_stanza_id","onRosterPush","retractMessages","symmetric","msgs_responses","num","iq_retraction","getConversationType","user_msgs","retract_attrs","all_messages","showBlockedRequestMessage","muted_value","conversation_options","mute","SYNCHRONIZATION_REGULAR_CHAT","message_counter","content_placeholder","updatePinned","updateArchivedState","updateGroupChats","updateEncrypted","updateChatError","updateActiveStatus","onClosed","updateChatCard","onMessageRemoved","onChangedMessageState","updateIncomingSubscription","updateAcceptedStatus","removeInvite","updateEncryptedColor","new_message","updateTextClipping","error_msgs","indicators_count","is_pinned","archived","deletePlayersFromMessage","players","msg_time","is_empty","italics","bottom","draft_message","msg_from","msg_files","msg_images","msg_locations","msg_user_info","$colored_span","is_audio","total_size","first_forwarded_msg","fwd_msg_files","fwd_msg_images","fwd_msg_locations","fwd_msg_txt","openByClick","click_counter","setDefaultPlaceholder","onChatRemoved","loading_history","history_loaded","first_msg_id","last_msg_id","wheel_ev","defineMouseWheelEvent","onMouseWheel","backToBottom","onwheel","onmousewheel","keyupSearch","renderSearchPanel","onClickMessage","onClickLink","onClickLocationLink","onClickLocation","onHoverLocation","emptyChat","addMessageHTML","last_index","scrolled_from_top","scrolled_from_bottom","$next_message","nextAll","updateMessageInChat","initPopup","$history_feedback","addMessage","onChangedReadState","onUpdatePlyr","originalEvent","deltaY","first_history_loaded","last_history_loaded","_scrollbottom","showHistoryFeedback","hideHistoryFeedback","_onscroll_read_messages_timeout","readVisibleMessages","msg_item","buildMessageHtml","findLastIndex","slideToggle","chat_content_contact","timer","loading_timestamp","loaded_messages","message_count","showMessageAuthor","member_nickname","subscription_buttons","hideElement","sendAndAskSubscription","current_day_indicator","_pending_avatars","updateContentColorScheme","onMessage","_is_scrolled_bottom","onChangedActiveStatus","loadLastHistory","requestMissedMessages","onChangedMessageTimestamp","onTrustedChanged","onSubscriptionChange","updateMyInfo","cancelSearch","updateContactStatus","updateWaveforms","getPeer","fingerprints","updateMyName","updateMyStatus","updateMyAvatar","trusted","_loading_history","loadPreviousHistory","backend","drawBuffer","sendChatState","showChatNotification","is_context","last_visible_unread_msg","readMessage","hideMessagesAfterSkipping","synced_message","$synced_message","last_visible_msg","$last_visible_msg","_read_last_message_timeout","unread_context_messages","showUnreadMarker","unread_marker","$last_read_msg","mam_query","getMessageArchive","unread_history","scrollToUnreadWithButton","showDayIndicator","is_focused","indicator_idx","opacity_value","$chatday_indicator","$messages","marker","indicator","scroll_read_timer","removeAllMessagesExceptLast","_interval","is_saved","sendMAMRequest","func_conn","_delete_handler_timeout","send_counter","previous_history","_load_history_timeout","unread_history_first","first_unread_msg_stanza_id","unread_history_before","last_history","_wait_load_unread_history","last_archive_id","loadUnreadHistory","is_error","_load_history_feedback_timeout","showPinnedMessage","unpinMessage","pinned_msg_modal","imageOnload","$image_container","$copy_link_icon","videoOnload","initPlyrEmbedPlayer","OGPLinkOnload","locationOnload","$copy_location_div","loadLocationInChat","ol","$map_element","Map","center","proj","transform","interactions","interaction_defaults","altShiftDragRotate","doubleClickZoom","keyboard","mouseWheelZoom","shiftDragZoom","dragPan","pinchRotate","pinchZoom","layers","layer","Tile","OSM","mapCanvas","getSize","mapContext","querySelectorAll","globalAlpha","matrix","CanvasRenderingContext2D","setTransform","Path2D","getComputedStyle","translate","msSaveBlob","msToBlob","getElementById","dataURL","setTarget","$chat_state","$subtype","showChatState","_chatstate_show_timeout","_current_composing_msg","updateMentions","mention_target","is_scrolled_to_bottom","startGalleryUploadFile","startUploadFile","notifyMessage","archiveChat","is_scrolling_needed","attentionMessage","_pending_my_info","decryptImages","force","fwd_msg","$prev_message","$one_image","$collage_image","initMagnificPopup","initZoomGallery","getImagesInformation","servers","delegate","closeBtnInside","opener","$new_message","short_datetime","new_title","messages_to_save","$message_in_chat","content_view","removeMessageFromDOM","next","manageSelectedMessages","_clearing_history","dialog_message","fontcolor","hideShowCursor","current_time","is_popup","createImageGrid","template_for_images","hidden_images","is_video","is_image","is_location","is_file","avatar_id","from_id","audio_player_list","verbose_state","short_time","classes","matching_markup","exec","saved_main","searched","file_upload","main","$img_html","createImage","img_content","createImageContainer","video_content","createVideoContainer","video_el","createVideo","template_for_file_content","copied_attrs","mdi_icon_class","audio_file","audio_player","contact_avatar","file_","upload_id","loading_circle","maxHeight","maxWidth","imgHeight","imgWidth","file_loading","template_for_location_content","location_attrs","template_for_link_reference_content","link_references_attrs","youtube_url_regexp","vimeo_url_regexp","link","site_name","link_reference_chat","$img_html_forward","is_image_forward","images_forward","is_forward_video","is_forward_file","is_forward_location","fwd_markup_body","$f_message","is_fwd_voice_message","fwd_messages_count","fwd_messages_link","img_content_forward","embed_video","getDateIndicator","day_date","msg_players","msg_videos","existing_player","message_id","video_id","hideMessageAuthor","pending_avatar","data_avatar","hideFwdMessageAuthor","showFwdMessageAuthor","$fwd_message","msg_elem","$prev_msg","fwd_msg_item","is_system","is_same_sender","is_same_date","$fwd_msg_item","$prev_fwd_message","notification_text","onclick","sendMessage","legacy_body","legacy_fwd_msg","createTextMessage","idx_begin","fwd","idx_end","mention_attrs","blockquote","all_files","created","u","link_reference","property","chat_hash_id","SCE","CLIENT","msg_sending_timestamp","msgCallback","was_reconnecting","_pending_time","saveForwardedMessage","forwarded_messages","onSubmit","fwd_messages","markup_references","attached_files","submitted_here","_dfd_info","new_fwd_messages","upload_service","addFileMessage","is_voice","new_files","file_counter","http_upload_service","deferred_all","addFileSnippets","encrypted_file","encryptFile","new_file","$slot","get_url","put_url","onFileNotUploaded","xhr","abort","onabort","upload","onprogress","percentage","loaded","onFileUploaded","cancelled_files_count","xhr_requests","msg_files_count","is_errored","arrayIndex","is_uploading","setEditedMessageAttachments","setRedactedUploadMessage","is_cancelled","oncancel","xhr_status","fakeStatus","fakeResponse","slot_response","setRequestHeader","response_text","error_status","statusText","files_","file_new_format","imgContent","video_attrs","error_type","deleteFilesFromMessages","_chatstate_timeout","_chatstate_send_timeout","chat_state","EXTENDED_CHATSTATES","$next_msg","$old_prev_msg","is_synced","is_missed_msg","onTouchMessage","fwd_link_references","files_links","location_links","download","$plyr","no_select_message","expanded_fwd_message","quill","caret_position","participant_attrs","insertMention","img_information","images_details","$imgs","processClick","$prev_selected","$all_msgs","nextUntil","location_name","display_name","retrySendMessage","removeFileErrorMessage","chat_content_placeholder","pinned_message_panel","onClickPinnedMessage","onClickExpandedMessageLocation","expandFwdMessage","registerQuillEmbeddedsTags","Inline","import","Mention","static","paramValue","super","on_format","classList","blotName","optimize","QuillEmoji","domNode","item1","item2","t1","t2","mam_requests","deferred_mam_requests","openMention","identifier","registerMessageHandler","_msg_handler","runMAMRequests","parsePubSubNode","is_member_id","receivePubsubMessage","photo_id","member_node","b64_avatar","avatar_attrs","$mam","receiveHeadlineMessage","receiveErrorMessage","$stanza_received","$echo_msg","origin_msg_id","pending_message","$token_revoke","token_idx","participant_version","active_right_screen","participant_msg_item","$retracted_msg","retracted_msg_id","retracted_user_id","receiveStanzaId","GROUP_CHAT_INVITE_HTTP","GROUP_CHAT_INVITE","$forwarded","to_jid","to_bare_jid","to_resource","stanza_ids","$carbons","carbon_direction","forwarded_msgs","FORWARD","forwarded_msg","$forwarded_msg","$forwarded_message","$forwarded_delay","add_group_chat","ACCOUNT_ITEM","setDefaultSettings","$global_wrap","default_global_value","$membership_wrap","default_membership_value","setCustomDomain","add_chat_account_item","updateGroupJid","lower","textarea_is_empty","fixJid","createGroupChat","chat_jid","addGroupChat","xmpp_server","group_chats_support","chats_panel","active_chat","onChatAdded","onChangedReadStatus","updateChatPosition","readAllMessages","onWindowResized","active_toolbar","hideChatsFeedback","_load_chats_timeout","previous_chat","replaceChatItem","pinned_chats","$chat_item","scrolled_top","updateScreenAllChats","force_bottom","current_scrolling","showGroupChats","group_chats_pinned","showChats","private_chats","private_chats_pinned","account_chats","account_chats_pinned","showArchiveChats","archive_chats","saved_chats","notificatons_chats","all_chats","all_chats_pinned","cid","forward_panel","$cloned_item","is_match","has_matches_chats","has_matches_contacts","contact_list_item","forwardTo","setForwardedMessages","invitation_panel_view","registerClickEvents","selected_contacts","clearPanel","group_node","list_item","toggleContacts","selectAllGroup","addSelectedUsers","selected_users_count","_dfd_invitations","invitations_count","toast_text","sendInvite","addUser","itemIdx","sendInviteMessage","onInviteError","jid_to","hide_clone","is_visible","group_roster","selected_counter","saved_chat_head","_update_oneliner_interval","updateOneLiner","hideChat","updatePlyrTitle","updatePlyrTime","updateJingleButton","tooltip","rand_idx","one_liner","deleteChat","rewrite_support","pinSavedChat","pinned_value","visible_view","playPausePlyr","stopPlyr","popupPlyr","poster","$title_elem","voip_status","openJingleMessage","chat_head","updateArchived","pinChat","onChangedBlocked","updateGroupChatHead","updateMenu","showContactDetails","showContactDetailsRight","showContactResources","showMembersDetails","callAttention","updateArchiveChatsList","no_iq","is_archived_status","sendJingleMessage","getActiveScreen","active_screen","inviteUsers","exportHistory","showFingerprints","startEncryptedChat","openEncryptedChat","openRegularChat","send_media","addMedia","resolved_file","metadata","location_popup","initMap","coordinates","placemark","Overlay","Placemark","contentColor","autoPan","anchor","autoPanAnimation","placemark_my_location","overlays","enableHighAccuracy","maximumAge","pos","crd","getView","setCenter","longitude","latitude","setZoom","button_geoposition","geolocation","getCurrentPosition","custom_element_position","geoposition","control","Control","addControl","getPlacemarkPositionControl","button_placemark_position","custom_element_placemark_position","placemark_position","custom_element_show_location_name","show_location_name","send_buttom","send_address_div","send_div","custom_element_send","sLayer","Vector","Style","Circle","radius","stroke","Stroke","Fill","addLayer","SearchNominatim","polygon","reverseGeocode","house_number","road","neighbourhood","allotments","village","city","final_text","getSource","geojson","GeoJSON","readFeature","dataProjection","featureProjection","getProjection","resolution","getResolutionForExtent","getGeometry","getExtent","getZoomForResolution","extent","getCenter","coordinate","getZoom","updateSize","sendLocation","closeLocationName","initializeScrollbar","destroyScrollbar","chat_bottom","mention_avatar_size","rich_textarea_wrap","bindings","enter","insertText","arrow_up","active_item","$prev_elem","arrow_down","$next_elem","arrow_left","arrow_right","modules","formats","scrollingContainer","edit_message","stopped_loading_link_reference","link_reference_exempted","currently_loaded_link_references","loading_link_reference","onChangedText","onBlockedUpdate","updateInfoInBottom","replyMessages","forwardMessages","copyMessages","deleteMessages","showEditPanel","pinMessage","resetSelectedMessages","$rich_textarea","rich_textarea","$rich_textarea_wrap","$placeholder","oncut","onCut","onloaded_sprites","all_sprites","window_onclick","$target_emoji","renderLastEmoticons","http_upload","messages_arr","focusOnInput","checkOwnFingerprints","is_scrolled_bottom","encryption_warning","checkContactFingerprints","is_contact_trusted","trust","unverified_counter","content_encryption_warning","onClickBottom","setOneLiner","disable","enable","moveCursorToEnd","root","lastElementChild","lastChild","send_on_enter","shiftKey","ctrlKey","displayMicrophone","displaySend","updateMarkupPanel","$ic_markup","updatePlaceholder","changeEncryption","current_height","quill_textarea","quill_current_height","text_input_height","bottom_height","scrolled_to_bottom","_timeout_textchange","updateOpenGraphReference","updateMentionsList","mention_text","mention_item","mention_all","onMentionButtonClick","getLength","setSelection","inputMention","$participant_item","lastRange","to_caret_text","mentions_at","matchAll","mentions_plus","at_position","plus_position","mention_position","deleteText","insertEmbed","showAccountSettings","edit_msg","setEditedMessage","mention_at_regexp","mention_plus_regexp","getLeaf","unsetForwardedMessages","removeLinkReferenceByUrl","removeFileSnippetById","clipboard_data","image_from_clipboard","getAsFile","arr_text","execCommand","difference","request_count","link_reference_request_timestamp","request_timestamp","removeAttachments","removeAllFileSnippets","removeAllLinkReferences","stopLoadingLinkReference","removeLinkReference","uid","attached_file","typeicon","removeFileSnippet","is_upload","showLocationPopup","showMediaPopup","stopWritingVoiceMessage","$bottom_panel","writeVoiceMessage","initAudio","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","constraints","channelCount","chunks","$mic","onSuccess","start_time","end_time","mediaRecorder","encoderPath","encoderSampleRate","numberOfChannels","mic_hover","onstart","$timer_elem","$status_msg","$voice_visualizer","timerIdDot","onstop","audio_name","audio_type","ondataavailable","onError","caret_idx","savedRange","getFormat","formatText","cached_last_emoji","getLastEmoji","$last_emoticons","updateLastEmoji","forced","emoji_item","innerText","content_concat","getContents","content_attrs","insert","mention_idx","ins","quote_start_idx","quote_end_idx","markup_ref","start_length","delta","markup_reference","editMessage","failed_files","file_check_dfd","pluck","setText","msg_author","image_preview","$img_html_preview","fwd_images","fwd_files","fwd_locations","createPreviewImage","onShowMarkupPanel","$clicked_icon","is_panel_opened","$selected_msgs","$input_panel","$message_actions","my_msg","$msgs","dataset","pushMessagesToClipboard","text_markups","original_body","forwarded_body","groupchat_ref","forward_ref","gc_length","decrypted_msg","putMessage","my_msgs","symmetric_deletion","copied_messages","fwd_msg_indicator","text_message","current_date","msg_sender","is_colored","current_bottom","chat_placeholder","last_emoji","cached_avatars","group_chat_members_lists","last_emoji_icons","muted_list","archived_list","group_chat_list","avatar_list","deleteTimedHandler","_get_msg_handler","addTimedHandler","handlers","h","omemo_enable_placeholder","onselectstart","metaKey","Chats","opened_chats","OpenedChats","closed_chats","ClosedChats","chats_view","ChatsView","ChatHeadContainer","chat_body","ChatBodyContainer","chat_body_placeholder","ChatBodyPlaceholderContainer","ChatBottomContainer","ChatPlaceholderView","add_group_chat_view","AddGroupChatView","searching","searching_wide","colorUpdated","toggleProperties","endDiscovering","isPropertiesVisible","discover","searchExistingGroupChats","getGroupchatService","onDiscoveringError","getGroupchatFeatures","getServerInfo","getChatsFromSever","$chat_item_html","existing_groupchat_item","searching_account_item","getChatProperties","request_iq","$iq_response","chat_properties","more_info_view","existing_groupchat_details_view","joinChat","getSearchingFields","iq_get","INDEX","parseSearchingFields","iq_result","$fields","XDATA","supported_fields","indexed_chats","iq_search","anywhere","onSearched","$chat","$property","property_name","property_value","discovering","DiscoveringView","onMessageUpdated","onMentionAdded","mentions_panel","active_mention","onMentionRemoved","updateMentionPosition","replaceMentionItem","$prev_el","$next_el","readAllMentions","contact_archive_id","previous_mention","updateContactName","contact_name","default_avatar","mentions_placeholder","Mentions","mentions_view","MentionsView","MentionsPlaceholderView","shift_pressed","shiftctrl_pressed","updateLayout","updateContainersLayout","panel_width","left_panel_width","right_panel_width","right_contact_panel_width","chat_bottom_panel_width","is_wide","is_narrow","toolbar_accounts_heigth","right_contact_panel_styles","right_contact_panel_saveable","wide","placeholders","main_overlay","path_acc_settings_left","ViewPath","path_acc_settings_right","path_acc_settings_modal","path_acc_vcard_edit","path_chat_head","path_chat_body","path_chat_body_placeholder","path_chat_bottom","path_group_invitation","path_enable_view","path_contact_details","path_contact_details_right","path_contact_details_right_encrypted","path_participant_messages","path_details_participants","discovering_main","details","details_content","omemo_item","KeyHelper","SignalProtocolAddress","SessionBuilder","SessionCipher","updateDevices","d","removeSession","getDevice","getDevicesNode","_pending_devices","_dfd_devices","cb","parseUserDevices","enc_promises","aes","deviceId","ciphertext","preKey","is_own_devices","renderOwnDevices","renderDevices","updateFingerprints","updateOwnFingerprint","getMyDevices","editLabel","saveLabel","onblur","onkeydown","publishDevice","devices_count","$container","f_count","old_fingerprint","addRow","getBundleInfo","getIdentityKeyPair","pubKey","padStart","trustDevice","is_session_initiated","ignoreDevice","delete_button","edit_setting","fingerprint_item","deleteDevice","fingerprints_devices","renderTrustOnFingerprint","$warning_container","untrusted_count","device_icons","fingerprint_devices_item","getIdentity","generateIdentity","getPreKeys","publishBundle","generateIdentityKeyPair","generateRegistrationId","identityKey","registrationId","cacheIdentity","privKey","generatePreKeys","preKeysPromises","generatePreKey","generateSignedPreKey","getSignedPreKey","keyPair","signature","keyId","prekeys","getAll","prekey","priv_pk","key_pair","storePreKey","getUsedPreKeys","storeSignedPreKey","own_used_prekeys","identity","signedPreKey","cacheSignedPreKey","converted_spk","closeSession","sendOptOut","_pending_bundle","_dfd_bundle","$bundle","$spk","$pk","getRandomPreKey","cipherText","plainText","sessionCipher","decryptPreKeyWhisperMessage","hasSession","getCachedSession","storeSession","decryptWhisperMessage","getPreKey","used_prekeys","getSession","getDeviceId","cached_pk","isTrusted","processPreKey","publicKey","preKeyBundle","sessions","onDeviceIdUpdated","onOmemoDestroyed","peers","generateDeviceId","onOwnDevicesUpdated","removePreKey","cacheSession","storeSessions","deleteOwnDevice","addDevice","_pending_own_devices","_dfd_own_devices","contact_fingerprints","cacheRetractVersion","getRetractVersion","dev_id","rand","peer","encryptedMessage","encryptedElement","myKeys","rid","kex","EXPLICIT_MESSAGE_ENCRYPTION","hasChanges","o1","o2","obj1","obj2","has_devices","device_ik","cached_msg","getMessage","getTrusted","decryption_retry","own_trusted","contact_trusted","parseEncrypted","$encrypted","$payload","$header","keyElement","$m","encryptedData","ownPreKey","exportedKey","toBase64","publish","pks","conn_omemo","configNode","spks","removed_pk","missing_keys","last_id","rec","device_attrs","createBundleNode","contact_messages","Direction","SENDING","RECEIVING","getLocalRegistrationId","Error","defaultValue","isTrustedIdentity","direction","util","loadIdentityKey","saveIdentity","fromString","existing","getName","loadPreKey","loadSignedPreKey","removeSignedPreKey","loadSession","record","getAllSessions","removeAllSessions","omemo_enable","onOmemoChange","enableOmemo","closeOmemoPlaceholder","views","discovery","ui","g","webpackContext","webpackContextResolve","__webpack_require__","o","exports","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","amdO","O","chunkIds","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","getPrototypeOf","mode","def","current","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","promises","miniCssF","globalThis","hmd","l","script","needAttach","scripts","s","charset","nc","onScriptComplete","doneFns","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","baseURI","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}