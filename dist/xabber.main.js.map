{"version":3,"file":"xabber.main.js","mappings":"UAAIA,ECCAC,EADAC,ECAAC,EACAC,E,8DCDJ,isnH,6DCAA,muZ,6DCAA,oR,6DCAA,25D,6DCAA,igC,6DCAA,upE,6DCAA,0jD,6DCAA,2jF,6DCAA,iT,6DCAA,kuB,4DCAA,iY,6DCAA,8uB,4DCAA,uoH,6DCAA,k8E,6DCAA,k6B,2DCAA,o2B,6DCAA,miL,6DCAA,s8hB,6DCAA,+jD,6DCAA,mf,6DCAA,0sC,6DCAA,m7lB,6DCAA,4mG,4DCAA,qjC,6DCAA,wkC,6DCAA,kmB,6DCAA,8jI,6DCAA,ooE,6DCAA,k7B,6DCAA,8qJ,6DCAA,62D,6DCAA,i2C,6DCAA,gwI,6DCAA,y5C,6DCAA,0pE,4DCAA,w9B,6DCAA,4a,6DCAA,o2E,6DCAA,we,6DCAA,quC,6DCAA,i8xD,6DCAA,2hI,6DCAA,uS,6DCAA,qpO,6DCAA,mzC,4DCAA,6hD,6DCAA,orO,6DCAA,06D,4DCAA,yF,6DCAA,oxD,6DCAA,8K,6DCAA,6S,6DCAA,kT,6DCAA,qrB,6DCAA,ijM,4DCAA,2+B,6DCAA,8T,6DCAA,iE,6DCAA,u7f,6DCAA,6V,6DCAA,ivC,6DCAA,yhB,6DCAA,oR,6DCAA,mwB,6DCAA,0c,6DCAA,oZ,6DCAA,28E,6DCAA,muC,6DCAA,2xB,6DCAA,+Z,6DCAA,kpB,6DCAA,20B,6DCAA,6jC,6DCAA,2jD,6DCAA,w8B,6DCAA,u/C,6DCAA,miE,6DCAA,6e,6DCAA,6jG,6DCAA,0sE,6DCAA,4hB,6DCAA,uhC,6DCAA,oY,4DCAA,yjB,6DCAA,y3B,6DCAA,+nC,6DCAA,87C,6DCAA,slE,6DCAA,umB,6DCAA,iE,6DCAA,0yG,6DCAA,ghE,6DCAA,2hB,6DCAA,myB,6DCAA,6yB,6DCAA,q1E,6DCAA,yS,6DCAA,oR,6DCAA,iR,6DCAA,ujI,6DCAA,qpJ,6DCAA,2R,6DCAA,4F,6DCAA,oS,6DCAA,y3H,4DCAA,o/V,6DCAA,kX,6DCAA,6zB,6DCAA,yrB,6DCAA,g3C,6DCAA,0Q,6DCAA,0C,6DCAA,qjK,6DCAA,qgM,6DCAA,q4F,6DCAA,qoG,6DCAA,0tK,6DCAA,+wD,6DCAA,qxE,6DCAA,wmB,6DCAA,ga,6DCAA,6pB,6DCAA,y2B,6DCAA,qkB,6DCAA,8iB,6DCAA,q1I,6DCAA,01N,4DCAA,+sF,6DCAA,wH,6DCAA,ulD,6DCAA,06C,6DCAA,i9B,6DCAA,4uD,6DCAA,mvE,6DCAA,iY,6DCAA,8jB,6DCAA,i0B,6DCAA,yL,6DCAA,qV,6DCAA,6R,6DCAA,q6E,6DCAA,kT,6DCAA,2d,6DCAA,46B,6DCAA,4X,6DCAA,+e,6DCAA,+qD,6DCAA,oQ,4DCAA,4Z,6DCAA,ygD,6DCAA,4mB,6DCAA,u6D,6DCAA,0vB,6DCAA,sgD,6DCAA,2F,6DCAA,+hE,6DCAA,kX,4DCAA,kH,6DCAA,ouG,6DCAA,49B,6DCAA,4iC,6DCAA,yiC,6DCAA,q/B,6DCAA,i5B,6DCAA,mrC,6DCAA,ksC,6DCAA,m+B,6DCAA,0rC,6DCAA,kpD,6DCAA,4/B,4DCAA,u8B,6DCAA,4qC,6DCAA,oqC,6DCAA,q5B,6DCAA,olB,6DCAA,qsB,6DCAA,2mB,6DCAA,oxC,6DCAA,85B,6DCAA,onB,6DCAA,6gC,6DCAA,6oC,6DCAA,i4B,6DCAA,2xB,6DCAA,k7B,6DCAA,6xB,6DCAA,yqB,6DCAA,2sB,4DCAA,gqB,6DCAA,svB,4DCAA,6yC,6DCAA,y5B,6DCAA,uyB,6DCAA,szB,6DCAA,mpB,6DCAA,qlC,6DCAA,siC,6DCAA,2kD,6DCAA,q0B,6DCAA,o7E,6DCAA,gkC,6DCAA,m6B,6DCAA,s8B,4DCAA,w0F,6DCAA,0gB,6DCAA,s/B,6DCAA,osB,4DCAA,otD,6DCAA,s5B,6DCAA,0rC,6DCAA,i8B,6DCAA,k4B,6DCAA,kjC,6DCAA,y6B,4DCAA,g7C,4DCAA,mvB,6DCAA,svB,6DCAA,siB,6DCAA,yqB,6DCAA,i4C,6DCAA,+jB,6DCAA,izB,6DCAA,k/B,6DCAA,yyB,6DCAA,i/B,4DCAA,q8B,6DCAA,4hB,6DCAA,w7B,6DCAA,ymC,6DCAA,qsB,6DCAA,gxB,6DCAA,ioB,6DCAA,6xL,6DCAA,g/B,6DCAA,q/C,6DCAA,y6B,6DCAA,qvC,6DCAA,6vC,6DCAA,gsC,6DCAA,uyB,6DCAA,88B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E,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAC5+I,iBAAoB,CAAC,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,MAAOoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,MAAOoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IACtkF,mBAAsB,CAAC,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,MAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IACzzF,gBAAmB,CAAC,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IACp7E,kBAAqB,CAAC,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,KAAOoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,KAAOoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,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,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OA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GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGs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AE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,KAAOoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQo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syH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,MAAOoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,MAAOoM,EAAE,GAAGsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,MAAOoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,KAAOoM,EAAE,EAAEsyH,EAAE,IAAI,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,GAAGsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQoM,EAAE,EAAEsyH,EAAE,GAAG,CAAC1+H,KAAK,OAAQ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A,IAED,cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,IACA,KAED,UAAW,CACV,MACA,MAED,cAAe,CACd,MACA,MAED,aAAc,CACb,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,KAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,KACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,oBAAqB,CACpB,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,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","sources":["webpack://xabber.web/webpack/runtime/chunk loaded","webpack://xabber.web/webpack/runtime/create fake namespace object","webpack://xabber.web/webpack/runtime/load script","webpack://xabber.web/./templates/accounts/emojis.txt","webpack://xabber.web/./templates/accounts/add_account.html","webpack://xabber.web/./templates/accounts/audio_file_waveform.html","webpack://xabber.web/./templates/accounts/avatars_gallery.html","webpack://xabber.web/./templates/accounts/change_password.html","webpack://xabber.web/./templates/accounts/change_status.html","webpack://xabber.web/./templates/accounts/current_token_item.html","webpack://xabber.web/./templates/accounts/emoji_panel.html","webpack://xabber.web/./templates/accounts/emoji_picker.html","webpack://xabber.web/./templates/accounts/emoji_picker_tabs.html","webpack://xabber.web/./templates/accounts/existing_groupchat_item.html","webpack://xabber.web/./templates/accounts/global_settings_item.html","webpack://xabber.web/./templates/accounts/media_gallery_account.html","webpack://xabber.web/./templates/accounts/media_gallery_account_file.html","webpack://xabber.web/./templates/accounts/resource.html","webpack://xabber.web/./templates/accounts/resource_right.html","webpack://xabber.web/./templates/accounts/settings_left.html","webpack://xabber.web/./templates/accounts/settings_right.html","webpack://xabber.web/./templates/accounts/token_item.html","webpack://xabber.web/./templates/accounts/toolbar_item.html","webpack://xabber.web/./templates/accounts/webcam_panel.html","webpack://xabber.web/./templates/accounts/xmpp_login.html","webpack://xabber.web/./templates/api_service/add_xabber_account.html","webpack://xabber.web/./templates/api_service/linked_email_item.html","webpack://xabber.web/./templates/api_service/sync_settings.html","webpack://xabber.web/./templates/api_service/sync_settings_account_item.html","webpack://xabber.web/./templates/api_service/xabber_account.html","webpack://xabber.web/./templates/api_service/xabber_login.html","webpack://xabber.web/./templates/api_service/xabber_login_by_email.html","webpack://xabber.web/./templates/base/about.html","webpack://xabber.web/./templates/base/backgrounds_gallery.html","webpack://xabber.web/./templates/base/color_picker.html","webpack://xabber.web/./templates/base/color_scheme.html","webpack://xabber.web/./templates/base/dialog.html","webpack://xabber.web/./templates/base/fingerprint_item.html","webpack://xabber.web/./templates/base/fingerprints.html","webpack://xabber.web/./templates/base/input_widget.html","webpack://xabber.web/./templates/base/jingle_message_calling.html","webpack://xabber.web/./templates/base/omemo_enable.html","webpack://xabber.web/./templates/base/plyr_player_popup.html","webpack://xabber.web/./templates/base/settings.html","webpack://xabber.web/./templates/base/toolbar.html","webpack://xabber.web/./templates/chats/add_chat_account_item.html","webpack://xabber.web/./templates/chats/chat_bottom.html","webpack://xabber.web/./templates/chats/chat_content.html","webpack://xabber.web/./templates/chats/chat_content_contact.html","webpack://xabber.web/./templates/chats/chat_head.html","webpack://xabber.web/./templates/chats/chat_item.html","webpack://xabber.web/./templates/chats/chat_placeholder.html","webpack://xabber.web/./templates/chats/chats_panel.html","webpack://xabber.web/./templates/chats/checkbox.html","webpack://xabber.web/./templates/chats/content_encryption_warning.html","webpack://xabber.web/./templates/chats/encryption_warning.html","webpack://xabber.web/./templates/chats/forward_panel.html","webpack://xabber.web/./templates/chats/group_chats/add_group_chat.html","webpack://xabber.web/./templates/chats/group_chats/invitation_panel_view.html","webpack://xabber.web/./templates/chats/group_chats/mention_item.html","webpack://xabber.web/./templates/chats/group_chats/pinned_message_panel.html","webpack://xabber.web/./templates/chats/location_popup.html","webpack://xabber.web/./templates/chats/message_item.html","webpack://xabber.web/./templates/chats/messages/attached_file.html","webpack://xabber.web/./templates/chats/messages/audio_file.html","webpack://xabber.web/./templates/chats/messages/audio_file_waveform.html","webpack://xabber.web/./templates/chats/messages/auth_request.html","webpack://xabber.web/./templates/chats/messages/file.html","webpack://xabber.web/./templates/chats/messages/file_loading.html","webpack://xabber.web/./templates/chats/messages/file_upload.html","webpack://xabber.web/./templates/chats/messages/forwarded.html","webpack://xabber.web/./templates/chats/messages/group_request.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-2.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-3.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-4.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-5.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-6.html","webpack://xabber.web/./templates/chats/messages/images_details.html","webpack://xabber.web/./templates/chats/messages/link_reference.html","webpack://xabber.web/./templates/chats/messages/link_reference_chat.html","webpack://xabber.web/./templates/chats/messages/loading_circle.html","webpack://xabber.web/./templates/chats/messages/location.html","webpack://xabber.web/./templates/chats/messages/main.html","webpack://xabber.web/./templates/chats/messages/saved_main.html","webpack://xabber.web/./templates/chats/messages/searched.html","webpack://xabber.web/./templates/chats/messages/system.html","webpack://xabber.web/./templates/chats/messages/template-for-2.html","webpack://xabber.web/./templates/chats/messages/template-for-3.html","webpack://xabber.web/./templates/chats/messages/template-for-4.html","webpack://xabber.web/./templates/chats/messages/template-for-5.html","webpack://xabber.web/./templates/chats/messages/template-for-6.html","webpack://xabber.web/./templates/chats/messages/video.html","webpack://xabber.web/./templates/chats/messages/voice_message.html","webpack://xabber.web/./templates/chats/saved_chat_head.html","webpack://xabber.web/./templates/chats/send_media.html","webpack://xabber.web/./templates/chats/subscription_buttons.html","webpack://xabber.web/./templates/contacts/account_roster_left.html","webpack://xabber.web/./templates/contacts/account_roster_right.html","webpack://xabber.web/./templates/contacts/add_contact.html","webpack://xabber.web/./templates/contacts/add_contact_account_item.html","webpack://xabber.web/./templates/contacts/audio_file_waveform.html","webpack://xabber.web/./templates/contacts/contact_blocked_item.html","webpack://xabber.web/./templates/contacts/contact_details.html","webpack://xabber.web/./templates/contacts/contact_details_right.html","webpack://xabber.web/./templates/contacts/contact_left_item.html","webpack://xabber.web/./templates/contacts/contact_placeholder.html","webpack://xabber.web/./templates/contacts/contact_right_item.html","webpack://xabber.web/./templates/contacts/edit_contact.html","webpack://xabber.web/./templates/contacts/edit_group.html","webpack://xabber.web/./templates/contacts/group_chats/add_blocked_participant_form.html","webpack://xabber.web/./templates/contacts/group_chats/badge_edit_view.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions_right.html","webpack://xabber.web/./templates/contacts/group_chats/description_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/file_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_edit.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_name_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/group_status.html","webpack://xabber.web/./templates/contacts/group_chats/group_status_right.html","webpack://xabber.web/./templates/contacts/group_chats/invitation.html","webpack://xabber.web/./templates/contacts/group_chats/invited_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_badge_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_rights.html","webpack://xabber.web/./templates/contacts/group_chats/participants.html","webpack://xabber.web/./templates/contacts/group_chats/participants_right_panel.html","webpack://xabber.web/./templates/contacts/group_chats/pinned_message.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/restriction_item.html","webpack://xabber.web/./templates/contacts/group_chats/right_expire_variants.html","webpack://xabber.web/./templates/contacts/group_chats/set_status.html","webpack://xabber.web/./templates/contacts/group_chats/status_item.html","webpack://xabber.web/./templates/contacts/group_left.html","webpack://xabber.web/./templates/contacts/group_right.html","webpack://xabber.web/./templates/contacts/group_settings.html","webpack://xabber.web/./templates/contacts/groups.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list_contact.html","webpack://xabber.web/./templates/contacts/groups_list.html","webpack://xabber.web/./templates/contacts/groups_new_group.html","webpack://xabber.web/./templates/contacts/media_item.html","webpack://xabber.web/./templates/contacts/media_items_empty.html","webpack://xabber.web/./templates/contacts/preloader.html","webpack://xabber.web/./templates/contacts/roster_left.html","webpack://xabber.web/./templates/contacts/roster_right.html","webpack://xabber.web/./templates/contacts/roster_settings.html","webpack://xabber.web/./templates/mentions/mention_item.html","webpack://xabber.web/./templates/mentions/mentions_panel.html","webpack://xabber.web/./templates/mentions/mentions_placeholder.html","webpack://xabber.web/./templates/searching/existing_groupchat_details_view.html","webpack://xabber.web/./templates/searching/existing_groupchat_item.html","webpack://xabber.web/./templates/searching/searching_account_item.html","webpack://xabber.web/./templates/searching/searching_wide.html","webpack://xabber.web/./templates/svg/account-outline.html","webpack://xabber.web/./templates/svg/address-outline.html","webpack://xabber.web/./templates/svg/bell-off.html","webpack://xabber.web/./templates/svg/bell-sleep.html","webpack://xabber.web/./templates/svg/bell.html","webpack://xabber.web/./templates/svg/birthday-outline.html","webpack://xabber.web/./templates/svg/blocked-add.html","webpack://xabber.web/./templates/svg/blocked.html","webpack://xabber.web/./templates/svg/bot-variant.html","webpack://xabber.web/./templates/svg/bot.html","webpack://xabber.web/./templates/svg/call-outline.html","webpack://xabber.web/./templates/svg/call.html","webpack://xabber.web/./templates/svg/camera-retake.html","webpack://xabber.web/./templates/svg/cancel.html","webpack://xabber.web/./templates/svg/channel.html","webpack://xabber.web/./templates/svg/chevron-down.html","webpack://xabber.web/./templates/svg/chevron-left-variant.html","webpack://xabber.web/./templates/svg/chevron-right-variant.html","webpack://xabber.web/./templates/svg/circles.html","webpack://xabber.web/./templates/svg/clock-outline.html","webpack://xabber.web/./templates/svg/close.html","webpack://xabber.web/./templates/svg/crosshairs-gps.html","webpack://xabber.web/./templates/svg/crosshairs-question.html","webpack://xabber.web/./templates/svg/crosshairs.html","webpack://xabber.web/./templates/svg/description-outline.html","webpack://xabber.web/./templates/svg/devices.html","webpack://xabber.web/./templates/svg/edit-outline.html","webpack://xabber.web/./templates/svg/edit.html","webpack://xabber.web/./templates/svg/email-outline.html","webpack://xabber.web/./templates/svg/file-audio.html","webpack://xabber.web/./templates/svg/file-document.html","webpack://xabber.web/./templates/svg/file-pdf.html","webpack://xabber.web/./templates/svg/file-presentation.html","webpack://xabber.web/./templates/svg/file-video.html","webpack://xabber.web/./templates/svg/file-zip.html","webpack://xabber.web/./templates/svg/file.html","webpack://xabber.web/./templates/svg/fullname-outline.html","webpack://xabber.web/./templates/svg/fullname.html","webpack://xabber.web/./templates/svg/group-incognito.html","webpack://xabber.web/./templates/svg/group-invite.html","webpack://xabber.web/./templates/svg/group-private.html","webpack://xabber.web/./templates/svg/group-public.html","webpack://xabber.web/./templates/svg/history.html","webpack://xabber.web/./templates/svg/ic-at.html","webpack://xabber.web/./templates/svg/ic-jabber.html","webpack://xabber.web/./templates/svg/ic-searching.html","webpack://xabber.web/./templates/svg/id-outline.html","webpack://xabber.web/./templates/svg/image.html","webpack://xabber.web/./templates/svg/index.html","webpack://xabber.web/./templates/svg/information-outline.html","webpack://xabber.web/./templates/svg/invite-outline.html","webpack://xabber.web/./templates/svg/job-outline.html","webpack://xabber.web/./templates/svg/link.html","webpack://xabber.web/./templates/svg/map-marker-outline.html","webpack://xabber.web/./templates/svg/map-marker.html","webpack://xabber.web/./templates/svg/membership-outline.html","webpack://xabber.web/./templates/svg/message-bookmark-outline.html","webpack://xabber.web/./templates/svg/message-group.html","webpack://xabber.web/./templates/svg/minus.html","webpack://xabber.web/./templates/svg/mobile.html","webpack://xabber.web/./templates/svg/palette.html","webpack://xabber.web/./templates/svg/pause.html","webpack://xabber.web/./templates/svg/picture-in-picture-bottom-right.html","webpack://xabber.web/./templates/svg/picture-in-picture-minimize.html","webpack://xabber.web/./templates/svg/picture-in-picture-top-right.html","webpack://xabber.web/./templates/svg/pinned-circle-small.html","webpack://xabber.web/./templates/svg/pinned.html","webpack://xabber.web/./templates/svg/play.html","webpack://xabber.web/./templates/svg/player-float.html","webpack://xabber.web/./templates/svg/player-full.html","webpack://xabber.web/./templates/svg/player-mini-variant.html","webpack://xabber.web/./templates/svg/player-mini.html","webpack://xabber.web/./templates/svg/plus.html","webpack://xabber.web/./templates/svg/plyr.html","webpack://xabber.web/./templates/svg/qrcode.html","webpack://xabber.web/./templates/svg/restrictions-outline.html","webpack://xabber.web/./templates/svg/rss-variant.html","webpack://xabber.web/./templates/svg/rss.html","webpack://xabber.web/./templates/svg/saved-messages.html","webpack://xabber.web/./templates/svg/search.html","webpack://xabber.web/./templates/svg/server.html","webpack://xabber.web/./templates/svg/status-outline.html","webpack://xabber.web/./templates/svg/subscription-from.html","webpack://xabber.web/./templates/svg/subscription-to.html","webpack://xabber.web/./templates/svg/task.html","webpack://xabber.web/./templates/svg/translate.html","webpack://xabber.web/./templates/svg/video.html","webpack://xabber.web/./templates/svg/volume-high.html","webpack://xabber.web/./templates/svg/volume-off-variant.html","webpack://xabber.web/./templates/svg/volume-off.html","webpack://xabber.web/./templates/svg/xabber-offline.html","webpack://xabber.web/./templates/svg/xabber-online.html","webpack://xabber.web/./templates/svg/xmpp.html","webpack://xabber.web/./templates/vcard/vcard.html","webpack://xabber.web/./templates/vcard/vcard_edit.html","webpack://xabber.web/./templates/vcard/vcard_right.html","webpack://xabber.web/./src/accounts.js","webpack://xabber.web/./src/api-service.js","webpack://xabber.web/./src/chats.js","webpack://xabber.web/./src/constants.js","webpack://xabber.web/./src/contacts.js","webpack://xabber.web/./src/core.js","webpack://xabber.web/./src/dependencies.js","webpack://xabber.web/./src/discovery.js","webpack://xabber.web/./src/environment.js","webpack://xabber.web/./src/mentions.js","webpack://xabber.web/./src/omemo.js","webpack://xabber.web/./src/searching.js","webpack://xabber.web/./src/strophe.js","webpack://xabber.web/./src/templates.js","webpack://xabber.web/./src/ui.js","webpack://xabber.web/./src/utils/emoji.js","webpack://xabber.web/./src/utils/images.js","webpack://xabber.web/./src/utils/modals.js","webpack://xabber.web/./src/utils/textarea.js","webpack://xabber.web/./src/utils/utils.js","webpack://xabber.web/./src/vcard.js","webpack://xabber.web/./src/views.js","webpack://xabber.web/./src/xabber.js","webpack://xabber.web/ ^\\.\\/.*\\.html$","webpack://xabber.web/ ^\\.\\/.*\\.txt$","webpack://xabber.web/./translations/translation_progress.js","webpack://xabber.web/./translations/ lazy ^\\.\\/.*\\.js$ namespace object","webpack://xabber.web/./version.js","webpack://xabber.web/webpack/bootstrap","webpack://xabber.web/webpack/runtime/amd options","webpack://xabber.web/webpack/runtime/compat get default export","webpack://xabber.web/webpack/runtime/define property getters","webpack://xabber.web/webpack/runtime/ensure chunk","webpack://xabber.web/webpack/runtime/get javascript chunk filename","webpack://xabber.web/webpack/runtime/global","webpack://xabber.web/webpack/runtime/hasOwnProperty shorthand","webpack://xabber.web/webpack/runtime/make namespace object","webpack://xabber.web/webpack/runtime/node module decorator","webpack://xabber.web/webpack/runtime/publicPath","webpack://xabber.web/webpack/runtime/jsonp chunk loading","webpack://xabber.web/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"xabber.web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","export default \"module.exports = \\\"[\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"😀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☺️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☹️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤲\\\\\\\",\\\\n                \\\\\\\"🤲🏻\\\\\\\",\\\\n                \\\\\\\"🤲🏼\\\\\\\",\\\\n                \\\\\\\"🤲🏽\\\\\\\",\\\\n                \\\\\\\"🤲🏾\\\\\\\",\\\\n                \\\\\\\"🤲🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👐\\\\\\\",\\\\n                \\\\\\\"👐🏻\\\\\\\",\\\\n                \\\\\\\"👐🏼\\\\\\\",\\\\n                \\\\\\\"👐🏽\\\\\\\",\\\\n                \\\\\\\"👐🏾\\\\\\\",\\\\n                \\\\\\\"👐🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙌\\\\\\\",\\\\n                \\\\\\\"🙌🏻\\\\\\\",\\\\n                \\\\\\\"🙌🏼\\\\\\\",\\\\n                \\\\\\\"🙌🏽\\\\\\\",\\\\n                \\\\\\\"🙌🏾\\\\\\\",\\\\n                \\\\\\\"🙌🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👏\\\\\\\",\\\\n                \\\\\\\"👏🏻\\\\\\\",\\\\n                \\\\\\\"👏🏼\\\\\\\",\\\\n                \\\\\\\"👏🏽\\\\\\\",\\\\n                \\\\\\\"👏🏾\\\\\\\",\\\\n                \\\\\\\"👏🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👍\\\\\\\",\\\\n                \\\\\\\"👍🏻\\\\\\\",\\\\n                \\\\\\\"👍🏼\\\\\\\",\\\\n                \\\\\\\"👍🏽\\\\\\\",\\\\n                \\\\\\\"👍🏾\\\\\\\",\\\\n                \\\\\\\"👍🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👎\\\\\\\",\\\\n                \\\\\\\"👎🏻\\\\\\\",\\\\n                \\\\\\\"👎🏼\\\\\\\",\\\\n                \\\\\\\"👎🏽\\\\\\\",\\\\n                \\\\\\\"👎🏾\\\\\\\",\\\\n                \\\\\\\"👎🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👊\\\\\\\",\\\\n                \\\\\\\"👊🏻\\\\\\\",\\\\n                \\\\\\\"👊🏼\\\\\\\",\\\\n                \\\\\\\"👊🏽\\\\\\\",\\\\n                \\\\\\\"👊🏾\\\\\\\",\\\\n                \\\\\\\"👊🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✊\\\\\\\",\\\\n                \\\\\\\"✊🏻\\\\\\\",\\\\n                \\\\\\\"✊🏼\\\\\\\",\\\\n                \\\\\\\"✊🏽\\\\\\\",\\\\n                \\\\\\\"✊🏾\\\\\\\",\\\\n                \\\\\\\"✊🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤛\\\\\\\",\\\\n                \\\\\\\"🤛🏻\\\\\\\",\\\\n                \\\\\\\"🤛🏼\\\\\\\",\\\\n                \\\\\\\"🤛🏽\\\\\\\",\\\\n                \\\\\\\"🤛🏾\\\\\\\",\\\\n                \\\\\\\"🤛🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤜\\\\\\\",\\\\n                \\\\\\\"🤜🏻\\\\\\\",\\\\n                \\\\\\\"🤜🏼\\\\\\\",\\\\n                \\\\\\\"🤜🏽\\\\\\\",\\\\n                \\\\\\\"🤜🏾\\\\\\\",\\\\n                \\\\\\\"🤜🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤞\\\\\\\",\\\\n                \\\\\\\"🤞🏻\\\\\\\",\\\\n                \\\\\\\"🤞🏼\\\\\\\",\\\\n                \\\\\\\"🤞🏽\\\\\\\",\\\\n                \\\\\\\"🤞🏾\\\\\\\",\\\\n                \\\\\\\"🤞🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✌\\\\\\\",\\\\n                \\\\\\\"✌🏻\\\\\\\",\\\\n                \\\\\\\"✌🏼\\\\\\\",\\\\n                \\\\\\\"✌🏽\\\\\\\",\\\\n                \\\\\\\"✌🏾\\\\\\\",\\\\n                \\\\\\\"✌🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤟\\\\\\\",\\\\n                \\\\\\\"🤟🏻\\\\\\\",\\\\n                \\\\\\\"🤟🏼\\\\\\\",\\\\n                \\\\\\\"🤟🏽\\\\\\\",\\\\n                \\\\\\\"🤟🏾\\\\\\\",\\\\n                \\\\\\\"🤟🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤘\\\\\\\",\\\\n                \\\\\\\"🤘🏻\\\\\\\",\\\\n                \\\\\\\"🤘🏼\\\\\\\",\\\\n                \\\\\\\"🤘🏽\\\\\\\",\\\\n                \\\\\\\"🤘🏾\\\\\\\",\\\\n                \\\\\\\"🤘🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👌\\\\\\\",\\\\n                \\\\\\\"👌🏻\\\\\\\",\\\\n                \\\\\\\"👌🏼\\\\\\\",\\\\n                \\\\\\\"👌🏽\\\\\\\",\\\\n                \\\\\\\"👌🏾\\\\\\\",\\\\n                \\\\\\\"👌🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👈\\\\\\\",\\\\n                \\\\\\\"👈🏻\\\\\\\",\\\\n                \\\\\\\"👈🏼\\\\\\\",\\\\n                \\\\\\\"👈🏽\\\\\\\",\\\\n                \\\\\\\"👈🏾\\\\\\\",\\\\n                \\\\\\\"👈🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👉\\\\\\\",\\\\n                \\\\\\\"👉🏻\\\\\\\",\\\\n                \\\\\\\"👉🏼\\\\\\\",\\\\n                \\\\\\\"👉🏽\\\\\\\",\\\\n                \\\\\\\"👉🏾\\\\\\\",\\\\n                \\\\\\\"👉🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👆\\\\\\\",\\\\n                \\\\\\\"👆🏻\\\\\\\",\\\\n                \\\\\\\"👆🏼\\\\\\\",\\\\n                \\\\\\\"👆🏽\\\\\\\",\\\\n                \\\\\\\"👆🏾\\\\\\\",\\\\n                \\\\\\\"👆🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👇\\\\\\\",\\\\n                \\\\\\\"👇🏻\\\\\\\",\\\\n                \\\\\\\"👇🏼\\\\\\\",\\\\n                \\\\\\\"👇🏽\\\\\\\",\\\\n                \\\\\\\"👇🏾\\\\\\\",\\\\n                \\\\\\\"👇🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☝\\\\\\\",\\\\n                \\\\\\\"☝🏻\\\\\\\",\\\\n                \\\\\\\"☝🏼\\\\\\\",\\\\n                \\\\\\\"☝🏽\\\\\\\",\\\\n                \\\\\\\"☝🏾\\\\\\\",\\\\n                \\\\\\\"☝🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✋\\\\\\\",\\\\n                \\\\\\\"✋🏻\\\\\\\",\\\\n                \\\\\\\"✋🏼\\\\\\\",\\\\n                \\\\\\\"✋🏽\\\\\\\",\\\\n                \\\\\\\"✋🏾\\\\\\\",\\\\n                \\\\\\\"✋🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤚\\\\\\\",\\\\n                \\\\\\\"🤚🏻\\\\\\\",\\\\n                \\\\\\\"🤚🏼\\\\\\\",\\\\n                \\\\\\\"🤚🏽\\\\\\\",\\\\n                \\\\\\\"🤚🏾\\\\\\\",\\\\n                \\\\\\\"🤚🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖐\\\\\\\",\\\\n                \\\\\\\"🖐🏻\\\\\\\",\\\\n                \\\\\\\"🖐🏼\\\\\\\",\\\\n                \\\\\\\"🖐🏽\\\\\\\",\\\\n                \\\\\\\"🖐🏾\\\\\\\",\\\\n                \\\\\\\"🖐🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖖\\\\\\\",\\\\n                \\\\\\\"🖖🏻\\\\\\\",\\\\n                \\\\\\\"🖖🏼\\\\\\\",\\\\n                \\\\\\\"🖖🏽\\\\\\\",\\\\n                \\\\\\\"🖖🏾\\\\\\\",\\\\n                \\\\\\\"🖖🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👋\\\\\\\",\\\\n                \\\\\\\"👋🏻\\\\\\\",\\\\n                \\\\\\\"👋🏼\\\\\\\",\\\\n                \\\\\\\"👋🏽\\\\\\\",\\\\n                \\\\\\\"👋🏾\\\\\\\",\\\\n                \\\\\\\"👋🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤙\\\\\\\",\\\\n                \\\\\\\"🤙🏻\\\\\\\",\\\\n                \\\\\\\"🤙🏼\\\\\\\",\\\\n                \\\\\\\"🤙🏽\\\\\\\",\\\\n                \\\\\\\"🤙🏾\\\\\\\",\\\\n                \\\\\\\"🤙🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💪\\\\\\\",\\\\n                \\\\\\\"💪🏻\\\\\\\",\\\\n                \\\\\\\"💪🏼\\\\\\\",\\\\n                \\\\\\\"💪🏽\\\\\\\",\\\\n                \\\\\\\"💪🏾\\\\\\\",\\\\n                \\\\\\\"💪🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖕\\\\\\\",\\\\n                \\\\\\\"🖕🏻\\\\\\\",\\\\n                \\\\\\\"🖕🏼\\\\\\\",\\\\n                \\\\\\\"🖕🏽\\\\\\\",\\\\n                \\\\\\\"🖕🏾\\\\\\\",\\\\n                \\\\\\\"🖕🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✍\\\\\\\",\\\\n                \\\\\\\"✍🏻\\\\\\\",\\\\n                \\\\\\\"✍🏼\\\\\\\",\\\\n                \\\\\\\"✍🏽\\\\\\\",\\\\n                \\\\\\\"✍🏾\\\\\\\",\\\\n                \\\\\\\"✍🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙏\\\\\\\",\\\\n                \\\\\\\"🙏🏻\\\\\\\",\\\\n                \\\\\\\"🙏🏼\\\\\\\",\\\\n                \\\\\\\"🙏🏽\\\\\\\",\\\\n                \\\\\\\"🙏🏾\\\\\\\",\\\\n                \\\\\\\"🙏🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👂\\\\\\\",\\\\n                \\\\\\\"👂🏻\\\\\\\",\\\\n                \\\\\\\"👂🏼\\\\\\\",\\\\n                \\\\\\\"👂🏽\\\\\\\",\\\\n                \\\\\\\"👂🏾\\\\\\\",\\\\n                \\\\\\\"👂🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👃\\\\\\\",\\\\n                \\\\\\\"👃🏻\\\\\\\",\\\\n                \\\\\\\"👃🏼\\\\\\\",\\\\n                \\\\\\\"👃🏽\\\\\\\",\\\\n                \\\\\\\"👃🏾\\\\\\\",\\\\n                \\\\\\\"👃🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👶\\\\\\\",\\\\n                \\\\\\\"👶🏻\\\\\\\",\\\\n                \\\\\\\"👶🏼\\\\\\\",\\\\n                \\\\\\\"👶🏽\\\\\\\",\\\\n                \\\\\\\"👶🏾\\\\\\\",\\\\n                \\\\\\\"👶🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👧\\\\\\\",\\\\n                \\\\\\\"👧🏻\\\\\\\",\\\\n                \\\\\\\"👧🏼\\\\\\\",\\\\n                \\\\\\\"👧🏽\\\\\\\",\\\\n                \\\\\\\"👧🏾\\\\\\\",\\\\n                \\\\\\\"👧🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧒\\\\\\\",\\\\n                \\\\\\\"🧒🏻\\\\\\\",\\\\n                \\\\\\\"🧒🏼\\\\\\\",\\\\n                \\\\\\\"🧒🏽\\\\\\\",\\\\n                \\\\\\\"🧒🏾\\\\\\\",\\\\n                \\\\\\\"🧒🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👦\\\\\\\",\\\\n                \\\\\\\"👦🏻\\\\\\\",\\\\n                \\\\\\\"👦🏼\\\\\\\",\\\\n                \\\\\\\"👦🏽\\\\\\\",\\\\n                \\\\\\\"👦🏾\\\\\\\",\\\\n                \\\\\\\"👦🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩\\\\\\\",\\\\n                \\\\\\\"👩🏻\\\\\\\",\\\\n                \\\\\\\"👩🏼\\\\\\\",\\\\n                \\\\\\\"👩🏽\\\\\\\",\\\\n                \\\\\\\"👩🏾\\\\\\\",\\\\n                \\\\\\\"👩🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧑\\\\\\\",\\\\n                \\\\\\\"🧑🏻\\\\\\\",\\\\n                \\\\\\\"🧑🏼\\\\\\\",\\\\n                \\\\\\\"🧑🏽\\\\\\\",\\\\n                \\\\\\\"🧑🏾\\\\\\\",\\\\n                \\\\\\\"🧑🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨\\\\\\\",\\\\n                \\\\\\\"👨🏻\\\\\\\",\\\\n                \\\\\\\"👨🏼\\\\\\\",\\\\n                \\\\\\\"👨🏽\\\\\\\",\\\\n                \\\\\\\"👨🏾\\\\\\\",\\\\n                \\\\\\\"👨🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👱‍♀️\\\\\\\",\\\\n                \\\\\\\"👱🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"👱🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"👱🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"👱🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"👱🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👱\\\\\\\",\\\\n                \\\\\\\"👱🏻\\\\\\\",\\\\n                \\\\\\\"👱🏼\\\\\\\",\\\\n                \\\\\\\"👱🏽\\\\\\\",\\\\n                \\\\\\\"👱🏾\\\\\\\",\\\\n                \\\\\\\"👱🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧔\\\\\\\",\\\\n                \\\\\\\"🧔🏻\\\\\\\",\\\\n                \\\\\\\"🧔🏼\\\\\\\",\\\\n                \\\\\\\"🧔🏽\\\\\\\",\\\\n                \\\\\\\"🧔🏾\\\\\\\",\\\\n                \\\\\\\"🧔🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👵\\\\\\\",\\\\n                \\\\\\\"👵🏻\\\\\\\",\\\\n                \\\\\\\"👵🏼\\\\\\\",\\\\n                \\\\\\\"👵🏽\\\\\\\",\\\\n                \\\\\\\"👵🏾\\\\\\\",\\\\n                \\\\\\\"👵🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧓\\\\\\\",\\\\n                \\\\\\\"🧓🏻\\\\\\\",\\\\n                \\\\\\\"🧓🏼\\\\\\\",\\\\n                \\\\\\\"🧓🏽\\\\\\\",\\\\n                \\\\\\\"🧓🏾\\\\\\\",\\\\n                \\\\\\\"🧓🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👴\\\\\\\",\\\\n                \\\\\\\"👴🏻\\\\\\\",\\\\n                \\\\\\\"👴🏼\\\\\\\",\\\\n                \\\\\\\"👴🏽\\\\\\\",\\\\n                \\\\\\\"👴🏾\\\\\\\",\\\\n                \\\\\\\"👴🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👲\\\\\\\",\\\\n                \\\\\\\"👲🏻\\\\\\\",\\\\n                \\\\\\\"👲🏼\\\\\\\",\\\\n                \\\\\\\"👲🏽\\\\\\\",\\\\n                \\\\\\\"👲🏾\\\\\\\",\\\\n                \\\\\\\"👲🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👳‍♀️\\\\\\\",\\\\n                \\\\\\\"👳🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"👳🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"👳🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"👳🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"👳🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👳️\\\\\\\",\\\\n                \\\\\\\"👳🏻\\\\\\\",\\\\n                \\\\\\\"👳🏼️\\\\\\\",\\\\n                \\\\\\\"👳🏽️\\\\\\\",\\\\n                \\\\\\\"👳🏾️\\\\\\\",\\\\n                \\\\\\\"👳🏿️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧕\\\\\\\",\\\\n                \\\\\\\"🧕🏻\\\\\\\",\\\\n                \\\\\\\"🧕🏼\\\\\\\",\\\\n                \\\\\\\"🧕🏽\\\\\\\",\\\\n                \\\\\\\"🧕🏾\\\\\\\",\\\\n                \\\\\\\"🧕🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👮‍♀️\\\\\\\",\\\\n                \\\\\\\"👮🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"👮🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"👮🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"👮🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"👮🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👮\\\\\\\",\\\\n                \\\\\\\"👮🏻\\\\\\\",\\\\n                \\\\\\\"👮🏼\\\\\\\",\\\\n                \\\\\\\"👮🏽\\\\\\\",\\\\n                \\\\\\\"👮🏾\\\\\\\",\\\\n                \\\\\\\"👮🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👷‍♀️\\\\\\\",\\\\n                \\\\\\\"👷🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"👷🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"👷🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"👷🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"👷🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👷\\\\\\\",\\\\n                \\\\\\\"👷🏻\\\\\\\",\\\\n                \\\\\\\"👷🏼\\\\\\\",\\\\n                \\\\\\\"👷🏽\\\\\\\",\\\\n                \\\\\\\"👷🏾\\\\\\\",\\\\n                \\\\\\\"👷🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💂‍♀️\\\\\\\",\\\\n                \\\\\\\"💂🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"💂🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"💂🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"💂🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"💂🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💂\\\\\\\",\\\\n                \\\\\\\"💂🏻\\\\\\\",\\\\n                \\\\\\\"💂🏼\\\\\\\",\\\\n                \\\\\\\"💂🏽\\\\\\\",\\\\n                \\\\\\\"💂🏾\\\\\\\",\\\\n                \\\\\\\"💂🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕵️‍♀️\\\\\\\",\\\\n                \\\\\\\"🕵🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🕵🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🕵🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🕵🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🕵🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕵\\\\\\\",\\\\n                \\\\\\\"🕵🏻\\\\\\\",\\\\n                \\\\\\\"🕵🏼\\\\\\\",\\\\n                \\\\\\\"🕵🏽\\\\\\\",\\\\n                \\\\\\\"🕵🏾\\\\\\\",\\\\n                \\\\\\\"🕵🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍⚕️\\\\\\\",\\\\n                \\\\\\\"👩🏻‍⚕️\\\\\\\",\\\\n                \\\\\\\"👩🏼‍⚕️\\\\\\\",\\\\n                \\\\\\\"👩🏽‍⚕️\\\\\\\",\\\\n                \\\\\\\"👩🏾‍⚕️\\\\\\\",\\\\n                \\\\\\\"👩🏿‍⚕️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍⚕️\\\\\\\",\\\\n                \\\\\\\"👨🏻‍⚕️\\\\\\\",\\\\n                \\\\\\\"👨🏼‍⚕️\\\\\\\",\\\\n                \\\\\\\"👨🏽‍⚕️\\\\\\\",\\\\n                \\\\\\\"👨🏾‍⚕️\\\\\\\",\\\\n                \\\\\\\"👨🏿‍⚕️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🌾\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🌾\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🌾\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🌾\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🌾\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🌾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🌾\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🌾\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🌾\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🌾\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🌾\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🌾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🍳\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🍳\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🍳\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🍳\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🍳\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🍳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🍳\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🍳\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🍳\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🍳\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🍳\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🍳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🎓\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🎓\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🎓\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🎓\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🎓\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🎓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🎓\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🎓\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🎓\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🎓\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🎓\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🎓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🎤\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🎤\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🎤\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🎤\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🎤\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🎤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🎤\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🎤\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🎤\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🎤\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🎤\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🎤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🏫\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🏫\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🏫\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🏫\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🏫\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🏫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🏫\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🏫\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🏫\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🏫\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🏫\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🏫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🏭\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🏭\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🏭\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🏭\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🏭\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🏭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🏭\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🏭\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🏭\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🏭\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🏭\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🏭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍💻\\\\\\\",\\\\n                \\\\\\\"👩🏻‍💻\\\\\\\",\\\\n                \\\\\\\"👩🏼‍💻\\\\\\\",\\\\n                \\\\\\\"👩🏽‍💻\\\\\\\",\\\\n                \\\\\\\"👩🏾‍💻\\\\\\\",\\\\n                \\\\\\\"👩🏿‍💻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍💻\\\\\\\",\\\\n                \\\\\\\"👨🏻‍💻\\\\\\\",\\\\n                \\\\\\\"👨🏼‍💻\\\\\\\",\\\\n                \\\\\\\"👨🏽‍💻\\\\\\\",\\\\n                \\\\\\\"👨🏾‍💻\\\\\\\",\\\\n                \\\\\\\"👨🏿‍💻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍💼\\\\\\\",\\\\n                \\\\\\\"👩🏻‍💼\\\\\\\",\\\\n                \\\\\\\"👩🏼‍💼\\\\\\\",\\\\n                \\\\\\\"👩🏽‍💼\\\\\\\",\\\\n                \\\\\\\"👩🏾‍💼\\\\\\\",\\\\n                \\\\\\\"👩🏿‍💼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍💼\\\\\\\",\\\\n                \\\\\\\"👨🏻‍💼\\\\\\\",\\\\n                \\\\\\\"👨🏼‍💼\\\\\\\",\\\\n                \\\\\\\"👨🏽‍💼\\\\\\\",\\\\n                \\\\\\\"👨🏾‍💼\\\\\\\",\\\\n                \\\\\\\"👨🏿‍💼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🔧\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🔧\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🔧\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🔧\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🔧\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🔧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🔧\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🔧\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🔧\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🔧\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🔧\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🔧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🔬\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🔬\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🔬\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🔬\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🔬\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🔬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🔬\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🔬\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🔬\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🔬\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🔬\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🔬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🎨\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🎨\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🎨\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🎨\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🎨\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🎨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🎨\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🎨\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🎨\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🎨\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🎨\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🎨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🚒\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🚒\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🚒\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🚒\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🚒\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🚒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🚒\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🚒\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🚒\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🚒\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🚒\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🚒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍✈️\\\\\\\",\\\\n                \\\\\\\"👩🏻‍✈️\\\\\\\",\\\\n                \\\\\\\"👩🏼‍✈️\\\\\\\",\\\\n                \\\\\\\"👩🏽‍✈️\\\\\\\",\\\\n                \\\\\\\"👩🏾‍✈️\\\\\\\",\\\\n                \\\\\\\"👩🏿‍✈️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍✈️\\\\\\\",\\\\n                \\\\\\\"👨🏻‍✈️\\\\\\\",\\\\n                \\\\\\\"👨🏼‍✈️\\\\\\\",\\\\n                \\\\\\\"👨🏽‍✈️\\\\\\\",\\\\n                \\\\\\\"👨🏾‍✈️\\\\\\\",\\\\n                \\\\\\\"👨🏿‍✈️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🚀\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🚀\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🚀\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🚀\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🚀\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🚀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🚀\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🚀\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🚀\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🚀\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🚀\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🚀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍⚖️\\\\\\\",\\\\n                \\\\\\\"👩🏻‍⚖️\\\\\\\",\\\\n                \\\\\\\"👩🏼‍⚖️\\\\\\\",\\\\n                \\\\\\\"👩🏽‍⚖️\\\\\\\",\\\\n                \\\\\\\"👩🏾‍⚖️\\\\\\\",\\\\n                \\\\\\\"👩🏿‍⚖️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍⚖️\\\\\\\",\\\\n                \\\\\\\"👨🏻‍⚖️\\\\\\\",\\\\n                \\\\\\\"👨🏼‍⚖️\\\\\\\",\\\\n                \\\\\\\"👨🏽‍⚖️\\\\\\\",\\\\n                \\\\\\\"👨🏾‍⚖️\\\\\\\",\\\\n                \\\\\\\"👨🏿‍⚖️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👰\\\\\\\",\\\\n                \\\\\\\"👰🏻\\\\\\\",\\\\n                \\\\\\\"👰🏼\\\\\\\",\\\\n                \\\\\\\"👰🏽\\\\\\\",\\\\n                \\\\\\\"👰🏾\\\\\\\",\\\\n                \\\\\\\"👰🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤵\\\\\\\",\\\\n                \\\\\\\"🤵🏻\\\\\\\",\\\\n                \\\\\\\"🤵🏼\\\\\\\",\\\\n                \\\\\\\"🤵🏽\\\\\\\",\\\\n                \\\\\\\"🤵🏾\\\\\\\",\\\\n                \\\\\\\"🤵🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👸\\\\\\\",\\\\n                \\\\\\\"👸🏻\\\\\\\",\\\\n                \\\\\\\"👸🏼\\\\\\\",\\\\n                \\\\\\\"👸🏽\\\\\\\",\\\\n                \\\\\\\"👸🏾\\\\\\\",\\\\n                \\\\\\\"👸🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤴\\\\\\\",\\\\n                \\\\\\\"🤴🏻\\\\\\\",\\\\n                \\\\\\\"🤴🏼\\\\\\\",\\\\n                \\\\\\\"🤴🏽\\\\\\\",\\\\n                \\\\\\\"🤴🏾\\\\\\\",\\\\n                \\\\\\\"🤴🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤶\\\\\\\",\\\\n                \\\\\\\"🤶🏻\\\\\\\",\\\\n                \\\\\\\"🤶🏼\\\\\\\",\\\\n                \\\\\\\"🤶🏽\\\\\\\",\\\\n                \\\\\\\"🤶🏾\\\\\\\",\\\\n                \\\\\\\"🤶🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎅\\\\\\\",\\\\n                \\\\\\\"🎅🏻\\\\\\\",\\\\n                \\\\\\\"🎅🏼\\\\\\\",\\\\n                \\\\\\\"🎅🏽\\\\\\\",\\\\n                \\\\\\\"🎅🏾\\\\\\\",\\\\n                \\\\\\\"🎅🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧙‍♀️\\\\\\\",\\\\n                \\\\\\\"🧙🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧙🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧙🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧙🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧙🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧙‍♂️\\\\\\\",\\\\n                \\\\\\\"🧙🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧙🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧙🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧙🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧙🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧝‍♀️\\\\\\\",\\\\n                \\\\\\\"🧝🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧝🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧝🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧝🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧝🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧝‍♂️\\\\\\\",\\\\n                \\\\\\\"🧝🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧝🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧝🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧝🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧝🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧛‍♀️\\\\\\\",\\\\n                \\\\\\\"🧛🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧛🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧛🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧛🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧛🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧛‍♂️\\\\\\\",\\\\n                \\\\\\\"🧛🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧛🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧛🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧛🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧛🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧟‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧟‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧞‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧞‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧜‍♀️\\\\\\\",\\\\n                \\\\\\\"🧜🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧜🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧜🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧜🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧜🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧜‍♂️\\\\\\\",\\\\n                \\\\\\\"🧜🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧜🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧜🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧜🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧜🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧚‍♀️\\\\\\\",\\\\n                \\\\\\\"🧚🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧚🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧚🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧚🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧚🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧚‍♂️\\\\\\\",\\\\n                \\\\\\\"🧚🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧚🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧚🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧚🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧚🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👼\\\\\\\",\\\\n                \\\\\\\"👼🏻\\\\\\\",\\\\n                \\\\\\\"👼🏼\\\\\\\",\\\\n                \\\\\\\"👼🏽\\\\\\\",\\\\n                \\\\\\\"👼🏾\\\\\\\",\\\\n                \\\\\\\"👼🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤰\\\\\\\",\\\\n                \\\\\\\"🤰🏻\\\\\\\",\\\\n                \\\\\\\"🤰🏼\\\\\\\",\\\\n                \\\\\\\"🤰🏽\\\\\\\",\\\\n                \\\\\\\"🤰🏾\\\\\\\",\\\\n                \\\\\\\"🤰🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤱\\\\\\\",\\\\n                \\\\\\\"🤱🏻\\\\\\\",\\\\n                \\\\\\\"🤱🏼\\\\\\\",\\\\n                \\\\\\\"🤱🏽\\\\\\\",\\\\n                \\\\\\\"🤱🏾\\\\\\\",\\\\n                \\\\\\\"🤱🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙇‍♀️\\\\\\\",\\\\n                \\\\\\\"🙇🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🙇🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🙇🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🙇🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🙇🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙇\\\\\\\",\\\\n                \\\\\\\"🙇🏻\\\\\\\",\\\\n                \\\\\\\"🙇🏼\\\\\\\",\\\\n                \\\\\\\"🙇🏽\\\\\\\",\\\\n                \\\\\\\"🙇🏾\\\\\\\",\\\\n                \\\\\\\"🙇🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💁\\\\\\\",\\\\n                \\\\\\\"💁🏻\\\\\\\",\\\\n                \\\\\\\"💁🏼\\\\\\\",\\\\n                \\\\\\\"💁🏽\\\\\\\",\\\\n                \\\\\\\"💁🏾\\\\\\\",\\\\n                \\\\\\\"💁🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💁‍♂️\\\\\\\",\\\\n                \\\\\\\"💁🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"💁🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"💁🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"💁🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"💁🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙅\\\\\\\",\\\\n                \\\\\\\"🙅🏻\\\\\\\",\\\\n                \\\\\\\"🙅🏼\\\\\\\",\\\\n                \\\\\\\"🙅🏽\\\\\\\",\\\\n                \\\\\\\"🙅🏾\\\\\\\",\\\\n                \\\\\\\"🙅🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙅‍♂️\\\\\\\",\\\\n                \\\\\\\"🙅🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🙅🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🙅🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🙅🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🙅🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙆\\\\\\\",\\\\n                \\\\\\\"🙆🏻\\\\\\\",\\\\n                \\\\\\\"🙆🏼\\\\\\\",\\\\n                \\\\\\\"🙆🏽\\\\\\\",\\\\n                \\\\\\\"🙆🏾\\\\\\\",\\\\n                \\\\\\\"🙆🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙆‍♂️\\\\\\\",\\\\n                \\\\\\\"🙆🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🙆🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🙆🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🙆🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🙆🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙋\\\\\\\",\\\\n                \\\\\\\"🙋🏻\\\\\\\",\\\\n                \\\\\\\"🙋🏼\\\\\\\",\\\\n                \\\\\\\"🙋🏽\\\\\\\",\\\\n                \\\\\\\"🙋🏾\\\\\\\",\\\\n                \\\\\\\"🙋🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙋‍♂️\\\\\\\",\\\\n                \\\\\\\"🙋🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🙋🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🙋🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🙋🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🙋🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤦‍♀️\\\\\\\",\\\\n                \\\\\\\"🤦🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🤦🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🤦🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🤦🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤦🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤦‍♂️\\\\\\\",\\\\n                \\\\\\\"🤦🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🤦🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🤦🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤦🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤦🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤷\\\\\\\",\\\\n                \\\\\\\"🤷🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🤷🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🤷🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🤷🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤷🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤷‍♂️\\\\\\\",\\\\n                \\\\\\\"🤷🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🤷🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🤷🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤷🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤷🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙎\\\\\\\",\\\\n                \\\\\\\"🙎🏻\\\\\\\",\\\\n                \\\\\\\"🙎🏼\\\\\\\",\\\\n                \\\\\\\"🙎🏽\\\\\\\",\\\\n                \\\\\\\"🙎🏾\\\\\\\",\\\\n                \\\\\\\"🙎🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙎‍♂️\\\\\\\",\\\\n                \\\\\\\"🙎🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🙎🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🙎🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🙎🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🙎🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙍\\\\\\\",\\\\n                \\\\\\\"🙍🏻\\\\\\\",\\\\n                \\\\\\\"🙍🏼\\\\\\\",\\\\n                \\\\\\\"🙍🏽\\\\\\\",\\\\n                \\\\\\\"🙍🏾\\\\\\\",\\\\n                \\\\\\\"🙍🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙍‍♂️\\\\\\\",\\\\n                \\\\\\\"🙍🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🙍🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🙍🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🙍🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🙍🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💇\\\\\\\",\\\\n                \\\\\\\"💇🏻\\\\\\\",\\\\n                \\\\\\\"💇🏼\\\\\\\",\\\\n                \\\\\\\"💇🏽\\\\\\\",\\\\n                \\\\\\\"💇🏾\\\\\\\",\\\\n                \\\\\\\"💇🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💇‍♂️\\\\\\\",\\\\n                \\\\\\\"💇🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"💇🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"💇🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"💇🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"💇🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💆\\\\\\\",\\\\n                \\\\\\\"💆🏻\\\\\\\",\\\\n                \\\\\\\"💆🏼\\\\\\\",\\\\n                \\\\\\\"💆🏽\\\\\\\",\\\\n                \\\\\\\"💆🏾\\\\\\\",\\\\n                \\\\\\\"💆🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💆‍♂️\\\\\\\",\\\\n                \\\\\\\"💆🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"💆🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"💆🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"💆🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"💆🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧖‍♀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧖‍♂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💅\\\\\\\",\\\\n                \\\\\\\"💅🏻\\\\\\\",\\\\n                \\\\\\\"💅🏼\\\\\\\",\\\\n                \\\\\\\"💅🏽\\\\\\\",\\\\n                \\\\\\\"💅🏾\\\\\\\",\\\\n                \\\\\\\"💅🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤳\\\\\\\",\\\\n                \\\\\\\"🤳🏻\\\\\\\",\\\\n                \\\\\\\"🤳🏼\\\\\\\",\\\\n                \\\\\\\"🤳🏽\\\\\\\",\\\\n                \\\\\\\"🤳🏾\\\\\\\",\\\\n                \\\\\\\"🤳🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕴\\\\\\\",\\\\n                \\\\\\\"🕴🏻\\\\\\\",\\\\n                \\\\\\\"🕴🏼\\\\\\\",\\\\n                \\\\\\\"🕴🏼\\\\\\\",\\\\n                \\\\\\\"🕴🏾\\\\\\\",\\\\n                \\\\\\\"🕴🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💃\\\\\\\",\\\\n                \\\\\\\"💃🏻\\\\\\\",\\\\n                \\\\\\\"💃🏼\\\\\\\",\\\\n                \\\\\\\"💃🏽\\\\\\\",\\\\n                \\\\\\\"💃🏾\\\\\\\",\\\\n                \\\\\\\"💃🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕺\\\\\\\",\\\\n                \\\\\\\"🕺🏻\\\\\\\",\\\\n                \\\\\\\"🕺🏼\\\\\\\",\\\\n                \\\\\\\"🕺🏽\\\\\\\",\\\\n                \\\\\\\"🕺🏾\\\\\\\",\\\\n                \\\\\\\"🕺🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👯‍♀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👯‍♂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚶‍♀️\\\\\\\",\\\\n                \\\\\\\"🚶🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🚶🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🚶🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🚶🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🚶🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚶\\\\\\\",\\\\n                \\\\\\\"🚶🏻\\\\\\\",\\\\n                \\\\\\\"🚶🏼\\\\\\\",\\\\n                \\\\\\\"🚶🏽\\\\\\\",\\\\n                \\\\\\\"🚶🏾\\\\\\\",\\\\n                \\\\\\\"🚶🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏃‍♀️\\\\\\\",\\\\n                \\\\\\\"🏃🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🏃🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🏃🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🏃🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🏃🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏃\\\\\\\",\\\\n                \\\\\\\"🏃🏻\\\\\\\",\\\\n                \\\\\\\"🏃🏼\\\\\\\",\\\\n                \\\\\\\"🏃🏽\\\\\\\",\\\\n                \\\\\\\"🏃🏾\\\\\\\",\\\\n                \\\\\\\"🏃🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍❤️‍👩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍❤️‍👨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍❤️‍💋‍👩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍❤️‍💋‍👨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👩‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👩‍👧‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👩‍👦‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👩‍👧‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👩‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👩‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👩‍👧‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👩‍👦‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👩‍👧‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👨‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👨‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👨‍👧‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👨‍👦‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👨‍👧‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👧‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👦‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👧‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👧‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👦‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👧‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌂\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"smileysAndPeople\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"🐶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☘️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⭐️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚡️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☄️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛅️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☁️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❄️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☃️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛄️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☔️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌫\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"animalsAndNature\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"🍏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☕️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥢\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"foodAndDrink\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"⚽️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚾️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛳️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏋️‍♀️\\\\\\\",\\\\n                \\\\\\\"🏋🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🏋🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🏋🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🏋🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🏋🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏋️‍♂️\\\\\\\",\\\\n                \\\\\\\"🏋🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🏋🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🏋🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🏋🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🏋🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤼‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤼‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤸‍♀️\\\\\\\",\\\\n                \\\\\\\"🤸🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🤸🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🤸🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🤸🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤸🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤸‍♂️\\\\\\\",\\\\n                \\\\\\\"🤸🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🤸🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🤸🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤸🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤸🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛹️‍♀️\\\\\\\",\\\\n                \\\\\\\"⛹🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"⛹🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"⛹🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"⛹🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"⛹🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛹️‍♂️\\\\\\\",\\\\n                \\\\\\\"⛹🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"⛹🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"⛹🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"⛹🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"⛹🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤺️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤾🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🤾🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🤾🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤾🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤾🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤾🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🤾🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🤾🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤾🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤾🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏌️‍♀️\\\\\\\",\\\\n                \\\\\\\"🏌🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🏌🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🏌🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🏌🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🏌🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏌️‍♂️\\\\\\\",\\\\n                \\\\\\\"🏌🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🏌🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🏌🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🏌🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🏌🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏇\\\\\\\",\\\\n                \\\\\\\"🏇🏻\\\\\\\",\\\\n                \\\\\\\"🏇🏼\\\\\\\",\\\\n                \\\\\\\"🏇🏽\\\\\\\",\\\\n                \\\\\\\"🏇🏾\\\\\\\",\\\\n                \\\\\\\"🏇🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧘‍♀️\\\\\\\",\\\\n                \\\\\\\"🧘🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧘🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧘🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧘🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧘🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧘‍♂️\\\\\\\",\\\\n                \\\\\\\"🧘🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧘🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧘🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧘🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧘🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏄‍♀️\\\\\\\",\\\\n                \\\\\\\"🏄🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🏄🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🏄🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🏄🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🏄🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏄‍♂️\\\\\\\",\\\\n                \\\\\\\"🏄🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🏄🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🏄🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🏄🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🏄🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏊‍♀️\\\\\\\",\\\\n                \\\\\\\"🏊🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🏊🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🏊🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🏊🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🏊🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏊‍♂️\\\\\\\",\\\\n                \\\\\\\"🏊🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🏊🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🏊🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🏊🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🏊🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤽‍♀️\\\\\\\",\\\\n                \\\\\\\"🤽🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🤽🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🤽🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🤽🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤽🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤽🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🤽🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🤽🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤽🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤽🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚣‍♀️\\\\\\\",\\\\n                \\\\\\\"🚣🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🚣🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🚣🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🚣🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🚣🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚣‍♂️\\\\\\\",\\\\n                \\\\\\\"🚣🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🚣🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🚣🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🚣🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🚣🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧗‍♀️\\\\\\\",\\\\n                \\\\\\\"🧗🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧗🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧗🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧗🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧗🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧗‍♂️\\\\\\\",\\\\n                \\\\\\\"🧗🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧗🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧗🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧗🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧗🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚵‍♀️\\\\\\\",\\\\n                \\\\\\\"🚵🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🚵🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🚵🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🚵🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🚵🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚵‍♂️\\\\\\\",\\\\n                \\\\\\\"🚵🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🚵🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🚵🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🚵🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🚵🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚴‍♀️\\\\\\\",\\\\n                \\\\\\\"🚴🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🚴🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🚴🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🚴🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🚴🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚴‍♂️\\\\\\\",\\\\n                \\\\\\\"🚴🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🚴🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🚴🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🚴🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🚴🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤹‍♀️\\\\\\\",\\\\n                \\\\\\\"🤹🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🤹🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🤹🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🤹🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤹🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤹‍♂️\\\\\\\",\\\\n                \\\\\\\"🤹🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🤹🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🤹🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤹🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤹🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎰\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"activity\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"🚗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✈️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛵️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚓️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛽️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛲️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛺️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛪️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌁\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"travelAndPlaces\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"⌚️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⌨️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☎️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⌛️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚖️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚙️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚔️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚰️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚱️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚗️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛀🏻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛀🏼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛀🏽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛀🏾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛀🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✉️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✒️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✏️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔓\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"objects\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"❤️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❣️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☮️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✝️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☪️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☸️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✡️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☯️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☦️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♈️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♉️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♊️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♋️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♌️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♍️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♎️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♏️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♐️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♑️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♒️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♓️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚛️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🉑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☢️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☣️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈚️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈷️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✴️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🉐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"㊙️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"㊗️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🅰️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🅱️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🅾️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⭕️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛔️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♨️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❗️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"‼️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⁉️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"〽️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚠️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚜️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♻️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈯️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❇️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✳️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"Ⓜ️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♿️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🅿️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"ℹ️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"0️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"1️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"2️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"3️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"4️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"5️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"6️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"7️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"8️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"9️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"#️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"*️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏏️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"▶️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"◀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"➡️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⬅️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⬆️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⬇️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↗️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↘️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↙️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↖️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↕️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↔️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↪️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↩️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⤴️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⤵️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"➕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"➖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"➗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✖️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"™️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"©️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"®️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"〰️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"➰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"➿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✔️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☑️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚪️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚫️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"▪️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"▫️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"◾️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"◽️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"◼️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"◻️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⬛️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⬜️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👁‍🗨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♠️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♣️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♥️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♦️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🃏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🀄️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕧\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"symbols\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"🏳️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏳️‍🌈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇩🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇭🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇩🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇩🇯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇩🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇩🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇫🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇫🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇫🇯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇫🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇫🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇩🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇭🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇭🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇭🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇭🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇯🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇯🇵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇯🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇯🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇽🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇾🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇫🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇴🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇶🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇷🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇷🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇷🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇷🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇼🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇷🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇿🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇺🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇺🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏴󠁧󠁢󠁥󠁮󠁧󠁿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏴󠁧󠁢󠁳󠁣󠁴󠁿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏴󠁧󠁢󠁷󠁬󠁳󠁿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇺🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇺🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇺🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇼🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇾🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇿🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇿🇼\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"flags\\\\\\\"\\\\n    }\\\\n]\\\\n\\\";\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_add\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid\\\">\\n                        <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                        <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                            <div class=\\\"select-auth-xmpp-server\\\">\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                                <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                    <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"sign_in_domain\\\">\\n                                </div>\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                                </div>\\n                            </div>\\n                            <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                                <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"input-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-error login-password-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-description\\\"></div>\\n                <div class=\\\"login-step-wrap hidden\\\">\\n                    <div class=\\\"login-step connecting-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                    <div class=\\\"login-step credentials-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"login-form-server-features hidden\\\">\\n            <div class=\\\"register-form-step-wrap\\\">\\n                <div class=\\\"register-form-step-header\\\"></div>\\n            </div>\\n            <div class=\\\"login-server-features-wrap\\\">\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"server-features-error\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main one-line hidden btn-finish-log-in\\\"></button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__dialog_change_password__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row login-form-field\\\">\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"jid\\\" type=\\\"text\\\" class=\\\"input-glow\\\" name=\\\"jid\\\" disabled readonly>\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"input-glow\\\" placeholder=\\\"{[print(xabber.getString('account_password'))]}\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-change\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"status_editor\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <li data-value=\\\"chat\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"chat\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"chat\\\"></span>\\n        </li>\\n        <li data-value=\\\"online\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"online\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"online\\\"></span>\\n        </li>\\n        <li data-value=\\\"away\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"away\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"away\\\"></span>\\n        </li>\\n        <li data-value=\\\"xa\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"xa\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"xa\\\"></span>\\n        </li>\\n        <li data-value=\\\"dnd\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"dnd\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"dnd\\\"></span>\\n        </li>\\n        <li data-value=\\\"offline\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"unavailable\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"offline\\\"></span>\\n        </li>\\n    </ul>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field status-message-wrap\\\">\\n                <span class=\\\"static-label\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_custom_status\\\"))]}</span>\\n                <input type=\\\"text\\\" class=\\\"status-message\\\">\\n                <i class=\\\"clear-input mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n            <div class=\\\"input-field checkbox-field no-padding\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in apply-to-all\\\" id=\\\"{{view.cid}}_apply_to_all\\\"/>\\n                <label for=\\\"{{view.cid}}_apply_to_all\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_apply_to_all\\\"))]}</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"client one-line\\\">{{client}}</div>\\n    <div class=\\\"device one-line\\\">{{device}}</div>\\n    <div class=\\\"ip-address\\\">{{ip}}</div>\\n    <div class=\\\"last-auth resource text-color-700\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>{[print(xabber.getString(\\\"account_state_connected\\\"))]}</div>\\n    {[ if (resource_obj) {]}\\n        <table class=\\\"token-resource-wrap hidden\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>\\n            <tbody>\\n            <tr class=\\\"info status-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n                <td>\\n                    <div class=\\\"value status-message one-line\\\">{{resource_obj.status}}</div>\\n                    <div class=\\\"status\\\" data-status=\\\"{{resource_obj.status}}\\\"></div>\\n                </td>\\n            </tr>\\n            <tr class=\\\"info resource-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n                <td class=\\\"value resource one-line\\\">{{resource_obj.resource}}</td>\\n            </tr>\\n            <tr class=\\\"info priority-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n                <td class=\\\"value priority\\\">{{resource_obj.priority}}</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n    {[}]}\\n    <div class=\\\"token-indicator\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{[print(xabber.getString(\\\"account_emoji_profile_image_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"emoji-profile-image\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar ground-color-green-100\\\" data-value=\\\"green\\\">\\n                <div class=\\\"chosen-emoji\\\" data-value=\\\"🐈\\\">🐈</div>\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"emoji-profile-colors\\\">\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-green-500 outline-color-green-500 chosen-background-color\\\" data-value=\\\"green\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-save\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n        <i class=\\\"close-modal mdi mdi-close mdi-24px\\\"></i>\\n    </div>\\n    <div class=\\\"emoji-picker-wrap no-select\\\">\\n\\n    </div>\\n</div>\\n\";","export default \"\\n{[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-tab{[if (i === 0){]} chosen-emoji-tab{[} else {]} hidden{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {[ for (var y = 0; y < tab.emojis.length; y++) { var emoji = tab.emojis[y] ]}\\n            <div class=\\\"emoji-picker-emoji\\\" data-value=\\\"{{emoji[0]}}\\\">\\n                <div>{{emoji[0]}}</div>\\n            </div>\\n        {[ } ]}\\n    </div>\\n{[ } ]}\\n<div class=\\\"emoji-picker-tabs\\\">\\n    {[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-bottom-tab-selector{[if (i === 0){]} chosen-emoji-selector{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {{tab.emojis[0][0]}}\\n    </div>\\n    {[ } ]}\\n</div>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n    <button class=\\\"btn-join-existing-chat btn-flat btn-dark btn-main\\\">join</button>\\n</div>\";","export default \"<div class=\\\"move-account-to-this droppable\\\"></div>\\n<div class=\\\"account-info-wrap\\\">\\n    <i class=\\\"drag-item drag-handle mdi mdi-28px mdi-drag-vertical\\\"></i>\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"text-info-wrap\\\">\\n        <div class=\\\"jid-wrap\\\">\\n            <div class=\\\"jid text-color-700 one-line\\\"></div>\\n        </div>\\n        <div class=\\\"conn-status one-line\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"sync-marker-wrap hidden\\\">\\n    <i class=\\\"sync-marker mdi mdi-20px mdi-cloud-check\\\"></i>\\n</div>\\n<div class=\\\"field clickable-field enabled-state switch normal\\\">\\n    <label class=\\\"field-value\\\">\\n        <input type=\\\"checkbox\\\">\\n        <span class=\\\"lever\\\"></span>\\n    </label>\\n</div>\\n\";","export default \"<div class=\\\"gallery-wrap\\\">\\n    <!--<svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>-->\\n    <div class=\\\"gallery-storage-wrap\\\">\\n        <div class=\\\"storage-usage\\\"></div>\\n        <div class=\\\"storage-progress-bar\\\">\\n            <div class=\\\"storage-progress-images\\\"></div>\\n            <div class=\\\"storage-progress-videos\\\"></div>\\n            <div class=\\\"storage-progress-voices\\\"></div>\\n            <div class=\\\"storage-progress-files\\\"></div>\\n        </div>\\n        <div class=\\\"storage-labels\\\">\\n            <div class=\\\"storage-label storage-label-images\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"images\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-videos\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-voices\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-files\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"files\\\"))]}</div></div>\\n        </div>\\n        <div class=\\\"storage-usages\\\">\\n            <div class=\\\"storage-category-usage storage-usage-images\\\">\\n                {[print(xabber.getString(\\\"images\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-videos\\\">\\n                {[print(xabber.getString(\\\"videos\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-voices\\\">\\n                {[print(xabber.getString(\\\"vcard_type_voice\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-files\\\">\\n                {[print(xabber.getString(\\\"files\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <ul class=\\\"tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n        <li data-value=\\\"avatars\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"list-managment-wrap\\\">\\n        <button class=\\\"btn-sorting dropdown-button btn-flat btn-main text-color-700 hover-ground-color-300\\\" data-activates=\\\"storage-file-sorting\\\">\\n            {[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}\\n        </button>\\n    </div>\\n    <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n        </div>\\n        <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n        </div>\\n    </ul>\\n    <div class=\\\"gallery-files zoom-gallery\\\">\\n    </div>\\n</div>\\n\\n\";","export default \"<div class=\\\"gallery-file{[if (file.is_avatar === 'True'){]} gallery-avatar{[}]}\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-file=\\\"{{file.file}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || file.media_type.includes('video'))){]}\\n        <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\" data-mfp-src=\\\"{{file.file}}\\\" src=\\\"{{file.thumbnail}}\\\" {[if (file.media_type && file.media_type.includes('image')){]}onerror=\\\"this.src = '{{file.file}}'\\\" {[}]}>\\n    {[} else {]}\\n        {[if (svg_icon == 'file-audio' && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n                <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n            </div>\\n            <div class=\\\"gallery-file-audio-container\\\">\\n            </div>\\n        {[} else {]}\\n            <div class=\\\"gallery-file-placeholder-background\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n                <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n            </div>\\n        {[}]}\\n        <div class=\\\"gallery-file-title one-line\\\">\\n            {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span> <span class=\\\"gallery-file-date\\\">{{file.created_at}}</span>\\n        </div>\\n        {[if (duration && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-voice-file-duration\\\">\\n                0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n            </div>\\n        {[}]}\\n    {[}]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{file.id}}-more\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul id=\\\"{{file.id}}-more\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n            <div class=\\\"property-variant btn-download\\\">\\n                {[print(xabber.getString(\\\"action_download\\\"))]}\\n            </div>\\n        </a>\\n        <div class=\\\"property-variant btn-delete\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete\\\"))]}</span>\\n        </div>\\n    </ul>\\n</div>\";","export default \"<svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"ic-jabber\\\"></svg>\\n<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message one-line\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"    <div class=\\\"left-column ground-color-900 noselect\\\">\\n        <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n            <!--<i title=\\\"Back to settings\\\" class=\\\"mdi mdi-arrow-left mdi-28px back-to-settings\\\"></i>-->\\n            <div class=\\\"picture-wrap\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                        <img/>\\n                        <input type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"status\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"name-wrap\\\">\\n                <div class=\\\"name\\\"></div>\\n            </div>\\n            <div class=\\\"status-wrap\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"connection\\\">\\n                <i class=\\\"mdi mdi-24px mdi-settings\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_connection_settings\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"vcard_edit\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-box\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"color-scheme\\\">\\n                <i class=\\\"mdi mdi-24px mdi-palette\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"color\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n                <i class=\\\"mdi mdi-24px mdi-chart-arc\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"blocklist-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-block-helper\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"blocked_contacts\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"groups-info\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"server-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-information\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_server_info\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab omemo-info\\\" data-block-name=\\\"omemo-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-security\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_settings_encryption\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"tokens\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"devices\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_settings_devices\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap ground-color-900\\\">\\n            <div class=\\\"settings-tab delete-account\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__button_quit_account\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n        <div class=\\\"buttons-wrap\\\">\\n            <button class=\\\"btn-block btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"settings_account__blocklist__button_block\\\"))]}</button>\\n            <button class=\\\"btn-deselect-blocked btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n        </div>\\n        <div class=\\\"btn-more media-gallery-button dropdown-button\\\" data-activates=\\\"storage-actions\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n            <div class=\\\"property-variant btn-delete-files-variants\\\" data-activates=\\\"storage-delete-files\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_delete_files\\\"))]}</span>\\n            </div>\\n        </ul>\\n        <ul id=\\\"storage-delete-files\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_15_days\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"30\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_30_days\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"60\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_60_days\\\"))]}</span>\\n            </div>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content details-panel\\\">\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_connection_settings\\\"))]}' class=\\\"settings-block-wrap connection\\\">\\n                <div class=\\\"connection-wrap\\\">\\n                    <div class=\\\"readonly-setting\\\">\\n                        <i class=\\\"details-icon mdi mdi-24px mdi-account\\\"></i>\\n                        <div class=\\\"setting-wrap account-name\\\">\\n                            <div class=\\\"value one-line\\\"></div>\\n                            <div class=\\\"label conn-status\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"change-password-container\\\">\\n                        <div class=\\\"change-password-fields\\\">\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_old_pass\\\"))]}' id=\\\"old_password\\\" type=\\\"password\\\" name=\\\"old_password\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_new_pass\\\"))]}' id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_confirm_pass\\\"))]}' id=\\\"password_confirm\\\" type=\\\"password\\\" name=\\\"password_confirm\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"buttons-wrap\\\">\\n                            <button class=\\\"btn-change btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_change_pass\\\"))]}</button>\\n                            <button class=\\\"btn-change-password btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_set_pass\\\"))]}</button>\\n                            <button class=\\\"btn-reconnect btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"settings_account__button_reconnect\\\"))]}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                <div class=\\\"color-scheme-wrap\\\">\\n                    <div class=\\\"account-color\\\">\\n                        <div class=\\\"field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                    <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                    <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                    <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                    <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                    <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                    <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                    <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                    <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                    <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                    <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                    <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                    <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                    <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                    <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                    <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                    <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                    <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap vcard\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_server_info_description\\\"))]}' class=\\\"settings-block-wrap server-info\\\">\\n                <div class=\\\"capabilities-wrap\\\">\\n                    <div class=\\\"capabilities\\\">\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"blocked_contacts\\\"))]}' class=\\\"settings-block-wrap blocklist-info\\\">\\n                <div class=\\\"blocklist-wrap\\\">\\n                    <div class=\\\"blocked-items\\\">\\n                        <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                        <div class=\\\"blocklist-tabs-wrap\\\">\\n                            <ul class=\\\"tabs\\\">\\n                                <li class=\\\"blocked-item contacts-item hidden\\\" data-tab-name=\\\"blocked-contacts-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__contacts\\\"))]}</a>\\n                                </li>\\n                                <li class=\\\"blocked-item domains-item hidden\\\" data-tab-name=\\\"blocked-domains-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__domains\\\"))]}</a>\\n                                </li>\\n                                <li class=\\\"blocked-item invitations-item hidden\\\" data-tab-name=\\\"blocked-invitations-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__invitations\\\"))]}</a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-contacts-wrap hidden\\\" data-tab-name=\\\"contacts-item\\\">\\n                            <div class=\\\"blocked-contacts blocked-list\\\"/>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-domains-wrap hidden\\\" data-tab-name=\\\"domains-item\\\">\\n                            <div class=\\\"blocked-domains blocked-list\\\"/>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-invitations-wrap hidden\\\" data-tab-name=\\\"invitations-item\\\">\\n                            <div class=\\\"blocked-invitations blocked-list\\\"/>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap groups-info\\\">\\n                <div class=\\\"groups-wrap\\\">\\n                    <div class=\\\"groups\\\">\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_settings_devices\\\"))]}' class=\\\"settings-block-wrap tokens\\\">\\n                <div class=\\\"tokens-wrap\\\">\\n                    <div class=\\\"current-token-wrap\\\">\\n                        <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                        <div class=\\\"buttons-wrap\\\">\\n                            <p class=\\\"btn-revoke-all-tokens hover-text-color-500 text-color-700\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"all-sessions-wrap\\\">\\n                        <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_settings_encryption\\\"))]}' class=\\\"settings-block-wrap omemo-info\\\">\\n                <div class=\\\"omemo-settings-wrap\\\">\\n                    <div class=\\\"settings\\\">\\n                        <div class=\\\"setting-wrap omemo-enable\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                            <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap send-chat-states\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                            <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap manage-devices\\\">\\n                            <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</button>\\n                        </div>\\n                        <div class=\\\"setting-wrap purge-keys\\\">\\n                            <button class=\\\"btn-purge-keys btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"client one-line\\\">{{client}}</div>\\n    <div class=\\\"device one-line\\\">{{device}}</div>\\n    <div class=\\\"ip-address\\\">{{ip}}</div>\\n    {[ if (resource_obj) {]}\\n    <div class=\\\"last-auth resource\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>{[print(xabber.getString(\\\"account_state_connected\\\"))]}</div>\\n        <table class=\\\"token-resource-wrap hidden\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>\\n            <tbody>\\n            <tr class=\\\"info status-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n                <td>\\n                    <div class=\\\"value status-message one-line\\\">{{resource_obj.status}}</div>\\n                    <div class=\\\"status\\\" data-status=\\\"{{resource_obj.status}}\\\"></div>\\n                </td>\\n            </tr>\\n            <tr class=\\\"info resource-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n                <td class=\\\"value resource one-line\\\">{{resource_obj.resource}}</td>\\n            </tr>\\n            <tr class=\\\"info priority-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n                <td class=\\\"value priority\\\">{{resource_obj.priority}}</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n    {[} else {]}\\n    <div class=\\\"last-auth\\\">{{last_auth}}</div>\\n    {[}]}\\n    <i class=\\\"btn-revoke-token mdi mdi-24px mdi-close\\\"></i>\\n</div>\";","export default \"<div class=\\\"border\\\"/>\\n<div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n    <div class=\\\"dropdown-button circle-avatar border-color ground-color-700 noselect\\\"/>\\n</div>\\n<div class=\\\"status\\\"/>\\n<i class=\\\"auth-failed mdi mdi-16px mdi-close\\\"></i>\\n<div class=\\\"account-actions-panel\\\">\\n    <div class=\\\"filter-chats\\\">\\n        <i class=\\\"mdi mdi-filter mdi-20px\\\"></i>\\n        <div class=\\\"text\\\">{[print(xabber.getString(\\\"account__toolbar_item__button_filter_chats\\\"))]}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"take_photo\\\"))]}</span>\\n    </div>\\n    <div class=\\\"webcam-profile-image-wrap\\\">\\n        <div class=\\\"camera\\\">\\n            <video class=\\\"webcam-video\\\">Video stream not available.</video>\\n        </div>\\n        <canvas id=\\\"canvas\\\" style=\\\"display: none;\\\">\\n        </canvas>\\n        <div class=\\\"output hidden\\\">\\n            <div class=\\\"webcam-photo-wrap\\\">\\n                <img class=\\\"webcam-photo\\\" alt=\\\"The screen capture will appear in this box.\\\">\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera-retake\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-take-photo\\\">{[print(xabber.getString(\\\"capture\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-save hidden\\\">{[print(xabber.getString(\\\"account_webcam_profile_image_btn_save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-intro\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n        <span class=\\\"client-description\\\">{{SHORT_CLIENT_DESCRIPTION}}</span>\\n    </div>\\n    <div class=\\\"login-buttons\\\">\\n        <div class=\\\"btn-flat btn-main btn-register-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</div>\\n        <div class=\\\"btn-flat btn-main btn-login-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_in\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-form xmpp-login-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back-menu mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-jid\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"dialog_jingle_message__message_connect\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field input-field-jid\\\">\\n                    <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                    <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                        <div class=\\\"select-auth-xmpp-server\\\">\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                            <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' value=\\\"111111\\\" name=\\\"sign_in_domain\\\">\\n                            </div>\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                            <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-error login-jid-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-error login-password-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-description\\\"></div>\\n            <div class=\\\"login-step-wrap hidden\\\">\\n                <div class=\\\"login-step connecting-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n                <div class=\\\"login-step credentials-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"login-form-server-features hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\"></div>\\n        </div>\\n        <div class=\\\"login-server-features-wrap\\\">\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"server-features-error\\\"></div>\\n    </div>\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-sign-up-instead\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-finish-log-in\\\"></button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n<div class=\\\"login-panel-form register-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_register_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-skip hidden\\\">{[print(xabber.getString(\\\"skip\\\"))]}</div>\\n    <div class=\\\"register-form-nickname\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_nickname\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_nickname\\\" placeholder='{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}' type=\\\"text\\\" name=\\\"register_nickname\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_nickname\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-jid hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_jid\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_jid\\\" placeholder='{[print(xabber.getString(\\\"hint_username\\\"))]}' type=\\\"text\\\" name=\\\"register_jid\\\">\\n                </div>\\n                <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                    <div class=\\\"select-xmpp-server\\\">\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                        <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                            <input id=\\\"new_account_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"register_domain\\\">\\n                        </div>\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                            <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                            <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                        <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_jid\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-password hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_password\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"register_password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_password\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-picture hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_avatar\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"avatar-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <div class=\\\"circle-avatar\\\">\\n                        <input id=\\\"register_picture\\\"  title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"circle-icon\\\">\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    {[if (xabber.url_params && xabber.url_params.rkey){]}\\n        <div class=\\\"login-form-url\\\">\\n            <i class=\\\"mdi login-form-url-icon mdi-link-variant\\\"></i>\\n            <div class=\\\"login-form-url-text\\\">\\n                {[print(xabber.getString(\\\"xmpp_login__registration_via_link\\\"))]}\\n            </div>\\n        </div>\\n    {[}]}\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-next\\\">{[print(xabber.getString(\\\"xaccount_next\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main btn-skip\\\">{[print(xabber.getString(\\\"xmpp_login__registration_skip\\\"))]}</button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal main-modal add-xabber-account-modal\\\">\\n    <div class=\\\"modal-content-wrap\\\">\\n        <div class=\\\"modal-header\\\">\\n            <span>{[print(xabber.getString(\\\"dialog_add_xabber_account__header\\\"))]}</span>\\n        </div>\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"row account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            {[if (constants.USE_SOCIAL_AUTH){]}\\n            <div class=\\\"row social-auth-wrap\\\">\\n                <div class=\\\"social-header\\\">\\n                    <div class=\\\"divider\\\"></div>\\n                    <div class=\\\"social-header-tip\\\">{[print(xabber.getString(\\\"social_sign_in\\\"))]}</div>\\n                </div>\\n                <div class=\\\"social-buttons\\\">\\n                    <div class=\\\"btn-social google-color\\\" data-provider=\\\"google\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-google-plus\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social facebook-color\\\" data-provider=\\\"facebook\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-facebook\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social twitter-color\\\" data-provider=\\\"twitter\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social xabber-color\\\" data-provider=\\\"email\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-at\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n            {[}]}\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-footer\\\">\\n    <div class=\\\"registration-footer\\\">\\n        <div class=\\\"registration-tip-wrap\\\">\\n            <span class=\\\"registration-tip\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__text_no_account\\\"))]}</span>\\n            <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/signup/\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-registration\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__button_registration\\\"))]}</a>\\n        </div>\\n    </div>\\n    <div class=\\\"footer-text clearfix\\\">{[print(xabber.getString(\\\"tutorial_description_6\\\"))]}</div>\\n</div>\\n\";","export default \"<div data-id=\\\"{{email_id}}\\\" data-email=\\\"{{email}}\\\" class=\\\"{[if (!verified){]}not-linked {[}]}social-linked-item-wrap email-linked\\\"><div style=\\\"background-color:{{color}}\\\" class=\\\"social-icon\\\">{[if (verified){]}<svg style=\\\"width:24px;height:24px\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#FFF\\\" d=\\\"M21,13.34C20.37,13.12 19.7,13 19,13A6,6 0 0,0 13,19C13,19.34 13.03,19.67 13.08,20H3A2,2 0 0,1 1,18V6C1,4.89 1.89,4 3,4H19A2,2 0 0,1 21,6V13.34M23.5,17L18.5,22L15,18.5L16.5,17L18.5,19L22,15.5L23.5,17M3,6V8L11,13L19,8V6L11,11L3,6Z\\\" />\\n</svg>{[} else {]}<i class=\\\"mdi mdi-24px mdi-email\\\"></i>{[}]}</div><div class=\\\"synced-info\\\"><div class=\\\"name one-line\\\">{{email}}</div><div class=\\\"verified-status one-line\\\">{[if (verified){print(xabber.getString(\\\"title_verified_email\\\"));}else{print(xabber.getString(\\\"title_unverified_email\\\"));}]}</div></div>{[if (!verified){]}<div class=\\\"btn-main btn-flat btn-verify-email\\\">{[print(xabber.getString(\\\"button_confirm\\\"))]}</div>{[}]}<div class=\\\"btn-main btn-flat btn-link btn-unlink\\\">{[print(xabber.getString(\\\"action_disconnect\\\"))]}</div></div>\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"xabber_account__dialog_sync__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"setting sync-all-wrap field-wrap\\\">\\n                <div class=\\\"field clickable-field switch normal\\\">\\n                    <span class=\\\"field-name\\\">{[print(xabber.getString(\\\"sync_all\\\"))]}</span>\\n                    <label class=\\\"field-value\\\">\\n                       <input type=\\\"checkbox\\\" class=\\\"sync-all\\\">\\n                       <span class=\\\"lever\\\"></span>\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"accounts-wrap\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-sync\\\">{[print(xabber.getString(\\\"xabber_account__dialog_sync__button_sync\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-info-wrap\\\">\\n        <i class=\\\"sync-icon mdi mdi-24px\\\" data-mdiclass=\\\"\\\"></i>\\n        <div class=\\\"text-info-wrap\\\">\\n            <div class=\\\"name text-color-grey-900 one-line\\\">{{jid}}</div>\\n            <div class=\\\"sync-tip text-color-grey-500 one-line\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"input-field checkbox-field sync-one-wrap no-padding\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in sync-one\\\" id=\\\"{{view.cid}}_sync_{{jid}}\\\"/>\\n        <label for=\\\"{{view.cid}}_sync_{{jid}}\\\"></label>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"xabber-account-content-wrap\\\">\\n    <div class=\\\"account-info-wrap\\\">\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <div class=\\\"name-wrap\\\">\\n                <div class=\\\"name text-color-red-700 one-line\\\"></div>\\n            </div>\\n            <div class=\\\"last-sync-info\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"sync-wrap\\\">\\n        <div class=\\\"btn-sync\\\">\\n            <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-flat btn-main btn-login\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"account-action-more\\\">\\n            <i class=\\\"mdi mdi-20px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"account-action-more\\\" class=\\\"xabber-account-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-sync btn-sync-settings\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"xabber_account__dialog_sync__button_sync\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-password\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"button_set_pass\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-logout\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n<div class=\\\"xabber-account-tip\\\">{[print(xabber.getString(\\\"tutorial_description_6\\\"))]}</div>\\n<div class=\\\"linked-social-accounts-and-emails\\\">\\n    <div class=\\\"social-linked-header\\\"><div class=\\\"chevron-icon\\\"><i class=\\\"arrow mdi mdi-20px\\\"></i></div><div class=\\\"social-linked-header-text\\\">{[print(xabber.getString(\\\"title_linked_accounts\\\"))]}</div></div>\\n    <div class=\\\"social-linked-wrap\\\">\\n        <div id='google' class=\\\"not-linked social-account social-linked-item-wrap google-linked\\\"><div class=\\\"google-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-google-plus\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='facebook' class=\\\"not-linked social-account social-linked-item-wrap facebook-linked\\\"><div class=\\\"facebook-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-facebook\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='twitter' class=\\\"not-linked social-account social-linked-item-wrap twitter-linked\\\"><div class=\\\"twitter-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-twitter\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='email' class=\\\"not-linked social-linked-item-wrap\\\"><div class=\\\"email-color social-icon\\\"><svg style=\\\"width:24px;height:24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path fill=\\\"#FFF\\\" d=\\\"M3,4C1.89,4 1,4.89 1,6V18A2,2 0 0,0 3,20H14.09C14.03,19.67 14,19.34 14,19A6,6 0 0,1 20,13C20.34,13 20.67,13.03 21,13.09V6C21,4.89 20.1,4 19,4H3M3,6L11,11L19,6V8L11,13L3,8V6M19,15V18H16V20H19V23H21V20H24V18H21V15H19Z\\\" />\\n        </svg></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_add_email\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n    </div>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"login-panel\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n    </div>\\n    <div class=\\\"login-panel-form xmpp-login-form noselect\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__header\\\"))]}</div>\\n        <div class=\\\"input-field email-name\\\">\\n            <input id=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\">\\n            <label for=\\\"username\\\">{[print(xabber.getString(\\\"email_hint\\\"))]}</label>\\n            <span class=\\\"errors fixed one-line\\\"></span>\\n        </div>\\n        <div class=\\\"input-field\\\">\\n            <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n            <label for=\\\"password\\\">{[print(xabber.getString(\\\"hint_pass\\\"))]}</label>\\n            <span class=\\\"errors fixed one-line\\\"></span>\\n        </div>\\n        <div class=\\\"input-field buttons-wrap\\\">\\n            <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/forgot-password/\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-forgot-password\\\">{[print(xabber.getString(\\\"forgot_pass\\\"))]}</a>\\n            <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button>\\n        </div>\\n        <div class=\\\"social-auth-wrap\\\"><div class=\\\"social-header\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"social-header-tip\\\">{[print(xabber.getString(\\\"xabber_login__new_account\\\"))]}</div>\\n        </div></div>\\n        <div class=\\\"registration-footer\\\">\\n            <div class=\\\"registration-tip-wrap\\\">\\n                <span class=\\\"registration-tip\\\">{[print(xabber.getString(\\\"xabber_account__login__text_no_xmpp_acc\\\"))]}</span>\\n                <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/signup/?source=Xabber Web\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-registration\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__button_registration\\\"))]}</a>\\n            </div>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-form xmpp-login-form noselect\\\">\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_email\\\"))]}</div>\\n    <div class=\\\"input-field email-name\\\">\\n        <input id=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\">\\n        <label for=\\\"username\\\">{[print(xabber.getString(\\\"email_hint\\\"))]}</label>\\n        <span class=\\\"errors fixed one-line\\\"></span>\\n    </div>\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n        <label for=\\\"password\\\">{[print(xabber.getString(\\\"hint_pass\\\"))]}</label>\\n        <span class=\\\"errors fixed one-line\\\"></span>\\n    </div>\\n    <div class=\\\"login-panel-footer buttons-wrap\\\"><button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button><button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button></div>\\n</div>\";","export default \"<div class=\\\"left-column noselect\\\">\\n    <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n        </div>\\n        <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n        <div class=\\\"version\\\"></div>\\n    </div>\\n</div>\\n</div>\\n\\n<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span>{[print(xabber.getString(\\\"category_about\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content\\\">\\n            <div class=\\\"settings-block-wrap about\\\">\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_1\\\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_2\\\", [`<a href=\\\"${CLIENT_URL}\\\" target=\\\"_blank\\\">${CLIENT_URL}</a>`]))]}</div>\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__text\\\"))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__text\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_name\\\")}</a>`, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_2\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_3\\\"))]}</div>\\n                <div class=\\\"block-content flex-content\\\">\\n                    <img class=\\\"logo\\\" src=\\\"images/redsolution-logo.png\\\"/>\\n                    <a href=\\\"https://twitter.com/Xabber_XMPP\\\" target=\\\"_blank\\\"><div class=\\\"btn-social twitter-color\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div></a>\\n                    <a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\"><img class=\\\"btn-social github-logo\\\" src=\\\"images/ic_github.png\\\"/></a>\\n                </div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_1\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_2\\\", [`<a href=\\\"${PROJECT_CROWDIN_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_4__text_2__link__text\\\", [constants.SHORT_CLIENT_NAME])}</a>`]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_1__link__text\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_2\\\"))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_3\\\", [constants.SHORT_CLIENT_NAME, xabber.getString(\\\"client_developer_company_name\\\"), `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_full_name\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_4\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_LICENSE_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_4__link__text\\\")}</a>`]))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n<div class=\\\"material-color-picker-wrap\\\">\\n    <div class=\\\"material-color-picker\\\">\\n        {[materialColors.forEach(function (color) {]}\\n        <div data-color-name=\\\"{{color.color}}\\\" class=\\\"color-palette-wrapper\\\">\\n            {[var default_color = color.variations.find(v => v.weight == 500);]}\\n            <div data-weight=\\\"500\\\" data-hex=\\\"{{default_color.hex}}\\\" style=\\\"background-color: {{default_color.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[color.variations.forEach(function (variation) {]}\\n            <div data-weight=\\\"{{variation.weight}}\\\" data-hex=\\\"{{variation.hex}}\\\" style=\\\"background-color: {{variation.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[})]}\\n        </div>\\n        {[})]}\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"hidden selected-color-wrap\\\">\\n        <div class=\\\"selected-color-item\\\"></div>\\n        <div class=\\\"selected-color-info\\\">\\n            <div class=\\\"selected-color-name\\\"></div>\\n            <div class=\\\"selected-color-hex\\\"></div>\\n            <input class=\\\"selected-color-hex-input hidden\\\"/>\\n        </div>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-set\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<ul class=\\\"color-values noselect\\\">\\n    <li class=\\\"color-value\\\" data-value=\\\"red\\\">\\n        <div class=\\\"color-name text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-red-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"pink\\\">\\n        <div class=\\\"color-name text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-pink-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"purple\\\">\\n        <div class=\\\"color-name text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-purple\\\">\\n        <div class=\\\"color-name text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"indigo\\\">\\n        <div class=\\\"color-name text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-indigo-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue\\\">\\n        <div class=\\\"color-name text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-blue\\\">\\n        <div class=\\\"color-name text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"cyan\\\">\\n        <div class=\\\"color-name text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-cyan-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"teal\\\">\\n        <div class=\\\"color-name text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-teal-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"green\\\">\\n        <div class=\\\"color-name text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-green\\\">\\n        <div class=\\\"color-name text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"lime\\\">\\n        <div class=\\\"color-name text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-lime-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"amber\\\">\\n        <div class=\\\"color-name text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-amber-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"orange\\\">\\n        <div class=\\\"color-name text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-orange\\\">\\n        <div class=\\\"color-name text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"brown\\\">\\n        <div class=\\\"color-name text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-brown-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue-grey\\\">\\n        <div class=\\\"color-name text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-grey-700\\\"></div>\\n    </li>\\n</ul>\";","export default \"<div class=\\\"modal dialog-modal {{modal_class}}\\\">\\n    <div class=\\\"modal-header\\\">\\n        <div class=\\\"panel-header black-text\\\">{{header}}</div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{{text}}</div>\\n        <div class=\\\"dialog-options-wrap\\\">\\n        {[ for (var idx in dialog_options) { var option = dialog_options[idx]; ]}\\n            <div class=\\\"dialog-option\\\" data-name=\\\"{{option.name}}\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"dialog_option_{{option.name}}\\\" {[ if (option.checked) { ]}checked=\\\"checked\\\"{[ } ]}/>\\n                <label for=\\\"dialog_option_{{option.name}}\\\">{{option.text}}</label>\\n            </div>\\n        {[ } ]}\\n        </div>\\n        <div class=\\\"container-for-img hidden\\\"><img class=\\\"img-from-clipboard\\\"></div>\\n    </div>\\n    <div class=\\\"modal-footer {{flag}}\\\">\\n        {[ for (var idx in optional_buttons) { var button = optional_buttons[idx]; ]}\\n        <button class=\\\"optional-button btn-flat btn-main\\\" data-option=\\\"{{button.value}}\\\">{{button.name}}</button>\\n        {[ } ]}\\n        {[ if (ok_button) { ]}\\n        <button class=\\\"ok-button btn-flat btn-main\\\" data-option=true>{{ok_button.text}}</button>\\n        {[ } ]}\\n        {[ if (cancel_button) { ]}\\n        <button class=\\\"cancel-button btn-flat btn-main btn-dark btn-cancel\\\" data-option=false>{{cancel_button.text}}</button>\\n        {[ } ]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"row\\\">\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap\\\">\\n        {[if (edit_setting) {]}\\n        <input class=\\\"hidden set-label one-line\\\" {[if (label) {]}value=\\\"{{label}}\\\"{[}]}>{[}]}\\n        {[if (label) {]}<div class=\\\"one-line label\\\">{{label}}</div>{[}]}\\n        <div class=\\\"device-id one-line\\\">{{id}}</div>\\n        {[if (!label) {]}<div class=\\\"device-id-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_device_id\\\"))]}</div>{[}]}\\n        {[if (edit_setting) {]}<div class=\\\"set-label-label hidden\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_set_label\\\"))]}</div>{[}]}\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint\\\">{{fingerprint}}</div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n    <div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n        {[if (trust !== null && !error) {]}\\n        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n            <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n                <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_${trust}`))]}</div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content noselect fingerprint-dropdown\\\">\\n            <div data-value=\\\"ignore\\\" class=\\\"btn-main text-color-grey-500 btn-ignore btn-flat\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n            <div data-value=\\\"trust\\\" class=\\\"btn-main btn-flat btn-trust text-color-green-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n            {[if (delete_button){]}\\n            <div class=\\\"btn-main btn-flat btn-delete text-color-red-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_delete\\\"))]}</div>\\n            {[}]}\\n        </div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"additional-info\\\"></div>\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"this-device-wrap\\\">\\n        <div class=\\\"this-device-header-wrap\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"this-device-header\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</div>\\n        </div>\\n        <div class=\\\"this-device-content\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprints-description-wrap\\\">\\n        <div class=\\\"fingerprints-description\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_description\\\"))]}</div>\\n        <div class=\\\"link-about-encryption\\\"><a href=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__link_learn_more'))]}\\\" target=\\\"_blank\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_learn_more\\\"))]}</a></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}} field-text one-line\\\"></div>\\n    <div class=\\\"btn-rename\\\">\\n        <span>{[print(xabber.getString(\\\"input_widget__button_rename\\\"))]}</span>\\n    </div>\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input field-input hidden\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"collapsed-movable\\\"></div>\\n<i class=\\\"mdi mdi-phone btn-collapse\\\"></i>\\n<div class=\\\"call-header\\\">\\n    {[print(xabber.getString(\\\"dialog_jingle_message__header\\\", [SHORT_CLIENT_NAME]))]}\\n    <div class=\\\"calling-status\\\"/>\\n</div>\\n<div class=\\\"blur-background\\\"></div>\\n<div class=\\\"contact-info\\\">\\n    <div class=\\\"name one-line\\\"/>\\n    <div class=\\\"calling-status\\\"/>\\n</div>\\n<div class=\\\"video-wrap\\\">\\n    <video autoplay loop class=\\\"blank-video hidden\\\">\\n        <source src=\\\"{{BLANK_VIDEO.MP4}}\\\">\\n        <source src=\\\"{{BLANK_VIDEO.OGG}}\\\" type=\\\"video/ogg\\\">\\n        <source src=\\\"{{BLANK_VIDEO.WEBM}}\\\" type=\\\"video/webm\\\">\\n    </video>\\n    <audio autoplay class=\\\"webrtc-remote-audio hidden\\\"/>\\n    <video autoplay muted class=\\\"webrtc-local-video collapsed hidden\\\"/>\\n    <div class=\\\"default-screen\\\">\\n        <div class=\\\"circle-avatar\\\"/>\\n        <div class=\\\"name one-line\\\"/>\\n    </div>\\n</div>\\n<div class=\\\"buttons-panel\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"btn-wrap\\\" title=\\\"Collapse window\\\"><svg class=\\\"btn-collapse mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M19.5,3.09L15,7.59V4H13V11H20V9H16.41L20.91,4.5L19.5,3.09M4,13V15H7.59L3.09,19.5L4.5,20.91L9,16.41V20H11V13H4Z\\\"/>\\n        </svg></div>\\n        <div class=\\\"btn-wrap\\\" title=\\\"Fullscreen mode\\\"><svg class=\\\"btn-full-screen mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M11,21H3V13H5V17.59L17.59,5H13V3H21V11H19V6.41L6.41,19H11V21Z\\\" />\\n        </svg></div>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute_microphone__tooltip\\\"))]}' class=\\\"btn-microphone mdi mdi-24px mdi-microphone\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_switch_video__tooltip\\\"))]}' class=\\\"btn-video mdi mdi-24px mdi-video\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute__tooltip\\\"))]}' class=\\\"btn-volume mdi mdi-24px mdi-volume-high\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_share_screen__tooltip\\\"))]}' class=\\\"btn-share-screen mdi mdi-24px mdi-monitor\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_accept_call__tooltip\\\"))]}' class=\\\"btn-accept mdi mdi-24px mdi-phone\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_decline_call__tooltip\\\"))]}' class=\\\"btn-cancel mdi mdi-24px mdi-phone-hangup\\\"/>\\n    </div>\\n</div>\";","export default \"<div class=\\\"msg-text ground-color-300\\\">\\n    <span title=\\\"{[print(xabber.getString('omemo__alert_enable__tooltip'))]}\\\" class=\\\"btn-enable\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</span> {[print(xabber.getString(\\\"omemo__alert_enable__text\\\", [jid]))]}</div>\\n<i class=\\\"mdi mdi-22px mdi-close btn-escape\\\"></i>\\n<button class=\\\"btn-enable btn-flat hover-ground-color-500 btn-dark btn-main\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</button>\";","export default \"<div class=\\\"plyr-player-popup-container\\\">\\n    <div class=\\\"plyr-player-popup-draggable\\\">\\n        <video class=\\\"plyr-player-popup\\\"></video>\\n        <div class=\\\"plyr-player-min-controls-tab\\\">\\n            <div class=\\\"plyr-player-min-controls-buttons\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-minimize-full mdi-svg-template\\\" data-svgname=\\\"player-full\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-play mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-pause mdi-svg-template\\\" data-svgname=\\\"pause\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-mute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-off\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-unmute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-high\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"plyr-player-control-tab\\\">\\n    <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n    <svg class=\\\"mdi mdi-24px mdi-plyr-toolbar-item mdi-plyr-hide mdi-svg-template\\\" data-svgname=\\\"player-mini\\\"></svg>\\n</div>\";","export default \"    <div class=\\\"left-column noselect\\\">\\n        <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n            <div class=\\\"picture-wrap\\\">\\n                <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n            </div>\\n            <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n            <div class=\\\"version\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            {[if (ENABLE_XABBER_ACCOUNT) {]}\\n            <div class=\\\"settings-tab xabber-account-tab offline\\\" data-block-name=\\\"xabber-account\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-offline-icon\\\" data-svgname=\\\"xabber-offline\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-online-icon\\\" data-svgname=\\\"xabber-online\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</div>\\n            </div>\\n            {[}]}\\n            <div class=\\\"settings-tab active\\\" data-block-name=\\\"xmpp-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-lightbulb\\\"/>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n            </div>\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"storage\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-database\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__data_and_storage\\\"))]}</div>-->\\n            <!--</div>-->\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                <i class=\\\"mdi mdi-24px mdi-incognito\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n            </div>\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"connection\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-wan\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__connection_settings\\\"))]}</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"developer\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-bug\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__developer\\\"))]}</div>-->\\n            <!--</div>-->\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n            </div>\\n            {[if (PERSONAL_AREA_URL && Object.keys(PERSONAL_AREA_URL).length) {]}\\n            <a href=\\\"{{PERSONAL_AREA_URL.url}}\\\" target=\\\"_blank\\\"><div class=\\\"link-button settings-tab\\\" data-block-name=\\\"{{PERSONAL_AREA_URL.label}}\\\">\\n                <i class=\\\"mdi mdi-24px mdi-{{PERSONAL_AREA_URL.icon_name}}\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{{PERSONAL_AREA_URL.label}}</div>\\n            </div>\\n            </a>\\n            {[}]}\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap settings-tabs-wrap\\\">\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"security\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-security\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"about\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-information\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__about\\\"))]}</div>-->\\n            <!--</div>-->\\n            <div class=\\\"settings-tab delete-all-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n            <button class=\\\"btn-add-account btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</button>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content\\\">\\n                {[if (ENABLE_XABBER_ACCOUNT) {]}\\n                <div data-block-name=\\\"\\\" class=\\\"settings-block-wrap xabber-account\\\">\\n                    <div class=\\\"block-header\\\">\\n                        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</span>\\n                    </div>\\n                </div>\\n                {[}]}\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}' class=\\\"settings-block-wrap xmpp-accounts\\\">\\n                    <div class=\\\"setting xmpp-account-list\\\">\\n                        <div class=\\\"accounts-head-wrap\\\">\\n                            <div class=\\\"accounts-head xmppid-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_xmpp_id\\\"))]}</div>\\n                            <div class=\\\"accounts-head sync-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_sync\\\"))]}</div>\\n                            <div class=\\\"accounts-head enabled-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_enabled\\\"))]}</div>\\n                        </div>\\n                        <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n                        <div class=\\\"move-account-to-bottom droppable\\\"></div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__palette\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                <div class=\\\"current-main-color-wrap\\\">\\n                                    <div class=\\\"current-main-color ground-color-500\\\"></div>\\n                                    <div class=\\\"color-name\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"toolbar-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-color-setting field-wrap\\\">\\n                                <div class=\\\"selected-color-wrap\\\">\\n                                    <div class=\\\"selected-color-item\\\"></div>\\n                                    <div class=\\\"selected-color-info\\\">\\n                                        <div class=\\\"selected-color-name\\\"></div>\\n                                        <div class=\\\"selected-color-hex\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"account_settings_background\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"background-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</div>\\n                            <div class=\\\"setting background radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                                <div class=\\\"current-background-wrap\\\">\\n                                    <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                    <div class=\\\"current-background\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"blur-setting-wrap\\\">\\n                                <div class=\\\"setting blur-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                        <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"vignetting-setting-wrap\\\">\\n                                <div class=\\\"setting vignetting-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                        <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"side-panel-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_side_panel\\\"))]}</div>\\n                            <div class=\\\"setting side-panel-setting radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"side-panel\\\" value=\\\"dark\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dark-side-panel\\\" />\\n                                            <label for=\\\"{{view.cid}}-dark-side-panel\\\">{[print(xabber.getString(\\\"settings__section_appearance__side_panel__label_dark\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"side-panel\\\" value=\\\"light\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-light-side-panel\\\" />\\n                                            <label for=\\\"{{view.cid}}-light-side-panel\\\">{[print(xabber.getString(\\\"settings__section_appearance__side_panel__label_light\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting side-panel-setting field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"side_panel_blur_switch\\\"/>\\n                                    <label for=\\\"side_panel_blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                </div>\\n                                <div class=\\\"transparency-setting\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"transparency_switch\\\"/>\\n                                        <label for=\\\"transparency_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__side_panel__checkbox_transparency\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"transparency\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                        <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                        <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_contact_list\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"circle-avatar noselect\\\"/>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                        <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                        <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                        <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                        <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                        <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}'  class=\\\"settings-block-wrap notifications hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                        <div class=\\\"setting volume-setting\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-volume-low\\\"></i>\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"disabled hidden\\\"></div>\\n                                <p class=\\\"range-field\\\">\\n                                    <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                </p>\\n                            </form>\\n                            <i class=\\\"mdi mdi-24px mdi-volume-high\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting private-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"private-notifications\\\"/>\\n                                <label for=\\\"private-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview private-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting group-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"group-notifications\\\"/>\\n                                <label for=\\\"group-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview group-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-call\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-call\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-connecting\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-connecting\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting call-attention field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"call_attention\\\"/>\\n                                <label for=\\\"call_attention\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_call_attention\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                    <div class=\\\"setting load-media field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                            <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting typing-notifications field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                            <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting mapping-service field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                            <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                    <div class=\\\"setting interface-language-setting\\\">\\n                        <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default\\\" />\\n                                    <label for=\\\"{{view.cid}}-default\\\">{[print(xabber.getString(\\\"settings__languages_list___item_default\\\", [languages[xabber.get(\\\"default_language\\\") || 'en']]))]}</label>\\n                                </div>\\n                                {[if (window.navigator.language.indexOf(xabber.get(\\\"default_language\\\")) < 0) {]}\\n                                {[}]}\\n                                {[for (let lang in constants.languages) { if (!lang || lang == xabber.get(\\\"default_language\\\")) continue;]}\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"{{lang}}\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-{{lang}}\\\" />\\n                                    <label for=\\\"{{view.cid}}-{{lang}}\\\">{[print(constants.languages[lang]);]}</label>\\n                                    {[let locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));]}\\n                                    {[if (locale) { let progress = client_translation_progress[locale];]}<div class=\\\"translation-progress\\\">{[print((progress == 100) ? xabber.getString(\\\"settings__section_interface_language__translation_progress_fully\\\") : xabber.getString(\\\"settings__section_interface_language__translation_progress\\\", [`${progress}%`]))]}</div>{[}]}\\n                                </div>\\n                                {[}]}\\n                            </form>\\n                        </div>\\n                        <div class=\\\"description\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"toolbar-item all-chats active\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <img class=\\\"logo\\\" src=\\\"{{TOOLBAR_LOGO}}\\\">\\n    <span class=\\\"all-msg-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__chats\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <i class=\\\"toolbar-icon mdi mdi-24px mdi-message-text\\\"></i>\\n    <span class=\\\"msg-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item group-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__groups\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"message-group\\\"></svg>\\n    <span class=\\\"group-msg-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item mentions\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__mentions\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"ic-at\\\"></svg>\\n    <span class=\\\"mentions-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item archive-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__archive_chats\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <i class=\\\"toolbar-icon mdi mdi-24px mdi-archive\\\"></i>\\n    <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item contacts\\\" title='{[print(xabber.getString(\\\"category_title_contacts\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <i class=\\\"toolbar-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n</div>\\n\\n<div class=\\\"toolbar-item search hidden\\\" title='{[print(xabber.getString(\\\"search\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"ic-searching\\\"></svg>\\n</div>\\n\\n<div class=\\\"add-something-wrap\\\">\\n    <div class=\\\"toolbar-item dropdown-button add-something\\\" data-activates=\\\"{{view.cid}}-add\\\" title='{[print(xabber.getString(\\\"toolbar__button_add_tooltip\\\"))]}'>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-plus\\\"></i>\\n    </div>\\n\\n    <div id=\\\"{{view.cid}}-add\\\" class=\\\"add-variants dropdown-content noselect\\\">\\n        <div class=\\\"add-variant contact\\\">\\n            <i class=\\\"mdi mdi-20px mdi-account-plus\\\"></i>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"add_contact\\\"))]}</span>\\n        </div>\\n        <div class=\\\"add-variant public-groupchat\\\">\\n            <i class=\\\"mdi mdi-20px mdi-account-multiple-plus\\\"></i>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_group\\\"))]}</span>\\n        </div>\\n        <div class=\\\"add-variant incognito-groupchat\\\">\\n            <svg class=\\\"mdi mdi-20px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M13 11A3 3 0 1 0 10 8A3 3 0 0 0 13 11M13 7A1 1 0 1 1 12 8A1 1 0 0 1 13 7M17.11 10.86A5 5 0 0 0 17.11 5.14A2.91 2.91 0 0 1 18 5A3 3 0 0 1 18 11A2.91 2.91 0 0 1 17.11 10.86M13 13C7 13 7 17 7 17V19H19V17S19 13 13 13M9 17C9 16.71 9.32 15 13 15C16.5 15 16.94 16.56 17 17M24 17V19H21V17A5.6 5.6 0 0 0 19.2 13.06C24 13.55 24 17 24 17M8 12H5V15H3V12H0V10H3V7H5V10H8Z\\\" />\\n            </svg>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_incognito_group\\\"))]}</span>\\n        </div>\\n        <div class=\\\"add-variant account\\\">\\n            <i class=\\\"mdi mdi-20px mdi-account-circle\\\"></i>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</span>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"divider noselect\\\"></div>\\n\\n<div class=\\\"accounts-wrap\\\">\\n    <div class=\\\"accounts\\\">\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-bottom\\\">\\n    {[if (SCREEN_ABOUT) {]}\\n    <div class=\\\"toolbar-item about\\\" title='{[print(xabber.getString(\\\"about\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-information\\\"></i>\\n    </div>\\n    {[}]}\\n    <div class=\\\"toolbar-item settings\\\" title='{[print(xabber.getString(\\\"settings\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-settings\\\"></i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"    <div class=\\\"message-input-panel noselect\\\">\\n        <div class=\\\"my-avatar circle-avatar circle-image-fix\\\"></div>\\n        <div class=\\\"message-form\\\">\\n            <div class=\\\"fwd-messages-preview noselect hidden\\\">\\n                <div class=\\\"msg-border ground-color-700\\\">\\n                </div>\\n                <div class=\\\"msg-content\\\">\\n                    <p class=\\\"msg-author text-color-700 one-line\\\"></p>\\n                    <p class=\\\"msg-text one-line\\\"></p>\\n                </div>\\n                <div class=\\\"close-forward\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"message-reference-preview hidden\\\">\\n                <div class=\\\"message-reference-preview-container\\\">\\n                </div>\\n                <div class=\\\"close-attachments\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"input-field input-message\\\">\\n                <div class=\\\"mentions-list\\\"></div>\\n                <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                </div>\\n                <div class=\\\"scrollbar-cover\\\"></div>\\n                <div class=\\\"insert-emoticon\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n                </div>\\n                <div class=\\\"preview-preloader-container hidden\\\" title='{[print(xabber.getString(\\\"chat_bottom__preview_preloader_cancel\\\"))]}'>\\n                    <svg class=\\\"preview-cancel-preloader mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"link\\\"></svg>\\n                </div>\\n                <div class=\\\"emoticons-panel-wrap\\\">\\n                    <div class=\\\"emoticons-panel\\\"></div>\\n                    <div class=\\\"emoji-menu\\\"></div>\\n                    <div class=\\\"uploading-emoticons\\\">\\n                    <div class=\\\"preloader-wrapper preloader-20px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"input-voice-message\\\">\\n                <div class=\\\"voice-visualizer\\\"></div>\\n                <div class=\\\"timer\\\">0:00</div>\\n                <div class=\\\"voice-msg-status\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__cancel_write_voice\\\"))]}</div>\\n            </div>\\n            <div class=\\\"input-toolbar\\\">\\n                <div class=\\\"attach attach-file\\\">\\n                    <input type=\\\"file\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_file\\\"))]}' multiple>\\n                    <i class=\\\"mdi mdi-24px mdi-paperclip\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-media\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_media\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-file-image\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-location\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <input type=\\\"text\\\" hidden title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-map-marker\\\"></i>\\n                </div>\\n                <div title=\\\"Format text\\\" class=\\\"format-text\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-format-text\\\"></i>\\n                </div>\\n                <div class=\\\"last-emoticons\\\">\\n                </div>\\n                <div class=\\\"account-info-wrap\\\">\\n                    <div class=\\\"account-jid text-color-700\\\"></div>\\n                    <div class=\\\"account-nickname text-color-700\\\"></div>\\n                    <div class=\\\"account-badge\\\"></div>\\n                    <div class=\\\"account-role ground-color-700\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"send-area\\\">\\n            <i class=\\\"send-message mdi mdi-32px mdi-send text-color-700 hover-text-color-500 hidden\\\"></i>\\n            <i class=\\\"mdi mdi-32px mdi-microphone attach-voice-message text-color-700 hover-text-color-500\\\"></i>\\n        </div>\\n    </div>\\n    <div class=\\\"blocked-msg hidden\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__blocked\\\"))]}</div>\\n    <div class=\\\"message-actions-panel noselect hidden\\\">\\n        <div class=\\\"button-wrap reply-message-wrap\\\">\\n            <i class=\\\"action-button reply-message mdi ground-color-700 mdi-reply mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_reply\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_reply\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap forward-message-wrap\\\">\\n            <i class=\\\"action-button forward-message mdi ground-color-700 mdi-forward mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_froward\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_froward\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap copy-message-wrap\\\">\\n            <i class=\\\"action-button copy-message mdi ground-color-700 mdi-content-copy mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_copy\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_copy\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap delete-message-wrap\\\">\\n            <i class=\\\"action-button delete-message mdi ground-color-700 mdi-delete mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"delete\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"delete\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap edit-message-wrap\\\">\\n            <i class=\\\"action-button edit-message mdi ground-color-700 mdi-pencil mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_edit\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_edit\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap pin-message-wrap\\\">\\n            <svg class=\\\"action-button pin-message ground-color-700\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path fill=\\\"#FFF\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"/>\\n            </svg>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_pin\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_pin\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap cancel-message-wrap\\\">\\n            <i class=\\\"action-button close-message-panel mdi mdi-close mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n        </div>\\n    </div>\\n\";","export default \"  <div class=\\\"search-form-header\\\">\\n    <div class=\\\"messages-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n    </div>\\n    <div class=\\\"text-color-700 btn-cancel-searching\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n</div>\\n<div class=\\\"pinned-message\\\"></div>\\n<div class=\\\"elements-in-top\\\">\\n    <div class=\\\"subscription-buttons-wrap hidden\\\"/>\\n    <div class=\\\"chat-day-indicator fixed-day-indicator-wrap hidden\\\"><div class=\\\"fixed-day-indicator\\\"></div></div>\\n</div>\\n<div class=\\\"load-history-feedback hidden\\\"></div>\\n<div class=\\\"participant-messages-header hidden\\\"><div class=\\\"messages-by-header\\\">{[print(xabber.getString(\\\"chat__placeholder_participant_messages__messages_by\\\"))]} <div class=\\\"participant-nickname text-color-700\\\"></div></div><div class=\\\"btn-cancel-selection\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div><div class=\\\"text-color-700 btn-retract-messages\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</div></div>\\n<div class=\\\"chat-content\\\">\\n</div>\\n<div class=\\\"chat-notification hidden one-line\\\"></div>\\n<i class=\\\"mdi mdi-36px back-to-bottom mdi-chevron-down\\\"></i>\\n\";","export default \"<div class=\\\"search-wrap\\\">\\n    <div class=\\\"search-content\\\">\\n        <div class=\\\"search-form-header block-header\\\">\\n            <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n            <div class=\\\"messages-search-form search-form \\\">\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n            </div>\\n            <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"search-messages-content-wrap\\\">\\n            <div class=\\\"search-results\\\">\\n                {[print(xabber.getString(\\\"nothing_was_searched\\\"))]}\\n            </div>\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"messages-count\\\">\\n            </div>\\n            <div class=\\\"chat-content\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-head-details\\\"></div>\\n<div class=\\\"circle-avatar\\\"/>\\n<div class=\\\"contact-status hide-offline\\\"/>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <div class=\\\"contact-name-wrap\\\">\\n            <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n            <p class=\\\"contact-name one-line\\\"></p>\\n        </div>\\n        <p class=\\\"contact-status-message one-line\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"/>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-show-fingerprints\\\">\\n            <i class=\\\"mdi mdi-lock mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <!--<div class=\\\"chat-tool btn-set-status\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\">\\n                    <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"/>\\n                    <path d=\\\"M20,4 C21.1045695,4 22,4.8954305 22,6 L22,16 C22,17.1045695 21.1045695,18 20,18 L16,18 L12,22 L8,18 L4,18 C2.8954305,18 2,17.1045695 2,16 L2,6 C2,4.8954305 2.8954305,4 4,4 L20,4 Z M16,12 L6,12 L6,14 L16,14 L16,12 Z M18,8 L6,8 L6,10 L18,10 L18,8 Z\\\" id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\"/>\\n                </g>\\n            </svg>\\n        </div>-->\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-chat-pin\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-archive-chat\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-notifications active-hover\\\" data-activates=\\\"{{view.cid}}-mute-more\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <!--<li class=\\\"btn-contact-details\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>-->\\n            <!--</li>-->\\n            <li class=\\\"btn-call-attention\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"call_attention\\\"))]}</span>\\n            </li>\\n            <!--<li class=\\\"btn-export-history\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"export_chat\\\"))]}</span>\\n            </li>-->\\n            <li class=\\\"btn-invite-users\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-start-encryption\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_start_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-encrypted-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-regular-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_regular_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"delete_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-clear-history\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </li>\\n            <!--<li class=\\\"btn-delete-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_contact\\\"))]}</span>-->\\n            <!--</li>-->\\n            <!--<li class=\\\"btn-block-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_block\\\"))]}</span>-->\\n            <!--</li>-->\\n            <!--<li class=\\\"btn-unblock-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_unblock_contact\\\"))]}</span>-->\\n            <!--</li>-->\\n        </ul>\\n        <ul id=\\\"{{view.cid}}-mute-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <i class=\\\"mdi muted-icon mdi-14px mdi-bell-off\\\"></i>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n<div class=\\\"chat-states\\\">\\n    <div class=\\\"chat-item-notifications-wrap\\\">\\n        <span class=\\\"msg-chat-error hidden\\\">!</span>\\n        <span class=\\\"msg-incoming-subscription hidden\\\">\\n            <svg class=\\\"mdi mdi-12px mdi-svg-template\\\" data-svgname=\\\"plus\\\"></svg>\\n        </span>\\n        <span class=\\\"msg-counter hidden\\\"></span>\\n        <i class=\\\"msg-delivering-state mdi mdi-16px hidden\\\"></i>\\n        <i class=\\\"pinned-icon\\\">\\n            <svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n                <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                    <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n                    <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"chat_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"recent-chats-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"load-chats-feedback hidden\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n    </div>\\n    <div class=\\\"read-all-button hidden\\\">{[print(xabber.getString(\\\"mark_all_as_read_button\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"field clickable-field {{className}} switch normal\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{id}}\\\">\\n    <label for=\\\"{{id}}\\\"></label>\\n</div>\";","export default \"<div>\\n    <i class=\\\"mdi mdi-36px mdi-alert-circle\\\"></i>\\n</div>\\n<div class=\\\"warning-message\\\">{{message}}</div>\\n<button class=\\\"btn-manage-devices btn-flat btn-main btn-dark hover-ground-color-amber-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\";","export default \"<div class=\\\"warning-wrap\\\">\\n    <p class=\\\"warning-message\\\">{{message}}</p>\\n    <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-{{color}}-100 hover-ground-color-{{color}}-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"dialog_forward_message__header\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <span>{[print(xabber.getString(\\\"create_groupchat\\\"))]}</span>\\n    <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-creating-groupchat\\\">\\n        <div class=\\\"dropdown-button\\\">\\n            <div class=\\\"account-item-wrap\\\">\\n                <div class=\\\"circle-avatar noselect\\\">\\n                    <img>\\n                </div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-account-for-creating-groupchat\\\" class=\\\"dropdown-content noselect\\\">\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"row name-field\\\">\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <label for=\\\"new_chat_name\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</label>\\n            <input id=\\\"new_chat_name\\\" type=\\\"text\\\" name=\\\"chat_name\\\" placeholder='{[print(xabber.getString(\\\"group_is_empty\\\"))]}' required>\\n        </div>\\n    </div>\\n    <div class=\\\"row jid-field\\\">\\n        <label for=\\\"new_chat_jid\\\">{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}</label>\\n        <div class=\\\"input-field input-group-chat-jid\\\">\\n            <input id=\\\"new_chat_jid\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}' name=\\\"chat_jid\\\">\\n            <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                <div class=\\\"select-xmpp-server\\\">\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                    <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                        <input id=\\\"new_chat_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"chat_domain\\\">\\n                    </div>\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                        <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                        <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                    </div>\\n                </div>\\n                <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <span class=\\\"errors\\\"></span>\\n    </div>\\n    <div class=\\\"row incognito-field hidden\\\">\\n        <i class=\\\"field-icon mdi mdi-24px mdi-incognito\\\"></i>\\n        <div class=\\\"property-field incognito-dropdown-wrap\\\">\\n           <div class=\\\"public-item-wrap property-wrap\\\"><div data-value=\\\"public\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_public\\\"))]}</div></div>\\n           <div class=\\\"incognito-item-wrap property-wrap\\\"><div data-value=\\\"incognito\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"row group-radio-fields\\\">\\n        <div class=\\\"property-radio-field membership-dropdown-wrap\\\">\\n            <div class=\\\"membership-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"membership_open\\\" data-value=\\\"open\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"membership_member_only\\\" data-value=\\\"member-only\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_member_only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"property-radio-field global-dropdown-wrap\\\">\\n            <div class=\\\"global-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"index_none\\\" data-value=\\\"none\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_local\\\" data-value=\\\"local\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_global\\\" data-value=\\\"global\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row description-field\\\">\\n        <div class=\\\"input-field input-message\\\">\\n            <label class=\\\"description-label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</label>\\n            <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                <div class=\\\"rich-textarea\\\" tabindex=\\\"2\\\" contenteditable=\\\"\\\"></div>\\n                <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"create\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"groupchat_invite_users\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"contacts-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main btn-add\\\"><span class=\\\"counter hidden\\\"></span>{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-dark btn-main btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"list-item mention-item\\\" data-jid=\\\"{{jid}}\\\" data-id=\\\"{{id}}\\\" data-nickname=\\\"{{nickname}}\\\">\\n    <div class=\\\"circle-avatar\\\"></div>\\n    <div class=\\\"participant-info\\\">\\n        <span class=\\\"one-line nickname\\\">{{nickname}}</span>\\n        <span class=\\\"one-line jid\\\">{{jid}}</span>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content full-pinned-message\\\"></div>\\n\";","export default \"\\n<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-content{[ if (!popup_coordinates) { ]}popup{[ } ]}\\\">\\n        <div id=\\\"map\\\" class=\\\"text-color-700\\\" style=\\\"width:800px; height:490px;\\\" data-type='map'></div>\\n        <div class=\\\"form-group\\\">\\n                <textarea id=\\\"output\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lat\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lon\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n        </div>\\n\\n        <script type=\\\"text/javascript\\\">\\n            var layers = [ new ol.layer.Tile({ source: new ol.source.OSM() }) ];\\n            var coordinates = popup_coordinates ? ol.proj.transform(popup_coordinates, 'EPSG:4326', 'EPSG:3857') : [-9639318.435625363, 1667475.03690917];\\n            var zoom = popup_coordinates ? 15 : 0;\\n\\n            var placemark = new ol.Overlay.Placemark ({\\n                // backgroundColor : 'yellow',\\n                contentColor: '#000',\\n                autoPan: true,\\n                html: '<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><svg width=\\\"48px\\\" height=\\\"48px\\\" viewBox=\\\"0 0 24 30\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><g id=\\\"icon/material/map-marker\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\"><rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"36\\\" height=\\\"36\\\"></rect><path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path></g></svg>',\\n                anchor: false,\\n                autoPanAnimation: { duration: 250 }\\n              });\\n\\n            var placemark_my_location = new ol.Overlay.Placemark ({\\n                // backgroundColor : 'yellow',\\n                contentColor: '#000',\\n                autoPan: true,\\n                html: '<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" width=\\\"36px\\\" height=\\\"36px\\\"><circle class=\\\"outer\\\" cx=\\\"20\\\" cy=\\\"20\\\" r=\\\"16\\\" stroke=\\\"none\\\" stroke-width=\\\"1.5\\\" fill=\\\"none\\\" style=\\\"opacity: 0.6;\\\"></circle><circle class=\\\"inner\\\" cx=\\\"20\\\" cy=\\\"20\\\" r=\\\"8\\\" stroke=\\\"white\\\" stroke-width=\\\"1.5\\\" fill=\\\"none\\\"></circle></svg>',\\n                anchor: false,\\n                autoPanAnimation: { duration: 250 }\\n              });\\n\\n            var map = new ol.Map\\n            ({\\ttarget: 'map',\\n                view: new ol.View\\n                ({\\tzoom: zoom,\\n                    center: coordinates\\n                }),\\n                interactions: ol.interaction.defaults({ altShiftDragRotate:false, pinchRotate:false }),\\n                layers: layers,\\n                overlays: [placemark, placemark_my_location]\\n            });\\n\\n            var getCurrentPositionControl = function (e) {\\n                navigator.geolocation.getCurrentPosition(success, error, options);\\n            };\\n\\n            var options = {\\n              enableHighAccuracy: true,\\n              timeout: 5000,\\n              maximumAge: 0\\n            };\\n\\n            function success(pos) {\\n              var crd = pos.coords;\\n              map.getView().setCenter(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\\n              placemark_my_location.show(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\\n              map.getView().setZoom(17);\\n              button_geoposition.innerHTML = '<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><svg width=\\\"22px\\\" height=\\\"22px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><g id=\\\"icon/material/crosshairs-gps\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\"><rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"22\\\" height=\\\"22\\\"></rect><path d=\\\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs-gps\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\"></path></g></svg>';\\n            };\\n\\n            function error(err) {\\n              console.warn(`ERROR(${err.code}): ${err.message}`);\\n            };\\n\\n            var button_geoposition = document.createElement('button');\\n            button_geoposition.innerHTML = '<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><svg width=\\\"22px\\\" height=\\\"22px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><g id=\\\"icon/material/crosshairs-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\"><rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"22\\\" height=\\\"22\\\"></rect><path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\\\" id=\\\"mdi:crosshairs-question\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\"></path></g></svg>';\\n\\n\\n            button_geoposition.addEventListener('click', getCurrentPositionControl, false);\\n\\n            var custom_element_position = document.createElement('div');\\n\\n            if (popup_coordinates) {\\n                custom_element_position.className = 'geoposition placemark-exist ol-control ol-unselectable';\\n            }\\n            else {\\n                custom_element_position.className = 'geoposition ol-control ol-unselectable';\\n            }\\n            custom_element_position.appendChild(button_geoposition);\\n\\n            geoposition = new ol.control.Control({\\n                className: 'myControl',\\n                element: custom_element_position,\\n                target: document.getElementById(\\\"myCustomControl\\\")\\n            });\\n\\n            map.addControl(geoposition);\\n\\n            if (popup_coordinates) {\\n                placemark.show(ol.proj.transform(popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\\n                $('.ol-zoom.ol-unselectable.ol-control').addClass('placemark-exist');\\n                var getPlacemarkPositionControl = function (e) {\\n                    map.getView().setCenter(ol.proj.transform(popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\\n                    map.getView().setZoom(15);\\n                    $('.ol-location').show()\\n\\n                };\\n\\n                var button_placemark_position = document.createElement('button');\\n                button_placemark_position.innerHTML = '<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><svg width=\\\"22px\\\" height=\\\"22px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><g id=\\\"icon/material/map-marker\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\"><rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"36\\\" height=\\\"36\\\"></rect><path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\"></path></g></svg>';\\n\\n\\n                button_placemark_position.addEventListener('click', getPlacemarkPositionControl, false);\\n\\n                var custom_element_placemark_position = document.createElement('div');\\n                custom_element_placemark_position.className = 'placemark-position ol-control ol-unselectable';\\n                custom_element_placemark_position.appendChild(button_placemark_position);\\n\\n                placemark_position = new ol.control.Control({\\n                    className: 'myControl',\\n                    element: custom_element_placemark_position,\\n                    target: document.getElementById(\\\"myCustomControl\\\")\\n                });\\n\\n                map.addControl(placemark_position);\\n\\n                var custom_element_show_location_name = document.createElement('div');\\n                custom_element_show_location_name.innerHTML = '{{location_name}}';\\n\\n\\n                custom_element_show_location_name.className = 'ol-location ol-control ol-unselectable';\\n\\n                show_location_name = new ol.control.Control({\\n                    className: 'myControl',\\n                    element: custom_element_show_location_name,\\n                    target: document.getElementById(\\\"myCustomControl\\\")\\n                });\\n\\n                map.addControl(show_location_name);\\n\\n            }\\n\\n            if (!popup_coordinates) {\\n\\n                var send_buttom = document.createElement('button');\\n                send_buttom.className = 'btn-apply mdi mdi-28px mdi-send';\\n\\n                var send_address_div = document.createElement('div');\\n                send_address_div.setAttribute(\\\"id\\\", \\\"send_address\\\");\\n                send_address_div.className = 'ol-send-address';\\n\\n                var send_div = document.createElement('div');\\n                send_div.setAttribute(\\\"id\\\", \\\"send_text\\\");\\n                send_div.className = 'ol-send-text';\\n\\n                var custom_element_send = document.createElement('div');\\n                custom_element_send.className = 'ol-send ol-control ol-unselectable';\\n                custom_element_send.appendChild(send_address_div);\\n                custom_element_send.appendChild(send_div);\\n                custom_element_send.appendChild(send_buttom);\\n\\n                send = new ol.control.Control({\\n                    className: 'myControl',\\n                    element: custom_element_send,\\n                    target: document.getElementById(\\\"myCustomControl\\\")\\n                });\\n\\n                map.addControl(send);\\n\\n                var sLayer = new ol.layer.Vector({\\n                    source: new ol.source.Vector(),\\n                    style: new ol.style.Style({\\n                        image: new ol.style.Circle({\\n                            radius: 5,\\n                            stroke: new ol.style.Stroke ({\\n                                color: 'rgb(255,165,0)',\\n                                width: 3\\n                            }),\\n                            fill: new ol.style.Fill({\\n                                color: 'rgba(255,165,0,.3)'\\n                            })\\n                        }),\\n                        stroke: new ol.style.Stroke ({\\n                            color: 'rgb(255,165,0)',\\n                            width: 3\\n                        }),\\n                        fill: new ol.style.Fill({\\n                            color: 'rgba(255,165,0,.3)'\\n                        })\\n                    })\\n                });\\n\\n                map.addLayer(sLayer);\\n\\n                var search = new ol.control.SearchNominatim (\\n                    {\\t//target: $(\\\".options\\\").get(0),\\n                        polygon: $(\\\"#polygon\\\").prop(\\\"checked\\\"),\\n                        reverse: true,\\n                        position: true\\t// Search, with priority to geo position\\n                    });\\n\\n                map.addControl (search);\\n\\n                search.on('select', function(e){\\n                    sLayer.getSource().clear();\\n                    // Check if we get a geojson to describe the search\\n                    if (e.search.geojson) {\\n                        var format = new ol.format.GeoJSON();\\n                        var f = format.readFeature(e.search.geojson, { dataProjection: \\\"EPSG:4326\\\", featureProjection: map.getView().getProjection() });\\n                        sLayer.getSource().addFeature(f);\\n                        var view = map.getView();\\n                        var resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\\n                        var zoom = view.getZoomForResolution(resolution);\\n                        var center = ol.extent.getCenter(f.getGeometry().getExtent());\\n                        // redraw before zoom\\n                        setTimeout(function(){\\n                                view.animate({\\n                                center: center,\\n                                zoom: Math.min (zoom, 16)\\n                            });\\n                        }, 100);\\n                    }\\n                    else {\\n                        map.getView().animate({\\n                            center:e.coordinate,\\n                            zoom: Math.max (map.getView().getZoom(),16)\\n                        });\\n                    }\\n                });\\n\\n                function reverseGeocode(json) {\\n                    if (!json[0].error) {\\n                        let house_number = json[0].address.house_number ? ' ' + json[0].address.house_number : '',\\n                            road = json[0].address.road ? json[0].address.road + house_number + ', ' : '',\\n                            state = json[0].address.state ? json[0].address.state + ', ' : '',\\n                            neighbourhood = json[0].address.neighbourhood ? json[0].address.neighbourhood + ', ' : '',\\n                            allotments = json[0].address.allotments ? json[0].address.allotments + ', ' : '',\\n                            village = json[0].address.village ? json[0].address.village + ', ' : '',\\n                            city = json[0].address.city ? json[0].address.city + ', ' : '',\\n                            country = json[0].address.country ? state + json[0].address.country : '',\\n                            final_text = ''\\n                        if ( !road ){\\n                            final_text = neighbourhood + allotments + village + city + country\\n                        }\\n                        else {\\n                            final_text = road + neighbourhood + allotments + village + city + state.replace(', ','')\\n                        }\\n                        $('#send_address').text(final_text);\\n                    }\\n                    else {\\n                        $('#send_address').text(xabber.getString(\\\"location_fragment__address_error__title\\\"));\\n                    }\\n                }\\n\\n                map.on('click', function(e) {\\n                    placemark.show(e.coordinate);\\n                    search.reverseGeocode(e.coordinate, reverseGeocode);\\n                    let coordinates = ol.proj.transform(e.coordinate, map.getView().getProjection(), 'EPSG:4326');\\n                    $('.ol-control.ol-send').show();\\n                    $('#send_text').text(coordinates[1].toFixed(6) + ':' + coordinates[0].toFixed(6));\\n                    $('#output').text('geo:' + coordinates[1] + ',' + coordinates[0]);\\n                    $('#lat').text(coordinates[1]);\\n                    $('#lon').text(coordinates[0]);\\n                  });\\n            }\\n            window.setTimeout(function () { map.updateSize(); }, 200)\\n        </script>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n\";","export default \"{[ if (blob) {]}\\n<div class=\\\"attached-image-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-size one-line\\\">{{filesize}}</div>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (blob) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{blob}}\\\" src=\\\"{{blob}}\\\">\\n    {[}]}\\n</div>\\n{[} else {]}\\n<div class=\\\"attached-file-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-text\\\">\\n        <div class=\\\"attached-file-name one-line\\\">{{file.name}}</div>\\n        <div class=\\\"attached-file-size one-line\\\">{{filetype}}, {{filesize}}</div>\\n    </div>\\n    <i class=\\\"mdi attached-file-icon {{typeicon}}\\\"></i>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n</div>\\n{[}]}\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi mdi-play no-uploaded\\\"></i>\\n    <i class=\\\"mdi mdi-pause\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n        <a class=\\\"voice-message-play\\\">Play</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"><img></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<span class=\\\"accept-request\\\">Accept</span><span class=\\\"decline-request\\\">Decline</span><span class=\\\"block-request\\\">Block</span></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi {{mdi_icon}}\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (is_audio && duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"one-file-wrap link-file unuploaded-file\\\" data-upload-file-id=\\\"{{upload_id}}\\\">\\n    <div class=\\\"file-loading-container\\\"></div>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>, <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <div class=\\\"circle-percent-text\\\">0%</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-message main {{classlist}} file-upload noselect\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content chat-main-upload-media\\\">\\n        </div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 repeat-upload\\\">{[print(xabber.getString(\\\"resend\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 edit-upload\\\">{[print(xabber.getString(\\\"edit\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-delete-message\\\">{[print(xabber.getString(\\\"delete\\\"))]}</div>\\n        </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"fwd-message\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-from-id=\\\"{{from_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"fwd-msg-author-wrap\\\">\\n            <div class=\\\"fwd-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if ((role)&&(role != 'Member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n            <div class=\\\"msg-time selectable-text one-line\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<div><span class=\\\"accept-request-group\\\">Accept</span><span class=\\\"decline-request-group\\\">Decline</span><span class=\\\"block-request-group\\\">Block</span></div></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\"><img title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\"><img title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"images-details\\\">\\n    <div class=\\\"images-details-header\\\">\\n        {[print(xabber.getString(\\\"privacy_risk_images_header\\\"))]}\\n    </div>\\n    {[img_information.images.forEach((image) => {]}\\n        <div class=\\\"image-details\\\">\\n            {{image.name}} <span>{{image.pretty_size}}, {{image.height}}x{{image.width}}</span>\\n        </div>\\n    {[})]}\\n</div>\\n<div class=\\\"image-servers-details\\\">\\n    {[if (img_information.servers.length === 1) {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_server_header\\\", [img_information.servers[0]]))]}\\n        </div>\\n    {[} else {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_servers_header\\\"))]}\\n        </div>\\n        {[img_information.servers.forEach((server) => {]}\\n            <div class=\\\"server-details\\\">\\n                {{server}}\\n            </div>\\n        {[})]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"link-message-reference message-reference-preview-attached message-reference-preview-item {[ if (item.image && item.video_url) {]}link-message-reference-video{[}]}\\\" data-original-url=\\\"{{item.original_text}}\\\">\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (item.image && item.video_url) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-site-name one-line\\\">{{item.site}}</div>\\n    {[} else if (item.image) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 25) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 25) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 29) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 29) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[}]}\\n</div>\";","export default \"{[ if (is_video) {]}\\n        <div class=\\\"link-message-reference message-reference-preview-item message-reference-preview-item-big-image\\\">\\n            <div class=\\\"embed-video\\\">\\n                <div class=\\\"plyr-video-container\\\" data-provider=\\\"{{provider}}\\\" data-src=\\\"{{video_url}}\\\">\\n                    <div class=\\\"plyr-video-play\\\">\\n                        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                    </div>\\n                    <div class=\\\"plyr-video-playing\\\">\\n                        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n                        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n                    </div>\\n                    {[ if (image) {]}\\n                    <img class=\\\"plyr-video-poster\\\" src=\\\"{{image}}\\\" onerror=\\\"this.style.display='none'\\\">\\n                    {[}]}\\n                </div>\\n            </div>\\n            <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n                <div class=\\\"attached-text-block\\\">\\n                    <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                    <div class=\\\"link-site-title\\\">{{title}}</div>\\n                    <div class=\\\"link-description\\\">{{description}}</div>\\n                </div>\\n            </a>\\n        </div>\\n{[} else {]}\\n    <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n        <div class=\\\"link-message-reference message-reference-preview-item{[if (image_width && image_width >= 590) {]} message-reference-preview-item-big-image{[}]}\\\">\\n            {[ if (image) {]}\\n            <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{image}}\\\" src=\\\"{{image}}\\\">\\n            {[}]}\\n            <div class=\\\"attached-text-block\\\">\\n                <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                <div class=\\\"link-site-title\\\">{{title}}</div>\\n                <div class=\\\"link-description\\\">{{description}}</div>\\n            </div>\\n        </div>\\n    </a>\\n{[}]}\";","export default \"<div class=\\\"circle-wrap\\\">\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"preloader-circular\\\" viewBox=\\\"27 27 54 54\\\">\\n        <circle class=\\\"preloader-path-new\\\" cx=\\\"54\\\" cy=\\\"54\\\" r=\\\"24\\\" fill=\\\"none\\\" stroke-miterlimit=\\\"10\\\"></circle>\\n    </svg>\\n    <div class=\\\"inside-circle\\\">\\n        <i class=\\\"mdi mdi-center-loading-indicator mdi-close mdi-20px\\\"></i>\\n        <i class=\\\"mdi mdi-alert-circle mdi-32px hidden\\\"></i>\\n    </div>\\n    <div class=\\\"circle-percent-text\\\">0%</div>\\n</div>\";","export default \"    <div id=\\\"{{id}}\\\" class=\\\"text-color-700\\\" style=\\\"width:350px; height:300px;pointer-events: none;\\\" data-type='map'><img id=\\\"img_{{ id }}\\\" ></div>\\n\\n\\n    <script type=\\\"text/javascript\\\">\\n    let map{{id}} = new ol.Map\\n        ({\\ttarget: '{{id}}',\\n        \\tview: new ol.View\\n            ({\\tzoom: 15,\\n                center: ol.proj.transform([{{lon}}, {{lat}}], 'EPSG:4326', 'EPSG:3857')\\n            }),\\n            interactions: ol.interaction.defaults({\\n                altShiftDragRotate:false,\\n                doubleClickZoom:false,\\n                keyboard:false,\\n                mouseWheelZoom:false,\\n                shiftDragZoom:false,\\n                dragPan:false,\\n                pinchRotate:false,\\n                pinchZoom:false\\n            }),\\n            layers: [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\\n        });\\n\\n    map{{id}}.once('rendercomplete', function(event) {\\n        const mapCanvas = document.createElement('canvas');\\n        const size = map{{id}}.getSize();\\n        mapCanvas.width = size[0];\\n        mapCanvas.height = size[1];\\n        const mapContext = mapCanvas.getContext('2d');\\n        Array.prototype.forEach.call(\\n          document.querySelectorAll('#{{id}} .ol-layer canvas'),\\n          function (canvas) {\\n            if (canvas.width > 0) {\\n              const opacity = canvas.parentNode.style.opacity;\\n              mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\\n              const transform = canvas.style.transform;\\n              // Get the transform parameters from the style's transform matrix\\n              const matrix = transform\\n                .match(/^matrix\\\\(([^\\\\(]*)\\\\)$/)[1]\\n                .split(',')\\n                .map(Number);\\n              // Apply the transform to the export map context\\n              CanvasRenderingContext2D.prototype.setTransform.apply(\\n                mapContext,\\n                matrix\\n              );\\n              path = new Path2D('M 18 17.25 C 15.9289 17.25 14.25 15.5711 14.25 13.5 C 14.25 12.5054 14.6451 11.5516 15.3483 10.8483 C 16.0516 10.1451 17.0054 9.75 18 9.75 C 20.0711 9.75 21.75 11.4289 21.75 13.5 C 21.75 14.4946 21.3549 15.4484 20.6517 16.1517 C 19.9484 16.8549 18.9946 17.25 18 17.25 M 18 3 C 12.201 3 7.5 7.701 7.5 13.5 C 7.5 21.375 18 33 18 33 C 18 33 28.5 21.375 28.5 13.5 C 28.5 7.701 23.799 3 18 3 Z');\\n              mapContext.fillStyle = getComputedStyle(document.querySelector('#{{id}}')).color;\\n              mapContext.drawImage(canvas, 0, 0);\\n              mapContext.translate(157, 117);\\n\\n              mapContext.fill(path);\\n            }\\n          }\\n        );\\n        if (navigator.msSaveBlob) {\\n          // link download attribute does not work on MS browsers\\n          navigator.msSaveBlob(mapCanvas.msToBlob(), 'map.png');\\n        } else {\\n          var img = document.getElementById('img_{{ id }}');\\n          dataURL = mapCanvas.toDataURL('image/png');\\n          map{{id}}.setTarget(null)\\n          map{{id}} = null;\\n          img.src= dataURL\\n        }\\n    });\\n    </script>\\n</div>\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n            <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n            <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n                <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-retry-send-message\\\">{[print(xabber.getString(\\\"chat_screen__message__button_retry_send\\\"))]}</div>\\n            </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message saved-main main {{classlist}}\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-msgs-block\\\"></div>\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{msg_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system\\\"  data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\" data-upload-file-id=\\\"{{images[5].upload_id}}\\\"><img src=\\\"{{images[5].sources[0]}}\\\" title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\" data-upload-file-id=\\\"{{images[i].upload_id}}\\\"><img src=\\\"{{images[i].sources[0]}}\\\" title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"plyr-video-container\\\"  data-provider=\\\"html5\\\" data-src=\\\"{{video_src}}\\\">\\n    <div class=\\\"plyr-video-play\\\">\\n        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n    </div>\\n    <div class=\\\"plyr-video-playing\\\">\\n        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n    </div>\\n    {[ if (thumbnail) {]}\\n        <img class=\\\"plyr-video-poster\\\" src=\\\"{{thumbnail}}\\\" onerror=\\\"this.style.display='none'\\\">\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"chat-message\\\"> {[alert({file_url})]} </div>\";","export default \"<div class=\\\"circle-avatar ground-color-700\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <p class=\\\"contact-name one-line\\\">{[print(xabber.getString(\\\"saved_messages__header\\\"))]}</p>\\n        <p class=\\\"one-liner\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"/>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-chat-pin\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"/>\\n                </svg>\\n            </svg>\\n        </div>\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"image\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n        <div data-screen-name=\\\"video\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"image\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"video\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"chat_bottom__drag_and_drop__text_drop_files_here\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"send_media__btn_upload\\\"))]}</button>\\n                <input type=\\\"file\\\" multiple>\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"add\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"subscription-buttons\\\">\\n    <div class=\\\"subscription-info\\\"></div>\\n    <div class=\\\"button text-color-500 btn-add\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</div>\\n    <div class=\\\"button btn-block\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-allow\\\">{[print(xabber.getString(\\\"chat_allow\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-subscribe\\\">{[print(xabber.getString(\\\"chat_subscribe\\\"))]}</div>\\n    <i class=\\\"mdi-close btn-decline mdi mdi-24px\\\"/>\\n</div>\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info ground-color-100\\\">\\n        <div class=\\\"account-indicator ground-color-700\\\"></div>\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-900 one-line\\\"></p>\\n            <p class=\\\"jid one-line\\\"></p>\\n        </div>\\n        <div class=\\\"button-divider\\\"></div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer2 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info\\\">\\n        <div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n            <div class=\\\"circle-avatar border-color ground-color-700 noselect\\\"></div>\\n        </div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-700 one-line\\\"></p>\\n            <p class=\\\"status-message text-color-700 one-line\\\"></p>\\n            <div class=\\\"roster-info\\\">\\n                <i class=\\\"mdi mdi-account-multiple-outline\\\"></i>\\n                <span class=\\\"counter\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1\\\"></div>\\n    <div class=\\\"roster-account-shrank-footer2\\\"></div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_add_contact__header\\\"))]}</span>\\n        <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n            <div class=\\\"dropdown-button\\\">\\n                <div class=\\\"account-item-wrap\\\">\\n                    <div class=\\\"circle-avatar noselect\\\">\\n                        <img>\\n                    </div>\\n                </div>\\n            </div>\\n            <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"add-contact-jid-step\\\">\\n            <div class=\\\"row name-field\\\">\\n                <div class=\\\"input-field\\\">\\n                    <!--<label for=\\\"new_contact_username\\\">{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}</label>-->\\n                    <input id=\\\"new_contact_username\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}' name=\\\"username\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n        </div>\\n        <!--<div class=\\\"add-contact-contact-step\\\">-->\\n            <!--<div class=\\\"row name-field\\\">-->\\n                <!--<div class=\\\"input-field\\\">-->\\n                    <!--<label for=\\\"new_contact_name\\\">{[print(xabber.getString(\\\"contact_user\\\"))]}</label>-->\\n                    <!--<input id=\\\"new_contact_name\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"contact_user\\\"))]}' name=\\\"contact_name\\\" required>-->\\n                <!--</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"row groups-field\\\">-->\\n                <!--<div class=\\\"field-header\\\">{[print(xabber.getString(\\\"contact_circle\\\"))]}</div>-->\\n                <!--<div class=\\\"groups checkbox-list\\\">-->\\n                <!--</div>-->\\n            <!--</div>-->\\n        <!--</div>-->\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-add\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_add\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div data-jid=\\\"{{jid}}\\\" class=\\\"blocked-contact\\\">\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blocked-jid-switch-{{jid}}\\\"/>\\n        <label for=\\\"blocked-jid-switch-{{jid}}\\\">{{jid}}</label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"status hide-offline\\\"></div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"btn-more  dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-auth-request\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_request_authorization\\\"))]}</span></li>\\n            <li class=\\\"btn-add\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</span></li>\\n            <li class=\\\"btn-delete\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"remove_contact\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-phone btn-voice-call\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-block-helper btn-block\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"left-column\\\">\\n            <div class=\\\"block-wrap subscription-block-wrap\\\">\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_subscription_settings\\\"))]}</span>\\n                </div>\\n                <div class=\\\"subscription-info-wrap\\\">\\n                    <div class=\\\"incoming-subscription-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field incoming-subscription-wrap\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"incoming-subscription\\\"/>\\n                            <label for=\\\"incoming-subscription\\\"></label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"outcoming-subscription-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field incoming-subscription-wrap\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"outcoming-subscription\\\"/>\\n                            <label for=\\\"outcoming-subscription\\\"></label>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"block-wrap vcard\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"right-column\\\">\\n            <div class=\\\"block-wrap resources-block-wrap hidden\\\">\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_info_connected_clients_header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap contact-details-name-wrap one-line\\\"></div>\\n        </div>\\n        <div class=\\\"header-buttons\\\">\\n            <div class=\\\"btn-escape\\\">\\n                <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n                <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n            </div>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>\\n            <span class=\\\"block-name second-text\\\"></span>\\n            <div class=\\\"btn-qr-code\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n            </div>\\n            <div class=\\\"btn-edit\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-unmute-dropdown\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"block-wrap vcard\\\">\\n        </div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n                <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n                <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n                <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <div class=\\\"name-wrap\\\">\\n        <p class=\\\"name one-line\\\"></p>\\n    </div>\\n    <p class=\\\"jid one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"contact_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <p class=\\\"name one-line\\\"></p>\\n    <p class=\\\"jid one-line hidden\\\"></p>\\n    <p class=\\\"status-message one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</span>\\n    </div>\\n    <div class=\\\"edit-contact\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"name-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"subscription-statuses\\\">\\n        <div class=\\\"status-out subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-out\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-to\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-out\\\" class=\\\"status-out-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-out property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscribe\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-in subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-in\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-from\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-in\\\" class=\\\"status-in-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-allow property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-allow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"decline\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-preapproved property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_disallow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-in property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscription\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-description subscription-status-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-delete\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text \\\">\\n                <span class=\\\"text-color-500 dotted-underline text-decoration-color-300 one-line\\\">{[print(xabber.getString(\\\"contact_delete_full\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n        <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-header main-edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-group vcard\\\">\\n        <div class=\\\"info-wrap description-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info description\\\">\\n                    <div class=\\\"edit-group-name value\\\"></div>\\n                    <div class=\\\"edit-group-description value\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"description-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header description-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_properties\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar\\\">\\n                    <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"set-groupchat-avatar-text\\\">{[print(xabber.getString(\\\"groupchat_set_avatar\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-group\\\">\\n            <div class=\\\"edit-group-name-wrap\\\"></div>\\n            <div class=\\\"edit-group-description-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-properties\\\">\\n        <div class=\\\"group-property membership-property\\\">\\n            <div class=\\\"details-icon-wrap\\\" ><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"membership-outline\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_membership\\\"))]}\\n                <span></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n        <div class=\\\"group-property index-property\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_index\\\"))]}\\n                <span></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n        <div class=\\\"edit-button btn-default-restrictions\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n                <span class=\\\"edit-button-value\\\"></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n    </div>\\n    <div class=\\\"membership-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap membership-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"open\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"member-only\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"member-only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_membership_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"index-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap index-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"none\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"local\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"global\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_index_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"bottom-block edit-bottom-block\\\">\\n        <div class=\\\"edit-pictured-buttons\\\">\\n            <div data-value=\\\"invitations\\\" class=\\\"list-variant invitations-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite-outline\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}<span class=\\\"counted\\\"></span></div>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n            </div>\\n            <div data-value=\\\"blocked\\\" class=\\\"list-variant blocked-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}<span class=\\\"counted\\\"></span></div>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n            </div>\\n        </div>\\n        <i class=\\\"details-icon participants-edit-back btn-back-panel mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name-panel\\\"></span>\\n        <span class=\\\"block-name-panel second-text fade-out\\\">{[print(xabber.getString(\\\"groupchat_selected\\\"))]} <span></span></span>\\n        <div class=\\\"btn-add-block\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n        </div>\\n        <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n        <button class=\\\"btn-remove-selected btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}</button>\\n        <div class=\\\"block-wrap participants-edit-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-clear-history-chat\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-delete-group\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"text-color-500 one-line text-decoration-color-300 dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-form\\\">\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"blocking_id\\\" class=\\\"rich-textarea field-input\\\" placeholder=\\\"{[print(xabber.getString('vcard_jabber_id'))]}\\\" type=\\\"text\\\" name=\\\"title\\\">\\n    </div>\\n    <button class=\\\"btn-block-id btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"textarea-header\\\">{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}</div>\\n    <div class=\\\"rich-textarea badge-text\\\" tabindex=\\\"1\\\" contenteditable></div>\\n    <div class=\\\"error\\\"></div>\\n</div>\\n<div class=\\\"panel-footer noselect\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n        <button class=\\\"btn-save btn-flat btn-main\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</div></div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n    <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions__placeholder\\\"))]}</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-default-restrictions-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-default-restrictions-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"restrictions-wrap\\\">\\n    <div class=\\\"restrictions-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n        <span class=\\\"block-name second-text fade-out\\\"></span>\\n        <button class=\\\"btn-default-restrictions-save text-color-500 btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"restrictions-content edit-default-restrictions\\\">\\n        <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n        <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions_right__placeholder\\\"))]}</p>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <textarea class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\"></textarea>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"media-item\\\">\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                </svg>\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-edit-settings\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_settings\\\"))]}</span></li>\\n            <li class=\\\"btn-default-restrictions\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span></li>\\n            <li class=\\\"btn-delete-group\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"btn-leave\\\"><svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n                </div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"head-block\\\">\\n            <div class=\\\"left-column\\\">\\n                <div class=\\\"block-wrap group-chat-properties-wrap\\\"></div>\\n            </div>\\n            <div class=\\\"right-column\\\">\\n                <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n                <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"invitations\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}</a></li>\\n                <li data-value=\\\"blocked\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n        </div>\\n        <div class=\\\"header-buttons\\\">\\n            <div class=\\\"btn-escape\\\">\\n                <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n                <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n            </div>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_group\\\"))]}</span>\\n            <span class=\\\"block-name second-text\\\"></span>\\n            <div class=\\\"btn-qr-code\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n            </div>\\n            <div class=\\\"btn-edit\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"group-edit-preloader\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                    <svg viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                    </svg>\\n                </div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"block-wrap group-chat-properties-wrap vcard\\\"></div>\\n        <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap restrictions-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap participant-view-wrap\\\"></div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs not-edit\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n                <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n                <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n                <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon-wrap\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        </div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap searchable-info-wrap\\\">\\n        <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n        </svg>\\n        <div class=\\\"info searchable\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[if (privacy) { print(xabber.getString(\\\"incognito_group_settings__header\\\"))} else { print(xabber.getString(\\\"public_group_settings__header\\\"))}]}</div></div>\\n<div class=\\\"modal-content group-chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"property-wrap jid-info-wrap\\\">\\n        <div class=\\\"property-header\\\">{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}</div>\\n        <div class=\\\"jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n        </div>\\n        <p id=\\\"anonymous-public\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_public\\\"))]}</p>\\n        <p id=\\\"anonymous-incognito\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_incognito\\\"))]}</p>\\n    </div>\\n    {[fields.forEach(function (field) { if (field.type === 'hidden' || field.type === 'jid-multi') return;]}\\n    <div class=\\\"property-wrap {{field.var}}-field\\\">\\n        {[if (!(field.type == 'fixed' && field.values[0] === \\\"\\\")) {]}\\n        <div class=\\\"property-header\\\">{{field.label}}</div>\\n        {[}]}\\n        {[if (field.type === 'text-single') {]}\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <input value=\\\"{{field.values[0]}}\\\" id=\\\"new_{{field.var}}_value\\\" type=\\\"text\\\" name=\\\"{{field.var}}\\\" placeholder='{[print(xabber.getString(\\\"group_settings_edit__setting_name__hint\\\"))]}' class=\\\"text-field\\\">\\n        </div>\\n        {[} else if (field.type === 'text-multi') {]}\\n        <textarea placeholder='{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}' id=\\\"{{field.var}}\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea rich-textarea\\\">{{field.values[0]}}</textarea>\\n        {[} else if (field.type === 'list-single') { field.options.forEach(function (option) {]}\\n        <div class=\\\"property-radio\\\">\\n            <input {[if (option.value === field.values[0]){]}checked{[}]} id=\\\"{{option.value}}\\\" name=\\\"{{field.var}}\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n            <label class=\\\"{{option.value}}-label\\\" for=\\\"{{option.value}}\\\">{{option.label}}</label>\\n        </div>\\n        {[});} else  if (field.type === 'fixed' && field.values[0] !== \\\"\\\") {]}\\n        <div class=\\\"fixed-field{[if (field.var === 'description'){]} description{[}]}\\\">\\n            <div class=\\\"value\\\">{{field.values[0]}}</div>\\n        </div>\\n        {[}]}\\n        {[if (field.var === 'index'){]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_index__text\\\"))]}</p>\\n        {[} else if (field.var === 'membership') {]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_membership__text\\\"))]}</p>\\n        {[}]}\\n    </div>\\n    {[})]}\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (!all_fixed){]}\\n        <button class=\\\"btn-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        {[}]}\\n        <button class=\\\"btn-cancel btn-flat btn-dark btn-main\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info description short\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"/>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap name-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\">\\n                    <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap searchable-info-wrap\\\">\\n                <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n                </svg>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info searchable\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap model-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info model\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\"><div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>{[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}</div>\\n            {[if (jid) {]}<p class=\\\"jid one-line\\\">{{jid}}</p>{[}]}\\n            </div>\\n        </div>\\n    </td>\\n    <td class=\\\"last-seen\\\">{[if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}</td>\\n    <td class=\\\"role\\\">{[if (role !== 'member') {]}{{role}}{[}]}</td>\\n    <td>\\n        {[if (is_me) {]}\\n        <span style=\\\"font-size:12px\\\" class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</span>\\n        {[} else {]}\\n        <div class=\\\"buttons-wrap\\\">\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n            </div>\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick_and_block\\\"))]}' class=\\\"btn-block\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path fill=\\\"#9e9e9e\\\" d=\\\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12C4,13.85 4.63,15.55 5.68,16.91L16.91,5.68C15.55,4.63 13.85,4 12,4M12,20A8,8 0 0,0 20,12C20,10.15 19.37,8.45 18.32,7.09L7.09,18.32C8.45,19.37 10.15,20 12,20Z\\\" />\\n                </svg>\\n            </div>\\n        </div>\\n        {[}]}\\n    </td>\\n</tr>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\">\\n                <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n                {[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}\\n            </div>\\n                <div class=\\\"bottom-line\\\">\\n                    {[ if (is_me) {]}\\n                    <div class=\\\"online-status text-color-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                    {[}else if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}\\n                </div>\\n            </div>\\n            {[if (role === 'owner' || role === 'admin') {]}\\n            <div class=\\\"participant-buttons-wrap\\\">\\n                <div class=\\\"participant-role\\\">\\n                    {[if (role === 'owner') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star\\\"></i>\\n                    {[}else if (role === 'admin') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star-outline\\\"></i>\\n                    {[}]}\\n                </div>\\n            </div>\\n            {[} else if (!is_me) {]}\\n                <div class=\\\"buttons-wrap\\\">\\n                    <div title='{[print(xabber.getString(\\\"groupchat_edit_member\\\"))]}' class=\\\"btn-edit-member\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n                    </div>\\n                    <!--<div title='{[print(xabber.getString(\\\"mute_chat\\\"))]}' class=\\\"btn-mute\\\">-->\\n                        <!--<i class=\\\"mdi mdi-24px mdi-microphone-off\\\"></i>-->\\n                    <!--</div>-->\\n                    <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n                    </div>\\n                </div>\\n            {[}]}\\n        </div>\\n    </td>\\n</tr>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"insert-emoticon\\\">\\n                <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n            </div>\\n            <div class=\\\"emoticons-panel-wrap\\\">\\n                <div class=\\\"emoticons-panel\\\"></div>\\n                <div class=\\\"emoji-menu\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-status\\\">\\n    <div class=\\\"status-wrap\\\">\\n        <div class=\\\"status status-bulb\\\"></div>\\n        <div class=\\\"status-message\\\"></div>\\n    </div>\\n    <div class=\\\"btn-edit-status\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"group-chat-status-wrap\\\" title=\\\"{[print(xabber.getString('group_settings__properties__tooltip_click_to_set_status'))]}\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status-outline\\\"></svg></div>\\n    <div class=\\\"group-chat-status-border\\\">\\n        <div class=\\\"group-chat-status\\\">\\n            <div class=\\\"status-wrap\\\">\\n                <div class=\\\"status-message dotted-underline\\\"></div>\\n                <div class=\\\"status status-bulb\\\"></div>\\n            </div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap one-line\\\"></div>\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"msg-wrap\\\"><p class=\\\"msg-text\\\"></p></div>\\n        <div class=\\\"panel-footer noselect\\\">\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-join btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n                <button class=\\\"btn-decline btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_decline\\\"))]}</button>\\n                <button class=\\\"btn-block btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"list-item {{status}}-user\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"member-item\\\">\\n        <div class=\\\"circle-avatar\\\"/>\\n        <p title=\\\"{{jid}}\\\" class=\\\"one-line\\\">{{jid}}</p>\\n        {[if (status == 'invitations') {]}\\n        <div title='{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}' class=\\\"revoke-invitation\\\">\\n            {[}else{]}\\n            <div title='{[print(xabber.getString(\\\"groupchat_unblock\\\"))]}' class=\\\"unblock-user\\\">\\n                {[}]}\\n                <i class=\\\"mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"rich-textarea field-input badge-text\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}' contenteditable></div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    {[if (subscription !== null) {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{id}}-buttons-wrap\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n        <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n    </ul>\\n    {[}]}\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n            </svg>\\n            <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>{[}]}\\n            <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n            <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            {[if (jid) {]}<p title=\\\"{{jid}}\\\" class=\\\"jid selectable-text one-line\\\">{{jid}}</p>{[}]}\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n            {[ if (is_blocked_contact) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"action_contact_blocked\\\"))]}</div>\\n            {[}]}\\n            {[if (subscription === null) {]}<p class=\\\"role selectable-text one-line\\\">{[if (blocked) { print(xabber.getString(\\\"groupchat_blocked\\\")); }else{print(xabber.getString(\\\"settings_group_member__placeholder_not_a_member\\\"));}]}</p>{[}]}\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-incognito btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-set-badge-wrap\\\">\\n            <svg class=\\\"btn-set-badge\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M17,3H14V6H10V3H7A2,2 0 0,0 5,5V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V5A2,2 0 0,0 17,3M12,8A2,2 0 0,1 14,10A2,2 0 0,1 12,12A2,2 0 0,1 10,10A2,2 0 0,1 12,8M16,16H8V15C8,13.67 10.67,13 12,13C13.33,13 16,13.67 16,15V16M13,5H11V1H13V5M16,19H8V18H16V19M12,21H8V20H12V21Z\\\" />\\n            </svg>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_badge\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-remove btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n            <div class=\\\"participant-edit-badge hidden\\\"></div>\\n            <div class=\\\"participant-info-text\\\">\\n                <div class=\\\"nickname\\\">\\n                    {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n                </div>\\n                {[ if (is_myself) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                {[}]}\\n\\n            </div>\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-incognito btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-message-text btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap non-active btn-set-visibility-wrap\\\">\\n            <i title=\\\"Feature not yet implemented\\\" class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-eye btn-set-visibility\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_visibility_visible\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi contact-btn mdi-24px mdi-account-remove text-color-500 btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"vcard-wrap vcard\\\">\\n        {[if (jid) {]}\\n        <div class=\\\"info-wrap jid-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">{{jid}}</div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        {[if (role === 'owner' || role === 'admin') {]}\\n        <div class=\\\"info-wrap role-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                {[if (role === 'owner') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star\\\"></i>\\n                {[}else if (role === 'admin') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star-outline\\\"></i>\\n                {[}]}\\n            </div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (role === 'owner') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_owner\\\"))]}\\n                            {[}else if (role === 'admin') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_admin\\\"))]}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_role\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"info-wrap present-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" {[if (blocked) {]}data-svgname=\\\"cancel\\\"{[}else if (!present) {]}data-svgname=\\\"status-outline\\\"{[} else {]}data-svgname=\\\"clock-outline\\\"{[}]}></svg></div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (blocked) {]}\\n                                {[print(xabber.getString(\\\"groupchat_blocked\\\"))]}\\n                            {[}else if (!present) {]}\\n                                {[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}\\n                            {[} else {]}{{pretty_present}}{[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[if (!present) {]}{[print(xabber.getString(\\\"groupchat_status\\\"))]}{[} else {]}{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}{[}]}</div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-wrap\\\">\\n    <div class=\\\"participant-details-info-wrap\\\">\\n    </div>\\n    <div class=\\\"bottom-block participant-bottom-block\\\">\\n        <ul class=\\\"tabs participant-tabs\\\">\\n            <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n            <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n            <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n            <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n        </ul>\\n        <div class=\\\"block-wrap participants-details-media-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"participant-details-edit-wrap edit-wrap\\\">\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar\\\">\\n                    <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"set-groupchat-avatar-text\\\">{[print(xabber.getString(\\\"groupchat_set_avatar\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"participant-details-edit-inputs\\\">\\n            <div class=\\\"edit-participant-name-wrap\\\">\\n            </div>\\n            <div class=\\\"edit-participant-badge-wrap\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"rights-wrap\\\">\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"header\\\">\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"rights-wrap\\\">\\n    </div>\\n</div>\\n\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n        <th>{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}</th>\\n        <th>{[print(xabber.getString(\\\"groupchat_role\\\"))]}</th>\\n        <th></th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<svg class=\\\"pin\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#757575\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\" />\\n</svg>\\n<div class=\\\"msg-wrap\\\">\\n    <div class=\\\"chat-msg-author-wrap\\\">\\n        <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{author}}</div>{[if (fwd_author){]}<svg class=\\\"fwd-chevron\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"#9E9E9E\\\" d=\\\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\\\"/></svg><div class=\\\"chat-msg-author text-color-700 one-line\\\">{{fwd_author}}</div>{[}]}\\n        <div class=\\\"msg-time\\\">{{time}}</div>\\n    </div>\\n    <div class=\\\"chat-msg-content chat-text-content one-line\\\">\\n        {{message}}\\n    </div>\\n</div>\\n<svg title='{[print(xabber.getString(\\\"group_chat__pinned_message__tooltip_unpin\\\"))]}' class=\\\"close\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path class=\\\"close\\\" fill=\\\"#9E9E9E\\\" d=\\\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\\\" />\\n</svg>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        {[ if (is_myself) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n        {[}]}\\n        {[ if (is_myself) {]}\\n        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n        </svg>\\n        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        </div>\\n        {[}]}\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[ if (is_myself) {]}\\n        <div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>\\n        {[}]}\\n        <div title=\\\"{{nickname}}\\\" class=\\\"{{is_myself && 'is-myself'}} nickname one-line\\\">{{nickname}}</div>\\n        <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n        {[ if (is_myself) {]}\\n        <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        <div class=\\\"preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n        <div class=\\\"participant-edit-badge hidden\\\"></div>\\n        <div class=\\\"participant-info-text\\\">\\n            <div class=\\\"nickname\\\">\\n                {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            </div>\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"right-item restriction restriction-{{name}}\\\">\\n    <div class=\\\"right-name\\\">{{pretty_name}}</div>\\n    <div class=\\\"field clickable-field restriction-{{name}}-state switch normal\\\">\\n        <input type=\\\"checkbox\\\" {[if (type === 'fixed') {]} onclick=\\\"return false;\\\" {[}]} class=\\\"filled-in\\\" id=\\\"{{name}}\\\">\\n        <label for=\\\"{{name}}\\\"></label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"select-timer\\\">\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-timer-{{right_name}}\\\">\\n        <div class=\\\"timer-item-wrap\\\"><div data-value=\\\"0\\\" class=\\\"default-value property-value\\\">{[print(xabber.getString(\\\"dialog_rights__button_set_timer\\\"))]}</div></div>\\n    </div>\\n    <div id=\\\"select-timer-{{right_name}}\\\" class=\\\"dropdown-content noselect\\\">\\n        {[expire_options.forEach(function (option) {]}\\n        <div data-value=\\\"{{option.value}}\\\" class=\\\"property-variant\\\">{{option.label}}</div>\\n        {[}.bind(this));]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_set_status__header\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <div class=\\\"loading-status\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </ul>\\n</div>\\n\";","export default \"<li data-value=\\\"{{status.value}}\\\">\\n    <span class=\\\"status-value one-line\\\">{{status.label}}</span>\\n    <span class=\\\"status-bulb\\\" data-status=\\\"{{status.show}}\\\"></span>\\n</li>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_circle_settings__header\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"modal-content\\\">\\n            <div class=\\\"field-wrap group-name\\\">\\n                <div class=\\\"input-field\\\">\\n                    <label for=\\\"{{view.cid}}-group-name\\\">{[print(xabber.getString(\\\"circle_name\\\"))]}</label>\\n                    <input id=\\\"{{view.cid}}-group-name\\\" type=\\\"text\\\" name=\\\"group_name\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"category_offline_contacts\\\"))]}</div>\\n            <div class=\\\"setting-wrap\\\">\\n                <div class=\\\"setting offline radio-button field-wrap\\\">\\n                    <div class=\\\"field radio-field clickable-field\\\">\\n                        <form action=\\\"#\\\">\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                                <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"show_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                                <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"hide_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show-offline-default\\\" />\\n                                <label for=\\\"{{view.cid}}-show-offline-default\\\">{[print(xabber.getString(\\\"dialog_circle_settings__label_common_settings\\\"))]}</label>\\n                            </p>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-dark btn-delete left\\\">{[print(xabber.getString(\\\"circle_remove\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-apply\\\">{[print(xabber.getString(\\\"dialog_circle_settings__button_apply\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"groups-list-wrap\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles\\\"></svg></div>\\n    <div class=\\\"groups\\\">\\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"groups-wrap\\\">\\n    <div class=\\\"checkbox-list\\\">\\n    </div>\\n</div>\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (!checked) {]}\\n        <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n            <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n        </div>\\n    {[}]}\\n{[ } ]}\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n        <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n    </div>\\n{[ } ]}\\n    <div class=\\\"new-group-field-wrap\\\">\\n        <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n            <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n            <label for=\\\"new_group_checkbox\\\"></label>\\n        </div>\\n        <div class=\\\"input-field new-group-name\\\">\\n            <input class=\\\"rich-textarea xabber-input\\\" id=\\\"new-group-name\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n        </div>\\n    </div>\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (checked) {]}\\n        <div data-groupname=\\\"{{name}}\\\" title=\\\"{[print(xabber.getString('contact_tooltip_remove_by_click'))]}\\\" class=\\\"group ground-color-50\\\">\\n            <div>{{name}}</div>\\n        </div>\\n    {[}]}\\n\\n{[ } ]}\\n\";","export default \"<div class=\\\"new-group-field-wrap\\\">\\n    <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n        <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n        <label for=\\\"new_group_checkbox\\\"></label>\\n    </div>\\n    <div class=\\\"input-field new-group-name\\\">\\n        <input class=\\\"xabber-input\\\" id=\\\"new-group-name\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n    </div>\\n</div>\";","export default \"<div class=\\\"gallery-file\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-uniqueid=\\\"{{file.uniqueid}}\\\"  data-file=\\\"{{file.sources[0]}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files))){]}\\n    <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\"\\n         data-mfp-src=\\\"{{file.sources[0]}}\\\"\\n         src=\\\"{[if (file.thumbnail){]}{{file.thumbnail}}{[} else {]}{{file.sources[0]}}{[}]}\\\"\\n         onError=\\\"this.parentElement.className = this.parentElement.className + ' hidden';\\\"\\n    >\\n    {[} else {]}\\n    {[if (svg_icon == 'file-audio' && file.true_voice){]}\\n    <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n        <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-file-audio-container\\\">\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"gallery-file-placeholder-background\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n    </div>\\n    {[}]}\\n    <div class=\\\"gallery-file-title one-line\\\">\\n        {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span>\\n    </div>\\n    {[if (duration && file.true_voice){]}\\n    <div class=\\\"gallery-voice-file-duration\\\">\\n        0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n    </div>\\n    {[}]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"gallery-empty\\\">\\n    <div class=\\\"gallery-empty-icon-wrap\\\">\\n        <i class=\\\"gallery-empty-icon mdi mdi-24px mdi-package-variant\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-empty-text\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"contacts-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n\\n    <div class=\\\"contact-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"contact-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"collapsed-wrap\\\">\\n        <i class=\\\"collapsed-contacts-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n        <div class=\\\"all-contacts-counter\\\"></div>\\n    </div>\\n    <div class=\\\"expanded-wrap\\\">\\n        <div class=\\\"roster-head panel-head\\\">\\n            <div class=\\\"contacts-header\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n            <div class=\\\"roster-button btn-pin\\\"></div>\\n        </div>\\n\\n        <div class=\\\"contact-list-wrap\\\">\\n            <div class=\\\"contact-list\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_offline_contacts\\\"))]}</div>\\n    <div class=\\\"setting offline-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                    <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_show\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                    <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_hide\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_sorting\\\"))]}</div>\\n    <div class=\\\"setting sorting-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"online-first\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-online-first\\\" />\\n                    <label for=\\\"{{view.cid}}-online-first\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_online_first\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"by-alphabet\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-by-alphabet\\\" />\\n                    <label for=\\\"{{view.cid}}-by-alphabet\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_alphabet\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"group-chat-title-wrap hidden\\\">\\n    <div class=\\\"account-indicator ground-color-700\\\"></div>\\n    <div class=\\\"contact-icon\\\">\\n        <img class=\\\"server-icon hidden\\\" src=\\\"./images/BotIcon20x20@2x.png\\\">\\n        <img class=\\\"group-chat-icon hidden\\\" src=\\\"./images/GroupchatIcon20x20@2x.png\\\">\\n    </div>\\n    <div class=\\\"group-chat-name one-line\\\"></div>\\n</div>\\n<div class=\\\"mention-info-wrap\\\">\\n<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"mention-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n    <span class=\\\"msg-counter hidden\\\"></span>\\n</div>\\n</div>\";","export default \"<div class=\\\"mentions-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"mentions-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"mentions-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"mentions_list__placeholder\\\"))]}</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"searching__chat_properties__header\\\"))]}</span>\\n</div>\\n<div class=\\\"chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\">{{name}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value one-line\\\">{{description}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap anonymous-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-comment-question-outline\\\"></i>\\n        <div class=\\\"info anonymous\\\">\\n            <div class=\\\"value one-line\\\">{{privacy}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-lock-open-outline\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\">{{membership}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n<button class=\\\"btn-join-chat btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-indicator ground-color-{{color}}-500\\\"></div>\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-item-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"name one-line\\\">{{jid}}</div>\\n</div>\";","export default \"<div class=\\\"searching-panel\\\">\\n    <div class=\\\"search-wide search-form\\\">\\n        <div class=\\\"account-indicator ground-color-500\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"searching__placeholder_search_by_domain\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"searching-properties-field\\\">\\n        <div class=\\\"dropdown-button\\\" data-visible=\\\"false\\\">\\n            <i class=\\\"mdi mdi-24px mdi-chevron-down arrow\\\"></i>\\n        </div>\\n    </div>\\n    <ul id=\\\"select-searching-properties\\\" class=\\\"selectable-text\\\">\\n        <div class=\\\"account-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_account\\\"))]}</p>\\n            <div class=\\\"account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-searching\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-searching\\\" class=\\\"dropdown-content\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"title-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_title\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_title\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"sorting-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_sort_by\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <button class=\\\"btn-search btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"search\\\"))]}</button>\\n    </ul>\\n</div>\\n<div class=\\\"searching-result-wrap\\\">\\n    <div class=\\\"chats-list-wrap\\\">\\n        <div class=\\\"result-string\\\"></div>\\n        <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div></div>\\n        <div class=\\\"chats-list\\\"></div></div>\\n    <div class=\\\"searching-more\\\"></div>\\n</div>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/account-outline</title>\\n    <g id=\\\"icon/material/account-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,19 L5,19 L5,5 L19,5 M19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 M16.5,16.25 C16.5,14.75 13.5,14 12,14 C10.5,14 7.5,14.75 7.5,16.25 L7.5,17 L16.5,17 M12,12.25 C13.2426407,12.25 14.25,11.2426407 14.25,10 C14.25,8.75735931 13.2426407,7.75 12,7.75 C10.7573593,7.75 9.75,8.75735931 9.75,10 C9.75,11.2426407 10.7573593,12.25 12,12.25 Z\\\" id=\\\"mdi:account-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/address-outline</title>\\n    <g id=\\\"icon/material/address-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/bell-off</title>\\n    <g id=\\\"icon/material/bell-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.84,22.73 L18.11,20 L3,20 L3,19 L5,17 L5,11 C5.00430327,9.85524651 5.28929416,8.72901748 5.83,7.72 L1.11,3 L2.39,1.73 L22.11,21.46 L20.84,22.73 Z M19.0000002,15.8 L19.0000002,11 C19.0007944,7.90366232 16.9672665,5.17466784 14,4.29 C14.0049007,4.19339544 14.0049007,4.09660456 14,4 C14,2.8954305 13.1045695,2 12,2 C10.8954305,2 10,2.8954305 10,4 C9.99507868,4.09660403 9.99507868,4.19339597 10,4.29 C9.385,4.474 8.8,4.743 8.26,5.09 L19.0000002,15.8 Z M12,23 C13.1045695,23 14,22.1045695 14,21 L10,21 C10,22.1045695 10.8954305,23 12,23 Z\\\" id=\\\"mdi:bell-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/bell-sleep</title>\\n    <g id=\\\"icon/material/bell-sleep\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,21 L14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 Z M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M15,9 L9,9 L9,11 L12.24,11 L9,13.7 L9,16 L15,16 L15,14 L11.76,14 L15,11.3 L15,9 Z\\\" id=\\\"mdi:bell-sleep\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/bell</title>\\n    <g id=\\\"icon/material/bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 L14,21 Z\\\" id=\\\"mdi:bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/birthday-outline</title>\\n    <g id=\\\"icon/material/birthday-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6 C13.1045695,6 14,5.1045695 14,4 C14,3.62 13.9,3.27 13.71,2.97 L12,0 L10.29,2.97 C10.1,3.27 10,3.62 10,4 C10,5.1 10.9,6 12,6 M18,9 L13,9 L13,7 L11,7 L11,9 L6,9 C4.34,9 3,10.34 3,12 L3,21 C3,21.55 3.45,22 4,22 L20,22 C20.55,22 21,21.55 21,21 L21,12 C21,10.34 19.66,9 18,9 M19,20 L5,20 L5,17 C5.9,17 6.76,16.63 7.4,16 L8.5,14.92 L9.56,16 C10.87,17.3 13.15,17.29 14.45,16 L15.53,14.92 L16.6,16 C17.24,16.63 18.1,17 19,17 L19,20 M19,15.5 C18.5,15.5 18,15.3 17.65,14.93 L15.5,12.8 L13.38,14.93 C12.64,15.67 11.35,15.67 10.61,14.93 L8.5,12.8 L6.34,14.93 C6,15.29 5.5,15.5 5,15.5 L5,12 C5,11.45 5.45,11 6,11 L18,11 C18.55,11 19,11.45 19,12 L19,15.5 Z\\\" id=\\\"mdi:cake-variant-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/blocked-add</title>\\n    <g id=\\\"icon/material/blocked-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15 L20,18 L23,18 L23,20 L20,20 L20,23 L18,23 L18,20 L15,20 L15,18 L18,18 L18,15 L20,15 Z M12,2 C17.5,2 22,6.5 22,12 C22,12.5859564 21.9489239,13.1605626 21.851004,13.7195862 C21.2621133,13.4007388 20.6141835,13.1778427 19.9277796,13.0712956 C19.9754227,12.7216453 20,12.3635535 20,12 C20,10.1 19.4,8.4 18.3,7.1 L7.1,18.3 C8.5,19.3 10.2,20 12,20 C12.3635535,20 12.7216453,19.9754227 13.0726961,19.9278476 C13.1778427,20.6141835 13.4007388,21.2621133 13.719191,21.8507762 C13.1605626,21.9489239 12.5859564,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 Z M12,4 C7.6,4 4,7.6 4,12 C4,13.7882353 4.53148789,15.399308 5.51109302,16.6664767 L5.7,16.9 L16.9,5.7 C15.6,4.6 13.9,4 12,4 Z\\\" id=\\\"xabber:block-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/blocked</title>\\n    <g id=\\\"badge/icon/blocked\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M12.3574649,4.64359326 L4.64359326,12.3574649 C5.57228864,13.073866 6.73637986,13.5 8,13.5 C11.0375661,13.5 13.5,11.0375661 13.5,8 C13.5,6.73637986 13.073866,5.57228864 12.3574649,4.64359326 Z M8,2.5 C4.96243388,2.5 2.5,4.96243388 2.5,8 C2.5,9.26408031 2.92644441,10.4285592 3.64331784,11.3574212 L11.3574212,3.64331784 C10.4285592,2.92644441 9.26408031,2.5 8,2.5 Z\\\" id=\\\"blocked\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/bot-variant</title>\\n    <g id=\\\"badge/icon/bot-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,3.5 C9.93299662,3.5 11.5,5.06700338 11.5,7 L11.5,9.5 C11.5,11.1568542 9.93299662,12.5 8,12.5 C6.06700338,12.5 4.5,11.1568542 4.5,9.5 L4.5,7 L4.50517886,6.8079648 C4.60487355,4.9642776 6.1314366,3.5 8,3.5 Z M8,5 C6.9456382,5 6.08183488,5.81587779 6.00548574,6.85073766 L6,7 L6,8 C6,8.82842712 6.8954305,9.5 8,9.5 C9.1045695,9.5 10,8.82842712 10,8 L10,7 C10,5.8954305 9.1045695,5 8,5 Z M3.5,6 C3.77614237,6 4,6.22385763 4,6.5 L4,9.5 C4,9.77614237 3.77614237,10 3.5,10 C3.22385763,10 3,9.77614237 3,9.5 L3,6.5 C3,6.22385763 3.22385763,6 3.5,6 Z M12.5,6 C12.7761424,6 13,6.22385763 13,6.5 L13,9.5 C13,9.77614237 12.7761424,10 12.5,10 C12.2238576,10 12,9.77614237 12,9.5 L12,6.5 C12,6.22385763 12.2238576,6 12.5,6 Z\\\" id=\\\"Bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/bot</title>\\n    <g id=\\\"badge/icon/bot\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8.5,2.9 C8.83137085,2.9 9.1,3.16862915 9.1,3.5 C9.1,3.6775201 9.02290618,3.83703397 8.9003726,3.94688754 L8.899,4.999 L11,5 C11.5522847,5 12,5.44771525 12,6 L12,7 C12.2761424,7 12.5,7.22385763 12.5,7.5 L12.5,8.5 C12.5,8.77614237 12.2761424,9 12,9 L12,11 C12,11.5522847 11.5522847,12 11,12 L5,12 C4.44771525,12 4,11.5522847 4,11 L4,9 C3.72385763,9 3.5,8.77614237 3.5,8.5 L3.5,7.5 C3.5,7.22385763 3.72385763,7 4,7 L4,6 C4,5.44771525 4.44771525,5 5,5 L8.1,4.999 L8.0996274,3.94688754 C7.97709382,3.83703397 7.9,3.6775201 7.9,3.5 C7.9,3.16862915 8.16862915,2.9 8.5,2.9 Z M9.5,10 L6.5,10 C6.22385763,10 6,10.2238576 6,10.5 C6,10.7761424 6.22385763,11 6.5,11 L9.5,11 C9.77614237,11 10,10.7761424 10,10.5 C10,10.2238576 9.77614237,10 9.5,10 Z M6.5,6 C6.22385763,6 6,6.22385763 6,6.5 L6,7 L5.5,7 C5.22385763,7 5,7.22385763 5,7.5 C5,7.77614237 5.22385763,8 5.5,8 L6,8 L6,8.5 C6,8.77614237 6.22385763,9 6.5,9 C6.77614237,9 7,8.77614237 7,8.5 L7,8 L7.5,8 C7.77614237,8 8,7.77614237 8,7.5 C8,7.22385763 7.77614237,7 7.5,7 L7,7 L7,6.5 C7,6.22385763 6.77614237,6 6.5,6 Z M9.5,7 C9.22385763,7 9,7.22385763 9,7.5 C9,7.77614237 9.22385763,8 9.5,8 C9.77614237,8 10,7.77614237 10,7.5 C10,7.22385763 9.77614237,7 9.5,7 Z\\\" id=\\\"bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/call-outline</title>\\n    <g id=\\\"icon/material/call-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15.5 C18.8,15.5 17.5,15.3 16.4,14.9 C16.3,14.9 16.2,14.9 16.1,14.9 C15.8,14.9 15.6,15 15.4,15.2 L13.2,17.4 C10.4,15.9 8,13.6 6.6,10.8 L8.8,8.6 C9.1,8.3 9.2,7.9 9,7.6 C8.7,6.5 8.5,5.2 8.5,4 C8.5,3.5 8,3 7.5,3 L4,3 C3.5,3 3,3.5 3,4 C3,13.4 10.6,21 20,21 C20.5,21 21,20.5 21,20 L21,16.5 C21,16 20.5,15.5 20,15.5 L20,15.5 Z M5,5 L6.5,5 C6.6,5.9 6.8,6.8 7,7.6 L5.8,8.8 C5.4,7.6 5.1,6.3 5,5 L5,5 Z M19,19 C17.7,18.9 16.4,18.6 15.2,18.2 L16.4,17 C17.2,17.2 18.1,17.4 19,17.4 L19,19 Z\\\" id=\\\"mdi:phone-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/call</title>\\n    <g id=\\\"icon/material/call\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6.62,10.79 C8.06,13.62 10.38,15.94 13.21,17.38 L15.41,15.18 C15.69,14.9 16.08,14.82 16.43,14.93 C17.55,15.3 18.75,15.5 20,15.5 C20.5522847,15.5 21,15.9477153 21,16.5 L21,20 C21,20.5522847 20.5522847,21 20,21 C10.6111593,21 3,13.3888407 3,4 C3,3.73478351 3.10535684,3.4804296 3.29289322,3.29289322 C3.4804296,3.10535684 3.73478351,3 4,3 L7.5,3 C8.05228475,3 8.5,3.44771525 8.5,4 C8.5,5.25 8.7,6.45 9.07,7.57 C9.18,7.92 9.1,8.31 8.82,8.59 L6.62,10.79 Z\\\" id=\\\"mdi:phone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/camera-retake</title>\\n    <g id=\\\"icon/material/camera-retake\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,5 L17,5 L15,3 L9,3 L7,5 L4,5 C2.8954305,5 2,5.8954305 2,7 L2,19 C2,20.1045695 2.8954305,21 4,21 L20,21 C21.1045695,21 22,20.1045695 22,19 L22,7 C22,5.8954305 21.1045695,5 20,5 M12,18.0000026 C10.92,18.0000026 9.86,17.65 9,17 L10.44,15.56 C10.91,15.85 11.45,16 12,16 C13.6568542,16 15,14.6568542 15,13 C15,11.3431458 13.6568542,10 12,10 C10.74,10 9.6,10.8 9.18,12 L11,12 L8,15 L5,12 L7.1,12 C7.36424064,10.6999079 8.13463224,9.5582575 9.24136868,8.82668596 C10.3481051,8.09511441 11.7003328,7.83367752 13,8.1 C15.5173928,8.61117175 17.2378687,10.9467344 16.9797109,13.5024961 C16.7215532,16.0582577 14.5687655,18.0025816 12,18.0000026 L12,18.0000026 Z\\\" id=\\\"mdi:camera-retake\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/cancel</title>\\n    <g id=\\\"icon/material/cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C9.3478351,22 6.80429597,20.9464316 4.92893219,19.0710678 C3.0535684,17.195704 2,14.6521649 2,12 C2,9.3478351 3.0535684,6.80429597 4.92893219,4.92893219 C6.80429597,3.0535684 9.3478351,2 12,2 M12,3.99999926 C7.581722,3.99999926 4,7.581722 4,11.9999993 C4,13.85 4.63,15.55 5.68,16.91 L16.91,5.68 C15.505295,4.59031127 13.7778124,3.99923779 12,3.99999926 M12,20.0000007 C16.418278,20.0000007 20,16.418278 20,12 C20,10.15 19.37,8.45 18.32,7.09 L7.09,18.32 C8.49470497,19.4096887 10.2221876,20.0007622 12,20.0000007 L12,20.0000007 Z\\\" id=\\\"mdi:cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/channel</title>\\n    <g id=\\\"badge/icon/channel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M6.5,12.5 C6.5,12.7761424 6.27614237,13 6,13 L5,13 C4.72385763,13 4.5,12.7761424 4.5,12.5 L4.5,9.997 L4.02563513,9.99796942 C3.49695533,9.99796942 3.06170233,9.63379568 3.00601829,9.10979782 L3,8.99514074 L3,7 C3,6.44278422 3.50172034,6 4.02563513,6 L8,6 L11,4 L11,12 L8,9.99796942 L6.5,9.997 L6.5,12.5 Z M12,6 C12.7835446,6.37375602 13.2808221,7.14951331 13.2820439,8 C13.2882682,8.85255761 12.7887168,9.63186239 12,10 L12,6 Z\\\" id=\\\"Horn\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/chevron-down</title>\\n    <g id=\\\"icon/material/chevron-down\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:chevron-down\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"7.41 8.58 12 13.17 16.59 8.58 18 10 12 16 6 10\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/chevron-left-variant</title>\\n    <g id=\\\"icon/material/chevron-left-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" transform=\\\"translate(11.500000, 12.000000) scale(-1, 1) translate(-11.500000, -12.000000) \\\" points=\\\"7 18.5 13.5 12 7 5.5 8.25 4.25 16 12 8.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/chevron-right-variant</title>\\n    <g id=\\\"icon/material/chevron-right-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 18.5 14.5 12 8 5.5 9.25 4.25 17 12 9.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/circles</title>\\n    <g id=\\\"icon/material/circles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61510772,4.31938417 C8.28417501,5.13922603 8.07752033,6.02134442 8.01792471,6.94352205 L7.91776678,6.99321105 C5.73983381,8.11301495 4.25,10.3825228 4.25,13 C4.25,16.7279221 7.27207794,19.75 11,19.75 C13.6571359,19.75 15.9556781,18.2146777 17.0568945,15.9827652 C17.9787775,15.9224511 18.8608306,15.7158021 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.85508685 4.80197429,5.36460986 8.61510772,4.31938417 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z M16.5,3 C14.0147186,3 12,5.01471863 12,7.5 C12,9.98528137 14.0147186,12 16.5,12 C18.9852814,12 21,9.98528137 21,7.5 C21,5.01471863 18.9852814,3 16.5,3 Z\\\" id=\\\"xabber:circles\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/clock-outline</title>\\n    <g id=\\\"icon/material/clock-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C6.47,22 2,17.5 2,12 C2,6.4771525 6.4771525,2 12,2 M12.5,7 L12.5,12.25 L17,14.92 L16.25,16.15 L11,13 L11,7 L12.5,7 Z\\\" id=\\\"mdi:clock-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/close</title>\\n    <g id=\\\"icon/material/close\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:close\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/crosshairs-gps</title>\\n    <g id=\\\"icon/material/crosshairs-gps\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs-gps\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/crosshairs-question</title>\\n    <g id=\\\"icon/material/crosshairs-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\\\" id=\\\"mdi:crosshairs-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/crosshairs</title>\\n    <g id=\\\"icon/material/crosshairs\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/description-outline</title>\\n    <g id=\\\"icon/material/description-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.11 3.89,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,5 C21,3.89 20.11,3 19,3 L5,3 M5,5 L19,5 L19,19 L5,19 L5,5 M7,7 L7,9 L17,9 L17,7 L7,7 M7,11 L7,13 L17,13 L17,11 L7,11 M7,15 L7,17 L14,17 L14,15 L7,15 Z\\\" id=\\\"mdi:text-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/devices</title>\\n    <g id=\\\"icon/material/devices\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,11 L18,11 C17.4477153,11 17,11.4477153 17,12 L17,21 C17,21.5522847 17.4477153,22 18,22 L23,22 C23.5522847,22 24,21.5522847 24,21 L24,12 C24,11.4477153 23.5522847,11 23,11 M23,20 L18,20 L18,13 L23,13 L23,20 M20,2 L2,2 C0.89,2 0,2.89 0,4 L0,16 C0,17.1045695 0.8954305,18 2,18 L9,18 L9,20 L7,20 L7,22 L15,22 L15,20 L13,20 L13,18 L15,18 L15,16 L2,16 L2,4 L20,4 L20,9 L22,9 L22,4 C22,2.8954305 21.1045695,2 20,2 Z\\\" id=\\\"mdi:monitor-cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/edit-outline</title>\\n    <g id=\\\"icon/material/edit-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.06,9 L15,9.94 L5.92,19 L5,19 L5,18.08 L14.06,9 M17.66,3 C17.41,3 17.15,3.1 16.96,3.29 L15.13,5.12 L18.88,8.87 L20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18.17,3.09 17.92,3 17.66,3 M14.06,6.19 L3,17.25 L3,21 L6.75,21 L17.81,9.94 L14.06,6.19 Z\\\" id=\\\"mdi:pencil-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/edit</title>\\n    <g id=\\\"icon/material/edit\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18,2.9 17.35,2.9 16.96,3.29 L15.12,5.12 L18.87,8.87 M3,17.25 L3,21 L6.75,21 L17.81,9.93 L14.06,6.18 L3,17.25 Z\\\" id=\\\"mdi:pencil\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/email-outline</title>\\n    <g id=\\\"icon/material/email-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,6 C22,4.9 21.1,4 20,4 L4,4 C2.9,4 2,4.9 2,6 L2,18 C2,19.1 2.9,20 4,20 L20,20 C21.1,20 22,19.1 22,18 L22,6 M20,6 L12,11 L4,6 L20,6 M20,18 L4,18 L4,8 L12,13 L20,8 L20,18 Z\\\" id=\\\"mdi:email-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-audio</title>\\n    <g id=\\\"icon/material/file-audio\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 L12,13.55 C11.41,13.21 10.73,13 10,13 C7.79,13 6,14.79 6,17 C6,19.21 7.79,21 10,21 C12.21,21 14,19.21 14,17 L14,7 L18,7 L18,3 L12,3 Z\\\" id=\\\"mdi:music-note\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-document</title>\\n    <g id=\\\"icon/material/file-document\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L18.5,9 L13,3.5 L13,9 M6,2 L14,2 L20,8 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,4 C4,2.89 4.89,2 6,2 M15,18 L15,16 L6,16 L6,18 L15,18 M18,14 L18,12 L6,12 L6,14 L18,14 Z\\\" id=\\\"mdi:file-document\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-pdf</title>\\n    <g id=\\\"icon/material/file-pdf\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,3 C20.1045695,3 21,3.8954305 21,5 L21,19 C21,20.1045695 20.1045695,21 19,21 L5,21 C3.89,21 3,20.1 3,19 L3,5 C3,3.89 3.89,3 5,3 L19,3 M10.59,10.08 C10.57,10.13 10.3,11.84 8.5,14.77 C8.5,14.77 5,16.58 5.83,17.94 C6.5,19 8.15,17.9 9.56,15.27 C9.56,15.27 11.38,14.63 13.79,14.45 C13.79,14.45 17.65,16.19 18.17,14.34 C18.69,12.5 15.12,12.9 14.5,13.09 C14.5,13.09 12.46,11.75 12,9.89 C12,9.89 13.13,5.95 11.38,6 C9.63,6.05 10.29,9.12 10.59,10.08 M11.4,11.13 C11.43,11.13 11.87,12.33 13.29,13.58 C13.29,13.58 10.96,14.04 9.9,14.5 C9.9,14.5 10.9,12.75 11.4,11.13 M15.32,13.84 C15.9,13.69 17.64,14 17.58,14.32 C17.5,14.65 15.32,13.84 15.32,13.84 M8.26,15.7 C7.73,16.91 6.83,17.68 6.6,17.67 C6.37,17.66 7.3,16.07 8.26,15.7 M11.4,8.76 C11.39,8.71 11.03,6.57 11.4,6.61 C11.94,6.67 11.4,8.71 11.4,8.76 Z\\\" id=\\\"mdi:file-pdf-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-presentation</title>\\n    <g id=\\\"icon/material/file-presentation\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,2 L13,2 L13,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,16 C21,17.1045695 20.1045695,18 19,18 L13,18 L13,21 L17,21 L17,23 L7,23 L7,21 L11,21 L11,18 L5,18 C3.8954305,18 3,17.1045695 3,16 L3,5 C3,3.8954305 3.8954305,3 5,3 L11,3 L11,2 Z M19,5 L5,5 L5,16 L19,16 L19,5 Z M9,9 L9,14 L7,14 L7,9 L9,9 Z M13,7 L13,14 L11,14 L11,7 L13,7 Z M17,11 L17,14 L15,14 L15,11 L17,11 Z\\\" id=\\\"xabber:presentation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-video</title>\\n    <g id=\\\"icon/material/file-video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,9 L16,9 L16,7 L18,7 M18,13 L16,13 L16,11 L18,11 M18,17 L16,17 L16,15 L18,15 M8,9 L6,9 L6,7 L8,7 M8,13 L6,13 L6,11 L8,11 M8,17 L6,17 L6,15 L8,15 M18,3 L18,5 L16,5 L16,3 L8,3 L8,5 L6,5 L6,3 L4,3 L4,21 L6,21 L6,19 L8,19 L8,21 L16,21 L16,19 L18,19 L18,21 L20,21 L20,3 L18,3 Z\\\" id=\\\"mdi:filmstrip\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-zip</title>\\n    <g id=\\\"icon/material/file-zip\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L12,17 L12,15 L10,15 L10,13 L12,13 L12,15 L14,15 M14,9 L12,9 L12,11 L14,11 L14,13 L12,13 L12,11 L10,11 L10,9 L12,9 L12,7 L10,7 L10,5 L12,5 L12,7 L14,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:zip-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file</title>\\n    <g id=\\\"icon/material/file\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L13,3.5 L18.5,9 M6,2 C4.89,2 4,2.89 4,4 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,8 L14,2 L6,2 Z\\\" id=\\\"mdi:file\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/fullname-outline</title>\\n    <g id=\\\"icon/material/fullname-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,8 L14,8 L14,10 L20,10 L20,8 M20,12 L14,12 L14,14 L20,14 L20,12 M20,16 L14,16 L14,18 L20,18 L20,16 M22,4 L14,4 L14,6 L22,6 L22,20 L2,20 L2,6 L10,6 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/fullname</title>\\n    <g id=\\\"icon/material/fullname\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,4 L14,4 L14,7 L10,7 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,18 L14,18 L14,16 L20,16 L20,18 M20,14 L14,14 L14,12 L20,12 L20,14 M20,10 L14,10 L14,8 L20,8 L20,10 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-incognito</title>\\n    <g id=\\\"badge/icon/group-incognito\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,8.00704958 C10.9597902,8.00704958 12.8474987,8.64533875 12.9912872,9.91524601 L13,10.0706662 L13,11.0070496 L10.7492023,11.0070496 L10.75,9.875 C10.75,9.10242267 10.3751421,8.46914598 9.75414509,8.01828756 L9.88054216,8.01011295 L10,8.00704958 Z M7,8 C8.71428571,8 10,8.75 10,9.875 L10,11 L4,11 L4,9.875 C4,8.75 5.28571429,8 7,8 Z M7,8.75 C5.68529006,8.75 4.83790401,9.22876096 4.75645218,9.78636102 L4.75,9.875 L4.75,10.25 L9.25,10.25 L9.25,9.875 C9.25,9.31020891 8.46834945,8.80320839 7.20365867,8.75392032 L7,8.75 Z M10.5,4 C11.3284271,4 12,4.67157288 12,5.5 C12,6.32842712 11.3284271,7 10.5,7 C10.0309641,7 9.61220865,6.78472342 9.33715065,6.44758714 C9.59948544,6.02690214 9.75,5.53102835 9.75,5 C9.75,4.7455993 9.71545544,4.49926692 9.65080116,4.2654377 C9.89064982,4.09777196 10.183907,4 10.5,4 Z M7,3 C8.1045695,3 9,3.8954305 9,5 C9,6.1045695 8.1045695,7 7,7 C5.8954305,7 5,6.1045695 5,5 C5,3.8954305 5.8954305,3 7,3 Z M7,3.75 C6.30964406,3.75 5.75,4.30964406 5.75,5 C5.75,5.69035594 6.30964406,6.25 7,6.25 C7.69035594,6.25 8.25,5.69035594 8.25,5 C8.25,4.30964406 7.69035594,3.75 7,3.75 Z\\\" id=\\\"incognito\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-invite</title>\\n    <g id=\\\"badge/icon/group-invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.8,5 L11.2,5 C11.64,5 12,5.33981818 12,5.76363636 L12,10.2363636 C12,10.6581084 11.6418278,11 11.2,11 L4.8,11 C4.3581722,11 4,10.6581084 4,10.2363636 L4,5.76363636 C4,5.33981818 4.356,5 4.8,5 Z M4.57142857,5.81818182 L4.57142857,6.90909091 L8,9.09090909 L11.4285714,6.90909091 L11.4285714,5.81818182 L8,8 L4.57142857,5.81818182 Z\\\" id=\\\"invitation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-private</title>\\n    <g id=\\\"badge/icon/group-private\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5.54386908,9.00001406 C4.74833179,9.00015914 4.03626356,9.50273575 3.75677818,10.2613541 C3.4772928,11.0199725 3.68898239,11.8755937 4.28805949,12.4087226 C4.88713659,12.9418515 5.74800895,13.0407214 6.44860686,12.6568582 C7.14920477,12.272995 7.54265288,11.4868729 7.43605089,10.683913 C7.61005089,10.6450242 7.79823271,10.6139132 7.99841453,10.6144687 C8.19859635,10.6155798 8.38677817,10.6450242 8.56077817,10.683913 C8.45417618,11.4868729 8.84762429,12.272995 9.5482222,12.6568582 C10.2488201,13.0407214 11.1096925,12.9418515 11.7087696,12.4087226 C12.3078467,11.8755937 12.5195363,11.0199725 12.2400509,10.2613541 C11.9605655,9.50273575 11.2484973,9.00015914 10.45296,9.00001406 C9.6733377,8.99699984 8.97079939,9.47872777 8.68023271,10.2155808 C8.45968538,10.1448214 8.22964016,10.109582 7.99841453,10.1111366 C7.69841453,10.1111366 7.49059635,10.1616921 7.31659635,10.2155808 C7.02602967,9.47872777 6.32349136,8.99699984 5.54386908,9.00001406 L5.54386908,9.00001406 Z M5.54386908,9.55558244 C6.29698464,9.55558244 6.90750544,10.1774076 6.90750544,10.9444679 C6.90750544,11.7115282 6.29698464,12.3333534 5.54386908,12.3333534 C4.79075351,12.3333534 4.18023271,11.7115282 4.18023271,10.9444679 C4.18023271,10.1774076 4.79075351,9.55558244 5.54386908,9.55558244 Z M10.45296,9.55558244 C11.2060756,9.55558244 11.8165963,10.1774076 11.8165963,10.9444679 C11.8165963,11.7115282 11.2060756,12.3333534 10.45296,12.3333534 C9.69984442,12.3333534 9.08932362,11.7115282 9.08932362,10.9444679 C9.08932362,10.1774076 9.69984442,9.55558244 10.45296,9.55558244 Z M8,7 C6.512,7 4.39345455,7.268 4.25,7.297 C3.78243762,7.41026088 3.32163107,7.54577794 2.86945455,7.703 C2.31418182,7.877 2,8 2,8 L14,8 C14,8 13.6858182,7.877 13.1305455,7.703 C12.6727414,7.54549536 12.2062901,7.40997808 11.7330909,7.297 C11.7330909,7.297 9.54036364,7 8,7 Z M8,3 C6.53163636,3.0015 5.49418182,3.6095 5.49418182,3.6095 L4.72727273,6 L11.2727273,6 L10.5058182,3.6095 C10.5058182,3.6095 9.46836364,3.001 8,3 Z\\\" id=\\\"private\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-public</title>\\n    <g id=\\\"badge/icon/group-public\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.500501,8 C11.3287776,8 11.995,7.328 11.995,6.5 C11.995,5.672 11.3287776,5 10.500501,5 C9.67222445,5 9,5.672 9,6.5 C9,7.328 9.67222445,8 10.500501,8 Z M6.5,7 C7.33,7 7.995,6.33 7.995,5.5 C7.995,4.67 7.33,4 6.5,4 C5.67,4 5,4.67 5,5.5 C5,6.33 5.67,7 6.5,7 Z M10.5,9 C9.66818182,9 8,9.46 8,10.375 L8,10.9989178 L13,10.9989178 L13,10.375 C13,9.46 11.3318182,9 10.5,9 Z M6.50474946,7.99186821 C4.77490105,7.99186821 3,8.585 3,9.75 L3,11 L7,11 L7,10 C7,9.24841871 7.73828683,8.72461975 8.70884076,8.35916117 C8.08932051,8.04219075 6.85693708,7.99186821 6.50474946,7.99186821 Z\\\" id=\\\"xabber:group-public\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/history</title>\\n    <g id=\\\"icon/material/history\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.5,8 L12,8 L12,13 L16.28,15.54 L17,14.33 L13.5,12.25 L13.5,8 M13,3 C8.02943725,3 4,7.02943725 4,12 L1,12 L4.96,16.03 L9,12 L6,12 C6,8.13400675 9.13400675,5 13,5 C16.8659932,5 20,8.13400675 20,12 C20,15.8659932 16.8659932,19 13,19 C11.07,19 9.32,18.21 8.06,16.94 L6.64,18.36 C8.31963558,20.0581063 10.6115589,21.0094707 13,21.00007 C17.9705627,21.00007 22,16.9705627 22,12 C22,7.02943725 17.9705627,3 13,3\\\" id=\\\"mdi:history\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\\\" />\";","export default \"<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path5\\\"\\n     d=\\\"m 5.2462478,6.4309194 c 0,0 0.2534497,0.5323027 1.6195791,-0.2126538 C 9.2126105,5.0708821 11.67437,4.0095 14.785441,5.5382202 17.009904,6.7924 17.27733,10.360371 13.864368,13.369134 c -1.679464,1.609494 -1.887868,4.226006 -1.825254,4.993295 -0.128246,1.561168 0.259655,1.837265 0.594912,1.938246 0.335257,0.100981 1.461445,-0.04379 1.305934,-1.000087 -0.193265,-1.461227 -0.06192,-2.413209 0.855267,-4.044829 0.758763,-1.162942 2.123721,-1.871086 3.273016,-4.211889 C 18.840748,9.1444158 18.891207,6.503336 17.479328,4.894053 16.152845,3.3821059 14.670099,2.4131656 12.422552,2.4210559 9.8716741,2.446853 8.13424,2.8374168 6.751418,3.5206351 4.5012489,4.730324 4.2973099,4.8714754 5.2462478,6.4309194 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cccccscccsccc\\\" />\\n<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path7\\\"\\n     d=\\\"M 10.393116,10.546893 C 10.179036,9.8582024 9.6418168,9.5037588 9.1268128,9.5037588 c -0.686671,0 -1.6386388,0.1373222 -1.6546508,1.5832442 0,0 0.5308711,2.944458 1.5235151,2.93234 0.364542,-0.004 0.7403587,-0.28287 0.017892,-1.856769 0,0 -0.4395592,-0.974022 -0.1380497,-1.193301 0.5440269,-0.394487 0.5911749,0.418754 0.9156116,1.069105 0.674692,0.328471 1.06244,-0.702948 1.201092,-0.722298 1.026124,-0.142524 -0.130551,1.372622 -0.2386,1.539241 -0.467844,0.515308 -1.3020963,1.251877 -0.614252,1.612091 0.864686,0.205725 1.292561,-0.492065 1.464229,-0.658684 0.2663,-0.37565 0.549622,-0.820112 0.721289,-1.133153 0.877971,-1.468145 0.834305,-2.8722146 -0.558429,-2.9011876 -0.515004,0 -0.814918,0.2302366 -1.373344,0.7725056 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cscccccccccccc\\\" />\\n<path\\n     sodipodi:nodetypes=\\\"cssccsccccssccssc\\\"\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path9\\\"\\n     d=\\\"m 6.8360046,14.735541 c -0.2526865,-0.134842 -0.341246,-0.148685 -0.556785,-0.125105 -0.4758127,0.05205 -0.712045,0.475393 -0.6165306,0.901178 0.2727696,1.215955 1.0359093,1.641989 2.25985,2.132257 1.2530682,0.41756 2.475738,0.396638 3.398493,-0.0757 0.298412,-0.05064 0.287556,-0.683612 0.292618,-1.034981 0.006,-0.414484 -0.327129,-0.528727 -0.651454,-0.493243 -0.82369,0.222079 -0.891361,0.338578 -1.882259,0.248554 -1.1996954,-0.369888 -1.6284239,-0.589257 -2.2439324,-1.55296 z m -0.596727,2.884244 c -0.1641271,-0.121 -0.2921232,-0.08347 -0.442594,-0.06701 -0.3893935,0.0426 -0.727761,0.382603 -0.6463412,0.81143 0.2795655,1.472433 3.2776659,2.179707 4.6014193,2.113323 1.0831623,-0.05044 1.6865703,-0.273231 1.7646093,-1.16247 -0.03364,-0.366114 -0.266964,-0.659232 -0.720411,-0.609623 -0.432095,0.04727 -0.373883,0.118182 -1.0438868,0.191485 C 8.563559,19.026954 7.5842504,18.723225 6.2392776,17.619785 z\\\"\\n     clip-rule=\\\"evenodd\\\" />\\n\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\" />\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/id-outline</title>\\n    <g id=\\\"icon/material/id-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C15.8659932,2 19,5.13400675 19,9 C19,11.38 17.81,13.47 16,14.74 L16,17 C16,17.5522847 15.5522847,18 15,18 L9,18 C8.44771525,18 8,17.5522847 8,17 L8,14.74 C6.19,13.47 5,11.38 5,9 C5,5.13400675 8.13400675,2 12,2 M9,21 L9,20 L15,20 L15,21 C15,21.5522847 14.5522847,22 14,22 L10,22 C9.44771525,22 9,21.5522847 9,21 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,11.05 8.23,12.81 10,13.58 L10,16 L14,16 L14,13.58 C15.77,12.81 17,11.05 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:lightbulb-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/image</title>\\n    <g id=\\\"icon/material/image\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.5,13.5 L11,16.5 L14.5,12 L19,18 L5,18 M21,19 L21,5 C21,3.89 20.1,3 19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 Z\\\" id=\\\"mdi:image\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/index</title>\\n    <g id=\\\"icon/material/index\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C7.581722,2 4,5.581722 4,10 C4,14.03 7,17.42 11,17.93 L11,19 L10,19 C9.44771525,19 9,19.4477153 9,20 L2,20 L2,22 L9,22 C9,22.5522847 9.44771525,23 10,23 L14,23 C14.5522847,23 15,22.5522847 15,22 L22,22 L22,20 L15,20 C15,19.4477153 14.5522847,19 14,19 L13,19 L13,17.93 C17,17.43 20,14.03 20,10 C20,5.581722 16.418278,2 12,2 M12,4 C12,4 12.74,5.28 13.26,7 L10.74,7 C11.26,5.28 12,4 12,4 M9.77,4.43 C9.5,4.93 9.09,5.84 8.74,7 L6.81,7 C7.5,5.84 8.5,4.93 9.77,4.43 M14.23,4.44 C15.5,4.94 16.5,5.84 17.19,7 L15.26,7 C14.91,5.84 14.5,4.93 14.23,4.44 M6.09,9 L8.32,9 C8.28,9.33 8.25,9.66 8.25,10 C8.25,10.34 8.28,10.67 8.32,11 L6.09,11 C5.96891098,10.3388318 5.96891098,9.66116821 6.09,9 M10.32,9 L13.68,9 C13.72,9.33 13.75,9.66 13.75,10 C13.75,10.34 13.72,10.67 13.68,11 L10.32,11 C10.28,10.67 10.25,10.34 10.25,10 C10.25,9.66 10.28,9.33 10.32,9 M15.68,9 L17.91,9 C18.031089,9.66116821 18.031089,10.3388318 17.91,11 L15.68,11 C15.72,10.67 15.75,10.34 15.75,10 C15.75,9.66 15.72,9.33 15.68,9 M6.81,13 L8.74,13 C9.09,14.16 9.5,15.07 9.77,15.56 C8.5,15.06 7.5,14.16 6.81,13 M10.74,13 L13.26,13 C12.74,14.72 12,16 12,16 C12,16 11.26,14.72 10.74,13 M15.26,13 L17.19,13 C16.5,14.16 15.5,15.07 14.23,15.57 C14.5,15.07 14.91,14.16 15.26,13 Z\\\" id=\\\"mdi:wan\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/information-outline</title>\\n    <g id=\\\"icon/material/information-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,9 L13,9 L13,7 L11,7 M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M11,17 L13,17 L13,11 L11,11 L11,17 Z\\\" id=\\\"mdi:information-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/invite-outline</title>\\n    <g id=\\\"icon/material/invite-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 L15.77,4.36 L19,4.36 L19,6.36 L21.03,7.65 C21.5653846,7.97307692 21.9388757,8.53473373 21.993168,9.19339554 L22,9.36 L22,19.36 C22,20.4195455 21.1890702,21.2786364 20.1499371,21.3545464 L20,21.36 L4,21.36 C2.9456382,21.36 2.08183488,20.5441222 2.00548574,19.5092623 L2,19.36 L2,9.36 C2,8.68615385 2.33230769,8.09751479 2.83961766,7.73565772 L5,6.36 L5,4.36 L8.23,4.36 L12,2 Z M20,11.36 L12,16.36 L4,11.36 L4,19.36 L20,19.36 L20,11.36 Z M17,6.36 L7,6.36 L7,11.24 L12,14.36 L17,11.24 L17,6.36 Z M16,9.86 L16,11.36 L8,11.36 L8,9.86 L16,9.86 Z M19,8.74 L19,9.99 L20,9.36 L19,8.74 Z M5,8.74 L4,9.36 L5,9.99 L5,8.74 Z M16,7.36 L16,8.86 L8,8.86 L8,7.36 L16,7.36 Z\\\" id=\\\"xabber:invite-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/job-outline</title>\\n    <g id=\\\"icon/material/job-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,6 C20.58,6 21.05,6.2 21.42,6.59 C21.8,7 22,7.45 22,8 L22,19 C22,19.55 21.8,20 21.42,20.41 C21.05,20.8 20.58,21 20,21 L4,21 C3.42,21 2.95,20.8 2.58,20.41 C2.2,20 2,19.55 2,19 L2,8 C2,7.45 2.2,7 2.58,6.59 C2.95,6.2 3.42,6 4,6 L8,6 L8,4 C8,3.42 8.2,2.95 8.58,2.58 C8.95,2.2 9.42,2 10,2 L14,2 C14.58,2 15.05,2.2 15.42,2.58 C15.8,2.95 16,3.42 16,4 L16,6 L20,6 M4,8 L4,19 L20,19 L20,8 L4,8 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/link</title>\\n    <g id=\\\"icon/material/link\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.9,12 C3.9,10.29 5.29,8.9 7,8.9 L11,8.9 L11,7 L7,7 C4.23857625,7 2,9.23857625 2,12 C2,14.7614237 4.23857625,17 7,17 L11,17 L11,15.1 L7,15.1 C5.29,15.1 3.9,13.71 3.9,12 M8,13 L16,13 L16,11 L8,11 L8,13 M17,7 L13,7 L13,8.9 L17,8.9 C18.71,8.9 20.1,10.29 20.1,12 C20.1,13.71 18.71,15.1 17,15.1 L13,15.1 L13,17 L17,17 C19.7614237,17 22,14.7614237 22,12 C22,9.23857625 19.7614237,7 17,7 Z\\\" id=\\\"mdi:link\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/map-marker-outline</title>\\n    <g id=\\\"icon/material/map-marker-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/map-marker</title>\\n    <g id=\\\"icon/material/map-marker\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/membership-outline</title>\\n    <g id=\\\"icon/material/membership-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M7.07,18.28 C7.5,17.38 10.12,16.5 12,16.5 C13.88,16.5 16.5,17.38 16.93,18.28 C15.5293835,19.3960251 13.7908746,20.0025637 12,20 C10.14,20 8.43,19.36 7.07,18.28 M18.36,16.83 C16.93,15.09 13.46,14.5 11.9999999,14.5 C10.54,14.5 7.07,15.09 5.64,16.83 C4.57618516,15.4446232 3.99966563,13.7467029 3.99999985,12 C3.99999985,7.59 7.59,4 11.9999999,4 C16.41,4 19.9999999,7.59 19.9999999,12 C19.9999999,13.82 19.38,15.5 18.36,16.83 M12,6 C10.06,6 8.5,7.56 8.5,9.5 C8.5,11.44 10.06,13 12,13 C13.94,13 15.5,11.44 15.5,9.5 C15.5,7.56 13.94,6 12,6 M12,11 C11.1715729,11 10.5,10.3284271 10.5,9.5 C10.5,8.67157288 11.1715729,8 12,8 C12.8284271,8 13.5,8.67157288 13.5,9.5 C13.5,10.3284271 12.8284271,11 12,11 Z\\\" id=\\\"mdi:account-circle-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/message-bookmark-outline</title>\\n    <g id=\\\"icon/material/message-bookmark-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.9,2 2,2.9 2,4 L2,22 L6,18 L20,18 C21.1,18 22,17.1 22,16 L22,4 C22,2.9 21.1,2 20,2 M20,16 L5.2,16 L4,17.2 L4,4 L20,4 L20,16 M18,14 L18,6 L13,6 L13,14 L15.5,12.5 L18,14\\\" id=\\\"mdi:message-bookmark-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"message-group-variant2\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M14.2526206,6 L21.4947588,6 C22.3260806,6 23,6.6752491 23,7.49824524 L23,24 L19,20 L8.50524116,20 C7.67391942,20 7,19.3247509 7,18.5017548 L7,17 L17.0005775,17 C18.6556493,17 20,15.6542582 20,13.9942017 L20,6 L14.2526206,6 Z\\\" id=\\\"Message2\\\"></path>\\n        <path d=\\\"M1,2.49824524 C1,1.67078724 1.66642015,1 2.50863659,1 L16.4913634,1 C17.3245604,1 18,1.6752491 18,2.49824524 L18,13.5017548 C18,14.3292128 17.3335799,15 16.4913634,15 L5,15 L1,19 L1,2.49824524 Z M4,10 L4,12 L12,12 L12,10 L4,10 Z M4,7 L4,9 L15,9 L15,7 L4,7 Z M4,4 L4,6 L15,6 L15,4 L4,4 Z\\\" id=\\\"Combined-Shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/minus</title>\\n    <g id=\\\"icon/material/minus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:minus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 13 5 13 5 11 19 11\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/mobile</title>\\n    <g id=\\\"badge/icon/mobile\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,1 C11.1045695,1 12,1.8954305 12,3 L12,12 C12,13.1045695 11.1045695,14 10,14 L6,14 C4.8954305,14 4,13.1045695 4,12 L4,3 C4,1.8954305 4.8954305,1 6,1 L10,1 Z M10,4 L6,4 L6,10 L10,10 L10,4 Z\\\" id=\\\"Mobile\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/palette</title>\\n    <g id=\\\"icon/material/palette\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.5,12 C16.6715729,12 16,11.3284271 16,10.5 C16,9.67157288 16.6715729,9 17.5,9 C18.3284271,9 19,9.67157288 19,10.5 C19,11.3284271 18.3284271,12 17.5,12 M14.5,8 C13.6715729,8 13,7.32842712 13,6.5 C13,5.67157288 13.6715729,5 14.5,5 C15.3284271,5 16,5.67157288 16,6.5 C16,7.32842712 15.3284271,8 14.5,8 M9.5,8 C8.67157288,8 8,7.32842712 8,6.5 C8,5.67157288 8.67157288,5 9.5,5 C10.3284271,5 11,5.67157288 11,6.5 C11,7.32842712 10.3284271,8 9.5,8 M6.5,12 C5.67157288,12 5,11.3284271 5,10.5 C5,9.67157288 5.67157288,9 6.5,9 C7.32842712,9 8,9.67157288 8,10.5 C8,11.3284271 7.32842712,12 6.5,12 M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C12.8284271,21 13.5,20.3284271 13.5,19.5 C13.5,19.11 13.35,18.76 13.11,18.5 C12.88,18.23 12.73,17.88 12.73,17.5 C12.73,16.6715729 13.4015729,16 14.23,16 L16,16 C18.7614237,16 21,13.7614237 21,11 C21,6.58 16.97,3 12,3 L12,3 Z\\\" id=\\\"mdi:palette\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/pause</title>\\n    <g id=\\\"icon/material/pause\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,19 L18,19 L18,5 L14,5 M6,19 L10,19 L10,5 L6,5 L6,19 Z\\\" id=\\\"mdi:pause\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/picture-in-picture-bottom-right</title>\\n    <g id=\\\"icon/material/picture-in-picture-bottom-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,11 L11,11 L11,17 L19,17 L19,11 M23,19 L23,5 C23,3.88 22.1,3 21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 M21,19 L3,19 L3,4.97 L21,4.97 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-bottom-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/picture-in-picture-minimize</title>\\n    <g id=\\\"icon/material/picture-in-picture-minimize\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,3 C22.1,3 23,3.88 23,5 L23.0008195,11.8103588 C22.4253055,11.2578757 21.7483079,10.8103075 21.000576,10.4984036 L21,4.97 L3,4.97 L3,19 L12.4984036,19.000576 C12.8103075,19.7483079 13.2578757,20.4253055 13.8103588,21.0008195 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L21,3 Z M21,13 L21,14.5 L17.5,14.5 L22,19 L21,20 L16.5,15.5 L16.5,19 L15,19 L15,13 L21,13 Z M13,7 L13,13 L5,13 L5,7 L13,7 Z\\\" id=\\\"xabber:picture-in-picture-minimize\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/picture-in-picture-top-right</title>\\n    <g id=\\\"icon/material/picture-in-picture-top-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,7 L11,7 L11,13 L19,13 L19,7 M21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 L23,5 C23,3.8954305 22.1045695,3 21,3 M21,19 L3,19 L3,5 L21,5 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-top-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/pinned-circle-small</title>\\n    <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/pinned</title>\\n    <g id=\\\"icon/material/pinned\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5228475,2 22,6.4771525 22,12 C22,17.5228475 17.5228475,22 12,22 C6.4771525,22 2,17.5228475 2,12 C2,6.4771525 6.4771525,2 12,2 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M14.5,6 L18,9.5 L17,10.5 L16.5,10 L14.5,13 L15.5,14.5 L14,16 L11.5,13.5 L8.5,16.5 L7.5,16.5 L7.5,15.5 L10.5,12.5 L8,10 L9.5,8.5 L11,9.5 L14,7.5 L13.5,7 L14.5,6 Z\\\" id=\\\"xabber:pinned\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/play</title>\\n    <g id=\\\"icon/material/play\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:play\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 5 8 19 19 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-float</title>\\n    <g id=\\\"icon/material/player-float\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,3 L13,5 L3,5 L3,19 L20,19 L20,11 L22,11 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L13,3 Z M13,9 L13,15 L11.5,15 L11.5,11.5 L6.5,16.5 L5.5,15.5 L10.5,10.5 L7,10.5 L7,9 L13,9 Z M22,2 C23.1045695,2 24,2.8954305 24,4 L24,7 C24,8.1045695 23.1045695,9 22,9 L17,9 C15.8954305,9 15,8.1045695 15,7 L15,4 C15,2.8954305 15.8954305,2 17,2 L22,2 Z\\\" id=\\\"xabber:player-float\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-full</title>\\n    <g id=\\\"icon/material/player-full\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.8101336,2.99941507 C14.2575941,3.5750451 13.8100058,4.25218587 13.4981326,5.00007375 L3,5 L3,19 L20,19 L20.000332,13.9810299 C20.7043777,13.9274362 21.3770687,13.7616821 22.000576,13.5015964 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L14.8101336,2.99941507 Z M12,10 C13.1045695,10 14,10.8954305 14,12 L14,15 C14,16.1045695 13.1045695,17 12,17 L7,17 C5.8954305,17 5,16.1045695 5,15 L5,12 C5,10.8954305 5.8954305,10 7,10 L12,10 Z M22,4 L23,5 L18.5,9.5 L22,9.5 L22,11 L16,11 L16,5 L17.5,5 L17.5,8.5 L22,4 Z\\\" id=\\\"xabber:picture-in-picture-full\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-mini-variant</title>\\n    <g id=\\\"icon/material/player-mini-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini-variant\\\" fill=\\\"#000000\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-mini</title>\\n    <g id=\\\"icon/material/player-mini\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,8 L17,9.5 L13.5,9.5 L18,14 L17,15 L12.5,10.5 L12.5,14 L11,14 L11,8 L17,8 Z M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/plus</title>\\n    <g id=\\\"icon/material/plus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:plus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 12.998 13 12.998 13 18.998 11 18.998 11 12.998 5 12.998 5 10.998 11 10.998 11 4.998 13 4.998 13 10.998 19 10.998\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <symbol id=\\\"plyr-airplay\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16 1H2a1 1 0 00-1 1v10a1 1 0 001 1h3v-2H3V3h12v8h-2v2h3a1 1 0 001-1V2a1 1 0 00-1-1z\\\"></path><path d=\\\"M4 17h10l-5-6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-off\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\" fill-opacity=\\\".5\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-on\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\"></path></symbol>\\n    <symbol id=\\\"plyr-download\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9 13c.3 0 .5-.1.7-.3L15.4 7 14 5.6l-4 4V1H8v8.6l-4-4L2.6 7l5.7 5.7c.2.2.4.3.7.3zm-7 2h14v2H2z\\\"></path></symbol><symbol id=\\\"plyr-enter-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10 3h3.6l-4 4L11 8.4l4-4V8h2V1h-7zM7 9.6l-4 4V10H1v7h7v-2H4.4l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-exit-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 12h3.6l-4 4L2 17.4l4-4V17h2v-7H1zM16 .6l-4 4V1h-2v7h7V6h-3.6l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-fast-forward\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M7.875 7.171L0 1v16l7.875-6.171V17L18 9 7.875 1z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-vimeo\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M17 5.3c-.1 1.6-1.2 3.7-3.3 6.4-2.2 2.8-4 4.2-5.5 4.2-.9 0-1.7-.9-2.4-2.6C5 10.9 4.4 6 3 6c-.1 0-.5.3-1.2.8l-.8-1c.8-.7 3.5-3.4 4.7-3.5 1.2-.1 2 .7 2.3 2.5.3 2 .8 6.1 1.8 6.1.9 0 2.5-3.4 2.6-4 .1-.9-.3-1.9-2.3-1.1.8-2.6 2.3-3.8 4.5-3.8 1.7.1 2.5 1.2 2.4 3.3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-youtube\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.8 5.8c-.2-1.3-.8-2.2-2.2-2.4C12.4 3 9 3 9 3s-3.4 0-5.6.4C2 3.6 1.3 4.5 1.2 5.8 1 7.1 1 9 1 9s0 1.9.2 3.2c.2 1.3.8 2.2 2.2 2.4C5.6 15 9 15 9 15s3.4 0 5.6-.4c1.4-.3 2-1.1 2.2-2.4.2-1.3.2-3.2.2-3.2s0-1.9-.2-3.2zM7 12V6l5 3-5 3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-muted\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M12.4 12.5l2.1-2.1 2.1 2.1 1.4-1.4L15.9 9 18 6.9l-1.4-1.4-2.1 2.1-2.1-2.1L11 6.9 13.1 9 11 11.1zM3.786 6.008H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pause\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M6 1H3c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zm6 0c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1h-3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pip\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M13.293 3.293L7.022 9.564l1.414 1.414 6.271-6.271L17 7V1h-6z\\\"></path><path d=\\\"M13 15H3V5h5V3H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1v-6h-2v5z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-play\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.562 8.1L3.87.225c-.818-.562-1.87 0-1.87.9v15.75c0 .9 1.052 1.462 1.87.9L15.563 9.9c.584-.45.584-1.35 0-1.8z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-restart\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9.7 1.2l.7 6.4 2.1-2.1c1.9 1.9 1.9 5.1 0 7-.9 1-2.2 1.5-3.5 1.5-1.3 0-2.6-.5-3.5-1.5-1.9-1.9-1.9-5.1 0-7 .6-.6 1.4-1.1 2.3-1.3l-.6-1.9C6 2.6 4.9 3.2 4 4.1 1.3 6.8 1.3 11.2 4 14c1.3 1.3 3.1 2 4.9 2 1.9 0 3.6-.7 4.9-2 2.7-2.7 2.7-7.1 0-9.9L16 1.9l-6.3-.7z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-rewind\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10.125 1L0 9l10.125 8v-6.171L18 17V1l-7.875 6.171z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-settings\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.135 7.784a2 2 0 01-1.23-2.969c.322-.536.225-.998-.094-1.316l-.31-.31c-.318-.318-.78-.415-1.316-.094a2 2 0 01-2.969-1.23C10.065 1.258 9.669 1 9.219 1h-.438c-.45 0-.845.258-.997.865a2 2 0 01-2.969 1.23c-.536-.322-.999-.225-1.317.093l-.31.31c-.318.318-.415.781-.093 1.317a2 2 0 01-1.23 2.969C1.26 7.935 1 8.33 1 8.781v.438c0 .45.258.845.865.997a2 2 0 011.23 2.969c-.322.536-.225.998.094 1.316l.31.31c.319.319.782.415 1.316.094a2 2 0 012.969 1.23c.151.607.547.865.997.865h.438c.45 0 .845-.258.997-.865a2 2 0 012.969-1.23c.535.321.997.225 1.316-.094l.31-.31c.318-.318.415-.781.094-1.316a2 2 0 011.23-2.969c.607-.151.865-.547.865-.997v-.438c0-.451-.26-.846-.865-.997zM9 12a3 3 0 110-6 3 3 0 010 6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-volume\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.6 3.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4C15.4 5.9 16 7.4 16 9c0 1.6-.6 3.1-1.8 4.3-.4.4-.4 1 0 1.4.2.2.5.3.7.3.3 0 .5-.1.7-.3C17.1 13.2 18 11.2 18 9s-.9-4.2-2.4-5.7z\\\"></path><path d=\\\"M11.282 5.282a.909.909 0 000 1.316c.735.735.995 1.458.995 2.402 0 .936-.425 1.917-.995 2.487a.909.909 0 000 1.316c.145.145.636.262 1.018.156a.725.725 0 00.298-.156C13.773 11.733 14.13 10.16 14.13 9c0-.17-.002-.34-.011-.51-.053-.992-.319-2.005-1.522-3.208a.909.909 0 00-1.316 0zm-7.496.726H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/qrcode</title>\\n    <g id=\\\"icon/material/qrcode\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3,11 L5,11 L5,13 L3,13 L3,11 M11,5 L13,5 L13,9 L11,9 L11,5 M9,11 L13,11 L13,15 L11,15 L11,13 L9,13 L9,11 M15,11 L17,11 L17,13 L19,13 L19,11 L21,11 L21,13 L19,13 L19,15 L21,15 L21,19 L19,19 L19,21 L17,21 L17,19 L13,19 L13,21 L11,21 L11,17 L15,17 L15,15 L17,15 L17,13 L15,13 L15,11 M19,19 L19,15 L17,15 L17,19 L19,19 M15,3 L21,3 L21,9 L15,9 L15,3 M17,5 L17,7 L19,7 L19,5 L17,5 M3,3 L9,3 L9,9 L3,9 L3,3 M5,5 L5,7 L7,7 L7,5 L5,5 M3,15 L9,15 L9,21 L3,21 L3,15 M5,17 L5,19 L7,19 L7,17 L5,17 Z\\\" id=\\\"mdi:qrcode\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/restrictions-outline</title>\\n    <g id=\\\"icon/material/restrictions-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18.5,8 C18.33,8 18.16,8 18,8.05 L18,4.5 C18,3.11928813 16.8807119,2 15.5,2 C15.31,2 15.13,2 14.96,2.06 C14.7461874,0.868716938 13.7103179,0.0012815407 12.5,0 C11.44,0 10.54,0.66 10.17,1.59 C9.41693202,1.38051444 8.60922719,1.53531349 7.98697307,2.00838366 C7.36471894,2.48145383 6.99954575,3.21833807 7,4 L7,4.55 C6.84,4.5 6.67,4.5 6.5,4.5 C5.11928813,4.5 4,5.61928813 4,7 L4,15.5 C4,20.19 7.81,24 12.5,24 C17.19,24 21,20.19 21,15.5 L21,10.5 C21,9.11928813 19.8807119,8 18.5,8 M19,15.5 C19,19.0898509 16.0898509,22 12.5,22 C8.91014913,22 6,19.0898509 6,15.5 L6,7 C6,6.72 6.22,6.5 6.5,6.5 C6.78,6.5 7,6.72 7,7 L7,12 L9,12 L9,4 C9,3.72 9.22,3.5 9.5,3.5 C9.78,3.5 10,3.72 10,4 L10,11 L12,11 L12,2.5 C12,2.22 12.22,2 12.5,2 C12.78,2 13,2.22 13,2.5 L13,11 L15,11 L15,4.5 C15,4.22 15.22,4 15.5,4 C15.78,4 16,4.22 16,4.5 L16,13.42 C14.23,14.19 13,15.95 13,18 L15,18 C15,16.34 16.34,15 18,15 L18,10.5 C18,10.22 18.22,10 18.5,10 C18.78,10 19,10.22 19,10.5 L19,15.5 Z\\\" id=\\\"mdi:hand-front-right-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/rss-variant</title>\\n    <g id=\\\"badge/icon/rss-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5,10 C5.55228475,10 6,10.4477153 6,11 C6,11.5412844 5.55045872,12 5,12 C4.4587156,12 4,11.5412844 4,11 C4,10.4477153 4.44771525,10 5,10 M4,4 C8.418278,4 12,7.581722 12,12 L10.5449871,12 C10.5449871,8.38530341 7.61469659,5.45501285 4,5.45501285 L4,4 M4,7 C6.76142375,7 9,9.23857625 9,12 L7.57070707,12 C7.57070707,11.0529896 7.19450866,10.1447663 6.52487118,9.47512882 C5.85523371,8.80549134 4.9470104,8.42929293 4,8.42929293 L4,7 Z\\\" id=\\\"rss-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/rss</title>\\n    <g id=\\\"badge/icon/rss\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.75,10 C5.44035594,10 6,10.5596441 6,11.25 C6,11.9403559 5.44035594,12.5 4.75,12.5 C4.05964406,12.5 3.5,11.9403559 3.5,11.25 C3.5,10.5596441 4.05964406,10 4.75,10 Z M5.11116669,7.54639605 C6.82660407,7.80940186 8.1830606,9.16218778 8.45158391,10.8758014 L7.23152342,11.1795044 C7.08441894,9.91212418 6.07561709,8.9075227 4.80628203,8.7668642 L5.11116669,7.54639605 Z M5.72009926,5.11432766 C8.32885675,5.60976503 10.3855062,7.6642481 10.8841422,10.2718714 L9.66858256,10.5739265 C9.28406621,8.41337145 7.57799724,6.7100586 5.41602734,6.32963962 L5.72009926,5.11432766 Z M6.32787101,2.68573625 C9.83044069,3.40831848 12.5892971,6.16611302 13.3134345,9.66811414 L12.0989255,9.96960741 C11.4871421,6.91510726 9.07973668,4.50930363 6.02438684,3.89987406 L6.32787101,2.68573625 Z\\\" id=\\\"Channel-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/saved-messages</title>\\n    <g id=\\\"icon/material/saved-messages\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.1666667,1 C17.9487847,1 18.6165365,1.26855469 19.1699219,1.80566406 C19.7233073,2.34277344 20,2.99088542 20,3.75 L20,21.625 C20,21.9973958 19.8634983,22.3196615 19.5904948,22.5917969 C19.3174913,22.8639323 18.9817708,23 18.5833333,23 L12,18.1875 L5.41666667,23 C5.01822917,23 4.68250868,22.8639323 4.40950521,22.5917969 C4.13650174,22.3196615 4,21.9973958 4,21.625 L4,3.75 C4,2.99088542 4.27669271,2.34277344 4.83007812,1.80566406 C5.38346354,1.26855469 6.05121528,1 6.83333333,1 L17.1666667,1 Z M12.0016667,4.4375 L10.2972396,8.1328125 L6.335,8.6484375 L9.256875,11.4199219 L8.50427083,15.4375 L12.0016667,13.4609375 L15.4990625,15.4375 L14.7464583,11.4199219 L17.6683333,8.6484375 L13.7060938,8.1328125 L12.0016667,4.4375 Z\\\" id=\\\"xabber:saved-messages\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/search</title>\\n    <g id=\\\"icon/material/search\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <mask id=\\\"mask-2\\\" fill=\\\"white\\\">\\n            <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n        </mask>\\n        <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/server</title>\\n    <g id=\\\"badge/icon/server\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.1428571,13 L5.85714286,13 C5.38571429,13 5,12.625 5,12.1666667 L5,3.83333333 C5,3.375 5.38571429,3 5.85714286,3 L10.1428571,3 C10.6142857,3 11,3.375 11,3.83333333 L11,12.1666667 C11,12.625 10.6142857,13 10.1428571,13 Z M10,5 L6,5 L6,6 L10,6 L10,5 Z M10,7 L6,7 L6,8 L10,8 L10,7 Z M10,11 L9,11 L9,12 L10,12 L10,11 Z\\\" id=\\\"Server\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/status-outline</title>\\n    <g id=\\\"icon/material/status-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M15,4.81 L12,6.05 L9,4.81 L7.79,7.79 L4.81,9 L6.05,12 L4.81,15 L7.79,16.21 L9,19.19 L12,17.95 L15,19.19 L16.21,16.21 L19.19,15 L17.95,12 L19.19,9 L16.21,7.79 L15,4.81 Z M13.5,7 L12,11 L15,11 L11.5,17 L10.5,17 L12,13 L9,13 L12.5,7 L13.5,7 Z\\\" id=\\\"xabber:status-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/subscription-from</title>\\n    <g id=\\\"icon/material/subscription-from\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,8 C17.3137085,8 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.6862915,20 8,17.3137085 8,14 C8,13.462632 8.07064283,12.9417636 8.20314833,12.4461748 L9.67168223,13.9143229 C9.77459988,14.0172246 9.8859413,14.1065666 10.0034864,14.1823489 L10.0048953,14.1996403 C10.1089211,16.3160315 11.8578046,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.851413 16.3059677,10.0984884 14.180685,10.0040081 C14.1065666,9.8859413 14.0172246,9.77459988 13.9143229,9.67168223 L12.4461748,8.20314833 C12.9417636,8.07064283 13.462632,8 14,8 Z M11,4 L11,6 L7.415,6 L12.5,11.0857864 L11.0857864,12.5 L6,7.415 L6,11 L4,11 L4,4 L11,4 Z\\\" id=\\\"xabber:subscribe-from\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/subscription-to</title>\\n    <g id=\\\"icon/material/subscription-to\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.9994979,8.00000002 C17.3137085,8.00000002 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.7616031,20 8.12242824,17.4344251 8.00413847,14.2249383 L8,13.999 L10,14 L10,14 C10,16.209139 11.790861,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.8578046 16.3160315,10.1089211 14.1996403,10.0048953 L13.999,10 L13.9994979,8.00000002 Z M4.91421356,3.5 L10,8.585 L10,5 L12,5 L12,12 L5,12 L5,10 L8.585,10 L3.5,4.91421356 L4.91421356,3.5 Z\\\" id=\\\"xabber:subscribe-to\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/circle/task</title>\\n    <g id=\\\"badge/circle/task\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <circle id=\\\"Circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" cx=\\\"8\\\" cy=\\\"8\\\" r=\\\"7\\\"></circle>\\n        <g id=\\\"icon16/bot-variant\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n            <polygon id=\\\"Path\\\" fill=\\\"#FFFFFF\\\" fill-rule=\\\"nonzero\\\" points=\\\"7 12.5 2.75 8.25 4 7 7 10 12 5 13.25 6.25\\\"></polygon>\\n        </g>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/translate</title>\\n    <g id=\\\"icon/material/translate\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12.87,15.07 L10.33,12.56 L10.36,12.53 C12.0541502,10.6471017 13.3198948,8.41925464 14.07,6 L17,6 L17,4 L10,4 L10,2 L8,2 L8,4 L1,4 L1,6 L12.17,6 C11.5,7.92 10.44,9.75 9,11.35 C8.07,10.32 7.3,9.19 6.69,8 L4.69,8 C5.42,9.63 6.42,11.17 7.67,12.56 L2.58,17.58 L4,19 L9,14 L12.11,17.11 L12.87,15.07 M18.5,10 L16.5,10 L12,22 L14,22 L15.12,19 L19.87,19 L21,22 L23,22 L18.5,10 M15.88,17 L17.5,12.67 L19.12,17 L15.88,17 L15.88,17 Z\\\" id=\\\"mdi:translate\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/video</title>\\n    <g id=\\\"icon/material/video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,10.5 L17,7 C17,6.44771525 16.5522847,6 16,6 L4,6 C3.44771525,6 3,6.44771525 3,7 L3,17 C3,17.5522847 3.44771525,18 4,18 L16,18 C16.5522847,18 17,17.5522847 17,17 L17,13.5 L21,17.5 L21,6.5 L17,10.5 Z\\\" id=\\\"mdi:video\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/volume-high</title>\\n    <g id=\\\"icon/material/volume-high\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 C19,15.17 16.89,17.84 14,18.7 L14,20.77 C18,19.86 21,16.28 21,12 C21,7.72 18,4.14 14,3.23 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,16 C15.5,15.29 16.5,13.76 16.5,12 M3,9 L3,15 L7,15 L12,20 L12,4 L7,9 L3,9 Z\\\" id=\\\"mdi:volume-high\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Mobile-Portrait\\\" transform=\\\"translate(-41.000000, -4.000000)\\\">\\n        <g id=\\\"volume-off-variant\\\" transform=\\\"translate(34.000000, 0.000000)\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n            <polygon id=\\\"Path-2\\\" points=\\\"7 9 7 15 11 15 16 20 16 16.5 8.5 9\\\"></polygon>\\n            <polygon id=\\\"Path-3\\\" points=\\\"7 6 18.5 17.5 19.5 16.5 16 13 16 4 11.5 8.5 8 5\\\"></polygon>\\n        </g>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/volume-off</title>\\n    <g id=\\\"icon/material/volume-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,4 L9.91,6.09 L12,8.18 M4.27,3 L3,4.27 L7.73,9 L3,9 L3,15 L7,15 L12,20 L12,13.27 L16.25,17.53 C15.58,18.04 14.83,18.46 14,18.7 L14,20.77 C15.38,20.45 16.63,19.82 17.68,18.96 L19.73,21 L21,19.73 L12,10.73 M19,12 C19,12.94 18.8,13.82 18.46,14.64 L19.97,16.15 C20.62,14.91 21,13.5 21,12 C21,7.72 18,4.14 14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,10.18 L16.45,12.63 C16.5,12.43 16.5,12.21 16.5,12 Z\\\" id=\\\"mdi:volume-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Offline\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8015103 C17.1966102,15.1049344 17.0013821,15.5296633 17,16 C17,16.5522847 16.5443356,17 16.0046024,17 L7.99539757,17 C7.44565467,17 7,16.5561352 6.99998649,16 C6.99861167,15.5296664 6.80338616,15.10494 6.49000549,14.8015163 L6.49000549,14.8000192 C4.95622884,13.3424727 4,11.282906 4,9 C4,4.581722 7.581722,1 12,1 C16.418278,1 20,4.581722 20,9 C20,11.282906 19.0437712,13.3424727 17.5099945,14.8000192 L17.5099945,14.8015103 Z M8.86088543,15 L15.1391084,15 C15.3021338,14.4253123 15.6014858,13.895093 16,13.472213 C17.2274987,12.3735719 18,10.7769996 18,9 C18,5.6862915 15.3137085,3 12,3 C8.6862915,3 6,5.6862915 6,9 C6,10.7769996 6.77250128,12.3735719 8,13.472213 C8.39851111,13.8950917 8.69786083,14.4253152 8.86088543,15 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Online\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8000192 C19.0437712,13.3424727 20,11.282906 20,9 C20,4.581722 16.418278,1 12,1 C7.581722,1 4,4.581722 4,9 C4,11.282906 4.95622884,13.3424727 6.49000549,14.8000192 L6.49000549,14.8015163 C6.80338616,15.10494 6.99861167,15.5296664 6.99998649,16 C7,16.5561352 7.44565467,17 7.99539757,17 L16.0046024,17 C16.5443356,17 17,16.5522847 17,16 C17.0013821,15.5296633 17.1966102,15.1049344 17.5099945,14.8015103 L17.5099945,14.8015103 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 17.765357,5.9248618 c 0.009,0.1518861 -0.206601,0.1119764 -0.206601,0.2652514 0,4.4595198 -5.17314,11.2012628 -10.3933633,12.5152538 v 0.136731 C 14.101125,18.204712 21.825325,11.114777 22,4.2839629 l -4.233831,1.6413619 z\\\"\\n     id=\\\"path4-5\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 15.907561,6.3610856 c 0.009,0.1518861 0.014,0.3045804 0.014,0.4578554 0,4.459522 -3.55133,10.468554 -8.7715528,11.783009 v 0.189367 C 13.982554,18.349079 19.389945,11.500913 19.389945,6.1592263 c 0,-0.2747361 -0.01446,-0.5470438 -0.04292,-0.8162264 l -3.439122,1.017508 z\\\"\\n     id=\\\"path6\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 6.2332547,5.9248618 c -0.00886,0.1518861 0.2067174,0.1119764 0.2067174,0.2652514 0,4.4595198 5.3857609,11.2631498 10.6063279,12.5777208 V 18.95743 C 10.11103,18.318886 2.1746761,11.11443 2,4.2836157 l 4.2337177,1.6413618 z\\\"\\n     id=\\\"path8\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"M 8.3307389,6.473525 C 8.3219828,6.6254111 8.31686,6.7777591 8.31686,6.9312646 c 0,4.4595214 3.551213,10.4685544 8.771549,11.7830104 v 0.189596 C 10.258286,18.581129 4.8484667,11.613351 4.8484667,6.2717814 c 0,-0.2747361 0.014805,-0.5470427 0.042915,-0.8162284 l 3.4391228,1.0177415 z\\\"\\n     id=\\\"path10\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 4.8583007,5.3920472 0.8811221,0.3148763 c -0.00473,0.111283 -0.00765,0.2607395 -0.00765,0.3730642 0,4.7681513 4.3114542,11.3600893 10.0954942,12.3914783 0.375377,0.125857 0.871982,0.240263 1.264595,0.339052 V 19 C 9.5433961,18.356828 4.2400023,10.686651 4.857725,5.3915852 z\\\"\\n     id=\\\"path12\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 19.390639,5.2968432 -0.906108,0.3036565 c 0.0047,0.1113977 0.02208,0.2548387 0.02208,0.3670476 0,4.7681497 -4.311569,11.3602047 -10.0957226,12.3914777 -0.3751445,0.125972 -0.8719856,0.240267 -1.2643666,0.33917 v 0.189596 C 15.052467,17.886018 20.00767,10.591448 19.389946,5.2967275 z\\\"\\n     id=\\\"path14\\\" />\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg></div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info first-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info middle-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info last-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info fullname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info nickname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info birthday\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap job-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n        <div class=\\\"info org-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info job-title\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info org-unit\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info role\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info url\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap phone-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <div class=\\\"info phone-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-mobile\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap email-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n        <div class=\\\"info email-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap address-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n        <div class=\\\"info address-home\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-work\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-default\\\">\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n        </div>\\n    </div>\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"vcard_edit__header\\\"))]}</span>\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-vcard-back btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_cancel\\\"))]}</button>\\n                <button class=\\\"btn-vcard-save btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_save\\\"))]}</button>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content details-panel\\\">\\n\\n                <div class=\\\"settings-block-wrap vcard\\\">\\n                    <div class=\\\"vcard-edit-wrap\\\">\\n                        <div class=\\\"info-wrap personal-info-wrap\\\">\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-account-card-details\\\"></i>\\n                            <div class=\\\"input-field first-name\\\">\\n                                <input id=\\\"{{view.cid}}-first-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_given_name'))]}\\\" type=\\\"text\\\" name=\\\"first_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field middle-name\\\">\\n                                <input id=\\\"{{view.cid}}-middle-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_middle_name'))]}\\\" type=\\\"text\\\" name=\\\"middle_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field last-name\\\">\\n                                <input id=\\\"{{view.cid}}-last-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_family_name'))]}\\\" type=\\\"text\\\" name=\\\"last_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field fullname\\\">\\n                                <input id=\\\"{{view.cid}}-fullname\\\" placeholder=\\\"{[print(xabber.getString('vcard_full_name'))]}\\\" type=\\\"text\\\" name=\\\"fullname\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap nickname-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                            <div class=\\\"input-field nickname\\\">\\n                                <input id=\\\"{{view.cid}}-nickname\\\" placeholder=\\\"{[print(xabber.getString('vcard_nick_name'))]}\\\" type=\\\"text\\\" name=\\\"nickname\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap birthday-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-cake-variant\\\"></i>\\n                            <div class=\\\"input-field birthday\\\">\\n                                <input id=\\\"{{view.cid}}-birthday\\\" placeholder=\\\"{[print(xabber.getString('vcard_birth_date_placeholder'))]}\\\" type=\\\"text\\\" class=\\\"datepicker\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap job-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_job\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-briefcase\\\"></i>\\n                            <div class=\\\"input-field org-name\\\">\\n                                <input id=\\\"{{view.cid}}-org-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization'))]}\\\" type=\\\"text\\\" name=\\\"org_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field job-title\\\">\\n                                <input id=\\\"{{view.cid}}-job-title\\\" placeholder=\\\"{[print(xabber.getString('vcard_title'))]}\\\" type=\\\"text\\\" name=\\\"job_title\\\">\\n                            </div>\\n                            <div class=\\\"input-field org-unit\\\">\\n                                <input id=\\\"{{view.cid}}-org-unit\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization_unit'))]}\\\" type=\\\"text\\\" name=\\\"org_unit\\\">\\n                            </div>\\n                            <div class=\\\"input-field role\\\">\\n                                <input id=\\\"{{view.cid}}-role\\\" placeholder=\\\"{[print(xabber.getString('vcard_role'))]}\\\" type=\\\"text\\\" name=\\\"role\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap site-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                            <div class=\\\"input-field url\\\">\\n                                <input id=\\\"{{view.cid}}-url\\\" placeholder=\\\"{[print(xabber.getString('vcard_url_placeholder'))]}\\\" type=\\\"text\\\" name=\\\"url\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap description-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n                            <div class=\\\"input-field description\\\">\\n                                <textarea id=\\\"{{view.cid}}-description\\\" placeholder=\\\"{[print(xabber.getString('vcard_decsription_placeholder'))]}\\\" type=\\\"text\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea\\\" name=\\\"description\\\"></textarea>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap phone-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n                            <div class=\\\"input-field phone-work\\\">\\n                                <input id=\\\"{{view.cid}}-phone-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"phone_work\\\">\\n                            </div>\\n                            <div class=\\\"input-field phone-home\\\">\\n                                <input id=\\\"{{view.cid}}-phone-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_home'))]}\\\" type=\\\"text\\\" name=\\\"phone_home\\\">\\n                            </div>\\n                            <div class=\\\"input-field phone-mobile\\\">\\n                                <input id=\\\"{{view.cid}}-phone-mobile\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_mobile'))]}\\\" type=\\\"text\\\" name=\\\"phone_mobile\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap email-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n                            <div class=\\\"input-field email-work\\\">\\n                                <input id=\\\"{{view.cid}}-email-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"email_work\\\">\\n                            </div>\\n                            <div class=\\\"input-field email-home\\\">\\n                                <input id=\\\"{{view.cid}}-email-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_personal'))]}\\\" type=\\\"text\\\" name=\\\"email_home\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap address-info-wrap\\\">\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n                            <div class=\\\"input-wrap address-wrap address-home-wrap\\\">\\n                                <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_home_address\\\"))]}</div>\\n                                <div class=\\\"input-field pobox\\\">\\n                                    <input id=\\\"{{view.cid}}-po-home-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_home_box\\\">\\n                                </div>\\n                                <div class=\\\"input-field extadd\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_extadd\\\">\\n                                </div>\\n                                <div class=\\\"input-field street\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_street\\\">\\n                                </div>\\n                                <div class=\\\"input-field locality\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_locality\\\">\\n                                </div>\\n                                <div class=\\\"input-field region\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_region\\\">\\n                                </div>\\n                                <div class=\\\"input-field pcode\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_pcode\\\">\\n                                </div>\\n                                <div class=\\\"input-field country\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_country\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"input-wrap address-wrap address-work-wrap\\\">\\n                                <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_work_address\\\"))]}</div>\\n                                <div class=\\\"input-field pobox\\\">\\n                                    <input id=\\\"{{view.cid}}-po-work-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_work_box\\\">\\n                                </div>\\n                                <div class=\\\"input-field extadd\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_extadd\\\">\\n                                </div>\\n                                <div class=\\\"input-field street\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_street\\\">\\n                                </div>\\n                                <div class=\\\"input-field locality\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_locality\\\">\\n                                </div>\\n                                <div class=\\\"input-field region\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_region\\\">\\n                                </div>\\n                                <div class=\\\"input-field pcode\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_pcode\\\">\\n                                </div>\\n                                <div class=\\\"input-field country\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_country\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info nickname\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info first-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info last-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info birthday\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info url\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap more\\\">\\n        <div class=\\\"show-vcard\\\">\\n            {[print(xabber.getString(\\\"contact_vcard_more\\\"))]}\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"/>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info nickname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info first-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info middle-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info last-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info fullname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info birthday\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap job-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info job-title\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-unit\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info role\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info url\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap phone-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-mobile\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap email-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap address-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-home\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-work\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-default\\\">\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"resources-block-wrap hidden\\\">\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","define(\"xabber-accounts\", function () {\n    return function (xabber) {\n        let env = xabber.env,\n            constants = env.constants,\n            templates = env.templates.accounts,\n            utils = env.utils,\n            $ = env.$,\n            $iq = env.$iq,\n            $pres = env.$pres,\n            Strophe = env.Strophe,\n            _ = env._,\n            moment = env.moment,\n            Images = utils.images,\n            pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\n        xabber.Account = Backbone.Model.extend({\n                idAttribute: 'jid',\n\n                defaults: {\n                    enabled: true,\n                    auth_type: \"password\",\n                    status: \"online\",\n                    status_message: \"\",\n                    priority: 67,\n                    auto_login_xa: true,\n                    groupchat_servers_list: []\n                },\n\n                initialize: function (_attrs, options) {\n                    this.retraction_version = null;\n                    options || (options = {});\n                    if (_attrs.is_new && !options.auth_view) {\n                        this.is_invalid = true;\n                        this.on(\"destroy\", this.onDestroy, this);\n                        return;\n                    }\n                    this.last_msg_timestamp = 0;\n                    this.settings = xabber.account_settings_list.get(_attrs.jid);\n                    if (!this.settings) {\n                        this.settings = xabber.account_settings_list.create({\n                            jid: _attrs.jid,\n                            timestamp: utils.now(),\n                            auto_login_xa: this.get('auto_login_xa'),\n                            to_sync: xabber.api_account && xabber.api_account.get('sync_all')\n                        });\n                    }\n                    let settings = _.clone(this.settings.attributes);\n                    settings.color || (settings.color = this.collection.getDefaultColor());\n                    settings.order || (settings.order = this.collection.getLastOrder() + 1);\n                    this.settings.save(settings);\n                    this.settings.on(\"delete_account\", this.deleteAccount, this);\n                    let attrs = _.clone(_attrs);\n                    attrs.name || (attrs.name = attrs.jid);\n                    attrs.image || (attrs.image = Images.getDefaultAvatar(attrs.name));\n                    this.cached_image = Images.getCachedImage(attrs.image);\n                    attrs.vcard = utils.vcard.getBlank(attrs.jid);\n                    attrs.photo_hash = '';\n                    this.save(attrs);\n                    this.auth_view = options.auth_view || null;\n                    this.session = new Backbone.Model({\n                        connected: false,\n                        reconnected: false,\n                        conn_retries: 0,\n                        conn_feedback: xabber.getString(\"connection__error__text_disconnected\")\n                    });\n                    this._waiting_code = false;\n                    this.code_requests = [];\n                    this.gallery_code_requests = [];\n                    this.xabber_auth = {};\n                    this.session.on(\"change:connected\", this.onChangedConnected, this);\n                    this.CONNECTION_URL = _attrs.websocket_connection_url || constants.CONNECTION_URL;\n                    this.conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL, {'x-token': true});\n                    this.connection = this.conn_manager.connection;\n                    this.get('x_token') && (this.connection.x_token = this.get('x_token'));\n                    if (this.connection.x_token && this.connection.x_token.counter && !this.get('hotp_counter'))\n                        this.save({\n                            hotp_counter: this.connection.x_token.counter,\n                        });\n                    this.get('hotp_counter') && (this.connection.counter = this.get('hotp_counter'));\n                    this.on(\"destroy\", this.onDestroy, this);\n                    this._added_pres_handlers = [];\n                    this._pending_stanzas = [];\n                    this._pending_messages = [];\n                    this.dfd_presence = new $.Deferred();\n                    this.resources = new xabber.AccountResources(null, {account: this});\n                    this.password_view = new xabber.ChangePasswordView({model: this});\n                    this.vcard_edit = new xabber.VCardEditView({model: this});\n                    this.updateColorScheme();\n                    this.settings.on(\"change:color\", this.updateColorScheme, this);\n                    this.on(\"change:photo_hash\", this.getVCard, this);\n                    _.each(this._init_plugins, (plugin) => {\n                        plugin.call(this);\n                    });\n                    this.connection.xmlInput = function (xml) {\n                        xabber.info('input main connection');\n                        xabber.info(xml);\n                    };\n                    this.connection.xmlOutput = function (xml) {\n                        xabber.info('output main connection');\n                        xabber.info(xml);\n                    };\n                    this.once(\"start\", this.start, this);\n                    if (xabber.api_account)\n                        xabber.api_account.on(\"settings_result\", function (result) {\n                            if (result && this.settings.get('token')) {\n                                this.save({auth_type: 'token'});\n                            }\n                            this.trigger('start');\n                        }, this);\n                    else\n                        xabber.on(\"bind_xmpp_accounts\", () => {\n                            if (this.settings.get('token'))\n                                this.save({auth_type: 'token'});\n                            this.trigger('start');\n                        }, this);\n                },\n\n                start: function () {\n                    this.get('enabled') && this.isOnline() && this.connect();\n                },\n\n                _init_plugins: [],\n\n                getPassword: function () {\n                    try {\n                        return utils.atou(this.get('password'));\n                    } catch (e) {\n                        return '';\n                    }\n                },\n\n                isConnected: function () {\n                    return this.session && this.session.get('connected');\n                },\n\n                isOnline: function () {\n                    return this.get('status') !== 'offline';\n                },\n\n                sendMsg: function (stanza, callback) {\n                    let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n                    if (res) {\n                        this.connection.send(stanza);\n                        callback && callback();\n                    } else {\n                        console.log('message went to pending');\n                        console.log({stanza: stanza, callback: callback, is_msg: true});\n                        this._pending_stanzas.push({stanza: stanza, callback: callback, is_msg: true});\n                    }\n                    return res;\n                },\n\n                sendMsgFast: function (stanza, callback) {\n                    // let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n                    // if (res) {\n                    //     this.fast_connection.send(stanza);\n                    //     callback && callback();\n                    //     return res;\n                    // } else {\n                    return this.sendMsg(stanza, callback);\n                    // }\n                },\n\n                getConnectionForIQ: function () {\n                    let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n                    if (res) {\n                        return this.fast_connection;\n                    } else\n                        return this.connection;\n                },\n\n                sendIQFast: function () {\n                    let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n                    if (res) {\n                        this.fast_connection.sendIQ.apply(this.fast_connection, arguments);\n                        return res;\n                    } else\n                        return this.sendIQ.apply(this, arguments);\n                },\n\n                sendFast: function (stanza, callback, errback) {\n                    if ($(stanza.nodeTree).first().is('message')) {\n                        this.sendMsgFast(stanza, callback);\n                    } else {\n                        this.sendIQFast(stanza, callback, errback);\n                    }\n                },\n\n                pubAvatar: function (image, callback, errback) {\n                    if (!image) {\n                        this.removeAvatar(callback, errback);\n                        return;\n                    }\n                    let dfd = new $.Deferred();\n\n                    dfd.done((data, http_avatar) => {\n                        if (http_avatar) {\n                            let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                                iq_pub_metadata = $iq({type: 'set'})\n                                    .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                                    .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                                    .c('item', {id: avatar_hash})\n                                    .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                                    .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                            data.thumbnails.forEach((thumbnail) => {\n                                iq_pub_metadata.c('thumbnail', {\n                                    xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                                    url: thumbnail.url,\n                                    width: thumbnail.width,\n                                    height: thumbnail.height,\n                                }).up()\n                            })\n                            this.sendIQFast(iq_pub_metadata, () => {\n                                    callback && callback(avatar_hash);\n                                },\n                                function (data_error) {\n                                    errback && errback(data_error);\n                                });\n                        }\n                        else {\n                            let avatar_hash = image.hash || sha1(image.base64),\n                                iq_pub_data = $iq({type: 'set'})\n                                    .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                                    .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                                    .c('item', {id: avatar_hash})\n                                    .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                                iq_pub_metadata = $iq({type: 'set'})\n                                    .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                                    .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                                    .c('item', {id: avatar_hash})\n                                    .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                                    .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                            this.sendIQFast(iq_pub_data, () => {\n                                    this.sendIQFast(iq_pub_metadata, () => {\n                                            callback && callback(avatar_hash);\n                                        },\n                                        function (data_error) {\n                                            errback && errback(data_error);\n                                        });\n                                },\n                                (data_error) => {\n                                    errback && errback(data_error);\n                                });\n                        }\n                    });\n                    if (image.uploaded){\n                        dfd.resolve(image, true)\n                    }\n                    else if (this.get('gallery_token') && this.get('gallery_url') && !image.generated && !image.uploaded){\n                        let file = image.name ? image : image.file;\n                        this.uploadAvatar(file, (res) => {\n                            if (res.thumbnails.length || res.file){\n                                res.type = file.type;\n                                dfd.resolve(res, true)\n                            } else\n                                dfd.resolve(image.base64)\n                        }, (res) => {\n                            dfd.resolve(image.base64)\n                        });\n                    } else\n                        dfd.resolve(image.base64)\n                },\n\n                removeAvatar: function (callback, errback) {\n                    let iq_pub_metadata = $iq({type: 'set'})\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                        .c('item')\n                        .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA});\n                    this.sendIQFast(iq_pub_metadata, () => {\n                            callback && callback();\n                        },\n                        function () {\n                            errback && errback();\n                        });\n                },\n\n                getAvatar: function (avatar, callback, errback) {\n                    let iq_request_avatar = $iq({type: 'get', to: this.get('jid')})\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('items', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                        .c('item', {id: avatar});\n                    this.sendIQFast(iq_request_avatar, (iq) => {\n                        let pubsub_avatar = $(iq).find('data').text();\n                        if (pubsub_avatar == \"\")\n                            errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n                        else\n                            callback && callback(pubsub_avatar);\n                    });\n                },\n\n                sendIQ: function () {\n                    let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n                    if (res) {\n                        let elem = arguments[0];\n                        if (typeof(elem.tree) === \"function\" && elem.tree().getAttribute('type') == 'get') {\n                            let lang = xabber.settings.language;\n                            (lang == 'default') && (lang = xabber.get('default_language'));\n                            elem.tree().setAttribute('xml:lang', lang);\n                        }\n                        this.connection.sendIQ.apply(this.connection, arguments);\n                    } else {\n                        if (!(arguments[0] && $(arguments[0].nodeTree).find('query[xmlns=\"' + Strophe.NS.MAM + '\"]').length)) {\n                            this._pending_stanzas.push({stanza: arguments, is_iq: true});\n                        }\n                    }\n                    return res;\n                },\n\n                parseDataForm: function ($dataform, options) {\n                    options = options || {};\n                    let type = $dataform.attr('type'),\n                        title = $dataform.children('title').text(),\n                        instructions = $dataform.children('instructions').text(),\n                        fields = [],\n                        data_form = {};\n                    $dataform.children('field').each((idx, field) => {\n                        let $field = $(field),\n                            attrs = {},\n                            field_var = $field.attr('var'),\n                            field_type = $field.attr('type'),\n                            field_label = $field.attr('label'),\n                            field_value = [], field_options = [];\n                        $field.children('value').each((i, value) => {\n                            field_value.push($(value).text());\n                        });\n                        $field.children('option').each((i, option) => {\n                            let $option = $(option),\n                                val = $option.children('value').text(),\n                                lbl = $option.attr('label');\n                            field_options.push({value: val, label: lbl});\n                        });\n                        field_var && (attrs.var = field_var);\n                        field_type && (attrs.type = field_type);\n                        field_label && (attrs.label = field_label);\n                        field_value.length && (attrs.values = field_value);\n                        field_options.length && (attrs.options = field_options);\n                        fields.push(attrs);\n                    });\n                    type && (data_form.type = type);\n                    title && (data_form.title = title);\n                    instructions && (data_form.instructions = instructions);\n                    fields.length && (data_form.fields = fields);\n                    return data_form;\n                },\n\n                addDataFormToStanza: function ($stanza, data_form) {\n                    $stanza.c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'});\n                    data_form.title && $stanza.c('title').t(data_form.title).up();\n                    data_form.instructions && $stanza.c('instructions').t(data_form.instructions).up();\n                    data_form.fields.forEach((field) => {\n                        let field_attrs = _.clone(field);\n                        delete field_attrs.values;\n                        delete field_attrs.options;\n                        $stanza.c('field', field_attrs);\n                        field.values && field.values.forEach((value) => {\n                            $stanza.c('value').t(value).up();\n                        });\n                        $stanza.up();\n                    });\n                    return $stanza;\n                },\n\n                sendPres: function (stanza) {\n                    if (this.connection.authenticated && this.session.get('connected')) {\n                        this.connection.send(stanza);\n                    } else {\n                        this._pending_stanzas.push({stanza: stanza});\n                    }\n                    return this.connection.authenticated;\n                },\n\n                verifyXabberAccount: function (code, callback) {\n                    let request = {\n                        type: 'POST',\n                        url: constants.API_SERVICE_URL + '/accounts/xmpp_auth/',\n                        contentType: \"application/json\",\n                        dataType: 'json',\n                        data: JSON.stringify({ code: code, jid: this.connection.jid}),\n                        success: function (data, textStatus, jqXHR) {\n                            callback && callback(data.token);\n                        }\n                    };\n                    $.ajax(request);\n                },\n\n                createFastConnection: function () {\n                    let jid = this.get('jid'),\n                        auth_type = this.conn_manager.auth_type,\n                        password;\n                    if (auth_type === 'token') {\n                        password = this.settings.get('token');\n                    } else if (auth_type === 'x-token') {\n                        if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                            password = this.get('x_token').token;\n                        else\n                            password = undefined;\n                    } else {\n                        password = this.getPassword();\n                    }\n                    if (!password) {\n                        let attrs = {login: true};\n                        options.token_invalidated && (attrs.token_invalidated = true);\n                        this.password_view.show(attrs);\n                        return;\n                    }\n                    if (!this.fast_conn_manager) {\n                        this.fast_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                        this.fast_connection = this.fast_conn_manager.connection;\n                        this.fast_connection.account = this;\n                        this.fast_connection.xmlInput = function (xml) {\n                            xabber.info('input fast connection');\n                            xabber.info(xml);\n                        };\n                        this.fast_connection.xmlOutput = function (xml) {\n                            xabber.info('output fast connection');\n                            xabber.info(xml);\n                        };\n                    } else{\n                        this.fast_connection.disconnect();\n                        return this.createFastConnection();\n                    }\n                    if (auth_type === 'x-token' && this.fast_connection) {\n                        this.fast_connection.x_token = this.get('x_token');\n                        this.fast_connection.counter = this.get('hotp_counter');\n                        this.fast_connection.x_token_auth = true;\n                    }\n                    this.fast_conn_manager.connect(auth_type, jid, password, this.onFastConnected.bind(this));\n                },\n\n                connect: function (options) {\n                    options = options || {};\n                    let jid = this.get('jid'),\n                        auth_type = this.get('auth_type'),\n                        password;\n                    jid += '/xabber-web-' + xabber.get('client_id');\n                    this.connection.x_token = this.get('x_token');\n                    this.connection.counter = this.get('hotp_counter');\n                    this.connection.account = this;\n                    if (this.connection.x_token && !this.connection.counter)\n                        this.connection.counter = 0;\n                    if (auth_type === 'token') {\n                        password = this.settings.get('token');\n                    } else if (auth_type === 'x-token') {\n                        if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                            password = this.get('x_token').token;\n                        else\n                            password = undefined;\n                    } else {\n                        password = this.getPassword();\n                    }\n                    if (!password) {\n                        let attrs = {login: true};\n                        options.token_invalidated && (attrs.token_invalidated = true);\n                        this.password_view.show(attrs);\n                        return;\n                    }\n                    this.session.set({\n                        connected: false,\n                        reconnected: false,\n                        reconnecting: false,\n                        conn_retries: 0,\n                        conn_feedback: xabber.getString(\"application_state_connecting\"),\n                        auth_failed: false\n                    });\n                    this.restoreStatus();\n                    this.conn_manager.connect(auth_type, jid, password, this.connectionCallback.bind(this));\n                },\n\n                reconnect: function (is_fast) {\n                    let conn_retries = this.session.get('conn_retries'),\n                        timeout = conn_retries < 3 ? constants.RECONNECTION_TIMEOUTS[conn_retries] : 20000;\n                    is_fast && (timeout = 1500);\n                    this.session.set({\n                        connected: false,\n                        reconnected: false,\n                        reconnecting: true,\n                        conn_retries: ++conn_retries,\n                        conn_feedback:  xabber.getString(\"application_state_reconnect_after_some_seconds\", [timeout/1000]),\n                        auth_failed: false\n                    });\n                    if (this.get('x_token'))\n                        this.connection.x_token = this.get('x_token');\n                    this.connection.account = this;\n                    setTimeout(() => {\n                        this.connFeedback(xabber.getString(\"application_state_connecting\"));\n                        this.restoreStatus();\n                        this.connection.reset();\n                        this.conn_manager.reconnect(this.reconnectionCallback.bind(this));\n                    }, timeout);\n                },\n\n                connectionCallback: function (status, condition, elem) {\n                    if (this.session.get('reconnecting')) {\n                        xabber.info('ignore connection callback for status: '+constants.CONN_STATUSES[status]);\n                        return;\n                    }\n                    this.auth_view && this.loginCallback(status, condition);\n                    this.session.set({conn_status: status, conn_condition: condition});\n                    if ((status === Strophe.Status.ERROR) && (condition === 'conflict') && !this.session.get('delete')) {\n                        this.onConnectionConflict();\n                    }\n                    if (status === Strophe.Status.CONNECTED) {\n                        this.session.set('on_token_revoked', false);\n                        if (this.connection.x_token) {\n                            this.save({\n                                auth_type: 'x-token',\n                                x_token: this.connection.x_token,\n                                hotp_counter: this.connection.counter,\n                            });\n                            this.conn_manager.auth_type = 'x-token';\n                        }\n\n                        if (this.get('registration_nickname')){\n                            let vcard = utils.vcard.getBlank(this.get('jid'));\n                            vcard.nickname = this.get('registration_nickname');\n                            this.setVCard(vcard,\n                                () => {\n                                    this.getVCard();\n                                    this.set('registration_nickname', null)\n                                },\n                                function () {\n                                    utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                                    this.set('registration_nickname', null)\n                                }\n                            );\n                        }\n                        this.createFastConnection();\n                        this.session.set({connected: true, reconnected: false});\n                    } else if (status === Strophe.Status.AUTHFAIL) {\n                        if ((this.get('auth_type') === 'x-token' || this.connection.x_token)){\n                            if (this.session.get('conn_retries') <= 3 && $(elem).find('credentials-expired').length === 0)\n                                this.reconnect(true);\n                            else\n                                this.onTokenRevoked();\n                        }\n                        else\n                            this.onAuthFailed();\n                    } else if (status === Strophe.Status.DISCONNECTED) {\n                        if (this.session.get('on_token_revoked'))\n                            return;\n                        this.connection.flush();\n                        this.session.set({connected: false});\n                    }\n                },\n\n                connectXabberAccount: function () {\n                    let iq_private_storage = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.PRIVATE_STORAGE}).c('storage', {xmlns:'xabber:options'});\n                    this.sendIQFast(iq_private_storage, (iq) => {\n                        if (($(iq).find('option').attr('type') == 'bind') && ($(iq).find('option').text() == 1)) {\n                            this.authXabberAccount();\n                        }\n                    });\n                },\n\n                authXabberAccount: function (callback) {\n                    this.requestPassword((data) => {\n                        this.xabber_auth = { api_jid: data.api_jid, request_id: data.request_id };\n                        if (this.code_requests.length > 0) {\n                            let verifying_code = this.code_requests.find(verifying_mess => (verifying_mess.jid === this.xabber_auth.api_jid && verifying_mess.id === this.xabber_auth.request_id));\n                            if (verifying_code) {\n                                let idx_verifying_code = this.code_requests.indexOf(verifying_code);\n                                (idx_verifying_code > -1) && this.code_requests.splice(idx_verifying_code, 1);\n                                this.verifyXabberAccount(verifying_code.code, (data) => {\n                                    this._waiting_code = false;\n                                    let iq_send_auth_mark = $iq({type: 'set'})\n                                        .c('query', {xmlns: Strophe.NS.PRIVATE_STORAGE})\n                                        .c('storage', {xmlns:'xabber:options'})\n                                        .c('option', {type: 'bind'}).t(1);\n                                    if (xabber.api_account) {\n                                        xabber.api_account.save('token', data);\n                                        xabber.api_account.login_by_token();\n                                    }\n                                    this.sendIQFast(iq_send_auth_mark);\n                                    callback && callback();\n                                });\n                            }\n                            if (this.code_requests.length) {\n                                let msg_attrs = {\n                                    from_jid: this.code_requests[0].jid,\n                                    message: xabber.getString(\"xmpp_confirm__text_message__verification_code_is\", [Number(this.code_requests[0].code)]),\n                                    is_archived: false\n                                };\n                                this.createMessageFromIQ(msg_attrs);\n                            }\n                        }\n                    });\n                },\n\n                requestPassword: function(callback) {\n                    let request = {\n                        type: 'POST',\n                        url: constants.API_SERVICE_URL + '/accounts/xmpp_code_request/',\n                        contentType: \"application/json\",\n                        dataType: 'json',\n                        data: JSON.stringify({ jid: this.connection.jid, type: 'iq'}),\n                        success: function (data, textStatus, jqXHR) {\n                            callback && callback(data);\n                        }\n                    };\n                    this._waiting_code = true;\n                    $.ajax(request);\n                },\n\n                reconnectionCallback: function (status, condition, elem) {\n                    if (!this.session.get('reconnecting')) {\n                        xabber.info('ignore reconnection callback for status: '+constants.CONN_STATUSES[status]);\n                        return;\n                    }\n                    this.session.set({conn_status: status, conn_condition: condition});\n                    if (status === Strophe.Status.CONNECTED) {\n                        this.session.set('on_token_revoked', false);\n                        if (this.connection.x_token) {\n                            this.save({\n                                auth_type: 'x-token',\n                                x_token: this.connection.x_token,\n                                hotp_counter: this.connection.counter,\n                            });\n                        }\n                        this.createFastConnection();\n                        this.connection.connect_callback = this.connectionCallback.bind(this);\n                        this.session.set({connected: true, reconnected: true,\n                            reconnecting: false, conn_retries: 0});\n                    } else if (status === Strophe.Status.AUTHFAIL) {\n                        if ((this.get('auth_type') === 'x-token' || this.connection.x_token)) {\n                            if ($(elem).find('credentials-expired').length > 0)\n                                this.onTokenRevoked();\n                            else if (this.session.get('conn_retries') > 2 )\n                                this.onAuthFailed();\n                            else\n                                this.reconnect(true);\n                        }\n                        else\n                            this.onAuthFailed();\n                    } else if (status === Strophe.Status.DISCONNECTED) {\n                        if (this.session.get('on_token_revoked'))\n                            return;\n                        this.connection.flush();\n                        let max_retries = xabber.settings.max_connection_retries;\n                        if (max_retries === -1 || this.session.get('conn_retries') < max_retries) {\n                            this.reconnect();\n                        } else {\n                            this.connFeedback(xabber.getString(\"connection__error__connection_lost\"));\n                        }\n                    }\n                },\n\n                registerCallback: function (status, condition, error_text) {\n                    if (status === Strophe.Status.REGISTER) {\n                        this.connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                        this.connection.register.fields.password = this.getPassword();\n                        if (xabber.url_params && xabber.url_params.rkey) {\n                            this.connection.register.fields.key = xabber.url_params.rkey;\n                        }\n                        this.connection.register.submit();\n                    } else if (status === Strophe.Status.REGISTERED) {\n                        let nickname = this.auth_view.$nickname_input.val()\n                        this.auth_view.data.set('step',6);\n                        if(nickname){\n                            this.set('registration_nickname', nickname)\n                        }\n                    } else if (status === Strophe.Status.CONFLICT) {\n                        this.auth_view.errorRegistrationFeedback({jid: xabber.getString(\"label_xmpp_id\")});\n                        this.auth_view.data.set('step', 3)\n                    } else if (status === Strophe.Status.NOTACCEPTABLE) {\n                        if (error_text)\n                            this.auth_view.errorRegistrationFeedback({password: error_text});\n                        else {\n                            condition = condition ? ': ' + condition : '';\n                            this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_not_filled\") + condition});\n                        }\n                        this.auth_view.data.set('step', 4)\n                    } else if (status === Strophe.Status.REGIFAIL) {\n                        if (error_text)\n                            this.auth_view.errorRegistrationFeedback({password: error_text});\n                        else {\n                            condition = condition ? ': ' + condition : '';\n                            this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_failed\") + condition});\n                        }\n                        this.auth_view.data.set('step', 4)\n                    }\n                },\n\n                changePasswordCallback: function (status, condition) {\n                    if (this.settings_right && this.settings_right.children && this.settings_right.children.account_password_view){\n                        if (status === Strophe.Status.REGISTERED) {\n                            this.settings_right.children.account_password_view.successFeedback();\n                        } else if (status === Strophe.Status.CONFLICT\n                            || status === Strophe.Status.NOTACCEPTABLE\n                            || status === Strophe.Status.REGIFAIL) {\n                            condition = condition ? ': ' + condition : '';\n                            this.settings_right.children.account_password_view.errorFeedback({password: xabber.getString(\"password_changed_fail\") + condition});\n                        } else if (status === Strophe.Status.AUTHFAIL) {\n                            this.settings_right.children.account_password_view.errorFeedback({old_password: xabber.getString(\"AUTHENTICATION_FAILED\")});\n                        } else if (status === Strophe.Status.CONNECTED) {\n                            this.change_password_connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                            this.change_password_connection.register.fields.password = this.settings_right.children.account_password_view.$password_input.val().trim();\n                            this.change_password_connection.register.submit();\n                        } else if (status === Strophe.Status.DISCONNECTED) {\n                            this.change_password_connection_manager = undefined;\n                            this.change_password_connection = undefined;\n                        }\n                    }\n                },\n\n                loginCallback: function (status, condition) {\n                    if (status === Strophe.Status.CONNECTING) {\n                        if (this.auth_view.stepped_auth){\n                            this.auth_view.resetAuthStepper()\n                        }\n                    } else if (status === Strophe.Status.CONNECTED) {\n                        this.save('is_new', undefined);\n                        if (this.auth_view.stepped_auth && !this.auth_view.data.get('registration'))\n                            this.auth_view.authStepperStart();\n                        else{\n                            this.auth_view.endAuth();\n                        }\n\n                    } else if (_.contains(constants.BAD_CONN_STATUSES, status)) {\n                        let stepper_auth_error = false;\n                        if (status === Strophe.Status.ERROR) {\n                            status = xabber.getString(\"CONNECTION_FAILED\");\n                        } else if (status === Strophe.Status.CONNFAIL) {\n                            status = xabber.getString(\"CONNECTION_FAILED\");\n                        } else if (status === Strophe.Status.AUTHFAIL) {\n                            status = xabber.getString(\"AUTHENTICATION_FAILED\");\n                            stepper_auth_error = true;\n                        } else if (status === Strophe.Status.DISCONNECTED) {\n                            status = xabber.getString(\"connection__error__text_disconnected\");\n                        } else if (status === Strophe.Status.CONNTIMEOUT) {\n                            status = xabber.getString(\"connection__error__text_timeout_expired\");\n                        }\n                        condition = condition ? ': ' + condition : '';\n                        if (this.auth_view.stepped_auth)\n                            this.auth_view.authStepperError(stepper_auth_error, {password: status + condition});\n                        else\n                            this.auth_view.errorFeedback({password: status + condition});\n                        this.get('is_new') && this.destroy();\n                    }\n                },\n\n                onAuthFailed: function () {\n                    if (!this.auth_view){\n                        utils.dialogs.error(xabber.getString(\"connection__error__text_authentication_failed\", [this.get('jid')]));\n                        this.password_view.show();\n                    }\n                    this.session.set({\n                        auth_failed: true,\n                        connected: false,\n                        no_reconnect: true\n                    });\n                    this.save({old_device_token: this.get('x_token'), auth_type: 'password', password: null, x_token: null});\n                    this.connection.pass = \"\";\n                    this.trigger('deactivate', this);\n                    this.connFeedback(xabber.getString(\"connection__error__text_authentication_failed_short\"));\n                },\n\n                onConnectionConflict: function () {\n                    utils.dialogs.error(xabber.getString(\"connection__error__text_connection_conflict\", [this.get('jid')]));\n                    this.session.set({\n                        auth_failed: true,\n                        no_reconnect: true\n                    });\n                    this.trigger('deactivate', this);\n                    this.connFeedback(xabber.getString(\"connection__error__text_connection_conflict_short\"));\n                },\n\n                getAllXTokens: function () {\n                    let tokens_list = [],\n                        iq = $iq({\n                            type: 'get',\n                            to: this.connection.domain\n                        }).c('query', {xmlns: `${Strophe.NS.AUTH_DEVICES}#items`});\n                    this.sendIQFast(iq, (tokens) => {\n                        $(tokens).find('device').each((idx, token) => {\n                            let $token = $(token),\n                                client = $token.find('client').text(),\n                                device = $token.find('info').text(),\n                                description = $token.find('description').text(),\n                                token_uid = $token.attr('id'),\n                                expire = Number($token.find('expire').text())*1000,\n                                last_auth = Number($token.find('last-auth').text())*1000,\n                                ip_address = $token.find('ip').text();\n                            tokens_list.push({client: client, device: device, description: description, token_uid: token_uid, last_auth: last_auth, expire: expire, ip: ip_address});\n                        });\n                        this.x_tokens_list = tokens_list;\n                        this.settings_right && this.settings_right.updateXTokens();\n                    });\n                },\n\n                onTokenRevoked: function () {\n                    if (xabber.api_account && xabber.api_account.get('xmpp_binding') === this.get('jid')) {\n                        xabber.trigger('quit_accounts');\n                        return;\n                    }\n                    if (!this.auth_view) {\n                        utils.dialogs.error(xabber.getString(\"connection__error__text_token_invalidated\", [this.get('jid')]));\n                    }\n                    this.session.set({\n                        on_token_revoked: true,\n                        auth_failed: true,\n                        connected: false,\n                        no_reconnect: true\n                    });\n                    this.save({auth_type: 'password', password: null, x_token: null});\n                    this.connection.pass = \"\";\n                    this.trigger('deactivate', this);\n                    this.connFeedback(xabber.getString(\"connection__error__text_token_invalidated_short\"));\n                    this.deleteAccount()\n                },\n\n                onChangedConnected: function () {\n                    if (this.isConnected()) {\n                        this.session.get('reconnected') ? this.onReconnected() : this.onConnected();\n                    } else {\n                        this.onDisconnected();\n                    }\n                },\n\n                onConnected: function () {\n                    this.connFeedback(xabber.getString(\"account_state_connected\"));\n                    this.jid = this.connection.jid;\n                    this.resource = Strophe.getResourceFromJid(this.jid);\n                    this.domain = Strophe.getDomainFromJid(this.jid);\n                    this.trigger('activate', this);\n                    this.session.get('no_reconnect') && this.session.set('no_reconnect', false);\n                    this.afterConnected();\n                    _.each(this._after_connected_plugins, (plugin) => {\n                        plugin.call(this);\n                    });\n                },\n\n                onFastConnected: function (status) {\n                    if (status === Strophe.Status.CONNECTED) {\n                        if (this.fast_connection.x_token) {\n                            this.save({\n                                x_token: this.fast_connection.x_token,\n                                hotp_counter: this.fast_connection.counter,\n                            });\n                            this.fast_conn_manager.auth_type = 'x-token';\n                            this.fast_connection.x_token_auth = true;\n                            if (this.connection && this.connection.pass)\n                                this.fast_connection.pass = this.connection.pass;\n                        }\n                        _.each(this._after_fast_connected_plugins, (plugin) => {\n                            plugin.call(this);\n                        });\n                    } else if (status === Strophe.Status.AUTHFAIL || status === Strophe.Status.DISCONNECTED) {\n                        this.fast_conn_manager = undefined;\n                        this.fast_connection = undefined;\n                    }\n                },\n\n                onReconnected: function () {\n                    this.connFeedback(xabber.getString(\"account_state_connected\"));\n                    this.afterConnected();\n                    _.each(this._after_reconnected_plugins, (plugin) => {\n                        plugin.call(this);\n                    });\n                },\n\n                afterConnected: function () {\n                    this.dfd_presence.done(() => {\n                        this.sendPendingStanzas();\n                        setTimeout(() => {\n                            this.sendPendingMessages();\n                        }, 2500);\n                    });\n                    this.registerPresenceHandler();\n                    this.enableCarbons();\n                },\n\n                getAllMessageRetractions: function (encrypted, callback) {\n                    let query_options = {xmlns: Strophe.NS.REWRITE, version: (encrypted && this.omemo) ? this.omemo.getRetractVersion() : this.retraction_version};\n                    encrypted && (query_options.type = 'encrypted');\n                    let retractions_query = $iq({type: 'get'})\n                        .c('query', query_options);\n                    this.sendIQFast(retractions_query, callback);\n                },\n\n                sendPendingStanzas: function () {\n                    console.log('pending stanzas');\n                    console.log(this._pending_stanzas);\n                    _.each(this._pending_stanzas, (item) => {\n                        console.log(item);\n                        if ((item.stanza instanceof Strophe.Builder) || item.is_msg) {\n                            this.connection.send(item.stanza);\n                            item.callback && item.callback();\n                        } else if (item && item.stanza && item.is_iq){\n                            this.connection.sendIQ.apply(this.connection, item.stanza);\n                        }\n                    });\n                    this._pending_stanzas = [];\n                },\n\n                sendPendingMessages: function () {\n                    console.log('pending messages');\n                    console.log(this._pending_messages);\n                    _.each(this._pending_messages, (item) => {\n                        console.log(item)\n                        let msg = this.messages.get(item.unique_id), msg_iq;\n                        msg && (msg_iq = msg.get('xml'));\n                        $(msg_iq).append(\"<retry xmlns='\" + Strophe.NS.DELIVERY + \"'/>\")\n                        msg_iq && this.sendMsg(msg_iq);\n                    });\n                    this._pending_messages = [];\n                    this.trigger('send_pending_messages');\n                },\n\n                _after_connected_plugins: [],\n                _after_reconnected_plugins: [],\n                _after_fast_connected_plugins: [],\n\n                onDisconnected: function () {\n                    this.disconnected_timestamp = this.last_stanza_timestamp;\n                    if (this.session.get('delete')) {\n                        this.destroy();\n                        return;\n                    }\n                    let deactivate = this.session.get('deactivate');\n                    if (deactivate) {\n                        this.connFeedback(xabber.getString(\"settings_account__label_state_disconnected\"));\n                        this.session.set('deactivate', null);\n                        if (deactivate === 'set_off') {\n                            this.trigger('deactivate', this);\n                        }\n                    } else {\n                        if (this.session.get('no_reconnect')) {\n                            this.session.set('no_reconnect', false);\n                        } else {\n                            this.fast_connection && this.fast_connection.connected && this.fast_connection.disconnect();\n                            this.reconnect();\n                        }\n                    }\n                },\n\n                connFeedback: function (message) {\n                    this.session.set(\"conn_feedback\", message);\n                },\n\n                enableCarbons: function () {\n                    let iq = $iq({type: 'set'}).c('enable', {xmlns: Strophe.NS.CARBONS});\n                    this.sendIQFast(iq);\n                },\n\n                getVCard: function (callback) {\n                    let jid = this.get('jid'),\n                        is_callback = _.isFunction(callback);\n                    if (this.connection && this.connection.connected) {\n                        this.getConnectionForIQ().vcard.get(jid,\n                            (vcard) => {\n                                let attrs = {\n                                    vcard: vcard,\n                                    vcard_updated: moment.now()\n                                };\n                                attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                                if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                                    if (vcard.photo.image) {\n                                        attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                                        attrs.image = vcard.photo.image;\n                                    }\n                                    else\n                                        attrs.image = Images.getDefaultAvatar(attrs.name);\n                                    this.cached_image = Images.getCachedImage(attrs.image);\n                                }\n                                this.save(attrs);\n                                is_callback && callback(vcard);\n                            },\n                            function () {\n                                is_callback && callback(null);\n                            }\n                        );\n                    }\n                },\n\n                setVCard: function (data, callback, errback) {\n                    let vcard = _.extend(_.clone(this.get('vcard')), data);\n                    this.connection.vcard.set(this.get('jid'), vcard, () => {\n                        this.vcardPhotoUpdated(vcard.photo.image);\n                        callback && callback();\n                    }, errback);\n                },\n\n                getStatusMessage: function () {\n                    return this.get('status_message') || xabber.getString([this.get('status')]);\n                },\n\n                setStatus: function (status, message) {\n                    let attrs = { status_updated: moment.now() };\n                    status !== null && (attrs.status = status);\n                    message !== null && (attrs.status_message = message || '');\n                    if (status === 'offline' && this.get('status') !== 'offline')\n                        attrs.status_prev = this.get('status');\n                    this.save(attrs);\n                    if (!this.get('enabled'))\n                        return;\n                    if (status === 'offline') {\n                        this.deactivate('set_offline');\n                    } else if (!this.isConnected()) {\n                        this.activate();\n                    } else {\n                        this.sendPresence();\n                    }\n                },\n\n                restoreStatus: function () {\n                    if (this.get('status') === 'offline') {\n                        this.save({\n                            status_updated: moment.now(),\n                            status: this.get('status_prev') || 'online',\n                            status_prev: undefined\n                        });\n                    }\n                },\n\n                getAvatarHash: function (avatar) {\n                    let from_avatar = avatar || this.get('vcard').photo.image;\n                    if (from_avatar) {\n                        let decoded_raw = atob(from_avatar),\n                            bin = Uint8Array.from(Array.prototype.map.call(decoded_raw,function(x) {\n                                return x.charCodeAt(0);\n                            }));\n                        return sha1(bin);\n                    }\n                    else\n                        return \"\";\n                },\n\n                vcardPhotoUpdated: function (photo) {\n                    let stanza = $pres().c('x', {xmlns: Strophe.NS.VCARD_UPDATE}).c('photo').t(this.getAvatarHash(photo)).up().up();\n                    return this.sendPres(stanza);\n                },\n\n                sendPresence: function (type, message) {\n                    type = type || this.get('status');\n                    let status_message = message || this.get('status_message'), stanza = $pres();\n                    if (type === 'offline') {\n                        stanza.attrs({'type': 'unavailable'});\n                    } else {\n                        if (type !== 'online') {\n                            stanza.c('show').t(type).up();\n                        }\n                        stanza.c('status').t(status_message).up();\n                        stanza.c('priority').t(this.get('priority')).up();\n                        if(this.get('x_token'))\n                            stanza.c('device', {xmlns: Strophe.NS.AUTH_DEVICES, id: this.get('x_token').token_uid}).up();\n                    }\n                    stanza.cnode(this.connection.caps.createCapsNode({\n                        node: 'https://www.xabber.com/clients/xabber/web'\n                    }).tree());\n                    return this.sendPres(stanza);\n                },\n\n                showSettings: function (right, block_name) {\n                    let has_settings_right = !_.isUndefined(this.settings_right);\n                    if (!this.settings_left)\n                        this.settings_left = new xabber.AccountSettingsLeftView({model: this});\n                    if (!has_settings_right)\n                        this.settings_right = new xabber.AccountSettingsRightView({model: this});\n                    this.updateColorScheme();\n                    xabber.body.setScreen('account_settings', {\n                        account: this, right: right, block_name: block_name\n                    });\n                    this.trigger('open_settings');\n                    if (!has_settings_right) {\n                        this.trigger('render_settings');\n                        this.settings_right.addChild('blocklist', xabber.BlockListView, {\n                            account: this,\n                            el: this.settings_right.$('.blocklist-info')[0]\n                        });\n                        this.settings_right.addChild('account_password_view', xabber.ChangeAccountPasswordView, {\n                            model: this,\n                            el: this.settings_right.$('.change-password-container')[0]\n                        });\n                    }\n                },\n\n                updateColorScheme: function () {\n                    let color = this.settings.get('color');\n                    this.settings_left && this.settings_left.$el.attr('data-color', color);\n                    if (this.settings_right) {\n                        this.settings_right.$el.attr('data-color', color);\n                    }\n                    this.vcard_edit.$el.attr('data-color', color);\n                },\n\n                revokeXToken: function (token_uid, callback) {\n                    let iq = $iq({\n                        type: 'set',\n                        to: this.connection.domain\n                    }).c('revoke', {xmlns:Strophe.NS.AUTH_DEVICES});\n                    for (let token_num = 0; token_num < token_uid.length; token_num++)\n                        iq.c('device', {id: token_uid[token_num]}).up();\n                    this.sendIQFast(iq, () => {\n                        callback && callback();\n                    });\n                },\n\n                revokeAllXTokens: function (callback, errback) {\n                    let iq = $iq({\n                        type: 'set',\n                        to: this.connection.domain\n                    }).c('revoke-all', {xmlns:Strophe.NS.AUTH_DEVICES});\n                    this.sendIQFast(iq, (success) => {\n                            callback & callback(success);\n                        },\n                        function (error) {\n                            errback && errback(error);\n                        });\n                },\n\n                deleteAccount: function (show_settings) {\n                    this.show_settings_after_delete = show_settings;\n                    xabber.body.setScreen('all_chats', {right_contact: ''});\n                    if (this.get('x_token'))\n                        this.revokeXToken([this.get('x_token').token_uid]);\n                    this.session.set('delete', true);\n                    this.deactivate();\n                    if (xabber.api_account && xabber.api_account.get('xmpp_binding') === this.get('jid'))\n                        xabber.trigger('quit_accounts');\n                },\n\n                activate: function () {\n                    if (!this.isConnected())\n                        this.connect();\n                },\n\n                deactivate: function (type) {\n                    type || (type = 'set_off');\n                    this.session.set('deactivate', type);\n                    if (this.isConnected()) {\n                        this.connFeedback(xabber.getString(\"settings_account__label_state_disconnecting\"));\n                        this.sendPresence('offline');\n                        this.connection.disconnect();\n                        if (this.fast_conn_manager) this.fast_connection.disconnect();\n                    } else {\n                        this.onDisconnected();\n                    }\n                },\n\n                onDestroy: function () {\n                    if (this.connection && !this.connection.register._registering)\n                        this.connection.connect_callback = null;\n                    if (this.settings)\n                        this.settings.destroy();\n                    if (this.isConnected()) {\n                        this.connection.disconnect();\n                        if (this.fast_conn_manager) this.fast_connection.disconnect();\n                    }\n                    this.cached_sync_conversations.clearDataBase();\n                    this.trigger('remove_saved_chat');\n                },\n\n                registerIQHandler: function () {\n                    this.connection.deleteHandler(this._stanza_handler);\n                    this._stanza_handler = this.connection.addHandler((iq) => {\n                            this.onGetIQ(iq);\n                            return true;\n                        }, null, 'iq', \"get\");\n                },\n\n\n                registerSyncedIQHandler: function () {\n                    this.connection.deleteHandler(this._synced_stanza_handler);\n                    this._synced_stanza_handler = this.connection.addHandler(\n                        this.onSyncedIQ.bind(this),\n                        Strophe.NS.SYNCHRONIZATION, 'iq', \"set\");\n                },\n\n                registerPresenceHandler: function () {\n                    this.connection.deleteHandler(this._pres_handler);\n                    this._pres_handler = this.connection.addHandler(\n                        (presence) => {\n                            this.onPresence(presence);\n                            return true;\n                        }, null, 'presence', null);\n                },\n\n                onSetIQResult: function (iq) {\n                    let to = $(iq).attr('to');\n                    if (this.fast_connection && this.fast_connection.jid === to\n                        && !this.fast_connection.disconnecting && this.fast_connection.authenticated\n                        && this.fast_connection.connected && this.get('status') !== 'offline'){\n                        this.sendIQFast($iq({\n                            type: 'result', id: iq.getAttribute('id'),\n                        }));\n                    } else if (this.connection && this.connection.jid === to && this.connection.authenticated\n                        && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline') {\n                        this.sendIQ($iq({\n                            type: 'result', id: iq.getAttribute('id'),\n                        }));\n                    }\n                },\n\n                onSyncedIQ: function (iq) {\n                    this.onSetIQResult(iq);\n                    this.roster.syncConversations(iq);\n                    return true;\n                },\n\n                onGetIQ: function (iq) {\n                    let $incoming_iq = $(iq),\n                        $confirm = $incoming_iq.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`),\n                        $session_availability = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n                        request_code,\n                        from_jid = $incoming_iq.attr('from');\n                    if ($confirm.length) {\n                        request_code = $confirm.attr('id');\n                        if (this.get('gallery_auth_request_code')) {\n                            this.onAuthCode(request_code)\n                        }\n                        else {\n                            this.gallery_code_requests.push({\n                                id: $incoming_iq.attr('id'),\n                                code: request_code\n                            });\n                        }\n                    }\n                    if ($session_availability.length) {\n                        let session_id = $session_availability.children('session').attr('id'), $session_availability_response;\n                        if (session_id && xabber.current_voip_call && session_id === xabber.current_voip_call.get('session_id') && !xabber.current_voip_call.get('state')) {\n                            $session_availability_response = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')})\n                                .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n                                .c('session', {id: session_id});\n                            xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n                        }\n                        else {\n                            $session_availability_response = $iq({to: from_jid, type: 'error', id: $incoming_iq.attr('id')})\n                                .c('error', {xmlns: Strophe.NS.JINGLE_MSG});\n\n                        }\n                        this.sendIQFast($session_availability_response);\n                    }\n                },\n\n                testGalleryTokenExpire: function(callback) {\n                    let currentTime = new Date(),\n                        tokenExpireTime = new Date(this.get('gallery_token_expires'));\n                    if (this.get('gallery_auth')){\n                        this.once('gallery_token_authenticated', callback)\n                    }\n                    else if (currentTime < tokenExpireTime){\n                        callback && callback();\n                    }\n                    else if (this.server_features.get('media-gallery')){\n                        this.initGalleryAuth(this.server_features.get('media-gallery'))\n                        this.once('gallery_token_authenticated', callback)\n                    }\n                    else if (!this.server_features.get('media-gallery')){\n                        this.set('gallery_url', undefined);\n                        this.set('gallery_token', undefined);\n                        this.set('gallery_token_expires', undefined);\n                        callback && callback();\n                    }\n                },\n\n                initGalleryAuth: function(gallery_feature) {\n                    this.set('gallery_url', gallery_feature.get('from'));\n                    if (this.get('gallery_url') && !this.get('gallery_auth')) {\n                        this.set('gallery_auth', true)\n                        $.ajax({\n                            type: 'POST',\n                            url: this.get('gallery_url') + 'v1/account/xmpp_code_request/',\n                            dataType: 'json',\n                            data: JSON.stringify({jid: this.jid, type: \"iq\"}),\n                            success: (response) => {\n                                if (response.request_id){\n                                    this.set('gallery_auth_request_code', response.request_id)\n                                    if (this.gallery_code_requests.length){\n                                        let verifying_code = this.gallery_code_requests.find(verifying_mess => (verifying_mess.id === this.get('gallery_auth_request_code')));\n                                        if (verifying_code && verifying_code.code)\n                                            this.onAuthCode(verifying_code.code)\n                                    }\n                                }\n                            },\n                            error: (response) => {\n                                this.handleCommonGalleryErrors(response)\n                                this.set('gallery_auth', false)\n                                this.gallery_code_requests = [];\n                                console.log(response)\n                            }\n                        });\n                    }\n                },\n\n                onAuthCode: function (confirm_code) {\n                    this.gallery_code_requests = [];\n                    this.set('gallery_auth_request_code', undefined);\n                    if (confirm_code)\n                        $.ajax({\n                            type: 'POST',\n                            url: this.get('gallery_url') + 'v1/account/xmpp_auth/',\n                            dataType: 'json',\n                            data: JSON.stringify({jid: this.id, code: confirm_code}),\n                            success: (response) => {\n                                if (response.token)\n                                    this.set('gallery_token', response.token);\n                                if (response.expires)\n                                    this.set('gallery_token_expires', response.expires);\n                                this.trigger('gallery_token_authenticated')\n                                this.set('gallery_auth', false)\n                            },\n                            error: (response) => {\n                                this.set('gallery_auth', false)\n                                this.handleCommonGalleryErrors(response)\n                                console.log(response)\n                            }\n                        });\n                },\n\n                prepareFiles: function (files, callback) {\n                    files.forEach((file) => {\n                        let reader = new FileReader();\n                        reader.onloadend = () => {\n                            let b64 = reader.result.split('base64,'),\n                                binary_file = atob(b64[1]),\n                                bytes = new Uint8Array(binary_file.length);\n                            for (let i = 0; i < binary_file.length; i++)\n                                bytes[i] = binary_file.charCodeAt(i);\n                            this.testFile({size: file.size, name: file.name, hash: sha1(bytes)}, file, callback)\n                        }\n                        reader.readAsDataURL(file);\n                    })\n                },\n\n                handleCommonGalleryErrors: function (response) {\n                    if (response.status === 401){\n                        if (this.server_features.get('media-gallery')){\n                            this.initGalleryAuth(this.server_features.get('media-gallery'))\n                        } else {\n                            this.set('gallery_url', null);\n                            this.set('gallery_token', null);\n                        }\n                    }\n                },\n\n                getStorageStats: function (params, callback) {\n                    this.testGalleryTokenExpire(() => {\n                        params && (params = {});\n                        if (this.get('gallery_token') && this.get('gallery_url'))\n                            $.ajax({\n                                type: 'GET',\n                                headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                                url: this.get('gallery_url') + 'v1/files/stats/',\n                                dataType: 'json',\n                                data: params,\n                                success: (response) => {\n                                    callback && callback(response)\n                                },\n                                error: (response) => {\n                                    this.handleCommonGalleryErrors(response)\n                                    console.log(response)\n                                }\n                            });\n                    });\n                },\n\n                testFile: function (params, file, callback) {\n                    this.testGalleryTokenExpire(() => {\n                        if (this.get('gallery_token') && this.get('gallery_url'))\n                            $.ajax({\n                                type: 'GET',\n                                headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                                url: this.get('gallery_url') + 'v1/files/slot/',\n                                dataType: 'json',\n                                data: params,\n                                success: (response) => {\n                                    this.uploadFile(file , callback)\n                                },\n                                error: (response) => {\n                                    this.handleCommonGalleryErrors(response)\n                                    console.log(response)\n                                }\n                            });\n\n                    });\n                },\n\n                uploadFile: function (file, callback, errback) {\n                    this.testGalleryTokenExpire(() => {\n                        if (this.get('gallery_token') && this.get('gallery_url')) {\n                            let formData = new FormData();\n                            formData.append('file', file, file.name);\n                            if (file.duration)\n                                formData.append('duration', file.duration);\n                            if (file.voice)\n                                formData.append('media_type', file.type + '+voice');\n                            else\n                                formData.append('media_type', file.type);\n                            $.ajax({\n                                type: 'POST',\n                                headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                                url: this.get('gallery_url') + 'v1/files/upload/',\n                                data: formData,\n                                contentType: false,\n                                processData: false,\n                                success: (response) => {\n                                    console.log(response)\n                                    callback && callback(response)\n                                },\n                                error: (response) => {\n                                    this.handleCommonGalleryErrors(response)\n                                    console.log(response)\n                                    errback && errback(response)\n                                }\n                            });\n                        }\n                    });\n                },\n\n                uploadAvatar: function (file, callback, errback) {\n                    this.testGalleryTokenExpire(() => {\n                        if (this.get('gallery_token') && this.get('gallery_url')) {\n                            if (!file)\n                                errback && errback('no file')\n                            let formData = new FormData();\n                            formData.append('file', file, file.name);\n                            formData.append('media_type', file.type);\n                            $.ajax({\n                                type: 'POST',\n                                headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                                url: this.get('gallery_url') + 'v1/avatar/upload/',\n                                data: formData,\n                                contentType: false,\n                                processData: false,\n                                success: (response) => {\n                                    console.log(response)\n                                    callback && callback(response)\n                                },\n                                error: (response) => {\n                                    this.handleCommonGalleryErrors(response)\n                                    console.log(response)\n                                    errback && errback(response)\n                                }\n                            });\n                        }\n                    });\n                },\n\n                deleteFile: function (file_id, callback, errback) {\n                    this.testGalleryTokenExpire(() => {\n                        if (this.get('gallery_token') && this.get('gallery_url') && file_id)\n                            $.ajax({\n                                type: 'DELETE',\n                                headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                                url: this.get('gallery_url') + 'v1/files/',\n                                dataType: 'json',\n                                data: JSON.stringify({id: file_id}),\n                                success: (response) => {\n                                    console.log(response)\n                                    callback && callback(response)\n                                },\n                                error: (response) => {\n                                    this.handleCommonGalleryErrors(response)\n                                    console.log(response)\n                                    errback && errback(response)\n                                }\n                            });\n                    });\n                },\n\n                getOpenGraphData: function (url, callback, errback) {\n                    this.testGalleryTokenExpire(() => {\n                        if (this.get('gallery_token') && this.get('gallery_url'))\n                            $.ajax({\n                                type: 'POST',\n                                headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token'), \"Content-Type\": \"application/json\"},\n                                url: this.get('gallery_url') + 'v1/opengraph/',\n                                dataType: 'json',\n                                data: JSON.stringify({url: url}),\n                                success: (response) => {\n                                    response.site = $(response.ogp).closest('meta[property=\"og:site_name\"]').attr('content')\n                                    response.type = $(response.ogp).closest('meta[property=\"og:type\"]').attr('content')\n                                    response.url = $(response.ogp).closest('meta[property=\"og:url\"]').attr('content')\n                                    response.description = $(response.ogp).closest('meta[property=\"og:description\"]').attr('content')\n                                    response.title = $(response.ogp).closest('meta[property=\"og:title\"]').attr('content')\n                                    response.image = $(response.ogp).closest('meta[property=\"og:image\"]').attr('content')\n                                    response.image_height = $(response.ogp).closest('meta[property=\"og:image:height\"]').attr('content')\n                                    response.image_width = $(response.ogp).closest('meta[property=\"og:image:width\"]').attr('content')\n                                    response.video_url = $(response.ogp).closest('meta[property=\"og:video:url\"]').attr('content')\n                                    console.log(response)\n                                    callback && callback(response)\n                                },\n                                error: (response) => {\n                                    this.handleCommonGalleryErrors(response)\n                                    errback && errback(response)\n                                    console.log(response)\n                                }\n                            });\n                    });\n                },\n\n                createMessageFromIQ: function (attrs) {\n                    let contact = this.contacts.mergeContact(attrs.from_jid),\n                        chat = this.chats.getChat(contact);\n                    chat.messages.create(attrs);\n                },\n\n                onPresence: function (presence) {\n                    let $presence = $(presence),\n                        type = presence.getAttribute('type');\n                    if (type === 'error') { return; }\n                    let jid = presence.getAttribute('from'),\n                        bare_jid = Strophe.getBareJidFromJid(jid);\n                    if (bare_jid !== this.get('jid')) {\n                        _.each(this._added_pres_handlers, function (handler) {\n                            handler(presence, bare_jid);\n                        });\n                        return;\n                    };\n                    let resource = Strophe.getResourceFromJid(jid),\n                        priority = Number($presence.find('priority').text()),\n                        status = $presence.find('show').text() || 'online',\n                        status_message = $presence.find('status').text();\n                    _.isNaN(priority) && (priority = 0);\n                    let $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCAD_UPDATE}\"]`);\n                    if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR)\n                        this.save('photo_hash', $vcard_update.find('photo').text());\n                    if (resource) {\n                        let resource_obj = this.resources.get(resource);\n                        if (type === 'unavailable') {\n                            if (resource_obj) { resource_obj.destroy(); }\n                        } else {\n                            let attrs = {\n                                resource: resource,\n                                priority: priority,\n                                status: status,\n                                status_message: status_message\n                            };\n                            let $device = $presence.find(`device[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n                            if ($device && this.x_tokens_list && $device.attr('id')) {\n                                attrs.token_uid = $device.attr('id')\n                            }\n                            if (!resource_obj)\n                                resource_obj = this.resources.create(attrs);\n                            else\n                                resource_obj.set(attrs);\n                        }\n                    }\n                }\n            },\n            {\n                addInitPlugin: function (func) {\n                    this.prototype._init_plugins.push(func);\n                },\n\n                addConnPlugin: function (func, conn, reconn) {\n                    conn && this.prototype._after_connected_plugins.push(func);\n                    reconn && this.prototype._after_reconnected_plugins.push(func);\n                },\n\n                addFastConnPlugin: function (func, conn, reconn) {\n                    conn && this.prototype._after_fast_connected_plugins.push(func);\n                }\n            });\n\n        xabber.Accounts = Backbone.CollectionWithStorage.extend({\n            model: xabber.Account,\n            comparator: function (acc1, acc2) {\n                return acc1.settings.get('order') < acc2.settings.get('order') ? -1 : 1;\n            },\n\n            _initialize: function (models, options) {\n                this.settings_list = xabber.account_settings_list;\n                this.getEnabledList();\n                this.getConnectedList();\n                this.on(\"add\", this.onAdd, this);\n                this.on(\"destroy\", this.onDestroy, this);\n                this.on(\"change:enabled\", this.getEnabledList, this);\n                this.on(\"update_order\", this.onUpdatedOrder, this);\n                this.on(\"add destroy activate deactivate\", this.onListChanged, this);\n                this.on(\"destroy deactivate\", this.onAccountDisconnected, this);\n                xabber.on(\"quit\", this.onQuit, this);\n                xabber.on(\"quit_accounts\", this.onQuitAccounts, this);\n                this.settings_list.on(\"add_settings\", this.onSettingsAdded, this);\n                xabber.api_account && xabber.api_account.on(\"settings_result\", function (result) {\n                    result && this.trigger('update_order');\n                }, this);\n            },\n\n            onQuit: function () {\n                xabber.api_account && xabber.api_account.revoke_token();\n                _.each(_.clone(this.models), function (account) {\n                    account.deleteAccount();\n                    account.password_view.closeModal();\n                    utils.modals.clear_queue();\n                });\n                !this.models.length && xabber.body.setScreen('login');\n            },\n\n            onQuitAccounts: function () {\n                xabber.api_account && xabber.api_account.revoke_token();\n                _.each(_.clone(this.models), function (account) {\n                    if (account.settings.get('to_sync')) {\n                        account.deleteAccount();\n                        account.password_view.closeModal();\n                        utils.modals.clear_queue();\n                    }\n                });\n                !this.models.length && xabber.body.setScreen('login');\n            },\n\n            getEnabledList: function () {\n                this.enabled = this.filter(account => account.get('enabled'));\n            },\n\n            getConnectedList: function () {\n                this.connected = this.filter(account => account.isConnected());\n            },\n\n            onListChanged: function () {\n                this.getEnabledList();\n                this.getConnectedList();\n                this.trigger('list_changed', this);\n            },\n\n            onAdd: function (account) {\n                if (account.is_invalid)\n                    account.destroy();\n            },\n\n            onDestroy: function (account) {\n                if (!account.get('is_new')) {\n                    let no_accounts = !(this.length || xabber.api_account && xabber.api_account.get('connected'));\n                    if (no_accounts) {\n                        xabber.body.setScreen('login');\n                    } else if (account.show_settings_after_delete) {\n                        xabber.body.setScreen('settings');\n                    } else {\n                        xabber.body.setScreen('all-chats');\n                        xabber.chats_view.showAllChats();\n                    }\n                }\n            },\n\n            onAccountDisconnected: function () {\n                xabber.toolbar_view.recountAllMessageCounter();\n                xabber.recountAllMessageCounter();\n            },\n\n            onSettingsAdded: function (settings) {\n                let jid = settings.get('jid');\n                if (!this.get(jid))\n                    this.create({jid: jid});\n            },\n\n            onUpdatedOrder: function () {\n                this.sort();\n                this.getEnabledList();\n                this.getConnectedList();\n            },\n\n            getLastOrder: function () {\n                return this.length ? this.last().settings.get('order') : 0;\n            },\n\n            getDefaultColor: function () {\n                let used_colors = {}, colors = constants.MATERIAL_COLORS;\n                this.each(function (account) {\n                    used_colors[account.settings.get('color')] = true;\n                });\n                for (let idx = 0; idx < colors.length; idx++) {\n                    if (!used_colors[colors[idx]])\n                        return colors[idx];\n                }\n                return 'red';\n            },\n\n            moveBefore: function (acc1, acc2) {\n                let index2 = this.indexOf(acc2),\n                    prev_order = index2 > 0 ? this.at(index2-1).settings.get('order') : 0;\n                acc1.settings.save('order', (acc2.settings.get('order') + prev_order)/2);\n                this._updateOrder();\n            },\n\n            moveToBottom: function (acc) {\n                acc.settings.save('order', this.getLastOrder() + 1);\n                this._updateOrder();\n            },\n\n            _updateOrder: function () {\n                this.sort();\n                this.each(function (acc, index) {\n                    acc.settings.save({order: index + 1});\n                });\n                this.trigger('update_order');\n                if (xabber.api_account && xabber.api_account.get('connected')) {\n                    this.settings_list.order_timestamp.save('timestamp', utils.now());\n                    xabber.api_account.synchronize_order_settings();\n                }\n            }\n        });\n\n        xabber.AccountToolbarItemView = xabber.BasicView.extend({\n            className: 'toolbar-item account-item',\n            template: templates.toolbar_item,\n            avatar_size: constants.AVATAR_SIZES.TOOLBAR_ACCOUNT_ITEM,\n\n            events: {\n                'click .filter-chats': 'filterChats',\n                'click .circle-avatar': 'showSettings'\n            },\n\n            _initialize: function () {\n                this.updateConnected();\n                this.updateAuthState();\n                this.updateStatus();\n                this.updateAvatar();\n                this.updateColorScheme();\n                this.$el.attr('data-jid', this.model.get('jid'));\n                this.model.session.on(\"change:auth_failed\", this.updateAuthState, this);\n                this.model.session.on(\"change:connected\", this.updateConnected, this);\n                this.model.on(\"change:status\", this.updateStatus, this);\n                this.model.on(\"change:image\", this.updateAvatar, this);\n                this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n                this.model.on(\"filter_chats\", this.setActive, this);\n                this.model.on(\"open_settings\", this.setActive, this);\n            },\n\n            updateConnected: function () {\n                this.$el.switchClass('disconnected', !this.model.isConnected());\n            },\n\n            updateAuthState: function () {\n                let auth_failed = this.model.session.get('auth_failed');\n                this.$('.status').hideIf(auth_failed);\n                this.$('.auth-failed').showIf(auth_failed);\n            },\n\n            updateStatus: function () {\n                this.$('.status').attr('data-status', this.model.get('status'));\n            },\n\n            updateAvatar: function () {\n                let image = this.model.cached_image;\n                this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n            },\n\n            updateColorScheme: function () {\n                this.$el.attr('data-color', this.model.settings.get('color'));\n            },\n\n            showSettings: function () {\n                let scroll_top = xabber.toolbar_view.getScrollTop();\n                this.model.showSettings();\n                xabber.toolbar_view.scrollTo(scroll_top);\n            },\n\n            filterChats: function (ev) {\n                let scroll_top = xabber.toolbar_view.getScrollTop();\n                ev.stopPropagation();\n                xabber.chats_view.showChatsByAccount(this.model);\n                this.model.trigger('filter_chats');\n                xabber.toolbar_view.scrollTo(scroll_top);\n            },\n\n            setActive: function () {\n                xabber.toolbar_view.$('.toolbar-item').removeClass('active');\n                this.$el.addClass('active');\n            }\n        });\n\n        xabber.ToolbarAccountsBlockView = xabber.BasicView.extend({\n            _initialize: function () {\n                this.updateList();\n                this.model.on(\"add change:enabled\", this.updateOneInList, this);\n                this.model.on(\"update_order\", this.updateList, this);\n                this.model.on(\"destroy\", this.onAccountRemoved, this);\n            },\n\n            updateList: function (account) {\n                _.each(this.children, function (view) { view.detach(); });\n                _.each(this.model.enabled, (account) => {\n                    let jid = account.get('jid'), view = this.child(jid);\n                    !view && (view = this.addChild(jid, xabber.AccountToolbarItemView, {model: account}));\n                    this.$el.append(view.$el);\n                });\n                this.parent.updateScrollBar();\n            },\n\n            updateOneInList: function (account) {\n                let jid = account.get('jid');\n                if (account.get('enabled')) {\n                    let view = this.child(jid);\n                    if (view) {\n                        view.$el.detach();\n                    } else {\n                        view = this.addChild(jid, xabber.AccountToolbarItemView,\n                            {model: account});\n                    }\n                    let index = this.model.enabled.indexOf(account);\n                    if (index === 0) {\n                        this.$el.prepend(view.$el);\n                    } else {\n                        this.$('.account-item').eq(index - 1).after(view.$el);\n                    }\n                } else {\n                    account.last_msg_timestamp = 0;\n                    this.removeChild(jid);\n                }\n                this.parent.updateScrollBar();\n            },\n\n            onAccountRemoved: function (account) {\n                this.removeChild(account.get('jid'));\n                this.parent.updateScrollBar();\n            }\n        });\n\n        xabber.Resource = Backbone.Model.extend({\n            idAttribute: 'resource',\n            defaults: {\n                priority: 0\n            }\n        });\n\n        xabber.ResourceView = xabber.BasicView.extend({\n            className: 'resource-wrap',\n            template: templates.resource,\n\n            _initialize: function (options) {\n                this.update();\n                this.model.on(\"change\", this.update, this);\n            },\n\n            update: function () {\n                let attrs = this.model.attributes;\n                this.$('.status').attr('data-status', attrs.status);\n                this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n                this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n                this.$('.resource').text(attrs.resource);\n                this.$('.priority').text(attrs.priority);\n                return this;\n            }\n        });\n\n        xabber.ResourceRightView = xabber.BasicView.extend({\n            className: 'resource-wrap',\n            template: templates.resource_right,\n\n            _initialize: function (options) {\n                this.update();\n                this.model.on(\"change\", this.update, this);\n            },\n\n            update: function () {\n                let attrs = this.model.attributes;\n                this.$('.status').attr('data-status', attrs.status);\n                this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n                this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n                this.$('.resource').text(attrs.resource);\n                this.$('.priority').text(attrs.priority);\n                return this;\n            }\n        });\n\n        xabber.Resources = Backbone.Collection.extend({\n            model: xabber.Resource,\n            comparator: function (r1, r2) {\n                let p1 = r1.get('priority'), p2 = r2.get('priority');\n                return p1 > p2 ? -1 : (p1 < p2 ? 1 : 0);\n            },\n\n            requestInfo: function (resource, callback) {\n                let jid = this.jid + '/' + resource.get('resource');\n                if (this.connection && this.connection.connected) {\n                    this.connection.disco.info(jid, null, (iq) => {\n                        let $identity = $(iq).find('identity[category=client]');\n                        if ($identity.length)\n                            resource.set('client', $identity.attr('name'));\n                        this.attention_supported = this.isFeatureSupported(iq, Strophe.NS.ATTENTION);\n                        callback && callback();\n                    });\n                }\n            },\n\n            isFeatureSupported: function (stanza, ns) {\n                let $stanza = $(stanza), is_supported = false;\n                $stanza.find('feature').each(function () {\n                    let namespace = $(this).attr('var');\n                    if (namespace === ns)\n                        is_supported = true;\n                });\n                return is_supported;\n            },\n        });\n\n        xabber.ResourcesView = xabber.BasicView.extend({\n            _initialize: function () {\n                this.renderByInit();\n                this.model.on(\"add\", this.onResourceAdded, this);\n                this.model.on(\"remove\", this.onResourceRemoved, this);\n                this.model.on(\"reset\", this.onReset, this);\n                this.model.on(\"change:priority\", this.onPriorityChanged, this);\n            },\n\n            renderByInit: function () {\n                this.model.each((resource) => {\n                    this.onResourceAdded(resource);\n                });\n            },\n\n            onResourceAdded: function (resource) {\n                this.model.requestInfo(resource);\n                this.addChild(resource.get('resource'),\n                    xabber.ResourceView, {model: resource});\n                this.updatePosition(resource);\n                this.$el.removeClass('hidden');\n                this.parent.updateScrollBar();\n            },\n\n            onPriorityChanged: function (resource) {\n                this.model.sort();\n                this.updatePosition(resource);\n            }\n        });\n\n        xabber.AccountResources = xabber.Resources.extend({\n            initialize: function (models, options) {\n                this.jid = options.account.get('jid');\n                this.connection = options.account.connection;\n            }\n        });\n\n        xabber.AccountResourcesView = xabber.ResourcesView.extend({\n            onResourceRemoved: function (resource) {\n                this.removeChild(resource.get('resource'));\n                this.parent.updateScrollBar();\n            },\n\n            onReset: function () {\n                this.removeChildren();\n                this.parent.updateScrollBar();\n            },\n\n            updatePosition: function (resource) {\n                let view = this.child(resource.get('resource'));\n                if (!view) return;\n                view.$el.detach();\n                let index = this.model.indexOf(resource);\n                if (index === 0) {\n                    this.$('.main-resource').after(view.$el);\n                } else {\n                    this.$('.resource-wrap').eq(index).after(view.$el);\n                }\n                this.updateScrollBar();\n            }\n        });\n\n        xabber.AccountVCardView = xabber.VCardView.extend({\n            events: {\n                \"click .btn-vcard-refresh\": \"refresh\",\n                \"click .btn-vcard-edit\": \"showEditView\",\n                \"click .details-icon\": \"onClickIcon\"\n            },\n\n            __initialize: function () {\n                this.updateButtons();\n                this.model.on(\"activate deactivate\", this.updateButtons, this);\n            },\n\n            updateButtons: function () {\n                let connected = this.model.isConnected();\n                this.$('.btn-vcard-edit').showIf(connected);\n                this.$('.btn-vcard-refresh').showIf(connected);\n            },\n\n            showEditView: function () {\n                this.model.showSettings('vcard_edit');\n            }\n        });\n\n        xabber.AccountMediaGalleryView = xabber.BasicView.extend({\n            template: templates.media_gallery_account,\n            events: {\n                \"change input.gallery-upload\": \"onFileInputChanged\",\n                \"click .gallery-file:not(.gallery-avatar) .btn-delete\": \"deleteFile\",\n                \"click .gallery-file.gallery-avatar .btn-delete\": \"deleteAvatar\",\n                \"click .tabs .tab\": \"onTabClick\",\n                \"click .btn-gallery-sorting\": \"sortFiles\",\n                \"click .gallery-file\": \"onClickFile\",\n            },\n\n            _initialize: function () {\n                this.account = this.model;\n                this.$el.html(this.template());\n                this.parent.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n                this.account.on(\"update_avatar_list\", this.onUpdateAvatars.bind(this));\n            },\n\n            render: function () {\n                this.updateStorage();\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'right'\n                };\n                this.$('.dropdown-button').dropdown(dropdown_settings);\n            },\n\n            onScroll: function () {\n                if (this.$el.hasClass('hidden'))\n                    return;\n                let scrollTop = this.parent.ps_container[0].scrollTop,\n                    scrollHeight = this.parent.ps_container[0].scrollHeight,\n                    offsetHeight = this.parent.ps_container[0].offsetHeight,\n                    persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n                if (persentScrolled > 0.8 && !this.loading_files && (this.current_page < this.total_pages)){\n                    this.current_page++;\n                    this.current_options.page = this.current_page;\n                    this.getFiles(this.current_options)\n                }\n            },\n\n            updateStorage: function (after_deletion, after_avatar_update) {\n                this.account.getStorageStats(null,(response) => {\n                    let used_storage = utils.pretty_size(response.total.used) || '0';\n                    this.$('.btn-delete-files-dropdown').hideIf(!(response.total && response.total.used))\n                    this.$('.gallery-manage-storage').hideIf(!(response.total && response.total.used))\n                    this.$('.storage-usage').html(used_storage + xabber.getString(\"of\") + utils.pretty_size(response.quota))\n                    if (!after_avatar_update){\n                        this.$('.tabs .list-variant[data-value=\"image\"]').hideIf(!(response.images && response.images.used))\n                        if (response.images && response.images.used)\n                            this.$('.tabs .list-variant[data-value=\"image\"]').addClass('tab')\n                        else\n                            this.$('.tabs .list-variant[data-value=\"image\"]').removeClass('tab')\n                    }\n                    this.$('.storage-label-images').hideIf(!(response.images && response.images.used))\n                    this.$('.storage-usage-images').hideIf(!(response.images && response.images.used))\n                    this.$('.storage-usage-images .storage-usage-amount').html(utils.pretty_size(response.images.used))\n                    this.$('.tabs .list-variant[data-value=\"video\"]').hideIf(!(response.videos && response.videos.used))\n                    if (response.videos && response.videos.used)\n                        this.$('.tabs .list-variant[data-value=\"video\"]').addClass('tab')\n                    else\n                        this.$('.tabs .list-variant[data-value=\"video\"]').removeClass('tab')\n                    this.$('.storage-label-videos').hideIf(!(response.videos && response.videos.used))\n                    this.$('.storage-usage-videos').hideIf(!(response.videos && response.videos.used))\n                    this.$('.storage-usage-videos .storage-usage-amount').html(utils.pretty_size(response.videos.used))\n                    this.$('.tabs .list-variant[data-value=\"voice\"]').hideIf(!(response.voices && response.voices.used))\n                    if (response.voices && response.voices.used)\n                        this.$('.tabs .list-variant[data-value=\"voice\"]').addClass('tab')\n                    else\n                        this.$('.tabs .list-variant[data-value=\"voice\"]').removeClass('tab')\n                    this.$('.storage-label-voices').hideIf(!(response.voices && response.voices.used))\n                    this.$('.storage-usage-voices').hideIf(!(response.voices && response.voices.used))\n                    this.$('.storage-usage-voices .storage-usage-amount').html(utils.pretty_size(response.voices.used))\n                    this.$('.tabs .list-variant[data-value=\"files\"]').hideIf(!(response.files && response.files.used))\n                    if (response.files && response.files.used)\n                        this.$('.tabs .list-variant[data-value=\"files\"]').addClass('tab')\n                    else\n                        this.$('.tabs .list-variant[data-value=\"files\"]').removeClass('tab')\n                    this.$('.storage-label-files').hideIf(!(response.files && response.files.used))\n                    this.$('.storage-usage-files').hideIf(!(response.files && response.files.used))\n                    this.$('.storage-usage-files .storage-usage-amount').html(utils.pretty_size(response.files.used))\n                    if (response.images){\n                        this.$('.storage-progress-images').css('width', ((response.images.used/response.quota) * 100).toFixed(2) + '%')\n                    }\n                    if (response.videos){\n                        this.$('.storage-progress-videos').css('width', ((response.videos.used/response.quota) * 100).toFixed(2) + '%')\n                    }\n                    if (response.voices){\n                        this.$('.storage-progress-voices').css('width', ((response.voices.used/response.quota) * 100).toFixed(2) + '%')\n                    }\n                    if (response.files){\n                        this.$('.storage-progress-files').css('width', ((response.files.used/response.quota) * 100).toFixed(2) + '%')\n                    }\n                    this.$('.tabs .indicator').remove();\n                    this.$('.tabs').tabs();\n                    this.$('.indicator').addClass('ground-color-500');\n                    if (after_deletion){\n                        if (!this.$('.tabs .list-variant.tab').length) {\n                            return;\n                        }\n                        !this.$('.gallery-files').children('.gallery-file').length && this.$('.tabs .list-variant.tab a').first().click();\n                    }\n                });\n            },\n\n            filterType: function (file_type, sorting) {\n                this.$('.gallery-files').html('')\n                if (file_type === 'image' || file_type === 'video' || file_type === 'avatars') {\n                    this.$('.gallery-files').removeClass('voice')\n                    this.$('.gallery-files').addClass('grid')\n                } else if (file_type === 'voice') {\n                    this.$('.gallery-files').addClass('voice')\n                    this.$('.gallery-files').removeClass('grid')\n                } else {\n                    this.$('.gallery-files').removeClass('voice')\n                    this.$('.gallery-files').removeClass('grid')\n                }\n                this.$('.tabs .list-variant a').removeClass('active');\n                this.$('.tabs .list-variant[data-value=\"' + file_type + '\"] a').addClass('active');\n                let options = {type: file_type}\n                sorting && (options.order_by = sorting)\n                this.current_options = options\n                if (file_type === 'avatars')\n                    this.getAvatars(options)\n                else\n                    this.getFiles(options)\n            },\n\n            onTabClick: function (ev) {\n                let $target = $(ev.target).closest('.tab'),\n                    file_type = $target.attr('data-value');\n                this.current_page = 1;\n                this.total_pages = 0;\n                this.$('.gallery-files').html('')\n                this.filterType(file_type);\n            },\n\n            onUpdateAvatars: function (ev) {\n                this.updateStorage(false, true);\n                if (this.$('.tab .active').closest('.tab').attr('data-value') === 'avatars'){\n                    this.current_page = 1;\n                    this.total_pages = 0;\n                    this.$('.gallery-files').html('');\n                    this.filterType('avatars');\n                }\n            },\n\n            sortFiles: function (ev) {\n                let $target = $(ev.target).closest('.btn-gallery-sorting'),\n                    file_type = this.$('.tab .active').closest('.tab').attr('data-value'),\n                    sort_type = $target.attr('data-value');\n                this.current_page = 1;\n                this.total_pages = 0;\n                this.$('.gallery-files').html('')\n                this.filterType(file_type, sort_type);\n            },\n\n            onClickFile: function (ev) {\n                let $elem = $(ev.target);\n                if ($elem.hasClass('uploaded-video')) {\n                    let $file = $elem.closest('.gallery-file'),\n                        f_url = $file.attr('data-file');\n\n                    utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n                    return;\n                }\n                if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n                    let $audio_elem = $elem.closest('.gallery-file'),\n                        f_url = $audio_elem.attr('data-file');\n                    $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n                    $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n                    this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n                    this.prev_audio_message = $audio_elem[0];\n                    return;\n                }\n\n                if ($elem.hasClass('mdi-play')) {\n                    let $audio_elem = $elem.closest('.gallery-file');\n                    this.prev_audio_message.voice_message.pause();\n                    this.prev_audio_message = $audio_elem[0];\n                    $audio_elem[0].voice_message.play();\n                    return;\n                }\n\n                if ($elem.hasClass('mdi-pause')) {\n                    this.prev_audio_message.voice_message.pause();\n                    return;\n                }\n            },\n\n            renderVoiceMessage: function (element, file_url) {\n                let not_expanded_msg = element.innerHTML,\n                    unique_id = 'waveform' + moment.now(),\n                    $elem = $(element),\n                    $msg_element = $elem.closest('.gallery-file');\n                $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n                let aud = this.createAudio(file_url, unique_id);\n\n                aud.on('ready', () => {\n                    $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n                    $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n                    let duration = Math.round(aud.getDuration());\n                    $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n                    aud.play();\n                });\n\n                aud.on('error', () => {\n                    $elem.removeClass('voice-message-rendering');\n                    element.innerHTML = not_expanded_msg;\n                    aud.unAll();\n                    $elem.find('.voice-message-play').get(0).remove();\n                    utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n                });\n\n                aud.on('play', () => {\n                    $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n                    $msg_element.addClass('playing');\n                    let timerId = setInterval(function() {\n                        let cur_time = Math.round(aud.getCurrentTime());\n                        if (aud.isPlaying())\n                            $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                        else\n                            clearInterval(timerId);\n                    }, 100);\n                });\n\n                aud.on('finish', () => {\n                    $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n                    $msg_element.removeClass('playing');\n                });\n\n                aud.on('pause', () => {\n                    $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n                    $msg_element.removeClass('playing');\n                });\n\n                $elem.find('.voice-message-volume')[0].onchange = () => {\n                    aud.setVolume($elem.find('.voice-message-volume').val()/100);\n                };\n                return aud;\n            },\n\n            createAudio: function(file_url, unique_id) {\n                let audio = WaveSurfer.create({\n                    container: \"#\" + unique_id,\n                    scrollParent: false,\n                    barWidth: 3,\n                    height: 48,\n                    barHeight: 48,\n                    cursorColor: 'rgba(211,47,47,0.8)',\n                    autoCenter: false,\n                    normalize: true,\n                    hideScrollBar: true,\n                    progressColor: '#757575'\n                });\n                audio.load(file_url);\n                audio.setVolume(0.5);\n                return audio;\n            },\n\n            getFiles: function (options) {\n                this.account.testGalleryTokenExpire(() => {\n                    options && options.file && (options = {});\n                    options = Object.assign({obj_per_page: 50, order_by: '-id'}, options);\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                        if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                            return;\n                        this.current_rendered_type = options.type;\n                        this.loading_files = true\n                        $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                        $.ajax({\n                            type: 'GET',\n                            headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                            url: this.account.get('gallery_url') + 'v1/files/',\n                            dataType: 'json',\n                            data: options,\n                            success: (response) => {\n                                response.type = options.type\n                                this.renderFiles(response)\n                                this.loading_files = false\n                            },\n                            error: (response) => {\n                                this.account.handleCommonGalleryErrors(response)\n                                this.current_rendered_type = undefined;\n                                console.log(response)\n                                this.loading_files = false\n                                this.$('.gallery-files .preloader-wrapper').remove()\n                            }\n                        });\n                    }\n                });\n            },\n\n            getAvatars: function (options) {\n                this.account.testGalleryTokenExpire(() => {\n                    options && options.file && (options = {});\n                    options = Object.assign({obj_per_page: 50, order_by: '-id', type: \"avatars\"}, options);\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                        if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                            return;\n                        this.current_rendered_type = options.type;\n                        this.loading_files = true\n                        $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                        $.ajax({\n                            type: 'GET',\n                            headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                            url: this.account.get('gallery_url') + 'v1/avatar/',\n                            dataType: 'json',\n                            data: options,\n                            success: (response) => {\n                                response.type = options.type\n                                this.renderFiles(response)\n                                this.loading_files = false\n                            },\n                            error: (response) => {\n                                this.account.handleCommonGalleryErrors(response)\n                                this.current_rendered_type = undefined\n                                console.log(response)\n                                this.loading_files = false\n                                this.$('.gallery-files .preloader-wrapper').remove()\n                            }\n                        });\n                    }\n                });\n            },\n\n            renderFiles: function (response) {\n                if (response.type != this.$('.tab .active').closest('.tab').attr('data-value'))\n                    return;\n                if (!response.total_objects && response.type != 'avatars'){\n                    if (response.type){\n                        let tab = this.$('.tabs .list-variant[data-value=' + response.type + ']');\n                        tab.removeClass('tab');\n                        tab.addClass('hidden');\n                        this.$('.tabs .indicator').remove();\n                        this.$('.tabs').tabs();\n                        this.$('.indicator').addClass('ground-color-500');\n                    }\n                }\n                if (!response.items.length){\n                    !this.$('.gallery-files').children('.gallery-file').length && this.$('.tabs .list-variant.tab a').first().click();\n                    return;\n                }\n                this.total_pages = response.total_pages;\n                this.$('.gallery-files .preloader-wrapper').remove()\n                if (response.items.length){\n                    response.items.forEach((item) => {\n                        item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                        let $gallery_file = $(templates.media_gallery_account_file({file: item, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                        (response.type === 'avatars') && $gallery_file.addClass('gallery-avatar');\n                        $gallery_file.appendTo(this.$('.gallery-files'));\n                        $gallery_file.find('.uploaded-img').magnificPopup({\n                            type: 'image',\n                            closeOnContentClick: true,\n                            fixedContentPos: true,\n                            mainClass: 'mfp-no-margins mfp-with-zoom',\n                            image: {\n                                verticalFit: true,\n                                titleSrc: function(item) {\n                                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                                }\n                            },\n                            zoom: {\n                                enabled: true,\n                                duration: 300\n                            }\n                        });\n                    });\n                }\n                else {\n                    this.$('.gallery-files').html(xabber.getString(\"no_files\"))\n                }\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'right'\n                };\n                this.$('.dropdown-button').dropdown(dropdown_settings)\n            },\n\n            deleteFile: function (ev) {\n                let $target = $(ev.target).closest('.gallery-file'),\n                    file_id = $target.attr('data-id');\n                this.account.deleteFile(file_id,(response) => {\n                    this.updateStorage(true);\n                    $target.detach();\n                }, (err) => {\n                })\n            },\n\n            deleteAvatar: function (ev) {\n                this.account.testGalleryTokenExpire(() => {\n                    let $target = $(ev.target).closest('.gallery-file'),\n                        file_id = $target.attr('data-id');\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url') && file_id)\n                        $.ajax({\n                            type: 'DELETE',\n                            headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                            url: this.account.get('gallery_url') + 'v1/avatar/',\n                            dataType: 'json',\n                            data: JSON.stringify({id: file_id}),\n                            success: (response) => {\n                                this.updateStorage(true);\n                                $target.detach();\n                            },\n                            error: (response) => {\n                                this.account.handleCommonGalleryErrors(response)\n                                console.log(response)\n                            }\n                        });\n                });\n            },\n\n            deleteFilesFiltered: function (ev) {\n                this.account.testGalleryTokenExpire(() => {\n                    let $target = $(ev.target).closest('.property-variant'),\n                        days = $target.attr('data-date'),\n                        date = new Date();\n                    days && date.setDate(date.getDate() - days)\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url') && date && date.toISOString().split('T') && date.toISOString().split('T')[0])\n                        $.ajax({\n                            type: 'DELETE',\n                            headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                            url: this.account.get('gallery_url') + 'v1/files/',\n                            dataType: 'json',\n                            data: JSON.stringify({date_lte: date.toISOString().split('T')[0]}),\n                            success: (response) => {\n                                this.updateStorage(true);\n                            },\n                            error: (response) => {\n                                this.account.handleCommonGalleryErrors(response)\n                                console.log(response)\n                            }\n                        });\n                });\n            },\n\n            onFileInputChanged: function (ev) {\n                let target = ev.target,\n                    files = [];\n                for (let i = 0; i < target.files.length; i++) {\n                    files.push(target.files[i]);\n                }\n\n                if (files) {\n                    this.account.prepareFiles(files, this.openStoragePanel.bind(this));\n                    $(target).val('')\n                }\n            },\n        });\n\n        xabber.AccountSettingsLeftView = xabber.BasicView.extend({\n            className: 'account-settings-left-wrap',\n            template: templates.settings_left,\n            avatar_size: constants.AVATAR_SIZES.ACCOUNT_SETTINGS_LEFT,\n\n            events: {\n                \"change .main-info-wrap .circle-avatar input\": \"changeAvatar\",\n                \"click .btn-choose-image\": \"chooseAvatar\",\n                \"click .btn-emoji-panel\": \"openEmojiPanel\",\n                \"click .btn-selfie\": \"openWebcamPanel\",\n                \"click .main-info-wrap .status\": \"openChangeStatus\",\n                \"click .settings-tabs-wrap .settings-tab\": \"jumpToBlock\",\n                \"click .settings-tab.delete-account\": \"deleteAccount\"\n            },\n\n            _initialize: function () {\n                this.status_field = new xabber.StatusMessageWidget({\n                    el: this.$('.status-wrap')[0],\n                    model: this.model\n                });\n                this.updateName();\n                this.updateStatus();\n                this.updateAvatar();\n                this.updateBlocks();\n                this.model.on(\"change:name\", this.updateName, this);\n                this.model.on(\"change:status_updated\", this.updateStatus, this);\n                this.model.on(\"change:image\", this.updateAvatar, this);\n                this.model.on(\"change:gallery_token\", this.updateGallery, this);\n                this.model.on(\"activate deactivate\", this.updateBlocks, this);\n                this.model.on(\"destroy\", this.remove, this);\n            },\n\n            render: function (options) {\n                !options.block_name && (options.block_name = 'connection')\n                this.$el.switchClass('vcard-edit', options.right == 'vcard_edit');\n                this.$('.settings-tab[data-block-name=\"tokens\"]').hideIf(this.model.get('auth_type') !== 'x-token');\n                this.$('.settings-tab').removeClass('active');\n                this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`).addClass('active');\n                this.$('.circle-avatar.dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                });\n\n                this.updateCSS();\n                return this;\n            },\n\n            updateName: function () {\n                this.$('.name').text(this.model.get('name'));\n                this.updateNameCSS();\n            },\n\n            updateStatus: function () {\n                this.$('.main-info-wrap .status').attr('data-status', this.model.get('status'));\n            },\n\n            updateAvatar: function () {\n                let image = this.model.cached_image;\n                this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n            },\n\n            updateBlocks: function () {\n                let connected = this.model.isConnected();\n                this.$('.main-info-wrap').switchClass('disconnected', !connected);\n                // this.$('.settings-tab[data-block-name=\"xmpp-resources\"]').showIf(connected);\n                this.$('.settings-tab[data-block-name=\"server-info\"]').showIf(connected);\n                this.$('.settings-tab[data-block-name=\"blocklist\"]').showIf(connected);\n                this.$('.settings-tab[data-block-name=\"groups-info\"]').showIf(connected);\n                this.updateGallery();\n                this.updateScrollBar();\n            },\n\n            updateGallery: function () {\n                let connected = this.model.isConnected();\n                this.$('.settings-tab[data-block-name=\"media-gallery\"]').showIf(connected && this.model.get('gallery_token'));\n            },\n\n            updateNameCSS: function () {\n                if (!this.isVisible())\n                    return;\n                let $name = this.$('.name');\n                $name.removeAttr('style');\n                let wrap_width = this.$('.name-wrap').width(),\n                    width = $name.width(),\n                    font_size = 22;\n                while (width > wrap_width && font_size > 12) {\n                    $name.css({'font-size': font_size});\n                    width = $name.width();\n                    font_size -= 2;\n                }\n                $name.css({'margin-left': (wrap_width - width) / 2});\n            },\n\n            chooseAvatar: function () {\n                if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                    let avatar_view = new xabber.SetAvatarView();\n                    avatar_view.render({model: this.model});\n                } else\n                    this.$('.main-info-wrap .circle-avatar input').click();\n            },\n\n            openEmojiPanel: function () {\n                let emoji_panel_view = new xabber.EmojiProfileImageView();\n                emoji_panel_view.open({model: this.model});\n            },\n\n            openWebcamPanel: function () {\n                let webcam_panel_view = new xabber.WebcamProfileImageView();\n                webcam_panel_view.open({model: this.model});\n            },\n\n            changeAvatar: function (ev) {\n                let field = ev.target;\n                if (!field.files.length)\n                    return;\n                let file = field.files[0];\n                field.value = '';\n                if (file.size > constants.MAX_AVATAR_FILE_SIZE && !(this.model.get('gallery_token') && this.model.get('gallery_url'))) {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n                    return;\n                } else if (!file.type.startsWith('image')) {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                    return;\n                }\n                this.$('.circle-avatar').find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n                utils.images.getAvatarFromFile(file).done((image, hash, size) => {\n                    if (image) {\n                        this.model.pubAvatar({base64: image, hash: hash, size: size, type: file.type, file: file}, () => {\n                                this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                                this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                            }, () => {\n                                this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                            });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            },\n\n            updateCSS: function () {\n                this.updateNameCSS();\n            },\n\n            openChangeStatus: function () {\n                !xabber.change_status_view && (xabber.change_status_view = new xabber.ChangeStatusView());\n                xabber.change_status_view.open(this.model);\n            },\n\n            jumpToBlock: function (ev) {\n                let $tab = $(ev.target).closest('.settings-tab'),\n                    block_name = $tab.data('block-name');\n                if (block_name === 'vcard_edit'){\n                    this.model.showSettings(block_name, 'vcard');\n                    this.$('.settings-tab').removeClass('active');\n                    $tab.addClass('active');\n                }\n                else if (block_name === 'media-gallery'){\n                    this.model.showSettings(null, block_name);\n                    this.model.settings_right.gallery_view.$('.tabs .list-variant:not(.hidden)').first().click();\n                }\n                else\n                    this.model.showSettings(null, block_name);\n            },\n\n            deleteAccount: function () {\n                let dialog_options = [];\n                if (xabber.api_account && xabber.api_account.get('connected')) {\n                    dialog_options = [{name: 'delete_settings',\n                        checked: this.model.settings.get('to_sync'),\n                        text: xabber.getString(\"dialog_delete_account__label_delete_synced_settings\")}];\n                }\n                utils.dialogs.ask(xabber.getString(\"settings_account__button_quit_account\"), xabber.getString(\"dialog_quit_account__confirm\"),\n                    dialog_options, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n                    if (!res)\n                        return;\n                    if (res.delete_settings && xabber.api_account) {\n                        if (xabber.api_account.get('xmpp_binding') === this.model.get('jid'))\n                            xabber.api_account._call_method('DELETE', '/accounts/current/client-settings/', {jid: this.model.get('jid')});\n                        else\n                            xabber.api_account.delete_settings(this.model.get('jid'));\n                    }\n                    this.model.deleteAccount();\n                });\n            }\n        });\n\n        xabber.AccountSettingsRightView = xabber.BasicView.extend({\n            className: 'account-settings-right-wrap',\n            template: templates.settings_right,\n            ps_selector: '.panel-content',\n\n            events: {\n                \"change .enabled-state input\": \"setEnabled\",\n                \"change .setting-send-chat-states input\": \"setTypingNotification\",\n                \"change .setting-use-omemo input\": \"setEnabledOmemo\",\n                \"click .btn-change-password\": \"showPasswordView\",\n                \"click .btn-reconnect\": \"reconnect\",\n                \"click\": \"hideResources\",\n                \"click .last-auth.resource\": \"showResources\",\n                \"change .sync-account\": \"changeSyncSetting\",\n                \"click .btn-delete-settings\": \"deleteSettings\",\n                \"change .color-scheme input[type=radio][name=account_color]\": \"changeColor\",\n                \"click .token-wrap .btn-revoke-token\": \"revokeXToken\",\n                \"click .tokens .btn-revoke-all-tokens\": \"revokeAllXTokens\",\n                \"click .omemo-info .btn-manage-devices\": \"openDevicesWindow\",\n                \"click .btn-block\": \"openBlockWindow\",\n                \"click .btn-unblock-selected\": \"unblockSelected\",\n                \"click .btn-deselect-blocked\": \"deselectBlocked\",\n                \"click .btn-delete-files\": \"deleteFilesFiltered\",\n                \"click .omemo-info .btn-purge-keys\": \"purgeKeys\"\n            },\n\n            _initialize: function () {\n                // this.resources_view = this.addChild('resources', xabber.AccountResourcesView,\n                //     {model: this.model.resources, el: this.$('.xmpp-resources')[0]});\n                this.vcard_view = this.addChild('vcard', xabber.AccountVCardView,\n                    {model: this.model, el: this.$('.vcard')[0]});\n                this.gallery_view = this.addChild('media-gallery', xabber.AccountMediaGalleryView,\n                    {model: this.model, el: this.$('.media-gallery')[0]});\n                this.$('.account-name .value').text(this.model.get('jid'));\n                this.updateStatus();\n                this.updateView();\n                this.showConnectionStatus();\n                this.updateSynchronizationBlock();\n\n                this.model.resources.on(\"change\", this.updateXTokens, this);\n                this.model.resources.on(\"add\", this.updateXTokens, this);\n                this.model.resources.on(\"destroy\", this.updateXTokens, this);\n                this.model.session.on(\"change:reconnecting\", this.updateReconnectButton, this);\n                this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n                this.model.settings.on(\"change:to_sync\", this.updateSyncOption, this);\n                this.model.settings.on(\"change:deleted\", this.updateDelSettingsButton, this);\n                this.model.settings.on(\"change:to_sync change:synced\", this.updateSyncState, this);\n                xabber.api_account && xabber.api_account.on(\"change:connected\", this.updateSynchronizationBlock, this);\n                this.model.on(\"change:enabled\", this.updateEnabled, this);\n                this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n                this.model.settings.on(\"change:encrypted_chatstates\", this.updateEncryptedChatstates, this);\n                this.model.on(\"change:status_updated\", this.updateStatus, this);\n                this.model.on(\"activate deactivate\", this.updateView, this);\n                this.model.on(\"change:auth_type\", this.updateView, this);\n                this.model.on(\"destroy\", this.remove, this);\n            },\n\n            render: function (options) {\n                !options.block_name && (options.block_name = 'connection')\n                this.updateEnabledOmemo();\n                this.updateEncryptedChatstates();\n                this.updateEnabled();\n                this.updateXTokens();\n                this.updateView();\n                this.$('.main-resource .client').text(xabber.get('client_name'));\n                this.$('.main-resource .resource').text(this.model.resource);\n                this.$('.main-resource .priority').text(this.model.get('priority'));\n                this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n                    .prop('checked', true);\n                if (options.block_name){\n                    this.$('.settings-block-wrap').addClass('hidden');\n                    this.$('.settings-block-wrap.'+options.block_name).removeClass('hidden');\n                    this.$('.settings-panel-head span.settings-panel-head-title').text(this.$('.settings-block-wrap.'+options.block_name).attr('data-header'));\n                    this.$('.btn-block').switchClass('hidden2', options.block_name != 'blocklist-info');\n                    this.$('.media-gallery-button.btn-more').hideIf(options.block_name != 'media-gallery');\n                    if (options.block_name === 'media-gallery') {\n                        let dropdown_settings = {\n                            inDuration: 100,\n                            outDuration: 100,\n                            constrainWidth: false,\n                            hover: false,\n                            alignment: 'right'\n                        };\n                        this.$('.media-gallery-button.dropdown-button').dropdown(dropdown_settings);\n\n                        this.$('.btn-delete-files-variants').dropdown({\n                            inDuration: 100,\n                            outDuration: 100,\n                            hover: true,\n                            belowOrigin: true,\n                        });\n                    }\n                }\n                this.scrollToChild(this.$('.settings-block-wrap.'+options.block_name));\n                this.$('.panel-content-wrap').removeClass('hidden');\n                if (this.ps_container.length) {\n                    this.ps_container.perfectScrollbar(\n                        _.extend(this.ps_settings || {}, xabber.ps_settings)\n                    );\n                }\n                return this;\n            },\n\n            updateStatus: function () {\n                let account = this.model,\n                    status = account.get('status'),\n                    status_message = account.getStatusMessage();\n                this.$('.main-resource .status').attr('data-status', status);\n                this.$('.main-resource .status-message').text(status_message);\n            },\n\n            updateView: function () {\n                let connected = this.model.isConnected();\n                this.$('.connection-wrap .buttons-wrap .btn-change-password').hideIf(this.model.get('auth_type') === 'x-token');\n                this.$('.connection-wrap .buttons-wrap .btn-reconnect').hideIf(this.model.get('auth_type') === 'x-token');\n                this.updateScrollBar();\n            },\n\n            updateSynchronizationBlock: function () {\n                this.$('.xabber-account-features-wrap').showIf(xabber.api_account && xabber.api_account.get('connected'));\n                this.updateSyncState();\n                this.updateSyncOption();\n                this.updateDelSettingsButton();\n            },\n\n            showResources: function (ev) {\n                this.$(`.token-resource-wrap`).hideIf(true)\n                let resource_id = $(ev.target).attr('data-resource-id');\n                this.$(`.token-resource-wrap[data-resource-id=\"${resource_id}\"]`).hideIf(false)\n            },\n\n            hideResources: function (ev) {\n                if (!($(ev.target).hasClass('last-auth') && $(ev.target).hasClass('resource') || $(ev.target).closest(\".token-resource-wrap\").length > 0))\n                    this.$(`.token-resource-wrap`).hideIf(true)\n            },\n\n            renderAllXTokens: function () {\n                this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n                $(_.sortBy(this.model.x_tokens_list), 'last_auth').each((idx, token) => {\n                    let pretty_token = {\n                        resource_obj: undefined,\n                        client: token.client,\n                        device: token.device,\n                        token_uid: token.token_uid,\n                        ip: token.ip,\n                        last_auth: pretty_datetime(token.last_auth),\n                        expire: pretty_datetime(token.expire)\n                    };\n                    let resource_obj = this.model.resources.findWhere({ token_uid: token.token_uid });\n                    if (resource_obj)\n                        pretty_token.resource_obj = resource_obj.toJSON();\n                    if (this.model.get('x_token')) {\n                        if (this.model.get('x_token').token_uid == token.token_uid) {\n                            let $cur_token_html = $(templates.current_token_item(pretty_token));\n                            this.$('.panel-content-wrap .tokens .current-session').append($cur_token_html);\n                            return;\n                        }\n                    }\n                    let $token_html = $(templates.token_item(pretty_token));\n                    this.$('.panel-content-wrap .tokens .all-sessions').append($token_html);\n                });\n                if (this.$('.panel-content-wrap .tokens .all-sessions').children().length)\n                    this.$('.panel-content-wrap .tokens .all-sessions-wrap').removeClass('hidden');\n                else\n                    this.$('.panel-content-wrap .tokens .all-sessions-wrap').addClass('hidden');\n            },\n\n            updateXTokens: function () {\n                if (this.model.get('auth_type') !== 'x-token') {\n                    this.$('.panel-content-wrap .tokens').addClass('hidden');\n                    this.$('.panel-content-wrap .tokens .sessions-wrap').children().html(\"\");\n                    return;\n                }\n                this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n                if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                    this.renderAllXTokens();\n                }\n            },\n\n            revokeXToken: function (ev) {\n                let $target = $(ev.target).closest('.token-wrap'),\n                    token_uid = $target.data('token-uid');\n                this.model.revokeXToken([token_uid], () => {\n                    if (this.model.get('x_token'))\n                        if (this.model.get('x_token').token_uid === token_uid) {\n                            this.model.deleteAccount();\n                            return;\n                        }\n                    this.model.getAllXTokens();\n                });\n            },\n\n            revokeAllXTokens: function () {\n                utils.dialogs.ask(xabber.getString(\"settings_account__dialog_terminate_sessions__header\"), xabber.getString(\"terminate_all_sessions_title\"), null, { ok_button_text: xabber.getString(\"button_terminate\")}).done((result) => {\n                    if (result && this.model.x_tokens_list)\n                        this.model.revokeAllXTokens(() => {\n                            this.model.getAllXTokens();\n                        });\n                });\n            },\n\n            updateSyncState: function () {\n                let state;\n                if (!this.model.settings.get('to_sync'))\n                    state = 'off';\n                else\n                    state = this.model.settings.get('synced') ? 'yes' : 'no';\n                this.$('.sync-status').text(xabber.getString(constants.SYNCED_STATUS_DATA[state].tip));\n                let mdiclass = constants.SYNCED_STATUS_DATA[state].icon,\n                    $sync_icon = this.$('.sync-status-icon');\n                $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n                    .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n            },\n\n            updateSyncOption: function () {\n                this.$('.sync-account').prop('checked', this.model.settings.get('to_sync'));\n            },\n\n            updateDelSettingsButton: function () {\n                this.$('.btn-delete-settings').hideIf(this.model.settings.get('deleted'));\n            },\n\n            updateEnabled: function () {\n                let enabled = this.model.get('enabled');\n                this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n            },\n\n            updateEnabledOmemo: function () {\n                let enabled = this.model.settings.get('omemo'), has_keys = false;\n                if (this.model.omemo) {\n                    has_keys = Object.keys(this.model.omemo.get('prekeys')).length;\n                } else {\n                    let omemo = new xabber.Omemo({id: 'omemo'}, {\n                        account: this.model,\n                        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                        fetch: 'before'\n                    });\n                    has_keys = Object.keys(omemo.get('prekeys')).length;\n                    omemo.destroy();\n                }\n                if (_.isUndefined(enabled))\n                    enabled = false;\n                if (enabled && this.model.omemo_enable_view)\n                    this.model.omemo_enable_view.close();\n                this.$('.setting-use-omemo input[type=checkbox]').prop('checked', enabled);\n                this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n                this.$('.omemo-settings-wrap .setting-wrap.purge-keys').switchClass('hidden', !has_keys);\n            },\n\n            updateEncryptedChatstates: function () {\n                let enabled = this.model.settings.get('encrypted_chatstates');\n                this.$('.setting-send-chat-states input[type=checkbox]').prop('checked', enabled);\n            },\n\n            updateReconnectButton: function () {\n                this.$('.btn-reconnect').switchClass('disabled', this.model.session.get('reconnecting'));\n            },\n\n            setEnabled: function (ev) {\n                let enabled = this.$('.enabled-state input').prop('checked');\n                this.model.save('enabled', enabled);\n                enabled ? this.model.activate() : this.model.deactivate();\n            },\n\n            setEnabledOmemo: function () {\n                let enabled = this.$('.setting-use-omemo input').prop('checked');\n                this.model.settings.save('omemo', enabled);\n                this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n                if (enabled)\n                    this.initOmemo();\n                else\n                    this.destroyOmemo();\n            },\n\n            setTypingNotification: function () {\n                let enabled = this.$('.setting-send-chat-states input').prop('checked');\n                this.model.settings.save('encrypted_chatstates', enabled);\n            },\n\n            initOmemo: function () {\n                this.model.omemo = new xabber.Omemo({id: 'omemo'}, {\n                    account: this.model,\n                    storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                    fetch: 'before'\n                });\n                setTimeout(() => {\n                    this.model.omemo.onConnected();\n                }, 1000);\n            },\n\n            destroyOmemo: function () {\n                this.model.omemo.destroy();\n                this.model.omemo = undefined;\n            },\n\n            openDevicesWindow: function () {\n                if (this.model.omemo) {\n                    !this.omemo_devices && (this.omemo_devices = new xabber.Fingerprints({model: this.model.omemo}));\n                    this.omemo_devices.open();\n                }\n                else\n                    utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n            },\n\n            purgeKeys: function () {\n                utils.dialogs.ask(xabber.getString('omemo__dialog_purge_keys__header'), xabber.getString('omemo__dialog_purge_keys__text'),\n                    null, { ok_button_text: xabber.getString('omemo__dialog_purge_keys__button_purge_keys')}).done((result) => {\n                    if (result) {\n                        if (this.model.omemo) {\n                            let device_id = this.model.omemo.get('device_id');\n                            this.model.omemo.save('prekeys', {});\n                            this.model.omemo.bundle && (this.model.omemo.bundle.preKeys = []);\n                            if (this.model.omemo.own_devices[device_id]) {\n                                this.model.omemo.own_devices[device_id].preKeys = [];\n                                this.model.omemo.own_devices[device_id].set({ik: null, fingerprint: null});\n                            }\n                            this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                        } else {\n                            let omemo = new xabber.Omemo({id: 'omemo'}, {\n                                account: this.model,\n                                storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                                fetch: 'before'\n                            });\n                            omemo.save('prekeys', {});\n                            this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, omemo.get('device_id'));\n                            omemo.destroy();\n                        }\n                        this.$('.omemo-settings-wrap .setting-wrap.purge-keys').switchClass('hidden', true);\n                    }\n                });\n            },\n\n            showConnectionStatus: function () {\n                this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n            },\n\n            showPasswordView: function () {\n                this.model.password_view.show();\n            },\n\n            reconnect: function () {\n                if (this.model.session.get('reconnecting'))\n                    return;\n                this.model.save('enabled', true);\n                if (this.model.connection.connected)\n                    this.model.connection.disconnect();\n                else\n                    this.model.connect();\n            },\n\n            changeSyncSetting: function (ev) {\n                let to_sync = $(ev.target).prop('checked'),\n                    settings = this.model.settings;\n                settings.save('to_sync', to_sync);\n                if (to_sync) {\n                    settings.update_timestamp();\n                    xabber.api_account && xabber.api_account.synchronize_main_settings();\n                }\n            },\n\n            deleteSettings: function () {\n                utils.dialogs.ask(xabber.getString(\"progress_title_delete_settings\"), xabber.getString(\"delete_settings_summary\"),\n                    [{name: 'delete_account', checked: this.model.settings.get('to_sync'),\n                        text: xabber.getString(\"delete_settings__optional_button__delete_synced_account\")}],{ ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n                    if (res) {\n                        if (!res.delete_account) {\n                            this.model.settings.save('to_sync', false);\n                        } else if (!this.model.settings.get('to_sync')) {\n                            this.model.deleteAccount(true);\n                        }\n                        xabber.api_account && xabber.api_account.delete_settings(this.model.get('jid'));\n                    }\n                });\n            },\n\n            changeColor: function (ev) {\n                let value = ev.target.value;\n                this.model.settings.update_settings({color: value});\n            },\n\n            openBlockWindow: function () {\n                utils.dialogs.ask_enter_value(xabber.getString(\"dialog_block_xmpp_address__text\"), null, {modal_class: 'account-add-blocked', input_placeholder_value: xabber.getString(\"dialog_block_xmpp_address__hint_address\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n                    if (result) {\n                        let contact = this.model.contacts.get(result);\n                        if (contact)\n                            contact.block();\n                        else {\n                            this.model.contacts.blockContact(result);\n                        }\n                    }\n                });\n            },\n\n            unblockSelected: function () {\n                if (this.children && this.children.blocklist)\n                    this.children.blocklist.unblockSelected();\n            },\n\n            deselectBlocked: function () {\n                if (this.children && this.children.blocklist)\n                    this.children.blocklist.deselectBlocked();\n            },\n\n            deleteFilesFiltered: function (ev) {\n                if (this.gallery_view)\n                    this.gallery_view.deleteFilesFiltered(ev);\n            },\n        });\n\n        xabber.StatusMessageWidget = xabber.InputWidget.extend({\n            field_name: 'status-message',\n            placeholder: 'Set custom status',\n\n            bindModelEvents: function () {\n                this.model.on(\"change:status_updated\", this.updateValue, this);\n            },\n\n            getValue: function () {\n                return this.model.getStatusMessage();\n            },\n\n            setValue: function (value) {\n                this.model.setStatus(null, value);\n            }\n        });\n\n        xabber.AccountSettingsItemView = xabber.BasicView.extend({\n            className: 'xmpp-account draggable droppable',\n            template: templates.global_settings_item,\n            avatar_size: constants.AVATAR_SIZES.SETTINGS_ACCOUNT_ITEM,\n\n            events: {\n                \"click .account-info-wrap\": \"showSettings\",\n                \"change .enabled-state input\": \"setEnabled\",\n            },\n\n            _initialize: function () {\n                this.$('.jid').text(this.model.get('jid'));\n                this.updateEnabled();\n                this.updateAvatar();\n                this.updateColorScheme();\n                this.updateSyncState();\n                this.showConnectionStatus();\n                this.model.on(\"change:enabled\", this.updateEnabled, this);\n                this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n                this.model.on(\"change:image\", this.updateAvatar, this);\n                this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n                this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n                this.$el.on('drag_to', this.onDragTo.bind(this));\n                this.$('.move-account-to-this')\n                    .on('move_xmpp_account', this.onMoveAccount.bind(this));\n                this.model.settings.on(\"change:to_sync\", this.updateSyncState, this);\n            },\n\n            updateAvatar: function () {\n                let image = this.model.cached_image;\n                this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n            },\n\n            updateColorScheme: function () {\n                this.$el.attr('data-color', this.model.settings.get('color'));\n            },\n\n            showConnectionStatus: function () {\n                this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n            },\n\n            updateEnabled: function () {\n                let enabled = this.model.get('enabled');\n                this.$el.switchClass('disabled', !enabled);\n                this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n            },\n\n            setEnabled: function (ev) {\n                let enabled = this.$('.enabled-state input').prop('checked');\n                this.model.save('enabled', enabled);\n                enabled ? this.model.activate() : this.model.deactivate();\n            },\n\n            onDragTo: function (ev, drop_elem) {\n                drop_elem && $(drop_elem).trigger('move_xmpp_account', this.model);\n            },\n\n            onMoveAccount: function (ev, account) {\n                this.model.collection.moveBefore(account, this.model);\n            },\n\n            updateSyncState: function () {\n                let connected = xabber.api_account && xabber.api_account.get('connected');\n                this.$('.sync-marker-wrap').showIf(connected);\n                this.$el.find('.sync-marker').showIf(this.model.settings.get('to_sync'));\n            },\n\n            showSettings: function () {\n                this.model.showSettings();\n            }\n        });\n\n        xabber.SettingsAccountsBlockView = xabber.BasicView.extend({\n            _initialize: function () {\n                this.updateList();\n                this.updateSyncState();\n                this.model.on(\"add\", this.updateOneInList, this);\n                this.model.on(\"update_order\", this.updateList, this);\n                this.model.on(\"destroy\", this.onAccountRemoved, this);\n                xabber.api_account && xabber.api_account.on(\"change:connected\", this.updateSyncState, this);\n                this.$('.move-account-to-bottom')\n                    .on('move_xmpp_account', this.onMoveAccountToBottom.bind(this));\n            },\n\n            updateList: function () {\n                _.each(this.children, function (view) { view.detach(); });\n                this.model.each((account) => {\n                    let jid = account.get('jid'), view = this.child(jid);\n                    if (!view) {\n                        view = this.addChild(jid, xabber.AccountSettingsItemView, {model: account});\n                    }\n                    this.$('.no-accounts-tip').before(view.$el);\n                });\n                this.updateHtml();\n                this.parent.updateScrollBar();\n            },\n\n            updateOneInList: function (account) {\n                let jid = account.get('jid'),\n                    view = this.child(jid);\n                if (view)\n                    view.$el.detach();\n                else\n                    view = this.addChild(jid, xabber.AccountSettingsItemView, {model: account});\n                let index = this.model.indexOf(account);\n                if (index === 0)\n                    this.$('.accounts-head-wrap').after(view.$el);\n                else\n                    this.$('.xmpp-account').eq(index - 1).after(view.$el);\n                this.updateHtml();\n                this.parent.updateScrollBar();\n            },\n\n            onAccountRemoved: function (account) {\n                this.removeChild(account.get('jid'));\n                this.updateHtml();\n                this.parent.updateScrollBar();\n            },\n\n            render: function () {\n                this.updateHtml();\n                _.each(this.children, function (view) {\n                    view.updateEnabled();\n                });\n            },\n\n            updateHtml: function () {\n                this.$('.no-accounts-tip').hideIf(this.model.length);\n                this.$('.accounts-head-wrap').showIf(this.model.length);\n                this.parent.$('.settings-tab[data-block-name=\"xmpp-accounts\"] .settings-block-name')\n                    .text(this.model.length === 1 ? xabber.getString(\"account\") : xabber.getString(\"settings__menu_item__xmpp_account\") );\n            },\n\n            updateSyncState: function () {\n                let connected = xabber.api_account && xabber.api_account.get('connected');\n                this.$('.sync-head').showIf(connected);\n                this.$('.sync-marker-wrap').showIf(connected);\n                this.$('.sync-head').hideIf(!connected);\n                this.$('.sync-marker-wrap').hideIf(!connected);\n            },\n\n            onMoveAccountToBottom: function (ev, account) {\n                this.model.moveToBottom(account);\n            }\n        });\n\n        xabber.ChangeStatusView = xabber.BasicView.extend({\n            className: 'modal main-modal change-status-modal',\n            template: templates.change_status,\n\n            events: {\n                \"click .status-values li\": \"changeStatus\",\n                \"click .status-message-wrap .clear-input\": \"clearStatusMessageInput\",\n                \"keyup .status-message\": \"keyUp\",\n                \"change .apply-to-all\": \"changeApplyToAll\"\n            },\n\n            open: function (account) {\n                this.account = account;\n                this.highlightStatus(account.get('status'));\n                this.restoreStatusMessageInput();\n                this.show();\n            },\n\n            highlightStatus: function (status) {\n                this.$('.status-values li[data-value=\"'+status+'\"]').addClass('active')\n                    .siblings().removeClass('active');\n            },\n\n            changeStatus: function (ev) {\n                let status = $(ev.target).closest('li').data('value');\n                this.highlightStatus(status);\n                this.do_change();\n                this.closeModal();\n            },\n\n            restoreStatusMessageInput: function () {\n                let status_message = this.account.get('status_message');\n                this.$('.status-message').val(status_message)\n                    .switchClass('filled', status_message);\n                if (!status_message) {\n                    this.$('.status-message').attr('placeholder', this.account.getStatusMessage());\n                }\n            },\n\n            clearStatusMessageInput: function () {\n                let verbose_status = xabber.getString(this.account.get('status'));\n                this.$('.status-message').val('').attr('placeholder', verbose_status)\n                    .removeClass('filled');\n            },\n\n            keyUp: function (ev) {\n                if (ev.keyCode === constants.KEY_ENTER) {\n                    this.do_change();\n                    this.closeModal();\n                } else {\n                    let value = this.$('.status-message').val();\n                    this.$('.status-message').switchClass('filled', value);\n                }\n            },\n\n            do_change: function () {\n                let status = this.$('.status-values li.active').data('value'),\n                    status_message = this.$('.status-message').val();\n                if (this.apply_to_all) {\n                    xabber.accounts.each(function (account) {\n                        account.setStatus(status, status_message);\n                    });\n                } else {\n                    this.account.setStatus(status, status_message);\n                }\n            },\n\n            changeApplyToAll: function (ev) {\n                this.apply_to_all = $(ev.target).prop('checked');\n            },\n\n            render: function () {\n                this.$el.openModal({\n                    ready: this.onRender.bind(this),\n                    complete: this.close.bind(this)\n                });\n            },\n\n            onRender: function () {\n                Materialize.updateTextFields();\n            },\n\n            onHide: function () {\n                this.$el.detach();\n            },\n\n            close: function () {\n                let value = this.$('.status-message').val();\n                if (!value)\n                    this.do_change();\n                this.closeModal();\n            },\n\n            closeModal: function () {\n                this.$el.closeModal({ complete: this.hide.bind(this) });\n            }\n        });\n\n        xabber.SetAvatarView = xabber.BasicView.extend({\n            className: 'modal main-modal avatar-picker background-panel',\n            template: templates.avatars_gallery,\n            ps_selector: '.modal-content',\n            ps_settings: {theme: 'item-list'},\n\n            events: {\n                \"click .menu-btn\": \"updateActiveMenu\",\n                \"click .library-wrap .image-item\": \"setActiveImage\",\n                'change input[type=\"file\"]': \"onFileInputChanged\",\n                'keyup input.url': \"onInputChanged\",\n                \"click .btn-add\": \"addAvatar\",\n                \"click .btn-cancel\": \"close\"\n            },\n\n            _initialize: function () {\n                this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n            },\n\n            render: function (options) {\n                this.model = options.model;\n                this.createLibrary();\n                this.$('.menu-btn').removeClass('active');\n                this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n                this.$('.modal-header span').text(xabber.getString(\"account_set_avatar_header\"));\n                this.$el.openModal({\n                    ready: () => {\n                        this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n                    },\n                    complete: this.close.bind(this)\n                });\n                let draggable = this.$('.upload-wrap');\n                draggable[0].ondragenter = function (ev) {\n                    ev.preventDefault();\n                    draggable.addClass('file-drop');\n                };\n                draggable[0].ondragover = function (ev) {\n                    ev.preventDefault();\n                };\n                draggable[0].ondragleave = function (ev) {\n                    if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                        return;\n                    ev.preventDefault();\n                    draggable.removeClass('file-drop');\n                };\n                draggable[0].ondrop = (ev) => {\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                    draggable.removeClass('file-drop');\n                    let files = ev.dataTransfer.files || [], file;\n                    for (let i = 0; i < files.length; i++) {\n                        if (utils.isImageType(files[i].type)) {\n                            file = files[i];\n                            break;\n                        }\n                    }\n                    file && this.addFile(file);\n                };\n            },\n\n            onPaste: function (ev) {\n                let url = ev.clipboardData.getData('text').trim();\n                this.$('.image-preview img')[0].onload = () => {\n                    this.$('.image-preview img').removeClass('hidden');\n                    this.updateActiveButton();\n                };\n                this.$('.image-preview img').addClass('hidden')[0].src = url;\n                this.updateActiveButton();\n            },\n\n            updateActiveMenu: function (ev) {\n                let screen_name = ev.target.getAttribute('data-screen-name');\n                this.$('.menu-btn').removeClass('active');\n                this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n                this.updateScreen(screen_name);\n            },\n\n            updateScreen: function (name) {\n                this.$('.screen-wrap').addClass('hidden');\n                this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n                this.scrollToTop();\n                this.updateActiveButton();\n            },\n\n            updateActiveButton: function () {\n                let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n                    non_active = true;\n                if ($active_screen.attr('data-screen') == 'library') {\n                    $active_screen.find('div.active').length && (non_active = false);\n                } else {\n                    $active_screen.find('img:not(.hidden)').length && (non_active = false);\n                }\n                this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n            },\n\n            renderFiles: function (response) {\n                this.$('.library-wrap .preloader-wrapper').remove()\n                if (response.items.length){\n                    this.current_items = response.items\n                    response.items.forEach((item, idx) => {\n                        let img = $(`<div class=\"image-item\"/>`);\n                        img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                        img.attr('data-src', item.file);\n                        img.attr('data-id', idx);\n                        this.$('.library-wrap').append(img);\n                    });\n                }\n            },\n\n            createLibrary: function () {\n                this.model.testGalleryTokenExpire(() => {\n                    let options = {order_by: '-id'};\n                    if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                        this.$('.library-wrap').html(env.templates.contacts.preloader())\n                        $.ajax({\n                            type: 'GET',\n                            headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                            url: this.model.get('gallery_url') + 'v1/avatar/',\n                            dataType: 'json',\n                            data: options,\n                            success: (response) => {\n                                console.log(response)\n                                this.renderFiles(response)\n                            },\n                            error: (response) => {\n                                this.model.handleCommonGalleryErrors(response)\n                                console.log(response)\n                                this.$('.library-wrap .preloader-wrapper').remove()\n                            }\n                        });\n                    }\n                });\n            },\n\n            setActiveImage: function (ev) {\n                let $target = $(ev.target);\n                if ($target.hasClass('active'))\n                    $target.removeClass('active');\n                else {\n                    this.$('.library-wrap>div').removeClass('active');\n                    $target.addClass('active');\n                }\n                this.updateActiveButton();\n            },\n\n            onFileInputChanged: function (ev) {\n                let target = ev.target, file;\n                for (let i = 0; i < target.files.length; i++) {\n                    if (utils.isImageType(target.files[i].type)) {\n                        file = target.files[i];\n                        break;\n                    }\n                }\n                file && this.addFile(file);\n                $(target).val('');\n            },\n\n            addFile: function (file) {\n                let reader = new FileReader();\n                reader.onload = (e) => {\n                    let image_prev = new Image(),\n                        src = e.target.result;\n                    image_prev.src = src;\n                    this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n                    this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n                    this.current_file = file;\n                    this.updateActiveButton();\n                };\n                reader.readAsDataURL(file);\n            },\n\n            onInputChanged: function (ev) {\n                if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n                    return;\n                if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n                    let url = ev.target.value.trim();\n                    this.$('.image-preview img')[0].onload = () => {\n                        this.$('.image-preview img').removeClass('hidden');\n                        this.updateActiveButton();\n                    };\n                    this.$('.image-preview img').addClass('hidden')[0].src = url;\n                    this.updateActiveButton();\n                } else {\n                    this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n                    this.updateActiveButton();\n                }\n            },\n\n            addAvatar: function () {\n                if (this.$('.btn-add').hasClass('non-active'))\n                    return;\n                let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n                dfd.done((img, img_from_gallery) => {\n                    if (img_from_gallery){\n                        this.model.pubAvatar(image, () => {\n                            this.current_items = [];\n                            this.close();\n                            this.model.trigger('update_avatar_list');\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else {\n                        utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                            if (image) {\n                                this.model.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, () => {\n                                    this.close();\n                                    this.model.trigger('update_avatar_list');\n                                }, () => {\n                                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                                });\n                            } else\n                                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    }\n                });\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-add').addClass('hidden-disabled');\n\n                if ($active_screen.attr('data-screen') == 'library') {\n                    image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n                    image.uploaded = true;\n                    dfd.resolve(image, true);\n                }\n                else if ($active_screen.attr('data-screen') == 'web-address') {\n                    image = $active_screen.find('img:not(.hidden)')[0].src;\n                    this.createFileFromURL(image).then((file) => {\n                        dfd.resolve(file);\n                    }, (e) => {\n                        this.$('.preloader-wrapper').remove();\n                        this.$('.btn-add').removeClass('hidden-disabled');\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                    })\n                } else\n                    dfd.resolve(this.current_file);\n            },\n\n            createFileFromURL: async function (url) {\n                let response = await fetch(url);\n                let data = await response.blob();\n                let metadata = {\n                    type: 'image/png'\n                };\n                let file = new File([data], \"avatar.png\", metadata);\n                return file\n            },\n\n            close: function () {\n                this.$el.closeModal({ complete: () => {\n                        this.$el.detach();\n                        this.data.set('visible', false);\n                    }\n                });\n            }\n        });\n\n        xabber.WebcamProfileImageView = xabber.BasicView.extend({\n            className: 'modal main-modal webcam-panel',\n            template: templates.webcam_panel,\n\n            events: {\n                \"click .btn-save\": \"saveAvatar\",\n                \"click .btn-cancel\": \"close\",\n            },\n\n            open: function (options) {\n                this.account = options.model;\n                this.registration = options.registration;\n                this.registration_view = options.registration_view;\n\n                this.width = 171;\n                this.height = 128;\n                this.streaming = false;\n                this.video = null;\n                this.canvas = null;\n                this.photo = null;\n                this.startbutton = null;\n\n                this.show();\n                this.startupStream();\n            },\n\n            render: function () {\n                this.$el.openModal({\n                    complete: this.close.bind(this)\n                });\n            },\n\n            onHide: function () {\n                if (this.video && this.video.srcObject && this.video.srcObject.getTracks()){\n                    let tracks = this.video.srcObject.getTracks()\n                    tracks.forEach(function(track) {\n                        track.stop();\n                    });\n                    this.video.srcObject = null\n                }\n                this.$el.detach();\n\n            },\n\n            close: function () {\n                this.closeModal();\n            },\n\n            closeModal: function () {\n                this.$el.closeModal({ complete: this.hide.bind(this) });\n            },\n\n            startupStream: function (ev) {\n                this.video = this.$('.webcam-video')[0];\n                this.canvas = this.$('#canvas')[0];\n                this.photo = this.$('.webcam-photo')[0];\n                this.startbutton = this.$('.btn-take-photo')[0];\n                navigator.mediaDevices.getUserMedia({video: true, audio: false})\n                    .then((stream) => {\n                        this.video.srcObject = stream;\n                        this.video.play();\n                    })\n                    .catch((err) => {\n                        console.log(\"An error occurred: \" + err);\n                    });\n\n                this.video.addEventListener('canplay', (ev) => {\n                    if (!this.streaming) {\n                        if (isNaN(this.height)) {\n                            this.height = this.width / (4/3);\n                        }\n                        this.video.setAttribute('width', this.width);\n                        this.video.setAttribute('height', this.height);\n                        this.canvas.setAttribute('width', this.width);\n                        this.canvas.setAttribute('height', this.height);\n                        this.streaming = true;\n                    }\n                }, false);\n\n                this.startbutton.addEventListener('click', (ev) =>{\n                    this.takePicture();\n                    ev.preventDefault();\n                }, false);\n\n                this.$('.circle-icon')[0].addEventListener('click', (ev) =>{\n                    if ($(ev.target).closest('.circle-icon').hasClass('disabled'))\n                        return;\n                    this.clearPhoto();\n                    ev.preventDefault();\n                }, false);\n\n                this.clearPhoto();\n\n            },\n\n\n            clearPhoto: function (ev) {\n                let context = this.canvas.getContext('2d');\n                context.fillStyle = \"#AAA\";\n                context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n                let data = this.canvas.toDataURL('image/png');\n                this.photo.setAttribute('src', data);\n                this.$('.btn-take-photo').hideIf(false)\n                this.$('.btn-save').hideIf(true)\n                this.$('.output').hideIf(true)\n            },\n\n\n            takePicture: function (ev) {\n                let context = this.canvas.getContext('2d');\n                this.$('.btn-take-photo').hideIf(true)\n                this.$('.btn-save').hideIf(false)\n                this.$('.output').hideIf(false)\n                if (this.width && this.height) {\n                    this.canvas.width = this.width;\n                    this.canvas.height = this.height;\n                    context.drawImage(this.video, 0, 0, this.width, this.height);\n                    context.globalCompositeOperation='destination-in';\n                    context.beginPath();\n                    context.arc(this.width/2,this.height/2,this.height/2,0,Math.PI*2);\n                    context.closePath();\n                    context.fill();\n\n                    let data = this.canvas.toDataURL('image/png');\n                    this.photo.setAttribute('src', data);\n                } else {\n                    this.clearPhoto();\n                }\n            },\n\n\n            saveAvatar: function () {\n                let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n                    file = new File([blob], \"avatar.png\", {\n                        type: \"image/png\",\n                    });\n                file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n                if (file && file.base64) {\n                    if (this.registration && this.registration_view){\n                        this.registration_view.avatar = file;\n                        this.registration_view.$('.btn-next').prop('disabled', false);\n                        this.registration_view.$('.circle-avatar').addClass('changed');\n                        this.registration_view.$('.circle-avatar').setAvatar(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, ''), this.member_details_avatar_size);\n                        this.close();\n                    } else {\n                        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                        this.$('.btn-save').addClass('hidden-disabled');\n                        this.$('.circle-icon').addClass('disabled');\n                        this.account.pubAvatar(file, () => {\n                            this.close();\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    }\n                }\n            },\n        });\n\n        xabber.EmojiProfileImageView = xabber.BasicView.extend({\n            className: 'modal main-modal emoji-panel',\n            template: templates.emoji_panel,\n\n            events: {\n                \"click .profile-image-background-color\": \"changeColor\",\n                \"click .avatar-wrap\": \"openEmojiPicker\",\n                \"click .close-modal\": \"close\",\n                \"click .btn-save\": \"saveAvatar\",\n                \"click .btn-cancel\": \"close\",\n            },\n\n            open: function (options) {\n                this.account = options.model;\n                this.registration = options.registration;\n                this.registration_view = options.registration_view;\n                this.emoji_panel_view = this.addChild('emoji_picker_panel', xabber.EmojiPickerView,{})\n                this.show();\n            },\n\n            render: function () {\n                this.$el.openModal({\n                    complete: this.close.bind(this)\n                });\n            },\n\n            onHide: function () {\n                this.$el.detach();\n            },\n\n            close: function () {\n                this.closeModal();\n            },\n\n            closeModal: function () {\n                this.$el.closeModal({ complete: this.hide.bind(this) });\n            },\n\n            openEmojiPicker: function () {\n                this.emoji_panel_view.open(this);\n            },\n\n            changeColor: function (ev) {\n                let color = $(ev.target).data('value');\n                this.$('.profile-image-background-color').removeClass('chosen-background-color');\n                $(ev.target).addClass('chosen-background-color');\n                this.$('.circle-avatar').attr('class', 'circle-avatar');\n                this.$('.circle-avatar').attr('data-value', color);\n                this.$('.circle-avatar').addClass('ground-color-' + color + '-100');\n            },\n\n            saveAvatar: function (ev) {\n                let blob = Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"bold 96px sans-serif\", 176, 176),\n                    file = new File([blob], \"avatar\", {\n                        type: \"image/png\",\n                    });\n                file.generated = true;\n                file.base64 = blob;\n                if (file && file.base64) {\n                    if (this.registration && this.registration_view){\n                        this.registration_view.avatar = file;\n                        this.registration_view.$('.btn-next').prop('disabled', false);\n                        this.registration_view.$('.circle-avatar').addClass('changed');\n                        this.registration_view.$('.circle-avatar').setAvatar(blob, this.member_details_avatar_size);\n                        xabber._settings.save('main_color', this.$('.circle-avatar').attr('data-value'));\n                        xabber.trigger('update_main_color');\n                        this.close();\n                    } else {\n                        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                        this.$('.btn-save').addClass('hidden-disabled');\n                        this.account.pubAvatar(file, () => {\n                            this.close();\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    }\n                }\n            },\n        });\n\n        xabber.EmojiPickerView = xabber.BasicView.extend({\n            className: 'modal main-modal emoji-panel emoji-picker',\n            template: templates.emoji_picker,\n\n            events: {\n                \"click .emojis-bottom-tab-selector\": \"pickEmojiTab\",\n                \"click .emoji-picker-emoji\": \"pickEmoji\",\n                \"click .close-modal\": \"close\",\n            },\n\n            open: function () {\n                this.$el.openModal({\n                    complete: this.close.bind(this)\n                });\n                this.readEmojisJSON()\n                this.show();\n            },\n\n            readEmojisJSON: function () {\n                this.emojis = JSON.parse(templates.emojis())\n\n                if (this.emojis.length) {\n                    this.$('.emoji-picker-wrap').html(templates.emoji_picker_tabs({\n                        emojis: this.emojis\n                    }));\n                    this.ps_container = this.$('.emojis-tab');\n                    if (this.ps_container.length) {\n                        this.ps_container.perfectScrollbar(\n                            _.extend(this.ps_settings || {}, xabber.ps_settings)\n                        );\n                    }\n                }\n            },\n\n            render: function () {\n            },\n\n            onHide: function () {\n                this.$el.detach();\n            },\n\n            close: function () {\n                this.closeModal();\n            },\n\n            closeModal: function () {\n                this.$el.closeModal({ complete: this.hide.bind(this) });\n            },\n\n            scrollTo: function (offset) {\n                this.ps_container.each((index) => {\n                    this.ps_container[index].scrollTop = offset;\n                });\n                this.ps_container.perfectScrollbar('update');\n            },\n\n            scrollToTop: function () {\n                this.scrollTo(0);\n            },\n\n            pickEmojiTab: function (ev) {\n                let tab = $(ev.target).data('value');\n                this.$('.emojis-bottom-tab-selector').removeClass('chosen-emoji-selector');\n                $(ev.target).addClass('chosen-emoji-selector');\n                this.$('.emojis-tab').removeClass('chosen-emoji-tab').addClass('hidden');\n                this.$(`.emojis-tab[data-value=\"${tab}\"]`).removeClass('hidden').addClass('chosen-emoji-tab');\n                this.scrollToTop();\n            },\n\n            pickEmoji: function (ev) {\n                let emoji = $(ev.target).closest('.emoji-picker-emoji').data('value');\n                this.parent.$('.chosen-emoji').attr('data-value', emoji).text(emoji);\n                this.close();\n            },\n        });\n\n        xabber.ChangePasswordView = xabber.BasicView.extend({\n            className: 'modal main-modal change-password-modal',\n            template: templates.change_password,\n\n            events: {\n                \"click .btn-change\": \"submit\",\n                \"click .btn-cancel\": \"close\",\n                \"keyup input[name=password]\": \"keyUp\"\n            },\n\n            _initialize: function () {\n                this.$('input[name=jid]').val(this.model.get('jid'));\n                this.$password_input = this.$('input[name=password]');\n                this.data.on(\"change:authentication\", this.updateButtons, this);\n                xabber.on(\"quit\", this.onQuit, this);\n                return this;\n            },\n\n            render: function (options) {\n                options || (options = {});\n                this.is_login = options.login;\n                this.token_invalidated = options.token_invalidated;\n                this.$('.modal-header span').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"button_set_pass\"));\n                this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n                this.$('.btn-change').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"set\"));\n                this.$el.openModal({\n                    use_queue: true,\n                    ready: this.onRender.bind(this),\n                    complete: this.close.bind(this)\n                });\n            },\n\n            onRender: function () {\n                Materialize.updateTextFields();\n                this.authFeedback({});\n                this.$password_input.val('').focus();\n            },\n\n            getActionName: function () {\n                return this.is_login ? xabber.getString(\"login\") : xabber.getString(\"set\")\n            },\n\n            keyUp: function (ev) {\n                ev.keyCode === constants.KEY_ENTER && this.submit();\n            },\n\n            submit: function () {\n                if (this.data.get('authentication')) {\n                    this.cancel();\n                    return;\n                }\n                this.data.set('authentication', true);\n                this.authFeedback({});\n                let jid = this.model.get('jid'),\n                    password = this.$password_input.val();\n                if (!password)\n                    return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                password = password.trim();\n                this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n                if (this.model.connection.connected) {\n                    this.model.once('deactivate', () => {\n                        this.setPassword(password);\n                    });\n                    this.model.deactivate();\n                } else {\n                    this.setPassword(password);\n                }\n            },\n\n            setPassword: function (password) {\n                this.model.last_msg_timestamp = 0;\n                this.model.save({\n                    auth_type: 'password',\n                    password: utils.utoa(password),\n                    enabled: true\n                });\n                this.model.auth_view = this;\n                this.model.connect();\n            },\n\n            cancel: function () {\n                this.data.set('authentication', false);\n            },\n\n            updateButtons: function () {\n                let authentication = this.data.get('authentication');\n                this.$('.btn-change').text(authentication ? xabber.getString(\"stop\") : this.getActionName());\n            },\n\n            authFeedback: function (options) {\n                this.$password_input.switchClass('invalid', options.password)\n                    .siblings('span.errors').text(options.password || '');\n            },\n\n            errorFeedback: function (options) {\n                this.authFeedback(options);\n                this.data.set('authentication', false);\n            },\n\n            successFeedback: function () {\n                this.data.set('authentication', false);\n                this.closeModal();\n            },\n\n            endAuth: function (account) {\n                this.model.save('is_new', undefined);\n                this.successFeedback(this.model)\n                this.model.auth_view = null;\n            },\n\n            onHide: function () {\n                this.$el.detach();\n            },\n\n            onQuit: function () {\n                this.closeModal();\n            },\n\n            close: function () {\n                if (this.is_login)\n                    this.model.save('enabled', false);\n                if (this.token_invalidated)\n                    this.model.deleteAccount();\n                this.cancel();\n                this.closeModal();\n            },\n\n            closeModal: function () {\n                this.model.auth_view = null;\n                this.$el.closeModal({ complete: this.hide.bind(this) });\n            }\n        });\n\n        xabber.ChangeAccountPasswordView = xabber.BasicView.extend({\n            events: {\n                \"click .btn-change\": \"submit\",\n                \"click .btn-cancel\": \"render\",\n                \"keyup input\": \"keyUp\",\n            },\n\n            _initialize: function () {\n                this.account = this.model\n                this.$old_password_input = this.$('input[name=old_password]');\n                this.$password_input = this.$('input[name=password]');\n                this.$password_confirm_input = this.$('input[name=password_confirm]');\n                return this;\n            },\n\n            render: function (options) {\n                this.authFeedback({});\n                this.$password_input.val('');\n                this.$password_confirm_input.val('');\n                this.$old_password_input.val('').focus();\n            },\n\n            keyUp: function (ev) {\n                ev.keyCode === constants.KEY_ENTER && this.submit();\n            },\n\n            submit: function () {\n                this.authFeedback({});\n                let jid = this.account.get('jid'),\n                    old_password = this.$old_password_input.val(),\n                    password = this.$password_input.val(),\n                    password_confirm = this.$password_confirm_input.val();\n                if (!old_password)\n                    return this.errorFeedback({old_password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                if (!password)\n                    return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                if (password != password_confirm)\n                    return this.errorFeedback({password_confirm: xabber.getString(\"settings_account__alert_passwords_do_not_match\")});\n                old_password = old_password.trim();\n                this.authFeedback({password_confirm: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n                if (!this.account.change_password_connection_manager) {\n                    this.account.change_password_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n                    this.account.change_password_connection = this.account.change_password_connection_manager.connection;\n                    this.account.change_password_connection.account = this.account;\n                    this.account.change_password_connection.register.connect_change_password(jid, old_password, this.account.changePasswordCallback.bind(this.account))\n                }\n            },\n\n            authFeedback: function (options) {\n                this.$password_input.switchClass('invalid', options.password)\n                    .siblings('span.errors').text(options.password || '');\n                this.$old_password_input.switchClass('invalid', options.old_password)\n                    .siblings('span.errors').text(options.old_password || '');\n                this.$password_confirm_input.switchClass('invalid', options.password_confirm)\n                    .siblings('span.errors').text(options.password_confirm || '');\n            },\n\n            errorFeedback: function (options) {\n                if (this.account.change_password_connection)\n                    this.account.change_password_connection.disconnect()\n                this.authFeedback(options);\n            },\n\n            successFeedback: function () {\n                if (this.account.change_password_connection)\n                    this.account.change_password_connection.disconnect()\n                this.render();\n            },\n        });\n\n        xabber.AuthView = xabber.BasicView.extend({\n            _initialize: function () {\n                this.$jid_input = this.$('input[name=jid]');\n                this.$password_input = this.$('input[name=password]');\n                this.data.on(\"change:authentication\", this.updateButtons, this);\n                return this;\n            },\n\n            render: function () {\n                this.onRender();\n            },\n\n            onRender: function () {\n                this.account = null;\n                this.authFeedback({});\n                Materialize.updateTextFields();\n                this.$jid_input.val('').focus();\n                this.$password_input.val('');\n                this.updateButtons();\n                this.updateOptions && this.updateOptions();\n            },\n\n            keyUp: function (ev) {\n                ev.keyCode === constants.KEY_ENTER && this.submit();\n            },\n\n            submit: function () {\n                if (this.data.get('authentication')) {\n                    this.cancel();\n                    return;\n                }\n                this.data.set('authentication', true);\n                this.authFeedback({});\n                let jid = this.$jid_input.val(),\n                    password = this.$password_input.val();\n                if (this.data.get('registration')){\n                    let domain = this.$('#new_account_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-xmpp-server .property-value').text();\n                    if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                        return this.errorRegistrationFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n                    jid = jid + '@' + domain\n                }\n                else if(\n                    (this.$('.input-field-jid .xmpp-server-dropdown-wrap').length && !this.$('.input-field-jid .xmpp-server-dropdown-wrap').hasClass('hidden')) &&\n                    (this.$('#sign_in_domain') && this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text())\n                ){\n                    let domain = this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text();\n                    jid = jid + '@' + domain\n                }\n                if (!jid) {\n                    if (this.data.get('registration')) {\n                        return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n                    }\n                    return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n                }\n                jid = jid.trim();\n                if (!password)  {\n                    if (this.data.get('registration')) {\n                        return this.errorRegistrationFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                    }\n                    return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                }\n                if (!this.data.get('registration') && !constants.LOGIN_CUSTOM_DOMAIN && !(constants.LOGIN_DOMAINS.indexOf(Strophe.getDomainFromJid(jid)) > -1))\n                    return this.errorFeedback({jid: xabber.getString(\"account_auth__error__login_custom_domain\")});\n                password = password.trim();\n                let at_idx = jid.indexOf('@');\n                if (at_idx <= 0 || at_idx === jid.length - 1) {\n                    if (this.data.get('registration')) {\n                        return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n                    }\n                    return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n                }\n                jid = Strophe.getBareJidFromJid(jid).toLowerCase();\n                let account = xabber.accounts.get(jid);\n                if (account) {\n                    if (this.data.get('registration')) {\n                        return this.errorRegistrationFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n                    }\n                    this.errorFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n                } else {\n                    if (this.data.get('registration'))\n                        this.registerFeedback({registration_success: true, password: xabber.getString(\"account_registration__feedback__text_registration\")});\n                    else\n                        this.authStepperShow();\n                    this.getWebsocketURL(jid, (response) => {\n                        this.account = xabber.accounts.create({\n                            jid: jid,\n                            websocket_connection_url: response || constants.CONNECTION_URL,\n                            password: utils.utoa(password),\n                            is_new: true\n                        }, {auth_view: this});\n\n                        if (this.data.get('registration')) {\n                            this.account.connection.register.connect(jid, this.account.registerCallback.bind(this.account))\n                        }\n                        else\n                            this.account.trigger('start');\n                    });\n                }\n            },\n\n            getWebsocketURL: function (jid, callback) {\n                if (!constants.DISABLE_LOOKUP_WS) {\n                    let domain = Strophe.getDomainFromJid(jid),\n                        request = {\n                            type: 'GET',\n                            url: window.location.protocol + '//' + domain + '/.well-known/host-meta',\n                            dataType: 'xml',\n                            success: (success) => {\n                                let socket_url = $(success).find('Link').attr('href');\n                                if (socket_url)\n                                    callback && callback(socket_url);\n                                else\n                                    callback && callback(null);\n                            },\n                            error: () => {\n                                callback && callback(null);\n                            },\n                            timeout: 5000\n                        };\n                    $.ajax(request);\n                }\n                else\n                    callback && callback(null);\n            },\n\n            cancel: function () {\n                this.data.set('authentication', false);\n                this.onRender();\n                if (this.account) {\n                    this.account.destroy();\n                    this.account = null;\n                }\n            },\n\n            authFeedback: function (options) {\n                this.$jid_input.switchClass('invalid', options.jid)\n                    .siblings('span.errors').text(options.jid || '');\n                this.$password_input.switchClass('invalid', options.password)\n                    .siblings('span.errors').text(options.password || '');\n            },\n\n            errorFeedback: function (options) {\n                this.authFeedback(options);\n                this.data.set('authentication', false);\n            },\n\n            authStepperShow: function (){\n                this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n            },\n\n            endAuth: function (account) {\n                this.account.save('is_new', undefined);\n                this.successFeedback(this.account)\n                this.account.auth_view = null;\n            },\n\n            socialAuth: function (ev) {\n                let origin = window.location.href,\n                    provider = $(ev.target).closest('.btn-social').data('provider');\n                if (provider == 'email')\n                    xabber.body.setScreen('login', {'login_screen': 'xabber'});\n                else\n                    window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n            }\n        });\n\n        xabber.XmppLoginPanel = xabber.AuthView.extend({\n            className: 'login-panel',\n            template: templates.xmpp_login,\n\n            events: {\n                \"click .btn-log-in\": \"login\",\n                \"click .btn-sign-up-instead\": \"logoutAndRegister\",\n                \"click .btn-register-form\": \"openRegisterForm\",\n                \"click .btn-login-form\": \"openLoginForm\",\n                \"click .btn-register\": \"register\",\n                \"click .btn-cancel\": \"cancel\",\n                \"click .btn-go-back-menu\": \"openButtonsMenu\",\n                \"click .btn-go-back\": \"openPreviousStep\",\n                \"click .btn-next\": \"openNextStep\",\n                \"click .btn-skip\": \"registerWithoutAvatar\",\n                \"click .btn-finish-log-in\": \"endAuth\",\n                \"keyup input[name=register_nickname]\": \"keyUpNickname\",\n                \"keyup input[name=register_jid]\": \"keyUpJid\",\n                \"keyup input[name=jid]\": \"keyUpLogin\",\n                \"keyup input[name=password]\": \"keyUpLogin\",\n                \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n                \"keyup input[name=register_domain]\": \"keyUpDomain\",\n                \"focusout input[name=register_domain]\": \"focusoutDomain\",\n                \"keyup input[name=register_password]\": \"keyUpPassword\",\n                \"change .circle-avatar input\": \"changeAvatar\",\n                \"click .btn-choose-image\": \"chooseAvatar\",\n                \"click .btn-emoji-panel\": \"openEmojiPanel\",\n                \"click .btn-selfie\": \"openWebcamPanel\",\n                \"click #select-xmpp-server .property-variant\": \"changePropertyValueRegistration\",\n                \"click #select-auth-xmpp-server .property-variant\": \"changePropertyValueAuth\",\n            },\n\n            __initialize: function () {\n                this.$nickname_input = this.$('input[name=register_nickname]');\n                this.$domain_input = this.$('input[name=register_domain]');\n                this.data.on(\"change:step\", this.handleRegistrationStep, this);\n                return this;\n            },\n\n            onRender: function () {\n                this.data.set('step', 1)\n                this.account = null;\n                this.stepped_auth = true;\n                this.stepped_auth_complete = false;\n                this.authFeedback({});\n                this.registerFeedback({});\n                Materialize.updateTextFields();\n                this.$('.btn-go-back').hideIf(false);\n                this.$('.btn-skip').hideIf(true)\n                this.$nickname_input.val('');\n                this.$jid_input.val('');\n                this.$password_input.val('');\n                this.$('.circle-avatar').css({'background-image': ''});\n                this.$('.circle-avatar').css({'background-color': ''});\n                this.updateButtons();\n                this.updateDomains();\n                this.updateAuthDomains();\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n                this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n                this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n                this.$('.avatar-wrap.dropdown-button').dropdown(dropdown_settings);\n                this.$('.btn-register-form').hideIf(!constants.REGISTRATION_BUTTON);\n                this.$('.btn-login-form').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n                this.$('.register-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.REGISTRATION_CUSTOM_DOMAIN);\n                this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n                this.updateOptions && this.updateOptions();\n                this.$('#select-xmpp-server').hideIf(xabber.url_params.rkey)\n                this.$('.select-xmpp-server .caret').hideIf(xabber.url_params.rkey)\n                if (xabber.url_params.anchor == 'signup' || xabber.url_params.rkey)\n                    this.data.set('step', 2)\n                else if (xabber.url_params.anchor == 'signin')\n                    this.data.set('step', 0)\n            },\n\n            openButtonsMenu: function () {\n                this.data.set('step', 1)\n            },\n\n            register: function () {\n                if (this.data.get('registration')) {\n                    this.cancel();\n                    return;\n                }\n                this.data.set('registration', true);\n                this.$jid_input.prop('disabled', true);\n                this.$password_input.prop('disabled', true);\n                this.submit();\n            },\n\n            login: function () {\n                this.submit();\n            },\n\n            keyUpNickname: function (ev) {\n                if(this.$nickname_input.val()){\n                    this.$('.btn-next').prop('disabled', false);\n                }\n                else {\n                    this.$('.btn-next').prop('disabled', true);\n                }\n                if (this.$nickname_input.val() && ev)\n                    ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n            },\n\n            keyUpJid: function (ev) {\n                clearTimeout(this._check_user_timeout);\n                if (!this.$('.btn-next').prop('disabled') && ev && ev.keyCode === constants.KEY_ENTER) {\n                    this.openNextStep();\n                    return;\n                }\n                if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.REGISTRATION_CUSTOM_DOMAIN){\n                    this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'))\n                    this.$domain_input.val(this.$jid_input.val().split('@')[1]);\n                    this.$jid_input.val(this.$jid_input.val().split('@')[0]);\n                    this.$domain_input.focus();\n                    return;\n                }\n                this.$('.btn-next').prop('disabled', true);\n                if(this.$jid_input.val()){\n                    let regexp_local_part = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))$/,\n                        regexp_domain = /^((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                        domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n                    if (!regexp_local_part.test(this.$jid_input.val()))\n                        return this.registerFeedback({jid: xabber.getString(\"account_add__alert_localpart_invalid\")});\n                    else if (!(regexp_domain.test(domain)))\n                        return this.registerFeedback({domain: xabber.getString(\"account_add__alert_invalid_domain\")});\n                    else\n                        this.registerFeedback({});\n                    if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                        return this.registerFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n                    this._check_user_timeout = setTimeout(() => {\n                        domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n                        this.$('.btn-next').prop('disabled', true);\n                        this._registration_username = this.$jid_input.val()\n                        this._registration_domain = domain\n                        if (domain) {\n                            if (this.auth_connection && this.auth_connection.domain != domain)\n                                this.auth_connection.disconnect()\n                            if (!this.auth_connection) {\n                                this.getWebsocketURL(domain, (response) => {\n                                    this.CONNECTION_URL = response || constants.CONNECTION_URL;\n                                    this.auth_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                                    this.auth_connection = this.auth_conn_manager.connection;\n                                    this.auth_connection.register.connect_check_user(domain, this.checkUserCallback.bind(this))\n                                });\n                            }\n                            else if(this.auth_connection && this.auth_connection.connected) {\n                                this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                                    null, \"iq\", null, null);\n                                this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                                    {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n                            }\n                        }\n                        else {\n                            this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                        }\n                    }, 1000);\n                }\n                else\n                    this.registerFeedback({});\n            },\n\n            keyUpPassword: function (ev) {\n                if(this.$password_input.val()){\n                    this.$('.btn-next').prop('disabled', false);\n                }\n                else {\n                    this.$('.btn-next').prop('disabled', true);\n                }\n                if (this.$password_input.val() && ev)\n                    ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n            },\n\n            keyUpDomain: function () {\n            },\n\n            keyUpLogin: function (ev) {\n                if(this.$jid_input.val() && this.$password_input.val()){\n                    this.$('.btn-log-in').prop('disabled', false);\n                }\n                else {\n                    this.$('.btn-log-in').prop('disabled', true);\n                }\n                this.$('.login-step-wrap').hideIf(true);\n                this.authFeedback({});\n                this.$('.input-field-jid .xmpp-server-dropdown-wrap').hideIf(this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN)\n                if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN){\n                    this.$('.input-field-jid').addClass('input-field-jid-borders')\n                }else {\n                    this.$('.input-field-jid').removeClass('input-field-jid-borders')\n                }\n                if (ev && this.$jid_input.val() && this.$password_input.val())\n                    ev.keyCode === constants.KEY_ENTER && this.login();\n            },\n\n            focusoutDomain: function () {\n                if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n                    this.keyUpJid();\n            },\n\n            handleRegisterStanza: function (stanza) {\n                let i, query, field, username_taken, conn = this._connection;\n                query = stanza.getElementsByTagName(\"query\");\n                if (query.length !== 1) {\n                    conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                    return false;\n                }\n                query = query[0];\n                for (i = 0; i < query.childNodes.length; i++) {\n                    field = query.childNodes[i];\n                    if (field.tagName.toLowerCase() === 'instructions') {\n                        conn.register.instructions = Strophe.getText(field);\n                        continue;\n                    } else if (field.tagName.toLowerCase() === 'username') {\n                        if (Strophe.getText(field))\n                            this._supports_check_user = true\n                        continue;\n                    } else if (field.tagName.toLowerCase() === 'registered') {\n                        username_taken = true\n                        continue;\n                    } else if (field.tagName.toLowerCase() === 'x') {\n                        continue;\n                    }\n                    conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n                }\n                if (this._supports_check_user){\n                    if (username_taken)\n                        conn._changeConnectStatus(Strophe.Status.CONFLICT, null);\n                    else\n                        conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n                }\n                else\n                    conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"not-supported\");\n\n                return false;\n            },\n\n            checkUserCallback: function (status, condition) {\n                if (status === Strophe.Status.REGISTER || status === Strophe.Status.REGIFAIL) {\n                    if (!this.$('.select-xmpp-server .property-variant[data-value=\"' + this.auth_connection.register.domain + '\"]').length && constants.REGISTRATION_CUSTOM_DOMAIN) {\n                        $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                            .text(this.auth_connection.register.domain)\n                            .attr('data-value', this.auth_connection.register.domain)\n                            .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n                    }\n                    this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n                    this.$('#new_account_domain').val(\"\");\n                    this.$('.select-xmpp-server .xmpp-server-item-wrap .property-value').text(this.auth_connection.register.domain)\n                        .removeClass('hidden').attr('data-value', this.auth_connection.register.domain);\n                }\n                if (status === Strophe.Status.REGISTER) {\n                    if (this.auth_connection && this.auth_connection.connected) {\n                        this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                            null, \"iq\", null, null);\n                        this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                            {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n                    }\n                } else if (status === Strophe.Status.REGISTERED) {\n                    this.registerFeedback({user_success: true, jid: xabber.getString(\"xmpp_login__registration_jid_available\")});\n                    this.$('.btn-next').prop('disabled', false);\n                } else if (status === Strophe.Status.CONFLICT) {\n                    this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_occupied\")});\n                    this.$('.btn-next').prop('disabled', true);\n                } else if (status === Strophe.Status.CONNFAIL) {\n                    this.registerFeedback({jid: xabber.getString(\"CONNECTION_FAILED\") + ': ' + condition});\n                    this.$('.btn-next').prop('disabled', true);\n                } else if (status === Strophe.Status.REGIFAIL) {\n                    if (condition === 'not-supported'){\n                        this.registerFeedback({});\n                        this.$('.btn-next').prop('disabled', false);\n                    }\n                    else {\n                        this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_not_supported\")});\n                        this.$('.btn-next').prop('disabled', true);\n                    }\n                    this.auth_connection.disconnect()\n                } else if (status === Strophe.Status.CONNECTING) {\n                    clearTimeout(this._check_user_connection_timeout);\n                        this._check_user_connection_timeout = setTimeout(() => {\n                            if(this.auth_connection && !this.auth_connection.connected){\n                                this.auth_connection._no_response = true\n                                this.auth_connection.disconnect()\n                            }\n                        }, 10000);\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    if (this.auth_connection && this.auth_connection._no_response) {\n                        this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                        this.$('.btn-next').prop('disabled', true);\n                    }\n                    this.auth_conn_manager = undefined;\n                    this.auth_connection = undefined;\n                }\n            },\n\n            openPreviousStep: function () {\n                let step = this.data.get('step')\n                if(typeof step === 'number') {\n                    step--;\n                    this.data.set('step', step)\n                }\n            },\n\n            openNextStep: function () {\n                let step = this.data.get('step')\n                if(typeof step === 'number') {\n                    step++;\n                    this.data.set('step', step)\n                }\n            },\n\n            handleRegistrationStep: function () {\n                let step = this.data.get('step')\n                if (step === -1){\n                    this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n                    this.$(`.server-feature .mdi`).hideIf(true);\n                    this.$(`.server-feature`).removeClass('active-feature')\n                    this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                    this.$('.login-form-header').text(xabber.getString(\"signin_server_features\"));\n                    this.$('.login-form-server-features .register-form-step-header').text(xabber.getString(\"signin_checking_features_message\", [this.account.domain]));\n                    this.$('.btn-go-back-menu').hideIf(true);\n                    this.$('.login-form-jid').hideIf(true);\n                    this.$('.login-form-server-features').hideIf(false);\n                    this.$('.btn-log-in').hideIf(true);\n                    this.checkFeaturesStepper();\n                }\n                if (step === 0){\n                    this.$jid_input = this.$('input[name=jid]');\n                    this.$password_input = this.$('input[name=password]');\n                    this.$domain_input = this.$('input[name=sign_in_domain]');\n                    this.$domain_input.val('')\n                    this.$jid_input.val('')\n                    this.$password_input.val('')\n                    this.keyUpLogin();\n                    this.$('.login-step-wrap').hideIf(true);\n                    this.authFeedback({});\n                    this.resetAuthStepper();\n                    this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n                    this.$('.login-form-header').text(xabber.getString(\"title_login_xabber_account\"));\n                    this.$('.btn-go-back-menu').hideIf(false);\n                    this.$('.login-panel-intro').hideIf(true);\n                    this.$('.register-form').hideIf(true);\n                    this.$('.xmpp-login-form').hideIf(false);\n                    this.$('.login-form-jid').hideIf(false);\n                    this.$('.login-form-server-features').hideIf(true);\n                    this.$('.btn-log-in').hideIf(false);\n                    this.$('.btn-finish-log-in').hideIf(true);\n                    this.$('.btn-sign-up-instead').hideIf(true);\n                    this.$jid_input.focus();\n                }\n                else if (step === 1){\n                    this.$('.login-panel-intro').hideIf(false);\n                    this.$('.register-form').hideIf(true);\n                    this.$('.xmpp-login-form').hideIf(true);\n                }\n                else if (step === 2){\n                    this.$jid_input = this.$('input[name=register_jid]');\n                    this.$password_input = this.$('input[name=register_password]');\n                    this.$domain_input = this.$('input[name=register_domain]');\n                    this.keyUpNickname();\n                    this.$('.login-form-header').text(xabber.getString(\"title_register_xabber_account\"));\n                    this.$('.login-form-url').hideIf(false);\n                    this.$('.login-panel-intro').hideIf(true);\n                    this.$('.register-form').hideIf(false);\n                    this.$('.xmpp-login-form').hideIf(true);\n                    this.$('.register-form-nickname').hideIf(false);\n                    this.$('.register-form-jid').hideIf(true);\n                    this.$('.register-form-password').hideIf(true);\n                    this.$('.register-form-picture').hideIf(true);\n                    this.$nickname_input.focus();\n                }\n                else if (step === 3){\n                    if (this.$nickname_input.val()) {\n                        this.$('.login-form-header').text(xabber.getString(\"hint_username\"));\n                        this.$('.register-form-nickname').hideIf(true);\n                        this.$('.register-form-jid').hideIf(false);\n                        this.$('.register-form-password').hideIf(true);\n                        this.$('.register-form-picture').hideIf(true);\n                        this.keyUpJid();\n                        this.$jid_input.focus();\n                        this.$password_input.val('');\n                    }\n                    else {\n                        this.registerFeedback({nickname: xabber.getString(\"dialog_add_circle__error__text_input_name\")});\n                        return this.data.set('step', 2);\n                    }\n\n                }\n                else if (step === 4){\n                    if (this.$jid_input.val()) {\n                        this.$('.login-form-header').text(xabber.getString(\"hint_pass\"));\n                        this.$('.register-form-nickname').hideIf(true);\n                        this.$('.register-form-jid').hideIf(true);\n                        this.$('.register-form-password').hideIf(false);\n                        this.$('.register-form-picture').hideIf(true);\n                        this.keyUpPassword();\n                        this.$password_input.focus();\n                    }\n                    else {\n                        this.registerFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n                        return this.data.set('step', 3);\n                    }\n\n                }\n                else if (step === 5){\n                    if (this.$password_input.val()) {\n                        this.register();\n                    }\n                    else {\n                        this.registerFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                        return this.data.set('step', 4);\n                    }\n                }\n                else if (step === 6){\n                    this.$('.login-form-header').text(xabber.getString(\"xmpp_login__registration_header_avatar\"));\n                    this.$('.login-form-url').hideIf(true);\n                    this.$('.btn-go-back').hideIf(true);\n                    this.$('.btn-skip').hideIf(false)\n                    this.$('.register-form-nickname').hideIf(true);\n                    this.$('.register-form-jid').hideIf(true);\n                    this.$('.register-form-password').hideIf(true);\n                    this.$('.register-form-picture').hideIf(false);\n                    this.$('.btn-next').prop('disabled', true);\n                }\n                else if (step >= 7){\n                    if(this.avatar)\n                        this.account.pubAvatar(this.avatar, () => {\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    this.successRegistrationFeedback();\n                }\n            },\n\n            registerWithoutAvatar: function () {\n                this.successRegistrationFeedback();\n            },\n\n            logoutAndRegister: function () {\n                this.account.session.set('delete', true);\n                this.account.deactivate();\n                this.openRegisterForm()\n            },\n\n            openRegisterForm: function () {\n                this.data.set('step', 2)\n            },\n\n            openLoginForm: function () {\n                this.data.set('step', 0)\n            },\n\n            updateButtons: function () {\n                let authentication = this.data.get('authentication');\n                this.$('.btn-log-in').prop('disabled', authentication);\n            },\n\n            updateDomains: function () {\n                let all_servers = constants.REGISTRATION_DOMAINS;\n                if (xabber.url_params.rkey && all_servers.length){\n                    for (let i = all_servers.length - 1; i >= 0; i--) {\n                        if (!sha1(all_servers[i]).substr(0, 10).includes(xabber.url_params.rkey.substr(0, 10))){\n                            all_servers.splice(i, 1)\n                        }\n                    }\n                }\n                this.$('.register-form-jid .field-jid.property-variant').remove()\n                if (all_servers.length)\n                    this.$('.register-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n                else\n                    this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n                this.$('.register-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n                for (let i = 0; i < all_servers.length; i++) {\n                    $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                        .text(all_servers[i])\n                        .attr('data-value', all_servers[i])\n                        .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n                }\n            },\n\n            updateAuthDomains: function () {\n                let all_servers = constants.LOGIN_DOMAINS;\n\n                this.$('.login-form-jid .field-jid.property-variant').remove()\n                if (all_servers.length)\n                    this.$('.login-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n                else\n                    this.setCustomDomainAuth(this.$('.login-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n                this.$('.login-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n                for (let i = 0; i < all_servers.length; i++) {\n                    $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                        .text(all_servers[i])\n                        .attr('data-value', all_servers[i])\n                        .insertBefore(this.$('.login-form-jid .dropdown-content .set-custom-domain'));\n                }\n            },\n\n            setCustomDomainRegistration: function ($property_value) {\n                this.$('#new_account_domain').val(\"\");\n                $property_value.addClass('hidden').text(\"\");\n                this.$('.select-xmpp-server .caret').addClass('hidden');\n                this.$('.select-xmpp-server .input-group-chat-domain').removeClass('hidden');\n            },\n\n            setCustomDomainAuth: function ($property_value) {\n                this.$('#sign_in_domain').val(\"\");\n                $property_value.addClass('hidden').text(\"\");\n                this.$('.select-auth-xmpp-server .caret').addClass('hidden');\n                this.$('.select-auth-xmpp-server .input-group-chat-domain').removeClass('hidden');\n            },\n\n            changePropertyValueRegistration: function (ev) {\n                let $property_item = $(ev.target),\n                    $property_value = $property_item.closest('.property-field').find('.property-value');\n                if ($property_item.hasClass('set-custom-domain')) {\n                    this.setCustomDomainRegistration($property_value);\n                    return;\n                }\n                else if ($property_item.hasClass('set-default-domain')) {\n                    this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n                    this.$('#new_account_domain').val(\"\");\n                }\n                $property_value.text($property_item.text());\n                $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n                this.$('.select-xmpp-server .caret').removeClass('hidden');\n                if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n                    this.keyUpJid();\n            },\n\n            changePropertyValueAuth: function (ev) {\n                let $property_item = $(ev.target),\n                    $property_value = $property_item.closest('.property-field').find('.property-value');\n                if ($property_item.hasClass('set-custom-domain')) {\n                    this.setCustomDomainAuth($property_value);\n                    return;\n                }\n                else if ($property_item.hasClass('set-default-domain')) {\n                    this.$('.select-auth-xmpp-server .input-group-chat-domain').addClass('hidden');\n                    this.$('#sign_in_domain').val(\"\");\n                }\n                $property_value.text($property_item.text());\n                $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n                this.$('.select-auth-xmpp-server .caret').removeClass('hidden');\n            },\n\n            chooseAvatar: function () {\n                this.$('.circle-avatar input').click();\n            },\n\n            openEmojiPanel: function () {\n                let emoji_panel_view = new xabber.EmojiProfileImageView();\n                emoji_panel_view.open({model: this.account, registration: true, registration_view: this});\n            },\n\n            openWebcamPanel: function () {\n                let webcam_panel_view = new xabber.WebcamProfileImageView();\n                webcam_panel_view.open({model: this.account, registration: true, registration_view: this});\n            },\n\n            changeAvatar: function (ev) {\n                let field = ev.target;\n                if (!field.files.length)\n                    return;\n                let file = field.files[0];\n                field.value = '';\n                if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n                    return;\n                } else if (!file.type.startsWith('image')) {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                    return;\n                }\n\n                utils.images.getAvatarFromFile(file).done((image) => {\n                    if (image) {\n                        file.base64 = image;\n                        this.avatar = file;\n                        this.$('.btn-next').prop('disabled', false);\n                        this.$('.circle-avatar').addClass('changed');\n                        this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n                    }\n                });\n            },\n\n            successFeedback: function () {\n                this.data.set('step', -1)\n            },\n\n            checkFeaturesStepper: function () {\n                this.$('.server-features-error').text('');\n                let timeout_timer = 1000;\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.MAM)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                                setTimeout(() => {\n                                    if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                    }\n                                    else\n                                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                    setTimeout(() => {\n                                        if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                        }\n                                        else\n                                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                        setTimeout(() => {\n                                            if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                                this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                                this.$('.login-panel-form.xmpp-login-form .buttons-wrap').addClass('server-features-additional-button');\n                                                this.$('.btn-sign-up-instead').hideIf(false);\n                                            }\n                                            if (this.$('.server-feature.active-feature').length != 6) {\n                                                this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                                this.$('.btn-finish-log-in').addClass('btn-main').removeClass('btn-main-filled')\n                                            }\n                                            else {\n                                                this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                                this.$('.btn-finish-log-in').removeClass('btn-main').addClass('btn-main-filled')\n                                            }\n                                            this.$('.btn-finish-log-in').hideIf(false);\n                                        }, timeout_timer);\n                                    }, timeout_timer);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            },\n\n            endAuth: function (account) {\n                this.account.save('is_new', undefined);\n                this.data.set('registration', false);\n                this.data.set('authentication', false);\n                xabber.body.setScreen('all-chats', {right: null});\n                this.account.trigger('ready_to_get_roster');\n                this.account.auth_view = null;\n            },\n\n            authFeedback: function (options) {\n                this.$jid_input.switchClass('invalid', options.jid);\n                this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n                this.$password_input.switchClass('invalid', options.password);\n                this.$('.login-form-jid .login-password-error').text(options.password || '').showIf(options.password);\n                this.$('.login-form-jid .register-form-step-description').hideIf(options.password || options.jid);\n            },\n\n            resetAuthStepper: function (){\n                this.$(`.login-step .preloader-wrapper`).addClass('active').addClass('visible');\n                this.$(`.login-step .mdi`).hideIf(true);\n                this.$(`.login-step`).removeClass('active-feature')\n                this.$(`.login-step .mdi`).addClass('mdi-alert-circle').removeClass('mdi-checkbox-marked-circle')\n            },\n\n            authStepperShow: function (){\n                this.$('.login-step-wrap').hideIf(false);\n                this.$(`.login-step`).hideIf(true);\n            },\n\n            authStepperStart: function (){\n                this.$(`.login-step.connecting-step`).hideIf(false);\n                let timeout_timer = 1000;\n                setTimeout(() => {\n                    this.$(`.login-step.connecting-step`).addClass('active-feature');\n                    this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                    this.$(`.login-step.credentials-step`).hideIf(false);\n                    setTimeout(() => {\n                        this.$(`.login-step.credentials-step`).addClass('active-feature');\n                        this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                        this.$(`.login-step.credentials-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                        setTimeout(() => {\n                            if (constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1){\n                                this.endAuth();\n                            } else {\n                                this.stepped_auth_complete = true\n                                if (this.first_features_received)\n                                    this.successFeedback();\n                            }\n                        },timeout_timer)\n                    },timeout_timer)\n                },timeout_timer)\n            },\n\n            authStepperError: function (auth_error, options){\n                let timeout_timer = 1000;\n                this.$('.login-step-wrap').hideIf(false);\n                this.$(`.login-step.connecting-step`).hideIf(false);\n                setTimeout(() => {\n                    if (auth_error){\n                        this.$(`.login-step.connecting-step`).addClass('active-feature');\n                        this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                        this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                        this.$(`.login-step.credentials-step`).hideIf(false);\n                    }\n                    else {\n                        this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                        this.$(`.login-step.connecting-step .mdi`).hideIf(false);\n                        this.errorFeedback(options);\n                        return;\n                    }\n                    setTimeout(() => {\n                        this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                        this.$(`.login-step.credentials-step .mdi`).hideIf(false);\n                        this.errorFeedback(options);\n                    },timeout_timer)\n                },timeout_timer)\n            },\n\n            registerFeedback: function (options) {\n                if(options.user_success) {\n                    this.$('.register-form-jid .register-form-step-error').addClass('available').text(options.jid || '').showIf(options.jid);\n                    this.$jid_input.removeClass('invalid');\n                    this.$('.register-form-jid .register-form-step-description').hideIf(options.jid);\n                }\n                else if(options.registration_success) {\n                    this.$('.register-form-password .register-form-step-error').addClass('available').text(options.password || '').showIf(options.password);\n                    this.$password_input.removeClass('invalid');\n                    this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n                }\n                else {\n                    this.$nickname_input.switchClass('invalid', options.nickname);\n                    this.$('.register-form-nickname.register-form-step-error').text(options.nickname || '').showIf(options.nickname);\n                    this.$('.register-form-nickname .register-form-step-description').hideIf(options.nickname);\n                    this.$jid_input.switchClass('invalid', options.jid);\n                    this.$domain_input.switchClass('invalid', options.domain);\n                    this.$('.register-form-jid .register-form-step-error').removeClass('available').text(options.jid || options.domain || '').showIf(options.jid || options.domain);\n                    this.$('.register-form-jid .register-form-step-description').hideIf(options.jid || options.domain);\n                    this.$password_input.switchClass('invalid', options.password);\n                    this.$('.register-form-password .register-form-step-error').removeClass('available').text(options.password || '').showIf(options.password);\n                    this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n                }\n            },\n\n            errorRegistrationFeedback: function (options) {\n                this.registerFeedback(options);\n                this.data.set('registration', false);\n                this.data.set('authentication', false);\n                this.$jid_input.prop('disabled', false);\n                this.$password_input.prop('disabled', false);\n                if(this.account)\n                    this.account.destroy();\n            },\n\n            successRegistrationFeedback: function () {\n                this.$jid_input.prop('disabled', false);\n                this.$password_input.prop('disabled', false)\n                this.account.trigger('start');\n            },\n        });\n\n\n        xabber.AddAccountView = xabber.XmppLoginPanel.extend({\n            className: 'modal main-modal add-account-modal',\n            template: templates.add_account,\n\n            events: {\n                \"click .login-type\": \"changeLoginType\",\n                \"click .btn-log-in\": \"login\",\n                \"click .btn-cancel\": \"logout\",\n                \"click .btn-go-back-menu\": \"close\",\n                \"click .btn-finish-log-in\": \"endAuth\",\n                \"keyup input[name=jid]\": \"keyUpLogin\",\n                \"keyup input[name=password]\": \"keyUpLogin\",\n                \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n                \"click .property-variant\": \"changePropertyValueAuth\"\n            },\n\n            render: function (options) {\n                this.$el.openModal({\n                    ready: this.onRender.bind(this),\n                    complete: this.close.bind(this)\n                });\n            },\n\n            onRender: function () {\n                this.data.set('step', 0)\n                this.account = null;\n                this.stepped_auth = true;\n                this.stepped_auth_complete = false;\n                this.authFeedback({});\n                this.$jid_input = this.$('input[name=jid]');\n                this.$password_input = this.$('input[name=password]');\n                this.$domain_input = this.$('input[name=sign_in_domain]');\n                this.$jid_input.val('')\n                this.$password_input.val('')\n                this.keyUpLogin();\n                this.updateAuthDomains();\n                this.$('.login-step-wrap').hideIf(true);\n                this.resetAuthStepper();\n                this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n                this.$('.modal-header').text(xabber.getString(\"account_add\"));\n                this.$('.login-form-jid').hideIf(false);\n                this.$('.login-form-server-features').hideIf(true);\n                this.$('.btn-log-in').hideIf(false);\n                this.$('.btn-cancel').hideIf(true);\n                this.$('.btn-finish-log-in').hideIf(true);\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n                this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n                this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n                Materialize.updateTextFields();\n                this.updateButtons();\n                this.updateOptions && this.updateOptions();\n            },\n\n            handleRegistrationStep: function () {\n                let step = this.data.get('step')\n                if (step === -1){\n                    this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n                    this.$(`.server-feature .mdi`).hideIf(true);\n                    this.$(`.server-feature`).removeClass('active-feature')\n                    this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                    this.$('.modal-header').text(xabber.getString(\"signin_server_features\"));\n                    this.$('.login-form-jid').hideIf(true);\n                    this.$('.login-form-server-features').hideIf(false);\n                    this.$('.btn-log-in').hideIf(true);\n                    this.checkFeaturesStepper();\n                }\n            },\n\n            logout: function () {\n                this.account.session.set('delete', true);\n                this.account.deactivate();\n                this.closeModal();\n            },\n\n            endAuth: function () {\n                this.account.save('is_new', undefined);\n                this.data.set('authentication', false);\n                xabber.body.setScreen('all-chats', {right: null});\n                this.account.trigger('ready_to_get_roster');\n                this.account.auth_view = null;\n                this.closeModal();\n            },\n\n            checkFeaturesStepper: function () {\n                this.$('.server-features-error').text('');\n                let timeout_timer = 1000;\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.MAM)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                                setTimeout(() => {\n                                    if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                    }\n                                    else\n                                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                    setTimeout(() => {\n                                        if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                        }\n                                        else\n                                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                        setTimeout(() => {\n                                            if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                                this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                            }\n                                            if (this.$('.server-feature.active-feature').length != 6)\n                                                this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                            else\n                                                this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                            this.$('.btn-finish-log-in').hideIf(false);\n                                            this.$('.btn-cancel').hideIf(false);\n                                        }, timeout_timer);\n                                    }, timeout_timer);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            },\n\n            onHide: function () {\n                this.$el.detach();\n            },\n\n            close: function () {\n                this.cancel();\n                this.closeModal();\n            },\n\n            closeModal: function () {\n                this.$el.closeModal({ complete: this.hide.bind(this) });\n            }\n        });\n\n        xabber.once(\"start\", function () {\n            this.xmpp_login_panel = xabber.login_page.addChild('xmpp_login', this.XmppLoginPanel);\n            this.account_settings = xabber.wide_panel.addChild('account_settings',\n                this.NodeView, {classlist: 'settings-panel account-settings-panel'});\n            this.acc_settings_left = xabber.account_settings.addChild('left',\n                this.Container, {classlist: 'account-settings-left-container'});\n            this.acc_settings_right = xabber.account_settings.addChild('right',\n                this.Container, {classlist: 'account-settings-right-container'});\n\n            this.accounts = new this.Accounts(null, {\n                storage_name: this.getStorageName() + '-accounts'\n            });\n            this.accounts.fetch();\n\n            this.toolbar_view.addChild('accounts', this.ToolbarAccountsBlockView,\n                {model: this.accounts, el: this.toolbar_view.$('.accounts')[0]});\n            this.settings_view.addChild('accounts', this.SettingsAccountsBlockView,\n                {model: this.accounts, el: this.settings_view.$('.xmpp-accounts')[0]});\n\n\n            this.on(\"add_account\", function () {\n                if (!this.add_account_view)\n                    this.add_account_view = new this.AddAccountView();\n                this.add_account_view.show();\n            }, this);\n\n            $(window).bind('beforeunload',function(){\n                xabber.current_voip_call && xabber.current_voip_call.reject();\n                return;\n            });\n\n            window.onbeforeunload = () => {\n                _.each(this.accounts.connected, function (account) {\n                    account.sendPresence('offline');\n                });\n            };\n\n            this.login_page.patchTree = function (tree, options) {\n                let login_screen = options.login_screen || constants.DEFAULT_LOGIN_SCREEN;\n                return login_screen === 'xmpp' ? { xmpp_login: null } : { xabber_login: null };\n            };\n        }, xabber);\n\n        return xabber;\n    };\n});\n","define(\"xabber-api-service\", function () {\n  return function (xabber) {\n    let env = xabber.env,\n        constants = env.constants,\n        templates = env.templates.api_service,\n        utils = env.utils,\n        $ = env.$,\n        _ = env._;\n\n\n    xabber.AccountSettings = Backbone.Model.extend({\n        idAttribute: 'jid',\n\n        defaults: {\n            timestamp: 0,\n            to_sync: false,\n            synced: false,\n            deleted: false\n        },\n\n        update_timestamp: function () {\n            this.save('timestamp', utils.now());\n        },\n\n        update_settings: function (settings) {\n            this.save(_.extend({timestamp: utils.now()}, settings));\n        },\n\n        request_data: function () {\n            return {\n                jid: this.get('jid'),\n                timestamp: this.get('timestamp'),\n                settings: _.omit(this.attributes, [\n                    'jid', 'timestamp', 'order',\n                    'to_sync', 'synced', 'deleted'\n                ])\n            };\n        }\n    });\n\n    xabber.AccountSettingsList = Backbone.CollectionWithStorage.extend({\n        model: xabber.AccountSettings,\n\n        create_from_server: function (settings_item) {\n            let settings = this.create(_.extend({\n                jid: settings_item.jid,\n                timestamp: settings_item.timestamp,\n                to_sync: true,\n                synced: true\n            }, settings_item.settings));\n            this.trigger('add_settings', settings);\n            return settings;\n        }\n    });\n\n    xabber.AccountsOrderTimestamp = Backbone.ModelWithStorage.extend({\n        defaults: {\n            timestamp: 0\n        }\n    });\n\n    xabber.APIAccount = Backbone.ModelWithStorage.extend({\n        defaults: {\n            token: null,\n            sync_all: true\n        },\n\n        _initialize: function (_attrs, options) {\n            this.list = options.settings_list;\n            this.save({connected: false, sync_request: 'silent'});\n            this.on(\"change:connected\", function () {\n                if (this.get('connected')) {\n                    this.fcm_subscribe();\n                } else {\n                    this.fcm_unsubscribe();\n                }\n            }, this);\n            this.on(\"change:token\", function () {\n                if (this.get('token') !== null) {\n                    this.save({sync_all: true,\n                               sync_request: this.list.length ? 'window' : 'silent'});\n                }\n            }, this);\n            this.list.on(\"change:to_sync\", function (item) {\n                if (this.get('sync_all') && !item.get('to_sync')) {\n                    this.save('sync_all', false);\n                }\n            }, this);\n            xabber.on(\"push_message\", function (message) {\n                if (this.get('connected') &&\n                        message.username === this.get('username') &&\n                        message.from_token !== this.get('token') &&\n                        message.action === 'settings_updated') {\n                    this.synchronize_main_settings();\n                    this.synchronize_order_settings();\n                }\n                if (this.get('connected') &&\n                    message.username === this.get('username') &&\n                    message.from_token !== this.get('token') &&\n                    message.action === 'account_updated') {\n                    this.get_settings();\n                }\n            }, this);\n\n            this.ready = new $.Deferred();\n            if (xabber.url_params.social_auth) {\n                let social_auth = xabber.url_params.social_auth;\n                delete xabber.url_params.social_auth;\n                try {\n                    let data = JSON.parse(atob(social_auth));\n                    this.save('token', null);\n                    this.social_login(data);\n                    return;\n                } catch (e) {}\n            }\n            if (xabber.url_params.token) {\n                this.save('token', xabber.url_params.token);\n                delete xabber.url_params.token;\n            }\n            if (this.get('token')) {\n                this.login_by_token();\n            } else {\n                this.ready.resolve();\n            }\n        },\n\n        _call_method: function (method, url, data, callback, errback) {\n            let request = {\n                type: method,\n                url: constants.API_SERVICE_URL + url,\n                headers: {\"Authorization\": \"Token \" + this.get('token')},\n                context: this,\n                contentType: \"application/json\",\n                dataType: 'json',\n                success: (data, textStatus, jqXHR) => {\n                    callback && callback(data);\n                },\n                error: (jqXHR, textStatus, errorThrown) => {\n                    this.onAPIError(jqXHR, errback);\n                }\n            };\n            if (data) {\n                request.data = JSON.stringify(data);\n            }\n            $.ajax(request);\n        },\n\n        add_source: function (data) {\n            return _.extend({\n                source: `${constants.CLIENT_NAME} ${xabber.get('version_number')}`\n            }, data);\n        },\n\n        get_settings: function () {\n            if (this.get('token') !== null) {\n                this._call_method('GET', '/accounts/current/', null,\n                    (data) => {\n                        if (data.account_status === 'registered') {\n                            this.onUserData(data);\n                            this._call_method('GET', '/accounts/current/client-settings/', null,\n                                this.onSettings.bind(this),\n                                this.onSettingsFailed.bind(this)\n                            );\n                        } else {\n                            utils.dialogs.error(xabber.getString(\"xabber_account__sync__error_no_permission_to_sync\"));\n                            this.save({token: null, connected: false});\n                            this.trigger('settings_result', null);\n                        }\n                    },\n                    this.onSettingsFailed.bind(this)\n                );\n            } else {\n                this.trigger('settings_result', null);\n            }\n        },\n\n        delete_settings: function (jid) {\n            if (this.get('connected')) {\n                this._call_method('DELETE', '/accounts/current/client-settings/', {jid: jid},\n                    this.onSettings.bind(this),\n                    this.onSettingsFailed.bind(this)\n                );\n            } else {\n                this.trigger('settings_result', null);\n            }\n        },\n\n        synchronize_main_settings: function () {\n            if (this.get('connected')) {\n                let data = _.map(this.list.where({to_sync: true}), function (settings) {\n                    return settings.request_data();\n                });\n                if (data.length) {\n                    this._call_method('PATCH', '/accounts/current/client-settings/',\n                        {settings_data: data},\n                        this.onSettings.bind(this),\n                        this.onSettingsFailed.bind(this)\n                    );\n                } else {\n                    this.get_settings();\n                }\n            } else {\n                this.trigger('settings_result', null);\n            }\n        },\n\n        synchronize_order_settings: function () {\n            if (this.get('connected') && this.get('sync_all')) {\n                let timestamp = this.list.order_timestamp.get('timestamp');\n                let data = this.list.map(function (settings) {\n                    return {jid: settings.get('jid'), order: settings.get('order')};\n                });\n                this._call_method('PATCH', '/accounts/current/client-settings/',\n                    {order_data: {settings: data, timestamp: timestamp}},\n                    this.onSettings.bind(this),\n                    this.onSettingsFailed.bind(this)\n                );\n            } else {\n                this.trigger('settings_result', null);\n            }\n        },\n\n        fetch_from_server: function (data) {\n            let deleted_list = data.deleted,\n                settings_list = data.settings_data,\n                order_timestamp = data.order_data.timestamp,\n                order_list = data.order_data.settings,\n                list = this.list,\n                sync_all = this.get('sync_all');\n            _.each(deleted_list, (item) => {\n                let settings = list.get(item.jid);\n                if (settings && settings.get('to_sync') &&\n                        settings.get('timestamp') <= item.timestamp) {\n                    settings.trigger('delete_account', true);\n                }\n            });\n            _.each(settings_list, function (settings_item) {\n                let settings = list.get(settings_item.jid);\n                if (settings) {\n                    if (settings.get('to_sync')) {\n                        settings.save(_.extend({\n                            timestamp: settings_item.timestamp,\n                            deleted: false,\n                            synced: true\n                        }, settings_item.settings));\n                    } else {\n                        settings.save('synced', settings_item.timestamp >= settings.get('timestamp'));\n                    }\n                }\n                if (!settings && sync_all) {\n                    settings = list.create_from_server(settings_item);\n                }\n            });\n            if (sync_all) {\n                let order_map = {}, max_order = 1;\n                _.each(order_list, function (order_item) {\n                    order_map[order_item.jid] = order_item.order;\n                    if (order_item.order > max_order) {\n                        max_order = order_item.order;\n                    }\n                });\n                list.order_timestamp.save('timestamp', order_timestamp);\n                list.each((settings) => {\n                    let jid = settings.get('jid'),\n                        order = order_map[jid];\n                    if (!order) {\n                        max_order += 1;\n                        order = max_order;\n                    }\n                    settings.save('order', order);\n                });\n            }\n            this.trigger('settings_result', data);\n            this.save('last_sync', utils.now());\n        },\n\n        onAPIError: function (jqXHR, errback) {\n            let status = jqXHR.status,\n                response = jqXHR.responseJSON;\n            if (status === 403) {\n                this.save({connected: false, token: null});\n                if (response.detail === 'Invalid token') {\n                    if (response.reason === 'not_found') {\n                        // TODO remove only Xabber-related XMPP accounts\n                    } else if (response.reason === 'revoked') {\n                        _.each(this.list.where({to_sync: true}), function (settings) {\n                            settings.trigger('delete_account', true);\n                        });\n                    } else if (response.reason === 'expired'){\n                        utils.dialogs.common(xabber.getString(\"xabber_account__login__dialog_error__header\"), xabber.getString(\"xabber_account__login__dialog_error__text\"),\n                            {ok_button: {text: xabber.getString(\"yes\")}, cancel_button: {text: xabber.getString(\"dialog_version_update__option_not_now\")}}\n                        ).done((result) => {\n                            result && this.trigger('relogin');\n                        });\n                    }\n                }\n            }\n            errback && errback(response, status);\n        },\n\n        _login: function (credentials, callback, errback) {\n            let request = {\n                type: 'POST',\n                url: constants.API_SERVICE_URL + '/accounts/login/',\n                contentType: \"application/json\",\n                dataType: 'json',\n                data: JSON.stringify(this.add_source()),\n                success: callback,\n                error: (jqXHR, textStatus, errorThrown) => {\n                    this.onAPIError(jqXHR, errback);\n                }\n            };\n            if (credentials.token) {\n                request.headers = {\"Authorization\": \"Token \" + credentials.token};\n            } else {\n                let username = credentials.username,\n                    password = credentials.password;\n                request.headers = {\"Authorization\": \"Basic \" + utils.utoa(username+':'+password)};\n            }\n            $.ajax(request);\n        },\n\n        login: function (username, password) {\n            this._login({username: username, password: password}, this.onLogin.bind(this),\n                    this.onLoginFailed.bind(this));\n        },\n\n        login_by_token: function () {\n            this._login({token: this.get('token')}, this.onLoginByToken.bind(this),\n                    this.onLoginByTokenFailed.bind(this));\n        },\n\n        social_login: function (credentials) {\n            $.ajax({\n                type: 'POST',\n                url: constants.API_SERVICE_URL + '/accounts/social_auth/',\n                contentType: \"application/json\",\n                dataType: 'json',\n                data: JSON.stringify(this.add_source(credentials)),\n                success: this.onSocialLogin.bind(this),\n                error: (jqXHR, textStatus, errorThrown) => {\n                    this.onAPIError(jqXHR, this.onSocialLoginFailed.bind(this));\n                }\n            });\n        },\n\n        revoke_token: function () {\n            let token = this.get('token');\n            if (token !== null) {\n                this._call_method('delete', '/accounts/current/tokens/', {token: token});\n            }\n            this.save({connected: false, token: null});\n            this.storage.clear();\n        },\n\n        onLoginByToken: function (data, textStatus, request) {\n            this.save({token: data.token, connected: true, sync_request: 'silent'});\n            this.get_settings();\n            this.ready.resolve();\n        },\n\n        onLoginByTokenFailed: function (response, status) {\n            this.save('connected', false);\n            this.ready.resolve();\n        },\n\n        onLogin: function (data, textStatus, request) {\n            this.save({token: data.token, connected: true});\n            this.get_settings();\n        },\n\n        onLoginFailed: function (response, status) {\n            this.save('connected', false);\n            this.trigger('login_failed', response);\n        },\n\n        onSocialLogin: function (data, textStatus, request) {\n            this.save({token: data.token, connected: true});\n            xabber.body.setScreen('settings');\n            this.ready.resolve();\n        },\n\n        onSocialLoginFailed: function (response, status) {\n            this.save('connected', false);\n            xabber.body.setScreen('settings');\n            utils.dialogs.error(xabber.getString(\"xabber_account__login__error_auth_failed\"));\n            this.ready.resolve();\n        },\n\n        onUserData: function (data) {\n            let name, xmpp_binding_jid;\n            if (data.first_name && data.last_name) {\n                name = data.first_name + ' ' + data.last_name;\n            } else {\n                name = data.username;\n            }\n            if (data.xmpp_binding) {\n                xmpp_binding_jid = data.xmpp_binding.jid;\n            }\n            this.save({username: data.full_id, name: name, linked_email_list: data.email_list, linked_social: data.social_bindings, xmpp_binding: xmpp_binding_jid });\n        },\n\n        onSettings: function (data) {\n            let sync_request = this.get('sync_request');\n            this.save('sync_request', undefined);\n            if (sync_request === 'window') {\n                if (!xabber.sync_settings_view)\n                    xabber.sync_settings_view = new xabber.SyncSettingsView({model: this});\n                this.trigger('open_sync_window', data);\n            } else {\n                this.fetch_from_server(data);\n            }\n        },\n\n        onSettingsFailed: function (response, status) {\n            this.trigger('settings_result', null);\n        },\n\n        logout: function () {\n            utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"logout_summary\"),\n                              [{name: 'delete_accounts', checked: true,\n                                text: xabber.getString(\"xabber_account__dialog_logout__option_delete_accounts\")}], { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n                if (res) {\n                    if (xabber.accounts.connected.length > 0)\n                        _.each(xabber.accounts.connected, (account) => {\n                            account.set('auto_login_xa', false);\n                            account.save('auto_login_xa', false);\n                        });\n                    this.revoke_token();\n                    if (res.delete_accounts) {\n                        _.each(this.list.where({to_sync: true}), (settings) => {\n                            settings.trigger('delete_account', true);\n                        });\n                    }\n                }\n            });\n        },\n\n        start: function () {\n            if (!this.get('connected')) {\n                this.fcm_unsubscribe();\n            }\n            this.get_settings();\n        },\n\n        fcm_subscribe: function () {\n            this._call_method('post', '/fcm/subscription/', {endpoint_key: xabber.cache.endpoint_key});\n        },\n\n        fcm_unsubscribe: function () {\n            $.ajax({\n                type: 'DELETE',\n                url: constants.API_SERVICE_URL + '/fcm/subscription/',\n                contentType: \"application/json\",\n                dataType: 'json',\n                data: JSON.stringify({endpoint_key: xabber.cache.endpoint_key})\n            });\n        }\n    });\n\n    xabber.APIAccountAuthView = xabber.BasicView.extend({\n        _initialize: function () {\n            this.$username_input = this.$('input[name=username]');\n            this.$password_input = this.$('input[name=password]');\n            this.data.on(\"change:authentication\", this.onChangeAuthenticationState, this);\n            return this;\n        },\n\n        onRender: function () {\n            this.authFeedback({});\n            Materialize.updateTextFields();\n            this.$username_input.val('').focus();\n            this.$password_input.val('');\n            this.updateButtons();\n        },\n\n        keyUp: function (ev) {\n            ev.keyCode === constants.KEY_ENTER && this.submit();\n        },\n\n        submit: function () {\n            if (this.data.get('authentication')) {\n                this.cancel();\n                return;\n            }\n            this.data.set('authentication', true);\n            this.authFeedback({});\n            let username = this.$username_input.val(),\n                password = this.$password_input.val();\n            if (!username) {\n                return this.errorFeedback({username: xabber.getString(\"account_auth__error__text_input_username\")});\n            }\n            username = username.trim();\n            if (!password)  {\n                return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n            }\n            password = password.trim();\n            this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n            this.model.login(username, password);\n        },\n\n        cancel: function () {\n            this.data.set('authentication', false);\n            this.onRender();\n        },\n\n        authFeedback: function (options) {\n            this.$username_input.switchClass('invalid', options.username)\n                .siblings('span.errors').text(options.username || '');\n            this.$password_input.switchClass('invalid', options.password)\n                .siblings('span.errors').text(options.password || '');\n        },\n\n        errorFeedback: function (options) {\n            this.authFeedback(options);\n            this.data.set('authentication', false);\n        },\n\n        updateButtons: function () {\n            let authentication = this.data.get('authentication');\n            this.$('.btn-log-in').switchClass('disabled', authentication);\n        },\n\n        onChangeAuthenticationState: function () {\n            this.updateButtons();\n            if (this.data.get('authentication')) {\n                this.model.on(\"change:connected\", this.onChangeConnected, this);\n                this.model.on(\"login_failed\", this.onLoginFailed, this);\n            } else {\n                this.model.off(\"change:connected\", this.onChangeConnected, this);\n                this.model.off(\"login_failed\", this.onLoginFailed, this);\n            }\n        },\n\n        onChangeConnected: function () {\n            if (this.model.get('connected')) {\n                this.successFeedback();\n            }\n        },\n\n        onLoginFailed: function (response) {\n            this.errorFeedback({password: (response && response.detail) || xabber.getString(\"connection__error__text_authentication_failed_short\")});\n        },\n\n        socialAuth: function (ev) {\n            let origin = window.location.href,\n                provider = $(ev.target).closest('.btn-social').data('provider');\n            if (provider == 'email') {\n                this.closeModal();\n                xabber.email_auth_view.show();\n                // return;\n            }\n            else\n                window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n        }\n    });\n\n      xabber.XabberLoginByEmailPanel = xabber.APIAccountAuthView.extend({\n          className: 'login-panel add-xabber-account-panel',\n          template: templates.xabber_login_by_email,\n\n          events: {\n              \"click .btn-cancel\": \"close\",\n              \"click .btn-log-in\": \"submit\",\n              \"keyup input[name=password]\": \"keyUp\"\n          },\n\n          render: function () {\n              this.$el.openModal({\n                  opacity: 0.9,\n                  ready: this.onRender.bind(this),\n                  complete: this.close.bind(this)\n              });\n          },\n\n          successFeedback: function () {\n              this.authFeedback({});\n              this.data.set('authentication', false);\n              this.close();\n          },\n\n          onRender: function () {\n              Materialize.updateTextFields();\n              this.$username_input.val('').focus();\n              this.$password_input.val('');\n          },\n\n          close: function (auth) {\n              this.$el.closeModal({ complete: this.hide.bind(this) });\n          }\n      });\n\n    xabber.XabberLoginPanel = xabber.APIAccountAuthView.extend({\n        className: 'login-panel',\n        template: templates.xabber_login,\n\n        events: {\n            \"click .login-type\": \"changeLoginType\",\n            \"click .btn-log-in\": \"submit\",\n            \"click .btn-social\": \"socialAuth\",\n            \"click .btn-escape\": \"openXmppLoginPanel\",\n            \"keyup input[name=password]\": \"keyUp\"\n        },\n\n        render: function () {\n            this.onRender();\n        },\n\n        successFeedback: function () {\n            this.authFeedback({});\n            this.data.set('authentication', false);\n            xabber.body.setScreen('all-chats');\n        },\n\n        changeLoginType: function () {\n            xabber.body.setScreen('login', {'login_screen': 'xmpp'});\n        },\n\n        openXmppLoginPanel: function () {\n            xabber.body.setScreen('login', {'login_screen': 'xmpp'});\n        }\n    });\n\n    xabber.AddAPIAccountView = xabber.APIAccountAuthView.extend({\n        className: 'login-panel add-xabber-account-panel',\n        template: templates.add_xabber_account,\n\n        events: {\n            \"click .account-field .dropdown-content\": \"selectAccount\",\n            \"click .btn-add\": \"loginXabberAccount\",\n            \"keyup input[name=password]\": \"keyUp\",\n            \"click .btn-social\": \"socialAuth\",\n            \"click .btn-cancel\": \"closeModal\"\n        },\n\n        render: function (options) {\n            if (!xabber.accounts.connected.length) {\n                utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n                return;\n            }\n            options || (options = {});\n            let accounts = xabber.accounts.connected,\n                jid = options.jid || '';\n            this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n                .removeClass('invalid');\n            this.$('.single-acc').showIf(accounts.length === 1);\n            this.$('.multiple-acc').hideIf(accounts.length === 1);\n            this.$('.account-field .dropdown-content').empty();\n            _.each(accounts, (account) => {\n                this.$('.account-field .dropdown-content').append(\n                    this.renderAccountItem(account));\n            });\n            this.bindAccount(accounts[0]);\n            this.$('span.errors').text('');\n            this.$el.openModal({\n                opacity: 0.9,\n                ready: () => {\n                    this.onRender.bind(this);\n                    this.$('.account-field .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left',\n                    });\n                },\n                complete: this.closeModal.bind(this)\n            });\n            return this;\n        },\n\n        bindAccount: function (account) {\n            this.$('.account-field .dropdown-button .account-item-wrap')\n                .replaceWith(this.renderAccountItem(account));\n        },\n\n        renderAccountItem: function (account) {\n            let $item = $(env.templates.contacts.add_contact_account_item({jid: account.get('jid')}));\n            $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n            return $item;\n        },\n\n        selectAccount: function (ev) {\n            let $item = $(ev.target).closest('.account-item-wrap'),\n                account = xabber.accounts.get($item.data('jid'));\n            this.bindAccount(account);\n            this.loginXabberAccount(account);\n        },\n\n        loginXabberAccount: function (account) {\n            account.set('auto_login_xa', true);\n            account.authXabberAccount();\n            this.closeModal();\n        },\n\n        successFeedback: function () {\n            this.authFeedback({});\n            this.data.set('authentication', false);\n            this.closeModal();\n        },\n\n        onHide: function () {\n            this.$el.detach();\n        },\n\n        closeModal: function () {\n            this.$el.closeModal({ complete: this.hide.bind(this) });\n        }\n    });\n\n    xabber.SyncSettingsView = xabber.BasicView.extend({\n        className: 'modal main-modal sync-settings-modal noselect',\n        template: templates.sync_settings,\n        ps_selector: '.modal-content',\n        avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n        events: {\n            \"click .btn-sync\": \"syncSettings\",\n            \"click .btn-cancel\": \"close\",\n            \"change .sync-all\": \"changeSyncAll\",\n            \"change .sync-one\": \"changeSyncOne\",\n            \"click .sync-icon\": \"changeSyncWay\"\n        },\n\n        _initialize: function () {\n            this.settings = null;\n            this.to_sync_map = null;\n            this.model.on(\"open_sync_window\", this.render, this);\n        },\n\n        render: function (data, options) {\n            this.settings = data;\n            this.sync_all = this.model.get('sync_all');\n            this.accounts = [];\n            this.$el.openModal({\n                ready: this.onRender.bind(this),\n                complete: this.close.bind(this)\n            });\n        },\n\n        onRender: function () {\n            this.$('.accounts-wrap').empty();\n            let list = this.model.list,\n                accounts_map = {},\n                deleted_map = {},\n                settings_map = {},\n                order_map = {};\n            _.each(this.settings.settings_data, function (settings_item) {\n                settings_map[settings_item.jid] = settings_item;\n            });\n            this.settings_map = settings_map;\n            _.each(this.settings.order_data.settings, function (order_item) {\n                order_map[order_item.jid] = order_item.order;\n            });\n            _.each(this.settings.deleted, function (deleted_item) {\n                deleted_map[deleted_item.jid] = deleted_item.timestamp;\n            });\n\n            // Make synchronization list\n            _.each(settings_map, (obj, jid) => {\n                // pick accounts that are present on server only\n                if (!list.get(jid)) {\n                    accounts_map[jid] = _.extend({\n                        jid: jid,\n                        to_sync: this.sync_all,\n                        sync_way: 'from_server'\n                    }, obj);\n                }\n            });\n            list.each((settings) => {\n                let jid = settings.get('jid'),\n                    obj = settings_map[jid],\n                    sync_way;\n                if (_.has(deleted_map, jid)) {\n                    // pick local but deleted from server accounts\n                    sync_way = deleted_map[jid] >= settings.get('timestamp') ? 'delete' : 'to_server';\n                    accounts_map[jid] = _.extend({\n                        sync_way: sync_way,\n                        sync_choose: ['delete', 'to_server']\n                    }, _.omit(settings.attributes, ['order']));\n                    settings.save('synced', false);\n                } else if (obj) {\n                    // pick accounts that are present on both server and client\n                    if (obj.timestamp > settings.get('timestamp')) {\n                        sync_way = 'from_server';\n                    } else if (obj.timestamp < settings.get('timestamp')) {\n                        sync_way = 'to_server';\n                    } else {\n                        sync_way = 'no';\n                    }\n                    accounts_map[jid] = _.extend({\n                        jid: jid,\n                        to_sync: settings.get('to_sync'),\n                        sync_way: sync_way,\n                        sync_choose: sync_way !== 'no' ? ['from_server', 'to_server'] : false\n                    }, obj.settings);\n                    settings.save('synced', sync_way === 'no');\n                } else {\n                    // pick local accounts\n                    accounts_map[jid] = _.extend({\n                        sync_way: 'to_server'\n                    }, _.omit(settings.attributes, ['order']));\n                    settings.save('synced', false);\n                }\n            });\n\n            // fetch server order of accounts and merge it with local order\n            let max_order = _.max(order_map) || 0;\n            _.each(order_map, (order, jid) => {\n                accounts_map[jid].order = order;\n            });\n            list.each((settings) => {\n                let jid = settings.get('jid');\n                if (!accounts_map[jid].order) {\n                    accounts_map[jid].order = (++max_order);\n                }\n            });\n\n            this.accounts_map = accounts_map;\n            this.accounts = _.map(accounts_map, function (value, key) { return value; });\n            // sort merged list by new order value\n            this.accounts.sort(function (acc1, acc2) {\n                return acc1.order - acc2.order;\n            });\n            _.each(this.accounts, this.addAccountHtml.bind(this));\n            this.updateSyncOptions();\n        },\n\n        addAccountHtml: function (settings) {\n            let jid = settings.jid;\n            let $account_el = $(templates.sync_settings_account_item({\n                jid: jid,\n                view: this\n            }));\n            this.$('.accounts-wrap').append($account_el);\n        },\n\n        updateAccountHtml: function (account_wrap) {\n            let $account_wrap = $(account_wrap),\n                jid = $account_wrap.data('jid'),\n                account_item = this.accounts_map[jid];\n            this.sync_all && (account_item.to_sync = true);\n            $account_wrap.switchClass('sync', account_item.to_sync);\n            $account_wrap.find('.sync-one').prop('checked', account_item.to_sync);\n            let sync_way;\n            if (account_item.to_sync) {\n                sync_way = account_item.sync_way;\n            } else if (this.model.list.get(jid)) {\n                sync_way = 'off_local';\n            } else {\n                sync_way = 'off_remote';\n            }\n            let mdiclass = constants.SYNC_WAY_DATA[sync_way].icon,\n                $sync_icon = $account_wrap.find('.sync-icon');\n            $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n                .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n            $account_wrap.find('.sync-tip').text(xabber.getString(constants.SYNC_WAY_DATA[sync_way].tip));\n        },\n\n        updateSyncOptions: function () {\n            let list = this.model.list,\n                sync_all = this.sync_all,\n                accounts_map = this.accounts_map;\n            this.$('.sync-all').prop('checked', sync_all ? 'checked' : '');\n            this.$('.sync-one').prop('disabled', sync_all ? 'disabled' : '');\n            this.$('.account-wrap').each((idx, el) => {\n                this.updateAccountHtml(el);\n            });\n        },\n\n        changeSyncAll: function (ev) {\n            let $target = $(ev.target),\n                sync_all = $target.prop('checked');\n            this.sync_all = sync_all;\n            this.$('.sync-one').prop('disabled', sync_all ? 'disabled' : '');\n            if (sync_all) {\n                _.each(this.accounts, (account_item) => {\n                    account_item.to_sync = true;\n                });\n                this.$('.account-wrap').each((idx, el) => {\n                    this.updateAccountHtml(el);\n                });\n            }\n        },\n\n        changeSyncOne: function (ev) {\n            let $target = $(ev.target),\n                value = $target.prop('checked'),\n                $account_wrap = $target.closest('.account-wrap'),\n                jid = $account_wrap.data('jid');\n            this.accounts_map[jid].to_sync = value;\n            this.updateAccountHtml($account_wrap);\n        },\n\n        changeSyncWay: function (ev) {\n            let $account_wrap = $(ev.target).closest('.account-wrap'),\n                jid = $account_wrap.data('jid'),\n                account_item = this.accounts_map[jid];\n            if (!account_item.to_sync || !account_item.sync_choose) {\n                return;\n            }\n            let sync_choose = account_item.sync_choose,\n                idx = sync_choose.indexOf(account_item.sync_way) + 1;\n            if (idx === sync_choose.length) {\n                idx = 0;\n            }\n            account_item.sync_way = sync_choose[idx];\n            this.updateAccountHtml($account_wrap);\n        },\n\n        syncSettings: function () {\n            let list = this.model.list,\n                sync_all = this.sync_all;\n            this.model.save('sync_all', this.sync_all);\n            _.each(this.accounts, function (account_item) {\n                let jid = account_item.jid,\n                    settings = list.get(jid);\n                if (settings) {\n                    settings.save('to_sync', account_item.to_sync);\n                    if (sync_all) {\n                        settings.save('order', account_item.order);\n                    }\n                    let sync_way = account_item.sync_way;\n                    if (sync_way === 'to_server') {\n                        settings.update_timestamp();\n                    } else if (sync_way === 'from_server' || sync_way === 'delete') {\n                        settings.save('timestamp', 0);\n                    }\n                }\n                if (!settings && account_item.to_sync) {\n                    settings = list.create_from_server(\n                        _.omit(account_item, ['sync_way', 'sync_choose']));\n                }\n            });\n            this.model.synchronize_main_settings();\n            this.do_sync = true;\n            this.close();\n        },\n\n        onHide: function () {\n            this.$el.detach();\n            if (xabber.body.isScreen('blank')) {\n                xabber.body.setScreen('all-chats');\n            }\n        },\n\n        close: function () {\n            if (!this.do_sync) {\n                this.model.trigger('settings_result', null);\n            }\n            this.do_sync = null;\n            this.settings = null;\n            this.settings_map = null;\n            this.closeModal();\n        },\n\n        closeModal: function () {\n            this.$el.closeModal({ complete: this.hide.bind(this) });\n        }\n    });\n\n    xabber.APIAccountView = xabber.BasicView.extend({\n        className: 'setting xabber-account',\n        template: templates.xabber_account,\n        avatar_size: constants.AVATAR_SIZES.XABBER_ACCOUNT,\n\n        events: {\n            \"click .account-info-wrap\": \"openAccount\",\n            \"click .btn-login\": \"login\",\n            \"click .btn-logout\": \"logout\",\n            \"click .btn-set-password\": \"setPassword\",\n            \"click .btn-sync-settings\": \"synchronize\",\n            \"click .social-linked-header\": \"changeExpanded\",\n            \"click .btn-unlink\": \"unlinkSocial\",\n            \"click .btn-link\": \"linkSocial\",\n            \"click .btn-verify-email\": \"verifyEmail\"\n        },\n\n        _initialize: function () {\n            this.$el.appendTo(this.parent.$('.settings-block-wrap.xabber-account'));\n            this.$tab = this.parent.$('.xabber-account-tab');\n            this.updateForConnectedStatus();\n            this.default_color = utils.images.getDefaultColor(this.model.get('username'));\n            this.model.on(\"change:username\", this.updateName, this);\n            this.model.on(\"change:name\", this.updateAvatar, this);\n            this.model.on(\"change:connected\", this.updateForConnectedStatus, this);\n            this.model.on(\"change:last_sync\", this.updateLastSyncInfo, this);\n            this.model.on(\"change:linked_email_list\", this.updateSocialBindings, this);\n            this.model.on(\"change:linked_social\", this.updateSocialBindings, this);\n            this.model.on(\"relogin\", this.login, this);\n            this.data.on(\"change:sync\", this.updateSyncButton, this);\n            this.data.on(\"change:expanded\", this.updateExpanded, this);\n            this.data.set('expanded', false);\n        },\n\n        render: function () {\n            this.data.set('sync', false);\n            this.$('span.errors ').html(\"\");\n            this.updateLastSyncInfo();\n            this.updateSocialBindings();\n            this.$('.btn-more').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                hover: false\n            });\n        },\n\n        changeExpanded: function () {\n            this.data.set('expanded', (this.data.get('expanded')) ? false : true);\n        },\n\n        updateExpanded: function () {\n            let expanded = this.data.get('expanded');\n            this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n            this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n            this.$('.social-linked-wrap').showIf(expanded);\n        },\n\n        updateSocialBindings: function () {\n            let linked_emails = this.model.get('linked_email_list'),\n                linked_social = this.model.get('linked_social');\n            this.$('.email-linked').remove();\n            this.$('.social-account').each(function (idx, item) {\n                let $social_item = $(item);\n                $social_item.addClass('not-linked');\n                $social_item.find('.synced-info').text(xabber.getString(\"title_not_linked_account\"));\n                $social_item.find('.btn-link').text(xabber.getString(\"action_connect\")).removeClass('btn-unlink');\n            });\n            _.each(linked_emails, (email) => {\n                let email_id = email.id,\n                    email_address = email.email,\n                    is_verified = email.verified,\n                    email_item_html = $(templates.linked_email_item({email_id: email_id, email: email_address, verified: is_verified, color: this.default_color}));\n                email_item_html.insertBefore(this.$('#email.not-linked'));\n            });\n            _.each(linked_social, (social) => {\n                let social_provider = social.provider,\n                    social_name = social.first_name + \" \" + social.last_name;\n                this.$('.'+ social_provider + '-linked').removeClass('not-linked');\n                this.$('.' + social_provider + '-linked .btn-link').text(xabber.getString(\"action_disconnect\")).addClass('btn-unlink');\n                this.$('.'+ social_provider + '-linked .synced-info').html($(`<div class=\"name one-line\">${social_name}</div><div class=\"verified-status one-line\">${xabber.getString(\"title_linked_account\", [social_provider])}</div>`));\n            });\n        },\n\n        linkSocial: function (ev) {\n            if ((this.model.get('token'))&&(!$(ev.target).hasClass('btn-unlink'))) {\n                let social_elem = $(ev.target).closest('.social-linked-item-wrap'),\n                    provider = social_elem.attr('id');\n                if (provider === 'email') {\n                    utils.dialogs.ask_enter_value(xabber.getString(\"xabber_account__dialog_add_email__header\"), null, {input_placeholder_value: xabber.getString(\"xabber_account__dialog_add_email__hint_enter_email\")}, { ok_button_text: xabber.getString(\"action_connect\")}).done((mail) => {\n                        if (mail) {\n                            this.model._call_method('POST', '/accounts/current/email_list/', {email: mail},\n                                (mail_data) => {\n                                    let email_list = this.model.get('linked_email_list');\n                                    email_list.push(mail_data);\n                                    this.model.set('linked_email_list', email_list);\n                                    this.updateSocialBindings();\n                                },\n                                (jqXHR, textStatus, errorThrown) => {\n                                    this.$('span.errors ').text(jqXHR.email[0]);\n                                });\n                        }\n                    });\n                }\n                else {\n                    this.openAccount();\n                }\n            }\n        },\n\n        verifyEmail: function (ev) {\n            let $target = $(ev.target),\n                $email_html = $target.closest('.social-linked-item-wrap'),\n                email_address = $email_html.data('email');\n            utils.dialogs.ask_enter_value(xabber.getString(\"title_email_confirm\"), null, {input_placeholder_value: xabber.getString(\"xabber_account__dialog_confirm_email__hint_enter_code\")}, { ok_button_text: xabber.getString(\"button_confirm\"), resend_button_text: xabber.getString(\"button_resend_link\"), resend_to: email_address}).done((code) => {\n                if (code) {\n                    if (code === email_address) {\n                        this.model._call_method('POST', '/accounts/current/email_list/', {email: code});\n                    }\n                    else {\n                        this.model._call_method('POST', '/accounts/email_confirmation/', {code: code},\n                            (mail_data) => {\n                                let email_list = mail_data.email_list;\n                                this.model.set('linked_email_list', email_list);\n                                this.updateSocialBindings();\n                            }, (jqXHR, textStatus, errorThrown) => {\n                                this.$('span.errors').text(jqXHR.code[0]);\n                            });\n                    }\n                }\n            });\n        },\n\n        unlinkSocial: function (ev) {\n            let $target = $(ev.target);\n            if (!$target.hasClass('btn-verify-email')) {\n                let $social_html = $target.closest('.social-linked-item-wrap');\n                let provider = $social_html.attr('id'),\n                    is_email = $social_html.data('email');\n                if (is_email) {\n                    let email_address = $social_html.data('email');\n                    utils.dialogs.ask(xabber.getString(\"xabber_account__dialog_unlink_email__header\"), xabber.getString(\"title_delete_email\"), null, {ok_button_text: xabber.getString(\"action_disconnect\")}).done((result) => {\n                        if (result) {\n                            this.model._call_method('DELETE', '/accounts/current/email_list/' + $social_html.data('id') + '/', null,\n                                (mail_data) => {\n                                    let email_list = this.model.get('linked_email_list'),\n                                        deleted_mail_index = email_list.indexOf(email_list.find(email => email.id === $social_html.data('id')));\n                                    email_list.splice(deleted_mail_index, 1);\n                                    this.model.set('linked_email_list', email_list);\n                                    this.updateSocialBindings();\n                                }, (jqXHR, textStatus, errorThrown) => {\n                                    this.model.get_settings();\n                                });\n                        }\n                    });\n                }\n                else if (provider !== 'email') {\n                    utils.dialogs.ask(xabber.getString(\"xabber_account__dialog_unlink_social__header\"), xabber.getString(\"title_delete_social\", [provider]), null, {ok_button_text: xabber.getString(\"action_disconnect\")}).done((result) => {\n                        if (result) {\n                            this.model._call_method('POST', '/accounts/current/social_unbind/', {provider: provider},\n                                () => {\n                                    let social_list = this.model.get('linked_social'),\n                                        deleted_social_index = social_list.indexOf(social_list.find(social => social.provider === provider));\n                                    social_list.splice(deleted_social_index, 1);\n                                    this.model.set('linked_social', social_list);\n                                    this.updateSocialBindings();\n                                }, (jqXHR, textStatus, errorThrown) => {\n                                    this.model.get_settings();\n                                });\n                        }\n                    });\n                }\n            }\n        },\n\n        updateName: function () {\n            this.$('.account-info-wrap .name').text(this.model.get('username'));\n            this.default_color = utils.images.getDefaultColor(this.model.get('username'));\n        },\n\n        updateAvatar: function () {\n            let name = this.model.get('name'),\n                image = this.model.get('image') || utils.images.getDefaultAvatar(name);\n            this.$('.circle-avatar').setAvatar(utils.images.getCachedImage(image), this.avatar_size);\n        },\n\n        updateForConnectedStatus: function () {\n            let connected = this.model.get('connected');\n            this.$tab.switchClass('online', connected)\n                     .switchClass('offline', !connected);\n            this.$('.linked-social-accounts-and-emails').showIf(connected);\n            this.$('.account-info-wrap').showIf(connected);\n            this.$('.sync-wrap').showIf(connected);\n            if (connected) {\n                this.updateName();\n                this.updateAvatar();\n                this.updateSyncButton();\n                this.updateLastSyncInfo();\n            }\n            this.$('.btn-login').hideIf(connected);\n            this.$('.btn-more').showIf(connected);\n        },\n\n        updateSyncButton: function () {\n            let sync = this.data.get('sync');\n            this.$('.btn-sync .button').hideIf(sync);\n            this.$('.btn-sync .preloader-wrapper').showIf(sync);\n        },\n\n        updateLastSyncInfo: function () {\n            let last_sync = this.model.get('last_sync');\n            if (last_sync) {\n                let time_delta = utils.now() - last_sync;\n                this.$('.last-sync-info').text(xabber.getString(\"xabber_account__last_sync__text\", [env.moment(env.moment.now() - 1000*time_delta).fromNow()]));\n            } else {\n                this.$('.last-sync-info').text(xabber.getString(\"xabber_account__last_sync__not_synced\"));\n            }\n        },\n\n        synchronize: function () {\n            if (!this.data.get('sync')) {\n                this.data.set('sync', true);\n                this.model.once(\"settings_result\", function () {\n                    this.data.set('sync', false);\n                }, this);\n                this.model.save('sync_request', 'window');\n                this.model.get_settings();\n            }\n        },\n\n        login: function () {\n            if (xabber.add_api_account_view && xabber.accounts.connected.length > 1)\n                xabber.add_api_account_view.show();\n            else {\n                let account = xabber.accounts.connected[0];\n                if (account) {\n                    account.set('auto_login_xa', true);\n                    account.authXabberAccount();\n                }\n            }\n        },\n\n        logout: function () {\n            this.model.logout();\n        },\n\n        onPasswordResetFailed: function () {\n            utils.dialogs.error(xabber.getString(\"password_reset_need_email\"));\n        },\n\n        setPassword: function () {\n            let email_list = this.model.get('linked_email_list');\n            if (email_list) {\n                let verified_email = email_list.find(mail => mail.verified === true);\n                if (email_list.indexOf(verified_email) != -1) {\n                    $.ajax({\n                        type: 'POST',\n                        url: constants.API_SERVICE_URL + '/accounts/password_reset_request/',\n                        contentType: \"application/json\",\n                        dataType: 'json',\n                        data: JSON.stringify({email: verified_email.email}),\n                        success: () => {\n                            utils.dialogs.notify(xabber.getString(\"button_reset_pass\"), xabber.getString(\"password_reset_success\", [verified_email.email]));\n                        },\n                        error: this.onPasswordResetFailed.bind(this)\n                    });\n                }\n                else\n                    this.onPasswordResetFailed();\n            }\n            else\n                this.onPasswordResetFailed();\n        },\n\n        openAccount: function () {\n            utils.openWindow(constants.XABBER_ACCOUNT_URL + '/?token=' + this.model.get('token'));\n        }\n    });\n\n\n    xabber.once(\"start\", function () {\n            this.account_settings_list = new this.AccountSettingsList(null, {\n                storage_name: this.getStorageName() + '-account-settings'\n            });\n            this.account_settings_list.fetch();\n            this.account_settings_list.order_timestamp = new this.AccountsOrderTimestamp(\n                {id: 'accounts-order-timestamp'},\n                {storage_name: this.getStorageName(), fetch: 'after'}\n            );\n        if (constants.ENABLE_XABBER_ACCOUNT) {\n            this.api_account = new this.APIAccount({id: 'api-account'},\n                {\n                    storage_name: this.getStorageName(), fetch: 'before',\n                    settings_list: this.account_settings_list\n                });\n        }\n\n            this.xabber_login_panel = xabber.login_page.addChild(\n                'xabber_login', this.XabberLoginPanel, {model: this.api_account});\n\n        if (constants.ENABLE_XABBER_ACCOUNT) {\n            this.settings_view.addChild('api-account', this.APIAccountView,\n                {model: this.api_account});\n\n            this.add_api_account_view = new this.AddAPIAccountView({model: this.api_account});\n            this.email_auth_view = new xabber.XabberLoginByEmailPanel({\n                parent: this.add_api_account_view,\n                model: this.api_account\n            });\n        }\n    }, xabber);\n\n    return xabber;\n  };\n});\n","define(\"xabber-chats\", function () {\n  return function (xabber) {\n    let env = xabber.env,\n        constants = env.constants,\n        templates = env.templates.chats,\n        utils = env.utils,\n        $ = env.$,\n        $iq = env.$iq,\n        $msg = env.$msg,\n        Strophe = env.Strophe,\n        _ = env._,\n        moment = env.moment,\n        uuid = env.uuid,\n        Images = utils.images,\n        Emoji = utils.emoji,\n        pretty_date = (timestamp) => { return utils.pretty_date(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'dddd, D MMMM YYYY')},\n        pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n    xabber.Message = Backbone.Model.extend({\n        idAttribute: 'unique_id',\n\n        defaults: function () {\n            let msgid = uuid();\n            return {\n                msgid: msgid,\n                unique_id: msgid,\n                type: 'main',\n                state: constants.MSG_PENDING\n            };\n        },\n\n        initialize: function () {\n            let time = this.get('time'), attrs = {};\n            if (time) {\n                attrs.timestamp = Number(moment(time));\n            } else {\n                attrs.timestamp = moment.now();\n                attrs.time = moment(attrs.timestamp).format();\n            }\n            if (!this.get('origin_id'))\n                (this.isSenderMe() && !this.get('synced_from_server') && !this.get('carbon_copied') && !this.get('is_archived')) && this.set('origin_id', this.get('msgid'));\n            this.updateUniqueId();\n            this.set(attrs);\n            this.on(\"change:origin_id stanza_id archived_id\", this.updateUniqueId, this);\n        },\n\n        updateUniqueId: function () {\n            this.set('unique_id', this.get('origin_id') || this.get('stanza_id') || this.get('archived_id') || this.get('msgid'));\n        },\n\n        getText: function () {\n            let forwarded_message = this.get('forwarded_message');\n            if (forwarded_message && forwarded_message.length) {\n                return forwarded_message[0].get('message');\n            }\n            return this.get('message');\n        },\n\n        getState: function () {\n            return constants.MSG_STATE[this.get('state')];\n        },\n\n        getVerboseState: function () {\n            let state = xabber.getString(constants.MSG_VERBOSE_STATE[this.get('state')]);\n            if (this.account) {\n                if (!this.account.isOnline())\n                    state = xabber.getString(\"account_is_offline\");\n            }\n            else if (!this.collection.account.isOnline())\n                state = xabber.getString(\"account_is_offline\");\n            return state;\n        },\n\n        isSenderMe: function () {\n            if (this.account)\n                return this.account.get('jid') === this.get('from_jid');\n            else if (this.collection.account)\n                return this.collection.account.get('jid') === this.get('from_jid');\n            else\n                false;\n        }\n    });\n\n    xabber.MessagesBase = Backbone.Collection.extend({\n        model: xabber.Message,\n    });\n\n      xabber.SearchedMessages = xabber.MessagesBase.extend({\n          comparator: 'timestamp',\n\n          initialize: function () {\n              this.collections = [];\n              this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n              this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n          },\n\n          addCollection: function (collection) {\n              this.collections.push(collection);\n          },\n\n          updateInCollections: function (event, contact) {\n              _.each(this.collections, function (collection) {\n                  collection.update(contact, event);\n              });\n          }\n      });\n\n      xabber.Messages = Backbone.Collection.extend({\n        model: xabber.Message,\n        comparator: 'timestamp',\n\n        initialize: function (models, options) {\n            this.account = options.account;\n        },\n\n        createInvitationFromStanza: function ($message, options) {\n            options = options || {};\n            let $invite_item = $message.find('invite'),\n                full_jid = $invite_item.attr('jid') || $message.attr('from'),\n                $delay = options.delay || $message.children('delay'),\n                from_jid = Strophe.getBareJidFromJid(full_jid),\n                body = $message.children('body').text(),\n                markable = $message.find('markable').length > 0,\n                msgid = $message.attr('id'),\n                archive_id = $message.children('archived').attr('id'),\n                origin_id = $message.children('origin-id').attr('id'),\n                unique_id = origin_id || options.stanza_id || archive_id || msgid,\n                message = unique_id && this.get(unique_id),\n                $group_info = $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n                is_private_invitation,\n                group_info_attributes = {};\n\n            if (message)\n                return message;\n\n            if (!from_jid)\n                return;\n\n            let attrs = {\n                xml: options.xml || $message[0],\n                carbon_copied: options.carbon_copied && !options.is_archived,\n                markable: markable,\n                msgid: msgid,\n                is_forwarded: options.is_forwarded,\n                forwarded_message: options.forwarded_message || null,\n                from_jid: from_jid,\n                origin_id: origin_id,\n                stanza_id: options.stanza_id,\n                archive_id: archive_id,\n                contact_stanza_id: options.contact_stanza_id,\n                is_archived: options.is_archived\n            };\n\n            $delay.length && (attrs.time = $delay.attr('stamp'));\n            options.synced_msg && (attrs.synced_invitation_from_server = true);\n            body && (attrs.message = body);\n\n            let contact = this.account.contacts.mergeContact({jid: Strophe.getBareJidFromJid(from_jid), group_chat: true}),\n                chat = this.account.chats.getChat(contact);\n            contact.set('in_roster', false);\n            contact.getVCard();\n            if ($group_info.length) {\n                let name = $group_info.find('name').text(),\n                    model = $group_info.find('membership').text(),\n                    privacy = $group_info.find('privacy').text(),\n                    searchable = $group_info.find('index').text(),\n                    parent_chat = $group_info.find('parent-chat').text(),\n                    description = $group_info.find('description').text();\n                name && (group_info_attributes.name = name);\n                model && (group_info_attributes.model = name);\n                privacy && (group_info_attributes.privacy = privacy);\n                searchable && (group_info_attributes.searchable = searchable);\n                description && (group_info_attributes.description = description);\n                parent_chat.length && (is_private_invitation = true);\n                is_private_invitation && contact.set('private_chat', true);\n                privacy === 'incognito' && contact.set('incognito_chat', true);\n                let prev_group_info = contact.get('group_info') || {};\n                _.extend(prev_group_info, group_info_attributes);\n                contact.set('group_info', prev_group_info);\n            }\n\n            let invite_msg = chat.messages.createSystemMessage(_.extend(attrs, {\n                from_jid: from_jid,\n                auth_request: true,\n                invite: true,\n                private_invite: is_private_invitation || false,\n                is_accepted: false,\n                silent: false,\n                message: $message.find('reason').text()\n            }));\n            return invite_msg;\n        },\n\n        createFromStanza: function ($message, options) {\n            options || (options = {});\n            let $delay = options.delay || $message.children('delay'),\n                full_jid = $message.attr('from') || options.from_jid,\n                from_jid = Strophe.getBareJidFromJid(full_jid),\n                body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text(),\n                markable = $message.find('markable').length > 0,\n                archive_id = $message.children('archived').attr('id'),\n                origin_id = $message.children('origin-id').attr('id'),\n                msgid = $message.attr('id'),\n                unique_id = origin_id || options.stanza_id || archive_id || msgid,\n                message = unique_id && this.get(unique_id);\n\n            if (options.replaced) {\n                let conversation = $message.children('replace').attr('conversation');\n                if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.SYNCHRONIZATION_OLD_OMEMO}\"]`).length)\n                    return;\n                if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && this.account.omemo && !options.forwarded) {\n                    this.account.omemo.receiveChatMessage($message, _.extend(options, {from_jid: conversation, conversation: conversation}));\n                    return;\n                }\n                $message = $message.children('replace').children('message');\n                body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text();\n                let sid = $message.children('stanza-id').first().attr('id');\n                message = this.find(m => m.get('stanza_id') === sid || m.get('contact_stanza_id') === sid);\n                if (!message)\n                    return;\n                from_jid = message.get('from_jid');\n                msgid = message.get('msgid');\n                let xml = message.get('xml');\n                xml.innerHTML = $message[0].innerHTML;\n                options.xml = xml;\n                options.forwarded_message = message.get('forwarded_message');\n            }\n\n            if (message && !options.replaced && !options.context_message && !options.searched_message && !options.pinned_message && !options.participant_message && !options.echo_msg && !options.is_searched)\n                return message;\n\n            let attrs = {\n                    xml: options.xml || $message[0],\n                    original_message: body,\n                    carbon_copied: options.carbon_copied && !options.is_archived,\n                    markable: markable,\n                    msgid: msgid,\n                    is_forwarded: options.is_forwarded,\n                    forwarded_message: options.forwarded_message || null,\n                    from_jid: from_jid,\n                    contact_stanza_id: options.contact_stanza_id,\n                    is_archived: options.is_archived\n                },\n                mentions = [], blockquotes = [], markups = [], mutable_content = [], files = [], images = [], videos = [], locations = [], link_references = [];\n\n            options.encrypted && _.extend(attrs, {encrypted: true});\n            options.hasOwnProperty('is_trusted') && _.extend(attrs, {is_trusted: options.is_trusted});\n            let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n                $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n                $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`)\n\n            references.each((idx, reference) => {\n                let $reference = $(reference),\n                    type = $reference.attr('type'),\n                    begin = parseInt($reference.attr('begin')),\n                    end = parseInt($reference.attr('end'));\n                if (type === 'decoration') {\n                    if ($reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`).length) {\n                        let $mention = $reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`),\n                            target = $mention.text(),\n                            is_gc = $mention.attr('node') === Strophe.NS.GROUP_CHAT ? true : false;\n                        mentions.push({start: begin, end: end, target: target, is_gc: is_gc});\n                    } else {\n                        let markup = [];\n                        $reference.children().each((i, child_ref) => {\n                            if (constants.MARKUP_TAGS.indexOf(child_ref.tagName) > -1 && $(child_ref).attr('xmlns') === Strophe.NS.MARKUP) {\n                                if (child_ref.tagName === 'link')\n                                    markup.push({type: child_ref.tagName, uri: $(child_ref).text()});\n                                else if (child_ref.tagName === 'quote') {\n                                    blockquotes.push({start: begin, end: end});\n                                } else\n                                    markup.push(child_ref.tagName);\n                            }\n                        });\n                        markup.length && markups.push({start: begin, end: end, markup: markup});\n                    }\n                } else if (type === 'mutable') {\n                    let $geolocation = $reference.children(`geoloc[xmlns=\"${Strophe.NS.GEOLOC}\"]`).first(),\n                        loc_attrs = {};\n                    if ($geolocation.children('lat').text() && $geolocation.children('lon').text()){\n                        loc_attrs = {\n                            lat: $geolocation.children('lat').text(),\n                            lon: $geolocation.children('lon').text()\n                        }\n                        locations.push(loc_attrs);\n                        mutable_content.push({ start: begin, end: end, type: 'geolocation'});\n                    };\n                    if ($reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).length) {\n                        let $ogp = $reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).first(),\n                            link_reference_attrs = {};\n                        if ($ogp.length) {\n                            link_reference_attrs = {\n                                site: $ogp.children('meta[property=\"og:site_name\"]').attr('content'),\n                                type: $ogp.children('meta[property=\"og:type\"]').attr('content'),\n                                url: $ogp.children('meta[property=\"og:url\"]').attr('content'),\n                                description: $ogp.children('meta[property=\"og:description\"]').attr('content'),\n                                title: $ogp.children('meta[property=\"og:title\"]').attr('content'),\n                                image: $ogp.children('meta[property=\"og:image\"]').attr('content'),\n                                image_width: $ogp.children('meta[property=\"og:image:width\"]').attr('content'),\n                                image_height: $ogp.children('meta[property=\"og:image:height\"]').attr('content'),\n                                video_url: $ogp.children('meta[property=\"og:video:url\"]').attr('content'),\n                                original_text: $ogp.attr('url'),\n                                start: begin,\n                                end: end,\n                            }\n                            link_references.push(link_reference_attrs);\n                            mutable_content.push({start: begin, end: end, type: 'link_reference'});\n                        };\n                    }\n                    let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                    if ($reference.children('forwarded').length)\n                        mutable_content.push({ start: begin, end: end, type: 'forward'});\n                    else if ($file_sharing.length) {\n                        let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                            $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                        mutable_content.push({ start: begin, end: end, type: type});\n                        $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                        file_attrs = {\n                            name: $file.children('name').text(),\n                            hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                            size: $file.children('size').text(),\n                            type: $file.children('media-type').text(),\n                            duration: $file.children('duration').text(),\n                            description: $file.children('desc').text(),\n                            height: $file.children('height').text(),\n                            width: $file.children('width').text(),\n                            thumbnail: $file.children('thumbnail-uri').text(),\n                            id: $file.children('gallery-id').text(),\n                            voice: type === 'voice',\n                            sources: sources\n                        };\n                        if (sources[0].indexOf('aescbc') == 0) {\n                            let uri = sources[0].replace(/^aescbc/, 'https'),\n                                key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                            uri = uri.slice(0, uri.length - 64 - 1);\n                            _.extend(file_attrs, {sources: [uri], key: key});\n                            attrs.has_encrypted_files = true;\n                        }\n                        if (this.getFileType($file.children('media-type').text()) === 'image')\n                            images.push(file_attrs);\n                        else if (this.getFileType($file.children('media-type').text()) === 'video')\n                            videos.push(file_attrs);\n                        else\n                            files.push(file_attrs);\n                    }\n                } else if (type === 'data') {}\n            });\n\n            $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').each((idx, x_elem) => {\n                let $reference = $(x_elem).children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n                    $user = $reference.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                    if ($reference.length) {\n                        let begin = parseInt($reference.attr('begin')),\n                            end = parseInt($reference.attr('end'));\n                        mutable_content.push({start: begin, end: end, type: 'groupchat'});\n                        let user_id = $user.attr('id'),\n                            user_jid = $user.children('jid').text();\n                        _.extend(attrs, {\n                            user_info: {\n                                id: user_id,\n                                jid: user_jid,\n                                nickname: $user.children('nickname').text() || user_jid || user_id,\n                                role: $user.children('role').text(),\n                                avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                                avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                                badge: $user.children('badge').text()\n                            },\n                            from_jid: user_jid || user_id,\n                            groupchat_jid: Strophe.getBareJidFromJid(options.is_sender ? $message.attr('to') : $message.attr('from'))\n                        });\n                    }\n            });\n\n            blockquotes.length && (attrs.blockquotes = blockquotes);\n            mentions.length && (attrs.mentions = mentions);\n            markups.length && (attrs.markups = markups);\n            images.length && (attrs.images = images);\n            videos.length && (attrs.videos = videos);\n            files.length && (attrs.files = files);\n            locations.length && (attrs.locations = locations);\n            link_references.length && (attrs.link_references = link_references);\n            attrs.mutable_content = mutable_content;\n            if (!attrs.mutable_content.length)\n                attrs.forwarded_message = null;\n\n            options.stanza_id && (attrs.stanza_id = options.stanza_id);\n            origin_id && (attrs.origin_id = origin_id);\n            archive_id && (attrs.archive_id = archive_id);\n\n            (options.replaced || mentions.length) && (attrs.mentions = mentions);\n            (options.replaced || markups.length) && (attrs.markups = markups);\n            (options.replaced || files.length) && (attrs.files = files);\n            (options.replaced || images.length) && (attrs.images = images);\n            (options.replaced || videos.length) && (attrs.videos = videos);\n            (options.replaced || link_references.length) && (attrs.link_references = link_references);\n\n            if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n                attrs.type = 'system';\n                attrs.participants_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            }\n\n            if ($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).length &&\n                $message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).find('field[var=\"FORM_TYPE\"][type=\"hidden\"] value').text() === Strophe.NS.WEBCHAT) {\n                let addresses = [];\n                $message.children(`addresses[xmlns=\"${Strophe.NS.ADDRESS}\"]`).children('address').each((idx, address) => {\n                    let $address = $(address);\n                    addresses.push({type: $address.attr('type'), jid: $address.attr('jid')});\n                });\n                attrs.data_form = _.extend(this.account.parseDataForm($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)), {addresses: addresses});\n            }\n\n            body && (body = utils.slice_pretty_body(body, mutable_content));\n\n            if (!attrs.forwarded_message && body.removeEmoji() === \"\")\n                attrs.only_emoji = Array.from(body).length;\n\n            attrs.message = body;\n\n            options.echo_msg && ($delay = $message.children('time'));\n            $delay.length && (attrs.time = $delay.attr('stamp'));\n            (attrs.carbon_copied || from_jid == this.account.get('jid') && (options.is_archived || options.synced_msg)) && (attrs.state = constants.MSG_SENT);\n            options.synced_msg && (attrs.synced_from_server = true);\n            options.missed_history && (attrs.missed_msg = true);\n            if (options.echo_msg) {\n                attrs.state = constants.MSG_DELIVERED;\n                attrs.timestamp = Number(moment(attrs.time));\n                attrs.from_jid = this.account.get('jid');\n            }\n            (options.context_message || options.participant_message || options.searched_message || options.is_searched) && (attrs.state = constants.MSG_ARCHIVED);\n\n            if (options.pinned_message)\n                return this.account.pinned_messages.create(attrs);\n\n            if (options.participant_message)\n                return this.account.participant_messages.create(attrs);\n\n            if (options.searched_message) {\n                options.query && (attrs.query = options.query);\n                options.searched_in_contact_messages && (attrs.searched_in_contact_messages = options.searched_in_contact_messages)\n                return this.account.searched_messages.create(attrs);\n            }\n\n            if (options.context_message)\n                return this.account.context_messages.create(attrs);\n\n            if ((options.echo_msg || options.replaced) && message) {\n                message.set(attrs);\n                if (options.replaced)\n                    return;\n            }\n\n            if (options.is_searched) {\n                let msg_contact = Strophe.getBareJidFromJid($message.attr('from'));\n                (msg_contact === this.account.get('jid')) && (msg_contact = Strophe.getBareJidFromJid($message.attr('to')));\n                message = xabber.all_searched_messages.create(attrs);\n                message.contact = this.account.contacts.mergeContact(msg_contact);\n                message.account = this.account;\n                return message;\n            }\n\n            message = this.create(attrs);\n\n            (options.encrypted && options.is_unread) && message.set('is_unread', true);\n\n            return message;\n        },\n\n          decryptFile: async function (uri, key) {\n              return new Promise((resolve, reject) => {\n                  fetch(uri).then((r) => {\n                      r.blob().then((blob) => {\n                          let filereader = new FileReader();\n                          filereader.onloadend = () => {\n                              let arrayBuffer = filereader.result,\n                                  exportedMasterKey = key.slice(0, 32),\n                                  HMACData = key.slice(32);\n                              utils.AES.decrypt(exportedMasterKey, HMACData, arrayBuffer).then((enc_file) => {\n                                  resolve(enc_file);\n                              });\n                          };\n                          filereader.readAsArrayBuffer(blob);\n                      });\n                  }).catch(() => {\n                      resolve(null)\n                  });\n              });\n          },\n\n        getFilename: function (url_media) {\n            let idx = url_media.lastIndexOf(\"/\");\n            return url_media.substr(idx + 1, url_media.length - 1);\n        },\n\n        getFileType: function(full_type) {\n            let end_idx = (full_type.indexOf(\"/\") > -1) ? full_type.indexOf(\"/\") : full_type.length,\n                type = full_type.slice(0, end_idx);\n            return type;\n        },\n\n        createSystemMessage: function (attrs) {\n            return this.create(_.extend({\n                type: 'system',\n                silent: true,\n                state: constants.MSG_DISPLAYED\n            }, attrs));\n        }\n    });\n\n      xabber.JingleMessage = Backbone.Model.extend({\n          defaults: {\n              duration: 0,\n              contact_full_jid: \"\",\n              session_id: 0,\n              audio: true,\n              volume_on: true,\n              video_in: false,\n              video_screen: false,\n              state: 0\n          },\n\n          initialize: function (attrs, options) {\n              attrs = attrs || {};\n              attrs.video_live = attrs.video_live || false;\n              attrs.video = attrs.video_live;\n              this.contact = options.contact;\n              this.account = this.contact.account;\n              this.registerIqHandler();\n              this.audio_notifiation = xabber.playAudio(attrs.call_initiator ? xabber.settings.sound_on_call : xabber.settings.sound_on_dialtone, true);\n              this.modal_view = new xabber.JingleMessageView({model: this});\n              this.conn = new RTCPeerConnection({\n                  iceServers: [\n                      {\n                          urls: \"stun:stun.l.google.com:19302\"\n                      },\n                      {\n                          urls: \"stun:stun01.pool-01.fckrkn202102.cyou:3478\"\n                      },\n                  ].concat(constants.TURN_SERVERS_LIST),\n                  sdpSemantics: 'unified-plan'\n              });\n              this.$remote_video_el = $('<video autoplay class=\"webrtc-remote-video\"/>');\n              this.$remote_audio_el = $('<audio autoplay class=\"webrtc-remote-audio hidden\"/>');\n              this.$local_video = this.modal_view.$el.find('.webrtc-local-video');\n              this.current_timer = 0;\n              this.conn.onconnectionstatechange = this.onChangeConnectionState.bind(this);\n              this.set(attrs);\n              this.get('in') && this.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n              this.onChangedMediaType();\n              this.conn.ontrack = (ev) => {\n                  this.remote_stream = ev.streams[0];\n                  this.modal_view.$el.find('.webrtc-remote-audio')[0].srcObject = ev.streams[0];\n              };\n              this._waiting_timeout = setTimeout(() => {\n                  (!this.get('state') && this.get('status') === 'calling' && this.get('call_initiator') === this.account.get('jid')) && this.reject();\n              }, constants.JINGLE_WAITING_TIME * 1000);\n              this.conn.onicecandidate = this.onIceCandidate.bind(this);\n              this.conn.oniceconnectionstatechange = this.onChangeIceConnectionState.bind(this);\n              this.on('change:audio', this.setEnabledAudioTrack, this);\n              this.on('change:video', this.onChangedVideoValue, this);\n              this.on('change:video_live', this.setEnabledVideoTrack, this);\n              this.on('change:video_screen', this.setEnabledScreenShareVideoTrack, this);\n              this.on('change:video_in', this.onChangedRemoteVideo, this);\n              this.on('change:volume_on', this.onChangedVolume, this);\n              this.on('destroy', this.onDestroy, this);\n          },\n\n          registerIqHandler: function () {\n              this.account.connection.deleteHandler(this.iq_handler);\n              this.iq_handler = this.account.connection.addHandler((iq) => {\n                      this.onIQ(iq);\n                      return true;\n                  }, null, 'iq', 'set');\n\n          },\n\n          updateStatus: function (status) {\n              this.modal_view.updateStatusText(status);\n          },\n\n          updateTimer: function () {\n              this.updateStatus(utils.pretty_duration(++this.current_timer));\n          },\n\n          startTimer: function () {\n              this.updateTimer();\n              clearInterval(this.call_timer);\n              this.call_timer = setInterval(() => {\n                  this.updateTimer();\n              }, 1000);\n          },\n\n          onConnected: function () {\n              this.get('video_live') && this.onChangedVideoValue();\n              xabber.stopAudio(this.audio_notifiation);\n              setTimeout(() => {\n                  this.set('status', 'connected');\n                  xabber.trigger('update_jingle_button');\n                  this.updateStatus();\n                  this.startTimer();\n              }, 1000);\n          },\n\n          onChangeConnectionState: function (ev) {\n              let peer_conn = ev.target,\n                  conn_state = peer_conn.connectionState;\n              if (conn_state === 'connected') {\n                  this.onConnected();\n              } else {\n                  this.updateStatus(utils.pretty_name(conn_state) + '...');\n                  if (conn_state === \"failed\") {\n                      clearTimeout(this._timeout_failed);\n                      this._timeout_failed = setTimeout(() => {\n                          if (peer_conn.connectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                              this.set('status', conn_state);\n                              xabber.trigger('update_jingle_button');\n                              this.reject();\n                              this.destroy();\n                              this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                              xabber.current_voip_call = null;\n                          }\n                      }, 40000);\n                      peer_conn.restartIce();\n                  }\n                  if (conn_state === 'disconnected') {\n                      this.set('status', conn_state);\n                      xabber.trigger('update_jingle_button');\n                      this.destroy();\n                      xabber.current_voip_call = null;\n                  }\n              }\n          },\n\n          onIceCandidate: function (ice) {\n              if (!ice || !ice.candidate || !ice.candidate.candidate)\n                  return;\n              this.sendCandidate(ice.candidate);\n          },\n\n          onChangeIceConnectionState: function (ev) {\n              let peer_conn = ev.target,\n                  conn_state = peer_conn.iceConnectionState;\n              if (conn_state === \"failed\") {\n                  clearTimeout(this._timeout_failed);\n                  this._timeout_failed = setTimeout(() => {\n                      if (peer_conn.iceConnectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                          this.set('status', conn_state);\n                          xabber.trigger('update_jingle_button');\n                          this.reject();\n                          this.destroy();\n                          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                          xabber.current_voip_call = null;\n                      }\n                  }, 40000);\n                  peer_conn.restartIce();\n              }\n              if (conn_state === \"connected\")\n                  !this.conn.connectionState && this.onConnected();\n          },\n\n          onChangedMediaType: function () {\n              this.$local_video.switchClass('hidden', !this.get('video'));\n          },\n\n          onChangedRemoteVideo: function () {\n              let incoming_video = this.get('video_in');\n              if (incoming_video) {\n                  this.$remote_video_el[0].srcObject = this.remote_stream;\n                  this.modal_view.$el.find('.webrtc-remote-audio').replaceWith(this.$remote_video_el);\n                  this.modal_view.$el.switchClass('multiple-videos', this.get('video') && this.get('video_in'));\n              }\n              else {\n                  this.$remote_audio_el[0].srcObject = this.remote_stream;\n                  this.modal_view.$el.find('.webrtc-remote-video').replaceWith(this.$remote_audio_el);\n              }\n              this.modal_view.$el.find('.default-screen').switchClass('hidden', incoming_video);\n              this.onChangedVolume();\n          },\n\n          onChangedVolume: function () {\n              if (this.get('volume_on')) {\n                  this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = false);\n                  this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = false);\n              }\n              else {\n                  this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = true);\n                  this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = true);\n              }\n          },\n\n          setEnabledAudioTrack: function () {\n              this.local_stream.getAudioTracks()[0].enabled = this.get('audio');\n          },\n\n          setEnabledVideoTrack: function () {\n              let value = this.get('video_live'),\n                  default_video = this.conn.getSenders().find(sender => sender.track && (sender.track.default || sender.track.screen));\n              value && this.set('video_screen', false);\n              (default_video && value) && this.createVideoStream();\n              (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n              this.set('video', value || this.get('video_screen'));\n          },\n\n          onDestroy: function () {\n              clearTimeout(this._waiting_timeout);\n              clearInterval(this.call_timer);\n              clearTimeout(this._timeout_failed);\n              xabber.stopAudio(this.audio_notifiation);\n              this.account.connection.deleteHandler(this.iq_handler);\n              this.stopTracks();\n              this.conn.close();\n          },\n\n          setEnabledScreenShareVideoTrack:  function () {\n              let value = this.get('video_screen'),\n                  default_video = this.conn.getSenders().find(sender => sender.track && !sender.track.screen);\n              value && this.set('video_live', false);\n              (default_video && value) && this.createScreenShareVideoStream();\n              (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n              this.set('video', value || this.get('video_live'));\n          },\n\n          onChangedVideoValue: function () {\n              let video_state = this.get('video') ? 'enable' : 'disable';\n              this.sendVideoStreamState(video_state);\n              this.onChangedMediaType();\n          },\n\n          createScreenShareVideoStream: function () {\n              navigator.mediaDevices.getDisplayMedia({video: true}).then((media_stream) => {\n                  this.$local_video[0].srcObject = media_stream;\n                  media_stream.getVideoTracks().forEach((track) => {\n                      _.extend(track, {screen: true});\n                      this.local_stream.addTrack(track);\n                      this.conn.addTrack(track, this.local_stream);\n                      this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n                  });\n              });\n          },\n\n          sendVideoStreamState: function (state) {\n              let $iq_video = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                  .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n                  .c('video', {state: state, id: this.get('session_id')});\n              this.account.sendIQFast($iq_video);\n          },\n\n          onIQ: function (iq) {\n              let $incoming_iq = $(iq),\n                  $jingle_initiate = $incoming_iq.find('jingle[action=\"session-initiate\"]'),\n                  $jingle_accept = $incoming_iq.find('jingle[action=\"session-accept\"]'),\n                  $jingle_info = $incoming_iq.find('jingle[action=\"session-info\"]'),\n                  $jingle_video = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"] video`),\n                  from_jid = $incoming_iq.attr('from'),\n                  $result_iq = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')});\n              if ($jingle_initiate.length) {\n                  if ($jingle_initiate.attr('sid') !== this.get('session_id'))\n                      return;\n                  let offer_sdp = $jingle_initiate.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n                  offer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'offer', sdp: offer_sdp}));\n                  this.acceptSession(offer_sdp);\n                  this.account.sendIQFast($result_iq);\n              }\n              if ($jingle_accept.length) {\n                  if ($jingle_accept.attr('sid') !== this.get('session_id'))\n                      return;\n                  let answer_sdp = $jingle_accept.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n                  answer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: answer_sdp}));\n                  this.account.sendIQFast($result_iq);\n              }\n              if ($jingle_info.length) {\n                  if ($jingle_info.attr('sid') !== this.get('session_id'))\n                      return;\n                  let candidate = $jingle_info.find('candidate');\n                  candidate.length && this.conn.addIceCandidate(new RTCIceCandidate({candidate: candidate.text(), sdpMLineIndex: candidate.attr('sdpMLineIndex'), sdpMid: candidate.attr('sdpMid')}));\n                  this.account.sendIQFast($result_iq);\n              }\n              if ($jingle_video.length) {\n                  let session_id = $jingle_video.attr('id');\n                  if (session_id === this.get('session_id')) {\n                      let video_state = $jingle_video.attr('state');\n                      if (video_state === 'enable')\n                          this.set('video_in', true);\n                      if (video_state === 'disable')\n                          this.set('video_in', false);\n                  }\n                  this.account.sendIQFast($result_iq);\n              }\n          },\n\n          startCall: function () {\n              this.set('call_initiator', this.account.get('jid'));\n              this.createAudioStream();\n              this.get('video_live') && this.createVideoStream();\n              this.propose();\n          },\n\n          createAudioStream: function () {\n              navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n                  this.local_stream = media_stream;\n                  this.$local_video[0].srcObject = media_stream;\n                  let video_track = this.initVideoTrack();\n                  this.local_stream.addTrack(video_track);\n                  this.conn.addTrack(video_track, this.local_stream);\n                  media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n              });\n          },\n\n          createVideoStream: function () {\n              navigator.mediaDevices.getUserMedia({video: true}).then((media_stream) => {\n                  this.$local_video[0].srcObject = media_stream;\n                  media_stream.getVideoTracks().forEach((track) => {\n                      this.local_stream.addTrack(track);\n                      this.conn.addTrack(track, this.local_stream);\n                      this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n                  });\n              });\n          },\n\n          stopTracks: function () {\n              this.local_stream && this.local_stream.getTracks().forEach((track) => {\n                  track.stop();\n                  this.local_stream.removeTrack(track);\n              });\n          },\n\n          propose: function () {\n              this.updateStatus(xabber.getString(\"dialog_jingle_message__status_search\"));\n              let $propose_msg = $msg({type: 'chat', to: this.contact.get('jid')})\n                  .c('propose', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')})\n                  .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up().up()\n                  .c('store', {xmlns: Strophe.NS.HINTS}).up()\n                  .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n                  .c('body').t(xabber.getString(\"jingle__text_body_message\")).up()\n                  .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n              this.account.sendMsg($propose_msg);\n          },\n\n          accept: function () {\n              let $accept_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n                  .c('accept', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')}).up()\n                  .c('store', {xmlns: Strophe.NS.HINTS}).up()\n                  .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n                  .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n              this.set('jingle_start', moment.now());\n              this.account.sendMsg($accept_msg);\n              xabber.stopAudio(this.audio_notifiation);\n              this.set('status', 'connecting');\n              xabber.trigger('update_jingle_button');\n              this.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n              this.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection, true);\n          },\n\n          reject: function (reason) {\n              if (this.get('status') === 'disconnected' || this.get('status') === 'disconnecting')\n                  return;\n              let $reject_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n                  .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')});\n              if (this.get('jingle_start')) {\n                  let end = moment.now(),\n                      duration = Math.round((end - this.get('jingle_start'))/1000),\n                      call_attrs = {initiator: this.get('call_initiator')};\n                  if (this.call_timer)\n                      _.extend(call_attrs, {start: moment(this.get('jingle_start')).format(), end: moment(end).format(), duration: duration});\n                  reason && (call_attrs.reason = reason);\n                  $reject_msg.c('call', call_attrs).up();\n              }\n              $reject_msg.up().c('store', {xmlns: Strophe.NS.HINTS}).up()\n                  .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n                  .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n              this.account.sendMsg($reject_msg);\n              this.createSystemMessage($reject_msg);\n              this.set('status', 'disconnected');\n              xabber.trigger('update_jingle_button');\n              this.destroy();\n              xabber.current_voip_call = null;\n          },\n\n          createSystemMessage: function (message) {\n              let $message = $(message.nodeTree),\n                  chat = this.account.chats.getChat(this.contact),\n                  time = $message.find('call').attr('end');\n              if (time) {\n                  let duration = $message.find('call').attr('duration'),\n                      initiator = $message.find('call').attr('initiator');\n                  chat.messages.createSystemMessage({\n                      from_jid: this.account.get('jid'),\n                      session_id: $message.find('reject').attr('id'),\n                      message: xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)])\n                  });\n              }\n              else {\n                  chat.messages.createSystemMessage({\n                      from_jid: this.account.get('jid'),\n                      session_id: $message.find('reject').attr('id'),\n                      message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                  });\n              }\n          },\n\n          initVideoTrack: function () {\n              let canvas = Object.assign(document.createElement(\"canvas\"), {width: 320, height: 240});\n              let ctx = canvas.getContext('2d');\n              ctx.fillRect(0, 0, canvas.width, canvas.height);\n              let p = ctx.getImageData(0, 0, canvas.width, canvas.height);\n              requestAnimationFrame(function draw(){\n                  for (let i = 0; i < p.data.length; i++)\n                      p.data[i++] = p.data[i++] = p.data[i++] = 1;\n                  ctx.putImageData(p, 0, 0);\n                  requestAnimationFrame(draw);\n              });\n              return _.extend(canvas.captureStream(60).getTracks()[0], {default: true});\n          },\n\n          initSession: function () {\n              navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n                  this.local_stream = media_stream;\n                  this.$local_video[0].srcObject = media_stream;\n                  let video_track = this.initVideoTrack();\n                  this.local_stream.addTrack(video_track);\n                  this.conn.addTrack(video_track, this.local_stream);\n                  media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n                  return this.conn.createOffer({offerToReceiveAudio:true, offerToReceiveVideo: true});\n              }).then((offer) => {\n                      this.set('session_initiator', this.account.get('jid'));\n                      this.conn.setLocalDescription(offer).then(() => {\n                          let offer_sdp = offer.sdp,\n                              $iq_offer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                              .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-initiate', initiator: this.account.get('jid'), sid: this.get('session_id')})\n                              .c('content', {creator: 'initiator', name: 'voice'})\n                              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                              .c('sdp').t(offer_sdp).up().up()\n                              .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                          this.account.sendIQFast($iq_offer_sdp);\n                      });\n              });\n          },\n\n          sendCandidate: function (candidate) {\n              let $iq_candidate = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                  .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-info', initiator: this.get('session_initiator'), sid: this.get('session_id')})\n                  .c('content', {creator: 'initiator', name: 'voice'})\n                  .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up()\n                  .c('transport', {xmlns: Strophe.NS.JINGLE_TRANSPORTS_ICE})\n                  .c('candidate', {sdpMLineIndex: candidate.sdpMLineIndex, sdpMid: candidate.sdpMid }).t(candidate.candidate);\n              this.account.sendIQFast($iq_candidate);\n          },\n\n          acceptSession: async function () {\n              this.set('session_initiator', this.contact.get('jid'));\n              this.conn.createAnswer().then((answer) => {\n                  this.conn.setLocalDescription(answer).then(() => {\n                      let answer_sdp = answer.sdp,\n                          $iq_answer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                              .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-accept', initiator: this.contact.get('jid'), sid: this.get('session_id')})\n                              .c('content', {creator: 'initiator', name: 'voice'})\n                              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                              .c('sdp').t(answer_sdp).up().up()\n                              .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                      this.account.sendIQFast($iq_answer_sdp);\n                  });\n              });\n          }\n      });\n\n      xabber.Chat = Backbone.Model.extend({\n        defaults: {\n            opened: true,\n            active: false,\n            display: false,\n            displayed_sent: false,\n            last_displayed_id: 0,\n            last_delivered_id: 0,\n            unread: 0,\n            timestamp: 0,\n            const_unread: 0,\n            encrypted: false\n        },\n\n        initialize: function (attrs, options) {\n            this.contact = options.contact;\n            this.sync_created = options.sync_created;\n            this.account = this.contact ? this.contact.account : options.account;\n            let jid = this.contact ? this.contact.get('jid') : attrs.jid;\n            this.set({\n                id: attrs && attrs.id || this.contact.hash_id,\n                jid: jid\n            });\n            (attrs && attrs.type === 'encrypted') && this.set('encrypted', true);\n            if (attrs && attrs.type === 'saved') {\n                this.set('saved', true);\n                this.account.on('remove_saved_chat', this.onContactDestroyed, this);\n            }\n            this.retraction_version = 0;\n            if (this.contact) {\n                this.set('group_chat', this.contact.get('group_chat'));\n                this.contact.on(\"destroy\", this.onContactDestroyed, this);\n                this.contact.on(\"change:group_chat\", this.onChangedContact, this);\n            } else {\n                this.set({'group_chat': false, 'name': attrs.name});\n            }\n            this.messages = new xabber.Messages(null, {account: this.account});\n            this.messages_unread = new xabber.Messages(null, {account: this.account});\n            this.item_view = new xabber.ChatItemView({model: this});\n            this.plyr_players = [];\n            this.on(\"get_retractions_list\", this.getAllMessageRetractions, this);\n            this.on(\"change:timestamp\", this.onChangedTimestamp, this);\n        },\n\n        onChangedTimestamp: function () {\n            if (this.get('timestamp') != this.get('cached_timestamp'))\n                this.cacheChat();\n        },\n\n\n        isMuted: function () {\n              if (this.get('muted') && (this.get('muted') < (Date.now() / 1000)))\n                  this.set('muted', false)\n              return this.get('muted')\n        },\n\n        cacheChat: function () {\n            let jid = this.get('jid'),\n                last_message = this.last_message ? _.clone(this.last_message).get('xml') : null;\n            if (_.isUndefined(last_message))\n                return;\n            let attrs = {\n                jid: this.get('encrypted') ? `${jid}:encrypted` : jid,\n                timestamp: this.get('timestamp'),\n                last_displayed_id: this.get('last_displayed_id'),\n                last_delivered_id: this.get('last_delivered_id'),\n                last_message: last_message ? last_message.outerHTML : null\n            };\n            this.account.cached_chats.putChat(attrs);\n        },\n\n          onChangedContact: function () {\n              let changed = this.contact.changed;\n              if (_.has(changed, 'group_chat'))\n                  this.set('group_chat', this.contact.get('group_chat'));\n              if (_.has(changed, 'blocked'))\n                  this.set('blocked', this.contact.get('blocked'));\n          },\n\n        recountUnread: function () {\n            this.set('unread', this.messages_unread.length);\n            if (this.contact && this.get('archived') && this.isMuted()) {\n            }\n            else {\n                xabber.toolbar_view.recountAllMessageCounter();\n            }\n        },\n\n        onContactDestroyed: function () {\n            this.resetUnread();\n            this.destroy();\n        },\n\n        resetUnread: function () {\n            let unread = this.get('unread');\n            if (unread > 0) {\n                this.set('unread', 0);\n                xabber.recountAllMessageCounter(unread);\n                xabber.toolbar_view.recountAllMessageCounter(unread);\n            }\n        },\n\n        searchMessages: function (query, callback) {\n            this.messages_view = new xabber.SearchedMessagesView({\n                query_text: query,\n                model: this\n            });\n            this.messages_view.messagesRequest({}, () => {\n                xabber.body.setScreen('all-chats', {\n                    right: 'searched_messages',\n                    model: this\n                });\n            });\n        },\n\n        sendDataForm: function (message, variable) {\n            let data_form = message.get('data_form');\n            if (!data_form)\n                return;\n            let msg = $msg({type: 'chat'});\n            data_form.fields.forEach((field) => {\n                if (field.type  === 'boolean') {\n                    if (field.var === variable)\n                        field.values = [true];\n                    else\n                        field.values = [false];\n                }\n            });\n            msg = this.account.addDataFormToStanza(msg, data_form);\n            data_form.addresses.forEach((address) => {\n                if (address.type === 'replyto')\n                    $(msg.nodeTree).attr('to', address.jid);\n                this.account.sendMsg(msg);\n            });\n        },\n\n        setStanzaId: function (unique_id, stanza_id) {\n            let message = this.messages.get(unique_id),\n                origin_id = message.get('origin_id');\n            message.set('stanza_id', stanza_id);\n            if (!message.get('origin_id'))\n                this.item_view.content.$(`.chat-message[data-uniqueid=\"${stanza_id}\"]`).data('uniqueid', stanza_id)[0].setAttribute('data-uniqueid', stanza_id);\n            if (this.get('encrypted'))\n                this.account.omemo && this.account.omemo.updateMessage({stanza_id, origin_id}, this.contact);\n        },\n\n        getCallingAvailability: function (to, session_id, callback) {\n            let iq = $iq({to: to, type: 'get'})\n                .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n                .c('session', {id: session_id});\n            this.account.sendIQFast(iq, callback);\n        },\n\n        sendReject: function (options) {\n            !options && (options = {});\n            let msg_to = options.to || this.contact.get('jid'),\n                $reject_msg = $msg({\n                    type: 'chat',\n                    to: msg_to\n                })\n                    .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: options.session_id})\n                    .c('call', {reason: options.reason}).up().up()\n                    .c('store', {xmlns: Strophe.NS.HINTS}).up()\n                    .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n                    .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n            this.account.sendMsg($reject_msg);\n        },\n\n        initIncomingCall: function (full_jid, session_id) {\n            if (!xabber.get('audio')) {\n                this.messages.createSystemMessage({\n                    from_jid: this.account.get('jid'),\n                    message: xabber.getString(\"jingle__system_message__no_devices_to_answer\")\n                });\n                return;\n            }\n            xabber.current_voip_call = new xabber.JingleMessage({contact_full_jid: full_jid, session_id: session_id, call_initiator: this.contact.get('jid')}, {contact: this.contact, });\n            xabber.current_voip_call.modal_view.show({status: 'in'});\n            xabber.trigger('update_jingle_button');\n            if (xabber.body.screen.get('name') === 'all-chats' && !xabber.body.screen.get('right') && this.item_view)\n                this.item_view.open();\n        },\n\n        endCall: function (status) {\n            status && xabber.current_voip_call.set('status', status);\n            xabber.trigger('update_jingle_button');\n            xabber.current_voip_call.destroy();\n            xabber.current_voip_call = null;\n            xabber.trigger('update_jingle_button');\n        },\n\n        getAllMessageRetractions: function () {\n            if (!this.contact.get('group_chat'))\n                return;\n            let retractions_query = $iq({type: 'get', to: this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.REWRITE, version: this.retraction_version});\n            this.account.sendIQFast(retractions_query);\n        },\n\n        receiveMessage: function ($message, options) {\n            let from_bare_jid = Strophe.getBareJidFromJid($message.attr('from')),\n                carbon_copied = options.carbon_copied;\n            // searching chat marker message\n            let $marker = $message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`),\n                $receipt_request = $message.children(`request[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n                $receipt_response = $message.children(`received[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n                $jingle_msg_propose = $message.children(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n                $jingle_msg_accept = $message.children(`accept[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n                $jingle_msg_reject = $message.children(`reject[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n            if ($jingle_msg_propose.length && !options.searched_message) {\n                if (carbon_copied && (from_bare_jid == this.account.get('jid'))) {\n                    return;\n                }\n                if (options.is_archived || options.synced_msg)\n                    return;\n                else {\n                    let session_id = $jingle_msg_propose.attr('id'),\n                        iq_to = $message.attr('from');\n                    this.getCallingAvailability(iq_to, session_id, () => {\n                        if (xabber.current_voip_call) {\n                            let reason = from_bare_jid === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                            this.sendReject({session_id: session_id, reason: reason});\n                            this.messages.createSystemMessage({\n                                from_jid: this.account.get('jid'),\n                                message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                            });\n                            return;\n                        }\n                        this.initIncomingCall(iq_to, session_id);\n                    });\n                }\n            }\n            if ($jingle_msg_accept.length) {\n                if (options.is_archived || options.synced_msg)\n                    return;\n                if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_accept.attr('id')) {\n                    if (carbon_copied)\n                        this.endCall();\n                    else {\n                        !xabber.current_voip_call.get('state') && xabber.current_voip_call.set('state', constants.JINGLE_MSG_ACCEPT);\n                        xabber.trigger('update_jingle_button');\n                        let jingle_start = $jingle_msg_accept.find('time').attr('stamp');\n                        jingle_start = jingle_start ? Number(moment(jingle_start)) : moment.now();\n                        xabber.current_voip_call.set('jingle_start', jingle_start);\n                        !xabber.current_voip_call.get('contact_full_jid') && xabber.current_voip_call.set('contact_full_jid', $message.attr('from'));\n                        xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                        xabber.current_voip_call.set('status', 'connecting');\n                        xabber.trigger('update_jingle_button');\n                        xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n                        xabber.current_voip_call.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection);\n                    }\n                }\n            }\n            if ($jingle_msg_reject.length) {\n                if (this.messages.filter(m => m.get('session_id') === $jingle_msg_reject.attr('id')).length)\n                    return;\n                let time = options.delay && options.delay.attr('stamp') || $message.find('delay').attr('stamp') || $message.find('time').attr('stamp'), message, msg_text = \"\";\n                if ($jingle_msg_reject.children('call').length) {\n                    let duration = $jingle_msg_reject.children('call').attr('duration'),\n                        initiator = $jingle_msg_reject.children('call').attr('initiator');\n                    if (duration && initiator)\n                        msg_text =xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)]);\n                    else\n                        msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n                }\n                else\n                    msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n                options.is_unread && (options.reject_contact_stanza_id = options.contact_stanza_id);\n                message = this.messages.createSystemMessage({\n                    from_jid: this.account.get('jid'),\n                    time: time,\n                    session_id: $jingle_msg_reject.attr('id'),\n                    stanza_id: options.stanza_id,\n                    contact_stanza_id: options.reject_contact_stanza_id,\n                    is_unread: options.is_unread,\n                    message: msg_text\n                });\n                if (options.is_archived || options.synced_msg)\n                    return message;\n                if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_reject.attr('id')) {\n                    xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                    let busy_audio = xabber.playAudio('busy');\n                    setTimeout(() => {\n                        xabber.stopAudio(busy_audio);\n                    }, 1500);\n                    this.endCall($jingle_msg_reject.children('call').attr('reason') == 'device_busy' ? 'device_busy' : $jingle_msg_reject.children('call').attr('reason') == 'busy' ? 'busy' : 'disconnected');\n                }\n                return message;\n            }\n            if (!options.is_archived) {\n                let $stanza_id, $contact_stanza_id;\n                $message.children('stanza-id').each((idx, stanza_id) => {\n                    stanza_id = $(stanza_id);\n                    if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length) {\n                        if (stanza_id.attr('by') === from_bare_jid) {\n                            !$stanza_id && ($stanza_id = stanza_id);\n                            $contact_stanza_id = stanza_id;\n                        }\n                        else\n                            $stanza_id = stanza_id;\n                    }\n                    else {\n                        if (stanza_id.attr('by') === from_bare_jid)\n                            $contact_stanza_id = stanza_id;\n                        else\n                            $stanza_id = stanza_id;\n                    }\n                });\n                (!options.stanza_id && $stanza_id) && (options.stanza_id = $stanza_id.attr('id'));\n                (!options.contact_stanza_id && $contact_stanza_id) && (options.contact_stanza_id = $contact_stanza_id.attr('id'));\n            }\n            if ($marker.length) {\n                let marker_tag = $marker[0].tagName.toLowerCase();\n                if ((marker_tag === 'markable') && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread)) {\n                    this.sendMarker($message.attr('id'), 'received', options.stanza_id, options.contact_stanza_id);\n                    this.get('saved') && this.sendMarker($message.attr('id'), 'displayed', options.stanza_id, options.contact_stanza_id);\n                }\n                if ((marker_tag !== 'markable') && !carbon_copied) {\n                    this.receiveMarker($message, marker_tag, carbon_copied);\n                    return;\n                }\n                if ((marker_tag === 'displayed') && carbon_copied)\n                    this.receiveCarbonsMarker($marker);\n            }\n\n            if ($receipt_request.length && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread))\n                this.sendDeliveryReceipt($message);\n\n            if ($receipt_response.length)\n                this.receiveDeliveryReceipt($message);\n\n            if (!$message.find('body').length || $jingle_msg_propose.length || $jingle_msg_accept.length || $jingle_msg_reject.length) {\n                if (this.get('saved'))\n                    return;\n                let view = xabber.chats_view.child(this.contact.hash_id);\n                if (!view.content)\n                    view.content = new xabber.ChatContentView({chat_item: view});\n                if (view && view.content)\n                    view.content.receiveNoTextMessage($message, carbon_copied);\n                return;\n            }\n\n            if ($message.find('invite').length) {\n                if (from_bare_jid === this.account.get('jid'))\n                    return;\n                let group_jid = $message.find('invite').attr('jid') || $message.find('message').attr('from'),\n                    contact = this.account.contacts.get(group_jid), chat;\n                if (contact)\n                    if (contact.get('subscription') == 'both')\n                        return;\n                if (this.account.connection && this.account.connection.do_synchronization) {\n                    if (options.synced_msg || !options.synced_msg && !options.is_archived)\n                        return this.messages.createInvitationFromStanza($message, options);\n                } else {\n                    let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n                    this.account.sendIQFast(iq, (iq) => {\n                            let items = $(iq).find('item'),\n                                current_timestamp = Number(moment($message.find('delay').attr('stamp') || $message.find('time').attr('stamp') || (options.delay) && Number(moment(options.delay.attr('stamp'))) || moment.now())),\n                                last_blocking_timestamp,\n                                has_blocking = false;\n                            if (items.length > 0) {\n                                items.each((idx, item) => {\n                                    let $item = $(item),\n                                        item_jid = $item.attr('jid'), blocking_timestamp = \"\";\n                                    if (item_jid.indexOf(group_jid) > -1) {\n                                        has_blocking = true;\n                                        blocking_timestamp = item_jid.substr(item_jid.lastIndexOf(\"/\") + 1, item_jid.length - group_jid.length);\n                                        if (!blocking_timestamp) {\n                                            last_blocking_timestamp = \"\";\n                                            return false;\n                                        } else if (!last_blocking_timestamp || last_blocking_timestamp < blocking_timestamp)\n                                            last_blocking_timestamp = blocking_timestamp;\n                                    }\n                                });\n                            }\n                            if (_.isUndefined(last_blocking_timestamp) || last_blocking_timestamp && last_blocking_timestamp < current_timestamp)\n                                return this.messages.createInvitationFromStanza($message, options);\n                        }, () => {\n                            return this.messages.createInvitationFromStanza($message, options);\n                        });\n                }\n            }\n            else\n                return this.messages.createFromStanza($message, options);\n        },\n\n        getMessageContext: function (unique_id, options) {\n            options = options || {};\n            let messages = options.mention && this.account.messages || options.searched_messages && this.account.searched_messages || options.message && xabber.all_searched_messages || this.account.messages,\n                message = messages.get(unique_id);\n            if (message) {\n                if (options.searched_messages)\n                    message.set('searched_message', false);\n                let stanza_id = message.get('stanza_id');\n                this.messages_view = new xabber.MessageContextView({\n                    contact: this.contact,\n                    mention_context: options.mention,\n                    model: this,\n                    stanza_id_context: stanza_id,\n                    encrypted: options.encrypted\n                });\n                this.account.context_messages.add(message);\n                this.messages_view.messagesRequest({after: stanza_id}, () => {\n                    let screen = 'all-chats';\n                    if (options.mention)\n                        screen = 'mentions';\n                    else if (options.message)\n                        screen = xabber.body.screen.get('name');\n                    xabber.body.setScreen(screen, {\n                        right: 'message_context',\n                        model: this,\n                    }, {\n                        right_contact_save: true\n                    });\n                });\n            }\n        },\n\n        sendDeliveryReceipt: function ($message) {\n            let $delivery_msg = $msg({\n                to: this.contact.get('jid'),\n                type: 'chat',\n                id: uuid()})\n                .c('received', { xmlns: Strophe.NS.RECEIPTS, id: $message.attr('id')});\n            this.account.sendMsg($delivery_msg);\n        },\n\n        sendMarker: function (msg_id, status, stanza_id, contact_stanza_id) {\n            status || (status = 'displayed');\n            let stanza = $msg({\n                to: this.get('jid'),\n                type: 'chat',\n                id: uuid()\n            }).c(status).attrs({\n                xmlns: Strophe.NS.CHAT_MARKERS,\n                id: msg_id || stanza_id || contact_stanza_id || \"\"\n            });\n            stanza_id && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: stanza_id, by: this.account.get('jid')}).up();\n            (!this.get('saved') && contact_stanza_id) && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: contact_stanza_id, by: this.contact.get('jid')}).up();\n            this.account.sendMsg(stanza);\n        },\n\n        receiveMarker: function ($message, tag, carbon_copied) {\n            let $displayed = $message.find('displayed'),\n                $received = $message.find('received'),\n                error = $message.attr('type') === 'error';\n            if (error || !$displayed.length && !$received.length)\n                return;\n            let marked_msg_id = $displayed.attr('id') || $received.attr('id'),\n                marked_stanza_id = $displayed.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id') || $received.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n                msg = this.account.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n            if (!msg) {\n                let enc_chat =  this.account.chats.get(`${this.id}:encrypted`),\n                    enc_msg = enc_chat && enc_chat.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n                if (enc_msg)\n                    enc_chat.receiveMarker($message, tag, carbon_copied);\n                return;\n            }\n            if (msg.isSenderMe()) {\n                if ($received.length) {\n                    let msg_state = msg.get('state');\n                    if (msg_state === constants.MSG_ERROR){\n                        msg.set('state', constants.MSG_DELIVERED)\n                        return;\n                    }\n                    if (msg_state !== constants.MSG_DISPLAYED) {\n                        let delivered_time = $received.children('time').attr('stamp');\n                        if (delivered_time) {\n                            msg.set('time', pretty_datetime(delivered_time));\n                            msg.set('timestamp', Number(delivered_time));\n                        }\n                    }\n                    this.setMessagesDelivered(msg.get('timestamp'));\n                } else {\n                    let msg_state = msg.get('state');\n                    if (msg_state === constants.MSG_ERROR){\n                        msg.set('state', constants.MSG_DISPLAYED)\n                        return;\n                    }\n                    this.setMessagesDisplayed(msg.get('timestamp'));\n                }\n            } else {\n                msg.set('is_unread', false);\n            }\n        },\n\n        setMessagesDelivered: function (timestamp) {\n            !timestamp && (timestamp = moment.now());\n            let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED));\n            if (!undelivered_messages.length) {\n                let chat =  this.account.chats.get(this.id + ':encrypted');\n                chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED)));\n            }\n            undelivered_messages.forEach(message => message.set('state', constants.MSG_DELIVERED));\n        },\n\n        setMessagesDisplayed: function (timestamp) {\n            !timestamp && (timestamp = moment.now());\n            let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED));\n            if (!undelivered_messages.length) {\n                let chat =  this.account.chats.get(this.id + ':encrypted');\n                chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED)));\n            }\n            undelivered_messages.forEach(message => message.set('state', constants.MSG_DISPLAYED));\n        },\n\n        receiveCarbonsMarker: function ($marker) {\n            let stanza_id = $marker.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n                msg_id = $marker.attr('id'),\n                msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id), msg_idx;\n            msg && (msg_idx = this.messages.indexOf(msg));\n            if (!msg) {\n                let enc_chat =  this.account.chats.get(this.id + ':encrypted'),\n                    enc_msg = enc_chat && enc_chat.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id);\n                if (enc_msg)\n                    enc_chat.receiveCarbonsMarker($marker);\n                return;\n            }\n            if (msg_idx > -1) {\n                this.set('const_unread', 0);\n                for (let i = msg_idx; i >= 0; i--) {\n                    let message = this.messages.models[i];\n                    message.set('is_unread', false);\n                }\n            }\n            else {\n                let unread_msg = this.messages_unread.find(m => m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id || m.get('msgid') === msg_id);\n                unread_msg && unread_msg.set('is_unread', false);\n            }\n        },\n\n        receiveDeliveryReceipt: function ($message) {\n            let $received = $message.find('received'),\n                delivered_origin_id = $received.attr('id'),\n                delivered_stanza_id = $received.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n                msg = this.account.messages.get(delivered_origin_id || delivered_stanza_id);\n            if (!msg)\n                return;\n            msg.isSenderMe() && msg.set('state', constants.MSG_DELIVERED);\n        },\n\n        onPresence: function (type) {\n            let jid = this.get('jid');\n            if (!this.contact.get('group_chat') && !this.contact.get('in_roster')) {\n                if (type === 'subscribe') {\n                    this.messages.createSystemMessage({\n                        from_jid: jid,\n                        auth_request: true,\n                        message: xabber.getString(\"action_subscription_received\")\n                    });\n                }\n            }\n        },\n\n        onRosterPush: function (type) {\n            let jid = this.get('jid');\n            // not used\n            if (type === 'remove')\n                this.messages.createSystemMessage({\n                    from_jid: jid,\n                    silent: false,\n                    message: xabber.getString(\"action_contact_deleted\")\n                });\n\n        },\n\n        retractMessages: function (msgs, group_chat, symmetric) {\n            let msgs_responses = 0, count = msgs.length, dfd = new $.Deferred();\n            dfd.done((num) => {\n                if (num === 0) {\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                }\n                else if (num !== msgs.length) {\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                }\n            });\n            $(msgs).each((idx, item) => {\n                let stanza_id = item.get('stanza_id'),\n                    contact_stanza_id = item.get('contact_stanza_id');\n                if (stanza_id || contact_stanza_id) {\n                    let iq_retraction = $iq({type: 'set', to: group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')})\n                        .c('retract-message', {id: (this.get('group_chat') && contact_stanza_id || stanza_id), xmlns: Strophe.NS.REWRITE, symmetric: symmetric, by: this.account.get('jid')});\n                    this.account.sendIQFast(iq_retraction, (success) => {\n                            this.item_view.content.removeMessage(item);\n                            msgs_responses++;\n                            (msgs_responses === msgs.length) && dfd.resolve(count);\n                        }, (error) => {\n                            msgs_responses++;\n                            if ($(error).find('not-allowed').length)\n                                count--;\n                            (msgs_responses === msgs.length) && dfd.resolve(count);\n                        });\n                }\n            });\n        },\n\n        retractMessagesByUser: function (user_id) {\n            let iq_retraction = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('retract-user', {id: user_id, xmlns: Strophe.NS.REWRITE, symmetric: true});\n            this.account.sendIQFast(iq_retraction, (success) => {\n                let user_msgs = this.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == user_id));\n                $(user_msgs).each((idx, msg) => {\n                    this.item_view.content.removeMessage(msg);\n                });\n            }, (error) => {\n                if ($(error).find('not-allowed').length)\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            });\n        },\n\n        retractAllMessages: function (symmetric, callback, errback) {\n            let is_group_chat = this.get('group_chat'),\n                iq_retraction = $iq({type: 'set', to: is_group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')}),\n                retract_attrs = {xmlns: Strophe.NS.REWRITE, symmetric: symmetric};\n            !is_group_chat && (retract_attrs.conversation = this.get('jid'));\n            this.get('encrypted') && (retract_attrs.type = 'encrypted');\n            iq_retraction.c('retract-all', retract_attrs);\n            this.account.sendIQFast(iq_retraction, (iq_response) => {\n                let all_messages = this.messages.models;\n                $(all_messages).each((idx, msg) => {\n                    this.item_view.content.removeMessage(msg);\n                });\n                callback && callback();\n            }, (error) => {\n                if ($(error).find('not-allowed').length)\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                errback && errback();\n            });\n        },\n\n        showBlockedRequestMessage: function () {\n            if (this.messages.length)\n                this.messages.createSystemMessage({\n                    from_jid: this.account.get('jid'),\n                    message: xabber.getString(\"action_contact_blocked\"),\n                    time: this.messages.last().get('time')\n                });\n        },\n\n        muteChat: function (muted_seconds) {\n            let muted = this.isMuted(),\n                is_muted = muted && muted !== '0' ? true : false,\n                muted_value = is_muted ? '' : '0';\n            if (muted_seconds || muted_seconds === '')\n                muted_value = muted_seconds;\n            let conversation_options = {\n                jid: this.contact.get('jid'),\n                mute: muted_value,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this)\n            },\n            iq = $iq({type: 'set', to: this.account.get('jid')})\n                .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n        },\n\n        getConversationType: function (chat) {\n            if(chat.get('encrypted'))\n                return Strophe.NS.SYNCHRONIZATION_OMEMO;\n            if(chat.contact.get('group_chat'))\n                return Strophe.NS.GROUP_CHAT;\n            return Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT\n        },\n\n        deleteFromSynchronization: function (callback, errback) {\n            let conversation_options = {jid: this.get('jid'), status: 'deleted', type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this) };\n            this.account.cached_sync_conversations.removeFromCachedConversations(conversation_options.jid +  '/' + conversation_options.type);\n            let iq = $iq({type: 'set', to: this.account.get('jid')})\n                .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                .c('conversation', conversation_options);\n            this.account.sendIQFast(iq, (success) => {\n                callback && callback(success);\n            }, (error) => {\n                errback && errback(error);\n            });\n        }\n    });\n\n    xabber.ChatItemView = xabber.BasicView.extend({\n        className: 'chat-item list-item',\n        template: templates.chat_item,\n        avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n        events: {\n            'click': 'openByClick'\n        },\n\n        _initialize: function () {\n            this.account = this.model.account;\n            this.contact = this.model.contact;\n            this.message_counter = 0;\n            this.$el.attr('data-id', this.model.id);\n            if (!this.model.sync_created)\n                this.content = new xabber.ChatContentView({chat_item: this});\n            this.updateName();\n            this.updateStatus();\n            this.updateCounter();\n            this.updateAvatar();\n            this.updateMutedState();\n            this.updatePinned();\n            this.updateArchivedState();\n            this.updateColorScheme();\n            this.updateGroupChats();\n            this.updateIcon();\n            this.updateEncrypted();\n            this.updateChatError();\n            this.model.on(\"change:active\", this.updateActiveStatus, this);\n            this.model.on(\"change:unread\", this.updateCounter, this);\n            this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n            this.model.on(\"change:const_unread\", this.updateCounter, this);\n            this.model.on(\"change:pinned\", this.updatePinned, this);\n            this.model.on(\"change:archived\", this.updateArchivedState, this);\n            this.model.on(\"change:muted\", this.updateMutedState, this);\n            this.model.on(\"open\", this.open, this);\n            this.model.on(\"remove_opened_chat\", this.onClosed, this);\n            this.model.messages.on(\"add\", this.updateChatCard, this);\n            this.model.messages.on(\"destroy\", this.onMessageRemoved, this);\n            this.model.messages.on(\"change:state\", this.onChangedMessageState, this);\n            if (this.contact) {\n                this.updateIncomingSubscription();\n                this.contact.on(\"change:name\", this.updateName, this);\n                this.contact.on(\"change:invitation\", this.updateIncomingSubscription, this);\n                this.contact.on(\"change:subscription\", this.updateIncomingSubscription, this);\n                this.contact.on(\"change:subscription_request_in\", this.updateIncomingSubscription, this);\n                this.contact.on(\"change:subscription_request_out\", this.updateIncomingSubscription, this);\n                this.contact.on(\"change:status\", this.updateStatus, this);\n                this.contact.on(\"change:private_chat\", this.updateIcon, this);\n                this.contact.on(\"change:invitation\", this.updateIcon, this);\n                this.contact.on(\"change:incognito_chat\", this.updateIcon, this);\n                this.contact.on(\"change:image\", this.updateAvatar, this);\n                this.contact.on(\"change:blocked\", this.onBlocked, this);\n                this.contact.on(\"change:group_chat\", this.updateGroupChats, this);\n                this.contact.on(\"change:in_roster\", this.updateAcceptedStatus, this);\n                this.contact.on(\"remove_invite\", this.removeInvite, this);\n                this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n            }\n            this.$el.switchClass('saved-chat', this.model.get('saved'));\n            this.$el.find('.circle-avatar').switchClass('ground-color-700', this.model.get('saved'));\n            this.model.get('saved') && this.$el.find('.circle-avatar').html(env.templates.svg['saved-messages']());\n            this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        },\n\n        updateChatCard: function (msg) {\n            if (this.content){\n                return;\n            }\n            if (this.message_counter == 0 ){\n                this.message_counter++;\n                return\n            }\n            this.content = new xabber.ChatContentView({ chat_item: this, new_message: msg });\n            this.updateLastMessage(msg);\n            return;\n        },\n\n        onChangedMessageState: function (message) {\n            if (message.get('state') === constants.MSG_DISPLAYED && this.model.get('last_displayed_id') < message.get('stanza_id')) {\n                this.model.set('last_displayed_id', message.get('stanza_id'));\n                this.model.set('last_delivered_id', message.get('stanza_id'));\n            } else if (message.get('state') === constants.MSG_DELIVERED && this.model.get('last_delivered_id') < message.get('stanza_id')) {\n                this.model.set('last_delivered_id', message.get('stanza_id'));\n            }\n            if (this.content) {\n                let $message = this.content.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n                    $elem = $message.find('.msg-delivering-state');\n                $elem.attr({\n                    'data-state': message.getState(),\n                    'title': message.getVerboseState()\n                });\n                ($elem.attr('data-state') === constants.MSG_STATE[constants.MSG_ERROR]) && $elem.dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                });\n            }\n            if (message === this.model.last_message) {\n                this.updateLastMessage();\n            }\n            this.updateChatError();\n        },\n\n        updateName: function () {\n            if (this.model.get('saved')) {\n                this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n                return;\n            }\n            this.$('.chat-title').text(this.contact.get('name'));\n        },\n\n        updateStatus: function () {\n            if (this.model.get('saved'))\n                return;\n            let status = this.contact.get('status');\n            this.$('.status').attr('data-status', status);\n            this.$('.chat-icon').attr('data-status', status);\n        },\n\n        updateActiveStatus: function () {\n            this.$el.switchClass('active', this.model.get('active'));\n        },\n\n        updateAcceptedStatus: function () {\n            let in_roster = this.contact.get('in_roster');\n            if (in_roster)\n                this.model.set('is_accepted', true);\n        },\n\n        onBlocked: function () {\n            this.updateIcon();\n            this.$el.switchClass('blocked', this.model.get('blocked'));\n        },\n\n        updateCounter: function () {\n            let unread = this.model.get('unread') + this.model.get('const_unread');\n            this.$('.msg-counter').showIf(unread).text(unread || '');\n            this.updateTextClipping();\n        },\n\n        updateIncomingSubscription: function () {\n            this.$('.msg-incoming-subscription').showIf(this.contact.get('invitation') || (this.contact.get('subscription_request_in') && this.contact.get('subscription') != 'both'));\n            this.updateTextClipping();\n        },\n\n        updateChatError: function () {\n            let error_msgs = this.model.messages.filter(m => m.get('state') === -1)\n            this.$('.msg-chat-error').showIf(error_msgs.length);\n            this.updateTextClipping();\n        },\n\n        updateTextClipping: function () {\n            let indicators_count = this.$('.chat-item-notifications-wrap').children(':not(.hidden)').length;\n            this.$('.last-msg').switchClass('triple-indicators', indicators_count === 3)\n            this.$('.last-msg').switchClass('quad-indicators', indicators_count === 4)\n        },\n\n        updateAvatar: function () {\n            if (this.model.get('saved'))\n                return;\n            let image = this.contact.cached_image;\n            this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n        },\n\n        updateEncrypted: function () {\n            this.$el.switchClass('encrypted', this.model.get('encrypted'));\n        },\n\n        updatePinned: function () {\n            let is_pinned = this.model.get('pinned');\n            this.$('.pinned-icon').showIf(is_pinned && is_pinned !== '0');\n            if (is_pinned)\n                xabber.chats_view.updateChatPosition(this.model);\n        },\n\n        updateEncryptedColor: function (encrypted) {\n            this.$el.attr('data-trust', encrypted);\n        },\n\n        updateIcon: function () {\n            if (!this.contact)\n                return;\n            this.$('.chat-icon').addClass('hidden');\n            let ic_name = this.contact.getIcon();\n            ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n        },\n\n        updateMutedState: function () {\n            if (!this.contact)\n                return;\n            this.$('.msg-counter').switchClass('muted-chat-counter', this.model.isMuted());\n            this.$('.muted-icon').switchClass('mdi-bell-off', (this.model.isMuted() > 4800000000)).switchClass('mdi-bell-sleep', (this.model.isMuted() <= 4800000000));\n            this.$('.muted-icon').showIf(this.model.isMuted());\n        },\n\n        updateArchivedState: function () {\n            if (!this.contact)\n                return;\n            let archived = this.model.get('archived');\n            if (archived || (!archived && xabber.toolbar_view.$('.active').hasClass('archive-chats')))\n                this.$el.detach();\n            if (archived && xabber.toolbar_view.$('.active').hasClass('archive-chats') || !archived && !xabber.toolbar_view.$('.active').hasClass('archive-chats'))\n                xabber.chats_view.updateChatPosition(this.model);\n        },\n\n        updateGroupChats: function () {\n            if (!this.contact)\n                return;\n            let is_group_chat = this.contact.get('group_chat');\n            this.$('.status').hideIf(is_group_chat);\n            this.$('.chat-icon').showIf(is_group_chat);\n            this.updateIcon();\n            if (is_group_chat) {\n                this.$el.addClass('group-chat');\n                this.model.set('group_chat', true);\n            }\n        },\n\n        updateColorScheme: function () {\n            let color = this.account.settings.get('color');\n            this.$el.attr('data-color', color);\n        },\n\n        onMessageRemoved: function (msg) {\n            if (this.model.last_message === msg) {\n                let last_message;\n                for (let idx = this.model.messages.length-1; idx >= 0; idx--) {\n                    last_message = this.model.messages.at(idx);\n                    if (!last_message.get('silent'))\n                        break;\n                }\n                this.model.last_message = last_message;\n                this.updateLastMessage();\n            }\n            this.deletePlayersFromMessage(msg);\n        },\n\n        deletePlayersFromMessage: function (message) {\n            let players = []\n            message.get('msg_player_videos') && (players = players.concat(message.get('msg_player_videos')));\n            message.get('msg_player_audios') && (players = players.concat(message.get('msg_player_audios')));\n            if (players.length){\n                if (xabber.current_plyr_player){\n                    let is_current_player = xabber.current_plyr_player.is_popup ?\n                        players.includes(xabber.current_plyr_player.chat_item.model.plyr_players[xabber.current_plyr_player.player_index])\n                        : players.includes(xabber.current_plyr_player);\n\n                    if (is_current_player){\n                        xabber.plyr_players.forEach((item) => {\n                            if (item.$audio_elem){\n                                if (item.$audio_elem.voice_message)\n                                    item.$audio_elem.voice_message.stopTime()\n                            }\n                            else\n                                item.stop();\n                        })\n                        if (xabber.current_plyr_player.is_popup && xabber.plyr_player_popup){\n                            xabber.plyr_player_popup.closePopup();\n                        } else {\n                            xabber.current_plyr_player = null;\n                            xabber.trigger('plyr_player_updated');\n                        }\n                    }\n                }\n                this.model.plyr_players = this.model.plyr_players.filter((obj) => !players.includes(obj));\n                xabber.plyr_players = xabber.plyr_players.filter((obj) => !players.includes(obj));\n                xabber.trigger('plyr_player_updated');\n            }\n        },\n\n        updateEmptyChat: function () {\n            let msg_time = this.model.get('timestamp'),\n                is_empty = Number(this.model.get('last_delivered_id')) || Number(this.model.get('last_displayed_id')) || Number(this.model.get('last_read_msg'));\n            this.$('.last-msg').html(xabber.getString(is_empty ? \"recent_chat__last_message_retracted\" : \"no_messages\").italics());\n            this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n                .attr('title', pretty_datetime(msg_time));\n        },\n\n        updateEncryptedChat: function () {\n            let msg_time = this.model.get('timestamp');\n            this.$('.last-msg').html(xabber.getString(\"recent_chat__decrypting_messages\").italics());\n            this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n                .attr('title', pretty_datetime(msg_time));\n        },\n\n        updateLastMessage: function (msg) {\n            msg || (msg = this.model.last_message);\n            if (!msg) {\n                !this.model.messages.length && this.updateEmptyChat();\n                return;\n            }\n            let msg_time = msg.get('time'),\n                timestamp = msg.get('timestamp'), msg_from = \"\",\n                forwarded_message = msg.get('forwarded_message'),\n                msg_files = msg.get('files') || [],\n                msg_images = msg.get('images') || [],\n                msg_locations = msg.get('locations') || [],\n                msg_text = forwarded_message ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n                msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact && this.contact.my_info && this.contact.my_info.attributes || {};\n            msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n            this.model.set({timestamp: timestamp});\n            if (this.model.get('group_chat'))\n                msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n            msg_from && (msg_from = $('<span class=text-color-700/>').text(msg_from + ': '));\n            if (msg_files.length || msg_images.length || msg_locations.length) {\n                let $colored_span = $('<span class=\"text-color-500\"/>');\n                if (msg.get('type') === 'file_upload') {\n                    msg_images = msg_files.filter(f => f && f.type && utils.isImageType(f.type));\n                    msg_files = msg_files.filter(f => f && !(f.type && utils.isImageType(f.type)));\n                }\n                if (msg_files.length && msg_images.length)\n                    msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n                else {\n                    if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                        msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                    else if (msg_files.length > 0) {\n                        let total_size = 0;\n                        msg_files.forEach((f) => {total_size+=Number(f.size)});\n                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                    }\n                    if (msg_images.length > 0) {\n                        let total_size = 0;\n                        msg_images.forEach((f) => {total_size+=Number(f.size)});\n                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                    }\n                    if (msg_locations.length > 0) {\n                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                    }\n                }\n                this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n            }\n            else {\n                if (msg.get('type') == 'system') {\n                    msg_from = \"\";\n                    if (msg.get('invite'))\n                        msg_text = xabber.getString(\"groupchat_invitation_to_group_chat\", [(this.contact && this.contact.get('incognito_chat')) ? 'incognito' : 'public']);\n                    msg.get('private_invite') && (msg_text = xabber.getString(\"recent_chat__last_message__private_invitation\"));\n                    if (this.model.get('group_chat'))\n                        msg_text = $('<i/>').text(msg_text);\n                    else\n                        msg_text = $('<span class=text-color-500/>').text(msg_text);\n                    this.$('.last-msg').html(msg_text);\n                    if (msg.get('auth_request')){\n                        xabber.toolbar_view.recountAllMessageCounter();\n                    }\n                }\n                else {\n                    if (forwarded_message) {\n                        if (msg.get('message')) {\n                            msg_text = msg.get('message');\n                            this.$('.last-msg').text(msg_text);\n                        }\n                        else {\n                            let first_forwarded_msg = forwarded_message[0];\n                            if (first_forwarded_msg.get('message')) {\n                                let fwd_msg_files = first_forwarded_msg.get('files') || [],\n                                    fwd_msg_images = first_forwarded_msg.get('images') || [],\n                                    fwd_msg_locations = first_forwarded_msg.get('locations') || [];\n                                first_forwarded_msg.get('videos') && first_forwarded_msg.get('videos').length && (fwd_msg_files = fwd_msg_files.concat(first_forwarded_msg.get('videos')));\n                                if (fwd_msg_files.length || fwd_msg_images.length || fwd_msg_locations.length) {\n                                    let $colored_span = $('<span class=\"text-color-500\"/>');\n                                    if (msg.get('type') === 'file_upload') {\n                                        fwd_msg_images = fwd_msg_files.filter(f => f.type && utils.isImageType(f.type));\n                                        fwd_msg_files = fwd_msg_files.filter(f => !(f.type && utils.isImageType(f.type)));\n                                    }\n                                    if (fwd_msg_files.length && fwd_msg_images.length)\n                                        msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [fwd_msg_files.length + fwd_msg_images.length]));\n                                    else {\n                                        if (fwd_msg_files.length == 1 && (fwd_msg_files[0].is_audio || fwd_msg_files[0].voice))\n                                            msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(fwd_msg_files[0].duration));\n                                        else if (fwd_msg_files.length > 0) {\n                                            let total_size = 0;\n                                            fwd_msg_files.forEach((f) => {total_size+=Number(f.size)});\n                                            msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                        }\n                                        if (fwd_msg_images.length > 0) {\n                                            let total_size = 0;\n                                            fwd_msg_images.forEach((f) => {total_size+=Number(f.size)});\n                                            msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                        }\n                                        if (fwd_msg_locations.length > 0) {\n                                            msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_msg_locations.length));\n                                        }\n                                    }\n                                    if (this.model.get('group_chat')) {\n                                        this.$('.last-msg').html(\"\").append(msg_from).append('» ').append(msg_text);\n                                    } else {\n                                        this.$('.last-msg').html(\"» \").append(msg_text);\n                                    }\n                                } else if (this.model.get('group_chat')) {\n                                    msg_text = first_forwarded_msg.get('message');\n                                    msg_text = '» ' + msg_text;\n                                    this.$('.last-msg').text(msg_text);\n                                } else {\n                                    msg_text = first_forwarded_msg.get('message');\n                                    this.$('.last-msg').text(msg_text);\n                                    msg_from = '» ';\n                                }\n                            }\n                            else {\n                                if (forwarded_message.length === 1) {\n                                    let fwd_msg_txt = xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).slice(2)\n                                    fwd_msg_txt = fwd_msg_txt.charAt(0).toUpperCase() + fwd_msg_txt.slice(1)\n                                    msg_text = $('<i/>').text(fwd_msg_txt);\n                                    this.$('.last-msg').html('» ').append(msg_text);\n                                }\n                                else {\n                                    msg_text = $('<i/>').text(xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length));\n                                    this.$('.last-msg').html('» ').append(msg_text);\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        msg_text = msg.getText();\n                        this.$('.last-msg').text(msg_text);\n                    }\n                }\n                this.$('.last-msg').prepend(msg_from);\n            }\n            this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n            this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n                .attr('title', pretty_datetime(msg_time));\n            this.$('.msg-delivering-state').showIf(msg.get('type') !== 'system' && msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n                .attr('data-state', msg.getState());\n        },\n\n        openByClick: function () {\n            this.open();\n        },\n\n        open: function (options) {\n            if (!this.content){\n                this.content = new xabber.ChatContentView({chat_item: this});\n            }\n            options || (options = {right_contact_save: true, clear_search: false});\n            xabber.chats_view.openChat(this, options);\n            this.content.bottom.click_counter = 0;\n            this.content.bottom.setDefaultPlaceholder();\n        },\n\n        removeInvite: function (options) {\n            if (!this.account.server_features.get(Strophe.NS.REWRITE))\n                return;\n            options || (options = {});\n            let msgs = _.clone(this.model.messages.models);\n            this.model.set({'last_archive_id': undefined, 'first_archive_id': undefined});\n            msgs.forEach((item) => {\n                if (item.get('invite')) {\n                    let iq_retraction = $iq({type: 'set', to: this.account.get('jid')})\n                        .c('retract-message', {\n                            id: item.get('stanza_id'),\n                            xmlns: Strophe.NS.REWRITE,\n                            symmetric: false,\n                            by: this.account.get('jid')\n                        });\n                    this.account.sendIQFast(iq_retraction);\n                    item && this.content.removeMessage(item);\n                }\n            });\n            this.model.recountUnread();\n            delete this.contact.attributes.invitation;\n            this.updateIcon();\n        },\n\n        onClosed: function () {\n            this.parent.onChatRemoved(this.model, {soft: true});\n        }\n    });\n\n      xabber.MessagesView = xabber.BasicView.extend({\n          template: templates.chat_content,\n          ps_selector: '.chat-content',\n          ps_settings: {\n              wheelPropagation: true\n          },\n          avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n          _initialize: function (options) {\n              this.model = options.model;\n              this.contact = options.contact;\n              this.account = this.model.account;\n              let color = this.account.settings.get('color');\n              this.$el.attr('data-color', color);\n              this.$search_form = this.$('.search-form-header');\n              this.loading_history = false;\n              this.history_loaded = false;\n              this.first_msg_id = 0;\n              this.last_msg_id = 0;\n              this._scrolltop = this.getScrollTop();\n              this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n              this.chat_content = options.chat_content || this.model.item_view.content;\n              let wheel_ev = this.defineMouseWheelEvent();\n              this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n              this.$('.back-to-bottom').click(this.backToBottom.bind(this));\n          },\n\n          defineMouseWheelEvent: function () {\n              if (!_.isUndefined(window.onwheel)) {\n                  return \"wheel\";\n              } else if (!_.isUndefined(window.onmousewheel)) {\n                  return \"mousewheel\";\n              } else {\n                  return \"MozMousePixelScroll\";\n              }\n          },\n\n          keyupSearch: function (ev) {\n              if (ev.keyCode === constants.KEY_ENTER) {\n                  let query = this.$search_form.find('input').val();\n                  this.model.searchMessages(query, (messages) => {\n                  });\n              }\n              if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n                  this.chat_content.head.renderSearchPanel();\n              }\n          },\n\n          onMouseWheel: function (ev) {\n              this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          },\n\n          onClickMessage:function (ev) {\n              this.chat_content.onClickMessage(ev);\n          },\n\n          onClickLink:function (ev) {\n              this.chat_content.onClickLink(ev);\n          },\n\n          onClickLocationLink:function (ev) {\n              this.chat_content.onClickLocationLink(ev);\n          },\n\n          onClickLocation:function (ev) {\n              this.chat_content.onClickLocation(ev);\n          },\n\n          onHoverLocation:function (ev) {\n              this.chat_content.onHoverLocation(ev);\n          },\n\n          onScroll: function () {\n              this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n              this._prev_scrolltop = this._scrolltop || 0;\n              this._scrolltop = this.getScrollTop();\n              if (!this.history_loaded && !this.loading_history && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n                  this.loading_history = true;\n                  this.messagesRequest({before: this.first_msg_id}, () => {\n                      this.loading_history = false;\n                  });\n              }\n          },\n\n          backToBottom: function () {\n              this.openChat();\n              this.scrollToBottom();\n              this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          },\n\n          messagesRequest: function () {},\n\n          emptyChat: function () {\n              this.$('.chat-content').html($('<span class=\"error\"/>').text(xabber.getString(\"no_messages\")));\n          },\n\n          openChat: function () {\n              this.model.item_view.open({right_contact_save: true, clear_search: false});\n          },\n\n          addMessageHTML: function ($message, index, last_index) {\n              let scrolled_from_top,\n                  scrolled_from_bottom = this.getScrollBottom();\n              if (index === 0)\n                  $message.prependTo(this.$('.chat-content'));\n              else\n                  $message.insertAfter(this.$('.chat-message').eq(index - 1));\n              if (index === last_index)\n                  scrolled_from_top = this.getScrollTop();\n              let $next_message = $message.nextAll('.chat-message').first();\n              this.chat_content.updateMessageInChat($message[0]);\n              if ($next_message.length) {\n                  this.chat_content.updateMessageInChat($next_message[0]);\n              }\n              this.chat_content.initPopup($message);\n              if (scrolled_from_top)\n                  this.scrollTo(scrolled_from_top);\n              else\n                  this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n              return $message;\n          }\n\n      });\n\n      xabber.MessageContextView = xabber.MessagesView.extend({\n          className: 'chat-content-wrap messages-context-wrap',\n\n          events: {\n              'click .chat-message': 'onClickMessage',\n              'click .chat-msg-location-content': 'onClickLocation',\n              'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n              'click .mdi-link-variant': 'onClickLink',\n              'click .msg-copy-location' : 'onClickLocationLink',\n              \"keyup .messages-search-form\": \"keyupSearch\"\n          },\n\n          __initialize: function (options) {\n              options = options || {};\n              this.stanza_id = options.stanza_id_context;\n              this.encrypted = options.encrypted;\n              this.mention_context = options.mention_context;\n              if (!this.model.item_view.content)\n                  this.chat_content = new xabber.ChatContentView({chat_item: this.model.item_view});\n              this.$history_feedback = this.$('.load-history-feedback');\n              this.account.context_messages = new xabber.Messages(null, {account: this.account});\n              this.account.context_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n              this.account.context_messages.on(\"add\", this.addMessage, this);\n              xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n          },\n\n          render: function () {\n              this.scrollToTop();\n              this.onUpdatePlyr();\n              this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n              this.encrypted && this.$el.attr('data-trust', true)\n          },\n\n          onMouseWheel: function (ev) {\n              if (!this.loading_history)\n                  if (ev.originalEvent.deltaY < 0) {\n                      if (!this.first_history_loaded) {\n                          this.loading_history = true;\n                          this.messagesRequest({before: this.first_msg_id}, () => {\n                              this.loading_history = false;\n                          });\n                      }\n                  }\n                  else {\n                      if (!this.last_history_loaded) {\n                          this.loading_history = true;\n                          this.messagesRequest({after: this.last_msg_id}, () => {\n                              this.loading_history = false;\n                          });\n                      }\n                  }\n              this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          },\n\n          onScroll: function () {\n              this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n              this._prev_scrolltop = this._scrolltop || 0;\n              this._scrolltop = this.getScrollTop();\n              this._scrollbottom = this.getScrollBottom();\n\n              if (!this.loading_history)\n                  if (!this.first_history_loaded && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n                      this.loading_history = true;\n                      this.showHistoryFeedback();\n                      this.messagesRequest({before: this.first_msg_id}, () => {\n                          this.loading_history = false;\n                          this.hideHistoryFeedback();\n                      });\n                  }\n                  else {\n                      if (!this.last_history_loaded && (this._scrolltop > this._prev_scrolltop) && (this._scrollbottom < 100 || this.getPercentScrolled() > 0.9)) {\n                          this.loading_history = true;\n                          this.showHistoryFeedback();\n                          this.messagesRequest({after: this.last_msg_id}, () => {\n                              this.loading_history = false;\n                              this.hideHistoryFeedback();\n                          });\n                      }\n                  }\n          },\n\n          showHistoryFeedback: function () {\n              this.$history_feedback.text(xabber.getString(\"loading_history\")).removeClass('hidden');\n          },\n\n          hideHistoryFeedback: function () {\n              this.$history_feedback.addClass('hidden');\n          },\n\n          messagesRequest: function (query, callback) {\n              let messages = [],\n                  options = query || {},\n                  queryid = uuid();\n              !options.max && (options.max = xabber.settings.mam_messages_limit);\n              !options.after && !options.before && (options.before = '');\n              let handler = this.account.connection.addHandler((message) => {\n                  let $msg = $(message);\n                  if ($msg.find('result').attr('queryid') === queryid)\n                      messages.push(message);\n                  return true;\n              }, Strophe.NS.MAM);\n              this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                      this.account.connection.deleteHandler(handler);\n                      rsm && (this.first_msg_id = rsm.first) && (this.last_msg_id = rsm.last);\n                      if (options.after && (messages.length < options.max))\n                          this.last_history_loaded = true;\n                      if (options.before && (messages.length < options.max))\n                          this.first_history_loaded = true;\n                      $(messages).each((idx, message) => {\n                          let $message = $(message);\n                          this.account.chats.receiveChatMessage($message, {context_message: true});\n                      });\n                      callback && callback();\n                  }, () => {\n                      this.account.connection.deleteHandler(handler);\n                  }\n              );\n          },\n\n          addMessage: function (message) {\n              if (message.get('auth_request'))\n                  return;\n              if (this.mention_context && (message.get('stanza_id') === this.stanza_id)) {} else message.set('is_archived', true);\n              let $message = this.chat_content.buildMessageHtml(message).addClass('context-message'),\n                  index = this.account.context_messages.indexOf(message);\n              if (message.get('stanza_id') === this.stanza_id) {\n                  $message.addClass('message-from-context');\n                  setTimeout(() => {\n                      $message.removeClass('message-from-context')\n                  }, 3000);\n              }\n              this.addMessageHTML($message, index, this.account.context_messages.findLastIndex());\n          },\n\n          onUpdatePlyr: function (ev) {\n              this.$('.plyr-video-container').removeClass('active-plyr-container');\n              if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n                  let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n                  if ($message.length) {\n                      $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n                  }\n              }\n          },\n      });\n\n      xabber.SearchedMessagesView = xabber.MessagesView.extend({\n          className: 'chat-content-wrap searched-messages-wrap',\n\n          events: {\n              'click .chat-message': 'onClickMessage',\n              'click .chat-msg-location-content': 'onClickLocation',\n              'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n              'click .mdi-link-variant': 'onClickLink',\n              'click .msg-copy-location' : 'onClickLocationLink',\n              \"click .btn-cancel-searching\": \"openChat\",\n              \"keyup .messages-search-form\": \"keyupSearch\"\n          },\n\n          __initialize: function (options) {\n              this.query_text = options.query_text;\n              this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n              this.account.searched_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n              this.account.searched_messages.on(\"add\", this.addMessage, this);\n              return this;\n          },\n\n          render: function () {\n              this.$search_form.find('input').val(this.query_text);\n              this.$search_form.slideToggle(10, () => {\n                  if (this.$search_form.css('display') !== 'none')\n                      this.$search_form.find('input').focus();\n                  this.scrollToBottom();\n              });\n              this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          },\n\n          messagesRequest: function (query, callback) {\n              let messages = [],\n                  options = query || {},\n                  queryid = uuid();\n              _.extend(options, {\n                  max: xabber.settings.mam_messages_limit,\n                  before: query.before || '',\n                  var: [{var: 'withtext', value: this.query_text}]\n              });\n              let handler = this.account.connection.addHandler((message) => {\n                  let $msg = $(message);\n                  if ($msg.find('result').attr('queryid') === queryid)\n                      messages.push(message);\n                  return true;\n              }, Strophe.NS.MAM);\n              this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                      this.account.connection.deleteHandler(handler);\n                      rsm && (this.first_msg_id = rsm.first);\n                      if (!messages.length && !this.account.searched_messages.length) {\n                          this.emptyChat();\n                      }\n                      if (messages.length < options.max)\n                          this.history_loaded = true;\n                      $(messages).each((idx, message) => {\n                          let $message = $(message);\n                          this.account.chats.receiveChatMessage($message, {searched_message: true});\n                      });\n                      callback && callback();\n                  }, () => {\n                      this.account.connection.deleteHandler(handler);\n                  }\n              );\n          },\n\n          addMessage: function (message) {\n              if (message.get('auth_request'))\n                  return;\n              message.set('is_archived', true);\n              let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n                  index = this.account.searched_messages.indexOf(message);\n              this.addMessageHTML($message, index);\n          }\n      });\n\n      xabber.ContactSearchedMessagesView = xabber.MessagesView.extend({\n          template: templates.chat_content_contact,\n          ps_settings: {\n              wheelPropagation: true\n          },\n          avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n          className: 'chat-content-wrap searched-messages-wrap',\n\n          events: {\n              'click .chat-message': 'onClickMessage',\n              'click .chat-msg-location-content': 'onClickLocation',\n              'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n              'click .mdi-link-variant': 'onClickLink',\n              'click .msg-copy-location' : 'onClickLocationLink',\n              \"click .btn-cancel-searching\": \"openChat\",\n              \"keyup .messages-search-form\": \"keyupSearch\",\n              \"click .close-search-icon\": \"clearSearch\",\n              'click .btn-back': 'hideSearch'\n          },\n\n          _initialize: function (options) {\n              this.model = options.model;\n              this.contact = options.contact;\n              this.account = this.model.account;\n              this.$search_form = this.$('.search-form-header');\n              this.timer = null;\n              this.loading_history = false;\n              this.history_loaded = false;\n              this.first_msg_id = 0;\n              this.last_msg_id = 0;\n              this.chat_content = options.chat_content || this.model.item_view.content;\n              this.parent.model.set('search_hidden', true)\n              return this;\n          },\n\n          render: function () {\n              if (this.account.searched_messages)\n                  this.searched_messages = this.account.searched_messages\n              this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n              if (this.searched_messages)\n                  this.account.searched_messages.add(this.searched_messages.toJSON(), {silent : true});\n              this.account.searched_messages.on(\"add\", this.addMessage, this);\n              if (this.parent.model.get('saved_search_panel')) {\n                  this.$el.html(this.parent.model.get('saved_search_panel'));\n                  this.model.set('saved_search_panel', undefined);\n              }\n              else {\n                  this.emptyChat();\n                  this.$el.html(this.template());\n                  this.emptyChat();\n                  if (this.parent.model.get('search_hidden'))\n                      this.hideSearch();\n              }\n              this.ps_container = this.$('.search-messages-content-wrap');\n              if (this.ps_container.length) {\n                  this.ps_container.perfectScrollbar(\n                      _.extend(this.ps_settings || {}, xabber.ps_settings)\n                  );\n              }\n              this.$search_form = this.$('.search-form-header');\n              if (this.parent.model.get('saved_search_panel')) {\n                  this.$search_form.find('input').focus();\n                  if (this.parent.model.get('saved_search_panel_scroll'))\n                      this.scrollTo(this.parent.model.get('saved_search_panel_scroll'));\n              }\n          },\n\n          clearSearch: function () {\n              this.$search_form.find('input').val('');\n              this.emptyChat();\n          },\n\n\n          keyupSearch: function (ev) {\n              this.$('.close-search-icon').hideIf(!this.$search_form.find('input').val());\n              if (ev.keyCode === constants.KEY_ENTER) {\n                  this.emptyChat();\n                  let query = this.$search_form.find('input').val();\n                  this.$('.preloader-wrap').hideIf(false);\n                  this.loading_timestamp = Number(moment.now());\n                  this.messagesRequest(query, this.loading_timestamp, undefined, [], (messages, rsm) => {\n                  });\n              }\n          },\n\n          emptyChat: function () {\n              if (this.account.searched_messages)\n                  this.account.searched_messages.reset();\n              this.$('.chat-content').html('');\n              this.$('.messages-count').hideIf(true);\n              this.$('.preloader-wrap').hideIf(true);\n              this.$('.search-results').hideIf(true);\n              this.$('.close-search-icon').hideIf(true);\n          },\n\n          messagesRequest: function (query, timestamp, rsm, loaded_messages, callback) {\n              if(!query || this.loading_timestamp != timestamp) {\n                  this.emptyChat();\n                  return true;\n              }\n              let messages = [],\n                  options = {},\n                  queryid = uuid();\n              _.extend(options, {\n                  max: xabber.settings.mam_messages_limit,\n                  var: [{var: 'withtext', value: query}]\n              });\n              if (rsm && rsm.last)\n                  _.extend(options, {\n                      after: rsm.last,\n                  });\n              let handler = this.account.connection.addHandler((message) => {\n                  let $msg = $(message);\n                  if ($msg.find('result').attr('queryid') === queryid)\n                      messages.push(message);\n                  return true;\n              }, Strophe.NS.MAM);\n              this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                      this.account.connection.deleteHandler(handler);\n                      rsm && (this.first_msg_id = rsm.first);\n                      if (!messages.length && !this.account.searched_messages.length) {\n                          this.emptyChat();\n                      }\n                      if (messages.length < options.max)\n                          this.history_loaded = true;\n                      loaded_messages = loaded_messages.concat(messages)\n                      if (messages.length == options.max)\n                          this.messagesRequest(query, timestamp, rsm, loaded_messages, (messages, rsm) => {});\n                      else if (loaded_messages.length == rsm.count) {\n                          if (rsm.count != 0) {\n                              let message_count = rsm.count;\n                              this.emptyChat()\n                              // list.sort((a, b) => (a.color > b.color) ? 1 : -1)\n                              $(loaded_messages).each((idx, message) => {\n                                  let $message = $(message),\n                                      $jingle_msg_propose = $message.find(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n                                  if ($jingle_msg_propose.length)\n                                      message_count--;\n                                  this.account.chats.receiveChatMessage($message, {\n                                      searched_message: true,\n                                      searched_in_contact_messages: true,\n                                      query: query\n                                  });\n                              });\n                              this.$('.messages-count').hideIf(!message_count);\n                              this.$('.close-search-icon').hideIf(!message_count);\n                              this.$('.search-results').hideIf(message_count);\n                              this.$('.messages-count').text(xabber.getQuantityString(\"searched_messages_count\", message_count));\n                          }\n                          else {\n                              this.emptyChat();\n                              this.$('.close-search-icon').hideIf(false);\n                              this.$('.search-results').hideIf(false);\n                          }\n\n                      }\n                      callback && callback(messages, rsm);\n                  }, () => {\n                      this.account.connection.deleteHandler(handler);\n                  }\n              );\n          },\n\n          addMessageHTML: function ($message, index, last_index) {\n              $message.prependTo(this.$('.chat-content'));\n              if (index === last_index)\n                  scrolled_from_top = this.getScrollTop();\n              let $next_message = $message.nextAll('.chat-message').first();\n              // this.chat_content.updateMessageInChat($message[0]);\n              // if ($next_message.length) {\n              //     this.chat_content.updateMessageInChat($next_message[0]);\n              // }\n              // this.chat_content.initPopup($message);\n              return $message;\n          },\n\n          addMessage: function (message) {\n              if (!this.parent.model.get('search_hidden')) {\n                  if (message.get('auth_request') || !message.get('searched_in_contact_messages'))\n                      return;\n                  message.set('is_archived', true);\n                  message.set('searched_message', true);\n                  let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n                      index = this.account.searched_messages.indexOf(message);\n                  this.chat_content.showMessageAuthor($message);\n                  this.addMessageHTML($message, index);\n              }\n          },\n\n          hideSearch: function (ev) {\n              this.parent.model.set('search_hidden', true);\n              this.$('.search-input').val('')\n              this.emptyChat();\n              if (this.parent.ps_container.length) {\n                  this.parent.ps_container.perfectScrollbar(\n                      _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                  );\n              }\n              this.$('.search-wrap').hideIf(this.parent.model.get('search_hidden'))\n          },\n\n          onClickMessage: function (ev) {\n              let $elem = $(ev.target),\n                  $msg = $elem.closest('.chat-message');\n              this.parent.model.set('saved_search_panel_scroll', this.ps_container[0].scrollTop);\n              this.ps_container.perfectScrollbar('destroy');\n              this.parent.model.set('saved_search_panel', this.$el.clone());\n              this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n          }\n      });\n\n      xabber.ParticipantMessagesView = xabber.MessagesView.extend({\n          className: 'chat-content-wrap participant-messages-wrap',\n\n          events: {\n              'click .chat-message': 'onClickMessage',\n              'click .chat-msg-location-content': 'onClickLocation',\n              'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n              'click .mdi-link-variant': 'onClickLink',\n              'click .msg-copy-location' : 'onClickLocationLink',\n              'click .btn-cancel-selection' : 'openChat',\n              'click .btn-retract-messages' : 'retractMessages',\n              \"keyup .messages-search-form\": \"keyupSearch\"\n          },\n\n          __initialize: function (options) {\n              this.participant = options.participant;\n              this.member_jid = this.participant.jid;\n              this.member_id = this.participant.id;\n              this.member_nickname = this.participant.nickname;\n              this.account.participant_messages = new xabber.Messages(null, {account: this.account});\n              this.account.participant_messages.on(\"add\", this.addMessage, this);\n              this.account.participant_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n              this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n              return this;\n          },\n\n          render: function () {\n              this.$('.chat-content').css('height', 'calc(100% - 32px)');\n              this.$('.participant-messages-header .messages-by-header .participant-nickname').text(this.member_nickname);\n              this.$('.participant-messages-header').removeClass('hidden');\n              this.scrollToBottom();\n              this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          },\n\n          onScrollY: function () {\n\n          },\n\n          retractMessages: function () {\n              utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__confirm\", [(this.member_nickname || this.member_jid || this.member_id)]),\n                  null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                  if (result) {\n                      if (this.member_id) {\n                          this.chat_content.model.retractMessagesByUser(this.member_id, () => {\n                              this.emptyChat();\n                          });\n                      }\n                  }\n              });\n          },\n\n          messagesRequest: function (query, callback) {\n              let messages = [],\n                  options = query || {},\n                  member_id = this.member_id,\n                  queryid = uuid();\n              _.extend(options, {\n                  max: xabber.settings.mam_messages_limit,\n                  before: query.before || '',\n                  var: [{var: 'with', value: member_id}]\n              });\n              let handler = this.account.connection.addHandler((message) => {\n                  let $msg = $(message);\n                  if ($msg.find('result').attr('queryid') === queryid) {\n                      messages.push(message);\n                  }\n                  return true;\n              }, Strophe.NS.MAM);\n              this.chat_content.MAMRequest(options,\n                  (success, messages, rsm) => {\n                      this.account.connection.deleteHandler(handler);\n                      rsm && (this.first_msg_id = rsm.first);\n                      if (!messages.length && !this.account.participant_messages.length) {\n                          this.emptyChat();\n                      }\n                      if (messages.length < options.max)\n                          this.history_loaded = true;\n                      $(messages).each((idx, message) => {\n                          let $message = $(message);\n                          this.account.chats.receiveChatMessage($message, {participant_message: true});\n                      });\n                      callback && callback();\n                  }, () => {\n                      this.account.connection.deleteHandler(handler);\n                  }\n              );\n          },\n\n          addMessage: function (message) {\n              if (message.get('auth_request'))\n                  return;\n              message.set('is_archived', true);\n              let $message = this.chat_content.buildMessageHtml(message).addClass('participant-message'),\n                  index = this.account.participant_messages.indexOf(message);\n              this.addMessageHTML($message, index);\n          }\n      });\n\n      xabber.SubscriptionButtonsView = xabber.BasicView.extend({\n          template: templates.subscription_buttons,\n\n          events: {\n              \"click .btn-decline\": \"declineSubscription\",\n              \"click .btn-allow\": \"allowSubscription\",\n              \"click .btn-add\": \"addContact\",\n              \"click .btn-subscribe\": \"addContact\",\n              \"click .btn-block\": \"blockContact\"\n          },\n\n          _initialize: function (options) {\n              this.$el.html(this.template());\n              this.contact = options.contact;\n              this.contact.on(\"change:subscription\", this.render, this);\n              this.contact.on(\"change:in_roster\", this.render, this);\n              this.contact.on(\"change:blocked\", this.render, this);\n              this.contact.on(\"change:subscription_request_in\", this.render, this);\n              this.contact.on(\"change:subscription_request_out\", this.render, this);\n          },\n\n          render: function () {\n              this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n              if (this.contact.get('group_chat')) {\n                  this.$el.addClass('hidden');\n                  return;\n              }\n              let subscription = this.contact.get('subscription'),\n                  in_request = this.contact.get('subscription_request_in'),\n                  in_roster = this.contact.get('in_roster'),\n                  out_request = this.contact.get('subscription_request_out');\n              this.$('.button').removeClass('hidden');\n              this.$('.subscription-info').text(\"\");\n              this.$el.addClass('hidden');\n              if (subscription === 'both' || this.contact.get('blocked'))\n                  return;\n              else if (subscription === 'to' && in_request || (subscription === 'none' && in_request && in_roster)) {\n                  this.$('.subscription-info').text(xabber.getString(\"subscription_status_in_request_incoming\"));\n                  this.$('.button:not(.btn-allow)').addClass('hidden');\n              } else if (!out_request && !in_roster && !in_request && (subscription === 'from' || subscription === 'none')) {\n                  this.$('.subscription-info').text(xabber.getString(\"chat_subscribe_request_outgoing\"));\n                  this.$('.button:not(.btn-subscribe)').addClass('hidden');\n              } else if (subscription === undefined || subscription === 'none' && in_request) {\n                  this.$('.button:not(.btn-add):not(.btn-block)').addClass('hidden');\n              } else {\n                  return;\n              }\n              this.$el.removeClass('hidden');\n              this.$el.closest('.chat-content-wrap').children('.chat-content').addClass('with-before');\n          },\n\n          hideElement: function () {\n              this.$el.addClass('hidden');\n              this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n          },\n\n          declineSubscription: function () {\n              this.contact.declineSubscribe();\n              this.contact.set('subscription_request_in', false);\n              this.hideElement();\n          },\n\n          allowSubscription: function () {\n              this.contact.acceptRequest();\n              this.hideElement();\n          },\n\n          addContact: function () {\n              if (this.contact.get('subscription') === undefined)\n                  this.contact.pushInRoster(null, () => {\n                      this.sendAndAskSubscription();\n                  });\n              else\n                  this.sendAndAskSubscription();\n              this.hideElement();\n          },\n\n          sendAndAskSubscription: function () {\n              this.contact.askRequest();\n              this.contact.acceptRequest();\n          },\n\n          blockContact: function () {\n              this.contact.blockRequest();\n              this.hideElement();\n          }\n      });\n\n      xabber.ChatContentView = xabber.BasicView.extend({\n        className: 'chat-content-wrap',\n        template: templates.chat_content,\n        ps_selector: '.chat-content',\n        ps_settings: {\n            wheelPropagation: true\n        },\n        avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n        events: {\n            'mousedown .chat-message': 'onTouchMessage',\n            'click .chat-message': 'onClickMessage',\n            'click .chat-msg-location-content': 'onClickLocation',\n            'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n            'click .mdi-link-variant' : 'onClickLink',\n            'click .msg-copy-location' : 'onClickLocationLink',\n            'click .pinned-message' : 'showPinnedMessage',\n            \"keyup .messages-search-form\": \"keyupSearch\",\n            \"click .btn-cancel-searching\": \"cancelSearch\",\n            \"click .back-to-bottom\": \"backToBottom\",\n            \"click .btn-retry-send-message\": \"retrySendMessage\",\n            \"click .btn-delete-message\": \"removeFileErrorMessage\",\n            \"click .encryption-warning\": \"openDevicesWindow\"\n        },\n\n        _initialize: function (options) {\n            this.chat_item = options.chat_item;\n            this.current_day_indicator = null;\n            this._pending_avatars = [];\n            this.account = this.chat_item.account;\n            this.model = this.chat_item.model;\n            this.contact = this.model.contact;\n            this.head = this.model.get('saved') ? new xabber.SavedChatHeadView({content: this}) : new xabber.ChatHeadView({content: this});\n            this.bottom = new xabber.ChatBottomView({content: this});\n            this.$history_feedback = this.$('.load-history-feedback');\n            this.$pinned_message = this.$('.pinned-message');\n            this.$search_form = this.$('.search-form-header');\n            this.$el.attr('data-id', this.model.id);\n            this.updateContentColorScheme();\n            if (this.model.sync_created && this.model.last_message){\n                this.onMessage(this.model.last_message);\n                if (options.new_message){\n                    this.onMessage(options.new_message);\n                    this.onChangedReadState(options.new_message);\n                }\n            }\n            this._scrolltop = this.getScrollTop();\n            let wheel_ev = this.defineMouseWheelEvent();\n            this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n            this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n            this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n            this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n            this.model.on(\"load_last_history\", this.loadLastHistory, this);\n            this.model.on(\"get_missed_history\", this.requestMissedMessages, this);\n            this.model.messages.on(\"add\", this.onMessage, this);\n            this.model.messages.on(\"change:is_unread\", this.onChangedReadState, this);\n            this.model.messages.on(\"change:timestamp\", this.onChangedMessageTimestamp, this);\n            this.model.messages.on(\"change:trusted\", this.onTrustedChanged, this);\n            this.model.messages.on(\"change:last_replace_time\", this.updateMessage, this);\n            if (this.contact) {\n                this.subscription_buttons = new xabber.SubscriptionButtonsView({contact: this.contact, el: this.$('.subscription-buttons-wrap')[0]});\n                this.contact.on(\"change:blocked\", this.updateBlockedState, this);\n                this.contact.on(\"change:subscription\", this.onSubscriptionChange, this);\n                this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n                this.contact.on(\"remove_from_blocklist\", this.loadLastHistory, this);\n                this.account.contacts.on(\"change:name\", this.updateName, this);\n                this.account.contacts.on(\"change:image\", this.updateAvatar, this);\n            }\n            this.account.on(\"change\", this.updateMyInfo, this);\n            this.account.settings.on(\"change:color\", this.updateContentColorScheme, this);\n            xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n            this.account.dfd_presence.done(() => {\n                !this.account.connection.do_synchronization && this.loadLastHistory();\n            });\n            return this;\n        },\n\n          render: function () {\n              this.cancelSearch();\n              this.scrollToBottom();\n              this.onScroll();\n              this.updateContactStatus();\n              this.updateWaveforms();\n              this.onUpdatePlyr();\n              if (this.contact) {\n                  this.contact.get('group_chat') && this.updatePinnedMessage();\n                  this.subscription_buttons.render();\n              }\n          },\n\n          openDevicesWindow: function () {\n              let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n              peer.fingerprints.open();\n          },\n\n        defineMouseWheelEvent: function () {\n            if (!_.isUndefined(window.onwheel)) {\n                return \"wheel\";\n            } else if (!_.isUndefined(window.onmousewheel)) {\n                return \"mousewheel\";\n            } else {\n                return \"MozMousePixelScroll\";\n            }\n        },\n\n        updateMyInfo: function () {\n            let changed = this.account.changed;\n            if (_.has(changed, 'name')) this.updateMyName();\n            if (_.has(changed, 'status')) this.updateMyStatus();\n            if (_.has(changed, 'image')) this.updateMyAvatar();\n        },\n\n        updateContentColorScheme: function () {\n            let color = this.account.settings.get('color');\n            this.$el.attr('data-color', color);\n            this.head.$el.attr('data-color', color);\n            this.bottom.$el.attr('data-color', color);\n        },\n\n          onTrustedChanged: function (message) {\n              let trusted = message.get('trusted'),\n                  $message = this.$('.chat-message[data-uniqueid=\"' + message.get('unique_id') + '\"]');\n              (trusted === null) && (trusted = 'none');\n              $message.attr('data-trust', trusted);\n          },\n\n        updateGroupChat: function () {\n            this._loading_history = false;\n            this.model.set('history_loaded', false);\n        },\n\n        onSubscriptionChange: function () {\n            let subscription = this.contact.get('subscription');\n            if (subscription === 'both'&& this.contact.get('group_chat')){\n                this.updateGroupChat();\n                this.loadPreviousHistory();\n            }\n        },\n\n        cancelSearch: function () {\n            this.$search_form.hide().find('input').val(\"\");\n        },\n\n        updateContactStatus: function () {\n            if (this.head.$('.contact-status').attr('data-status') == 'offline' && this.contact.get('last_seen')) {\n                let seconds = (moment.now() - this.contact.get('last_seen'))/1000,\n                    new_status = xabber.pretty_last_seen(seconds);\n                this.contact.set({status_message: new_status });\n            }\n        },\n\n        updateWaveforms: function () {\n            this.model.plyr_players.forEach(function(item) {\n                if (item.$audio_elem)\n                    if (item.$audio_elem.voice_message)\n                        item.$audio_elem.voice_message.drawBuffer();\n            });\n        },\n\n        updatePinnedMessage: function () {\n            let $pinned_message = this.contact.get('pinned_message');\n            this.contact.renderPinnedMessage($pinned_message, this.$pinned_message);\n        },\n\n        onChangedVisibility: function () {\n            if (this.isVisible()) {\n                this.model.set({display: true, active: true});\n                this.onScroll();\n                this.readMessages();\n            } else {\n                this.model.set({display: false});\n            }\n        },\n\n        onChangedActiveStatus: function () {\n            let active = this.model.get('active');\n            this.sendChatState(active ? 'active' : 'inactive');\n            if (this.model.get('group_chat')) {\n                if (active)\n                    this.contact.sendPresent();\n                else\n                    this.contact.sendNotPresent();\n            }\n        },\n\n        updateName: function (contact) {\n            let name = contact.get('name'),\n                jid = contact.get('jid');\n            if (contact === this.contact) {\n                this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                    $(this).find('.chat-msg-author').text(name);\n                });\n            } else {\n                this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                    $(this).find('.fwd-msg-author').text(name);\n                });\n            }\n        },\n\n        updateAvatar: function (contact) {\n            let image = contact.cached_image,\n                jid = contact.get('jid');\n            if (contact === this.contact) {\n                this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                    $(this).find('.left-side .circle-avatar').setAvatar(\n                            image, this.avatar_size);\n                });\n            } else {\n                this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                    $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                            image, this.avatar_size);\n                });\n            }\n        },\n\n        updateMyStatus: function () {\n            let text;\n            if (!this.account.isOnline()) {\n                text = xabber.getString(\"connection_status__you_are_offline\");\n            }\n            this.bottom.showChatNotification(text || '', true);\n        },\n\n        updateMyName: function () {\n            let name = this.account.get('name'),\n                jid = this.account.get('jid');\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.chat-msg-author').text(name);\n            });\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-msg-author').text(name);\n            });\n        },\n\n        updateMyAvatar: function () {\n            let image = this.account.cached_image,\n                jid = this.account.get('jid');\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.left-side .circle-avatar').setAvatar(\n                        image, this.avatar_size);\n            });\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                        image, this.avatar_size);\n            });\n        },\n\n        updateBlockedState: function () {\n            if (this.model.get('blocked'))\n                this.model.showBlockedRequestMessage();\n            if (this.isVisible()) {\n                xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'chat', chat_item: this.chat_item, blocked: this.model.get('blocked')});\n                this.updateScrollBar();\n            }\n        },\n\n        readMessages: function (timestamp) {\n            let unread_messages = _.clone(this.model.messages_unread.models);\n            if (unread_messages.length) {\n                let msg = unread_messages[unread_messages.length - 1];\n                this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n            }\n            this.model.set('const_unread', 0);\n            _.each(unread_messages, (msg) => {\n                if (!timestamp || msg.get('timestamp') <= timestamp) {\n                    msg.set('is_unread', false);\n                }\n            });\n            if (this.model.last_message && this.model.last_message.get('is_unread') && !unread_messages.length){\n                let msg = this.model.last_message;\n                this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n                msg.set('is_unread', false);\n            }\n            else if (this.model.last_message && this.model.last_message.get('auth_request') && this.model.messages.length){\n                let messages = _.clone(this.model.messages.models),\n                    msg = messages[messages.length - 2];\n                if (msg && msg.get('is_unread')) {\n                    this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n                    msg.set('is_unread', false);\n                }\n            }\n        },\n\n        onMouseWheel: function (ev) {\n            if (ev.originalEvent.deltaY < 0)\n                this.loadPreviousHistory();\n            this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n        },\n\n        keyupSearch: function (ev) {\n            if (ev.keyCode === constants.KEY_ENTER) {\n                let query = this.$search_form.find('input').val();\n                this.model.searchMessages(query, (messages) => {});\n            }\n            if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n                this.head.renderSearchPanel();\n            }\n        },\n\n        onScrollY: function () {\n            if (this._scrolltop === 0 && this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n                this.$('.fixed-day-indicator-wrap').css('opacity', 1);\n                this.current_day_indicator = pretty_date(parseInt(this.$('.chat-content').children().first().data('time')));\n                this.showDayIndicator(this.current_day_indicator);\n            }\n            this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n        },\n\n        onScroll: function () {\n            if (!this.isVisible())\n                return;\n            this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n            let $chatday_indicator = this.$('.chat-day-indicator'),\n                $messages = this.$('.chat-message'),\n                indicator_idx = undefined,\n                opacity_value;\n            this._prev_scrolltop = this._scrolltop || 0;\n            this._scrolltop = this.getScrollTop();\n            $chatday_indicator.each((idx, indicator) => {\n                if (this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n                    if (this._scrolltop < this._prev_scrolltop) {\n                        if ((indicator.offsetTop <= this._scrolltop) && (indicator.offsetTop >= this._scrolltop - 30)) {\n                            indicator_idx = idx;\n                            opacity_value = 0;\n                            return false;\n                        }\n                        if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop - 30)) {\n                            indicator_idx = idx && (idx - 1);\n                            opacity_value = 1;\n                            return false;\n                        }\n                    }\n                    else {\n                        if ((indicator.offsetTop <= this._scrolltop + 30) && (indicator.offsetTop >= this._scrolltop)) {\n                            indicator_idx = idx && (idx - 1);\n                            opacity_value = 0;\n                            return false;\n                        }\n                        if ((indicator.offsetTop >= this._scrolltop - 30) && (indicator.offsetTop <= this._scrolltop)) {\n                            indicator_idx = idx;\n                            opacity_value = 1;\n                            return false;\n                        }\n                    }\n                }\n                else if (!$(indicator).hasClass('fixed-day-indicator-wrap')) {\n                    if (this._scrolltop < this._prev_scrolltop) {\n                        if ((indicator.offsetTop >= this._scrolltop + 30) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                            indicator_idx = idx;\n                            opacity_value = 0;\n                            return false;\n                        }\n                        if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                            indicator_idx = idx;\n                            opacity_value = 1;\n                            return false;\n                        }\n                    }\n                    else {\n                        if ((indicator.offsetTop <= this._scrolltop + 62) && (indicator.offsetTop >= this._scrolltop + 30)) {\n                            indicator_idx = idx && (idx - 1);\n                            opacity_value = 0;\n                            return false;\n                        }\n                        if ((indicator.offsetTop >= this._scrolltop - 62) && (indicator.offsetTop <= this._scrolltop + 30)) {\n                            indicator_idx = idx;\n                            opacity_value = 1;\n                            return false;\n                        }\n                    }\n                }\n            });\n            if (indicator_idx) {\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n                this.current_day_indicator = pretty_date(parseInt($($chatday_indicator[indicator_idx]).attr('data-time')));\n            }\n            else {\n                $messages.each((idx, msg) => {\n                    if ((msg.offsetTop + $(msg).height() > this._scrolltop) && (msg.offsetTop < this._scrolltop)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                });\n                if (indicator_idx) {\n                    this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n                    this.current_day_indicator = pretty_date(parseInt($($messages[indicator_idx]).attr('data-time')));\n                }\n                else if (!this.$('.subscription-buttons-wrap').hasClass('hidden') && this._scrolltop == 0){\n                    opacity_value = 0;\n                    this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n                }\n            }\n            if (this.current_day_indicator !== null) {\n                this.showDayIndicator(this.current_day_indicator);\n            }\n            if (this._scrolltop < this._prev_scrolltop &&\n                (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n                this.loadPreviousHistory();\n            }\n        },\n\n        backToBottom: function () {\n            this.scrollToBottom();\n        },\n\n        MAMRequest: function (options, callback, errback) {\n            let account = this.account,\n                is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n                conn = is_fast ? account.fast_connection : account.connection,\n                contact = this.contact,\n                is_saved = this.model.get('saved'),\n                messages = [], queryid = uuid(),\n                is_groupchat = contact && contact.get('group_chat'), success = true, iq;\n            delete options.fast;\n            if (is_groupchat)\n                iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n            else\n                iq = $iq({type: 'set'});\n            iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                    .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                    .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                    .c('value').t(Strophe.NS.MAM).up().up();\n            if (this.account.server_features.get(Strophe.NS.ARCHIVE) && this.model.get('encrypted'))    {\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_encrypted`})\n                    .c('value').t(this.model.get('encrypted')).up().up();\n            }\n            if (!is_groupchat)\n                iq.c('field', {'var': 'with'})\n                    .c('value').t(this.model.get('jid')).up().up();\n            if (options.var)\n                options.var.forEach((opt_var) => {\n                    iq.c('field', {'var': opt_var.var})\n                        .c('value').t(opt_var.value).up().up();\n                });\n            iq.up().cnode(new Strophe.RSM(options).toXML());\n            let deferred = new $.Deferred();\n            account.chats.onStartedMAMRequest(deferred);\n            deferred.done(function () {\n                console.log(iq)\n                console.log(conn)\n                console.log(conn.connected)\n                let connected_deferred = new $.Deferred();\n                connected_deferred.done(function() {\n                    let handler = conn.addHandler(function (message) {\n                        if ((contact && is_groupchat == contact.get('group_chat')) || is_saved) {\n                            let $msg = $(message);\n                            if ($msg.find('result').attr('queryid') === queryid) {\n                                messages.push(message);\n                            }\n                        }\n                        else {\n                            messages = [];\n                            success = false;\n                        }\n                        return true;\n                    }, Strophe.NS.MAM);\n                    let callb = function (res) {\n                        console.log(iq);\n                        console.log(res);\n                        console.log(messages);\n                        conn.deleteHandler(handler);\n                        handler = null;\n                        account.chats.onCompletedMAMRequest(deferred);\n                        let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                        if ($fin.length && $fin.attr('queryid') === queryid) {\n                            let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                            rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                            callback && callback(success, messages, rsm);\n                        }\n                    },\n                    errb = function (err) {\n                        conn.deleteHandler(handler);\n                        handler = null;\n                        xabber.error(\"MAM error\");\n                        xabber.error(err);\n                        account.chats.onCompletedMAMRequest(deferred);\n                        errback && errback(err);\n                    };\n                    account.once('send_pending_messages', () => {\n                        console.log('send_pending_archive_iq');\n                        console.log(iq);\n                        if (Boolean(handler)) {\n                            let pending_deferred = new $.Deferred();\n                            account.chats.onStartedMAMRequest(pending_deferred);\n                            conn.deleteHandler(handler);\n                            conn = is_fast && account.fast_connection ? account.fast_connection : account.connection;\n                            pending_deferred.done(function() {\n                                console.log('initiated pending archive iq');\n                                console.log(iq)\n                                console.log(conn)\n                                console.log(conn.connected)\n                                let connected_pending_deferred = new $.Deferred();\n                                connected_pending_deferred.done(function() {\n                                    handler = conn.addHandler(function (message) {\n                                        if ((contact && is_groupchat == contact.get('group_chat')) || is_saved) {\n                                            let $msg = $(message);\n                                            if ($msg.find('result').attr('queryid') === queryid) {\n                                                messages.push(message);\n                                            }\n                                        }\n                                        else {\n                                            messages = [];\n                                            success = false;\n                                        }\n                                        return true;\n                                    }, Strophe.NS.MAM);\n                                    if (is_fast)\n                                        account.sendFast(iq, callb, errb);\n                                    else\n                                        account.sendIQ(iq, callb, errb);\n                                });\n                                if (conn.connected)\n                                    connected_pending_deferred.resolve();\n                                else {\n                                    let _pending_time = 1,\n                                    _interval = setInterval(() => {\n                                        if (conn.connected || _pending_time >= 11){\n                                            clearInterval(_interval);\n                                            connected_pending_deferred.resolve();\n                                        }\n                                        _pending_time += 1;\n                                    }, 1000);\n                                }\n                            });\n                        }\n                    })\n                    if (is_fast)\n                        account.sendFast(iq, callb, errb);\n                    else\n                        account.sendIQ(iq, callb, errb);\n\n                });\n                if (conn.connected)\n                    connected_deferred.resolve();\n                else {\n                    let _pending_time = 1,\n                    _interval = setInterval(() => {\n                        if (conn.connected || _pending_time >= 11){\n                            clearInterval(_interval);\n                            connected_deferred.resolve();\n                        }\n                        _pending_time += 1;\n                    }, 1000);\n                }\n            });\n        },\n\n        getMessageArchive: function (query, options) {\n            if (options.previous_history) {\n                if (this._loading_history || this.model.get('history_loaded')) {\n                    return;\n                }\n                this._loading_history = true;\n                clearTimeout(this._load_history_timeout);\n                this._load_history_timeout = setTimeout(() => {\n                    this._loading_history = false;\n                }, 60000);\n                this.showHistoryFeedback();\n            }\n            let account = this.model.account, counter = 0;\n                this.MAMRequest(query, (success, messages, rsm) => {\n                        clearTimeout(this._load_history_timeout);\n                        this._loading_history = false;\n                        this.hideHistoryFeedback();\n                        if (options.missed_history && !rsm.complete && (rsm.count > messages.length))\n                            this.getMessageArchive({after: rsm.last}, {missed_history: true});\n                        if (this.model.get('group_chat')) {\n                            if (this.contact && !this.contact.my_info)\n                                this.contact.getMyInfo();\n                        }\n                        else {\n                            if (this.contact && !this.contact.get('last_seen') && !this.contact.get('server'))\n                                this.contact.getLastSeen();\n                        }\n                        if ((messages.length < query.max) && success) {\n                            this.model.set('history_loaded', true);\n                        }\n                        if (options.previous_history || !this.model.get('first_archive_id')) {\n                            rsm.first && this.model.set('first_archive_id', rsm.first);\n                        }\n                        if (options.last_history || !this.model.get('last_archive_id')) {\n                            rsm.last && this.model.set('last_archive_id', rsm.last);\n                        }\n                        _.each(messages, function (message) {\n                            let loaded_message = account.chats.receiveChatMessage(message,\n                                _.extend({is_archived: true}, options)\n                            );\n                            if (loaded_message) counter++;\n                        });\n                        if (options.previous_history && !this.model.get('displayed_sent') && this.model.messages.length) {\n                            let last_msg = this.model.messages.models[this.model.messages.length - 1];\n                            if (last_msg)\n                                if (!last_msg.isSenderMe() && this.model.get('active') && this.model.get('display')) {\n                                    this.model.sendMarker(last_msg.get('msgid'), 'displayed', last_msg.get('stanza_id'), last_msg.get('contact_stanza_id'));\n                                    this.model.set('displayed_sent', true);\n                                }\n                        }\n                        if ((counter === 0) && options.last_history && !this.model.get('history_loaded')) {\n                            this.getMessageArchive(_.extend(query, {\n                                max: xabber.settings.mam_messages_limit,\n                                before: this.model.get('first_archive_id') || ''\n                            }), {previous_history: true});\n                        }\n                    }, (err) => {\n                        if (options.previous_history) {\n                            this._loading_history = false;\n                            this.showHistoryFeedback(true);\n                        }\n                    }\n                );\n        },\n\n        requestMissedMessages: function (timestamp) {\n            if (!timestamp)\n                return;\n            let query = {};\n            query.var = [{var: 'start', value: moment(timestamp).format()}];\n            this.getMessageArchive(query, {missed_history: true});\n        },\n\n        loadLastHistory: function () {\n            if (!xabber.settings.load_history) {\n                return;\n            }\n            let last_archive_id = this.model.get('last_archive_id'),\n                query = {};\n            if (last_archive_id) {\n                query.after = last_archive_id;\n            } else {\n                query.before = '';\n                query.max = xabber.settings.mam_messages_limit_start;\n            }\n            this.getMessageArchive(query, {last_history: true});\n        },\n\n        loadPreviousHistory: function () {\n            if (this.contact) {\n                if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                    return;\n                }\n            }\n            this.getMessageArchive({\n                    fast: true,\n                    max: xabber.settings.mam_messages_limit,\n                    before: this.model.get('first_archive_id') || '' },\n                {previous_history: true\n                });\n        },\n\n        showHistoryFeedback: function (is_error) {\n            if (this._load_history_feedback_timeout) {\n                clearTimeout(this._load_history_feedback_timeout);\n                this._load_history_feedback_timeout = null;\n            }\n            let text = xabber.getString(is_error ? \"loading_archived_messages_error\" : \"loading_history\");\n            this.$history_feedback.text(text).removeClass('hidden');\n            if (is_error) {\n                this._load_history_feedback_timeout = setTimeout(\n                    this.hideHistoryFeedback.bind(this), 5000);\n            }\n        },\n\n        showDayIndicator: function (text) {\n            this.$('.fixed-day-indicator').text(text);\n            this.$('.fixed-day-indicator-wrap').removeClass('hidden');\n        },\n\n        showPinnedMessage: function (ev) {\n            if ($(ev.target).hasClass('close'))\n                this.unpinMessage();\n            else {\n                let pinned_message = this.contact.get('pinned_message'),\n                    msg = this.buildMessageHtml(pinned_message),\n                    pinned_msg_modal = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this});\n                pinned_msg_modal.$el.attr('data-color', this.account.settings.get('color'));\n                this.updateMessageInChat(msg);\n                this.initPopup(msg);\n                pinned_msg_modal.open(msg);\n            }\n        },\n\n        imageOnload: function ($message) {\n            let $image_container = $message.find('.img-content'),\n                $copy_link_icon = $message.find('.mdi-link-variant');\n            $image_container.css('background-image', 'none');\n            $copy_link_icon.attr({\n                'data-image': 'true'\n            });\n        },\n\n        videoOnload: function ($message) {\n            let $image_container = $message.find('.img-content'),\n                $copy_link_icon = $message.find('.mdi-link-variant');\n            $copy_link_icon.attr({\n                'data-image': 'true'\n            });\n            this.initPlyrEmbedPlayer($message);\n        },\n\n        locationOnload: function ($message) {\n            let $copy_location_div = $message.find('.msg-copy-location-content');\n            $copy_location_div.html(env.templates.svg['map-marker-outline']());\n            $copy_location_div.attr({\n                'data-location': 'true'\n            });\n        },\n\n        unpinMessage: function () {\n            let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n                .c('pinned-message');\n            this.account.sendIQFast(iq, () => {}, (error) => {\n                if ($(error).find('error not-allowed').length)\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            });\n        },\n\n        hideHistoryFeedback: function () {\n            this.$history_feedback.addClass('hidden');\n        },\n\n        receiveNoTextMessage: function ($message, carbon_copied) {\n            let from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n                to_jid = Strophe.getBareJidFromJid($message.attr('to')),\n                is_sender = from_jid === this.account.get('jid'),\n                $chat_state = $message.find(`[xmlns=\"${Strophe.NS.CHATSTATES}\"]`);\n            if ($chat_state.length) {\n                if (!is_sender) {\n                    let $subtype = $chat_state.children('subtype');\n                    if ($subtype.attr('type') == 'encrypted') {\n                        let view = xabber.chats_view.child(`${this.contact.hash_id}:encrypted`);\n                        if (view && view.content)\n                            view.content.showChatState($chat_state[0].tagName.toLowerCase());\n                    } else\n                        this.showChatState($chat_state[0].tagName.toLowerCase(), $subtype.attr('type'), $subtype.attr('mime-type'));\n                }\n            }\n        },\n\n        showChatState: function (state, type, mime_type) {\n            clearTimeout(this._chatstate_show_timeout);\n            let message, name = this.contact.get('name');\n            if (state === 'composing') {\n                if (type) {\n                    this._current_composing_msg = {type: type};\n                    if (type === 'upload') {\n                        let file_type = mime_type ? utils.pretty_file_type_with_article(mime_type) : null;\n                        mime_type && (this._current_composing_msg.mime_type = mime_type);\n                        message = file_type ? xabber.getString(\"chat_state_composing_upload_filetype\", [file_type]) : xabber.getString(\"chat_state_composing_upload\");\n                        this._chatstate_show_timeout = setTimeout(() => {\n                            this.showChatState();\n                        }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                    } else {\n                        if (type === 'voice')\n                            message = xabber.getString(\"chat_state_composing_voice\");\n                        if (type === 'video')\n                            message = xabber.getString(\"chat_state_composing_video\");\n                        this._chatstate_show_timeout = setTimeout(() => {\n                            this.showChatState('paused', type);\n                        }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                    }\n                }\n                else {\n                    this._current_composing_msg = undefined;\n                    message = xabber.getString(\"chat_state_composing\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState();\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED);\n                }\n            } else if (state === 'paused') {\n                this.showChatState();\n                return;\n            } else {\n                this.bottom.showChatNotification('');\n                this.chat_item.updateLastMessage();\n                return;\n            }\n            if (message)\n                this.bottom.showChatNotification(`${this.contact.get('name')} ${message}`);\n            else\n                this.bottom.showChatNotification();\n            this.chat_item.$('.last-msg').text(message);\n            this.chat_item.$('.last-msg-date').text(utils.pretty_short_datetime())\n                .attr('title', pretty_datetime());\n            this.chat_item.$('.msg-delivering-state').addClass('hidden');\n        },\n\n        updateMentions: function (message) {\n            if (message.get('mentions')) {\n                message.get('mentions').forEach((mention) => {\n                    let mention_target = mention.target || \"\";\n                    if (this.contact.get('group_chat') || message.get('groupchat_jid')) {\n                        let id = mention_target.match(/\\?id=\\w*/),\n                            jid = mention_target.match(/\\?jid=.*/);\n                        if (id && this.contact.my_info) {\n                            mention_target = id[0].slice(4);\n                            (mention_target === this.contact.my_info.get('id')) && (mention.me = true);\n                        }\n                        else if (jid) {\n                            mention_target = jid[0].slice(5);\n                            (mention_target === this.account.get('jid')) && (mention.me = true);\n                        }\n                    }\n                    else {\n                        mention_target = mention_target.slice(5);\n                        if (mention_target === this.account.get('jid'))\n                            mention.me = true;\n                    }\n                });\n            }\n        },\n\n        onMessage: function (message) {\n            this.updateMentions(message);\n            this.account.messages.add(message);\n            let is_scrolled_to_bottom = this.isScrolledToBottom(),\n                scrolled_from_bottom = this.getScrollBottom();\n            if (!_.isUndefined(message.get('is_accepted'))) {\n                this.model.set('is_accepted', false);\n            }\n            this.model.set('opened', true);\n            if (!message.get('is_archived') && message.get('stanza_id'))\n                this.model.set('last_archive_id', message.get('stanza_id'));\n\n            if (message.get('participants_version')) {\n                if (this.contact.participants && this.contact.participants.version < message.get('participants_version'))\n                    this.contact.trigger('update_participants');\n            }\n\n            let $message = this.addMessage(message);\n\n            if (message.get('type') === 'file_upload') {\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.startGalleryUploadFile(message, $message);\n                else\n                    this.startUploadFile(message, $message);\n            }\n\n            if (this.isVisible()) {\n                if (is_scrolled_to_bottom || message.get('submitted_here')) {\n                    this.scrollToBottom();\n                } else {\n                    this.updateScrollBar();\n                    this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n                }\n            }\n\n            if (!(message.get('synced_from_server') || message.get('is_archived'))) {\n                if (!(message.isSenderMe() || message.get('silent') || ((message.get('type') === 'system') && !message.get('auth_request')))) {\n                    message.set('is_unread', !(this.model.get('display') && xabber.get('focused')));\n                    if (!message.get('is_unread'))\n                        this.model.sendMarker(message.get('msgid'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n                    if (!xabber.get('focused')) {\n                        if (this.model.get('saved') || this.model.isMuted())\n                            message.set('muted', true);\n                        else if (!message.get('synced_invitation_from_server'))\n                            this.notifyMessage(message);\n                    }\n                    this.model.setMessagesDisplayed(message.get('timestamp'));\n                }\n                if (this.contact && this.model.get('archived'))\n                    if (this.model.isMuted())\n                        message.set('archived', true);\n                    else {\n                        this.head.archiveChat();\n                        this.model.set('archived', false);\n                    }\n                if (this.model.get('saved')) {\n                    message.set('muted', true);\n                    message.set('state', constants.MSG_DISPLAYED);\n                }\n            }\n\n            if (message.get('attention')) {\n                this.attentionMessage(message);\n            }\n\n            if (message.isSenderMe()) {\n                if (!message.get('is_archived') && !message.get('missed_msg'))\n                    this.readMessages(message.get('timestamp'));\n                if (this.model.get('last_displayed_id') >= message.get('stanza_id') && message.get('stanza_id') !== message.get('origin_id'))\n                    message.set('state', constants.MSG_DISPLAYED);\n                else if (message.get('stanza_id') !== message.get('origin_id') && (this.model.get('last_delivered_id') >= message.get('stanza_id') || message.get('is_archived')))\n                    message.set('state', constants.MSG_DELIVERED);\n            }\n\n            if (message.get('private_invite') || message.get('invite')) {\n                if (!(this.contact.invitation && this.contact.invitation.message.get('timestamp') > message.get('timestamp')))\n                    this.contact.invitation = new xabber.GroupchatInvitationView({model: this.contact, message: message});\n                this.model.contact.set('invitation', true);\n                this.model.get('active') && this.model.contact.trigger('open_chat', this.model.contact);\n                message.set('is_unread', false);\n            }\n\n            let last_message = this.model.last_message;\n            if (!last_message || message.get('timestamp') >= last_message.get('timestamp')) {\n                this.model.last_message = message;\n                this.chat_item.updateLastMessage();\n            }\n            if (message.get('mentions')) {\n                message.get('mentions').forEach((mention) => {\n                    let mention_target = mention.target || \"\",\n                        id = mention_target.match(/\\?id=\\w*/),\n                        jid = mention_target.match(/\\?jid=.*/);\n                    if (id)\n                        mention_target = id[0].slice(4);\n                    else if (jid)\n                        mention_target = jid[0].slice(5);\n                    else\n                        mention_target = \"\";\n                    if (this.contact.my_info)\n                        (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                    else if (this.contact.get('group_chat')) {\n                        if (this._pending_my_info) {\n                            this._pending_my_info.done(() => {\n                                (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                                this._pending_my_info = null;\n                            });\n                        }\n                        else {\n                            this._pending_my_info = new $.Deferred();\n                            this.contact.getMyInfo(() => {\n                                (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {\n                                    message: message,\n                                    contact: this.contact\n                                });\n                                this._pending_my_info.resolve();\n                            });\n                        }\n                    }\n                    (mention_target === this.account.get('jid') || mention_target === \"\") && this.account.mentions.create(null, {message: message, contact: this.contact});\n                });\n            }\n        },\n\n\n          decryptImages: function (message, force) {\n            let scrolled_from_bottom = this.getScrollBottom(),\n                unique_id = message.get('unique_id');\n              if (this.model.get('encrypted') || message.get('encrypted') || force) {\n                  let images = message.get('images') || [];\n                  if (images.length) {\n                      images.forEach((img) => {\n                          let source = img.sources[0];\n                          if (!img.key)\n                              return;\n                          this.model.messages.decryptFile(source, img.key).then((result) => {\n                              if (result === null)\n                                  return;\n                              let $msg = [];\n                              if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context')\n                                  $msg = this.model.messages_view.$(`.chat-message[data-uniqueid=\"${unique_id}\"] img[src=\"${source}\"]`);\n                              else\n                                  $msg = this.$(`.chat-message[data-uniqueid=\"${unique_id}\"] img[src=\"${source}\"]`);\n                              if ($msg.length) {\n                                  $msg[0].src = result;\n                                  $msg[0].onload = () => {\n                                      if (!scrolled_from_bottom)\n                                          this.scrollToBottom();\n                                      else\n                                          this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                                  };\n                                  $msg.attr('data-mfp-src', result);\n                              }\n                          });\n                      });\n                  }\n                  let fwd_msgs = message.get('forwarded_message') || [];\n                  fwd_msgs.forEach((fwd_msg) => {\n                      let fwd_images = fwd_msg.get('images') || [],\n                          fwd_unique_id = fwd_msg.get('unique_id');\n                      fwd_images.forEach((img) => {\n                          let source = img.sources[0];\n                          if (!img.key)\n                              return;\n                          this.model.messages.decryptFile(source, img.key).then((result) => {\n                              if (result === null)\n                                  return;\n                              let $msg = this.$(`.chat-message[data-uniqueid=\"${unique_id}\"] .fwd-message[data-uniqueid=\"${fwd_unique_id}\"] img[src=\"${source}\"]`);\n                              if ($msg.length) {\n                                  $msg[0].src = result;\n                                  $msg[0].onload = () => {\n                                      if (!scrolled_from_bottom)\n                                          this.scrollToBottom();\n                                      else\n                                          this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                                  };\n                                  $msg.attr('data-mfp-src', result);\n                              }\n                          });\n                      });\n                  });\n              }\n          },\n\n        addMessage: function (message) {\n            let $message = this.buildMessageHtml(message),\n                index = this.model.messages.indexOf(message);\n            if (index === 0) {\n                $message.prependTo(this.$('.chat-content'));\n            } else {\n                $message.insertAfter(this.$('.chat-message').eq(index - 1));\n            }\n            let $next_message = $message.nextAll('.chat-message').first();\n            this.updateMessageInChat($message[0]);\n            if ($next_message.length) {\n                this.updateMessageInChat($next_message[0]);\n            }\n            this.initPopup($message);\n            this.bottom.showChatNotification();\n            return $message;\n        },\n\n        initPopup: function ($message) {\n            let $one_image = $message.find('.uploaded-img'),\n                $collage_image = $message.find('.uploaded-img-for-collage');\n            if ($one_image.length) {\n                $one_image.each((idx, item) => {\n                    this.initMagnificPopup($(item));\n                });\n            }\n            if ($collage_image.length) {\n                this.initZoomGallery($message);\n            }\n        },\n\n        getImagesInformation: function (msg) {\n            let images = msg.get('images'),\n                servers = [];\n            if (!images)\n                return;\n            images.forEach((img) => {\n                let server = new URL(img.sources[0]).hostname;\n                img.pretty_size = utils.pretty_size(img.size)\n                servers.push(server);\n            });\n            servers = [...new Set(servers)]\n\n            return {images, servers};\n        },\n\n        initMagnificPopup: function ($elem) {\n            let self = this;\n            $elem.magnificPopup({\n                type: 'image',\n                closeOnContentClick: true,\n                fixedContentPos: true,\n                mainClass: 'mfp-no-margins mfp-with-zoom',\n                image: {\n                    verticalFit: true,\n                    titleSrc: function(item) {\n                        return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                    }\n                },\n                zoom: {\n                    enabled: true,\n                    duration: 300\n                }\n            });\n        },\n\n        initZoomGallery: function ($message) {\n            let self = this;\n            $message.find('.zoom-gallery').magnificPopup({\n                delegate: 'img',\n                type: 'image',\n                closeOnContentClick: false,\n                closeBtnInside: false,\n                mainClass: 'mfp-with-zoom mfp-img-mobile',\n                image: {\n                    verticalFit: true,\n                    titleSrc: function(item) {\n                        return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                    }\n                },\n                gallery: {\n                    enabled: true\n                },\n                zoom: {\n                    enabled: true,\n                    duration: 300,\n                    opener: function(element) {\n                        return element;\n                    }\n                }\n            });\n        },\n\n        updateMessage: function (item) {\n            let $message, images = item.get('images'), emoji = item.get('only_emoji'), $new_message,\n                files =  item.get('files');\n            if (item instanceof xabber.Message) {\n                this.updateMentions(item);\n                $new_message = this.buildMessageHtml(item);\n                $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n            }\n            else\n                return;\n            $message.replaceWith($new_message)\n            $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n            this.updateMessageInChat($message[0]);\n            this.initPopup($message);\n            this.bottom.showChatNotification();\n\n            if (item.get('data_form')) {\n                let data_form = utils.render_data_form(item.get('data_form'));\n                $message.find('.chat-msg-content').append(data_form);\n            }\n            let short_datetime = utils.pretty_short_datetime(item.get('last_replace_time')),\n                datetime = moment(item.get('last_replace_time')).format('D MMMM, YYYY HH:mm:ss'),\n                new_title = `${pretty_datetime(item.get('time'))} ${xabber.getString(\"edited\", [moment(item.get('timestamp')).startOf('day').isSame(moment(item.get('last_replace_time')).startOf('day')) ? short_datetime : datetime])}`;\n            $message.find('.msg-time').prop('title', new_title);\n            $message.find('.edited-info').removeClass('hidden').text(xabber.getString(\"chat_screen__message__label_edited\")).prop('title', new_title);\n        },\n\n        removeMessage: function (item) {\n            let message, $message, $message_in_chat;\n            if (item instanceof xabber.Message) {\n                message = item;\n                $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n                (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`));\n            } else {\n                $message = item;\n                if (!$message.length) return;\n                message = this.model.messages.get($message.data('uniqueid'));\n            }\n            message && message.destroy();\n            if ($message_in_chat) {\n                this.removeMessageFromDOM($message_in_chat);\n            }\n            if ($message && ($message !== $message_in_chat))\n                this.removeMessageFromDOM($message);\n        },\n\n        removeMessageFromDOM: function ($message) {\n            if (($message.hasClass('with-author')) && (!$message.next().hasClass('with-author'))) {\n                let avatar = $message.find('.circle-avatar')[0];\n                $message.next().addClass('with-author');\n                $message.next().find('.circle-avatar').replaceWith(avatar);\n            }\n            $message.prev('.chat-day-indicator').remove();\n            $message.remove();\n            this.bottom.manageSelectedMessages();\n            if (!this._clearing_history) {\n                this.updateScrollBar();\n            }\n        },\n\n        clearHistory: function () {\n            let dialog_options = [],\n                dialog_message = this.contact.get('group_chat') ? xabber.getString(\"clear_group_chat_history_dialog_message\") : xabber.getString(\"clear_chat_history_dialog_message\"),\n                is_group_chat = this.contact.get('group_chat') ? true : false;\n            this._clearing_history = true;\n            if (this.account.server_features.get(Strophe.NS.REWRITE)) {\n                utils.dialogs.ask(xabber.getString(\"clear_history\"), dialog_message,\n                    dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                    if (!res) {\n                        this._clearing_history = false;\n                        return;\n                    }\n                    this.model.retractAllMessages(is_group_chat, () => {\n                        this._clearing_history = false;\n                        this.chat_item.updateLastMessage();\n                        this.updateScrollBar();\n                    }, () => {\n                        this._clearing_history = false;\n                    });\n                });\n            }\n            else {\n                utils.dialogs.ask(xabber.getString(\"clear_history\"), `${dialog_message}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')})`,\n                    dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                    if (!res) {\n                        this._clearing_history = false;\n                        return;\n                    }\n                    let msgs = _.clone(this.model.messages.models);\n                    msgs.forEach((item) => { this.removeMessage(item); });\n                });\n            }\n        },\n\n        renderVoiceMessage: function (element, file_url, chat) {\n            let not_expanded_msg = element.innerHTML,\n                unique_id = 'waveform' + moment.now(),\n                $elem = $(element),\n                $msg_element = $elem.closest('.link-file');\n            chat = chat || this.model;\n            $elem.addClass('voice-message-rendering').html($(templates.messages.audio_file_waveform({waveform_id: unique_id})));\n            let aud = this.createAudio(file_url, $elem.find('#' + unique_id));\n\n            aud.on('ready', () => {\n                let duration = Math.round(aud.getDuration());\n                $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n                aud.play();\n            });\n\n            aud.on('error', () => {\n                $elem.removeClass('voice-message-rendering');\n                element.innerHTML = not_expanded_msg;\n                aud.unAll();\n                $elem.find('.voice-message-play').get(0).remove();\n                utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n            });\n\n            aud.on('play', () => {\n                $msg_element.addClass('playing');\n                let is_popup;\n                xabber.current_plyr_player && (is_popup = xabber.current_plyr_player.is_popup);\n                xabber.current_plyr_player = chat.plyr_players.find(item => item.$audio_elem === $msg_element[0]);//переделать на выбор из всех\n                xabber.current_plyr_player && (xabber.current_plyr_player.chat_item = chat.item_view);\n                xabber.current_plyr_player && (xabber.current_plyr_player.is_popup = is_popup);\n                let other_players = xabber.plyr_players.filter(other => other != xabber.current_plyr_player);\n                other_players.forEach(function(other) {\n                    if (other.$audio_elem){\n                        if (other.$audio_elem.voice_message)\n                            other.$audio_elem.voice_message.stopTime();\n                    }\n                });\n                (xabber.plyr_player_popup && xabber.plyr_player_popup.player) && xabber.plyr_player_popup.player.stop();\n                (!xabber.current_plyr_player && xabber.plyr_player_popup) && xabber.plyr_player_popup.closePopup();\n                let timerId = setInterval(function() {\n                    let cur_time = Math.round(aud.getCurrentTime());\n                    if (aud.isPlaying())\n                        $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                    else\n                        clearInterval(timerId);\n                }, 100);\n                xabber.trigger('plyr_player_updated');\n            });\n\n            aud.on('finish', () => {\n                $msg_element.removeClass('playing');\n            });\n\n            aud.on('pause', () => {\n                $msg_element.removeClass('playing');\n                xabber.trigger('plyr_player_updated');\n            });\n\n            aud.stopTime = () => {\n                aud.stop()\n                $elem.find('.voice-msg-current-time').text(utils.pretty_duration(0));\n            };\n\n            $elem.find('.voice-message-volume')[0].onchange = () => {\n                aud.setVolume($elem.find('.voice-message-volume').val()/100);\n            };\n            return aud;\n        },\n\n        createImageGrid: function (attrs) {\n            let template_for_images;\n            if (attrs.images.length > 6) {\n                let tpl_name = 'template-for-6',\n                    hidden_images = attrs.images.length - 5;\n                !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n                template_for_images = $(templates.messages[tpl_name](attrs));\n                template_for_images.find('.last-image').addClass('hidden-images');\n                template_for_images.find('.image-counter').text('+' + hidden_images);\n            }\n            else {\n                let tpl_name = 'template-for-' + attrs.images.length;\n                !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + attrs.images.length)\n                template_for_images = $(templates.messages[tpl_name](attrs));\n            }\n            if (!xabber.settings.load_media) {\n                template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n            }\n            return template_for_images;\n        },\n\n        buildMessageHtml: function (message) {\n            let attrs = _.clone(message.attributes),\n                is_sender = (message instanceof xabber.Message) ? message.isSenderMe() : false,\n                user_info = attrs.user_info || {}, username,\n                images = attrs.images,\n                videos = attrs.videos,\n                emoji = message.get('only_emoji'),\n                files =  attrs.files,\n                locations =  attrs.locations,\n                link_references =  attrs.link_references,\n                is_video = Boolean(videos && videos.length),\n                is_image = Boolean(images && images.length),\n                is_location = locations ? true : false,\n                is_file = files ? true : false,\n                is_audio = false,\n                template_for_images,\n                avatar_id = user_info.avatar,\n                avatar_url = user_info.avatar_url,\n                role = user_info.role,\n                badge = user_info.badge,\n                from_id = user_info.id,\n                has_encrypted_files = attrs.has_encrypted_files,\n                audio_player_list = [];\n\n            username = user_info.nickname || this.model.get('saved') && this.account.get('name') || (attrs.from_jid === this.contact.get('jid') && this.contact.get('name'));\n            if (!username) {\n                if (is_sender) {\n                    if (this.model.get(\"group_chat\")) {\n                        if (this.contact.my_info)\n                            username = this.contact.my_info.get('nickname');\n                        else if (this.contact)\n                            this.contact.getMyInfo(() => {\n                                username = this.contact.my_info.get('nickname');\n                                if ($message) {\n                                    $message.children(\".msg-wrap\").find(\".chat-msg-author-wrap .chat-msg-author\").text(Strophe.xmlescape(username));\n                                }\n                            });\n                        else\n                            username = this.account.get('name');\n                    } else\n                        username = this.account.get('name');\n                } else {\n                    username = this.account.contacts.get(attrs.from_jid) ? this.account.contacts.get(attrs.from_jid).get('name') : attrs.from_jid;\n                }\n            }\n            username = Strophe.xmlescape(username || \"\");\n\n            if (is_sender && this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    role = this.contact.my_info.get('role');\n                    badge = this.contact.my_info.get('badge');\n                }\n            }\n            _.extend(attrs, {\n                username: username,\n                state: (message instanceof xabber.Message) ? message.getState() : 'sent',\n                verbose_state: (message instanceof xabber.Message) ? message.getVerboseState() : 'sent',\n                time: pretty_datetime(attrs.time),\n                short_time: utils.pretty_time(attrs.time),\n                avatar_id: avatar_id,\n                avatar_url: avatar_url,\n                is_image: is_image,\n                is_video: is_video,\n                is_file: is_file,\n                is_location: is_location,\n                files: files,\n                locations: locations,\n                link_references: link_references,\n                role: utils.pretty_name(role),\n                badge: badge,\n                from_id: from_id\n            });\n            attrs.encrypted = attrs.encrypted || this.model.get('encrypted');\n\n            if (attrs.type === 'system') {\n                let tpl_name = attrs.invite ? 'group_request' : 'system';\n                return $(templates.messages[tpl_name](attrs));\n            }\n\n            if (is_image) {\n                if (images.length > 1) {\n                    template_for_images = this.createImageGrid(attrs);\n                }\n            }\n\n            let classes = [\n                attrs.forwarded_message && 'forwarding',\n                (attrs.encrypted || this.model.get('encrypted')) ? 'encrypted' : \"\"\n            ];\n\n            let markup_body = utils.markupBodyMessage(message), $message;\n            if (attrs.searched_message){\n                let myRegexp = new RegExp('(.{0,12})(' + attrs.query + ')(.{0,12})','gmius'),\n                    matching_markup = myRegexp.exec(markup_body);\n                if (matching_markup) {\n                    if (matching_markup[1].length == 12)\n                        matching_markup[1] = '...' + matching_markup[1].substring(1);\n                    if (matching_markup[3].length == 12)\n                        matching_markup[3] = matching_markup[3].substring(0, matching_markup[3].length - 1) + '...';\n                    markup_body = matching_markup[1] + '<span class=\"mention ground-color-100\">' + matching_markup[2] + '</span>' + matching_markup[3];\n                    markup_body = markup_body.replace(/\\n/g, \" \");;\n                }\n            }\n\n            if (this.model.get('saved') && !markup_body.length && attrs.forwarded_message && attrs.forwarded_message.length == 1) {\n                $message = $(templates.messages.saved_main(_.extend(attrs, {\n                    classlist: classes.join(' ')\n                })));\n            } else if (attrs.searched_message)\n                $message = $(templates.messages.searched(_.extend(attrs, {\n                    is_sender: is_sender,\n                    message: markup_body,\n                    msg_time: utils.pretty_short_datetime_recent_chat(attrs.time),\n                    classlist: classes.join(' ')\n                })));\n            else if (attrs.type === 'file_upload')\n                $message = $(templates.messages.file_upload(_.extend(attrs, {\n                    is_sender: is_sender,\n                    message: markup_body,\n                    classlist: classes.join(' ')\n                })));\n            else\n                $message = $(templates.messages.main(_.extend(attrs, {\n                    is_sender: is_sender,\n                    message: markup_body,\n                    classlist: classes.join(' ')\n                })));\n\n            if (attrs.hasOwnProperty('is_trusted'))\n                $message.attr('data-trust', attrs.is_trusted);\n\n            if (is_image) {\n                if (images.length > 1) {\n                    $message.find('.chat-msg-media-content').html(template_for_images);\n                    !xabber.settings.load_media && $message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                }\n                if (images.length == 1) {\n                    let $img_html = this.createImage(images[0]),\n                        img_content = this.createImageContainer(images[0]);\n                    $img_html.onload = () => {\n                        this.imageOnload($message);\n                    };\n                    $message.find('.chat-msg-media-content').html($(img_content).html($img_html));\n                    !xabber.settings.load_media && $message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    this.updateScrollBar();\n                }\n            }\n            if (is_video) {\n                let video_content = this.createVideoContainer();\n                $message.find('.chat-msg-media-content').append(video_content);\n                videos.forEach((video) => {\n                    let video_el = this.createVideo(video);\n                    $message.find('.video-content').append(video_el);\n                });\n                this.videoOnload($message);\n                $message.removeClass('file-upload noselect');\n            }\n\n            if (is_file && attrs.type !== 'file_upload') {\n                if (files.length > 0) {\n                    let file_attrs = _.clone(files),\n                        template_for_file_content;\n                    $(file_attrs).each((idx, file) => {\n                        let copied_attrs = _.clone(file_attrs[idx]);\n                        if (file.type) {\n                            if (file.voice)\n                                is_audio = true;\n                            else\n                                is_audio = false;\n                        }\n                        ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                        let mdi_icon_class = utils.file_type_icon(file.type);\n                        _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size) });\n                        template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                        $message.find('.chat-msg-media-content').append(template_for_file_content);\n                        if (is_audio && $message.find('.link-file').length) {\n                            let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                            audio_player.msg_time = $message.attr('data-time');\n                            audio_player.author = username;\n                            audio_player.message_unique_id = $message.attr('data-uniqueid');\n                            if (attrs.from_jid === this.account.get('jid')) {\n                                if (this.model.get('group_chat')) {\n                                    if (this.contact.my_info) {\n                                        audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                        if (!audio_player.contact_avatar) {\n                                            if (this.account.cached_image)\n                                                audio_player.contact_avatar = this.account.cached_image;\n                                            !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                                        } else\n                                            audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                    }\n                                }\n                                if (!audio_player.contact_avatar)\n                                    audio_player.contact_avatar = this.account.cached_image;\n                            } else {\n                                if (this.model.get('group_chat')) {\n                                    let author = $message.find('.msg-wrap .chat-msg-author').text();\n                                    audio_player.contact_avatar = Images.getDefaultAvatar(author);\n                                }\n                                else {\n                                    let author = this.account.contacts.get($message.data('from')) || $message.find('.msg-wrap .chat-msg-author').text() || $message.data('from');\n                                    audio_player.contact_avatar = author.cached_image || Images.getDefaultAvatar(author);\n                                }\n                            }\n                            if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                                this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                                xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                                audio_player_list = audio_player_list.concat([audio_player]);\n                            } else {\n                                audio_player_list = message.get('msg_player_audios');\n                            }\n                            xabber.trigger('plyr_player_updated');\n                        }\n                    });\n                }\n            }\n\n            if (is_file && attrs.type === 'file_upload') {\n                let images = [];\n                $(files).each((idx, file_) => {\n                    file_.upload_id = idx;\n                    if (utils.isImageType(file_.type)) {\n                        file_.sources = [utils.isImageType(file_.type) ? file_.key ? file_.image_prev.src : window.URL.createObjectURL(new Blob([file_])) : null,];\n                        images.push(file_);\n                    }\n                });\n                if (images.length > 0) {\n                    if (images.length > 1) {\n                        let template_for_images;\n                        if (images.length > 6) {\n                            let tpl_name = 'template-for-6',\n                                hidden_images = images.length - 5;\n                            template_for_images = $(templates.messages[tpl_name]({images}));\n                            template_for_images.find('.last-image').addClass('hidden-images');\n                            template_for_images.find('.image-counter').text('+' + hidden_images);\n                        }\n                        else {\n                            let tpl_name = 'template-for-' + images.length;\n                            template_for_images = $(templates.messages[tpl_name]({images}));\n                        }\n                        template_for_images.addClass('unuploaded-images');\n                        $(templates.messages.loading_circle()).insertAfter(template_for_images.find('img'));\n                        $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(template_for_images);\n                    } else {\n                        let $img_html = this.createImage(images[0]),\n                            img_content = this.createImageContainer(images[0]),\n                            maxHeight = 400,\n                            maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7,\n                            imgHeight = images[0].height,\n                            imgWidth = images[0].width;\n                        maxWidth = maxWidth > 400 ? 400 : maxWidth;\n                        if (imgHeight && imgWidth) {\n                            if (imgWidth > maxWidth) {\n                                imgHeight = imgHeight * (maxWidth/imgWidth);\n                                imgWidth = maxWidth;\n                            }\n                            if (imgHeight > maxHeight) {\n                                imgWidth = imgWidth * (maxHeight/imgHeight);\n                                imgHeight = maxHeight;\n                            }\n                        }\n                        imgWidth = imgWidth ? imgWidth : 200;\n                        imgHeight = imgHeight ? imgHeight : 200;\n                        $(img_content).addClass('unuploaded-images');\n                        $(img_content).attr('data-upload-file-id', images[0].upload_id);\n                        $(img_content).css({\n                            width: imgWidth,\n                            height: imgHeight,\n                            'max-height': maxHeight,\n                            'max-width': maxWidth,\n                        });\n                        $(img_content).html($img_html)\n                        $(img_content).append(templates.messages.loading_circle());\n                        $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(img_content);\n                    }\n                }\n                if (files.length > 0) {\n                    $(files).each((idx, item) => {\n                        if (images.includes(item))\n                            return;\n                        let file_attrs = {\n                                name: item.name,\n                                type: item.type,\n                                upload_id: item.upload_id,\n                            },\n                            template_for_file_content;\n                        _.extend(file_attrs, {size: utils.pretty_size(item.size)});\n                        template_for_file_content = $(templates.messages.file_loading(file_attrs));\n                        template_for_file_content.find('.file-loading-container').html(templates.messages.loading_circle());\n                        $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                    });\n                }\n            }\n            if (is_location) {\n                if (locations.length > 0) {\n                    let location_attrs = _.clone(locations),\n                        template_for_location_content;\n                    $(location_attrs).each((idx, location) => {\n                        let copied_attrs = _.clone(location_attrs[idx]);\n                        _.extend(copied_attrs, { id: '_' + Math.random().toString(36).substr(2, 9)});\n                        if (xabber.settings.mapping_service){\n                            template_for_location_content = $(templates.messages.location(copied_attrs));\n                            $message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                            $message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                            $message.find('.chat-msg-location-content').append(template_for_location_content);\n                            this.locationOnload($message);\n                        } else {\n                            $message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                        }\n                    });\n                }\n            }\n\n            if (link_references && link_references.length > 0) {\n                let link_references_attrs = _.clone(link_references),\n                    template_for_link_reference_content,\n                    youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                    vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n                $(link_references_attrs).each((idx, link) => {\n                    let copied_attrs = _.clone(link_references_attrs[idx]);\n                    copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                    if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                        copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                    if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                        copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                        copied_attrs.is_video = true;\n                        youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                        vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                    } else\n                        copied_attrs.is_video = false;\n                    template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                    $message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n                });\n            }\n\n            if (message.get('data_form')) {\n                let data_form = utils.render_data_form(message.get('data_form'));\n                $message.find('.chat-msg-content').append(data_form);\n            }\n\n            if (attrs.forwarded_message && !attrs.searched_message) {\n                $(attrs.forwarded_message).each((idx, fwd_msg) => {\n                    is_sender = fwd_msg.isSenderMe();\n                    attrs = _.clone(fwd_msg.attributes);\n                    let is_image_forward = Boolean(attrs.images && attrs.images.length),\n                        images_forward = is_image_forward ? _.clone(attrs.images) : undefined,\n                        $img_html_forward,\n                        is_forward_video = Boolean(attrs.videos && attrs.videos.length),\n                        is_forward_file = Boolean(attrs.files && attrs.files.length),\n                        is_forward_location = Boolean(attrs.locations && attrs.locations.length),\n                        is_fwd_voice_message,\n                        user_info = attrs.user_info || {},\n                        avatar_id = user_info.avatar,\n                        avatar_url = user_info.avatar_url,\n                        role = utils.pretty_name(user_info.role),\n                        badge = user_info.badge,\n                        from_id = user_info.id,\n                        from_jid = attrs.from_jid;\n                    !has_encrypted_files && (has_encrypted_files = attrs.has_encrypted_files);\n                    if (is_sender) {\n                        username = Strophe.xmlescape(user_info.nickname || this.account.get('name'));\n                    } else {\n                        username = Strophe.xmlescape(user_info.nickname || user_info.id || this.account.contacts.mergeContact({jid: from_jid}).get('name'));\n                    }\n\n                    let fwd_markup_body = utils.markupBodyMessage(fwd_msg);\n\n                    let $f_message = $(templates.messages.forwarded(_.extend(attrs, {\n                        time: pretty_datetime(attrs.time),\n                        short_time: utils.pretty_short_month_date(attrs.time),\n                        username: username,\n                        avatar_id: avatar_id,\n                        avatar_url: avatar_url,\n                        message: fwd_markup_body,\n                        is_file: is_forward_file,\n                        is_location: is_forward_location,\n                        is_audio: is_fwd_voice_message,\n                        role: role,\n                        badge: badge,\n                        from_id: from_id\n                    })));\n\n                    if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                        $f_message.append($message.children('.right-side').clone());\n                    }\n\n                    if (fwd_msg.get('forwarded_message')) {\n                        let fwd_messages_count = fwd_msg.get('forwarded_message').length,\n                            fwd_messages_link = xabber.getQuantityString(\"forwarded_messages_count\", fwd_messages_count);\n                        $f_message.children('.msg-wrap').children('.fwd-msgs-block').append($('<a/>', {class: 'collapsed-forwarded-message', 'data-uniqueid': attrs.unique_id}).text(fwd_messages_link));\n                    }\n\n                    if (is_image_forward) {\n                        if (images_forward.length > 1) {\n                            template_for_images = this.createImageGrid(attrs);\n                            $f_message.find('.chat-msg-media-content').html(template_for_images);\n                            !xabber.settings.load_media && $f_message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                        }\n                        if (images_forward.length == 1) {\n                            $img_html_forward = this.createImage(images_forward[0]);\n                            $img_html_forward.onload = () => {\n                                this.imageOnload($message);\n                            };\n                            let img_content_forward = this.createImageContainer(images_forward[0]);\n                            $f_message.find('.chat-msg-media-content').html($(img_content_forward).html($img_html_forward));\n                            !xabber.settings.load_media && $f_message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                        }\n                    }\n                    if (is_forward_video) {\n                        let video_content = this.createVideoContainer();\n                        $f_message.find('.chat-msg-media-content').append(video_content);\n                        attrs.videos.forEach((video) => {\n                            let video_el = this.createVideo(video);\n                            $f_message.find('.video-content').append(video_el);\n                        });\n                        this.videoOnload($message);\n                        $f_message.removeClass('file-upload noselect');\n                    }\n\n                    if (is_forward_file) {\n                        if (attrs.files.length > 0) {\n                            let file_attrs = _.clone(attrs.files),\n                                template_for_file_content;\n                            $(file_attrs).each((idx, file) => {\n                                let copied_attrs = _.clone(file_attrs[idx]);\n                                if (file.type) {\n                                    if (file.voice)\n                                        is_audio = true;\n                                    else\n                                        is_audio = false;\n                                }\n                                ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                                let mdi_icon_class = utils.file_type_icon(file.type);\n                                _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size)});\n                                template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                                $f_message.find('.chat-msg-media-content').append(template_for_file_content);\n                                if (is_audio && $f_message.find('.link-file').length) {\n                                    let audio_player = {$audio_elem : $f_message.find('.link-file')[0]};\n                                    audio_player.msg_time = $message.attr('data-time');\n                                    audio_player.author = username;\n                                    audio_player.message_unique_id = $message.attr('data-uniqueid');\n                                    if (is_sender) {\n                                        if (this.model.get('group_chat')) {\n                                            if (this.contact.my_info) {\n                                                audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                                if (!audio_player.contact_avatar)\n                                                    audio_player.contact_avatar = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                                                else\n                                                    audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                            }\n                                        }\n                                        if (!audio_player.contact_avatar)\n                                            audio_player.contact_avatar = this.account.cached_image;\n                                    } else if (this.account.contacts.mergeContact({jid: from_jid})) {\n                                        let contact = this.account.contacts.mergeContact({jid: from_jid})\n                                        audio_player.contact_avatar = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($f_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n                                    }\n                                    if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                                        this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                                        xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                                        audio_player_list = audio_player_list.concat([audio_player]);\n                                    } else {\n                                        audio_player_list = message.get('msg_player_audios');\n                                    }\n                                    xabber.trigger('plyr_player_updated');\n                                }\n                            });\n                        }\n                    }\n                    if (is_forward_location) {\n                        if (attrs.locations.length > 0) {\n                            let location_attrs = _.clone(attrs.locations),\n                                template_for_location_content;\n                            $(location_attrs).each((idx, location) => {\n                                let copied_attrs = _.clone(location_attrs[idx]);\n                                _.extend(copied_attrs, { id: '_fwd' + Math.random().toString(36).substr(2, 9) });\n                                if (xabber.settings.mapping_service){\n                                    template_for_location_content = $(templates.messages.location(copied_attrs));\n                                    $f_message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                                    $f_message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                                    $f_message.find('.chat-msg-location-content').append(template_for_location_content);\n                                } else {\n                                    $f_message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                                }\n                            });\n                        }\n                    }\n                    if (attrs.link_references && attrs.link_references.length > 0) {\n                        let link_references_attrs = _.clone(attrs.link_references),\n                            template_for_link_reference_content,\n                            youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                            vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n                        $(link_references_attrs).each((idx, link) => {\n                            let copied_attrs = _.clone(link_references_attrs[idx]);\n                            copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                            if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                                copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                            if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                                copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                                copied_attrs.is_video = true;\n                                youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                                vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                            } else\n                                copied_attrs.is_video = false;\n                            template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                            $f_message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n                        });\n                    }\n                    if (fwd_msg.get('data_form')) {\n                        let data_form = utils.render_data_form(fwd_msg.get('data_form'));\n                        $f_message.find('.chat-msg-content').append(data_form);\n                    }\n                    $message.children('.msg-wrap').length ? $message.children('.msg-wrap').children('.fwd-msgs-block').append($f_message) : $message.children('.fwd-msgs-block').append($f_message);\n                });\n                this.updateScrollBar();\n                if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                    $message.children('.right-side').remove();\n                }\n            }\n            else\n                $message.find('.fwd-msgs-block').remove();\n\n            if (attrs.encrypted || this.model.get('encrypted') || has_encrypted_files) {\n                this.decryptImages(message, has_encrypted_files);\n            }\n\n            if (attrs.searched_message) {\n                let msg_text = '';\n                msg_text = (attrs.forwarded_message) ? (xabber.getQuantityString(\"forwarded_messages_count\", attrs.forwarded_message.length)) : '';\n                if (is_file && is_image && files.length && images.length)\n                    msg_text = xabber.getString(\"recent_chat__last_message__attachments\", [files.length + images.length]);\n                else {\n                    if (is_file && files.length == 1 && (files[0].is_audio || files[0].voice))\n                        msg_text = `${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(files[0].duration);\n                    else if (is_file && files.length > 0) {\n                        let total_size = 0;\n                        files.forEach((f) => {\n                            total_size += Number(f.size)\n                        });\n                        msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                    }\n                    if (is_image && images.length > 0) {\n                        let total_size = 0;\n                        images.forEach((f) => {\n                            total_size += Number(f.size)\n                        });\n                        msg_text = xabber.getQuantityString(\"recent_chat__last_message__images\", images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                    }\n                    if (is_location && locations.length > 0) {\n                        msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length);\n                    }\n                }\n                if (msg_text)\n                    $message.find('.chat-msg-content').text(msg_text)\n            }\n            message.set('msg_player_audios', audio_player_list);\n            return $message.hyperlinkify({selector: '.chat-text-content', embed_video: true}).emojify('.chat-text-content', {tag_name: 'div', emoji_size: utils.emoji_size(emoji)}).emojify('.chat-msg-author-badge', {emoji_size: 16});\n        },\n\n        getDateIndicator: function (date) {\n            let day_date = moment(date).startOf('day');\n            return $('<div class=\"chat-day-indicator one-line noselect\"' + (this.model.get('encrypted') ? (' data-trust=\"' + (this.bottom.$el.attr('data-trust') || this.bottom.$el.attr('data-contact-trust')) + '\"') : \"\") + ' data-time=\"'+\n                day_date.format('x')+'\">'+pretty_date(day_date)+'</div>');\n        },\n\n        initPlyrEmbedPlayer: function ($msg) {\n            let message = this.model.messages.get($msg.data('uniqueid')),\n                msg_players = [];\n            $msg.find('.plyr-video-container:not(.no-load)').each((idx, item) => {\n                if ($(item).hasClass('no-load'))\n                    return;\n                let existing_player = this.model.plyr_players.filter(obj => { return (obj.message_id === idx && obj.message_unique_id === $msg.attr('data-uniqueid'))}),\n                    player;\n                if (existing_player.length){\n                    player = existing_player[0]\n                    msg_players = msg_players.concat([player]);\n                } else {\n                    player = {video_src: $(item).attr('data-src')}\n                    player.provider = $(item).attr('data-provider');\n                    player.msg_time = $msg.attr('data-time');\n                    player.chat_item = this.model.item_view;\n                    player.message_id = idx;\n                    player.message_unique_id = $msg.attr('data-uniqueid');\n                    this.model.plyr_players = this.model.plyr_players.concat([player]).sort((a, b) => a.msg_time - b.msg_time);\n                    xabber.plyr_players = xabber.plyr_players.concat([player]);\n                    msg_players = msg_players.concat([player]);\n                }\n                $(item).attr('data-message-id', player.message_id);\n                $(item).addClass('no-load');\n                if (xabber.current_plyr_player && xabber.current_plyr_player.player_item)\n                    if (xabber.current_plyr_player.player_item.message_id === player.message_id && xabber.current_plyr_player.player_item.message_unique_id === player.message_unique_id)\n                        $(item).addClass('active-plyr-container');\n            });\n            msg_players.length && message.set('msg_player_videos', msg_players);\n            xabber.trigger('plyr_player_updated');\n        },\n\n        hideMessageAuthor: function ($msg) {\n            $msg.removeClass('with-author');\n        },\n\n        showMessageAuthor: function ($msg) {\n            if ($msg.hasClass('system'))\n                return;\n            $msg.addClass('with-author');\n            let image, $avatar = $msg.find('.left-side .circle-avatar'),\n                from_jid = $msg.data('from');\n            if (from_jid === this.account.get('jid')) {\n                if (this.model.get('group_chat')) {\n                    if (this.contact.my_info) {\n                        image = this.contact.my_info.get('b64_avatar');\n                        if (!image) {\n                            if (this.account.cached_image)\n                                image = this.account.cached_image;\n                            !image && (image = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                        } else\n                            image = Images.getCachedImage(image);\n                    }\n                }\n                if (!image)\n                    image = this.account.cached_image;\n            } else {\n                if (this.model.get('group_chat')) {\n                    let author = $msg.find('.msg-wrap .chat-msg-author').text();\n                    image = Images.getDefaultAvatar(author);\n                }\n                else {\n                    let author = this.account.contacts.get($msg.data('from')) || $msg.find('.msg-wrap .chat-msg-author').text() || $msg.data('from');\n                    image = author.cached_image || Images.getDefaultAvatar(author);\n                }\n            }\n            $avatar.setAvatar(image, this.avatar_size);\n            if ($msg.data('avatar')) {\n                if ($msg.data('from-id')) {\n                    if (this.account.chat_settings.getHashAvatar($msg.data('from-id')) == $msg.data('avatar') && (this.account.chat_settings.getB64Avatar($msg.data('from-id')))) {\n                        $avatar.setAvatar(this.account.chat_settings.getB64Avatar($msg.data('from-id')), this.avatar_size);\n                    }\n                    else {\n                        let pending_avatar = this._pending_avatars.find(a => a.hash == $msg.data('avatar'));\n                        if (pending_avatar) {\n                            pending_avatar.dfd.done((data_avatar) => {\n                                $avatar.setAvatar(data_avatar, this.avatar_size);\n                                let idx = this._pending_avatars.indexOf(pending_avatar);\n                                if (idx > -1)\n                                    this._pending_avatars.splice(idx, 1);\n                            });\n                        } else {\n                            if($msg.data('avatar-url')){\n                                $avatar.setAvatar($msg.data('avatar-url'), this.avatar_size);\n                                this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), $msg.data('avatar-url'));\n                            }\n                            else\n                            {\n                                let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $msg.data('from-id'), dfd = new $.Deferred();\n                                this._pending_avatars.push({hash: $msg.data('avatar'), dfd: dfd});\n                                this.contact.getAvatar($msg.data('avatar'), node, (data_avatar) => {\n                                    $avatar.setAvatar(data_avatar, this.avatar_size);\n                                    this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), data_avatar);\n                                    dfd.resolve(data_avatar);\n                                });\n\n                            }\n                        }\n                    }\n                }\n            }\n        },\n\n        hideFwdMessageAuthor: function ($msg) {\n            $msg.removeClass('with-author');\n        },\n\n        showFwdMessageAuthor: function ($fwd_message) {\n            if (!$fwd_message.length)\n                return;\n            $fwd_message.addClass('with-author');\n            let image,\n                $avatar = $fwd_message.find('.circle-avatar'),\n                from_jid = $fwd_message.data('from'),\n                is_sender = (from_jid === this.account.get('jid')),\n                contact = this.account.contacts.get(from_jid) || from_jid;\n            if (is_sender) {\n                if (this.model.get('group_chat')) {\n                    if (this.contact.my_info) {\n                        image = this.contact.my_info.get('b64_avatar');\n                        if (!image)\n                            image = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                        else\n                            image = Images.getCachedImage(image);\n                    }\n                }\n                if (!image)\n                    image = this.account.cached_image;\n            } else if (contact) {\n                image = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($fwd_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n            }\n            $avatar.setAvatar(image, this.avatar_size);\n            $avatar.removeClass('hidden');\n            if ($fwd_message.data('avatar')) {\n                if ($fwd_message.data('from-id')) {\n                    if ((this.account.chat_settings.getHashAvatar($fwd_message.data('from-id')) == $fwd_message.data('avatar')) && (this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')))) {\n                        $avatar.setAvatar(this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')), this.avatar_size);\n                    }\n                    else {\n                        if($fwd_message.data('avatar-url')){\n                            $avatar.setAvatar($fwd_message.data('avatar-url'), this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), $fwd_message.data('avatar-url'));\n                        }\n                        else {\n                            let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $fwd_message.data('from-id');\n                            this.contact && this.contact.getAvatar($fwd_message.data('avatar'), node, (data_avatar) => {\n                                $avatar.setAvatar(data_avatar, this.avatar_size);\n                                this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), data_avatar);\n                            });\n                        }\n                    }\n                }\n            }\n        },\n\n        updateMessageInChat: function (msg_elem) {\n            let $msg = $(msg_elem);\n            $msg.prev('.chat-day-indicator').remove();\n            if ($msg.find('.plyr-video-container').length) {\n                this.initPlyrEmbedPlayer($msg);\n            }\n            let $prev_msg = $msg.prevAll('.chat-message').first();\n            if (!$prev_msg.length) {\n                this.getDateIndicator($msg.data('time')).insertBefore($msg);\n                this.showMessageAuthor($msg);\n                $msg.find('.fwd-message').each((idx, fwd_msg_item) => {\n                    this.showFwdMessageAuthor($(fwd_msg_item));\n                });\n                return;\n            }\n            if ($msg.find('.data-form').length) {\n                this.showMessageAuthor($msg);\n                return;\n            }\n            let is_system = $prev_msg.hasClass('system'),\n                is_same_sender = ($msg.data('from') === $prev_msg.data('from')),\n                is_same_date = moment($msg.data('time')).startOf('day')\n                        .isSame(moment($prev_msg.data('time')).startOf('day'));\n            if (!is_same_date) {\n                this.getDateIndicator($msg.data('time')).insertBefore($msg);\n                this.showMessageAuthor($msg);\n            } else if (is_system || !is_same_sender || $prev_msg.hasClass('saved-main')) {\n                this.showMessageAuthor($msg);\n            } else {\n                this.hideMessageAuthor($msg);\n            }\n            if ($msg.hasClass('forwarding')) {\n                let $fwd_message = $msg.find('.fwd-message');\n                $fwd_message.each((idx, fwd_msg_item) => {\n                    let $fwd_msg_item = $(fwd_msg_item),\n                        $prev_fwd_message = (idx > 0) ? $fwd_msg_item.prev() : [];\n                    $fwd_msg_item.switchClass('hide-date', is_same_date && $prev_fwd_message.length);\n                    $fwd_msg_item.removeClass('hide-time');\n                    if ($prev_fwd_message.length) {\n                        let is_same_fwded_sender = ($fwd_msg_item.data('from') === $prev_fwd_message.data('from'));\n                        if (is_same_fwded_sender) {\n                            this.hideFwdMessageAuthor($fwd_msg_item);\n                        } else {\n                            this.showFwdMessageAuthor($fwd_msg_item);\n                        }\n                    } else {\n                        this.showMessageAuthor($msg);\n                        this.showFwdMessageAuthor($fwd_msg_item);\n                    }\n                });\n            }\n        },\n\n        notifyMessage: function (message) {\n            if (xabber.settings.notifications && ((xabber.settings.notifications_private && !this.model.get('group_chat')) || (xabber.settings.notifications_group && this.model.get('group_chat')))) {\n                let notification_text;\n                if ((this.model.get('group_chat') && xabber.settings.message_preview_group) || (!this.model.get('group_chat') && xabber.settings.message_preview_private))\n                    notification_text = message.getText();\n                else\n                    notification_text = xabber.getString(\"notification__text_sent_a_message\");\n                let notification = xabber.popupNotification({\n                    title: this.contact.get('name'),\n                    text: notification_text,\n                    icon: this.contact.cached_image.url\n                });\n                notification.onclick = () => {\n                    window.focus();\n                    this.model.trigger('open');\n                };\n            }\n            if (xabber.settings.group_sound && xabber.settings.notifications_group && this.model.get('group_chat')) {\n                let sound;\n                if (message.get('auth_request')) {\n                    sound = xabber.settings.sound_on_auth_request;\n                } else {\n                    sound = xabber.settings.sound_on_group_message;\n                }\n                xabber.playAudio(sound, false, xabber.settings.notifications_volume);\n            }\n            else if (xabber.settings.private_sound && xabber.settings.notifications_private && !this.model.get('group_chat')) {\n                let sound;\n                if (message.get('auth_request')) {\n                    sound = xabber.settings.sound_on_auth_request;\n                } else {\n                    sound = xabber.settings.sound_on_private_message;\n                }\n                xabber.playAudio(sound, false, xabber.settings.notifications_volume);\n            }\n            xabber.recountAllMessageCounter();\n        },\n\n          attentionMessage: function () {\n              let notification = xabber.popupNotification({\n                  title: this.contact.get('name'),\n                  text: xabber.getString(\"chats_attention\"),\n                  icon: this.contact.cached_image.url\n              });\n              notification.onclick = () => {\n                  window.focus();\n                  this.model.trigger('open');\n              };\n              let sound = xabber.settings.sound_on_attention;\n              xabber.playAudio(sound);\n          },\n\n        sendMessage: function (message) {\n            let body = message.get('message'),\n                legacy_body = '',\n                mutable_content = [],\n                forwarded_message = message.get('forwarded_message'),\n                unique_id = message.get('unique_id'),\n                msg_id = message.get('msgid'),\n                link_references = message.get('link_references'),\n                stanza = $msg({\n                    to: this.model.get('jid'),\n                    type: 'chat',\n                    id: msg_id\n                });\n\n            if (forwarded_message) {\n                legacy_body = [];\n                $(forwarded_message).each((idx, fwd_msg) => {\n                    let legacy_fwd_msg = Array.from(_.escape(_.unescape(this.bottom.createTextMessage([fwd_msg], \">\"))) + ((idx === forwarded_message.length - 1 && !body.length) ? \"\" : '\\n')),\n                        idx_begin = legacy_body.length,\n                        fwd = $(fwd_msg.get('xml')).clone(),\n                        idx_end = legacy_body.concat(legacy_fwd_msg).length;\n                    if (!fwd.attr('from'))\n                        fwd.attr('from', this.account.get('jid'));\n                    stanza.c('reference', {\n                        xmlns: Strophe.NS.REFERENCE,\n                        type: 'mutable',\n                        begin: idx_begin,\n                        end: idx_end\n                    })\n                        .c('forwarded', {xmlns: 'urn:xmpp:forward:0'})\n                        .c('delay', {\n                            xmlns: 'urn:xmpp:delay',\n                            stamp: fwd_msg.get('time')\n                        }).up().cnode(fwd[0]).up().up().up();\n                    legacy_body = legacy_body.concat(legacy_fwd_msg);\n                    mutable_content.push({\n                        start: idx_begin,\n                        end: idx_end,\n                        type: 'forward'\n                    });\n                });\n                body = _.unescape(legacy_body.join(\"\")) + body;\n            }\n\n            if (message.get('mentions') && message.get('mentions').length) {\n                message.get('mentions').forEach((mention) => {\n                    let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n                    mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n                    stanza.c('reference', {\n                        xmlns: Strophe.NS.REFERENCE,\n                        begin: mention.start + legacy_body.length,\n                        end: mention.end + legacy_body.length,\n                        type: 'decoration',\n                    })\n                        .c('mention', mention_attrs).t(mention.target).up().up();\n                });\n            }\n\n            if (message.get('markups')) {\n                message.get('markups').forEach((markup) => {\n                    stanza.c('reference', {\n                        xmlns: Strophe.NS.REFERENCE,\n                        begin: markup.start + legacy_body.length,\n                        end: markup.end + legacy_body.length,\n                        type: 'decoration'\n                    });\n                    for (let idx in markup.markup) {\n                        stanza.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n                    }\n                    stanza.up();\n                });\n            }\n\n            if (message.get('blockquotes')) {\n                message.get('blockquotes').forEach((blockquote) => {\n                    stanza.c('reference', {\n                        xmlns: Strophe.NS.REFERENCE,\n                        begin: blockquote.start + legacy_body.length,\n                        end: blockquote.end + legacy_body.length,\n                        type: 'decoration'\n                    })\n                        .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n                });\n            }\n\n            if (message.get('type') == 'file_upload') {\n                let files = message.get('files') || [],\n                    images = message.get('images') || [],\n                    videos = message.get('videos') || [],\n                    all_files = files.concat(images);\n                all_files = all_files.concat(videos)\n                all_files.forEach((file, idx) => {\n                    (idx === 0) && (body += '\\n');\n                    legacy_body = file.sources[0] + ((idx != all_files.length - 1) ? '\\n' : \"\");\n                    let start_idx = Array.from(_.escape(body)).length,\n                        end_idx = start_idx + legacy_body.length;\n                    stanza.c('reference', {\n                        xmlns: Strophe.NS.REFERENCE,\n                        type: 'mutable',\n                        begin: start_idx,\n                        end: end_idx\n                    });\n                    file.voice && stanza.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                    stanza.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                    file.type && stanza.c('media-type').t(file.type).up();\n                    file['id'] && stanza.c('gallery-id').t(file['id']).up();\n                    file.thumbnail && stanza.c('thumbnail-uri').t(file.thumbnail).up();\n                    file.created && stanza.c('created').t(file.created).up();\n                    file.name && stanza.c('name').t(file.name).up();\n                    file.size && stanza.c('size').t(file.size).up();\n                    file.height && stanza.c('height').t(file.height).up();\n                    file.width && stanza.c('width').t(file.width).up();\n                    file.duration && stanza.c('duration').t(file.duration).up();\n                    file.description && stanza.c('desc').t(file.description).up();\n                    stanza.up().c('sources');\n                    file.sources.forEach((u) => {\n                        if (file.key)\n                            u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                        stanza.c('uri').t(u).up();\n                    });\n                    stanza.up().up().up();\n                    file.voice && stanza.up();\n                    body += legacy_body;\n                    mutable_content.push({start: start_idx, end: end_idx});\n                });\n                message.set({type: 'main'});\n            }\n\n            if (link_references && link_references.length) {\n                link_references.forEach((link_reference, idx) => {\n                    if (link_reference.start === -1) {\n                        link_reference.start = Array.from(_.escape(body)).length;\n                        body = body + '\\n' + link_reference.original_text;\n                        link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                    }\n                    stanza.c('reference', {\n                        xmlns: Strophe.NS.REFERENCE,\n                        begin: link_reference.start,\n                        end: link_reference.end,\n                        type: 'mutable',\n                    }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                    link_reference.site && stanza.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                    link_reference.type && stanza.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                    link_reference.title && stanza.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                    link_reference.url && stanza.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                    link_reference.description && stanza.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                    link_reference.image && stanza.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                    link_reference.image_width && stanza.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                    link_reference.image_height && stanza.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                    link_reference.video_url && stanza.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                    stanza.up().up();\n                    mutable_content.push({start: link_reference.start, end: link_reference.end});\n                });\n            }\n\n            mutable_content.length && message.set({mutable_content: mutable_content});\n\n            this.account._pending_messages.push({chat_hash_id: this.model.id, unique_id: unique_id});\n\n            message.set('original_message', body);\n            body && stanza.c('body').t(body).up();\n            stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n                .c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n            message.set({xml: $(stanza.tree()).clone()[0]});\n            if (message.get('state') === constants.MSG_ERROR) {\n                stanza.c('retry', {xmlns: Strophe.NS.DELIVERY}).up();\n                message.set('state', constants.MSG_PENDING);\n            }\n            if (stanza.toString().length >= constants.STANZA_MAX_SIZE) {\n                utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n                this.removeMessage(message);\n                return;\n            }\n            if (message.get('encrypted') && this.account.omemo) {\n                stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n                if ($(stanza.tree()).children('body').length) {\n                    stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                    $(stanza.tree()).children('body').detach()\n                }\n                if ($(stanza.tree()).children('reference').length) {\n                    $(stanza.tree()).children('reference').each((idx, reference) => {\n                        stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                    });\n                    $(stanza.tree()).children('reference').detach()\n                }\n                stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n                stanza.c('from', {jid: this.account.get('jid')}).up().up()\n                this.account.omemo.encrypt(this.contact, stanza).then((msg) => {\n                    if (msg) {\n                        stanza = msg.message;\n                        message.set('trusted', msg.is_trusted);\n                    }\n                    let msg_sending_timestamp = moment.now();\n                    this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n                });\n                return;\n            } else {\n                let msg_sending_timestamp = moment.now();\n                this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n            }\n        },\n\n          msgCallback: function (msg_sending_timestamp, message) {\n              this.bottom.click_counter = 0;\n              this.bottom.setDefaultPlaceholder();\n              if (!this.model.get('group_chat') && !this.account.server_features.get(Strophe.NS.DELIVERY)) {\n                  setTimeout(() => {\n                      if ((this.account.last_stanza_timestamp > msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING)) {\n                          message.set('state', constants.MSG_SENT);\n                      } else {\n                          this.account.connection.ping.ping(this.account.get('jid'), () => {\n                              (message.get('state') === constants.MSG_PENDING) && message.set('state', constants.MSG_SENT);\n                          });\n                          setTimeout(() => {\n                              if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING))\n                                  message.set('state', constants.MSG_ERROR);\n                          }, 5000);\n                      }\n                  }, 1000);\n              }\n              else {\n                  let _pending_time = 5, was_reconnecting;\n                  this.account.session.once('change:reconnecting', () => {\n                      console.log('change reconnecting');\n                      console.log(this.account.session.get('reconnecting'));\n                      was_reconnecting = true;\n                  })\n                  let _interval = setInterval(() => {\n                      console.log(was_reconnecting);\n                      if (_pending_time >= 10 && message.get('state') === constants.MSG_PENDING && !was_reconnecting){\n                          console.log('ping on message pending');\n                          this.account.connection.ping.ping(this.account.get('jid'), () => {},  () => {\n                              console.log('message initiated reconnection');\n                              console.log(message);\n                              this.account.connection.disconnect();\n                          }, 5000);\n                      }\n                      if (((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 40) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 40)) && !was_reconnecting) {\n                          message.set('state', constants.MSG_ERROR);\n                          clearInterval(_interval);\n                      }\n                      else if (message.get('state') !== constants.MSG_PENDING)\n                          clearInterval(_interval);\n                      _pending_time += 10;\n                  }, 10000);\n              }\n          },\n\n        initJingleMessage: function (media_type) {\n            xabber.current_voip_call && xabber.current_voip_call.destroy();\n            media_type = media_type || {};\n            media_type = media_type.video ? 'video' : 'audio';\n            let session_id = uuid();\n            xabber.current_voip_call = new xabber.JingleMessage({session_id: session_id, video_live: media_type === 'video'}, {contact: this.contact});\n            xabber.current_voip_call.startCall();\n            xabber.current_voip_call.modal_view.show({status: constants.JINGLE_MSG_PROPOSE});\n            xabber.trigger('update_jingle_button');\n        },\n\n        saveForwardedMessage: function (msg) {\n            let forwarded_message = null;\n            if ($(msg).get('forwarded_message')) {\n                forwarded_message = $(msg).get('forwarded_message');\n                if (this.account.forwarded_messages.indexOf(forwarded_message) < 0) {\n                    forwarded_message = this.saveForwardedMessage(forwarded_message);\n                }\n            }\n            msg = this.account.forwarded_messages.create(_.extend({\n                is_forwarded: true,\n                forwarded_message: forwarded_message\n            }, msg.attributes));\n            return msg;\n        },\n\n        onSubmit: function (text, fwd_messages, options) {\n            // send forwarded messages before\n            options = options || {};\n            let attrs = {\n                from_jid: this.account.get('jid'),\n                message: text,\n                mentions: options.mentions,\n                blockquotes: options.blockquotes,\n                markups: options.markup_references,\n                files: options.attached_files,\n                link_references: options.link_references,\n                encrypted: this.model.get('encrypted'),\n                submitted_here: true,\n                forwarded_message: null\n            }, _dfd_info = new $.Deferred();\n            _dfd_info.done(() => {\n                if (!fwd_messages.length && !(attrs.files && attrs.files.length) && !(attrs.link_references && attrs.link_references.length) && text.removeEmoji() === \"\")\n                    attrs.only_emoji = Array.from(text).length;\n                if (fwd_messages.length) {\n                    let new_fwd_messages = [];\n                    _.each(fwd_messages, (msg) => {\n                        if (this.account.forwarded_messages.indexOf(msg) < 0) {\n                            msg = this.saveForwardedMessage(msg);\n                        }\n                        new_fwd_messages.push(msg);\n                    });\n                    attrs.forwarded_message = new_fwd_messages;\n                    if (attrs.files && attrs.files.length) {\n                        attrs.type = 'file_upload';\n                        this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                        this.model.messages.create(attrs);\n                    } else {\n                        let message = this.model.messages.create(attrs);\n                        this.sendMessage(message);\n                    }\n                } else if (attrs.files && attrs.files.length) {\n                    attrs.type = 'file_upload';\n                    this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                    this.model.messages.create(attrs);\n                } else if (text || (attrs.link_references && attrs.link_references.length)) {\n                    let message = this.model.messages.create(attrs);\n                    this.sendMessage(message);\n                }\n                if (this.contact && this.model.get('archived') && !this.model.isMuted()) {\n                    message.set('muted', false);\n                    this.head.archiveChat();\n                    this.model.set('archived', false);\n                    xabber.chats_view.updateScreenAllChats();\n                }\n                if (this.model.get('group_chat') && xabber.toolbar_view.$('.active').hasClass('chats'))\n                    if (this.contact && !this.model.isMuted() && !this.model.get('archived'))\n                        xabber.chats_view.updateScreenAllChats();\n                xabber.chats_view.scrollToTop();\n                xabber.chats_view.clearSearch();\n            });\n\n            if (this.contact && this.contact.get(\"group_chat\") && !this.contact.my_info)\n                this.contact.getMyInfo(() => {\n                    _dfd_info.resolve();\n                });\n            else\n                _dfd_info.resolve();\n        },\n\n        addFileMessage: function (files, is_voice) {\n            let new_files = [], file_counter = 0;\n            if (this.model.messages_view)\n                if (this.model.messages_view.data.get('visible'))\n                    this.model.messages_view.openChat();\n            if (files.length > 10 && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n                utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n                return;\n            }\n            let http_upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n            if (!http_upload_service && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n                utils.dialogs.error(xabber.getString(\"error_file_upload_not_support\", [this.account.domain]));\n                return;\n            }\n            let deferred_all = new $.Deferred();\n            deferred_all.done((data) => {\n                if (is_voice) {\n                    this.model.messages.create({\n                        from_jid: this.account.get('jid'),\n                        type: 'file_upload',\n                        files: data,\n                        encrypted: this.model.get('encrypted'),\n                        upload_service: http_upload_service.get('from'),\n                        message: '',\n                        submitted_here: true\n                    });\n                } else\n                    this.bottom.addFileSnippets(data);\n            });\n            $(files).each((idx, file) => {\n                if (utils.isImageType(file.type)) {\n                    let reader = new FileReader(), deferred = new $.Deferred();\n                    Images.compressImage(file).done((image) => {\n                        reader.readAsDataURL(image);\n                        deferred.done((data) => {\n                            if (data) {\n                                image.height = data.height;\n                                image.width = data.width;\n                            }\n                            if (data.encrypted_file)\n                                new_files.push(data.encrypted_file);\n                            else\n                                new_files.push(image);\n                            file_counter++;\n                            if (file_counter === files.length)\n                                deferred_all.resolve(new_files);\n                        });\n                    });\n                    reader.onload = (e) => {\n                        if (this.model.get('encrypted')) {\n                            this.encryptFile(e.target.result).then((encrypted) => {\n                                let key = encrypted.keydata,\n                                    new_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                                new_file.key = key;\n                                if (new_file.type === 'image/svg+xml') {\n                                    deferred.resolve({encrypted_file: new_file,key: key});\n                                } else {\n                                    let image_prev = new Image();\n                                    image_prev.onload = function () {\n                                        let height = this.height,\n                                            width = this.width;\n                                        new_file.image_prev = image_prev;\n                                        deferred.resolve({height: height, width: width, encrypted_file: new_file, key: key});\n                                    };\n                                    image_prev.src = e.target.result;\n                                }\n                            });\n                        } else {\n                            if (file.type === 'image/svg+xml') {\n                                deferred.resolve({});\n                            } else {\n                                let image_prev = new Image();\n                                image_prev.onload = function () {\n                                    let height = this.height,\n                                        width = this.width;\n                                    deferred.resolve({height: height, width: width});\n                                };\n                                image_prev.src = e.target.result;\n                            }\n                        }\n                    };\n                }\n                else {\n                    if (this.model.get('encrypted')) {\n                        let reader = new FileReader();\n                        reader.onload = (e) => {\n                            this.encryptFile(e.target.result).then((encrypted) => {\n                                let key = encrypted.keydata,\n                                    encrypted_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                                file.voice && (encrypted_file.voice = true);\n                                file.duration && (encrypted_file.duration = file.duration);\n                                encrypted_file.key = key;\n                                new_files.push(encrypted_file);\n                                file_counter++;\n                                if (file_counter === files.length)\n                                    deferred_all.resolve(new_files);\n                            });\n                        };\n                        reader.readAsDataURL(file);\n                    } else {\n                        new_files.push(file);\n                        file_counter++;\n                        if (file_counter === files.length)\n                            deferred_all.resolve(new_files);\n                    }\n                }\n            });\n        },\n\n        startUploadFile: function (message, $message) {\n            $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n            $message.find('.repeat-upload').hide();\n            $message.find('.status').hide();\n            $message.find('.progress').show();\n            $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n            $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n            $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n            $message.find('.msg-delivering-state').addClass('no-click');\n            let files_count = 0;\n            $(message.get('files')).each((idx, file) => {\n                let enc_file = new File([file], file.name);\n                enc_file.key && (delete enc_file.key);\n                let iq = $iq({type: 'get', to: message.get('upload_service')})\n                        .c('request', {xmlns: Strophe.NS.HTTP_UPLOAD})\n                        .c('filename').t(enc_file.name).up()\n                        .c('size').t(enc_file.size).up()\n                        .c('content-type').t(enc_file.type).up(),\n                    deferred = new $.Deferred(), self = this;\n                this.account.sendIQFast(iq,\n                    function (result) {\n                        let $slot = $(result).find(`slot[xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`);\n                        deferred.resolve({\n                            get_url: $slot.find('get').text(),\n                            put_url: $slot.find('put').text()\n                        });\n                    },\n                    function (err) {\n                        let error_text = $(err).find(`error text[xml\\\\:lang=\"${xabber._settings.get('language')}\"]`).text(),\n                            error_type = $(err).find('error').attr('type');\n                        !error_text && (error_text = $(err).find(`error text`).text());\n                        self.onFileNotUploaded(message, $message, error_text, 'xmpp');\n                    }\n                );\n                let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                    if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                        message.set('state', constants.MSG_ERROR);\n                        clearInterval(_interval);\n                    }\n                    else if (message.get('state') !== constants.MSG_PENDING)\n                        clearInterval(_interval);\n                    _pending_time += 10;\n                }, 10000);\n                deferred.done((data) => {\n                    clearInterval(_interval);\n                    let xhr = new XMLHttpRequest(),\n                        $bar = $message.find('.progress');\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').click(() => {\n                        xhr.abort();\n                    });\n                    xhr.onabort = () => {\n                        this.removeMessage($message);\n                    };\n                    xhr.upload.onprogress = (event) => {\n                        let percentage = event.loaded / event.total;\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n                    };\n                    xhr.onload = xhr.onerror = function () {\n                        if (this.status === 201) {\n                            message.get('files')[idx].url = data.get_url;\n                            files_count++;\n                            if (files_count == message.get('files').length) {\n                                self.onFileUploaded(message, $message);\n                            }\n                        } else {\n                            self.onFileNotUploaded(message, $message, this.responseText, 'http');\n                        }\n                    };\n                    if ($message.data('cancel')) {\n                        xhr.abort();\n                    } else {\n                        xhr.open(\"PUT\", data.put_url, true);\n                        xhr.send(enc_file);\n                    }\n                });\n            });\n        },\n\n        startGalleryUploadFile: function (message, $message) {\n            $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n            message.set('files', message.get('files').filter((element) => { return element != null}) );\n            let files_count = 0,\n                cancelled_files_count = 0,\n                self = this,\n                is_error = false,\n                xhr_requests = [],\n                msg_files_count = message.get('files').length;\n            $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n            $message.find('.uploaded-file').removeClass('uploaded-file');\n            $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n            $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n            $message.find('.msg-delivering-state').addClass('no-click');\n            $(message.get('files')).each((idx, file) => {\n                if (is_error)\n                    return;\n                if (file.key) {\n                    file = new File([file], file.name);\n                    delete file.key\n                }\n                let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                    if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                        message.set('state', constants.MSG_ERROR);\n                        clearInterval(_interval);\n                    }\n                    else if (message.get('state') !== constants.MSG_PENDING)\n                        clearInterval(_interval);\n                    _pending_time += 10;\n                }, 10000);\n\n                let formData = new FormData();\n                formData.append('file', file, file.name);\n                if (file.duration)\n                    formData.append('duration', file.duration);\n                if (file.voice)\n                    formData.append('media_type', file.type + '+voice');\n                else\n                    formData.append('media_type', file.type);\n                clearInterval(_interval);\n                message.get('files')[idx].is_errored = false;\n                let xhr = new XMLHttpRequest(),\n                    $bar = $message.find('.progress');\n                xhr.formData = formData;\n                xhr_requests = xhr_requests.concat([xhr]);\n                xhr.arrayIndex = xhr_requests.indexOf(xhr);\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').one(\"click\",() => {\n                    cancelled_files_count++;\n                    if (xhr.is_uploading)\n                        xhr.abort();\n                    else {\n                        if ((msg_files_count - cancelled_files_count) == 0) {\n                            message.set('files', []);\n                            self.bottom.setEditedMessageAttachments(message, true);\n                            self.bottom.setRedactedUploadMessage(message);\n                            self.removeMessage($message);\n                        } else {\n                            xhr.is_cancelled = true;\n                            $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                            message.get('files')[idx] = null;\n                        }\n                    }\n                });\n                xhr.upload.onprogress = (event) => {\n                    let percentage = event.loaded / event.total;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n                };\n                xhr.onload = xhr.onerror = xhr.onabort = function () {\n                    if (this.status === 200) {\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('mdi-check').removeClass('mdi-close');\n                        let response = JSON.parse(this.response)\n                        message.get('files')[idx].id = response.id;\n                        message.get('files')[idx].created_at = response.created_at;\n                        (response.thumbnail && response.thumbnail.url) && (message.get('files')[idx].thumbnail = response.thumbnail.url);\n                        message.get('files')[idx].url = response.file;\n                        files_count++;\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('uploaded-file');\n                        while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                            files_count++;\n                        }\n                        if (files_count == message.get('files').length) {\n                            self.onFileUploaded(message, $message);\n                        } else if (xhr_requests[files_count]){\n                            self.account.testGalleryTokenExpire(() => {\n                                if (!is_error) {\n                                    xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                    xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'))\n                                    xhr_requests[files_count].is_uploading = true;\n                                    xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                }\n                            });\n                        }\n                    } else {\n                        if (this.status === 0 && is_error)\n                            return;\n                        if ((msg_files_count - cancelled_files_count) == 0 && this.status === 0){\n                            message.set('files', []);\n                            self.bottom.setEditedMessageAttachments(message, true);\n                            self.bottom.setRedactedUploadMessage(message);\n                            self.removeMessage($message);\n                        } else {\n                            let response_text;\n                            self.account.handleCommonGalleryErrors(this.response)\n                            if (this.status === 500)\n                                response_text = this.statusText;\n                            else if (this.status === 400)\n                                response_text = JSON.parse(this.response).error;\n                            else if (this.status === 0) {\n                                $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                            };\n                            (this.status === 0) && (message.get('files')[idx] = null);\n                            files_count++;\n                            if (this.status != 0) {\n                                if (!$message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').closest('.img-content-template.hidden').length){\n                                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                                } else {\n                                    $message.find('.hidden-images .circle-percent-text').text(response_text);\n                                    $message.find('.hidden-images .mdi-alert-circle').removeClass('hidden');\n                                    $message.find('.hidden-images .mdi-alert-circle').prop('title', response_text);\n                                    $message.find('.hidden-images .mdi-center-loading-indicator').addClass('hidden');\n                                    $message.find('.hidden-images').addClass('upload-error');\n                                    $message.find('.hidden-images').css({ 'border-color': '#EF9A9A'});\n                                }\n                                message.get('files')[idx].is_errored = true;\n                                is_error = true;\n                                $(xhr_requests).each((idx, request) => {\n                                    request.abort();\n                                })\n                                self.onFileNotUploaded(message, $message, response_text);\n                            }\n                            else if (files_count == msg_files_count) {\n                                self.onFileUploaded(message, $message);\n                            } else {\n                                while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                                    files_count++;\n                                }\n                                if (files_count == msg_files_count) {\n                                    self.onFileUploaded(message, $message);\n                                } else {\n                                    self.account.testGalleryTokenExpire(() => {\n                                        if (!is_error) {\n                                            xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                            xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'))\n                                            xhr_requests[files_count].is_uploading = true;\n                                            xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                        }\n                                    });\n                                }\n                            }\n                        }\n                    }\n                };\n            });\n            if (xhr_requests.length){\n                if ($message.data('cancel')) {\n                    xhr_requests[0].abort();\n                } else {\n                    this.account.testGalleryTokenExpire(() => {\n                        if (!is_error) {\n                            xhr_requests[0].open(\"POST\", this.account.get('gallery_url') + 'v1/files/upload/', true);\n                            xhr_requests[0].setRequestHeader(\"Authorization\", 'Bearer ' + this.account.get('gallery_token'))\n                            xhr_requests[0].is_uploading = true;\n                            xhr_requests[0].send(xhr_requests[0].formData);\n                        }\n                    });\n                }\n            }\n\n        },\n\n          encryptFile: async function (file) {\n            return await utils.AES.encrypt(file);\n          },\n\n        onFileUploaded: function (message, $message) {\n            $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n            $message.find('.msg-delivering-state').removeClass('no-click');\n            message.set('files', message.get('files').filter((element) => { return element != null}) );\n            let files = message.get('files'),\n                self = this, is_audio = false,\n                images = [], files_ = [], videos = [];\n            if (!files.length)\n                this.onFileNotUploaded(message, $message)\n            $(files).each((idx, file_) => {\n                let file_new_format = {\n                    name: file_.name,\n                    type: file_.type,\n                    size: file_.size,\n                    description: file_.description || '',\n                    sources: [file_.url]\n                };\n                file_.key && (file_new_format.key = file_.key);\n                file_.voice && (file_new_format.voice = true);\n                if (this.account.get('gallery_token') && this.account.get('gallery_url')){\n                    _.extend(file_new_format, { id: file_.id, created: file_.created_at, thumbnail: file_.thumbnail });\n                }\n                if (utils.isImageType(file_.type)) {\n                    _.extend(file_new_format, { width: file_.width, height: file_.height });\n                    images.push(file_new_format);\n                }\n                else if (utils.isVideoType(file_.type)) {\n                    _.extend(file_new_format, { duration: file_.duration});\n                    videos.push(file_new_format);\n                }\n                else {\n                    _.extend(file_new_format, { duration: file_.duration});\n                    files_.push(file_new_format);\n                }\n            });\n            $message.find('.unuploaded-images').remove();\n            $message.find('.unuploaded-file').remove();\n            //  loaded and send image\n            if (images.length > 0) {\n                if (images.length > 1) {\n                    let template_for_images;\n                    if (images.length > 6) {\n                        let tpl_name = 'template-for-6',\n                            hidden_images = images.length - 5;\n                        !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                        template_for_images.find('.last-image').addClass('hidden-images');\n                        template_for_images.find('.image-counter').text('+' + hidden_images);\n                    }\n                    else {\n                        let tpl_name = 'template-for-' + images.length;\n                        !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + images.length)\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                    }\n                    if (!xabber.settings.load_media) {\n                        template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n                    }\n                    $message.removeClass('file-upload noselect');\n                    $message.find('.chat-msg-media-content .chat-file-info').remove();\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_images);\n                    !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                }\n                else {\n                    let img = this.createImage(images[0]),\n                        img_content = self.createImageContainer(images[0]);\n                    img.onload = () => {\n                        this.imageOnload($message);\n                    };\n                    $message.removeClass('file-upload noselect');\n                    $message.find('.chat-msg-media-content .chat-file-info').remove();\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').append(img_content);\n                    $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').html(img);\n                    !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                }\n            }\n            if (videos.length > 0) {\n                let video_content = this.createVideoContainer();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(video_content);\n                videos.forEach((video) => {\n                    let video_el = this.createVideo(video);\n                    $message.find('.video-content').append(video_el);\n                });\n                this.videoOnload($message);\n                $message.removeClass('file-upload noselect');\n            }\n            if (files_.length > 0) {\n                $message.removeClass('file-upload noselect');\n                $(files_).each((idx, item) => {\n                    if (!idx && !images.length){\n                        $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n                        $message.find('.chat-msg-media-content.chat-main-upload-media').removeClass('chat-file-content');\n                    }\n                    if (item.type) {\n                        if (item.voice)\n                            is_audio = true;\n                        else\n                            is_audio = false;\n                    }\n                    let file_attrs = {\n                            name: item.name,\n                            type: item.type,\n                            sources: item.sources\n                        },\n                        template_for_file_content,\n                        mdi_icon_class = utils.file_type_icon(item.type);\n                    ((files_.length === 1) && is_audio) && (file_attrs.name = xabber.getString(\"voice_message\"));\n                    _.extend(file_attrs, {size: utils.pretty_size(item.size), is_audio: is_audio, duration: utils.pretty_duration(item.duration), mdi_icon: mdi_icon_class});\n                    template_for_file_content = is_audio ? $(templates.messages.audio_file(file_attrs)) : $(templates.messages.file(file_attrs));\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                    if (is_audio && $message.find('.link-file').length) {\n                        let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                        audio_player.msg_time = $message.attr('data-time');\n                        audio_player.author = $message.find('.chat-msg-author').text();\n                        audio_player.message_unique_id = $message.attr('data-uniqueid');\n                        if (this.model.get('group_chat')) {\n                            if (this.contact.my_info) {\n                                audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                if (!audio_player.contact_avatar) {\n                                    if (this.account.cached_image)\n                                        audio_player.contact_avatar = this.account.cached_image;\n                                    !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                                } else\n                                    audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                            }\n                        }\n                        if (!audio_player.contact_avatar)\n                            audio_player.contact_avatar = this.account.cached_image;\n                        if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                            this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                            xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                        }\n                        message.set('msg_player_audios', [audio_player])\n                        xabber.trigger('plyr_player_updated');\n                    }\n                });\n            }\n            this.initPopup($message);\n            message.set('images', images);\n            message.set('videos', videos);\n            message.set('files', files_);\n            if ((message.get('encrypted') || this.model.get('encrypted')) && message.get('images').length) {\n                this.decryptImages(message);\n            }\n            this.sendMessage(message);\n            this.scrollToBottom();\n        },\n\n        createAudio: function(file_url, $elem) {\n            let audio = WaveSurfer.create({\n                container: $elem[0],\n                scrollParent: false,\n                barWidth: 3,\n                height: 48,\n                barHeight: 48,\n                cursorColor: 'rgba(211,47,47,0.8)',\n                autoCenter: false,\n                normalize: true,\n                hideScrollBar: true,\n                progressColor: '#757575'\n            });\n            audio.load(file_url);\n            audio.setVolume(0.5);\n            return audio;\n        },\n\n        createImage: function(image) {\n            let imgContent = new Image(),\n                maxHeight = 400,\n                maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7;\n            if (image.height)\n                imgContent.height = image.height;\n            if (image.width)\n                imgContent.width = image.width;\n            maxWidth = maxWidth > 400 ? 400 : maxWidth;\n            if (xabber.settings.load_media) {\n                imgContent.src = image.sources[0];\n                $(imgContent).addClass('uploaded-img popup-img');\n            } else {\n                $(imgContent).addClass('unloaded-img');\n            }\n            $(imgContent).attr({'data-mfp-src': image.sources[0], title: (image.description || '')});\n            if (imgContent.height && imgContent.width) {\n                if (imgContent.width > maxWidth) {\n                    imgContent.height = imgContent.height * (maxWidth/imgContent.width);\n                    imgContent.width = maxWidth;\n                }\n                if (imgContent.height > maxHeight) {\n                    imgContent.width = imgContent.width * (maxHeight/imgContent.height);\n                    imgContent.height = maxHeight;\n                }\n            }\n            return imgContent;\n        },\n\n        createVideo: function(video) {\n            video.pretty_size = utils.pretty_size(video.size)\n            let $video_wrap_template = $(templates.messages.video({video_src: video.sources[0], thumbnail: video.thumbnail}));\n            return $video_wrap_template;\n        },\n\n        createImageContainer: function() {\n            return $('<div class=\"img-content\"/>')[0];\n        },\n\n        createVideoContainer: function() {\n            return $('<div class=\"video-content\"/>')[0];\n        },\n\n        onFileNotUploaded: function (message, $message, error_text, type, error_type) {\n            let error_message = error_text ? xabber.getString(\"file_upload__error\", [error_text]) : xabber.getString(\"file_upload__error_default\");\n            $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n            $message.find('.msg-delivering-state').removeClass('no-click');\n            $message.find('.circle-wrap .mdi-close').unbind( \"click\" );\n            message.set('state', constants.MSG_ERROR);\n            if (type == 'http' || error_type == 'wait'){\n                $message.find('.repeat-upload').one(\"click\",() => {\n                    this.startUploadFile(message, $message);\n                });\n            }\n            else {\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.bottom.deleteFilesFromMessages([message]);\n                $message.find('.edit-upload').one(\"click\",() => {\n                    this.bottom.setEditedMessageAttachments(message, true);\n                    this.bottom.setRedactedUploadMessage(message);\n                    this.removeMessage($message);\n                });\n                $message.find('.repeat-upload').one(\"click\",() => {\n                    message.set('state', constants.MSG_PENDING);\n                    $message.find('.upload-error .circle-percent-text').text('0%');\n                    $message.find('.mdi-alert-circle').addClass('hidden');\n                    $message.find('.mdi-close').removeClass('hidden');\n                    $message.find('.upload-error').css({ 'border-color': ''});\n                    $message.find('.upload-error').removeClass('upload-error');\n                    $message.find('.preloader-path-new').css({ 'stroke-dasharray': '0, 149.825'});\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                        this.startGalleryUploadFile(message, $message);\n                    else\n                        this.startUploadFile(message, $message);\n                });\n            }\n        },\n\n        sendChatState: function (state, type) {\n            if (this.model.get('saved') || this.contact && this.contact.get('status') === 'offline')\n                return;\n            clearTimeout(this._chatstate_timeout);\n            clearTimeout(this._chatstate_send_timeout);\n            this.chat_state = false;\n            let stanza = $msg({to: this.model.get('jid'), type: 'chat'}).c(state, {xmlns: Strophe.NS.CHATSTATES});\n            if (this.model.get('encrypted')) {\n                if (this.account.settings.get('encrypted_chatstates'))\n                    type = 'encrypted';\n                else\n                    return;\n            }\n            type && stanza.c('subtype', {xmlns: Strophe.NS.EXTENDED_CHATSTATES, type: type});\n            (state === 'composing') && (this.chat_state = true);\n            this.account.sendMsg(stanza);\n            if (state === 'composing') {\n                this._chatstate_timeout = setTimeout(() => {\n                    this.chat_state = false;\n                }, constants.CHATSTATE_TIMEOUT_PAUSED);\n                this._chatstate_send_timeout = setTimeout(() => {\n                    (!this.chat_state && xabber.settings.typing_notifications) && this.sendChatState('paused');\n                }, constants.CHATSTATE_TIMEOUT_PAUSED*2);\n            }\n        },\n\n        onChangedMessageTimestamp: function (message) {\n            let $message = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n                $next_msg = $message.next(),\n                $old_prev_msg = $message.prev();\n            $message.attr({\n                'data-time': message.get('timestamp')\n            });\n            $message.detach();\n            $message.children('.right-side').find('.msg-time').attr({title: pretty_datetime(message.get('time'))}).text(utils.pretty_time(message.get('time')));\n            message.get('user_info') && $message.attr('data-from-id', message.get('user_info').id);\n            this.model.messages.sort();\n            let index = this.model.messages.indexOf(message);\n            if (index === 0) {\n                if ($old_prev_msg.hasClass('chat-day-indicator'))\n                    $old_prev_msg.after($message);\n                else\n                    $message.prependTo(this.$('.chat-content'));\n            } else {\n                let $prev_msg = this.$('.chat-message').eq(index - 1),\n                    is_same_sender = ($message.data('from') === $prev_msg.data('from')),\n                    is_same_date = moment($message.data('time')).startOf('day')\n                        .isSame(moment($prev_msg.data('time')).startOf('day'));\n                if (($old_prev_msg.data('from') !== $message.data('from')) && ($next_msg.data('from') === $message.data('from')) && (($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'delivered') || ($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'displayed')))\n                    this.showMessageAuthor($next_msg);\n                if ($prev_msg.next().hasClass('chat-day-indicator') && (moment($prev_msg.next().data('time')).format('DD.MM.YY') === moment(message.get('timestamp')).format('DD.MM.YY'))) {\n                    $message.insertAfter($prev_msg.next());\n                    this.showMessageAuthor($message);\n                }\n                else\n                    $message.insertAfter($prev_msg);\n                if (message.get('data_form') || message.get('forwarded_message') || !is_same_date || !is_same_sender || $prev_msg.hasClass('system') || $prev_msg.hasClass('saved-main'))\n                    this.showMessageAuthor($message);\n                else\n                    this.hideMessageAuthor($message);\n            }\n            let last_message = this.model.last_message;\n            if (!last_message || message.get('timestamp') > last_message.get('timestamp')) {\n                this.model.last_message = message;\n                this.chat_item.updateLastMessage();\n            }\n        },\n\n        onChangedReadState: function (message) {\n            let is_unread = message.get('is_unread'),\n                is_synced = message.get('synced_from_server');\n            if (is_unread && !is_synced) {\n                this.model.messages_unread.add(message);\n                this.model.recountUnread();\n            } else {\n                this.model.messages_unread.remove(message);\n                this.model.recountUnread();\n                if (!message.get('muted')) {\n                    xabber.recountAllMessageCounter();\n                }\n            }\n        },\n\n        onTouchMessage: function (ev) {\n            if (ev.which === 3)\n                return;\n            let $elem = $(ev.target), $msg;\n\n            if ($elem.hasClass('chat-message')) {\n                $msg = $elem;\n            } else {\n                $msg = $elem.parents('.chat-message');\n            }\n            if (window.getSelection() != 0) {\n                utils.clearSelection();\n                $msg.attr('data-no-select-on-mouseup', '1');\n            }\n        },\n\n        onClickLink: function (ev) {\n            let $elem = $(ev.target),\n                $message = $elem.closest('.chat-message'),\n                msg = this.model.messages.get($message.data('uniqueid'));\n            if (!msg) {\n                msg = this.account.participant_messages.get($message.data('uniqueid'));\n            }\n            let files = msg.get('files'),\n                videos = msg.get('videos'),\n                images = msg.get('images'),\n                fwd_messages = [],\n                files_links = '';\n            if (msg.get('forwarded_message')) {\n                msg.get('forwarded_message').forEach((message) => {\n                    message.get('images') && fwd_messages.push(message.get('images'));\n                    message.get('videos') && fwd_messages.push(message.get('videos'));\n                });\n            }\n            $(files).each(function(idx, file) {\n                if (idx > 0)\n                    files_links += '\\n';\n                files_links += file.sources[0];\n            });\n            $(images).each(function(idx, image) {\n                if (idx > 0)\n                    files_links += '\\n';\n                files_links += image.sources[0];\n            });\n            $(videos).each(function(idx, image) {\n                if (idx > 0)\n                    files_links += '\\n';\n                files_links += image.sources[0];\n            });\n            $(fwd_messages).each(function (idx, message) {\n                $(message).each(function (i, file) {\n                    if (files_links != \"\")\n                        files_links += '\\n';\n                    files_links += file.sources[0];\n                });\n            });\n            utils.copyTextToClipboard(files_links, xabber.getString(\"toast_link_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        },\n\n\n        onClickLocationLink: function (ev) {\n            ev.preventDefault()\n            let $elem = $(ev.target),\n                $message = $elem.closest('.chat-message'),\n                msg = this.model.messages.get($message.data('uniqueid'));\n            if (!msg) {\n                msg = this.account.participant_messages.get($message.data('uniqueid'));\n            }\n            let locations = msg.get('locations'),\n                fwd_messages = [],\n                location_links = '';\n            if (msg.get('forwarded_message')) {\n                msg.get('forwarded_message').forEach((message) => {\n                    message.get('locations') && fwd_messages.push(message.get('locations'));\n                });\n            }\n            $(locations).each(function(idx, location) {\n                location_links += 'geo:' + location.lat + ',' + location.lon;\n            });\n            $(fwd_messages).each(function (idx, message) {\n                $(message).each(function (i, object) {\n                    if (location_links != \"\")\n                        location_links += '\\n';\n                    location_links += 'geo:' + object.lat + ',' + object.lon;\n                });\n            });\n\n            utils.copyTextToClipboard(location_links, xabber.getString(\"toast_location_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        },\n\n        showParticipantProperties: function (participant_id, options) {\n            options = options || {};\n            let participant = this.contact.participants.get(participant_id);\n            if (!participant) {\n                this.contact.getBlockedParticipants((response) => {\n                    _.extend(options, {present: null, subscription: null});\n                    if ($(response).find(`query user:contains(${participant_id})`).length)\n                        options.blocked = true;\n                    else\n                        options.blocked = false;\n                    participant = new xabber.Participant(options, {contact: this.contact});\n                    this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                    this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n                });\n                return;\n            }\n            (this.contact.my_info && this.contact.my_info.get('id') === participant_id) && (participant_id = '');\n            this.contact.participants.participantsRequest({id: participant_id}, (response) => {\n                let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, data_form);\n            });\n        },\n\n        onClickMessage: function (ev) {\n            let $elem = $(ev.target);\n            if ($elem.hasClass('file-link-download')) {\n                ev.preventDefault();\n                let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                    uri = $elem.attr('href'),\n                    file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                if (file && file.key) {\n                    this.model.messages.decryptFile(uri,file.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let download = document.createElement(\"a\");\n                        download.href = result;\n                        download.download = file.name;\n                        download.click();\n                    });\n                    return;\n                } else\n                    xabber.openWindow($elem.attr('href'));\n            }\n            if ($elem.hasClass('msg-delivering-state') || $elem.hasClass('audio-control-panel') || $elem.hasClass('voice-msg-current-time') || $elem.hasClass('voice-msg-total-time')) {\n                return;\n            }\n            if ($elem.closest(\".plyr-video-container\").length > 0) {\n                let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                    $plyr = $elem.closest(\".plyr-video-container\");\n                if (msg.get('msg_player_videos')){\n                    if (!xabber.plyr_player_popup){\n                        xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                        xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                    } else\n                        xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                }\n                return;\n            }\n            if (!$elem.hasClass('mdi-link-variant') && !$elem.hasClass('msg-copy-location-content') && !$elem.hasClass('btn-retry-send-message') && !$elem.hasClass('btn-delete-message') && !$elem.hasClass('file-link-download') && !$elem.is('canvas') && !$elem.hasClass('voice-message-volume')) {\n                let $msg = $elem.closest('.chat-message'), msg,\n                    $fwd_message = $elem.parents('.fwd-message').first(),\n                    is_forwarded = $fwd_message.length > 0,\n                    no_select_message = $msg.attr('data-no-select-on-mouseup');\n                $msg.attr('data-no-select-on-mouseup', '');\n\n                if ($elem.hasClass('data-form-field')) {\n                    msg = this.model.messages.get($msg.data('uniqueid'));\n                    if (msg)\n                        this.model.sendDataForm(msg, $elem.attr('id'));\n                    return;\n                }\n\n                if (window.getSelection() != 0) {\n                    return;\n                }\n\n                if ($elem.hasClass('collapsed-forwarded-message')) {\n                    let msg = this.buildMessageHtml(this.account.forwarded_messages.get($elem.data('uniqueid'))),\n                        expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this});\n                    expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n                    this.updateMessageInChat(msg);\n                    this.initPopup(msg);\n                    expanded_fwd_message.open(msg);\n                    return;\n                }\n\n                if ($elem.hasClass('chat-msg-author') || $elem.hasClass('fwd-msg-author')) {\n                    let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from'),\n                        from_id = is_forwarded ? $fwd_message.data('fromId') : $msg.data('fromId');\n                    if (this.contact && this.contact.get('group_chat')) {\n                        this.bottom.quill.focus();\n                        let caret_position = this.bottom.quill.getSelection(),\n                            participant_attrs = {jid: from_jid, id: from_id, nickname: $elem.text()};\n                        caret_position && (caret_position = caret_position.index);\n                        participant_attrs.position = caret_position || 0;\n                        this.bottom.insertMention(participant_attrs);\n                    }\n                    else if (from_jid === this.account.get('jid')) {\n                        this.account.showSettings();\n                    } else if (from_jid === this.model.get('jid')) {\n                        this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    } else {\n                        if (from_jid == from_id)\n                            return;\n                        let contact = this.account.contacts.mergeContact(from_jid);\n                        contact.showDetails();\n                    }\n                    return;\n                }\n\n                if ($elem.hasClass('circle-avatar')) {\n                    let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from');\n                    if (this.model.get('group_chat')) {\n                        let member_id = (is_forwarded) ? $fwd_message.attr('data-from-id') : $msg.attr('data-from-id'),\n                            unique_id = (is_forwarded) ? $fwd_message.attr('data-uniqueid') : $msg.attr('data-uniqueid'),\n                            msg = this.model.messages.get(unique_id),\n                            user_info = msg && msg.get('user_info');\n                        member_id && this.showParticipantProperties(member_id, user_info);\n                        return;\n                    }\n                    else if (from_jid === this.account.get('jid')) {\n                        this.account.showSettings();\n                    } else if (from_jid === this.model.get('jid')) {\n                        this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    } else {\n                        let contact = this.account.contacts.mergeContact(from_jid);\n                        contact.showDetails();\n                    }\n                    return;\n                }\n\n                if ($elem.hasClass('mention')) {\n                    let member_id = $elem.data('target');\n                    if (this.contact.get('group_chat')) {\n                        if (member_id && !this.contact.participants.get(member_id)) {\n                            let participant = this.contact.participants.find(p => p.get('jid') === member_id);\n                            participant && (member_id = participant.get('id'));\n                        }\n                        member_id && this.showParticipantProperties(member_id);\n                    }\n                    else {\n                        if (member_id === this.account.get('jid'))\n                            this.account.showSettings();\n                        else if (member_id === this.model.get('jid')) {\n                            this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                        } else {\n                            let contact = this.account.contacts.mergeContact(member_id);\n                            contact.showDetails();\n                        }\n                    }\n                    return;\n                }\n\n                if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n                    let $audio_elem = $elem.closest('.link-file'),\n                        f_url = $audio_elem.find('.file-link-download').attr('href');\n                    $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n                    if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                        let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                            uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                            file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                        if (file && file.key) {\n                            this.model.messages.decryptFile(f_url, file.key).then((result) => {\n                                if (result === null)\n                                    return;\n                                $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                            });\n                        }\n                    } else {\n                        $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n                    }\n                    return;\n                }\n\n                if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                    let $audio_elem = $elem.closest('.link-file');\n                    $audio_elem[0].voice_message.play();\n                    return;\n                }\n\n                if ($elem.hasClass('mdi-pause') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                    let $audio_elem = $elem.closest('.link-file');\n                    $audio_elem[0].voice_message.pause();\n                    return;\n                }\n\n                if ($elem.hasClass('msg-hyperlink')) {\n                    ev && ev.preventDefault();\n                    $elem.blur();\n                    let link = $elem.attr('href');\n                    utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                        if (result)\n                            utils.openWindow(link);\n                    });\n                    return;\n                }\n\n                if ($elem.closest(\".msg-hyperlink\").length > 0) {\n                    ev && ev.preventDefault();\n                    $elem.blur();\n                    let link = $elem.closest(\".msg-hyperlink\").attr('href');\n                    utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                        if (result)\n                            utils.openWindow(link);\n                    });\n                    return;\n                }\n\n                if ($elem.hasClass('uploaded-img')||$elem.hasClass('img-content')||($elem.hasClass('uploaded-img-for-collage'))) {\n                    $elem.hasClass('img-content') && $elem.children('img').click();\n                    return;\n                }\n\n                if ($elem.hasClass('unloaded-img')) {\n                    let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                    utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                        if (result) {\n                            $elem.attr('src',$elem.attr('data-mfp-src'));\n                            $elem.removeClass('unloaded-img');\n                            $elem.addClass('uploaded-img');\n                            this.initPopup($elem.closest('.chat-message'));\n                            $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                        }\n                    });\n                    return;\n                }\n\n                if ($elem.hasClass('img-content-template') && $elem.find('img').hasClass('unloaded-img')) {\n                    let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                    utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                        if (result) {\n                            let $msg = $elem.closest('.chat-message'),\n                                $imgs = $msg.find('.img-content-template img');\n                            $imgs.each((idx, img) => {\n                                $(img).attr('src',$(img).attr('data-mfp-src'));\n                            });\n                            $imgs.removeClass('unloaded-img');\n                            $imgs.addClass('uploaded-img-for-collage');\n                            this.initPopup($msg);\n                            $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                        }\n                    });\n                    return;\n                }\n\n                if ($elem.hasClass('chat-msg-location-content') || $elem.hasClass('location-link') || $elem.closest(\".video-file-wrap\").length > 0 || $elem.closest(\".embed-video\").length > 0) {\n                    return;\n                }\n\n                if ($elem.hasClass('last-image')) {\n                    $elem.find('img').length && $elem.find('img')[0].click();\n                    return;\n                }\n\n                if ($elem.hasClass('image-counter')) {\n                    $elem.closest('.last-image').find('img')[0].click();\n                    return;\n                }\n\n                if ($msg.hasClass('searched-message')) {\n                    this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n                    return;\n                }\n\n                let processClick = () => {\n                    let $prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').last() : $msg.prevAll('.chat-message.selected').first();\n                    !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.nextAll('.chat-message.selected').last() : $msg.nextAll('.chat-message.selected').first());\n                    !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').first() : $msg.prevAll('.chat-message.selected').last());\n                    if ((xabber.shiftctrl_pressed || xabber.shift_pressed) && $prev_selected.length) {\n                        let $all_msgs = [], is_selected = $msg.hasClass('selected');\n                        if ($prev_selected.attr('data-time') < $msg.attr('data-time'))\n                            $all_msgs = $prev_selected.nextUntil($msg, '.chat-message:not(.system)');\n                        else\n                            $all_msgs = $msg.nextUntil($prev_selected, '.chat-message:not(.system)');\n                        xabber.shift_pressed && this.$('.chat-message').removeClass('selected');\n                        $prev_selected.switchClass('selected', !is_selected);\n                        $all_msgs.switchClass('selected', !is_selected);\n                        $msg.switchClass('selected', !is_selected);\n                        ev.preventDefault();\n                        this.bottom.manageSelectedMessages();\n                        return false;\n                    }\n                    if (!no_select_message) {\n                        $msg.switchClass('selected', !$msg.hasClass('selected'));\n                        ev.preventDefault();\n                        this.bottom.manageSelectedMessages();\n                        return false;\n                    }\n                };\n\n                if ($msg.hasClass('participant-message') || $msg.hasClass('context-message')) {\n                    if ($msg.hasClass('system'))\n                        return;\n                    processClick();\n                    return;\n                }\n\n                msg = this.model.messages.get($msg.data('uniqueid'));\n                if (!msg) {\n                    return;\n                }\n\n                let type = msg.get('type');\n                if (type === 'file_upload') {\n                    return;\n                }\n\n                if (type === 'system') {\n                    return;\n                } else if (is_forwarded) {\n                    let fwd_message = this.account.forwarded_messages.get($fwd_message.data('uniqueid'));\n                    if (!fwd_message) {\n                        return;\n                    }\n                    processClick();\n                } else {\n                    processClick();\n                }\n            }\n        },\n\n        onClickLocation: function (ev) {\n            ev.preventDefault();\n            let lon = $(ev.target).attr('lon'),\n                lat = $(ev.target).attr('lat'),\n                location_name = $(ev.target).attr('title');\n            if (lon && lat){\n                window.popup_coordinates = [lon, lat];\n                window.location_name = location_name;\n                new xabber.ChatLocationView({content: this}).show(ev);\n            }\n        },\n\n        onHoverLocation: function (ev) {\n            let lon = $(ev.target).attr('lon')\n                lat = $(ev.target).attr('lat')\n\n            fetch('https://nominatim.openstreetmap.org/reverse?format=json&lon=' + lon + '&lat=' + lat).then(function(response) {\n                return response.json();\n            }).then(function(json) {\n                if (!json.error) {\n                    $(ev.target).attr('title', json.display_name);\n                }\n                else {\n                    $(ev.target).attr('title', xabber.getString(\"location_fragment__address_error__title\"));\n                }\n                $(ev.target).removeClass('no-title')\n            })\n        },\n\n        retrySendMessage: function (ev) {\n            let $msg = $(ev.target).closest('.chat-message'),\n                msg = this.model.messages.get($msg.data('uniqueid'));\n            if (msg.get('type') === 'file_upload') {\n                msg.set('state', constants.MSG_PENDING);\n                this.startUploadFile(msg, $msg);\n            }\n            else\n                this.sendMessage(msg);\n            ev.preventDefault();\n        },\n\n        removeFileErrorMessage: function (ev) {\n            let $msg = $(ev.target).closest('.chat-message');\n            this.removeMessage($msg);\n            ev.preventDefault();\n            this.chat_item.updateChatError();\n        },\n\n        onUpdatePlyr: function (ev) {\n            this.$('.plyr-video-container').removeClass('active-plyr-container');\n            if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n                let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n                if ($message.length) {\n                    $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n                }\n            }\n        },\n    });\n\n    xabber.ExpandedMessagePanel = xabber.BasicView.extend({\n        className: 'modal expanded-message',\n        template: templates.group_chats.pinned_message_panel,\n        ps_selector: '.modal-content',\n        ps_settings: {theme: 'item-list'},\n\n        events: {\n            \"click .collapsed-forwarded-message\": \"expandFwdMessage\",\n            \"click .chat-message\": \"onClickPinnedMessage\",\n            'click .chat-msg-location-content': 'onClickExpandedMessageLocation',\n            'click .mdi-link-variant' : 'onClickLink',\n        },\n\n        _initialize: function (options) {\n            this.account = options.account;\n            this.chat_content = options.chat_content;\n        },\n\n        open: function ($message) {\n            this.$el.css('width', $message.find('.chat-text-content').text().length <= 60 ? 540 : xabber.main_panel.$el.width() * 0.715);\n            this.$el.openModal({\n                ready: () => {\n                    this.updateScrollBar();\n                    this.$('.modal-content').css('height', this.$el.height() - 12);\n                    if ($message.find('.plyr-video-container').length) {\n                        this.chat_content.initPlyrEmbedPlayer($message);\n                    }\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n            $message.find('.right-side .msg-delivering-state').remove();\n            this.$('.modal-content').html($message);\n        },\n\n        close: function () {\n            this.$el.closeModal({ complete: this.hide.bind(this) });\n        },\n\n        onClickLink:function (ev) {\n            this.chat_content.onClickLink(ev);\n        },\n\n        onClickPinnedMessage: function (ev) {\n            let $elem = $(ev.target);\n            if ($elem.hasClass('msg-hyperlink')) {\n                ev && ev.preventDefault();\n                let link = $elem.attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n        },\n        onClickExpandedMessageLocation: function (ev) {\n            ev.preventDefault();\n            let lon = $(ev.target).attr('lon'),\n                lat = $(ev.target).attr('lat'),\n                location_name = $(ev.target).attr('title');\n            if (lon && lat){\n                window.popup_coordinates = [lon, lat];\n                window.location_name = location_name;\n                new xabber.ChatLocationView({content: this}).show(ev);\n            }\n        },\n\n        expandFwdMessage: function (ev) {\n            let $target = $(ev.target),\n                unique_id = $target.data('uniqueid'),\n                msg = this.chat_content.buildMessageHtml(this.account.forwarded_messages.get(unique_id)),\n                expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this.chat_content});\n            expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n            this.chat_content.updateMessageInChat(msg);\n            this.chat_content.initPopup(msg);\n            expanded_fwd_message.open(msg);\n        }\n    });\n\n    xabber.ChatsBase = Backbone.Collection.extend({\n        model: xabber.Chat\n    });\n\n    xabber.Chats = xabber.ChatsBase.extend({\n        initialize: function (models, options) {\n            this.collections = [];\n            this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n            this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n        },\n\n        addCollection: function (collection) {\n            this.collections.push(collection);\n        },\n\n        updateInCollections: function (event, contact) {\n            _.each(this.collections, function (collection) {\n                collection.update(contact, event);\n            });\n        },\n\n        registerQuillEmbeddedsTags: function () {\n            let Inline = Quill.import('blots/inline'),\n                Image = Quill.import('formats/image');\n\n            class Mention extends Inline {\n                static create(paramValue) {\n                    let node = super.create(),\n                        data = JSON.parse(paramValue),\n                        target = data.jid ? ('?jid=' + data.jid) : (data.id ?  ('?id=' + data.id) : \"\");\n                    node.innerHTML = data.nickname;\n                    data.is_me && node.classList.add('ground-color-100');\n                    node.setAttribute('data-target', target);\n                    return node;\n                }\n\n                static value(node) {\n                    return node.innerHTML;\n                }\n            }\n            Mention.blotName = 'mention';\n            Mention.tagName = 'mention';\n            Mention.prototype.optimize = function () {};\n\n            class QuillEmoji extends Image {\n                static create(value) {\n                    if (typeof value == 'string') {\n                        let emoji = $(value.emojify({tag_name: 'img'}))[0];\n                        emoji.style.display = 'none';\n                        emoji.onload = function () {\n                            this.style.display = 'unset';\n                        };\n                        return emoji;\n                    } else {\n                        return value;\n                    }\n                }\n\n                static value(domNode) {\n                    return domNode;\n                }\n            }\n            QuillEmoji.blotName = 'emoji';\n            QuillEmoji.className = 'emoji';\n            QuillEmoji.tagName = 'img';\n            QuillEmoji.prototype.optimize = function () {};\n\n            Quill.register(QuillEmoji);\n            Quill.register(Mention);\n        }\n    });\n\n    xabber.OpenedChats = xabber.ChatsBase.extend({\n        comparator: function (item1, item2) {\n            let t1 = item1.get('timestamp'),\n                t2 = item2.get('timestamp');\n            return t1 > t2 ? -1 : (t1 < t2 ? 1 : 0);\n        },\n\n        initialize: function (models, options) {\n            this.on(\"change:timestamp\", this.sort, this);\n        },\n\n        update: function (chat, event) {\n            let contains = chat.get('opened');\n            if (contains) {\n                if (!this.get(chat)) {\n                    this.add(chat);\n                    chat.trigger(\"add_opened_chat\", chat);\n                }\n            } else if (this.get(chat)) {\n                this.remove(chat);\n                chat.trigger(\"remove_opened_chat\", chat);\n            }\n        }\n    });\n\n    xabber.ClosedChats = xabber.ChatsBase.extend({\n        update: function (chat, event) {\n            let contains = !chat.get('opened');\n            if (contains) {\n                if (!this.get(chat)) {\n                    this.add(chat);\n                    chat.trigger(\"add_closed_chat\", chat);\n                }\n            } else if (this.get(chat)) {\n                this.remove(chat);\n                chat.trigger(\"remove_closed_chat\", chat);\n            }\n        }\n    });\n\n    xabber.AccountChats = xabber.ChatsBase.extend({\n        initialize: function (models, options) {\n            this.account = options.account;\n            this.mam_requests = 0;\n            this.deferred_mam_requests = [];\n            this.account.contacts.on(\"open_chat\", this.openChat, this);\n            this.account.contacts.on(\"open_mention\", this.openMention, this);\n            this.account.contacts.on(\"presence\", this.onPresence, this);\n            this.account.contacts.on(\"roster_push\", this.onRosterPush, this);\n        },\n\n        getSavedChat: function () {\n          let jid = this.account.get('jid'),\n              attrs = {jid: jid, type: 'saved', name: xabber.getString(\"saved_messages__header\"), id: `${jid}:saved`},\n              chat = this.get(attrs.id);\n            if (!chat) {\n                chat = xabber.chats.create(attrs, {account: this.account});\n                this.add(chat);\n                chat.trigger(\"load_last_history\");\n            }\n            return chat;\n        },\n\n        getChat: function (contact, identifier, sync_created) {\n            let attrs = null,\n                id = identifier && `${contact.hash_id}:${identifier}`,\n                chat = id ? this.get(id) : this.get(contact.hash_id);\n            if (id)\n                attrs = {id};\n            if (identifier === 'encrypted')\n                attrs.type = identifier;\n            if (!chat) {\n                chat = xabber.chats.create(attrs, {contact: contact, sync_created: sync_created});\n                this.add(chat);\n                contact.set('known', true);\n            }\n            return chat;\n        },\n\n        openChat: function (contact, options) {\n            options = options || {};\n            _.isUndefined(options.clear_search) && (options.clear_search = true);\n            let chat = this.getChat(contact, options.encrypted && 'encrypted');\n            chat.trigger('open', {clear_search: options.clear_search});\n        },\n\n        openMention: function (contact, unique_id) {\n            let chat = this.getChat(contact);\n            xabber.body.setScreen('mentions', {right: 'mentions', chat_item: chat.item_view});\n            unique_id && chat.getMessageContext(unique_id, {mention: true});\n        },\n\n        registerMessageHandler: function () {\n            this.account.connection.deleteHandler(this._msg_handler);\n            this._msg_handler = this.account.connection.addHandler((message) => {\n                this.receiveMessage(message);\n                return true;\n            }, null, 'message');\n        },\n\n        onStartedMAMRequest : function (deferred) {\n            this.deferred_mam_requests.push(deferred);\n            this.runMAMRequests();\n        },\n\n        onCompletedMAMRequest: function (deferred) {\n            this.mam_requests--;\n            this.runMAMRequests();\n        },\n\n        runMAMRequests: function () {\n            while (this.mam_requests < xabber.settings.mam_requests_limit) {\n                let deferred = this.deferred_mam_requests.shift();\n                if (!deferred) break;\n                this.mam_requests++;\n                deferred.resolve();\n            }\n        },\n\n        parsePubSubNode: function (node) {\n            if (!node)\n                return null;\n            let is_member_id = node.indexOf('#');\n            if (is_member_id !== -1)\n                return node.slice(is_member_id + 1, node.length);\n            else\n                return null;\n        },\n\n        receivePubsubMessage: function ($message) {\n            let photo_id =  $message.find('info').attr('id'),\n                from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n                node = $message.find('items').attr('node');\n            if (node.indexOf(Strophe.NS.OMEMO) > -1)\n                return;\n            if (node.indexOf(Strophe.NS.PUBSUB_AVATAR_METADATA) > -1) {\n                let member_id = this.parsePubSubNode(node),\n                    photo_url =  $message.find('info').attr('url'),\n                    contact = this.account.contacts.get(from_jid);\n                if (contact) {\n                    if (member_id) {\n                        if (contact.my_info) {\n                            if ((member_id == contact.my_info.get('id')) && (photo_id == contact.my_info.get('avatar'))) {\n                                contact.trigger('update_my_info');\n                                return;\n                            }\n                        }\n                        if (photo_id && (this.account.chat_settings.getHashAvatar(member_id) != photo_id)) {\n                            let member_node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + member_id;\n                            contact.getAvatar(photo_id, member_node, (new_avatar) => {\n                                    this.account.chat_settings.updateCachedAvatars(member_id, photo_id, new_avatar);\n                                    if (contact.my_info) {\n                                        if (member_id == contact.my_info.id) {\n                                            contact.my_info.set({avatar: photo_id, b64_avatar: new_avatar});\n                                            contact.trigger('update_my_info');\n                                        }\n                                    }\n                                    let participant = contact.participants && contact.participants.get(member_id);\n                                    if (participant) {\n                                        participant.set({avatar: photo_id, b64_avatar: new_avatar});\n                                        this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                    }\n                                }, () => {\n                                    if (photo_url) {\n                                        this.account.chat_settings.updateCachedAvatars(member_id, photo_id, photo_url);\n                                        if (contact.my_info) {\n                                            if (member_id == contact.my_info.id) {\n                                                contact.my_info.set({avatar: photo_id, b64_avatar: photo_url});\n                                                contact.trigger('update_my_info');\n                                            }\n                                        }\n                                        let participant = contact.participants && contact.participants.get(member_id);\n                                        if (participant) {\n                                            participant.set({avatar: photo_id, b64_avatar: photo_url});\n                                            this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                        }\n                                        return;\n                                    }\n                                });\n                        }\n                    }\n                    else if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.PUBSUB_AVATAR) {\n                        if (!photo_id) {\n                            let image = Images.getDefaultAvatar(contact.get('name'));\n                            contact.cached_image = Images.getCachedImage(image);\n                            contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                            contact.set('photo_hash', null);\n                            contact.set('image', image);\n                            contact.updateCachedInfo();\n                            return;\n                        }\n                        if ((photo_id !== \"\") && (contact.get('photo_hash') === photo_id)) {\n                            return;\n                        } else if (photo_url) {\n                            contact.cached_image = photo_url;\n                            contact.set({photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR});\n                        }\n                        contact.getAvatar(photo_id, Strophe.NS.PUBSUB_AVATAR_DATA, (data_avatar) => {\n                            contact.cached_image = Images.getCachedImage(data_avatar);\n                            contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                            contact.set('photo_hash', photo_id);\n                            contact.set('image', data_avatar);\n                            contact.updateCachedInfo();\n                        });\n                    }\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    if (photo_url) {\n                        let avatar_attrs = {photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR};\n                        this.account.cached_image = photo_url;\n                        this.account.save(avatar_attrs);\n                        return;\n                    }\n                    if (!photo_id) {\n                        let image = Images.getDefaultAvatar(this.account.get('name'));\n                        this.account.cached_image = Images.getCachedImage(image);\n                        let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: image};\n                        this.account.save(avatar_attrs);\n                        return;\n                    }\n                    this.account.getAvatar(photo_id, (data_avatar) => {\n                        this.account.cached_image = Images.getCachedImage(data_avatar);\n                        let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: data_avatar};\n                        this.account.save(avatar_attrs);\n                    });\n                }\n            }\n        },\n\n        receiveMessage: function (message) {\n            let $message = $(message),\n                type = $message.attr('type'),\n                $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n            if (this.account.connection.do_synchronization && Strophe.getBareJidFromJid($(message).attr('from')) !== this.account.get('jid')) {\n                let time = $message.children('time').attr('stamp') || $message.children('delay').attr('stamp'),\n                    timestamp = Number(moment(time));\n                (timestamp > this.account.last_msg_timestamp) && (this.account.last_msg_timestamp = timestamp);\n            }\n            if (type === 'headline') {\n                return this.receiveHeadlineMessage(message);\n            }\n            if (type === 'chat' || (type === 'normal') || (!type && !$mam.length)) {\n                return this.receiveChatMessage(message);\n            }\n            if (type === 'error') {\n                return this.receiveErrorMessage(message);\n            }\n        },\n\n        receiveHeadlineMessage: function (message) {\n            let $message = $(message),\n                msg_from = Strophe.getBareJidFromJid($message.attr('from')),\n                $stanza_received = $message.find(`received[xmlns=\"${Strophe.NS.DELIVERY}\"]`),\n                $echo_msg = $message.children(`x[xmlns=\"${Strophe.NS.DELIVERY}\"]`).children('message');\n            if ($stanza_received.length) {\n                let stanza_id = $stanza_received.children('stanza-id').attr('id'),\n                    origin_msg_id = $stanza_received.children('origin-id').first().attr('id');\n                if (origin_msg_id) {\n                    let msg = this.account.messages.get(origin_msg_id || stanza_id),\n                        delivered_time = $stanza_received.children('time').attr('stamp') || moment(stanza_id/1000).format();\n                    if (!msg)\n                        return;\n                    if (!msg.get('stanza_id') && msg.get('locations'))\n                        msg.set({'stanza_id': stanza_id})\n                    msg.set({'state': constants.MSG_SENT, 'time': delivered_time, 'timestamp': Number(moment(delivered_time))}); // delivery receipt, changing on server time\n                    let pending_message = this.account._pending_messages.find(msg => msg.unique_id == (origin_msg_id || stanza_id));\n                    if (pending_message) {\n                        let chat = this.account.chats.get(pending_message.chat_hash_id);\n                        chat && chat.setStanzaId(pending_message.unique_id, stanza_id);\n                        this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n                    }\n                }\n                return;\n            }\n\n            if ($echo_msg.length) {\n                console.log(this.account._pending_messages);\n                console.log(this.account._pending_messages.length);\n                let origin_msg_id = $echo_msg.children('origin-id').first().attr('id'),\n                    pending_message = this.account._pending_messages.find(msg => msg.unique_id == origin_msg_id);\n                if (pending_message) {\n                    this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n                }\n                console.log(this.account._pending_messages.length);\n                return this.receiveChatMessage($echo_msg[0], {echo_msg: true, stanza_id: $echo_msg.children('stanza-id').attr('id')});\n            }\n\n            let $token_revoke = $message.children(`revoke[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n            if ($token_revoke.length) {\n                $token_revoke.children('device').each((idx, token) => {\n                    let $token = $(token),\n                        token_uid = $token.attr('id');\n                    if (!token_uid)\n                        return;\n                    if (this.account.get('x_token') && this.account.get('x_token').token_uid === token_uid) {\n                        this.account.deleteAccount();\n                        return;\n                    }\n                    if (this.account.x_tokens_list) {\n                        let token = this.account.x_tokens_list.find(token => token.token_uid == token_uid),\n                            token_idx = token ? this.account.x_tokens_list.indexOf(token) : -1;\n                        (token_idx > -1) && this.account.x_tokens_list.splice(token_idx, 1);\n                    }\n                });\n                this.account.settings_right && this.account.settings_right.updateXTokens();\n                return;\n            }\n\n            if ($message.find(`event[xmlns=\"${Strophe.NS.PUBSUB}#event\"]`).length) {\n                this.receivePubsubMessage($message);\n                return;\n            }\n\n            let contact = this.account.contacts.get(msg_from), chat;\n            if (contact) {\n                contact && (chat = this.account.chats.getChat(contact));\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            }\n\n            if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n                if (!contact)\n                    return;\n                let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n                if (participant_version && contact.participants && contact.participants.version < participant_version)\n                    contact.trigger('update_participants');\n            }\n\n            if ($message.children(`attention[xmlns=\"${Strophe.NS.ATTENTION}\"]`).length && xabber.settings.call_attention) {\n                if (!chat)\n                    return;\n                return chat.messages.createSystemMessage({from_jid: msg_from, message: xabber.getString(\"action_attention_requested\"), attention: true});\n            }\n\n            if ($message.find(`replace[xmlns=\"${Strophe.NS.REWRITE}#notify\"]`).length) {\n                !contact && (contact = this.account.contacts.get($message.find('replace').attr('conversation'))) && (chat = this.account.chats.getChat(contact));\n                if (!chat)\n                    return;\n                let stanza_id = $message.find('replace').attr('id'),\n                    msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id),\n                    active_right_screen = xabber.body.screen.get('right'),\n                    participant_messages = active_right_screen === 'participant_messages' && this.account.participant_messages || active_right_screen === 'message_context' && this.account.context_messages || active_right_screen === 'searched_messages' && this.account.searched_messages || [],\n                    participant_msg_item = participant_messages.find(msg => msg.get('stanza_id') == stanza_id);\n                this.receiveChatMessage($message, {replaced: true});\n                if (participant_msg_item) {\n                    participant_msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n                }\n                if (msg_item) {\n                    msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n                    if (contact.get('pinned_message'))\n                        if (contact.get('pinned_message').get('unique_id') === msg_item.get('unique_id')) {\n                            contact.get('pinned_message').set('message', msg_item.get('message'));\n                            if (!chat.item_view.content)\n                                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                            chat.item_view.content.updatePinnedMessage();\n                        }\n                    chat && chat.item_view.updateLastMessage(chat.last_message);\n                }\n            }\n            if ($message.find('retract-message').length) {\n                let is_encrypted = $message.find('retract-message').attr('type') == 'encrypted';\n                !contact && (contact = this.account.contacts.get($message.find('retract-message').attr('conversation'))) && (chat = this.account.chats.getChat(contact,  is_encrypted && 'encrypted'));\n                if ($message.find('retract-message').attr('conversation') === this.account.get('jid'))\n                    chat = this.getSavedChat();\n                if (!chat)\n                    return;\n                let $retracted_msg = $message.find('retract-message'),\n                    retracted_msg_id = $retracted_msg.attr('id'),\n                    retract_version = $retracted_msg.attr('version'),\n                    msg_item = chat.messages.find(msg => msg.get('stanza_id') == retracted_msg_id || msg.get('contact_stanza_id') == retracted_msg_id);\n                if (msg_item) {\n                    msg_item.set('is_unread', false);\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.removeMessage(msg_item);\n                    chat.item_view.updateLastMessage(chat.last_message);\n                }\n                if (retract_version > this.account.retraction_version) {\n                    if (chat.get('encrypted') && this.account.omemo)\n                        this.account.omemo.cacheRetractVersion(retract_version);\n                    else\n                        this.account.retraction_version = retract_version;\n                }\n            }\n            if ($message.find('retract-user').length) {\n                let $retracted_user_msgs = $message.find('retract-user'),\n                    retracted_user_id = $retracted_user_msgs.attr('id'),\n                    msg_item = chat.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == retracted_user_id));\n                if (msg_item)\n                    $(msg_item).each((idx, item) => {\n                        item.set('is_unread', false);\n                        if (!chat.item_view.content)\n                            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                        chat.item_view.content.removeMessage(item);\n                    });\n                chat.item_view.updateLastMessage(chat.last_message);\n            }\n            if ($message.find('retract-all').length) {\n                !contact && (contact = this.account.contacts.get($message.find('retract-all').attr('conversation'))) && (chat = this.getChat(contact, $message.find('retract-all').attr('type') == 'encrypted' && 'encrypted'));\n                if (!chat)\n                    return;\n                let all_messages = chat.messages.models;\n                $(all_messages).each((idx, item) => {\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.removeMessage(item);\n                });\n                chat.item_view.updateLastMessage();\n            }\n            if ($message.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`).length) {\n                let code =  $message.find('confirm').attr('id');\n                if (($message.attr('from') == this.account.xabber_auth.api_jid) && ($message.attr('id') == this.account.xabber_auth.request_id)) {\n                    this.account.verifyXabberAccount(code, (data) => {\n                        if (xabber.api_account && this.account.get('auto_login_xa')) {\n                            xabber.api_account.save('token', data);\n                            xabber.api_account.login_by_token();\n                        }\n                    });\n                }\n                else {\n                    return this.receiveChatMessage(message);\n                }\n            }\n            return;\n        },\n\n        receiveStanzaId: function ($message, options) {\n            options.replaced && ($message = $message.children('replace').children('message'));\n            let $stanza_id, $contact_stanza_id, attrs = {},\n                from_bare_jid = options.from_bare_jid;\n                $message.children('stanza-id').each((idx, stanza_id) => {\n                stanza_id = $(stanza_id);\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && !($message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE_HTTP}\"]`).length || $message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE}\"]`).length)) {\n                    if (stanza_id.attr('by') === from_bare_jid) {\n                        $stanza_id = stanza_id;\n                        $contact_stanza_id = stanza_id;\n                    }\n                    else\n                        $stanza_id = stanza_id;\n                }\n                else {\n                    if (stanza_id.attr('by') === this.account.get('jid'))\n                        $stanza_id = stanza_id;\n                    else\n                        $contact_stanza_id = stanza_id;\n                }\n            });\n            $stanza_id && (attrs.stanza_id = $stanza_id.attr('id'));\n            $contact_stanza_id && (attrs.contact_stanza_id = $contact_stanza_id.attr('id'));\n            return attrs;\n        },\n\n        receiveChatMessage: function (message, options) {\n            options = options || {};\n            let $message = $(message),\n                $forwarded = $message.find('forwarded'),\n                $delay = options.delay,\n                to_jid = $message.attr('to'),\n                to_bare_jid = Strophe.getBareJidFromJid(to_jid),\n                to_resource = to_jid && Strophe.getResourceFromJid(to_jid),\n                from_jid = $message.attr('from') || options.from_jid;\n\n            if ($message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && !options.forwarded) {\n                if (this.account.omemo)\n                    this.account.omemo.receiveChatMessage(message, options);\n                return;\n            }\n\n            if ($message.find('invite').length) {\n                if (options.forwarded)\n                    return;\n            }\n\n            if (!from_jid) {\n                from_jid = this.account.get('jid');\n            }\n            let from_bare_jid = Strophe.getBareJidFromJid(from_jid),\n                is_sender = from_bare_jid === this.account.get('jid');\n\n            if (options.forwarded && (!$forwarded.length || (options.xml))) {\n                return this.account.forwarded_messages.createFromStanza($message, {\n                    is_forwarded: true,\n                    forwarded_message: options.forwarded_message || null,\n                    delay: $delay,\n                    replaced: options.replaced,\n                    from_jid: from_jid,\n                    xml: options.xml\n                });\n            }\n\n            if ($forwarded.length && !options.xml) {\n                let $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n                if ($mam.length) {\n                    $forwarded = $mam.children('forwarded');\n                    if ($forwarded.length) {\n                        $message = $forwarded.children('message');\n                        $delay = $forwarded.children('delay');\n                    }\n                    let stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid});\n                    return this.receiveChatMessage($message[0], _.extend(options, {\n                        is_mam: true,\n                        delay: $delay,\n                        stanza_id: stanza_ids.stanza_id || $mam.attr('id'),\n                        contact_stanza_id: stanza_ids.contact_stanza_id\n                    }));\n                }\n                let $carbons = $message.find(`[xmlns=\"${Strophe.NS.CARBONS}\"]`);\n                if (!options.carbon_copied && $carbons.length && ['received', 'sent'].includes($carbons[0].tagName)) {\n                    if ($message.find('invite').length) {\n                        if ($carbons[0].tagName === 'sent')\n                            return;\n                    }\n                    if (!is_sender)\n                        return;\n                    $forwarded = $carbons.children('forwarded');\n                    if ($forwarded.length)\n                        $message = $forwarded.children('message');\n                    if ($carbons.find(`request[xmlns=\"${Strophe.NS.DELIVERY}\"][to=\"${to_bare_jid}\"]`).length)\n                        return;\n                    if (this.account.fast_connection && ($message.attr('from') === this.account.fast_connection.jid))\n                        return;\n                    return this.receiveChatMessage($message[0], _.extend(options, {\n                        carbon_copied: true, carbon_direction: $carbons[0].tagName\n                    }));\n                }\n                let forwarded_msgs = [];\n                $forwarded = $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n                    $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]') :\n                    $message.children('envelope').children('content').children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]');\n                $forwarded.each((idx, forwarded_msg) => {\n                    let $forwarded_msg = $(forwarded_msg),\n                        $forwarded_message = $forwarded_msg.children('message'),\n                        $forwarded_delay = $forwarded_msg.children('delay');\n                    let forwarded_message = this.receiveChatMessage($forwarded_message[0], {\n                        forwarded: true,\n                        pinned_message: options.pinned_message,\n                        participant_message: options.participant_message,\n                        searched_message: options.searched_message,\n                        is_searched: options.is_searched,\n                        context_message: options.context_message,\n                        from_jid: from_jid,\n                        delay: $forwarded_delay\n                    });\n                    forwarded_msgs.push(forwarded_message);\n                });\n                return this.receiveChatMessage($message[0], _.extend({\n                    forwarded_message: forwarded_msgs.length ? forwarded_msgs : null,\n                    xml: $message[0]\n                }, options));\n            }\n\n            if (!options.is_mam && to_resource && to_resource !== this.account.resource) {\n                xabber.warn('Message to another resource');\n                xabber.warn(message);\n            }\n\n            let contact_jid = is_sender ? to_bare_jid : from_bare_jid;\n            options.replaced && (contact_jid = $message.children('replace').attr('conversation'));\n\n            if (contact_jid === this.account.get('jid')) {\n                if (options.carbon_copied && options.carbon_direction === 'sent' || !options.carbon_copied) {\n                    let chat = this.getSavedChat(),\n                        stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n                    return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n                } else {\n                    xabber.warn('Message from me to me');\n                    xabber.warn(message);\n                    return;\n                }\n            }\n\n            let contact = this.account.contacts.mergeContact(contact_jid),\n                chat = this.account.chats.getChat(contact, (options.encrypted || options.not_encrypted) && 'encrypted'),\n                stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n\n            if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n                if (!contact)\n                    return;\n                let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n                if (participant_version && contact.participants && contact.participants.version < participant_version){\n                    if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && chat.contact.get('pinned_message')){\n                        $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '#system-message\"]').each((idx, x_elem) => {\n                            let $user = $(x_elem).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                            if ($user.length) {\n                                let user_id = $user.attr('id'),\n                                    user_jid = $user.children('jid').text();\n                                if (chat.contact.get('pinned_message').get('from_jid') === user_jid) {\n                                    let pinned_message = chat.contact.get('pinned_message'),\n                                        user_info = {\n                                            id: user_id,\n                                            jid: user_jid,\n                                            nickname: $user.children('nickname').text() || user_jid || user_id,\n                                            role: $user.children('role').text(),\n                                            avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                                            avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                                            badge: $user.children('badge').text()\n                                        };\n                                    pinned_message.set('user_info', user_info);\n                                    chat.contact.set('pinned_message', pinned_message);\n                                }\n                            }\n                        });\n                    }\n                    if (contact.details_view && contact.details_view.isVisible())\n                        contact.trigger('update_participants');\n                }\n            }\n\n            if ($message.find('device[xmlns=\"' + Strophe.NS.AUTH_DEVICES + '\"]').length && !options.is_archived) {\n                this.account.getAllXTokens();\n            }\n\n            if (chat.contact.get('group_chat') && options.carbon_direction === 'sent' && !$message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`).length)\n                return;\n\n            return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n        },\n\n        receiveErrorMessage: function (message) {\n            let msgid = message.getAttribute('id'),\n                origin_id = $(message).children('origin-id').attr('id');\n            if (msgid) {\n                let code = $(message).find('error').attr('code'),\n                    msg = this.account.messages.get(origin_id || msgid);\n                if (msg) {\n                    if (code === '405') {\n                        msg.set('state', constants.MSG_BLOCKED);\n                    }\n                    if (code === '406') {\n                        msg.set('state', constants.MSG_ERROR);\n                    }\n                }\n            }\n        },\n\n        onPresence: function (contact, type) {\n            let chat = this.getChat(contact);\n            chat.onPresence(type);\n        },\n\n        onRosterPush: function (contact, type) {\n            let chat = this.getChat(contact);\n            chat.onRosterPush(type);\n        }\n    });\n\n    xabber.AddGroupChatView = xabber.SearchView.extend({\n        className: 'modal main-modal add-group-chat-modal add-contact-modal',\n        template: templates.group_chats.add_group_chat,\n        avatar_size: constants.AVATAR_SIZES.ACCOUNT_ITEM,\n        ps_selector: '.rich-textarea',\n        ps_settings: {theme: 'item-list'},\n\n        events: {\n            \"click .dropdown-content#select-account-for-creating-groupchat\": \"selectAccount\",\n            \"click .btn-add\": \"addGroupChat\",\n            \"keyup .input-group-chat-name input\": \"updateGroupJid\",\n            \"keyup .rich-textarea\": \"showPlaceholder\",\n            \"keyup .input-group-chat-jid input\": \"fixJid\",\n            \"click .btn-cancel\": \"close\",\n            \"click .property-variant\": \"changePropertyValue\"\n        },\n\n        render: function (options) {\n            if (!xabber.accounts.connected.length) {\n                utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n                return;\n            }\n            options || (options = {});\n            this.setDefaultSettings(options);\n            let accounts = options.account ? [options.account] : xabber.accounts.connected;\n            this.$('.single-acc').showIf(accounts.length === 1);\n            this.$('.multiple-acc').hideIf(accounts.length === 1);\n            this.$('.dropdown-content#select-account-for-creating-groupchat').empty();\n            _.each(accounts, (account) => {\n                this.$('.dropdown-content#select-account-for-creating-groupchat').append(\n                        this.renderAccountItem(account));\n            });\n            this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n            this.bindAccount(accounts[0]);\n            this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n            this.$el.openModal({\n                ready: () => {\n                    let dropdown_settings = {\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    };\n                    Materialize.updateTextFields();\n                    this.$('.account-dropdown-wrap').dropdown(dropdown_settings);\n                    this.$('.property-field .dropdown-button').dropdown(dropdown_settings);\n                    this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n                    this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n                    this.$('input[name=\"chat_name\"]').focus();\n                },\n                complete: this.close.bind(this)\n            });\n\n        },\n\n        setDefaultSettings: function (options) {\n            this.$('.incognito-field .public-item-wrap').showIf(options.public);\n            this.$('.incognito-field .incognito-item-wrap').showIf(options.incognito);\n            if (options.public)\n                this.$('.modal-header span').text(xabber.getString(\"create_group\"));\n            if (options.incognito)\n                this.$('.modal-header span').text(xabber.getString(\"create_incognito_group\"));\n            this.$('input[name=chat_jid]').removeClass('fixed-jid').val(\"\");\n            this.$('#new_chat_domain').val(\"\");\n            this.$('input[name=chat_name]').val(\"\");\n            this.$('.description-field .rich-textarea').text(\"\");\n            this.$('.btn-add').addClass('non-active');\n            this.showPlaceholder();\n            this.$('span.errors').text('').addClass('hidden');\n            this.$('input').removeClass('invalid');\n            let $global_wrap = this.$('.global-dropdown-wrap'),\n                default_global_value = $global_wrap.find('.dropdown-content .default-value');\n            $global_wrap.find('.global-item-wrap .property-value').attr('data-value', default_global_value.attr('data-value')).text(default_global_value.text());\n            let $membership_wrap = this.$('.membership-dropdown-wrap'),\n                default_membership_value = $membership_wrap.find('.dropdown-content .default-value');\n            $membership_wrap.find('.membership-item-wrap .property-value').attr('data-value', default_membership_value.attr('data-value')).text(default_membership_value.text());\n        },\n\n        bindAccount: function (account) {\n            this.account = account;\n            this.$('.input-group-chat-domain').addClass('hidden');\n            this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n                    .replaceWith(this.renderAccountItem(account));\n            let all_servers = this.account.get('groupchat_servers_list');\n            if (all_servers.length){\n                this.$('.xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n                this.$('.select-xmpp-server .caret').removeClass('hidden')\n                this.$('.xmpp-server-item-wrap .property-value').removeClass('hidden')\n            }\n            else\n                this.setCustomDomain(this.$('.property-field.xmpp-server-dropdown-wrap .property-value'));\n            this.$('.modal-content .jid-field .set-default-domain').remove();\n            for (let i = 0; i < all_servers.length; i++) {\n                $('<div/>', {class: 'field-jid property-variant set-default-domain'}).text(all_servers[i]).insertBefore(this.$('.modal-content .jid-field .set-custom-domain'));\n            }\n        },\n\n        renderAccountItem: function (account) {\n            let $item = $(templates.add_chat_account_item({jid: account.get('jid'), name: account.get('name')}));\n            $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n            return $item;\n        },\n\n        selectAccount: function (ev) {\n            let $item = $(ev.target).closest('.account-item-wrap'),\n                account = xabber.accounts.get($item.data('jid'));\n            this.bindAccount(account);\n        },\n\n        setCustomDomain: function ($property_value) {\n            this.$('#new_chat_domain').val(\"\");\n            this.$('.select-xmpp-server .caret').addClass('hidden');\n            $property_value.addClass('hidden').text(\"\");\n            this.$('.input-group-chat-domain').removeClass('hidden');\n        },\n\n        changePropertyValue: function (ev) {\n            let $property_item = $(ev.target),\n                $property_value = $property_item.closest('.property-field').find('.property-value');\n            if ($property_item.hasClass('set-custom-domain')) {\n                this.setCustomDomain($property_value);\n                return;\n            }\n            else if ($property_item.hasClass('set-default-domain')) {\n                this.$('.input-group-chat-domain').addClass('hidden');\n                this.$('#new_chat_domain').val(\"\");\n            }\n            $property_value.text($property_item.text());\n            $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n            this.$('.select-xmpp-server .caret').removeClass('hidden')\n        },\n\n        close: function () {\n            this.$el.closeModal({ complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        },\n\n        updateGroupJid: function () {\n            let elem = this.$('input[name=chat_jid]');\n            if (!elem.hasClass('fixed-jid')) {\n                let text = slug(this.$('.input-group-chat-name input').get(0).value, {lower: true});\n                this.$(\"label[for=new_chat_jid]\").addClass('active');\n                this.$('.input-field #new_chat_jid').get(0).value = text;\n            }\n            this.$('.btn-add').switchClass('non-active', !this.$('.input-group-chat-name input').get(0).value);\n        },\n\n        showPlaceholder: function () {\n            let textarea_is_empty = (this.$('.rich-textarea ').text() !== \"\") ? false : true;\n            this.$('.rich-textarea-wrap .placeholder').hideIf(!textarea_is_empty);\n        },\n\n        fixJid: function () {\n            let elem = this.$('input[name=chat_jid]');\n            !elem.hasClass('fixed-jid') && elem.addClass('fixed-jid');\n            (elem.get(0).value == \"\") && elem.removeClass('fixed-jid');\n        },\n\n        createGroupChat: function () {\n            let name = this.$('input[name=chat_name]').val(),\n                chat_jid = this.$('input[name=chat_jid]').val() ? this.$('input[name=chat_jid]').val() : undefined,\n                privacy = this.$('.incognito-field .property-wrap:not(.hidden) .property-value').attr('data-value'),\n                domain = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n                searchable = this.$('input[name=\"group_index\"]:checked').attr('data-value'),\n                description = this.$('.description-field .rich-textarea').text() || \"\",\n                model = this.$('input[name=\"group_membership\"]:checked').attr('data-value'),\n                iq = $iq({type: 'set', to: domain}).c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#create'})\n                    .c('name').t(name).up()\n                    .c('privacy').t(privacy).up()\n                    .c('index').t(searchable).up()\n                    .c('description').t(description).up()\n                    .c('membership').t(model).up();\n                if (chat_jid)\n                    iq.c('localpart').t(chat_jid);\n            this.account.sendIQFast(iq, (iq) => {\n                    let group_jid = $(iq).find('query localpart').text().trim() + '@' + $(iq).attr('from').trim(),\n                        contact = this.account.contacts.mergeContact(group_jid);\n                    contact.set('group_chat', true);\n                    contact.set('subscription_preapproved', true);\n                    contact.pres('subscribed');\n                    contact.pushInRoster(null, () => {\n                        contact.pres('subscribe');\n                        contact.getMyInfo();\n                        this.close();\n                        xabber.chats_view.updateScreenAllChats();\n                        contact.sendPresent();\n                        contact.trigger(\"open_chat\", contact);\n                        if (!(this.account.connection && this.account.connection.do_synchronization)) {\n                            let iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n                                .c('item', {jid: group_jid + '/' + moment.now()});\n                            this.account.sendIQFast(iq_set_blocking);\n                        }\n                    });\n                }, () => {\n                    this.$('span.errors').removeClass('hidden').text(xabber.getString(\"groupchat_jid_already_exists\"));\n                    this.$('input[name=\"chat_jid\"]').addClass('invalid');\n                });\n        },\n\n        addGroupChat: function (ev) {\n            if ($(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                $(ev.target).blur();\n                return;\n            }\n            let xmpp_server = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n                input_value = this.$('input[name=chat_jid]').val();\n            if (this.$('input[name=chat_name]').val() == \"\") {\n                this.$('span.errors').text(xabber.getString(\"group_is_empty\")).removeClass('hidden');\n                this.$('input[name=\"chat_name\"]').addClass('invalid');\n            } else {\n                if ((input_value == \"\")||((input_value.search(/[А-яЁё]/) == -1)&&(input_value.search(/\\s/) == -1)&&(input_value != \"\"))) {\n                    this.$('span.errors').text('').addClass('hidden');\n                    this.$('input').removeClass('invalid');\n                    let iq = $iq({type: 'get', to: xmpp_server}).c('query', {xmlns: Strophe.NS.DISCO_INFO}),\n                        group_chats_support;\n                    this.account.sendIQFast(iq, (iq) => {\n                        $(iq).children('query').children('feature').each((elem, item) => {\n                            if ($(item).attr('var') == Strophe.NS.GROUP_CHAT)\n                                group_chats_support = true;\n                        });\n                        if (group_chats_support)\n                            this.createGroupChat();\n                        else {\n                            this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_server_does_not_support\")}`);\n                            this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                        }\n                    }, (response) => {\n                        this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_invalid_domain\")}`); // !!!!!!!!!!!!!!!!!! :::::\n                        this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                    });\n                }\n                else {\n                    this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_localpart_invalid\")}`);\n                    this.$('input[name=\"chat_jid\"]').addClass('invalid');\n                }\n            }\n        }\n    });\n\n    xabber.ChatsView = xabber.SearchPanelView.extend({\n        className: 'recent-chats-container container',\n        ps_selector: '.chat-list-wrap',\n        ps_settings: {theme: 'item-list'},\n        main_container: '.chat-list',\n        template: templates.chats_panel,\n\n        _initialize: function () {\n            this.active_chat = null;\n            this.model.on(\"add\", this.onChatAdded, this);\n            this.model.on(\"destroy\", this.onChatRemoved, this);\n            this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n            this.model.on(\"change:unread\", this.onChangedReadStatus, this);\n            this.model.on(\"change:const_unread\", this.onChangedReadStatus, this);\n            this.model.on(\"change:timestamp\", this.updateChatPosition, this);\n            xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n            let wheel_ev = this.defineMouseWheelEvent();\n            this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n            this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n            this.$('.read-all-button').click(this.readAllMessages.bind(this));\n            xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n            xabber.on(\"update_layout\", this.onWindowResized, this);\n            this.$('input').on('input', this.updateSearch.bind(this));\n        },\n\n        render: function (options) {\n            if (options.right === undefined)\n                this.active_chat = null;\n            this.$('.chat-list-wrap').switchClass('with-padding', xabber.toolbar_view.$('.toolbar-item.unread').length);\n            if (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'searched_messages' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search) {\n                this.clearSearch();\n                if (xabber.toolbar_view.$('.active').hasClass('all-chats')) {\n                    this.showAllChats();\n                }\n            }\n        },\n\n        readAllMessages: function () {\n            let chats = this.model,\n                active_toolbar = xabber.toolbar_view.$('.active');\n            if (active_toolbar.hasClass('chats')) {\n                let private_chats = chats.filter(chat => chat.get('saved') || !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n                private_chats.forEach((chat) => {\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.readMessages();\n                });\n            }\n            if (active_toolbar.hasClass('all-chats')) {\n                let all_chats = chats.filter(chat => chat.get('saved') || chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n                all_chats.forEach((chat) => {\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.readMessages();\n                });\n            }\n            if (active_toolbar.hasClass('group-chats')) {\n                let group_chats = chats.filter(chat => chat.get('saved') || chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n                group_chats.forEach((chat) => {\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.readMessages();\n                });\n            }\n            xabber.toolbar_view.recountAllMessageCounter();\n        },\n\n        onUpdatedScreen: function (name) {\n            this.$('.read-all-button').switchClass('hidden', !xabber.toolbar_view.$('.toolbar-item.active.unread').length);\n        },\n\n        // onWindowResized: function (options) {\n        //     options.size_changed && this.onScroll();\n        // },\n\n        defineMouseWheelEvent: function () {\n            if (!_.isUndefined(window.onwheel)) {\n                return \"wheel\";\n            } else if (!_.isUndefined(window.onmousewheel)) {\n                return \"mousewheel\";\n            } else {\n                return \"MozMousePixelScroll\";\n            }\n        },\n\n        onMouseWheel: function (ev) {\n            // if (ev.originalEvent.deltaY > 0)\n            //     this.onScroll();\n        },\n\n        hideChatsFeedback: function () {\n            clearTimeout(this._load_chats_timeout);\n            this.$('.load-chats-feedback').addClass('hidden');\n            this.updateScrollBar();\n            this._load_chats_timeout = null;\n        },\n\n        // onScroll: function () {\n        //     if (this.getScrollBottom() < 12 && !this._load_chats_timeout && this.isVisible()) {\n        //         this._load_chats_timeout = setTimeout(() => {\n        //             this.hideChatsFeedback();\n        //         }, 5000);\n        //         let accounts = xabber.accounts.connected.filter(account => !account.roster.conversations_loaded && account.connection && account.connection.do_synchronization);\n        //         if (accounts.length) {\n        //             this.$('.load-chats-feedback').text(xabber.getString(\"placeholder_loading\")).removeClass('hidden');\n        //             this.updateScrollBar();\n        //         }\n        //         accounts.forEach((account) => {\n        //             let options = {max: xabber.settings.mam_messages_limit};\n        //             account.roster.last_chat_msg_id && (options.after = account.roster.last_chat_msg_id);\n        //             account.roster.syncFromServer(options);\n        //         });\n        //     }\n        // },\n\n        updateLeftIndicator: function (accounts) {\n            this.$el.attr('data-indicator', accounts.connected.length > 1);\n        },\n\n        onChatAdded: function (chat) {\n            this.addChild(chat.id, chat.item_view);\n            this.updateChatPosition(chat);\n        },\n\n        onChatRemoved: function (chat, options) {\n            if (this.active_chat === this.child(chat.id)) {\n                this.active_chat = null;\n                xabber.body.setScreen(null, {chat_item: null},\n                        {silent: !xabber.body.isScreen('all-chats')});\n            }\n            this.removeChild(chat.id, options);\n            this.updateScrollBar();\n        },\n\n        onChangedActiveStatus: function (chat) {\n            if (chat.get('active')) {\n                let previous_chat = this.active_chat;\n                this.active_chat = this.child(chat.id);\n                previous_chat && previous_chat.model.set('active', false);\n            }\n        },\n\n        onChangedReadStatus: function (item) {\n            let view = this.child(item.id),\n                active_toolbar = xabber.toolbar_view.$('.active');\n            if (!view)\n                return;\n            if (!active_toolbar.hasClass('unread') || (active_toolbar.hasClass('unread') && (item.get('unread') || item.get('const_unread'))))\n                return;\n            view.detach();\n            if (!this.$('.chat-item').length && active_toolbar.hasClass('unread')) {\n                active_toolbar.click();\n            }\n        },\n\n        replaceChatItem: function (item, chats, pinned_chats) {\n            let view = this.child(item.id);\n            if (view && item.get('pinned') && item.get('pinned') !== '0' && pinned_chats ){\n                pinned_chats = pinned_chats.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n                let index = pinned_chats.indexOf(item);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(view.$el);\n                } else {\n                    let $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                    while (!$chat_item.length && index > 0) {\n                        index--;\n                        $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                    }\n                    $chat_item.after(view.$el);\n                }\n            }\n            else if (view && (item.get('timestamp') || item.get('saved'))) {\n                view.$el.detach();\n                let index = chats.indexOf(item);\n                if (index === 0) {\n                    this.$('.chat-list').prepend(view.$el);\n                } else {\n                    this.$('.chat-list .chat-item').eq(index - 1).after(view.$el);\n                }\n            }\n        },\n\n        updateChatPosition: function (item) {\n            let view = this.child(item.id),\n                active_toolbar = xabber.toolbar_view.$('.active');\n            if (!view)\n                return;\n            if (active_toolbar.hasClass('unread') && !(item.get('unread') || item.get('const_unread')))\n                return;\n            active_toolbar.hasClass('group-chats') && (view.model.get('saved') || view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n            active_toolbar.hasClass('chats') && (view.model.get('saved') || !view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n            active_toolbar.hasClass('all-chats') && (view.model.get('saved') || !view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n            active_toolbar.hasClass('archive-chats') && (view.model.get('saved') || view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved') || chat.get('archived')));\n            active_toolbar.hasClass('account-item') && (view.model.get('saved') || (view.account.get('jid') === active_toolbar.attr('data-jid'))) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.account.get('jid') === (active_toolbar.attr('data-jid')) && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.account.get('jid') === (active_toolbar.attr('data-jid')) && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        },\n\n        onEnterPressed: function (selection) {\n            let view;\n            if (selection.closest('.searched-lists-wrap').length) {\n                this.clearSearch();\n                this.$('.list-item.active').removeClass('active');\n                if (selection.hasClass('chat-item')) {\n                    view = this.child(selection.data('id'));\n                    view && view.open();\n                    selection.addClass('active');\n                }\n                if (selection.hasClass('roster-contact')) {\n                    view = xabber.accounts.get(selection.data('account')).chats.getChat(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')));\n                    view && (view = view.item_view);\n                    view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                    selection.addClass('active');\n                }\n                if (selection.hasClass('message-item')) {\n                    selection.click();\n                }\n            }\n            else {\n                view = this.child(selection.data('id'));\n                view && view.open();\n            }\n        },\n\n        openChat: function (view, options) {\n            if (!view.content)\n                view.content = new xabber.ChatContentView({chat_item: view});\n            options = options || {};\n            this.$('.list-item.active').removeClass('active');\n            view.updateActiveStatus();\n            let scrolled_top = xabber.chats_view.getScrollTop();\n            options.clear_search && this.clearSearch();\n            if (view.contact && !view.contact.get('in_roster') && (view.model.get('is_accepted') == false)) {\n                view.model.set('display', true);\n                view.model.set('active', true);\n                xabber.body.setScreen('all-chats', {right: 'group_invitation', contact: view.contact });\n            }\n            else {\n                if (xabber.toolbar_view.$('.active').hasClass('contacts'))\n                    this.updateScreenAllChats();\n                if (!view.model.get('history_loaded') && (view.model.messages.length < 20)) {\n                    view.content.loadPreviousHistory();\n                }\n                if (!view.model.get('displayed_sent') && view.model.messages.length) {\n                    let last_msg = view.model.messages.models[view.model.messages.length - 1];\n                    if (last_msg)\n                        if (!last_msg.isSenderMe() && (view.model.get('unread') || view.model.get('const_unread'))) {\n                            view.model.sendMarker(last_msg.get('msgid'), 'displayed', last_msg.get('stanza_id'), last_msg.get('contact_stanza_id'));\n                            view.model.set('displayed_sent', true);\n                        }\n                }\n                if (xabber.body.screen.get('right_contact') && (xabber.body.screen.get('right') === 'chat' || xabber.body.screen.get('right') === 'message_context' )) {\n                    if (view.model.get('saved'))\n                        xabber.body.setScreen((options.screen || 'all-chats'), {right_contact: ''});\n                    else if(xabber.right_contact_panel_saveable)\n                        view.contact.showDetailsRight('all-chats', {right_saved: true, encrypted: view.model.get('encrypted')});\n                    else\n                        view.contact.showDetailsRight('all-chats', {right_saved: false});\n                }\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save} );\n                if (view.contact && (!view.contact.get('vcard_updated') || (view.contact.get('group_chat') && !view.contact.get('group_info')) || (view.contact.get('vcard_updated') && !moment(view.contact.get('vcard_updated')).startOf('hour').isSame(moment().startOf('hour'))))) {\n                    view.contact.getVCard();\n                }\n            }\n            xabber.chats_view.scrollTo(scrolled_top);\n        },\n\n        showGroupChats: function () {\n            this.$('.chat-item').detach();\n            let chats = this.model,\n                is_unread = xabber.toolbar_view.$('.active.unread').length,\n                group_chats = [],\n                group_chats_pinned = [];\n            if (is_unread) {\n                group_chats = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n                group_chats_pinned = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n            }\n            if (!group_chats.length && !group_chats_pinned.length) {\n                group_chats = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n                group_chats_pinned = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n                xabber.toolbar_view.$('.toolbar-item.unread').removeClass('unread');\n                this.onUpdatedScreen();\n            }\n            group_chats.forEach((chat) => {\n                this.$('.chat-list').append(chat.item_view.$el);\n            });\n            if (group_chats_pinned) {\n                group_chats_pinned = group_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n                group_chats_pinned.forEach((chat) => {\n                    let index = group_chats_pinned.indexOf(chat);\n                    if (index === 0) {\n                        this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                    } else {\n                        this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                    }\n                });\n            }\n        },\n\n        showChats: function () {\n            this.$('.chat-item').detach();\n            let chats = this.model,\n                is_unread = xabber.toolbar_view.$('.active.unread').length,\n                private_chats = [],\n                private_chats_pinned = [];\n            if (is_unread) {\n                private_chats = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n                private_chats_pinned = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n            }\n            if (!private_chats.length && !private_chats_pinned.length) {\n                private_chats = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n                private_chats_pinned = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n                xabber.toolbar_view.$('.toolbar-item.unread').removeClass('unread');\n                this.onUpdatedScreen();\n            }\n            private_chats.forEach((chat) => {\n                this.$('.chat-list').append(chat.item_view.$el);\n            });\n            if (private_chats_pinned) {\n                private_chats_pinned = private_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n                private_chats_pinned.forEach((chat) => {\n                    let index = private_chats_pinned.indexOf(chat);\n                    if (index === 0) {\n                        this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                    } else {\n                        this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                    }\n                });\n            }\n        },\n\n        showChatsByAccount: function (account) {\n            xabber.body.setScreen('all-chats');\n            this.$('.chat-item').detach();\n            let chats = this.model,\n                account_chats = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && (chat.get('pinned') === '0' || !chat.get('pinned'))),\n                account_chats_pinned = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n            this.$(`.omemo-item:not([data-id=\"${account.get('jid')}\"])`).addClass('hidden');\n            account_chats.forEach((chat) => {\n                this.$('.chat-list').append(chat.item_view.$el);\n            });\n            if (account_chats_pinned) {\n                account_chats_pinned = account_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n                account_chats_pinned.forEach((chat) => {\n                    let index = account_chats_pinned.indexOf(chat);\n                    if (index === 0) {\n                        this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                    } else {\n                        this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                    }\n                });\n            }\n        },\n\n        showArchiveChats: function () {\n            this.$('.chat-item').detach();\n            let chats = this.model,\n                archive_chats = chats.filter(chat => !chat.get('saved') && chat.get('archived'));\n            archive_chats.forEach((chat) => {\n                this.$('.chat-list').append(chat.item_view.$el);\n            });\n        },\n\n        showAllChats: function () {\n            this.$('.chat-item').detach();\n            let chats = this.model,\n                is_unread = xabber.toolbar_view.$('.active.unread').length,\n                all_chats = [],\n                all_chats_pinned = [];\n            if (is_unread) {\n                all_chats = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && (chat.get('pinned') === '0' || !chat.get('pinned')) );\n                all_chats_pinned = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n            }\n            if (!all_chats.length && !all_chats_pinned.length) {\n                all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n                all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n                xabber.toolbar_view.$('.toolbar-item.unread').removeClass('unread');\n                this.onUpdatedScreen();\n            }\n            all_chats.forEach((chat) => {\n                this.$('.chat-list').append(chat.item_view.$el);\n            });\n            if (all_chats_pinned) {\n                all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n                all_chats_pinned.forEach((chat) => {\n                    let index = all_chats_pinned.indexOf(chat);\n                    if (index === 0) {\n                        this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                    } else {\n                        this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                    }\n                });\n            }\n        },\n\n        updateScreenAllChats: function () {\n            xabber.toolbar_view.$('.toolbar-item').removeClass('active')\n                .filter('.all-chats').addClass('active');\n            this.showAllChats();\n        }\n    });\n\n      xabber.MessageItemView = xabber.BasicView.extend({\n          className: 'message-item list-item',\n          template: templates.message_item,\n          avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n          events: {\n              'click': 'openByClick'\n          },\n\n          _initialize: function () {\n              this.contact = this.model.contact;\n              this.account = this.contact ? this.contact.account : this.model.account;\n              this.$el.attr('data-id', this.model.id + '-' + this.cid);\n              this.$el.attr('data-contact-jid', this.contact.get('jid'));\n              this.updateName();\n              this.updateLastMessage();\n              this.updateAvatar();\n              this.updateColorScheme();\n              this.updateGroupChats();\n              this.updateIcon();\n              this.updateStatus();\n              this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n              this.contact.on(\"change:status\", this.updateStatus, this);\n              this.contact.on(\"change:name\", this.updateName, this);\n          },\n\n          updateName: function () {\n              this.$('.chat-title').text(this.contact.get('name'));\n          },\n\n          updateAvatar: function () {\n              let image = this.contact.cached_image;\n              this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n          },\n\n          updateStatus: function () {\n              let status = this.contact.get('status'),\n                  status_message = this.contact.getStatusMessage();\n              this.$('.contact-status').attr('data-status', status);\n              this.$('.chat-icon').attr('data-status', status);\n              this.model.get('blocked') ? this.$('.contact-status-message').text(xabber.getString(\"action_contact_blocked\")) : this.$('.contact-status-message').text(status_message);\n          },\n\n          updateGroupChats: function () {\n              let is_group_chat = this.contact.get('group_chat');\n              this.$('.status').hideIf(is_group_chat);\n              this.updateIcon();\n              if (is_group_chat) {\n                  this.$el.addClass('group-chat');\n                  this.$('.chat-title').css('color', '#424242');\n                  this.model.set('group_chat', true);\n              }\n          },\n\n          updateIcon: function () {\n              this.$('.chat-icon').addClass('hidden');\n              let ic_name = this.contact.getIcon();\n              ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n          },\n\n          updateColorScheme: function () {\n              let color = this.account.settings.get('color');\n              this.$el.attr('data-color', color);\n          },\n\n          updateLastMessage: function (msg) {\n              msg || (msg = this.model);\n              if (!msg)\n                  return;\n              let msg_time = msg.get('time'),\n                  timestamp = msg.get('timestamp'),\n                  forwarded_message = msg.get('forwarded_message'),\n                  msg_files = msg.get('files') || [],\n                  msg_images = msg.get('images') || [],\n                  msg_locations = msg.get('locations') || [],\n                  msg_text = (forwarded_message) ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n                  msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes || {}, msg_from = \"\";\n              msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n              this.model.set({timestamp: timestamp});\n              if (this.model.get('group_chat'))\n                  msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n              if (msg_files.length || msg_images.length || msg_locations.length) {\n                  let $colored_span = $('<span class=\"text-color-500\"/>');\n                  if (msg_files.length && msg_images.length)\n                      msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n                  else {\n                      if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                          msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                      else if (msg_files.length > 0) {\n                          let total_size = 0;\n                          msg_files.forEach((f) => {total_size+=Number(f.size)});\n                          msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                      }\n                      if (msg_images.length > 0) {\n                          let total_size = 0;\n                          msg_images.forEach((f) => {total_size+=Number(f.size)});\n                          msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                      }\n                      if (msg_locations.length > 0) {\n                          msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                      }\n                  }\n                  this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n              }\n              else {\n                  this.$('.last-msg').text(\"\").append(msg_text);\n                  if (msg_from)\n                      this.$('.last-msg').prepend($('<span class=text-color-700>' + msg_from + ': ' + '</span>'));\n              }\n              this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n              this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n                  .attr('title', pretty_datetime(msg_time));\n              this.$('.msg-delivering-state').showIf(msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n                  .attr('data-state', msg.getState());\n          },\n\n          openByClick: function () {\n              let chat = this.account.chats.getChat(this.contact);\n              this.$el.closest('.left-panel-list-wrap').find('.list-item').removeClass('active');\n              this.$el.addClass('active');\n              xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n              xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n              if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n                  if (xabber.right_contact_panel_saveable)\n                      chat.contact.showDetailsRight('all-chats', {right_saved: true});\n                  else\n                      chat.contact.showDetailsRight('all-chats', {right_saved: false});\n              }\n              this.model.get('unique_id') && chat.getMessageContext(this.model.get('unique_id'), {message: true});\n          }\n      });\n\n\n      xabber.ForwardPanelView = xabber.SearchView.extend({\n        className: 'modal dialog-modal forward-panel-modal',\n        template: templates.forward_panel,\n        ps_selector: '.chat-list-wrap',\n        ps_settings: {theme: 'item-list'},\n\n        open: function (messages, account) {\n            this.messages = messages;\n            this.account = account;\n            this.$('.chat-list-wrap').html(\"\");\n            this.saved_chat = false;\n            xabber.chats_view.$('.chat-list-wrap .chat-item').each((idx, item) => {\n                let id = $(item).data('id'),\n                    chat = this.account.chats.get(id);\n                if (chat) {\n                    if (id == `${this.account.get('jid')}:saved`) {\n                        let $cloned_item = $(item).clone().removeClass('hidden');\n                        $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                        this.saved_chat = true;\n                        this.$('.chat-list-wrap').prepend($cloned_item);\n                    } else\n                        this.$('.chat-list-wrap').append($(item).clone().removeClass('hidden'));\n                }\n            });\n            if (!this.saved_chat) {\n                let saved_chat = this.account.chats.getSavedChat(),\n                    $cloned_item = saved_chat.item_view.$el.clone();\n                $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                this.$('.chat-list-wrap').prepend($cloned_item);\n            }\n            this.$('.chat-list-wrap').prepend($('<div/>', { class: 'forward-panel-list-title recent-chats-title hidden'}).text(xabber.getString(\"category_recent_chats\")));\n            this.$('.chat-list-wrap').append($('<div/>', { class: 'forward-panel-list-title contacts-title hidden'}).text(xabber.getString(\"category_title_contacts\")));\n            this.$('.chat-item').removeClass('active');\n            this.clearSearch();\n            this.data.set('visible', true);\n            this.$el.openModal({\n                ready: () => {\n                    this.updateScrollBar();\n                    this.$('.search-input').focus();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        },\n\n        close: function () {\n            let deferred = new $.Deferred();\n            this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n            return deferred.promise();\n        },\n\n        onClickItem: function (ev) {\n            let $target = $(ev.target).closest('.list-item');\n            this.onEnterPressed($target);\n        },\n\n        search: function (query) {\n            let jid, name, is_match = false, has_matches_chats = false, has_matches_contacts = false;\n            query = query.toLowerCase();\n            this.$('.roster-contact.list-item').remove();\n            query && this.account.roster.forEach((contact) => {\n                let jid = contact.get('jid'),\n                    chat_id = contact.hash_id,\n                    name = contact.get('name').toLowerCase(),\n                    is_match = (name.indexOf(query) < 0 && jid.indexOf(query) < 0) ? true : false;\n                if (!is_match) {\n                    if (!this.$('.chat-list-wrap .chat-item[data-id=\"' + chat_id + '\"]').length) {\n                        let contact_list_item = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-contact[data-jid=\"${jid}\"]`).first().clone();\n                        contact_list_item.find('.muted-icon').hide();\n                        this.$('.chat-list-wrap').append(contact_list_item);\n                    }\n                    else\n                        is_match = true;\n                }\n                !is_match && (has_matches_contacts = true);\n            });\n            this.$('.contacts-title').switchClass('hidden', !has_matches_contacts);\n            this.$('.chat-item').each((idx, item) => {\n                let chat = this.account.chats.get($(item).data('id'));\n                if (!chat) {\n                    $(item).addClass('hidden');\n                    return;\n                }\n                jid = chat.get('jid');\n                name = (chat.contact ? chat.contact.get('name') : chat.get('name'));\n                if (name)\n                    name = name.toLowerCase();\n                is_match = (!name || name && (name.indexOf(query) < 0 && jid.indexOf(query) < 0)) ? false : true;\n                $(item).hideIf(!is_match);\n                is_match && (has_matches_chats = true);\n            });\n            this.$('.recent-chats-title').switchClass('hidden', !has_matches_chats);\n            this.$('.modal-content .error').showIf(!has_matches_contacts && !has_matches_chats);\n            this.scrollToTop();\n        },\n\n        onEmptyQuery: function () {\n            this.$('.roster-contact.list-item').remove();\n            this.$('.contacts-title').addClass('hidden');\n            this.$('.recent-chats-title').addClass('hidden');\n        },\n\n        onEnterPressed: function (selection) {\n            let chat_item;\n            if (selection.hasClass('roster-contact'))\n                chat_item = this.account.chats.getChat(this.account.contacts.get(selection.data('jid'))).item_view;\n            if (selection.hasClass('chat-item'))\n                chat_item = xabber.chats_view.child(selection.data('id'));\n            chat_item && this.forwardTo(chat_item);\n        },\n\n        forwardTo: function (chat_item) {\n            if (chat_item.model.get('saved')) {\n                this.messages.forEach((message) => {\n                    chat_item.content.onSubmit(\"\", [message]);\n                });\n            }\n            else {\n                if (!chat_item.content)\n                    chat_item.content = new xabber.ChatContentView({chat_item: chat_item});\n                chat_item.content.bottom.setForwardedMessages(this.messages);\n            }\n            this.messages = [];\n            this.close().done(() => {\n                chat_item.open({clear_search: true});\n            });\n        }\n    });\n\n    xabber.InvitationPanelView = xabber.SearchView.extend({\n        className: 'modal dialog-modal add-user-group-chat',\n        template: templates.group_chats.invitation_panel_view,\n        ps_selector: '.contacts-list-wrap',\n        ps_settings: {theme: 'item-list'},\n\n        _initialize: function () {\n            this.registerClickEvents();\n        },\n\n        open: function (account, contact) {\n            this.selected_contacts = [];\n            this.account = account;\n            this.contact = contact;\n            this.clearPanel();\n            xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-group`).each((idx, item) => {\n                let group_node = $(item).clone();\n                $(group_node).find('.list-item').each((i, list_item) => {\n                    let contact_node = this.account.contacts.get($(list_item).attr('data-jid'));\n                    if (contact_node.get('group_chat'))\n                            list_item.remove();\n                });\n                if (group_node.children('.list-item').length) {\n                    this.$('.contacts-list-wrap').append(group_node);\n                    group_node.find('.arrow').click((ev) => {\n                        this.toggleContacts(ev);\n                    });\n                    group_node.find('.group-head').click((ev) => {\n                        this.selectAllGroup(ev);\n                    });\n                }\n            });\n            this.data.set('visible', true);\n            this.$el.openModal({\n                ready: () => {\n                    this.updateScrollBar();\n                    this.$('.search-input').focus();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                    this.selected_contacts = [];\n                }\n            });\n        },\n\n        addSelectedUsers: function () {\n            if (!this.selected_contacts.length) {\n                this.$('.modal-footer button').blur();\n                return;\n            }\n            let selected_users_count = this.selected_contacts.length,\n                _dfd_invitations = new $.Deferred(), invitations_count = 0;\n            _dfd_invitations.done((count) => {\n                let toast_text;\n                if (count == selected_users_count)\n                    toast_text = xabber.getQuantityString(\"groupchat__toast__invitations_sent\", selected_users_count);\n                else\n                    toast_text = xabber.getQuantityString(\"groupchat__toast_failed_to_sent_invitations\", selected_users_count);\n                utils.callback_popup_message(toast_text, 2000);\n                this.contact.trigger('invitations_send')\n            });\n            $(this.selected_contacts).each((idx, item) => {\n                this.sendInvite(item, () => {\n                    invitations_count++;\n                    if (idx == selected_users_count - 1)\n                        _dfd_invitations.resolve(invitations_count);\n                }, () => {\n                    if (idx == selected_users_count - 1)\n                        _dfd_invitations.resolve(invitations_count);\n                });\n            });\n            this.close();\n        },\n\n        clearPanel: function () {\n            this.$('.modal-footer .errors').text('');\n            this.$('.counter').text('');\n            this.$('.contacts-list-wrap').empty();\n            this.clearSearch();\n        },\n\n        registerClickEvents: function () {\n            this.$('.btn-cancel').click(() => {\n                this.close();\n            });\n            this.$('.btn-add').click(() => {\n                this.addSelectedUsers();\n            });\n        },\n\n        addUser: function (ev) {\n            let $target = $(ev.target).closest('.list-item'),\n                contact_jid = $target.attr('data-jid');\n            $target.toggleClass('click-selected');\n            let itemIdx = this.selected_contacts.indexOf(contact_jid);\n            if (itemIdx > -1)\n                this.selected_contacts.splice(itemIdx, 1);\n            else\n                this.selected_contacts.push(contact_jid);\n            this.updateCounter();\n        },\n\n        sendInvite: function (contact_jid, callback, errback) {\n            let iq = $iq({type: 'set', to: (this.contact.get('full_jid') || this.contact.get('jid'))})\n                    .c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                    .c('jid').t(contact_jid).up()\n                    .c('send').t('false').up()\n                    .c('reason').t((this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [contact_jid]));\n            this.account.sendIQFast(iq, () => {\n                this.sendInviteMessage(contact_jid);\n                this.close();\n                callback && callback();\n            }, (iq) => {\n                this.onInviteError(iq);\n                errback && errback();\n            });\n        },\n\n        onInviteError: function (iq) {\n            let err_text;\n            if ($(iq).find('not-allowed').length > 0) {\n                err_text = $(iq).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n            }\n            if ($(iq).find('conflict').length > 0) {\n                err_text = $(iq).find('text').text() || xabber.getString(\"groupchat__invitation__error_already_invited\", [$(iq).find('invite').find('jid').text()]);\n            }\n            this.$('.modal-footer .errors').removeClass('hidden').text(err_text);\n        },\n\n        sendInviteMessage: function(jid_to) {\n            let body = xabber.getString(\"groupchat_legacy_invitation_body\", [this.contact.get('jid')]),\n                stanza = $msg({\n                    to: jid_to,\n                    type: 'chat',\n                    id: uuid()\n                }).c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`, jid: this.contact.get('jid')})\n                    .c('reason').t((this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [jid_to])).up().up()\n                    .c('x', {xmlns: Strophe.NS.GROUP_CHAT})\n                    .c('privacy').t(this.contact.get('group_info').privacy).up().up()\n                    .c('body').t(body).up();\n            this.account.sendMsg(stanza);\n        },\n\n        search: function (query) {\n            query = query.toLowerCase();\n            query && this.$('.list-item').each((idx, item) => {\n                let jid = $(item).attr('data-jid'),\n                    name = this.account.contacts.get(jid).get('name').toLowerCase(),\n                    hide_clone = (this.$(`.list-item[data-jid=\"${jid}\"]`).length > 1) && (!this.$(`.list-item[data-jid=\"${jid}\"]`).first().is($(item)));\n                $(item).hideIf((name.indexOf(query) < 0 && jid.indexOf(query) < 0) || hide_clone);\n            });\n            this.$('.group-head').addClass('hidden');\n            this.$('.modal-content .error').switchClass('hidden', !(this.$('.list-item').length === this.$('.list-item.hidden').length));\n            this.scrollToTop();\n        },\n\n        onEmptyQuery: function () {\n            this.$('.list-item').removeClass('hidden');\n            this.$('.group-head').removeClass('hidden');\n        },\n\n        onClickItem: function (ev) {\n            this.addUser(ev);\n        },\n\n        onEnterPressed: function (selection) {\n            let contact_jid = selection.attr('data-jid'),\n                itemIdx = this.selected_contacts.indexOf(contact_jid);\n            if (itemIdx > -1)\n                this.selected_contacts.splice(itemIdx, 1);\n            this.selected_contacts.push(contact_jid);\n            this.updateCounter();\n            this.addSelectedUsers();\n        },\n\n        close: function () {\n            this.$el.closeModal({ complete: this.hide.bind(this) });\n        },\n\n        toggleContacts: function (ev) {\n            let is_visible = $(ev.target).hasClass('mdi-chevron-down');\n            if (is_visible) {\n                let group_roster = $(ev.target).closest('.roster-group');\n                group_roster.find('.list-item').each((idx, item) => {\n                    $(item).addClass('hidden');\n                });\n            }\n            else\n            {\n                let group_roster = $(ev.target).closest('.roster-group');\n                group_roster.find('.list-item').each((idx, item) => {\n                    $(item).removeClass('hidden');\n                });\n            }\n            $(ev.target).switchClass('mdi-chevron-right', is_visible);\n            $(ev.target).switchClass('mdi-chevron-down', !is_visible);\n            this.updateScrollBar();\n        },\n\n        selectAllGroup: function (ev) {\n            if ($(ev.target).hasClass('arrow'))\n                return;\n           let group_roster = $(ev.target).closest('.roster-group');\n           if (group_roster.hasClass('click-selected')) {\n               group_roster.removeClass('click-selected');\n               group_roster.find('.list-item').each((idx, item) => {\n                   let contact_jid = $(item).attr('data-jid'),\n                       itemIdx = this.selected_contacts.indexOf(contact_jid);\n                   if (itemIdx > -1) {\n                       this.selected_contacts.splice(itemIdx, 1);\n                       $(item).removeClass('click-selected');\n                   }\n               });\n           }\n           else\n           {\n               group_roster.addClass('click-selected');\n               group_roster.find('.list-item').each((idx, item) => {\n                   let contact_jid = $(item).attr('data-jid'),\n                       itemIdx = this.selected_contacts.indexOf(contact_jid);\n                   if (itemIdx > -1)\n                       return;\n                   else\n                       this.selected_contacts.push(contact_jid);\n                   $(item).addClass('click-selected');\n               });\n           }\n            this.updateCounter();\n        },\n\n        updateCounter: function () {\n            let selected_counter = this.$('.list-item.click-selected').length;\n            (selected_counter) ? this.$('.counter').removeClass('hidden').text(selected_counter) : this.$('.counter').text('');\n        }\n\n    });\n\n      xabber.SavedChatHeadView = xabber.BasicView.extend({\n          className: 'chat-head-wrap saved-chat',\n          template: templates.saved_chat_head,\n          events: {\n              \"click .contact-name\": \"showSettings\",\n              \"click .circle-avatar\": \"showSettings\",\n              \"click .btn-chat-pin\": \"pinSavedChat\",\n              \"click .btn-delete-chat\": \"deleteChat\",\n              \"click .btn-set-status\": \"setStatus\",\n              \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n              \"click .btn-next-plyr\": \"nextPlyr\",\n              \"click .btn-previous-plyr\": \"previousPlyr\",\n              \"click .btn-stop-plyr\": \"stopPlyr\",\n              \"click .btn-popup-plyr\": \"popupPlyr\",\n              \"click .btn-jingle-message\": \"openJingleMessage\",\n              \"click .btn-search-messages\": \"renderSearchPanel\"\n          },\n\n          _initialize: function (options) {\n              this.content = options.content;\n              this.contact = this.content.contact;\n              this.model = this.content.model;\n              clearInterval(this._update_oneliner_interval);\n              this.updateOneLiner();\n              this._update_oneliner_interval = setInterval(() => {\n                  this.updateOneLiner();\n              }, 1000*60*2);\n              this.account = this.model.account;\n              this.$el.find('.circle-avatar').html(env.templates.svg['saved-messages']());\n              this.model.on(\"close_chat\", this.closeChat, this);\n              xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n              xabber.on('update_layout', this.updatePlyrTitle, this);\n              xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n              xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n          },\n\n          render: function () {\n              this.$('.tooltipped').tooltip({delay: 50});\n              this.$('.btn-more').dropdown({\n                  inDuration: 100,\n                  outDuration: 100,\n                  hover: false\n              });\n              this.$('.chat-head-menu').hide();\n              this.updatePlyrControls();\n              this.updatePlyrTime();\n              this.updateJingleButton();\n              return this;\n          },\n\n          updateOneLiner: function () {\n              let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n                  one_liner = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n              if (!one_liner) {\n                  this.updateOneLiner();\n                  return;\n              }\n              this.$('.one-liner').text(one_liner);\n          },\n\n          closeChat: function () {\n              this.model.set({'opened': false, 'display': false, 'active': false});\n              xabber.chats_view.clearSearch();\n          },\n\n          showSettings: function () {\n              this.account.showSettings();\n          },\n\n          deleteChat: function () {\n              let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n              utils.dialogs.ask(xabber.getString(\"dialog_delete_saved_messages__header\"), xabber.getString(\"dialog_delete_saved_messages__confirm\") +\n                  (rewrite_support ? \"\" : (\"\\n\" + xabber.getString(\"dialog_delete_saved_messages__confirm\", [this.account.domain]).fontcolor('#E53935'))), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n                  if (result) {\n                      if (this.account.connection && this.account.connection.do_synchronization) {\n                          this.model.deleteFromSynchronization();\n                      }\n                      if (rewrite_support) {\n                          this.model.retractAllMessages(false);\n                      }\n                      else {\n                          let all_messages = this.model.messages.models;\n                          $(all_messages).each((idx, item) => {\n                              this.content.removeMessage(item);\n                          });\n                      }\n                      this.closeChat();\n                      this.model.set('timestamp', 0);\n                  }\n              });\n          },\n\n          pinSavedChat: function () {\n              let pinned = this.model.get('pinned'),\n                  is_pinned = pinned && pinned !== '0' ? true : false,\n                  pinned_value = is_pinned ? '0' : + new Date(),\n                  conversation_options = {\n                      jid: this.account.get('jid'),\n                      pinned: pinned_value,\n                      type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n                  },\n                  iq = $iq({type: 'set', to: this.account.get('jid')})\n                      .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                      .c('conversation', conversation_options);\n              this.account.sendIQFast(iq);\n              this.model.set('pinned', pinned_value);\n          },\n\n          renderSearchPanel: function () {\n              let visible_view;\n              if (this.content.isVisible())\n                  visible_view = this.content;\n              this.model.messages_view && this.model.messages_view.isVisible() && (visible_view = this.model.messages_view);\n              visible_view && visible_view.$search_form.slideToggle(200, () => {\n                  if (visible_view.$search_form.css('display') !== 'none')\n                      visible_view.$search_form.find('input').focus();\n              });\n          },\n\n          playPausePlyr: function () {\n              if (!xabber.current_plyr_player)\n                  return;\n              if (xabber.current_plyr_player.$audio_elem){\n                  if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                      let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                      $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                      xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n                  } else {\n                      xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n                  }\n              } else\n                  xabber.current_plyr_player.togglePlay();\n              xabber.trigger('plyr_player_updated');\n          },\n\n          stopPlyr: function () {\n              if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n                  return;\n              xabber.plyr_players.forEach((item) => {\n                  if (item.$audio_elem){\n                      if (item.$audio_elem.voice_message)\n                          item.$audio_elem.voice_message.stopTime()\n                  }\n              });\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.closePopup();\n          },\n\n          popupPlyr: function () {\n              if (xabber.plyr_player_popup)\n                  xabber.plyr_player_popup.minimizePopup();\n          },\n\n          nextPlyr: function () {\n              let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n              if (player_index === -1 && xabber.current_plyr_player.player_item)\n                  player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n              if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n                  return;\n              if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n                  let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n                  if (!next_item.$audio_elem.voice_message){\n                      let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                      $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                      next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n                  } else {\n                      next_item.$audio_elem.voice_message.play()\n                  }\n              } else{\n                  if (!xabber.plyr_player_popup){\n                      xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                      xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n                  } else\n                      xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n              }\n          },\n\n          previousPlyr: function () {\n              let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n              if (player_index === -1 && xabber.current_plyr_player.player_item)\n                  player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n              if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n                  return;\n              if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n                  let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n                  if (!prev_item.$audio_elem.voice_message){\n                      let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                      $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                      prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n                  } else {\n                      prev_item.$audio_elem.voice_message.play()\n                  }\n              } else{\n                  if (!xabber.plyr_player_popup){\n                      xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                      xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n                  } else\n                      xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n              }\n          },\n\n          updatePlyrControls: function () {\n              this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n              this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n              if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n                  if (xabber.current_plyr_player.$audio_elem.voice_message){\n                      let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                      this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                      this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                      this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                      this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                      // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                      this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                      let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                      this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                      this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                      this.$('.mdi-player-type-icon').addClass('hidden');\n                      this.$('.player-poster').addClass('hidden');\n                      this.$('.voice-message-player-avatar').removeClass('hidden');\n                      this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                      this.updatePlyrTitle();\n                      let duration = Math.round(voice_message.getDuration());\n                      this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                      let timerId = setInterval(function() {\n                          let cur_time = Math.round(voice_message.getCurrentTime());\n                          if (voice_message.isPlaying())\n                              this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                          else\n                              clearInterval(timerId);\n                      }, 100);\n                      (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                      (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n                  }\n              }\n              else if (xabber.current_plyr_player) {\n                  this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n                  this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n                  this.updatePlyrTitle();\n                  let poster = xabber.current_plyr_player.poster;\n                  if (poster){\n                      this.$('.mdi-player-type-icon').addClass('hidden');\n                      this.$('.player-poster').removeClass('hidden');\n                      this.$('.player-poster').attr(\"src\", poster);\n                  } else {\n                      this.$('.mdi-player-type-icon').removeClass('hidden');\n                      this.$('.player-poster').addClass('hidden');\n                  }\n                  this.$('.voice-message-player-avatar').addClass('hidden');\n                  if (xabber.current_plyr_player.provider != 'html5')\n                      this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n                  else\n                      this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n                  this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n                  this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n                  this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n                  // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n                  this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n                  let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n                  this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                  this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n              }\n          },\n\n          updatePlyrTime: function () {\n              if (xabber.current_plyr_player){\n                  if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n                  }\n                  else if (!isNaN(xabber.current_plyr_player.currentTime))\n                      this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n              }\n          },\n\n          updatePlyrTitle: function () {\n              if (!xabber.current_plyr_player)\n                  return\n              let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n                  title;\n              if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n                  title = xabber.current_plyr_player.author;\n              else if (xabber.current_plyr_player)\n                  title = xabber.current_plyr_player.config.title ?\n                      xabber.current_plyr_player.config.title :\n                      xabber.current_plyr_player.provider === 'html5' ?\n                          xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                          : xabber.getString(\"chat_message_video\");\n              $title_elem.text(title);\n              if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n                  $title_elem.addClass('active-animation-player-title');\n                  $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n              } else\n                  $title_elem.removeClass('active-animation-player-title');\n\n          },\n\n          updateJingleButton: function () {\n              this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n              if (xabber.current_voip_call){\n                  this.$('.btn-jingle-message').removeClass('hidden');\n                  let voip_status = xabber.current_voip_call.get('status');\n                  if (voip_status)\n                      this.$('.btn-jingle-message').attr('data-state', voip_status);\n                  else\n                      this.$('.btn-jingle-message').attr('data-state', '');\n                  if (voip_status === 'disconnected')\n                      this.$('.btn-jingle-message').removeClass('active-call');\n              } else\n                  this.$('.btn-jingle-message').addClass('hidden');\n          },\n\n          openJingleMessage: function () {\n              if (xabber.current_voip_call) {\n                  xabber.current_voip_call.modal_view.collapse();\n                  return;\n              }\n          },\n      });\n\n      xabber.ChatHeadView = xabber.BasicView.extend({\n        className: 'chat-head-wrap',\n        template: templates.chat_head,\n        avatar_size: constants.AVATAR_SIZES.CHAT_HEAD,\n\n        events: {\n            \"click .chat-head-wrap\": \"showContactDetailsRight\",\n            \"click .chat-head-details\": \"showContactDetailsRight\",\n            \"click .contact-name\": \"showContactDetailsRight\",\n            \"click .circle-avatar\": \"showContactDetailsRight\",\n            \"click .contact-status-message.resource-hover\": \"showContactResources\",\n            \"click .contact-status-message.members-hover\": \"showMembersDetails\",\n            \"click .btn-contact-details\": \"showContactDetails\",\n            \"click .btn-clear-history\": \"clearHistory\",\n            \"click .btn-invite-users\": \"inviteUsers\",\n            \"click .btn-delete-chat\": \"deleteChat\",\n            \"click .btn-delete-contact\": \"deleteContact\",\n            \"click .btn-block-contact\": \"blockContact\",\n            \"click .btn-unblock-contact\": \"unblockContact\",\n            \"click .btn-export-history\": \"exportHistory\",\n            \"click .btn-show-fingerprints\": \"showFingerprints\",\n            \"click .btn-start-encryption\": \"startEncryptedChat\",\n            \"click .btn-open-encrypted-chat\": \"openEncryptedChat\",\n            \"click .btn-open-regular-chat\": \"openRegularChat\",\n            \"click .btn-chat-pin\": \"pinChat\",\n            \"click .btn-archive-chat\": \"archiveChat\",\n            \"click .btn-call-attention\": \"callAttention\",\n            \"click .btn-search-messages\": \"renderSearchPanel\",\n            \"click .btn-jingle-message\": \"sendJingleMessage\",\n            \"click .btn-mute-dropdown\": \"muteChat\",\n            \"click .btn-notifications.muted\": \"unmuteChat\",\n            \"click .btn-set-status\": \"setStatus\",\n            \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n            \"click .btn-next-plyr\": \"nextPlyr\",\n            \"click .btn-previous-plyr\": \"previousPlyr\",\n            \"click .btn-stop-plyr\": \"stopPlyr\",\n            \"click .btn-popup-plyr\": \"popupPlyr\",\n        },\n\n        _initialize: function (options) {\n            this.content = options.content;\n            this.contact = this.content.contact;\n            this.model = this.content.model;\n            this.account = this.model.account;\n            this.resources_view = new xabber.ContactResourcesRightView({model: this.contact.resources});\n            this.updateName();\n            this.updateStatus();\n            this.updateEncrypted();\n            this.updateAvatar();\n            this.updateNotifications();\n            this.updateArchived();\n            this.updatePinned();\n            this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n            this.model.on(\"close_chat\", this.closeChat, this);\n            this.model.on(\"pinned\", this.pinChat, this);\n            this.model.on(\"change:muted\", this.updateNotifications, this);\n            this.model.on(\"change:archived\", this.updateArchived, this);\n            this.model.on(\"change:pinned\", this.updatePinned, this);\n            this.contact.on(\"change\", this.onContactChanged, this);\n            this.contact.on(\"archive_chat\", this.archiveChat, this);\n            this.contact.on(\"change:name\", this.updateName, this);\n            this.contact.on(\"change:status\", this.updateStatus, this);\n            this.contact.on(\"change:status_updated\", this.updateStatus, this);\n            this.contact.on(\"change:image\", this.updateAvatar, this);\n            this.contact.on(\"change:blocked\", this.onChangedBlocked, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChatHead, this);\n            this.contact.on(\"change:subscription\", this.updateMenu, this);\n            this.contact.on(\"change:in_roster\", this.updateMenu, this);\n            this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n            xabber.on('change:audio', this.updateGroupChatHead, this);\n            xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n            xabber.on('update_layout', this.updatePlyrTitle, this);\n            xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n            xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n        },\n\n        render: function (options) {\n            this.$('.tooltipped').tooltip('remove');\n            this.$('.tooltipped').tooltip({delay: 50});\n            this.$('.btn-more').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                hover: false\n            });\n            this.$('.btn-notifications').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                hover: true, // Activate on hover\n                belowOrigin: true, // Displays dropdown below the button\n            });\n            this.$('.chat-head-menu').hide();\n            this.updateStatusMsg();\n            this.updateGroupChatHead();\n            if (this.contact.get('group_chat'))\n                this.$('.contact-status-message').addClass('members-hover')\n            else\n                this.$('.contact-status-message').addClass('resource-hover')\n            this.updatePlyrControls();\n            this.updatePlyrTime();\n            this.updateJingleButton();\n            return this;\n        },\n\n        updateEncrypted: function () {\n            this.$el.switchClass('encrypted', this.model.get('encrypted'));\n        },\n\n        updateEncryptedColor: function (encrypted) {\n            this.$el.attr('data-trust', encrypted);\n        },\n\n        updateName: function () {\n            this.$('.contact-name').text(this.contact.get('name'));\n        },\n\n        updateStatus: function () {\n            let status = this.contact.get('status'),\n                status_message = this.contact.getStatusMessage();\n            this.$('.contact-status').attr('data-status', status);\n            this.$('.chat-icon').attr('data-status', status);\n            this.model.get('blocked') ? this.$('.contact-status-message').text('Contact blocked') : this.$('.contact-status-message').text(status_message);\n        },\n\n        updateStatusMsg: function () {\n            this.$('.contact-status-message').text(this.contact.getStatusMessage());\n        },\n\n        updateAvatar: function () {\n            let image = this.contact.cached_image;\n            this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n        },\n\n        onContactChanged: function () {\n            let changed = this.contact.changed;\n            if (_.has(changed, 'subscription_request_in') || _.has(changed, 'subscription_request_out') || _.has(changed, 'subscription') || _.has(changed, 'status_message'))\n                this.updateStatusMsg();\n            if (_.has(changed, 'private_chat') || _.has(changed, 'incognito_chat') || _.has(changed, 'invitation'))\n                this.updateIcon();\n        },\n\n        onChangedBlocked: function () {\n            this.updateMenu();\n            this.updateStatusMsg();\n            this.updateIcon();\n        },\n\n        updateMenu: function () {\n            let is_group_chat = this.contact.get('group_chat');\n            this.$('.btn-invite-users').showIf(is_group_chat && !this.contact.get('private_chat') && this.contact.get('subscription') == 'both');\n            this.$('.btn-call-attention').hideIf(is_group_chat || this.model.get('encrypted'));\n            this.$('.btn-clear-history').hideIf(is_group_chat);\n            this.$('.btn-start-encryption').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && !this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n            this.$('.btn-open-encrypted-chat').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n            this.$('.btn-open-regular-chat').showIf(this.model.get('encrypted'));\n            this.$('.btn-show-fingerprints').showIf(!is_group_chat && this.account.omemo && this.model.get('encrypted'));\n            this.$('.btn-retract-own-messages').showIf(is_group_chat);\n            this.$('.btn-block-contact').hideIf(this.contact.get('blocked'));\n            this.$('.btn-unblock-contact').showIf(this.contact.get('blocked'));\n            this.$('.btn-delete-contact').showIf(this.contact.get('in_roster') && !is_group_chat);\n            this.$('.btn-notifications').hideIf(this.contact.get('blocked'));\n            this.$('.btn-jingle-message').hideIf((this.contact.get('blocked') || is_group_chat) && xabber.current_voip_call);\n        },\n\n        renderSearchPanel: function () {\n            this.contact.showDetailsRight('all-chats', {type: 'search'});\n        },\n\n        showContactDetails: function () {\n            this.contact.showDetails('all-chats');\n        },\n\n        showContactDetailsRight: function () {\n            this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n        },\n\n        showContactResources: function () {\n            this.resources_view.open();\n        },\n\n        showMembersDetails: function () {\n            this.contact.showDetailsRight('all-chats', {type: 'members'});\n        },\n\n        updatePinned: function () {\n            let pinned = this.model.get('pinned'),\n                is_pinned = pinned && pinned !== '0' ? true : false;\n            if (is_pinned)\n                this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_unpin\"))\n            else\n                this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_pin\"))\n        },\n\n        updateNotifications: function () {\n            if (this.model.isMuted()) {\n                this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_unmute\"));\n                this.$('.btn-notifications').addClass('muted');\n            }\n            else {\n                this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_mute\"));\n                this.$('.btn-notifications').removeClass('muted');\n            }\n            this.$('.btn-mute-dropdown').hideIf(this.model.isMuted());\n            this.$('.btn-unmute-dropdown').hideIf(!this.model.isMuted());\n        },\n\n          muteChat: function (ev) {\n              if (this.contact.get('blocked'))\n                  return;\n              let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n                  muted_seconds;\n              if (mute_type === 'minutes15')\n                  muted_seconds = 900\n              if (mute_type === 'hours1')\n                  muted_seconds = 3600\n              if (mute_type === 'hours2')\n                  muted_seconds = 7200\n              if (mute_type === 'day')\n                  muted_seconds = 86400\n              if (mute_type === 'forever')\n                  muted_seconds = 0\n              this.model.muteChat(muted_seconds);\n          },\n\n          unmuteChat: function (ev) {\n              if (this.contact.get('blocked'))\n                  return;\n              this.model.muteChat('');\n          },\n\n        callAttention: function (ev) {\n            let msg = $msg({type: 'headline', to: this.contact.get('jid')})\n                .c('attention', {xmlns: Strophe.NS.ATTENTION});\n            this.account.sendMsg(msg);\n            this.model.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"action_attention_called\")\n            });\n        },\n\n\n        updateArchived: function () {\n            let archived = !this.model.get('archived'),\n                is_archived = archived ? true : false;\n            if (!is_archived)\n                this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_unarchive\"))\n            else\n                this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_archive\"))\n            this.$('.btn-archive-chat .mdi').switchClass('mdi-package-up', !is_archived);\n            this.$('.btn-archive-chat .mdi').switchClass('mdi-package-down', is_archived);\n            if (this.model.item_view && archived){\n                !this.model.messages.length && this.model.item_view.updateLastMessage();\n                this.account.chat_settings.updateArchiveChatsList(this.contact.get('jid'), archived);\n                if (this.model.get('active')) {\n                    xabber.chats_view.updateScreenAllChats();\n                }\n            }\n        },\n\n        archiveChat: function (ev, no_iq) {\n            let archived = !this.model.get('archived'),\n                is_archived = archived ? true : false;\n            if (!no_iq) {\n                let is_archived_status = is_archived ? 'archived' : 'active',\n                    conversation_options = {\n                        jid: this.contact.get('jid'),\n                        status: is_archived_status,\n                        type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n                    },\n                    iq = $iq({type: 'set', to: this.account.get('jid')})\n                        .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                        .c('conversation', conversation_options);\n                this.account.sendIQFast(iq);\n                this.model.set('archived', archived);\n            }\n        },\n\n        pinChat: function () {\n            let pinned = this.model.get('pinned'),\n                is_pinned = pinned && pinned !== '0' ? true : false,\n                pinned_value = is_pinned ? '0' : + new Date(),\n                conversation_options = {\n                    jid: this.contact.get('jid'),\n                    pinned: pinned_value,\n                    type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n                },\n                iq = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                    .c('conversation', conversation_options);\n                this.account.sendIQFast(iq);\n                this.model.set('pinned', pinned_value);\n        },\n\n        sendJingleMessage: function () {\n            if (xabber.current_voip_call) {\n                xabber.current_voip_call.modal_view.collapse();\n                return;\n            }\n            !this.contact.get('group_chat') && this.content.initJingleMessage();\n        },\n\n        setStatus: function () {\n            let set_status_view = new xabber.SetGroupchatStatusView();\n            set_status_view.open(this.contact);\n        },\n\n        playPausePlyr: function () {\n            if (!xabber.current_plyr_player)\n                return;\n            if (xabber.current_plyr_player.$audio_elem){\n                if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                    let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                    $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                    xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n                } else {\n                    xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n                }\n            } else\n                xabber.current_plyr_player.togglePlay();\n            xabber.trigger('plyr_player_updated');\n        },\n\n        stopPlyr: function () {\n            if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n                return;\n            xabber.plyr_players.forEach((item) => {\n                if (item.$audio_elem){\n                    if (item.$audio_elem.voice_message)\n                        item.$audio_elem.voice_message.stopTime()\n                }\n            });\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.closePopup();\n        },\n\n        popupPlyr: function () {\n            if (xabber.plyr_player_popup)\n                xabber.plyr_player_popup.minimizePopup();\n        },\n\n        nextPlyr: function () {\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n            if (player_index === -1 && xabber.current_plyr_player.player_item)\n                player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n                return;\n            if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n                let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n                if (!next_item.$audio_elem.voice_message){\n                    let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                    $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                    next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n                } else {\n                    next_item.$audio_elem.voice_message.play()\n                }\n            } else{\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            }\n        },\n\n        previousPlyr: function () {\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n            if (player_index === -1 && xabber.current_plyr_player.player_item)\n                player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n                return;\n            if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n                let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n                if (!prev_item.$audio_elem.voice_message){\n                    let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                    $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                    prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n                } else {\n                    prev_item.$audio_elem.voice_message.play()\n                }\n            } else{\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            }\n        },\n\n        updatePlyrControls: function () {\n            this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n            this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n                if (xabber.current_plyr_player.$audio_elem.voice_message){\n                    let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                    this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                    this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                    this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                    this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                    // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                    this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                    let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                    this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                    this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                    this.$('.mdi-player-type-icon').addClass('hidden');\n                    this.$('.player-poster').addClass('hidden');\n                    this.$('.voice-message-player-avatar').removeClass('hidden');\n                    this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                    this.updatePlyrTitle();\n                    let duration = Math.round(voice_message.getDuration());\n                    this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                    let timerId = setInterval(function() {\n                        let cur_time = Math.round(voice_message.getCurrentTime());\n                        if (voice_message.isPlaying())\n                            this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                        else\n                            clearInterval(timerId);\n                    }, 100);\n                    (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                    (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n                }\n            }\n            else if (xabber.current_plyr_player) {\n                this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n                this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n                this.updatePlyrTitle();\n                let poster = xabber.current_plyr_player.poster;\n                if (poster){\n                    this.$('.mdi-player-type-icon').addClass('hidden');\n                    this.$('.player-poster').removeClass('hidden');\n                    this.$('.player-poster').attr(\"src\", poster);\n                } else {\n                    this.$('.mdi-player-type-icon').removeClass('hidden');\n                    this.$('.player-poster').addClass('hidden');\n                }\n                this.$('.voice-message-player-avatar').addClass('hidden');\n                if (xabber.current_plyr_player.provider != 'html5')\n                    this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n                else\n                    this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n                this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n                this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n                this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n                // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n                this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n                let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n                this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n            }\n        },\n\n        updatePlyrTime: function () {\n            if (xabber.current_plyr_player){\n                if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n                }\n                else if (!isNaN(xabber.current_plyr_player.currentTime))\n                    this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n            }\n        },\n\n        updatePlyrTitle: function () {\n            if (!xabber.current_plyr_player)\n                return\n            let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n                title;\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n                title = xabber.current_plyr_player.author;\n            else if (xabber.current_plyr_player)\n                title = xabber.current_plyr_player.config.title ?\n                    xabber.current_plyr_player.config.title :\n                    xabber.current_plyr_player.provider === 'html5' ?\n                        xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                        : xabber.getString(\"chat_message_video\");\n            $title_elem.text(title);\n            if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n                $title_elem.addClass('active-animation-player-title');\n                $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n            } else\n                $title_elem.removeClass('active-animation-player-title');\n\n        },\n\n\n        updateJingleButton: function () {\n            this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n            if (xabber.current_voip_call){\n                this.contact.get('group_chat') && this.$('.btn-jingle-message').removeClass('hidden');\n                let voip_status = xabber.current_voip_call.get('status');\n                if (voip_status)\n                    this.$('.btn-jingle-message').attr('data-state', voip_status);\n                else\n                    this.$('.btn-jingle-message').attr('data-state', '');\n                if (voip_status === 'disconnected')\n                    this.$('.btn-jingle-message').removeClass('active-call');\n            } else if (this.contact.get('group_chat'))\n                this.$('.btn-jingle-message').addClass('hidden');\n        },\n\n        getActiveScreen: function () {\n            let active_screen = xabber.toolbar_view.$('.active');\n            this.$('.omemo-item').removeClass('hidden');\n            if (active_screen.hasClass('archive-chats')) {\n                xabber.toolbar_view.showArchive();\n                return;\n            }\n            if (active_screen.hasClass('all-chats')) {\n                xabber.toolbar_view.showAllChats();\n                return;\n            }\n            if (active_screen.hasClass('chats')) {\n                xabber.toolbar_view.showChats();\n                return;\n            }\n            if (active_screen.hasClass('group-chats')) {\n                xabber.toolbar_view.showGroupChats();\n                return;\n            }\n            if (active_screen.hasClass('account-item')) {\n                xabber.toolbar_view.showChatsByAccount();\n                return;\n            }\n        },\n\n        updateGroupChatHead: function () {\n            let is_group_chat = this.contact.get('group_chat');\n            this.updateIcon();\n            this.$('.btn-jingle-message').showIf(!is_group_chat && xabber.get('audio') || xabber.current_voip_call);\n            this.$('.contact-status').hideIf(is_group_chat);\n            this.updateMenu();\n        },\n\n        updateIcon: function () {\n            this.$('.chat-icon').addClass('hidden');\n            let ic_name = this.contact.getIcon();\n            ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n        },\n\n        inviteUsers: function () {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.contact);\n        },\n\n        clearHistory: function () {\n            this.content.clearHistory();\n            xabber.chats_view.clearSearch();\n        },\n\n        leaveGroupChat: function () {\n            this.contact.declineSubscription();\n            this.contact.removeFromRoster();\n            this.contact.set('in_roster', false);\n        },\n\n        closeChat: function () {\n            this.model.set({'opened': false, 'display': false, 'active': false});\n            xabber.chats_view.clearSearch();\n        },\n\n        deleteChat: function () {\n            if (this.contact.get('group_chat')) {\n                utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"dialog_group_remove__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                    if (result) {\n                        (this.account.connection && this.account.connection.do_synchronization) && this.model.deleteFromSynchronization();\n                        this.leaveGroupChat();\n                        this.closeChat();\n                    }\n                });\n            }\n            else {\n                let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n                utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"delete_chat_dialog_message\") +\n                (rewrite_support ? \"\" : `\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n                    if (result) {\n                        if (rewrite_support) {\n                            this.model.retractAllMessages(false);\n                        }\n                        if (this.account.connection && this.account.connection.do_synchronization) {\n                            this.model.deleteFromSynchronization();\n                        }\n                        else {\n                            let all_messages = this.model.messages.models;\n                            $(all_messages).each((idx, item) => {\n                                this.content.removeMessage(item);\n                            });\n                        }\n                        this.closeChat();\n                    }\n                });\n            }\n        },\n\n        deleteContact: function () {\n            this.contact.deleteWithDialog();\n        },\n\n        blockContact: function () {\n            this.contact.blockWithDialog();\n        },\n\n        unblockContact: function () {\n            this.contact.unblockWithDialog();\n        },\n\n        exportHistory: function () {\n\n        },\n\n        showFingerprints: function () {\n            if (!this.account.omemo)\n                return;\n            let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n            peer.fingerprints.open();\n        },\n\n        startEncryptedChat: function () {\n            this.account.chats.openChat(this.contact, {encrypted: true});\n            let chat = this.account.chats.get(this.contact.hash_id + ':encrypted');\n            chat.set('timestamp', moment.now());\n            chat.item_view.updateLastMessage();\n        },\n\n        openEncryptedChat: function () {\n            this.model.set('opened', true);\n            this.account.chats.openChat(this.contact, {encrypted: true});\n        },\n\n        openRegularChat: function () {\n            this.model.set('opened', true);\n            this.account.chats.openChat(this.contact);\n        }\n    });\n\n\n      xabber.SendMediaView = xabber.BasicView.extend({\n          className: 'modal main-modal avatar-picker background-panel',\n          template: templates.send_media,\n          ps_selector: '.modal-content',\n          ps_settings: {theme: 'item-list'},\n\n          events: {\n              \"click .menu-btn\": \"updateActiveMenu\",\n              \"click .library-wrap .image-item\": \"setActiveImage\",\n              'change input[type=\"file\"]': \"onFileInputChanged\",\n              'keyup input.url': \"onInputChanged\",\n              \"click .btn-add\": \"addMedia\",\n              \"click .btn-cancel\": \"close\"\n          },\n\n          _initialize: function () {\n              this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n          },\n\n          render: function (options) {\n              this.model = options.model;\n              this.parent = options.parent;\n              this.createLibrary();\n              this.$('.menu-btn').removeClass('active');\n              this.$('.menu-btn[data-screen-name=\"upload\"]').addClass('active');\n              this.$('.modal-header span').text(xabber.getString(\"chat_bottom__tooltip_add_media\"));\n              this.$el.openModal({\n                  ready: () => {\n                      this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n                  },\n                  complete: this.close.bind(this)\n              });\n              let draggable = this.$('.upload-wrap');\n              draggable[0].ondragenter = function (ev) {\n                  ev.preventDefault();\n                  draggable.addClass('file-drop');\n              };\n              draggable[0].ondragover = function (ev) {\n                  ev.preventDefault();\n              };\n              draggable[0].ondragleave = function (ev) {\n                  if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                      return;\n                  ev.preventDefault();\n                  draggable.removeClass('file-drop');\n              };\n              draggable[0].ondrop = (ev) => {\n                  ev.preventDefault();\n                  ev.stopPropagation();\n                  draggable.removeClass('file-drop');\n                  let files = ev.dataTransfer.files || [];\n                  this.parent.view.addFileMessage(files);\n                  this.close();\n              };\n          },\n\n          onPaste: function (ev) {\n              let url = ev.clipboardData.getData('text').trim();\n              this.$('.image-preview img')[0].onload = () => {\n                  this.$('.image-preview img').removeClass('hidden');\n                  this.updateActiveButton();\n              };\n              this.$('.image-preview img').addClass('hidden')[0].src = url;\n              this.updateActiveButton();\n          },\n\n          updateActiveMenu: function (ev) {\n              let screen_name = ev.target.getAttribute('data-screen-name');\n              this.$('.menu-btn').removeClass('active');\n              this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n              this.updateScreen(screen_name);\n          },\n\n          updateScreen: function (name) {\n              this.$('.screen-wrap').addClass('hidden');\n              this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n              this.scrollToTop();\n              this.updateActiveButton();\n          },\n\n          updateActiveButton: function () {\n              let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n                  non_active = true;\n              if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video') {\n                  $active_screen.find('div.active').length && (non_active = false);\n              } else {\n                  $active_screen.find('img:not(.hidden)').length && (non_active = false);\n              }\n              this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n          },\n\n          renderFiles: function (response) {\n              this.$(`.library-wrap[data-screen=\"${response.type}\"] .preloader-wrapper`).remove()\n              if (response.items.length){\n                  response.items.forEach((item) => {\n                      let img = $(`<div class=\"image-item\"/>`);\n                      img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                      img.attr('data-src', item.file);\n                      img.attr('data-name', item.name);\n                      this.$(`.library-wrap[data-screen=\"${response.type}\"]`).append(img);\n                  });\n              }\n          },\n\n          createLibrary: function () {\n              this.model.testGalleryTokenExpire(() => {\n                  if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                      this.$('.library-wrap').html(env.templates.contacts.preloader())\n                      $.ajax({\n                          type: 'GET',\n                          headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                          url: this.model.get('gallery_url') + 'v1/files/',\n                          dataType: 'json',\n                          data: {obj_per_page: 50, order_by: '-id', type: 'image'},\n                          success: (response) => {\n                              console.log(response)\n                              response.type = 'image'\n                              this.renderFiles(response)\n                          },\n                          error: (response) => {\n                              this.model.handleCommonGalleryErrors(response)\n                              console.log(response)\n                              this.$('.library-wrap[data-screen=\"image\"] .preloader-wrapper').remove()\n                          }\n                      });\n                      $.ajax({\n                          type: 'GET',\n                          headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                          url: this.model.get('gallery_url') + 'v1/files/',\n                          dataType: 'json',\n                          data: {obj_per_page: 50, order_by: '-id', type: 'video'},\n                          success: (response) => {\n                              console.log(response)\n                              response.type = 'video'\n                              this.renderFiles(response)\n                          },\n                          error: (response) => {\n                              this.model.handleCommonGalleryErrors(response)\n                              console.log(response)\n                              this.$('.library-wrap[data-screen=\"video\"] .preloader-wrapper').remove()\n                          }\n                      });\n                  }\n              });\n          },\n\n          setActiveImage: function (ev) {\n              let $target = $(ev.target),\n                  $active_screen = this.$('.screen-wrap:not(.hidden)');\n              if ($target.hasClass('active'))\n                  $target.removeClass('active');\n              else {\n                  this.$('.library-wrap>div').removeClass('active');\n                  $target.addClass('active');\n              }\n              this.updateActiveButton();\n          },\n\n          onFileInputChanged: function (ev) {\n              let target = ev.target,\n                  files = [];\n              for (let i = 0; i < target.files.length; i++) {\n                  files.push(target.files[i]);\n              }\n\n              if (files && files.length) {\n                  this.parent.view.addFileMessage(files);\n                  $(target).val('');\n                  this.close();\n              }\n          },\n\n          onInputChanged: function (ev) {\n              if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n                  return;\n              if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n                  let url = ev.target.value.trim();\n                  this.$('.image-preview img')[0].onload = () => {\n                      this.$('.image-preview img').removeClass('hidden');\n                      this.updateActiveButton();\n                  };\n                  this.$('.image-preview img').addClass('hidden')[0].src = url;\n                  this.updateActiveButton();\n              } else {\n                  this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n                  this.updateActiveButton();\n              }\n          },\n\n          addMedia: function () {\n              if (this.$('.btn-add').hasClass('non-active'))\n                  return;\n              let file, filename, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n              dfd.done((resolved_file) => {\n                  this.parent.view.addFileMessage([resolved_file])\n                  this.close();\n              });\n              this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n              this.$('.btn-add').addClass('hidden-disabled');\n              if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' || $active_screen.attr('data-screen') == 'web-address') {\n                  file = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                      $active_screen.find('div.active').attr('data-src') :\n                      $active_screen.find('img:not(.hidden)')[0].src;\n                  filename = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                      $active_screen.find('div.active').attr('data-name') : '';\n\n                  this.createFileFromURL(file, filename).then((file) => {\n                      dfd.resolve(file);\n                  })\n              } else\n                  dfd.resolve(this.current_file);\n          },\n\n          createFileFromURL: async function (url, filename) {\n              let response = await fetch(url);\n              let data = await response.blob();\n              let metadata = {\n                  type: data.type\n              };\n              let file = new File([data], filename || url.split('#').shift().split('?').shift().split('/').pop() || 'file', metadata);\n              return file\n          },\n\n          close: function () {\n              this.$el.closeModal({ complete: () => {\n                      this.$el.detach();\n                      this.data.set('visible', false);\n                  }\n              });\n          }\n      });\n\n    xabber.ChatLocationView = xabber.BasicView.extend({\n        className: 'modal main-modal chat-location ',\n        template: templates.location_popup,\n\n        events: {\n            \"click .btn-cancel\": \"close\",\n            \"click .btn-apply\": \"sendLocation\",\n            \"click #map canvas\": \"closeLocationName\",\n            \"click .nominatim.ol-search input\": \"initializeScrollbar\",\n            \"focusout .nominatim.ol-search input\": \"destroyScrollbar\",\n        },\n\n        _initialize: function (options) {\n            this.view = options.content;\n            this.model = this.view.model;\n            this.account = this.view.account;\n\n        },\n\n        render: function () {\n            this.$el.openModal({\n                ready: function () {\n                    Materialize.updateTextFields();\n                },\n                complete: this.hide.bind(this)\n            });\n        },\n\n        sendLocation: function (e) {\n            if (this.$('#output').val()) {\n                let body = this.$('#output').val(),\n                    legacy_body = '',\n                    start_idx = legacy_body.length,\n                    end_idx = (body + legacy_body).length,\n                    lat = this.$('#lat').val(),\n                    lon = this.$('#lon').val(),\n                    locations = [{\n                            lat: lat,\n                            lon: lon\n                        }],\n                    mutable_content = [{\n                        start: start_idx,\n                        end: end_idx,\n                        type: 'geolocation'\n                        }],\n                    attrs = {\n                        from_jid: this.account.get('jid'),\n                        locations: locations,\n                        mutable_content: mutable_content,\n                        message: this.$('#output').val(),\n                        begin: start_idx,\n                        end: end_idx\n                    },\n                    message = this.model.messages.create(attrs),\n                    msg_id = message.get('msgid'),\n                    stanza = $msg({\n                        to: this.model.get('jid'),\n                        type: 'chat',\n                        id: msg_id\n                    });\n                stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up();\n                stanza.c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                }).c('geoloc', {\n                    xmlns: Strophe.NS.GEOLOC,\n                }).c('lat').t(lat).up().c('lon').t(lon).up().up().up();\n                stanza.c('body').t(body).up();\n                if (this.model.get('encrypted') && this.account.omemo) {\n                    stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n                    if ($(stanza.tree()).children('body').length) {\n                        stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                        $(stanza.tree()).children('body').detach()\n                    }\n                    if ($(stanza.tree()).children('reference').length) {\n                        $(stanza.tree()).children('reference').each((idx, reference) => {\n                            stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                        });\n                        $(stanza.tree()).children('reference').detach()\n                    }\n                    stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n                    stanza.c('from', {jid: this.account.get('jid')}).up().up()\n                    message.set({xml: $(stanza.tree()).clone()[0]});\n                    this.account.omemo.encrypt(this.model.contact, stanza).then((msg) => {\n                        if (msg) {\n                            stanza = msg.message;\n                            message.set('trusted', msg.is_trusted);\n                        }\n                        this.account.sendMsg(stanza);\n                    });\n                } else {\n                    message.set({xml: $(stanza.tree()).clone()[0]});\n                    this.account.sendMsg(stanza);\n                }\n            }\n            this.close();\n        },\n\n        closeLocationName: function (e) {\n            $('.ol-location').hide()\n        },\n\n        onHide: function () {\n            this.$el.detach();\n        },\n\n        close: function () {\n            this.$el.closeModal({ complete: this.hide.bind(this) });\n        },\n\n        initializeScrollbar: function () {\n            this.ps_container = this.$('.nominatim.ol-search');\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        },\n\n        destroyScrollbar: function () {\n            this.ps_container = this.$('.nominatim.ol-search');\n            this.ps_container.perfectScrollbar('destroy');\n        },\n    });\n\n    xabber.ChatBottomView = xabber.BasicView.extend({\n        className: 'chat-bottom-wrap',\n        ps_selector: '.message-reference-preview-container',\n        template: templates.chat_bottom,\n        avatar_size: constants.AVATAR_SIZES.CHAT_BOTTOM,\n        mention_avatar_size: constants.AVATAR_SIZES.MENTION_ITEM,\n\n        events: {\n            \"click\": \"onClickBottom\",\n            \"click .ql-editor\": \"focusOnInput\",\n            \"click .my-avatar\": \"showAccountSettings\",\n            \"keyup .input-message .rich-textarea\": \"keyUp\",\n            \"keydown .input-message .rich-textarea\": \"keyDown\",\n            \"change .attach-file input\": \"onFileInputChanged\",\n            \"click .attach-location\": \"showLocationPopup\",\n            \"click .attach-media\": \"showMediaPopup\",\n            \"mouseup .message-input-panel\": \"stopWritingVoiceMessage\",\n            \"mousedown .attach-voice-message\": \"writeVoiceMessage\",\n            \"click .chat-mention\": \"onMentionButtonClick\",\n            \"click .close-forward\": \"unsetForwardedMessages\",\n            \"click .close-attachments\": \"removeAttachments\",\n            \"click .send-message\": \"submit\",\n            \"click .markup-text\": \"onShowMarkupPanel\",\n            \"click .reply-message\": \"replyMessages\",\n            \"click .forward-message\": \"forwardMessages\",\n            \"click .pin-message\": \"pinMessage\",\n            \"click .copy-message\": \"copyMessages\",\n            \"click .edit-message\": \"showEditPanel\",\n            \"click .delete-message\": \"deleteMessages\",\n            \"click .close-message-panel\": \"resetSelectedMessages\",\n            \"click .mention-item\": \"inputMention\",\n            \"click .format-text\": \"updateMarkupPanel\",\n            \"click .link-message-reference .mdi-close\": \"removeLinkReference\",\n            \"click .preview-preloader-container .preview-cancel-preloader\": \"stopLoadingLinkReference\",\n            \"click .message-reference-preview-item-file .mdi-close\": \"removeFileSnippet\",\n            \"click .btn-manage-devices\": \"openDevicesWindow\"\n        },\n\n        _initialize: function (options) {\n            this.view = options.content;\n            this.model = this.view.model;\n            this.click_counter = 0;\n            let rich_textarea_wrap = this.$('.rich-textarea-wrap');\n            let bindings = {\n                enter: {\n                    key: 13,\n                    handler: function(range) {\n                        if (xabber.settings.hotkeys !== \"enter\")\n                            this.quill.insertText(range.index, \"\\n\");\n                    }\n                },\n                arrow_up: {\n                    key: constants.KEY_ARROW_UP,\n                    handler: (range) => {\n                        if (this.$('.mentions-list').css('display') !== 'none') {\n                            let active_item = this.$('.mentions-list').children('.active.mention-item');\n                            if (active_item.length)  {\n                                let $prev_elem = active_item.prev('.mention-item');\n                                active_item.removeClass('active');\n                                if (!$prev_elem.length) {\n                                    $prev_elem = this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                                    this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                                }\n                                $prev_elem.addClass('active');\n                                if ($prev_elem.length && ($prev_elem[0].offsetTop <= this.$('.mentions-list')[0].scrollTop))\n                                    this.$('.mentions-list')[0].scrollTop = $prev_elem[0].offsetTop;\n                            }\n                            else {\n                                this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                                this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                            }\n                            return false;\n                        }\n                        else\n                            return true;\n                    }\n                },\n                arrow_down: {\n                    key: constants.KEY_ARROW_DOWN,\n                    handler: (range) => {\n                        if (this.$('.mentions-list').css('display') !== 'none') {\n                            let active_item = this.$('.mentions-list').children('.active.mention-item');\n                            if (active_item.length) {\n                                let $next_elem = active_item.next('.mention-item');\n                                active_item.removeClass('active');\n                                if (!$next_elem.length) {\n                                    $next_elem = this.$('.mentions-list').children('.mention-item').first();\n                                    this.$('.mentions-list')[0].scrollTop = 0;\n                                }\n                                $next_elem.addClass('active');\n                                if ($next_elem.length && ($next_elem[0].offsetTop + $next_elem[0].clientHeight >= this.$('.mentions-list')[0].scrollTop + this.$('.mentions-list')[0].clientHeight))\n                                    this.$('.mentions-list')[0].scrollTop = $next_elem[0].offsetTop - this.$('.mentions-list')[0].clientHeight + $next_elem[0].clientHeight;\n                            }\n                            else {\n                                this.$('.mentions-list')[0].scrollTop = 0;\n                                this.$('.mentions-list').children('.mention-item').first().addClass('active');\n                            }\n                            return false;\n                        }\n                        else\n                            return true;\n                    }\n                },\n                arrow_left: {\n                    key: constants.KEY_ARROW_LEFT,\n                    handler: (range) => {\n                        if (this.$('.mentions-list').css('display') !== 'none')\n                            return false;\n                        else\n                            return true;\n                    }\n                },\n                arrow_right: {\n                    key: constants.KEY_ARROW_RIGHT,\n                    handler: (range) => {\n                        if (this.$('.mentions-list').css('display') !== 'none')\n                            return false;\n                        else\n                            return true;\n                    }\n                }\n            };\n            this.quill = new Quill(rich_textarea_wrap[0], {\n                modules: {\n                    keyboard: {\n                        bindings: bindings\n                    },\n                    toolbar: [\n                        ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                        this.model.get('group_chat') ? ['mention'] : [],\n                        ['clean']\n                    ]\n                },\n                formats: ['bold', 'italic', 'underline', 'strike', 'blockquote', 'clean', 'emoji', 'mention'],\n                placeholder: xabber.getString(this.model.get('encrypted') ? \"chat_bottom__hint_default_encrypted\" : \"chat_bottom__hint_default\"),\n                scrollingContainer: '.rich-textarea',\n                theme: 'snow'\n            });\n            this.quill.container.firstChild.classList.add('rich-textarea');\n            this.$('.ql-mention').prop('disabled', true);\n            this.$('.ql-mention').append('<div class=\"chat-mention\" =\"\">@</div>');\n            this.contact = this.view.contact;\n            this.account = this.view.account;\n            this.fwd_messages = [];\n            this.edit_message = null;\n            this.stopped_loading_link_reference = false;\n            this.link_references = [];\n            this.link_reference_exempted = [];\n            this.currently_loaded_link_references = [];\n            this.attached_files = [];\n            this.loading_link_reference = false;\n            this.$('.account-jid').text(this.account.get('jid'));\n            this.updateAvatar();\n            this.quill.on(\"text-change\", this.onChangedText, this);\n            this.account.on(\"change:image\", this.updateAvatar, this);\n            this.account.on('trusting_updated', this.updateEncrypted, this);\n            if (this.contact) {\n                this.contact.on(\"change:blocked\", this.onBlockedUpdate, this);\n                this.contact.on('update_my_info', this.updateInfoInBottom, this);\n            }\n            this.model.on(\"reply_selected_messages\", this.replyMessages, this);\n            this.model.on(\"forward_selected_messages\", this.forwardMessages, this);\n            this.model.on(\"copy_selected_messages\", this.copyMessages, this);\n            this.model.on(\"delete_selected_messages\", this.deleteMessages, this);\n            this.model.on(\"edit_selected_message\", this.showEditPanel, this);\n            this.model.on(\"pin_selected_message\", this.pinMessage, this);\n            this.model.on(\"reset_selected_messages\", this.resetSelectedMessages, this);\n            this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n            let $rich_textarea = this.$('.input-message .rich-textarea'),\n                rich_textarea = $rich_textarea[0],\n                $rich_textarea_wrap = $rich_textarea.parent('.rich-textarea-wrap'),\n                $placeholder = $rich_textarea.siblings('.placeholder');\n            rich_textarea.onpaste = this.onPaste.bind(this);\n            rich_textarea.oncut = this.onCut.bind(this);\n            rich_textarea.ondragenter = (ev) => {\n                ev.preventDefault();\n                $placeholder.text(xabber.getString(\"chat_bottom__drag_and_drop__text_drop_files_here\"));\n                $rich_textarea_wrap.addClass('file-drop');\n            };\n            rich_textarea.ondragover = (ev) => {\n                ev.preventDefault();\n            };\n            rich_textarea.ondragleave = (ev) => {\n                if ($(ev.relatedTarget).closest('.rich-textarea').length)\n                    return;\n                ev.preventDefault();\n                $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n                $rich_textarea_wrap.removeClass('file-drop');\n            };\n            rich_textarea.ondrop = (ev) => {\n                ev.preventDefault();\n                ev.stopPropagation();\n                $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n                $rich_textarea_wrap.removeClass('file-drop');\n                let files = ev.dataTransfer.files || [];\n                this.view.addFileMessage(files);\n            };\n            let $insert_emoticon = this.$('.insert-emoticon'),\n                $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n                $emoji_panel = this.$('.emoticons-panel'),\n                _timeout;\n\n            let onloaded_sprites = 0,\n                i = 0,\n                all_sprites = Object.keys(Emoji.all).length;\n            for (let emoji_list in Emoji.all) {\n                let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`);\n                $(`<div id=${emoji_list} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n                _.each(Emoji.all[emoji_list], function (emoji) {\n                    $('<div class=\"emoji-wrap\"/>').html(\n                        emoji.emojify({emoji_size: 24, sprite: emoji_list})\n                    ).appendTo($emoji_list_wrap);\n                });\n                $emoji_list_wrap.appendTo($emoji_panel);\n                $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: emoji_list, title: xabber.getString(constants.EMOJI_LIST_NAME(emoji_list)), tag_name: 'a', emoji_size: 20}));\n                let img = new Image();\n                img.onload = () => {\n                    onloaded_sprites++;\n                    (onloaded_sprites === all_sprites) && $emoji_panel_wrap.find('.uploading-emoticons').detach();\n                };\n                img.src = './images/emoji/spritesheet' + i++ + '.png';\n            }\n            let window_onclick = function (ev) {\n                if ($(ev.target).closest('.emoticons-panel-wrap').length || $(ev.target).closest('.insert-emoticon').length)\n                    return;\n                $emoji_panel_wrap.removeClass('opened');\n                window.removeEventListener(\"click\" , window_onclick);\n            };\n            $emoji_panel.perfectScrollbar(\n                    _.extend({theme: 'item-list'}, xabber.ps_settings));\n            this.$('.emoji-menu .emoji').click((ev) => {\n                $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n            });\n            $insert_emoticon.click((ev) => {\n                if (_timeout)\n                    clearTimeout(_timeout);\n                if (ev && ev.preventDefault) { ev.preventDefault(); }\n                if ($emoji_panel_wrap.hasClass('opened')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                    window.removeEventListener( \"click\" , window_onclick);\n                }\n                else {\n                    $emoji_panel_wrap.addClass('opened');\n                    window.addEventListener( \"click\" , window_onclick);\n                }\n                $emoji_panel.perfectScrollbar('update');\n            });\n            $emoji_panel_wrap.hover(null, (ev) => {\n                if (ev && ev.preventDefault) { ev.preventDefault(); }\n                if (_timeout) {\n                    clearTimeout(_timeout);\n                }\n                _timeout = setTimeout(() => {\n                    $emoji_panel_wrap.removeClass('opened');\n                }, 200);\n            });\n            $emoji_panel_wrap.mousedown((ev) => {\n                if (ev && ev.preventDefault) { ev.preventDefault(); }\n                if (_timeout)\n                    clearTimeout(_timeout);\n                if (ev.button)\n                    return;\n                let $target = $(ev.target),\n                    $target_emoji = $target.closest('.emoji-wrap').find('.emoji');\n                if ($target.closest('.emoji-menu').length)\n                    return;\n                $target_emoji.length && this.typeEmoticon($target_emoji.data('emoji'));\n            });\n            this.renderLastEmoticons();\n        },\n\n        render: function (options) {\n            this.$('.message-input-panel').hideIf(options.blocked);\n            this.$('.blocked-msg').showIf(options.blocked);\n            this.$el.switchClass('chat-bottom-blocked-wrap', options.blocked);\n            this.updateAvatar();\n            this.updateEncrypted();\n            let http_upload = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n            this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n            this.messages_arr = this.content_view.$el.hasClass('participant-messages-wrap') && this.account.participant_messages || this.content_view.$el.hasClass('messages-context-wrap') && this.account.context_messages || this.model.messages;\n            this.renderLastEmoticons();\n            this.$('.attach-file').showIf(http_upload);\n            this.$('.attach-location').showIf(xabber.settings.mapping_service);\n            this.$('.attach-media').showIf(this.account.get('gallery_token') && this.account.get('gallery_url'));\n            this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left', !xabber.settings.mapping_service || !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n            this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left-extra', !xabber.settings.mapping_service && !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n            if (this.model.get('group_chat')) {\n                this.updateInfoInBottom();\n            }\n            else {\n                this.$('.account-nickname').hide();\n                this.$('.account-badge').hide();\n                this.$('.account-role').hide();\n            }\n            this.focusOnInput();\n            this.manageSelectedMessages();\n            xabber.chat_body.updateHeight();\n            return this;\n        },\n\n        setButtonsWidth: function () {\n            let widths = [];\n            this.$('.message-actions-panel .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n            this.$('.message-actions-panel .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n        },\n\n        updateEncrypted: function () {\n            this.$el.children('.preloader-wrapper').detach();\n            this.$el.children('.omemo-disabled').detach();\n            this.view.$el.removeClass('encrypted');\n            this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('encryption-warning').html(\"\");\n            this.$el.attr('data-trust', null);\n            this.$el.attr('data-contact-trust', null);\n            this.$el.find('.warning-wrap').detach();\n            if (!this.model.get('encrypted'))\n                return;\n            if (this.account.omemo) {\n                this.$el.addClass('loading');\n                this.$el.prepend(env.templates.contacts.preloader());\n                this.account.omemo.checkOwnFingerprints().then((is_trusted) => {\n                    if (is_trusted == 'none' || is_trusted == 'error') {\n                        let is_scrolled_bottom = this.view.isScrolledToBottom();\n                        this.$el.attr('data-trust', is_trusted);\n                        this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_trusted);\n                        this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_trusted);\n                        this.view.$el.attr('data-trust', is_trusted);\n                        this.$el.removeClass('loading');\n                        this.$el.children('.preloader-wrapper').detach();\n                        if (is_trusted == 'none')\n                            this.$el.prepend(templates.encryption_warning({color: 'amber', message: xabber.getString(\"omemo__alert_new_device_yours__text_new_device\")}));\n                        else\n                            this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_yours__text_keys_changed\")}));\n                        xabber.chat_body.updateHeight();\n                        is_scrolled_bottom && this.view.scrollToBottom();\n                        this.account.omemo.checkContactFingerprints(this.contact);\n                        (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                    } else {\n                        this.account.omemo.checkContactFingerprints(this.contact).then((is_contact_trusted) => {\n                            let is_scrolled_bottom = this.view.isScrolledToBottom();\n                            this.$el.removeClass('loading');\n                            this.$el.children('.preloader-wrapper').detach();\n                            if (is_contact_trusted === 'nil') {\n                                this.$el.prepend($(`<div class=\"warning-wrap no-fingerprints\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                                this.$el.attr('data-contact-trust', is_contact_trusted);\n                                return;\n                            }\n                            if (is_contact_trusted === 'error') {\n                                this.$el.attr('data-contact-trust', is_contact_trusted);\n                                this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_partner__text_keys_changed\")}));\n                            } else {\n                                if (is_contact_trusted === 'none') {\n                                    this.view.$el.addClass('encrypted');\n                                    this.view.$('.chat-notification').removeClass('hidden').addClass('encryption-warning').html(templates.content_encryption_warning({message: xabber.getString(\"omemo__alert_new_device_partner__text_new_device\")}));\n                                }\n                                this.$el.attr('data-contact-trust', is_contact_trusted);\n                            }\n                            this.view.$el.attr('data-trust', is_contact_trusted);\n                            this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_contact_trusted);\n                            this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_contact_trusted);\n                            xabber.chat_body.updateHeight();\n                            is_scrolled_bottom && this.view.scrollToBottom();\n                            (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                        });\n                    }\n                });\n            } else {\n                this.$el.addClass('loading');\n                this.$el.prepend($('<div class=\"omemo-disabled warning-wrap\"/>').text(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\")));\n            }\n        },\n\n        openDevicesWindow: function () {\n            if (this.account.omemo) {\n                if (this.$el.attr('data-trust') !== undefined) {\n                    if (!this.omemo_devices)\n                        this.omemo_devices = new xabber.Fingerprints({model: this.account.omemo});\n                    this.omemo_devices.open();\n                } else if (this.$el.attr('data-contact-trust') !== undefined) {\n                    let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n                    peer.fingerprints.open();\n                }\n            } else\n                utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n        },\n\n        onBlockedUpdate: function () {\n            if (!this.isVisible())\n                return;\n            let is_blocked = this.model.get('blocked');\n            this.$('.message-input-panel').hideIf(is_blocked);\n            this.$('.blocked-msg').showIf(is_blocked);\n            this.$el.switchClass('chat-bottom-blocked-wrap', is_blocked);\n        },\n\n        onClickBottom: function (ev) {\n            (this.$el.hasClass('chat-bottom-blocked-wrap') && !$(ev.target).closest('.message-actions-panel').length) && this.contact.showDetails(xabber.body.screen.get('name'));\n            if ($(ev.target).closest('.ql-editor.rich-textarea').length) {\n                if (!this.quill.getText().trim().length) {\n                    if (++this.click_counter === 3) {\n                        this.click_counter = 0;\n                        this.setOneLiner();\n                    }\n                }\n            }\n        },\n\n        updateInfoInBottom: function () {\n            if (this.contact && this.contact.my_info) {\n                let nickname = this.contact.my_info.get('nickname'),\n                    badge = this.contact.my_info.get('badge'),\n                    avatar = this.contact.my_info.get('b64_avatar'),\n                    role = this.contact.my_info.get('role');\n                if (nickname) {\n                    this.$('.account-jid').hide();\n                    this.$('.account-nickname').show().text(nickname);\n                }\n                else\n                    this.$('.account-nickname').hide();\n                if (badge)\n                    this.$('.account-badge').show().text(badge);\n                else\n                    this.$('.account-badge').hide();\n                if (role && role != 'member')\n                    this.$('.account-role').show().text(utils.pretty_name(role));\n                else\n                    this.$('.account-role').hide();\n                this.$('.input-toolbar').emojify('.account-badge', {emoji_size: 16});\n                if (!avatar && this.contact.my_info.get('avatar_url'))\n                    avatar = this.contact.my_info.get('avatar_url');\n                if (!avatar && this.account.cached_image)\n                    avatar = this.account.cached_image;\n                !avatar && (avatar = Images.getDefaultAvatar(nickname));\n                this.$('.my-avatar.circle-avatar').setAvatar(avatar, this.avatar_size);\n            }\n            else {\n                this.$('.account-jid').show();\n                this.$('.account-nickname').hide();\n                this.$('.account-badge').hide();\n                this.$('.account-role').hide();\n            }\n        },\n\n        updateAvatar: function () {\n            let image;\n            if (this.contact && this.contact.get('group_chat')) {\n                if (this.contact.my_info){\n                    if (this.contact.my_info.get('b64_avatar'))\n                        image = this.contact.my_info.get('b64_avatar');\n                    if (!image && this.contact.my_info.get('avatar_url'))\n                        image = this.contact.my_info.get('avatar_url');\n                    if (!image && this.account.cached_image)\n                        image = this.account.cached_image;\n                }\n                !image && (image = Images.getDefaultAvatar(this.contact.my_info && this.contact.my_info.nickname || this.account.get('jid')));\n            }\n            else\n                image = this.account.cached_image;\n            this.$('.my-avatar.circle-avatar').setAvatar(image, this.avatar_size);\n        },\n\n        focusOnInput: function () {\n            if (!xabber.body.$el.siblings('#modals').children('.open:not(.collapsed):not(.plyr-player-popup-view)').length){\n                this.quill.enable();\n                this.quill.focus();\n            } else {\n                this.quill.blur();\n                this.quill.disable();\n            }\n            return this;\n        },\n\n        moveCursorToEnd: function () {\n            let range = document.createRange(),\n                sel = window.getSelection(),\n                target = this.quill.root;\n            range.selectNodeContents(target);\n            range.collapse(false);\n            sel.removeAllRanges();\n            sel.addRange(range);\n            target.focus();\n            range.detach(); // optimization\n            target.scrollTop = target.scrollHeight;\n        },\n\n        keyDown: function (ev) {\n            let $rich_textarea = this.$('.input-message .rich-textarea');\n            if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') ||\n                    ev.keyCode === constants.KEY_BACKSPACE ||\n                    ev.keyCode === constants.KEY_DELETE) {\n                return;\n            }\n            if (ev.keyCode === constants.KEY_ENTER || ev.keyCode === 10) {\n                if (this.$('.mentions-list').css('display') !== 'none') {\n                    let active_item = this.$('.mentions-list').children('.active.mention-item');\n                    active_item.length && active_item.click();\n                    ev.preventDefault();\n                    return;\n                }\n                let send_on_enter = xabber.settings.hotkeys === \"enter\";\n                if ((send_on_enter && ev.keyCode === constants.KEY_ENTER && !ev.shiftKey) ||\n                        (!send_on_enter && ev.ctrlKey)) {\n                    ev.preventDefault();\n                    this.submit();\n                    return;\n                }\n            }\n            if ($rich_textarea.getTextFromRichTextarea().trim() && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n                this.view.sendChatState('composing');\n        },\n\n        displayMicrophone: function () {\n            this.$('.mdi-send').addClass('hidden');\n            this.$('.attach-voice-message').removeClass('hidden');\n        },\n\n        displaySend: function () {\n            this.$('.mdi-send').removeClass('hidden');\n            this.$('.attach-voice-message').addClass('hidden');\n        },\n\n        updateMarkupPanel: function (ev) {\n            let $ic_markup = $(ev.target).closest('.format-text');\n            $ic_markup.toggleClass('active');\n            if ($ic_markup.hasClass('active')) {\n                this.$('.ql-toolbar.ql-snow').show();\n                this.$('.last-emoticons').hide();\n            }\n            else {\n                this.$('.ql-toolbar.ql-snow').hide();\n                this.$('.last-emoticons').show();\n            }\n        },\n\n        setOneLiner: function () {\n            let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n                placeholder = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n            if (!placeholder) {\n                this.setOneLiner();\n                return;\n            }\n            this.updatePlaceholder(placeholder);\n        },\n\n        setDefaultPlaceholder: function () {\n            let placeholder = this.model.get('encrypted') ? xabber.getString(\"chat_bottom__hint_default_encrypted\") : xabber.getString(\"chat_bottom__hint_default\");\n            this.updatePlaceholder(placeholder);\n        },\n\n        updatePlaceholder: function (placeholder) {\n            this.quill.root.setAttribute('data-placeholder', placeholder);\n        },\n\n        changeEncryption: function () {\n            this.model.set('encrypted', !this.model.get('encrypted'));\n        },\n        \n        getParticipantsList: function () {\n            let list = [];\n            this.contact.participants.each((participant) => {\n                list.push(participant.get('nickname') || participant.get('jid') || participant.get('id'));\n            });\n            return list.join(', ');\n        },\n\n        onChangedText: function () {\n            let current_height = this.$el.height();\n            if (current_height !== this.bottom_height) {\n                this.bottom_height = current_height;\n                this.view.scrolled_to_bottom = this.view.isScrolledToBottom();\n            }\n            clearTimeout(this._timeout_textchange);\n            this._timeout_textchange = setTimeout(() => {\n                this.updateOpenGraphReference(this.quill.getText())\n            }, 500);\n        },\n\n        updateMentionsList: function (mention_text) {\n            mention_text = (mention_text || \"\").toLowerCase();\n            this.contact.searchByParticipants(mention_text, (participants) => {\n                if (participants.length || xabber.getString(\"chat_bottom__mentions_list__item_everyone\").toLowerCase().indexOf(mention_text) > -1 || mention_text === \"*\" || 'all'.indexOf(mention_text) > -1 || 'все'.indexOf(mention_text) > -1) {\n                    this.$('.mentions-list').html(\"\").show().perfectScrollbar({theme: 'item-list'});\n                    this.$('.mentions-list')[0].scrollTop = 0;\n                    participants.forEach((participant) => {\n                        let attrs = _.clone(participant.attributes);\n                        if (!attrs.id)\n                            return;\n                        attrs.nickname = attrs.nickname ? Strophe.xmlescape(attrs.nickname) : attrs.id;\n                        let mention_item = $(templates.group_chats.mention_item(attrs));\n                        mention_item.find('.circle-avatar').setAvatar(participant.get('b64_avatar') || utils.images.getDefaultAvatar(participant.get('nickname') || participant.get('jid') || participant.get('id')), this.mention_avatar_size);\n                        mention_item.find('.nickname').text().replace(mention_text, mention_text.bold());\n                        this.$('.mentions-list').append(mention_item);\n                    });\n                    let mention_all = $(templates.group_chats.mention_item({jid: \"\", nickname: xabber.getString(\"chat_bottom__mentions_list__item_everyone\"), id: \"\"}));\n                    mention_all.find('.circle-avatar').setAvatar(this.contact.cached_image, this.mention_avatar_size);\n                    mention_all.find('.one-line.jid').text(this.getParticipantsList());\n                    this.$('.mentions-list').append(mention_all);\n                    this.$('.mentions-list').children('.mention-item').first().addClass('active');\n                } else\n                    this.$('.mentions-list').html(\"\").hide();\n            });\n        },\n\n        onMentionButtonClick: function () {\n            if (this.$('.ql-mention').hasClass('ql-active')){\n                this.$('.ql-mention').prop('disabled', false);\n                this.$('.ql-mention').click();\n                this.$('.ql-mention').prop('disabled', true);\n\n                return;\n            }\n            let selection = this.quill.getSelection() ? this.quill.getSelection().index : (this.quill.getLength() - 1);\n            this.quill.insertText(selection, ' @ ', 'user')\n            this.quill.setSelection(selection + 2, 0)\n            let mention_text = \"\";\n            if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n                this.updateMentionsList(mention_text);\n            } else {\n                this.contact.participants.participantsRequest({version: 0}, () => {\n                    this.updateMentionsList(mention_text);\n                });\n            }\n\n        },\n\n        inputMention: function (ev) {\n            ev && ev.preventDefault();\n            let $rich_textarea = this.$('.rich-textarea'),\n                $participant_item = $(ev.target).closest('.mention-item'),\n                nickname = $participant_item.data('nickname'),\n                id = $participant_item.data('id') || \"\",\n                jid = !this.contact.get('incognito_chat') && $participant_item.data('jid') || \"\",\n                text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\"),\n                caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n                mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n                to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji(),\n                mentions_at = to_caret_text && Array.from(to_caret_text.matchAll(mention_at_regexp)) || [],\n                mentions_plus = to_caret_text && Array.from(to_caret_text.matchAll(mention_plus_regexp)) || [],\n                at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n                plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n                mention_position = Math.max(at_position, plus_position),\n                mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\");\n            (mention_text.length && mention_text[0].match(/\\s/)) && mention_position++;\n            mention_text = mention_text.replace(/\\s?(@|[+])/, \"\");\n            this.$('.mentions-list').hide();\n            this.quill.deleteText(mention_position, ++mention_text.length);\n            if (!nickname.length) {\n                if (id.length)\n                    nickname = id;\n                else\n                    return;\n            }\n            this.insertMention({jid: jid, id: id, nickname: nickname, position: mention_position});\n            this.focusOnInput();\n        },\n\n        insertMention: function (options) {\n            if (!options)\n                return;\n            let id = options.id, jid = options.jid, nickname = options.nickname,\n                is_me = !id && !jid || this.account.get('jid') === jid || this.contact.my_info && this.contact.my_info.get('id') === id,\n                attrs = {jid: jid, id: id, nickname: Strophe.xmlescape(nickname), is_me: is_me},\n                position = options.position;\n            this.quill.insertEmbed(position, 'mention', JSON.stringify(attrs));\n            this.quill.pasteHTML(position + nickname.length, '<text> </text>');\n            this.quill.setSelection(position + nickname.length + 1, 0);\n        },\n\n        showAccountSettings: function () {\n            if (this.contact.get('group_chat')) {\n                if (this.contact.my_info && this.contact.my_rights) {\n                    this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                    this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n                } else\n                    this.contact.getMyInfo(() => {\n                        this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                        this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n                    });\n            } else {\n                this.account.showSettings();\n            }\n        },\n\n        keyUp: function (ev) {\n            let $rich_textarea = $(ev.target).closest('.rich-textarea'),\n                text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\");\n            if (text) {\n                this.click_counter = 0;\n                this.setDefaultPlaceholder();\n            }\n            if (ev.keyCode === constants.KEY_ARROW_UP) {\n                if (!text) {\n                    let $msg = this.view.$(`.chat-message[data-from=\"${this.account.get('jid')}\"]`).last();\n                    (!$msg.length && this.contact.participants) && ($msg = this.view.$(`.chat-message[data-from=\"${this.contact.participants.find(m => m.get('jid') === this.account.get('jid')).get('id')}\"]`).last());\n                    let edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n                    this.edit_message = edit_msg;\n                    this.setEditedMessageAttachments(edit_msg);\n                    this.setEditedMessage(edit_msg);\n                }\n            }\n            if ((!text || text == \"\\n\") && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length))\n                this.displayMicrophone();\n            else\n                this.displaySend();\n            if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') && !this.edit_message) {\n                ev.preventDefault();\n                this.unsetForwardedMessages();\n                if (this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0) {\n                    let $elem = this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').last();\n                    if ($elem.hasClass('link-message-reference')){\n                        let url = $elem.attr('data-original-url');\n                        if (url) {\n                            $elem.remove();\n                            this.removeLinkReferenceByUrl(url);\n                        }\n                    } else {\n                        let id = $elem.attr('data-id');\n                        if (id) {\n                            $elem.remove();\n                            this.removeFileSnippetById(id);\n                        }\n                    }\n\n                }\n                this.unsetForwardedMessages();\n            } else {\n                if (ev.keyCode === constants.KEY_ARROW_UP || ev.keyCode === constants.KEY_ARROW_DOWN) {\n                    return;\n                }\n                if ((ev.keyCode === constants.KEY_ARROW_LEFT || ev.keyCode === constants.KEY_ARROW_RIGHT) && this.$('.mentions-list').css('display') !== 'none') {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n                if ((ev.keyCode === constants.KEY_BACKSPACE || ev.keyCode === constants.KEY_DELETE) && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length)) {\n                    if (!text || text == \"\\n\") {\n                        if (this.$('.fwd-messages-preview').hasClass('hidden'))\n                            this.displayMicrophone();\n                        else\n                            this.displaySend();\n                        $rich_textarea.flushRichTextarea();\n                    }\n                }\n                if (ev.keyCode === constants.KEY_SPACE) {\n                    let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                        to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji();\n                    if (to_caret_text[caret_position - 2] && to_caret_text[caret_position - 2].match(/@|[+]/)) {\n                        this.$('.mentions-list').hide();\n                        return;\n                    }\n                }\n                if (this.model.get('group_chat')) {\n                    let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                        mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n                        mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n                        to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replace(/\\n$/, \"\").replaceEmoji(),\n                        mentions_at = Array.from(to_caret_text.matchAll(mention_at_regexp)),\n                        mentions_plus = Array.from(to_caret_text.matchAll(mention_plus_regexp)),\n                        at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n                        plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n                        mention_position = Math.max(at_position, plus_position);\n                    if (this.quill.selection.lastRange && this.quill.getLeaf(this.quill.selection.lastRange.index)[0].parent.domNode.tagName.toLowerCase() === 'mention') {\n                        this.$('.mentions-list').hide();\n                        return;\n                    }\n                    if (!(caret_position > -1) || mention_position === -1) {\n                        this.$('.mentions-list').hide();\n                    }\n                    if (mention_position > -1) {\n                        let mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\").replace(/\\s?(@|[+])/, \"\");\n                            if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n                                this.updateMentionsList(mention_text);\n                            } else {\n                                this.contact.participants.participantsRequest({version: 0}, () => {\n                                    this.updateMentionsList(mention_text);\n                                });\n                            }\n                    }\n                    else\n                        this.$('.mentions-list').hide();\n                }\n            }\n            $rich_textarea.updateRichTextarea();\n            this.focusOnInput();\n            xabber.chat_body.updateHeight();\n        },\n\n        onCut: function () {\n            if (this.$('.fwd-messages-preview').hasClass('hidden'))\n                this.displayMicrophone();\n            else {\n                this.displaySend();\n            }\n        },\n\n        onPaste: function (ev) {\n            ev.preventDefault();\n            let $rich_textarea = $(ev.target),\n                clipboard_data = ev.clipboardData;\n            if (clipboard_data) {\n                if (clipboard_data.files.length > 0) {\n                    let image_from_clipboard = clipboard_data.files[clipboard_data.files.length - 1],\n                        blob_image = window.URL.createObjectURL(new Blob([image_from_clipboard])),\n                        options = { blob_image_from_clipboard: blob_image};\n                    image_from_clipboard.name = 'clipboard.png';\n                    this.view.addFileMessage([image_from_clipboard]);\n                    this.focusOnInput();\n                }\n                else if (clipboard_data.items.length > 0) {\n                    let image_from_clipboard = clipboard_data.items[clipboard_data.items.length - 1];\n                    if (image_from_clipboard.kind === 'file') {\n                        let blob = image_from_clipboard.getAsFile(),\n                            reader = new FileReader(), deferred = new $.Deferred();\n                        reader.onload = function(event){\n                            let options = { blob_image_from_clipboard: event.target.result};\n                            deferred.resolve();\n                            this.focusOnInput();\n                        };\n                        deferred.done(() => {\n                            blob.name = 'clipboard.png';\n                            this.view.addFileMessage([blob]);\n                        });\n                        reader.readAsDataURL(blob);\n                    }\n                    else {\n                        let text = _.escape(clipboard_data.getData('text')),\n                            arr_text = Array.from(text);\n                        arr_text.forEach((item, idx) => {\n                            if (item == '\\n')\n                                arr_text.splice(idx, 1, '</p><p>');\n                        });\n                        text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                        window.document.execCommand('insertHTML', false, text);\n                    }\n                }\n                else {\n                    let text = _.escape(clipboard_data.getData('text')),\n                        arr_text = Array.from(text);\n                    arr_text.forEach((item, idx) => {\n                        if (item == '\\n')\n                            arr_text.splice(idx, 1, '</p><p>');\n                        if (item == ' ')\n                            arr_text.splice(idx, 1, '&nbsp');\n                    });\n                    text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                    window.document.execCommand('insertHTML', false, text);\n                }\n            }\n            if ($rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\") && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n                this.view.sendChatState('composing');\n            this.focusOnInput();\n            xabber.chat_body.updateHeight();\n        },\n\n        onFileInputChanged: function (ev) {\n            let target = ev.target,\n                files = [];\n            for (let i = 0; i < target.files.length; i++) {\n                files.push(target.files[i]);\n            }\n\n            if (files && files.length) {\n                this.view.addFileMessage(files);\n                $(target).val('');\n            }\n        },\n\n        updateOpenGraphReference: function (text) {\n            if (!(this.account.get('gallery_token') && this.account.get('gallery_url')))\n                return;\n            let url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g,\n                list = text && text.match(url_regexp);\n            list = _.difference(list, this.link_reference_exempted)\n            list = _.difference(list, this.currently_loaded_link_references)\n            if (list && list.length){\n                this.stopped_loading_link_reference = false;\n                this.$('.preview-preloader-container').removeClass('hidden');\n                let request_count = 0;\n                this.link_reference_request_timestamp = Date.now();\n                let request_timestamp = this.link_reference_request_timestamp;\n                list.forEach((item, idx) => {\n                    this.account.getOpenGraphData(item, (res) => {\n                        if (this.stopped_loading_link_reference || !(request_timestamp === this.link_reference_request_timestamp))\n                            return;\n                        if (this.currently_loaded_link_references.includes(item)){\n                            request_count++;\n                            if (request_count === list.length)\n                                this.$('.preview-preloader-container').addClass('hidden');\n                            return;\n                        }\n                        let dfd = new $.Deferred();\n                        dfd.done(() => {\n                            request_count++;\n                            this.displaySend();\n                            this.$('.message-reference-preview').removeClass('hidden');\n                            if (request_count === list.length)\n                                this.$('.preview-preloader-container').addClass('hidden');\n                            res.original_text = item\n                            this.$('.message-reference-preview-container').append($(templates.messages.link_reference({\n                                item: res,\n                                domain: res.url ? utils.getDomainFromUrl(res.url) : res.site_name,\n                                url: null\n                            })));\n                            this.$('.attached-image').magnificPopup({\n                                type: 'image',\n                                closeOnContentClick: true,\n                                fixedContentPos: true,\n                                mainClass: 'mfp-no-margins mfp-with-zoom',\n                                image: {\n                                    verticalFit: true,\n                                    titleSrc: function(item) {\n                                        return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                                    }\n                                },\n                                zoom: {\n                                    enabled: true,\n                                    duration: 300\n                                }\n                            });\n                            this.link_references = this.link_references.concat(res);\n                            this.currently_loaded_link_references = this.currently_loaded_link_references.concat([item]);\n                            xabber.chat_body.updateHeight();\n                            this.scrollToBottom();\n                        });\n                        if ((res.image_height && res.image_width) || !res.image){\n                            dfd.resolve()\n                        } else {\n                            let img = new Image();\n                            img.onload = (image) => {\n                                res.image_height = img.height;\n                                res.image_width = img.width;\n                                dfd.resolve()\n                            };\n                            img.onerror = img.onabort = (image) => {\n                                res.image = undefined;\n                                dfd.resolve()\n                            };\n                            img.src = res.image;\n                        }\n                    }, (err) => {\n                        this.link_reference_exempted = this.link_reference_exempted.concat([item]);\n                        request_count++;\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                    })\n\n                });\n            }\n        },\n\n        removeAttachments: function () {\n            this.removeAllFileSnippets();\n            this.removeAllLinkReferences();\n        },\n\n        stopLoadingLinkReference: function () {\n            this.$('.preview-preloader-container').addClass('hidden');\n            this.stopped_loading_link_reference = true;\n        },\n\n        removeLinkReference: function (ev) {\n            let $elem = $(ev.target).closest('.link-message-reference'),\n                url = $elem.attr('data-original-url');\n            $elem.remove();\n            this.removeLinkReferenceByUrl(url);\n        },\n\n        removeLinkReferenceByUrl: function (url) {\n            if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n                this.$('.message-reference-preview').addClass('hidden');\n            this.link_references = this.link_references.filter(item => item.original_text != url);\n            this.currently_loaded_link_references = this.currently_loaded_link_references.filter(item => item != url);\n            this.link_reference_exempted = this.link_reference_exempted.concat([url]);\n            xabber.chat_body.updateHeight();\n            this.scrollToBottom();\n        },\n\n        removeAllLinkReferences: function () {\n            this.stopLoadingLinkReference();\n            this.$('.message-reference-preview-container .link-message-reference').remove();\n            if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n                this.$('.message-reference-preview').addClass('hidden');\n            this.link_references = [];//\n            this.currently_loaded_link_references = [];//\n            xabber.chat_body.updateHeight();\n            this.scrollToBottom();\n        },\n\n        addFileSnippets: function (files) {\n            if (files && (this.attached_files.length + files.length) > 10){\n                utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n                return;\n            }\n            if (this.edit_message)\n                return;\n            files && files.length && this.$('.message-reference-preview').removeClass('hidden');\n            files && files.length && this.displaySend();\n            files.forEach((file) => {\n                let id = uuid();\n                file.uid = id;\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n                file.image_prev && (delete file.image_prev);\n                this.attached_files = this.attached_files.concat([file]);\n                xabber.chat_body.updateHeight();\n                this.scrollToBottom();\n            });\n            files && files.length && this.$('.attached-image').magnificPopup({\n                type: 'image',\n                closeOnContentClick: true,\n                fixedContentPos: true,\n                mainClass: 'mfp-no-margins mfp-with-zoom',\n                image: {\n                    verticalFit: true,\n                    titleSrc: function(item) {\n                        return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                    }\n                },\n                zoom: {\n                    enabled: true,\n                    duration: 300\n                }\n            });\n        },\n\n        removeFileSnippet: function (ev) {\n            let $elem = $(ev.target).closest('.message-reference-preview-item-file'),\n                id = $elem.attr('data-id');\n            $elem.remove();\n            this.removeFileSnippetById(id);\n        },\n\n        removeFileSnippetById: function (id) {\n            if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n                this.$('.message-reference-preview').addClass('hidden');\n            this.attached_files = this.attached_files.filter(item => item.uid != id);\n            xabber.chat_body.updateHeight();\n            this.scrollToBottom();\n        },\n\n        removeAllFileSnippets: function (ev) {\n            this.$('.message-reference-preview .message-reference-preview-item-file').remove();\n            if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n                this.$('.message-reference-preview').addClass('hidden');\n            this.attached_files = [];\n            xabber.chat_body.updateHeight();\n            this.scrollToBottom();\n        },\n\n        setEditedMessageAttachments: function (edit_msg, is_upload) {\n            !is_upload && this.$('.attach-file input').attr('disabled', true);\n            this.removeAllFileSnippets();\n            this.removeAllLinkReferences();\n            let files = edit_msg.get('files') || [],\n                images = edit_msg.get('images') || [],\n                videos = edit_msg.get('videos') || [],\n                link_references = edit_msg.get('link_references') || [];\n            files = files.concat(images).concat(videos);\n            if ((link_references && link_references.length) || (files && files.length)) {\n                this.$('.message-reference-preview').removeClass('hidden');\n                this.displaySend();\n            }\n            link_references.forEach((item) => {\n                this.link_references = this.link_references.concat([item]);\n                this.currently_loaded_link_references = this.currently_loaded_link_references.concat(item.original_text);\n                this.$('.message-reference-preview-container').prepend($(templates.messages.link_reference({\n                    item: item,\n                    domain: item.url ? utils.getDomainFromUrl(item.url) : item.site_name,\n                    url: null\n                })));\n                xabber.chat_body.updateHeight();\n            });\n            files.forEach((file) => {\n                if (!file)\n                    return;\n                let id = uuid();\n                file.uid = id;\n                this.attached_files = this.attached_files.concat([file]);\n                if (is_upload){\n                    this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                        file: file,\n                        uid: id,\n                        blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                        filesize: utils.pretty_size(file.size),\n                        typeicon: utils.file_type_icon(file.type),\n                        filetype: utils.pretty_file_type(file.type),\n                    })));\n                } else{\n                    this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                        file: file,\n                        uid: id,\n                        blob: file.sources.length && file.sources[0] && utils.isImageType(file.type) ? file.sources[0] : null,\n                        filesize: utils.pretty_size(file.size),\n                        typeicon: utils.file_type_icon(file.type),\n                        filetype: utils.pretty_file_type(file.type),\n                    })));\n                }\n                xabber.chat_body.updateHeight();\n            });\n            ((link_references && link_references.length) || (files && files.length)) && this.$('.attached-image').magnificPopup({\n                type: 'image',\n                closeOnContentClick: true,\n                fixedContentPos: true,\n                mainClass: 'mfp-no-margins mfp-with-zoom',\n                image: {\n                    verticalFit: true,\n                    titleSrc: function(item) {\n                        return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                    }\n                },\n                zoom: {\n                    enabled: true,\n                    duration: 300\n                }\n            });\n        },\n\n        showLocationPopup: function (ev) {\n            if (!xabber.settings.mapping_service)\n                return;\n            window.popup_coordinates = undefined;\n            window.location_name = undefined;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        },\n\n        showMediaPopup: function (ev) {\n            if (this.edit_message)\n                return;\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                let media_view = new xabber.SendMediaView();\n                media_view.render({parent: this, model: this.account});\n            }\n        },\n\n        stopWritingVoiceMessage: function (ev) {\n            let $bottom_panel = this.$('.message-input-panel');\n            if ($bottom_panel.find('.recording').length > 0) {\n                $bottom_panel.find('.recording').removeClass('recording');\n                return;\n            }\n        },\n\n        writeVoiceMessage: function (ev) {\n            let $elem = $(ev.target);\n            if ($elem.hasClass('recording'))\n                $elem.removeClass('recording');\n            else {\n                $elem.addClass('recording ground-color-50');\n                if (!this.model.get('recording_voice_message'))\n                    this.initAudio();\n            }\n        },\n\n        initAudio: function() {\n            navigator.getUserMedia = (navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.webkitGetUserMedia || navigator.getUserMedia);\n            if (navigator.getUserMedia) {\n                this.model.set('recording_voice_message', true)\n                let constraints = { audio: true, channelCount: 1 },\n                    chunks = [],\n                    $mic = this.$('.send-area .attach-voice-message'),\n                    onSuccess = (stream) => {\n                    if (!$mic.is(\":hover\")) {\n                        $mic.removeClass('recording ground-color-50');\n                        this.model.set('recording_voice_message', false)\n                        return;\n                    }\n                    let mediaRecorder = new MediaRecorder(stream),\n                        timer = 1, start_time, end_time,\n                        mic_hover = true;\n                        mediaRecorder.onstart = () => {\n                            if (xabber.settings.typing_notifications) {\n                                this.view.sendChatState('composing', 'voice');\n                                this._chatstate_send_timeout = setInterval(() => {\n                                    this.view.sendChatState('composing', 'voice');\n                                }, constants.CHATSTATE_INTERVAL_COMPOSING_AUDIO);\n                            }\n                            start_time = moment.now();\n                            let $bottom_panel = this.$('.message-input-panel'),\n                                $timer_elem = this.$('.input-voice-message .timer'),\n                                $status_msg = this.$('.input-voice-message .voice-msg-status'),\n                                $voice_visualizer = this.$('.input-voice-message .voice-visualizer');\n                            $timer_elem.text('0:00');\n                            $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                            $bottom_panel.addClass('voice-message-recording');\n\n                            let timerId = setInterval(() => {\n                                    if ($mic.hasClass('recording') && (timer < constants.VOICE_MSG_TIME)) {\n                                        if (timer%1 == 0)\n                                            $timer_elem.text(utils.pretty_duration(timer));\n                                        timer = (timer*10 + 2)/10;\n                                        mic_hover = $bottom_panel.is(\":hover\");\n                                        if (!mic_hover)\n                                            $status_msg.css('color', '#D32F2F').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice_short\"));\n                                        else\n                                            $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                                    }\n                                    else\n                                    {\n                                        mic_hover = $bottom_panel.is(\":hover\");\n                                        mediaRecorder.stop();\n                                        $mic.removeClass('recording ground-color-50');\n                                        $bottom_panel.removeClass('voice-message-recording');\n                                        this.model.set('recording_voice_message', false)\n                                        clearInterval(timerId);\n                                    }\n                                }, 200),\n                                flag = false,\n                                timerIdDot = setInterval(() => {\n                                    if ($mic.hasClass('recording')) {\n                                        if (flag)\n                                            $voice_visualizer.css('background-color', '#FFF');\n                                        else\n                                            $voice_visualizer.css('background-color', '#D32F2F');\n                                        flag = !flag;\n                                    }\n                                    else\n                                        clearInterval(timerIdDot);\n                                }, 500);\n                        };\n\n                        mediaRecorder.start();\n\n                        mediaRecorder.onstop = () => {\n                        clearInterval(this._chatstate_send_timeout);\n                        (xabber.settings.typing_notifications) && this.view.sendChatState('paused');\n                        end_time = moment.now();\n                        if (mic_hover && ((end_time - start_time)/1000 >= 1.5)) {\n                            let audio_name = (\"voice message \" + moment().format('YYYY-MM-DD HH:mm:ss') + '.ogg'), audio_type = 'audio/ogg; codecs=opus',\n                                blob = new Blob(chunks, { 'type' : audio_type}),\n                                file = new File([blob], audio_name, {\n                                    type: audio_type,\n                                });\n                            file.voice = true;\n                            file.duration = Math.round((end_time - start_time)/1000);\n                            this.view.addFileMessage([file], true);\n                        }\n                        chunks = [];\n                    };\n\n                    mediaRecorder.ondataavailable = (e) => {\n                        chunks.push(e.data);\n                        stream.getTracks().forEach(track => track.stop() );\n                    };\n                };\n\n                let onError = (error) => {\n                    console.log(xabber.getString(\"file_upload__error\", [error]));\n                    $mic.removeClass('recording ground-color-50');\n                };\n\n                window.navigator.getUserMedia(constraints, onSuccess, onError);\n            }\n        },\n\n        typeEmoticon: function (emoji) {\n            if (typeof emoji == 'number')\n                emoji = Number(emoji).toString();\n            let caret_idx = -1;\n            if (this.quill.selection.lastRange)\n                caret_idx = this.quill.selection.lastRange.index;\n            else if (this.quill.selection.savedRange)\n                caret_idx = this.quill.selection.savedRange.index;\n            this.quill.focus();\n            if (!this.edit_message)\n                this.displaySend();\n            (!this.view.chat_state && xabber.settings.typing_notifications) && this.view.sendChatState('composing');\n            this.quill.insertEmbed(caret_idx, 'emoji', emoji);\n            if (this.quill.getFormat(caret_idx, 1).mention) {\n                this.quill.formatText(caret_idx, 1, 'mention', false);\n            }\n            this.quill.setSelection(caret_idx + 1);\n            xabber.chat_body.updateHeight();\n        },\n\n        renderLastEmoticons: function () {\n            let cached_last_emoji = this.account.chat_settings.getLastEmoji(),\n                $last_emoticons = this.$('.last-emoticons').empty(), emoji;\n            if (cached_last_emoji.length < 7) {\n                for (let idx = 0; idx < 7; idx++) {\n                    emoji = Emoji.getByIndex(idx);\n                    this.account.chat_settings.updateLastEmoji(emoji);\n                }\n            }\n            cached_last_emoji = this.account.chat_settings.getLastEmoji();\n            for (let idx = 0; idx < 7; idx++) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    cached_last_emoji[idx] && cached_last_emoji[idx].emojify({tag_name: 'div', emoji_size: 20})\n                ).appendTo($last_emoticons);\n            }\n            $last_emoticons.find('.emoji-wrap').mousedown((ev) => {\n                if (ev && ev.preventDefault) { ev.preventDefault(); }\n                if (ev.button) {\n                    return;\n                }\n                let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n                this.typeEmoticon($target.data('emoji'));\n            });\n        },\n\n        submit: function (ev) {\n            let $rich_textarea = this.$('.input-message .rich-textarea'),\n                mentions = [],\n                markup_references = [],\n                blockquotes = [],\n                link_references = this.link_references,\n                attached_files = this.attached_files,\n                text = $rich_textarea.getTextFromRichTextarea();\n            this.$('.mentions-list').html(\"\").hide();\n            $rich_textarea.find('.emoji').each((idx, emoji_item) => {\n                let emoji = emoji_item.innerText;\n                this.account.chat_settings.updateLastEmoji(emoji);\n            });\n            let content_concat = [];\n            if (text.length >= constants.STANZA_MAX_SIZE) {\n                utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n                $rich_textarea.flushRichTextarea();\n                return;\n            }\n            if (text.length) {\n                this.quill.getContents().forEach((content) => {\n                    if (content.attributes) {\n                        let content_attrs = [],\n                            start_idx = content_concat.length,\n                            end_idx = start_idx + ((content.insert && content.insert.emoji) ? 1 : _.escape(content.insert).length);\n                        for (let attr in content.attributes)\n                            (attr !== 'alt' && attr !== 'blockquote') && content_attrs.push(attr);\n                        if (content_attrs.indexOf('mention') > -1) {\n                            let mention_idx = content_attrs.indexOf('mention'),\n                                is_gc = this.contact.get('group_chat'),\n                                target = $($rich_textarea.find('mention')[mentions.length]).attr('data-target');\n                            content_attrs.splice(mention_idx, mention_idx + 1);\n                            target = is_gc ? ('xmpp:' + this.contact.get('jid') + target) : ('xmpp:' + target);\n                            mentions.push({\n                                start: start_idx,\n                                end: end_idx,\n                                target: target,\n                                is_gc: is_gc\n                            });\n                        }\n                        if (content.attributes.blockquote) {\n                            if (content_concat.length) {\n                                Array.from(content.insert).forEach((ins) => {\n                                    let quote_start_idx = (content_concat.lastIndexOf('\\n') < 0) ? 0 : (content_concat.lastIndexOf('\\n') + 1),\n                                        quote_end_idx = content_concat.length;\n                                    blockquotes.push({\n                                        marker: constants.QUOTE_MARKER,\n                                        start: quote_start_idx,\n                                        end: quote_end_idx + constants.QUOTE_MARKER.length\n                                    });\n                                    text = Array.from(_.escape(text));\n\n                                    if (quote_start_idx === quote_end_idx) {\n                                        text[quote_start_idx - 1] += constants.QUOTE_MARKER;\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER;\n                                    }\n                                    else {\n                                        text[quote_start_idx] = constants.QUOTE_MARKER + text[quote_start_idx];\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER + content_concat[quote_start_idx];\n                                    }\n                                    (quote_end_idx > text.length) && (quote_end_idx = text.length);\n                                    text[quote_end_idx - 1] += '\\n';\n\n                                    text = _.unescape(text.join(\"\"));\n                                    content_concat = Array.from(content_concat.join(\"\"));\n\n                                    markup_references.forEach((markup_ref) => {\n                                        if (markup_ref.start >= quote_start_idx) {\n                                            markup_ref.start += constants.QUOTE_MARKER.length;\n                                            markup_ref.end += constants.QUOTE_MARKER.length;\n                                        }\n                                    });\n\n                                    content_concat = content_concat.concat(Array.from(_.escape(ins)));\n                                })\n                            }\n                        }\n                        content_attrs.length && markup_references.push({\n                            start: start_idx,\n                            end: end_idx,\n                            markup: content_attrs\n                        });\n                    }\n                    if (content.insert && content.insert.emoji) {\n                        content_concat = content_concat.concat(Array.from($(content.insert.emoji).data('emoji')));\n                    }\n                    else if (content.attributes && content.attributes.blockquote) {\n                    }\n                    else\n                        content_concat = content_concat.concat(Array.from(_.escape(content.insert)));\n                });\n            }\n            let start_length = text.length;\n            text = text.trimStart();\n            if (start_length > text.length) {\n                let delta = start_length - text.length;\n                mentions.forEach((mention) => {\n                    mention.start -= delta;\n                    mention.end -= delta;\n                });\n                markup_references.forEach((markup_reference) => {\n                    markup_reference.start -= delta;\n                    markup_reference.end -= delta;\n                });\n                blockquotes.forEach((blockquote) => {\n                    blockquote.start -= delta;\n                    blockquote.end -= delta;\n                });\n            }\n            if (link_references && link_references.length) {\n                link_references = link_references.filter(item => item.original_text);\n                link_references.forEach((link_reference) => {\n                    if (link_reference && link_reference.original_text) {\n                        link_reference.start = text.indexOf(link_reference.original_text);\n                        if (link_reference.start != -1) {\n                            link_reference.start = 0;\n                            link_reference.end = 0;\n                        }\n                    }\n                });\n            }\n            this.removeAllLinkReferences();\n            this.link_reference_exempted = [];\n            this.removeAllFileSnippets();\n            text = text.trimEnd();\n            $rich_textarea.flushRichTextarea();\n            this.quill.focus();\n            this.displayMicrophone();\n            if (this.edit_message) {\n                this.editMessage(text, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n                $rich_textarea.placeCaretAtEnd();\n                return;\n            }\n            if (text || this.fwd_messages.length || (attached_files && attached_files.length) || (link_references && link_references.length)) {\n                if (this.model.get('saved') && this.fwd_messages.length && !text)\n                    this.fwd_messages.forEach((message) => {\n                        this.view.onSubmit(\"\", [message]);\n                    });\n                else\n                    this.view.onSubmit(text, this.fwd_messages, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n            }\n            this.unsetForwardedMessages();\n            xabber.chats_view.clearSearch();\n            if (this.model.messages_view)\n                if (this.model.messages_view.data.get('visible'))\n                    xabber.chats_view.openChat(this.model.item_view, {right_contact_save: true, clear_search: true, screen: xabber.body.screen.get('name')});\n            $rich_textarea.placeCaretAtEnd();\n        },\n\n        setEditedMessage: function (message) {\n            this.click_counter = 0;\n            this.setDefaultPlaceholder();\n            let msg_text = message.get('message') || \"\";\n            this.$('.fwd-messages-preview').showIf(this.edit_message);\n            this.$('.fwd-messages-preview .msg-author').text(xabber.getString(\"edit_message__header\"));\n            this.$('.fwd-messages-preview .msg-text').html(Strophe.xmlescape(msg_text));\n            this.$('.fwd-messages-preview').emojify('.msg-text', {emoji_size: 18});\n            this.displaySend();\n            xabber.chat_body.updateHeight();\n            let markup_body = utils.markupBodyMessage(message, 'mention'),\n                emoji_node = markup_body.emojify({tag_name: 'div'}),\n                arr_text = emoji_node.split('\\n');\n            arr_text.forEach((item, idx) => {\n                if (!item.includes('</blockquote>'))\n                    arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n            });\n            emoji_node = arr_text.join(\"\");\n            this.quill.setText(\"\");\n            this.quill.root.innerHTML = emoji_node;\n            this.moveCursorToEnd();\n            this.focusOnInput();\n        },\n\n        setRedactedUploadMessage: function (message) {\n            this.click_counter = 0;\n            this.setDefaultPlaceholder();\n            let msg_text = message.get('message') || \"\";\n            this.displaySend();\n            xabber.chat_body.updateHeight();\n            let markup_body = utils.markupBodyMessage(message, 'mention'),\n                emoji_node = markup_body.emojify({tag_name: 'div'}),\n                arr_text = emoji_node.split('\\n');\n            arr_text.forEach((item, idx) => {\n                if (!item.includes('</blockquote>'))\n                    arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n            });\n            emoji_node = arr_text.join(\"\");\n            this.quill.setText(\"\");\n            this.quill.root.innerHTML = emoji_node;\n            this.moveCursorToEnd();\n            this.focusOnInput();\n        },\n\n        setForwardedMessages: function (messages) {\n            this.fwd_messages = messages || [];\n            this.$('.fwd-messages-preview').showIf(messages.length);\n            if (messages.length) {\n                let msg = messages[0],\n                    msg_author, msg_text, image_preview, $img_html_preview;\n                if (messages.length > 1) {\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n                } else {\n                    if (msg.get('forwarded_message')) {\n                        msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n                    }\n                    else {\n                        msg_text = (msg.get('message') || msg.get('original_message')).emojify();\n                        let fwd_images = msg.get('images') || [],\n                            fwd_files = msg.get('files') || [],\n                            fwd_locations = msg.get('locations');\n                        msg.get('videos') && msg.get('videos').length && (fwd_files = fwd_files.concat(msg.get('videos')));\n                        if ((fwd_images && fwd_images.length) && (fwd_files && fwd_files.length)) {\n                            msg_text = fwd_images.length + fwd_files.length + ' attachments';\n                        }\n                        else {\n                            if (fwd_images && fwd_images.length) {\n                                if (fwd_images.length > 1) {\n                                    msg_text =xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_images.length);\n                                }\n                                else {\n                                    image_preview = _.clone(msg.get('images')[0]);\n                                    $img_html_preview = this.createPreviewImage(image_preview);\n                                }\n                            }\n                            if (fwd_files && fwd_files.length) {\n                                if (fwd_files.length > 1) {\n                                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_files.length);\n                                }\n                                else {\n                                    let filesize = fwd_files[0].size;\n                                    msg_text = filesize ? fwd_files[0].name + \",   \" + filesize : fwd_files[0].name;\n                                }\n                            }\n                            if (fwd_locations && fwd_locations.length) {\n                                if (fwd_locations.length > 1) {\n                                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_locations.length);\n                                }\n                                else {\n                                    msg_text = xabber.getString(\"recent_chat__last_message__locations_plural_0\");\n                                }\n                            }\n                        }\n                    }\n                }\n                let from_jid = msg.get('from_jid');\n                if (msg.isSenderMe()) {\n                    msg_author = this.account.get('name');\n                } else {\n                    msg_author = (msg.get('user_info') && msg.get('user_info').nickname) || (this.account.contacts.get(from_jid) ? this.account.contacts.get(from_jid).get('name') : from_jid);\n                }\n                this.$('.fwd-messages-preview .msg-author').text(msg_author);\n                if (_.isUndefined(image_preview)) {\n                    this.$('.fwd-messages-preview .msg-text').html(msg_text);\n                }\n                else {\n                    this.$('.fwd-messages-preview .msg-text').html($img_html_preview);\n                }\n            }\n            xabber.chat_body.updateHeight();\n            this.displaySend();\n        },\n\n        onShowMarkupPanel: function (ev) {\n            let $clicked_icon = $(ev.target),\n                is_panel_opened = $clicked_icon.hasClass('opened');\n            this.$('.last-emoticons').showIf(is_panel_opened);\n            this.$('.markup-panel').showIf(!is_panel_opened);\n            $clicked_icon.switchClass('opened', !is_panel_opened);\n        },\n\n        createPreviewImage: function(image) {\n            let imgContent = new Image();\n                imgContent.src = image.sources[0];\n            $(imgContent).addClass('fwd-img-preview');\n            return imgContent;\n        },\n\n        unsetForwardedMessages: function (ev) {\n            ev && ev.preventDefault && ev.preventDefault();\n            let $rich_textarea = this.$('.input-message .rich-textarea');\n            this.fwd_messages = [];\n            if (this.edit_message) {\n                this.removeAllFileSnippets();\n                this.removeAllLinkReferences();\n                this.$('.attach-file input').attr('disabled', false);\n                $rich_textarea.flushRichTextarea();\n            }\n            this.edit_message = null;\n            this.$('.fwd-messages-preview').addClass('hidden');\n            let text = $rich_textarea.getTextFromRichTextarea();\n            if (!text || text == \"\\n\")\n                this.displayMicrophone();\n            else\n                this.displaySend();\n            xabber.chat_body.updateHeight();\n            this.focusOnInput();\n        },\n\n        resetSelectedMessages: function () {\n            this.content_view.$('.chat-message.selected').removeClass('selected');\n            this.manageSelectedMessages();\n        },\n\n        manageSelectedMessages: function () {\n            let $selected_msgs = this.content_view.$('.chat-message.selected'),\n                $input_panel = this.$('.message-input-panel'),\n                $message_actions = this.$('.message-actions-panel');\n                length = $selected_msgs.length;\n            $input_panel.hideIf(this.model.get('blocked') || length);\n            $message_actions.showIf(length);\n            this.model.get('blocked') && this.$('.blocked-msg').hideIf(length);\n            if (length) {\n                this.setButtonsWidth();\n                let my_msg = false;\n                if (length === 1) {\n                    if ($selected_msgs.first().data('from') === this.account.get('jid'))\n                        my_msg = true;\n                    if (this.contact && this.contact.my_info)\n                        if ($selected_msgs.first().data('from') === this.contact.my_info.get('id'))\n                            my_msg = true;\n                    if ($selected_msgs.first().find('.mdi-play').length)\n                        my_msg = false;\n                }\n                $message_actions.find('.pin-message-wrap').showIf(this.model.get('group_chat')).switchClass('non-active', ((length !== 1) && this.model.get('group_chat')));\n                $message_actions.find('.reply-message-wrap').switchClass('non-active', this.model.get('blocked'));\n                $message_actions.find('.edit-message-wrap').switchClass('non-active', !((length === 1) && my_msg) || this.content_view.$('.chat-message.saved-main.selected').length || this.model.get('blocked'));\n                !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').removeClass('hidden').addClass('msgs-counter').text(xabber.getQuantityString(\"chat_screen__bottom_panel__selected_messages__text\", length));\n            } else {\n                !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('msgs-counter').text(\"\");\n                this.focusOnInput();\n            }\n        },\n\n        pinMessage: function () {\n            if (!this.model.get('active'))\n                return;\n            if (this.$('.pin-message-wrap').hasClass('non-active'))\n                return;\n            let $msg = this.content_view.$('.chat-message.selected').first(),\n                pinned_msg = this.messages_arr.get($msg.data('uniqueid')),\n                msg_id = pinned_msg.get('stanza_id');\n            this.resetSelectedMessages();\n            let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n                .c('pinned-message').t(msg_id);\n            this.account.sendIQFast(iq, () => {},\n                (error) => {\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        },\n\n        copyMessages: function () {\n            if (!this.model.get('active'))\n                return;\n            let $msgs = this.content_view.$('.chat-message.selected'),\n                msgs = [];\n            $msgs.each((idx, item) => {\n                let msg = this.messages_arr.get(item.dataset.uniqueid);\n                msg && msgs.push(msg);\n            });\n            this.resetSelectedMessages();\n            this.pushMessagesToClipboard(msgs);\n        },\n\n        editMessage: function (text, text_markups) {\n            let original_body = Array.from(Strophe.xmlescape(this.edit_message.get('original_message') || \"\")),\n                forwarded_body = \"\",\n                mutable_refs = this.edit_message.get('mutable_content'),\n                groupchat_ref = mutable_refs && mutable_refs.find(item => item.type === 'groupchat'),\n                stanza_id = this.edit_message.get('stanza_id'),\n                forward_ref = mutable_refs && mutable_refs.filter(item => item.type === 'forward'),\n                markups = text_markups.markup_references || [],\n                files = text_markups.attached_files || [],\n                link_references = text_markups.link_references || [],\n                blockquotes = text_markups.blockquotes || [],\n                mentions = text_markups.mentions || [],\n                iq = $iq({type: 'set', to: (this.contact && this.contact.get('group_chat')) ? this.contact.get('jid') : this.account.get('jid')}).c('replace', {xmlns: Strophe.NS.REWRITE, id: stanza_id}),\n                $message = $build('message').attrs({xmlns: undefined});\n            forward_ref && forward_ref.forEach((fwd, idx) => {\n                let fwd_msg = this.edit_message.get('forwarded_message')[idx],\n                    gc_length = groupchat_ref && (groupchat_ref.start + groupchat_ref.end);\n                $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: (groupchat_ref ? (fwd.start - gc_length) : fwd.start), end: (groupchat_ref ? (fwd.end - gc_length) : fwd.end), type: 'mutable'})\n                    .c('forwarded', {xmlns: Strophe.NS.FORWARD})\n                    .c('delay', {\n                        xmlns: 'urn:xmpp:delay',\n                        stamp: fwd_msg.get('time')\n                    }).up().cnode(fwd_msg.get('xml')).up().up().up();\n                forwarded_body += original_body.slice(fwd.start, fwd.end).join('');\n            });\n            markups.forEach((markup) => {\n                $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: markup.start + Array.from(forwarded_body).length, end: markup.end + Array.from(forwarded_body).length, type: 'decoration'});\n                for (let idx in markup.markup)\n                    $message.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n                $message.up();\n            });\n            blockquotes.forEach((blockquote) => {\n                $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: blockquote.start + Array.from(forwarded_body).length, end: blockquote.end + Array.from(forwarded_body).length, type: 'decoration'})\n                    .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n            });\n            mentions.forEach((mention) => {\n                let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n                mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n                $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: mention.start + Array.from(forwarded_body).length, end: mention.end + Array.from(forwarded_body).length, type: 'decoration'})\n                    .c('mention', mention_attrs).t(mention.target).up().up();\n            });\n\n            if (files && files.length) {\n                mutable_refs = mutable_refs.filter(item => item.type !== 'file')\n                files.forEach((file, idx) => {\n                    (idx === 0) && (text += '\\n');\n                    let legacy_body = file.sources[0] + ((idx != files.length - 1) ? '\\n' : \"\"),\n                        start_idx = Array.from(_.escape(text)).length + Array.from(forwarded_body).length,\n                        end_idx = start_idx + legacy_body.length;\n                    $message.c('reference', {\n                        xmlns: Strophe.NS.REFERENCE,\n                        type: 'mutable',\n                        begin: start_idx,\n                        end: end_idx\n                    });\n                    file.voice && $message.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                    $message.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                    file.type && $message.c('media-type').t(file.type).up();\n                    file['id'] && $message.c('gallery-id').t(file['id']).up();\n                    file.thumbnail && $message.c('thumbnail-uri').t(file.thumbnail).up();\n                    file.created && $message.c('created').t(file.created).up();\n                    file.name && $message.c('name').t(file.name).up();\n                    file.size && $message.c('size').t(file.size).up();\n                    file.height && $message.c('height').t(file.height).up();\n                    file.width && $message.c('width').t(file.width).up();\n                    file.duration && $message.c('duration').t(file.duration).up();\n                    file.description && $message.c('desc').t(file.description).up();\n                    $message.up().c('sources');\n                    file.sources.forEach((u) => {\n                        if (file.key)\n                            u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                        $message.c('uri').t(u).up();\n                    });\n                    $message.up().up().up();\n                    file.voice && $message.up();\n                    text += legacy_body;\n                    mutable_refs.push({start: start_idx, end: end_idx});\n                });\n            }\n\n            if (link_references && link_references.length) {\n                mutable_refs = mutable_refs.filter(item => item.type !== 'link_reference')\n                link_references.forEach((link_reference, idx) => {\n                    if (link_reference.start === -1) {\n                        link_reference.start = Array.from(_.escape(text)).length + Array.from(forwarded_body).length;\n                        text = text + '\\n' + link_reference.original_text;\n                        link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                    }\n                    $message.c('reference', {\n                        xmlns: Strophe.NS.REFERENCE,\n                        begin: link_reference.start,\n                        end: link_reference.end,\n                        type: 'mutable',\n                    }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                    link_reference.site && $message.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                    link_reference.type && $message.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                    link_reference.title && $message.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                    link_reference.url && $message.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                    link_reference.description && $message.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                    link_reference.image && $message.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                    link_reference.image_width && $message.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                    link_reference.image_height && $message.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                    link_reference.video_url && $message.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                    $message.up().up();\n                    mutable_refs.push({start: link_reference.start, end: link_reference.end});\n                });\n            }\n            mutable_refs && mutable_refs.length && this.edit_message.set({mutable_content: mutable_refs});\n            if (!(Strophe.xmlunescape(forwarded_body) + text)){\n                this.deleteMessages(null, [this.edit_message]);\n                return;\n            }\n            $message.c('body').t(Strophe.xmlunescape(forwarded_body) + text).up();\n            this.unsetForwardedMessages();\n            if (this.model.get('encrypted')) {\n                let decrypted_msg = $message.tree().innerHTML;\n                $message.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n                if ($($message.tree()).children('body').length) {\n                    $message.cnode($($message.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                    $($message.tree()).children('body').detach()\n                }\n                if ($($message.tree()).children('reference').length) {\n                    $($message.tree()).children('reference').each((idx, reference) => {\n                        $message.cnode($($message.tree()).children('reference')[idx]).up()\n                    });\n                    $($message.tree()).children('reference').detach()\n                }\n                $message.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n                $message.c('from', {jid: this.account.get('jid')}).up().up()\n                this.account.omemo.encrypt(this.contact, $message).then((msg) => {\n                    iq.cnode(msg.message.tree());\n                    this.account.omemo.cached_messages.putMessage(this.contact, stanza_id, decrypted_msg);\n                    this.account.sendIQFast(iq);\n                });\n            } else {\n                iq.cnode($message.tree());\n                this.account.sendIQFast(iq);\n            }\n        },\n\n        showEditPanel: function () {\n            if (!this.model.get('active'))\n                return;\n            if (this.$('.edit-message-wrap').hasClass('non-active'))\n                return;\n            let $msg = this.content_view.$('.chat-message.selected').first(),\n                edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n            this.edit_message = edit_msg;\n            this.resetSelectedMessages();\n            this.setEditedMessageAttachments(edit_msg);\n            this.setEditedMessage(edit_msg);\n        },\n\n        deleteMessages: function (ev, messages) {\n            if (!this.model.get('active'))\n                return;\n            let $msgs = this.content_view.$('.chat-message.selected'),\n                msgs = [],\n                my_msgs = 0,\n                dialog_options = [];\n            $msgs.each((idx, item) => {\n                let msg = this.messages_arr.get(item.dataset.uniqueid);\n                msg && msgs.push(msg);\n                msg.isSenderMe() && my_msgs++;\n            });\n            messages && messages.forEach((item, idx) => {\n                msgs.push(item);\n                item.isSenderMe() && my_msgs++;\n            });\n            if (this.account.server_features.get(Strophe.NS.REWRITE) || this.model.get('group_chat')) {\n                let dfd = new $.Deferred();\n                dfd.done(() => {\n                    utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), xabber.getQuantityString(\"delete_message_question\", msgs.length),\n                        dialog_options, {ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n                        if (!res) {\n                            this._clearing_history = false;\n                            messages && messages.length && this.focusOnInput();\n                            return;\n                        }\n                        let symmetric = (this.model.get('group_chat')) ? true : (res.symmetric_deletion ? true : false);\n                        this.resetSelectedMessages();\n                        if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                            this.deleteFilesFromMessages(msgs);\n                        this.model.retractMessages(msgs, this.model.get('group_chat'), symmetric);\n                        messages && messages.length && this.unsetForwardedMessages();\n                    });\n                });\n                if (!this.model.get('group_chat') && !this.model.get('saved') && my_msgs == $msgs.length && this.contact && this.contact.domain){\n                    if (this.contact.get('server_has_rewrite')){\n                        dialog_options = [{\n                            name: 'symmetric_deletion',\n                            checked: false,\n                            text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                        }];\n                        dfd.resolve();\n                    } else {\n                        this.account.connection.disco.info(this.contact.domain, null, (iq) => {\n                            let $rewrite = $(iq).find('feature[var=\"' + Strophe.NS.REWRITE + '\"]');\n                            if ($rewrite.length) {\n                                dialog_options = [{\n                                    name: 'symmetric_deletion',\n                                    checked: false,\n                                    text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                                }];\n                                this.contact.set('server_has_rewrite', true);\n                                dfd.resolve();\n                            } else {\n                                dfd.resolve();\n                            }\n                        });\n                    }\n                } else\n                    dfd.resolve();\n            }\n            else {\n                utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), `${xabber.getQuantityString(\"delete_message_question\", msgs.length)}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`,\n                    dialog_options, {ok_button_text: xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((res) => {\n                    if (!res) {\n                        this._clearing_history = false;\n                        messages && messages.length && this.focusOnInput();\n                        return;\n                    }\n                    this.resetSelectedMessages();\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                        this.deleteFilesFromMessages(msgs);\n                    msgs.forEach((item) => { this.view.removeMessage(item); })\n                    messages && messages.length && this.unsetForwardedMessages();\n                });\n            }\n        },\n\n        deleteFilesFromMessages: function (messages) {\n            messages.forEach((item) => {\n                if (!item.isSenderMe())\n                    return;\n                item.get('files') && _.isArray(item.get('files')) && item.get('files').forEach((item) => {\n                    item && item.id && this.account.deleteFile(item.id,(response) => {\n                        item.id = null;\n                    }, (err) => {\n                        item.id = null;\n                    });\n                });\n                item.get('images') && _.isArray(item.get('images')) && item.get('images').forEach((item) => {\n                    item && item.id && this.account.deleteFile(item.id,(response) => {\n                        item.id = null;\n                    }, (err) => {\n                        item.id = null;\n                    });\n                });\n                item.get('videos') && _.isArray(item.get('videos')) && item.get('videos').forEach((item) => {\n                    item && item.id && this.account.deleteFile(item.id,(response) => {\n                        item.id = null;\n                    }, (err) => {\n                        item.id = null;\n                    });\n                });\n            });\n        },\n\n        pushMessagesToClipboard: function (messages) {\n            let fwd_msg_indicator = \"\",\n                copied_messages = this.createTextMessage(messages, fwd_msg_indicator);\n            utils.copyTextToClipboard(_.unescape(copied_messages));\n        },\n\n        createTextMessage: function (messages, fwd_msg_indicator) {\n            let text_message = \"\";\n            for (let i = 0; i < messages.length; i++) {\n                let $msg = messages[i];\n                if (this.model.get('saved') && $msg.get('forwarded_message') && $msg.get('forwarded_message').length === 1 && !$msg.get('message'))\n                    $msg = $msg.get('forwarded_message')[0];\n                let current_date = moment($msg.get('timestamp')).startOf('day'),\n                    prev_date = (i) ? moment(messages[i - 1].get('timestamp')).startOf('day') : moment(0),\n                    msg_sender = \"\";\n                    if (prev_date.format('x') != current_date.format('x')) {\n                        text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + pretty_date(current_date) + '\\n';\n                    }\n                    msg_sender = $msg.isSenderMe() ? this.account.get('name') : ($msg.get('user_info') && $msg.get('user_info').nickname || (this.account.contacts.get($msg.get('from_jid')) ? this.account.contacts.get($msg.get('from_jid')).get('name') : $msg.get('from_jid')));\n                    text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + \"[\" + utils.pretty_time($msg.get('timestamp')) + \"] \" + msg_sender + \":\\n\";\n                    fwd_msg_indicator.length && (text_message += fwd_msg_indicator);\n                    let original_message = _.unescape(($msg.get('mutable_content') && $msg.get('mutable_content').find(ref => ref.type === 'groupchat')) ? $msg.get('original_message').slice($msg.get('mutable_content').find(ref => ref.type === 'groupchat').end) : $msg.get('original_message'));\n                    fwd_msg_indicator.length && (original_message = original_message.replace(/\\n/g, '\\n&gt; '));\n                    (fwd_msg_indicator.length && original_message.indexOf('&gt;') !== 0) && (text_message += ' ');\n                    (original_message = _.unescape(original_message.replace(/\\n&gt; &gt;/g, '\\n&gt;&gt;')));\n                    text_message += _.escape(original_message) + '\\n';\n            }\n            return text_message.trim();\n        },\n\n        replyMessages: function () {\n            if (!this.model.get('active'))\n                return;\n            let $msgs = this.content_view.$('.chat-message.selected'),\n                msgs = [];\n            $msgs.each((idx, item) => {\n                let msg = this.messages_arr.get(item.dataset.uniqueid);\n                if (msg) {\n                    if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                        msgs = msgs.concat(msg.get('forwarded_message'));\n                    } else\n                        msgs.push(msg);\n                }\n            });\n            this.resetSelectedMessages();\n            this.setForwardedMessages(msgs);\n        },\n\n        forwardMessages: function () {\n            if (!this.model.get('active'))\n                return;\n            let $msgs = this.content_view.$('.chat-message.selected'),\n                msgs = [];\n            $msgs.each((idx, item) => {\n                let msg = this.messages_arr.get(item.dataset.uniqueid);\n                if (msg) {\n                    if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                        msgs = msgs.concat(msg.get('forwarded_message'));\n                    } else\n                        msgs.push(msg);\n                }\n            });\n            this.resetSelectedMessages();\n            if (!xabber.forward_panel)\n                xabber.forward_panel = new xabber.ForwardPanelView({ model: xabber.opened_chats });\n            xabber.forward_panel.open(msgs, this.account);\n        },\n\n        showChatNotification: function (message, is_colored) {\n            if (!this.view.$('.chat-notification').hasClass('msgs-counter') && !this.view.$('.chat-notification').hasClass('encryption-warning')) {\n                this.view.$('.chat-notification').switchClass('hidden', !message).text(message)\n                    .switchClass('text-color-300', is_colored);\n            }\n        }\n    });\n\n    xabber.ChatHeadContainer = xabber.Container.extend({\n        className: 'chat-head-container panel-head noselect'\n    });\n\n    xabber.ChatBodyContainer = xabber.Container.extend({\n        className: 'chat-body-container',\n\n        // TODO: refactor CSS and remove this\n        updateHeight: function () {\n            let bottom_height = xabber.chat_bottom.$el.height() + parseInt(xabber.chat_bottom.$el.css('bottom'));\n            if (bottom_height) {\n                let current_bottom = parseInt(this.$el.css('bottom'));\n                this.$el.css({bottom: bottom_height});\n                if (this.view) {\n                    this.view.updateScrollBar();\n                    (bottom_height != current_bottom) && !this.view.isScrolledToBottom() && this.view.scrollTo(this.view.ps_container[0].scrollTop + (bottom_height - current_bottom));\n                }\n            }\n        }\n    });\n\n    xabber.NotificationsPlaceholder = xabber.BasicView.extend({\n        className: 'notifications-placeholder',\n        events: {\n            \"click .btn-request-notifications\": \"requestNotifications\",\n            \"click .mdi-close\": \"close\"\n        },\n\n        _initialize: function (options) {\n            this.$el.html(`${xabber.getString(\"desktop_notifications__alert_enable__text\", [constants.CLIENT_NAME])} <span class=\"btn-request-notifications\">${xabber.getString(\"desktop_notifications__alert_enable__link_text\")}</span><button class=\"btn-request-notifications btn-flat btn-dark btn-main\">${xabber.getString(\"chat_allow\")}</button>`);\n            this.$el.append($('<i/>').addClass('mdi mdi-22px mdi-close'));\n            xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        },\n\n        requestNotifications: function () {\n            window.Notification.requestPermission((permission) => {\n                xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n                this.close();\n            });\n        },\n\n        onUpdatedScreen: function () {\n            if (!xabber.notifications_placeholder)\n                return;\n            this.$el.detach();\n            xabber.placeholders_wrap.$el.append(this.$el);\n            xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n        },\n\n        close: function () {\n            xabber._cache.save('ignore_notifications_warning', true);\n            this.remove();\n            xabber.notifications_placeholder = undefined;\n            xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n        }\n    });\n\n    xabber.ChatBottomContainer = xabber.Container.extend({\n        className: 'chat-bottom-container'\n    });\n\n    xabber.ChatPlaceholderView = xabber.BasicView.extend({\n        className: 'placeholder-wrap chat-placeholder-wrap noselect',\n        template: templates.chat_placeholder\n    });\n\n    xabber.ChatSettings = Backbone.ModelWithStorage.extend({\n        defaults: {\n            last_emoji: [],\n            muted: [],\n            archived: [],\n            group_chat: [],\n            cached_avatars: [],\n            group_chat_members_lists: []\n        },\n\n        getLastEmoji: function () {\n            return _.clone(this.get('last_emoji'));\n        },\n\n        updateLastEmoji: function (emoji) {\n            let last_emoji_icons = _.clone(this.get('last_emoji'));\n            if (last_emoji_icons.length > 0) {\n                let index = last_emoji_icons.indexOf(emoji);\n                if (index != -1)\n                    last_emoji_icons.splice(index, 1);\n                last_emoji_icons.push(emoji);\n                while (last_emoji_icons.length > 7)\n                    last_emoji_icons.shift();\n            }\n            else\n                last_emoji_icons.push(emoji);\n            this.save('last_emoji', last_emoji_icons);\n        },\n\n        updateMutedList: function (jid, muted) {\n            let muted_list = _.clone(this.get('muted')),\n                index = muted_list.indexOf(jid);\n            if (muted && index < 0) {\n                muted_list.push(jid);\n            }\n            if (!muted && index >= 0) {\n                muted_list.splice(index, 1);\n            }\n            this.save('muted', muted_list);\n        },\n\n        updateArchiveChatsList: function (jid, archived) {\n            let archived_list = _.clone(this.get('archived')),\n                index = archived_list.indexOf(jid);\n            if (archived && index < 0) {\n                archived_list.push(jid);\n            }\n            if (!archived && index >= 0) {\n                archived_list.splice(index, 1);\n            }\n            this.save('archived', archived_list);\n        },\n\n        updateGroupChatsList: function (jid, group_chat) {\n            let group_chat_list = _.clone(this.get('group_chat')),\n                index = group_chat_list.indexOf(jid);\n            if (group_chat && index < 0) {\n                group_chat_list.push(jid);\n            }\n            if (!group_chat && index >= 0) {\n                group_chat_list.splice(index, 1);\n            }\n            this.save('group_chat', group_chat_list);\n        },\n\n        updateCachedAvatars: function (id, hash, avatar) {\n            let avatar_list = _.clone(this.get('cached_avatars')),\n                member = avatar_list.indexOf(avatar_list.find(member => member.id === id));\n            if (member != -1) {\n                avatar_list.splice(member, 1);\n            }\n            avatar_list.push({id: id, avatar_hash: hash, avatar_b64: avatar});\n            this.save('cached_avatars', avatar_list);\n        },\n\n        getAvatarInfoById: function (id) {\n            let avatar_list = _.clone(this.get('cached_avatars')),\n                result = avatar_list.find(member => member.id === id);\n            return result;\n        },\n\n        getB64Avatar: function (id) {\n            let result = this.getAvatarInfoById(id);\n            if (result)\n                return result.avatar_b64;\n            else\n                return;\n        },\n\n        getHashAvatar: function (id) {\n            let result = this.getAvatarInfoById(id);\n            if (result)\n                return result.avatar_hash;\n        }\n    });\n\n    xabber.CachedChats = Backbone.ModelWithDataBase.extend({\n        putChat: function (value, callback) {\n            this.database.put('chats_items', value, function (response_value) {\n                callback && callback(response_value);\n            });\n        },\n\n        getChat: function (value, callback) {\n            this.database.get('chats_items', value, function (response_value) {\n                callback && callback(response_value);\n            });\n        },\n\n        getAllChats: function (callback) {\n            this.database.get_all('chats_items', null, function (response_value) {\n                callback && callback(response_value || []);\n            });\n        },\n\n        removeChat: function (value, callback) {\n            this.database.remove('chats_items', value, function (response_value) {\n                callback && callback(response_value);\n            });\n        },\n\n        clearDataBase: function () {\n            this.database.clear_database('roster_items');\n        }\n    });\n\n    xabber.Account.addInitPlugin(function () {\n        this.chat_settings = new xabber.ChatSettings({id: 'chat-settings'}, {\n            account: this,\n            storage_name: xabber.getStorageName() + this.get('jid'),\n            fetch: 'after'\n        });\n        this.messages = new xabber.Messages(null, {account: this});\n        this.forwarded_messages = new xabber.Messages(null, {account: this});\n        this.pinned_messages = new xabber.Messages(null, {account: this});\n\n        this.chats = new xabber.AccountChats(null, {account: this});\n    });\n\n    xabber.Account.addConnPlugin(function () {\n        this.cached_chats = new xabber.CachedChats(null, {\n            name:'cached-chats-list-' + this.get('jid'),\n            objStoreName: 'chats_items',\n            primKey: 'jid'\n        });\n\n        this.cached_chats.on(\"database_opened\", () => {\n            /*this.cached_chats.getAllChats((chats) => {\n                chats.forEach((chat) => {\n                    let is_encrypted = chat.jid.indexOf(':encrypted') == chat.jid.length - ':encrypted'.length,\n                        jid = is_encrypted ? (chat.jid.slice(0, chat.jid.length - ':encrypted'.length)) : chat.jid,\n                        contact = this.contacts.mergeContact(jid);\n                    if (this.chats.get(contact.hash_id))\n                        return;\n                    let created_chat = this.chats.getChat(contact, is_encrypted && 'encrypted'),\n                        last_message = chat.last_message;\n                    if (typeof(last_message) !== 'string')\n                        return;\n                    created_chat.set({'cached_timestamp': chat.timestamp, 'timestamp': chat.timestamp, last_displayed_id: chat.last_displayed_id, last_delivered_id: chat.last_delivered_id});\n                    if (last_message) {\n                        this.chats.receiveMessage(Strophe.xmlHtmlNode(last_message).documentElement);\n                    } else {\n                        created_chat.item_view.updateEmptyChat();\n                    }\n                });\n            });*/\n        });\n\n        let timestamp = this.last_msg_timestamp || this.disconnected_timestamp;\n        this.chats.registerMessageHandler();\n        this.chats.each((chat) => {\n            if (!this.connection.do_synchronization) {\n                if (chat.messages.length)\n                    chat.trigger('get_missed_history', timestamp);\n                else\n                    chat.trigger('load_last_history');\n            }\n        });\n        if (!(this.auth_view && this.auth_view.data.get('authentication')))\n            this.sendPresence();\n\n        this.connection.deleteTimedHandler(this._get_msg_handler);\n        this._get_msg_handler = this.connection.addTimedHandler(60000, () => {\n            if (this.connection && !this.connection.handlers.find(h => !h.ns && !h.options.encrypted && h.name === 'message')) {\n                let last_msg_timestamp = this.last_msg_timestamp;\n                this.chats.registerMessageHandler();\n                this.roster && this.roster.syncFromServer({stamp: last_msg_timestamp * 1000}, false, true);\n            }\n            return true;\n        });\n        if (_.isUndefined(this.settings.get('omemo')) && !this.omemo_enable_placeholder) {\n            this.omemo_enable_placeholder = new xabber.OMEMOEnablePlaceholder({account: this});\n        }\n    }, true, true);\n\n    xabber.Account.addFastConnPlugin(function () {\n        this.getVCard();\n        if (!(this.auth_view && this.auth_view.data.get('authentication')))\n            this.trigger('ready_to_get_roster');\n    }, true, true);\n\n    xabber.once(\"start\", function () {\n        [\"keydown\"].forEach((event) => {\n            window.addEventListener(event, (e) => {\n                document.onselectstart = function() {\n                    return !((e.ctrlKey || e.metaKey) && e.keyCode == constants.KEY_SHIFT || e.shiftKey && e.keyCode == constants.KEY_CTRL || e.keyCode == constants.KEY_SHIFT);\n                }\n            });\n        });\n        [\"keyup\"].forEach((event) => {\n            window.addEventListener(event, (e) => {\n                document.onselectstart = function() {\n                    return true;\n                }\n            });\n        });\n        this.chats = new this.Chats;\n        this.chats.addCollection(this.opened_chats = new this.OpenedChats);\n        this.chats.addCollection(this.closed_chats = new this.ClosedChats);\n        this.chats.registerQuillEmbeddedsTags();\n\n        this.chats_view = this.left_panel.addChild('chats',\n                this.ChatsView, {model: this.opened_chats});\n        this.chat_head = this.right_panel.addChild('chat_head',\n                this.ChatHeadContainer);\n        this.chat_body = this.right_panel.addChild('chat_body',\n                this.ChatBodyContainer);\n        this.chat_bottom = this.right_panel.addChild('chat_bottom',\n                this.ChatBottomContainer);\n        this.chat_placeholder = this.right_panel.addChild('chat_placeholder',\n                this.ChatPlaceholderView);\n\n        this.on(\"add_group_chat\", function (attrs) {\n            if (!this.add_group_chat_view)\n                this.add_group_chat_view = new this.AddGroupChatView();\n            this.add_group_chat_view.show(attrs);\n        }, this);\n\n        this.on(\"change:focused\", function () {\n            if (this.get('focused')) {\n                let view = this.chats_view.active_chat;\n                if (view && view.model.get('display')) {\n                    view.content.readMessages();\n                    if (view.model.get('is_accepted') !== false)\n                        view.content.bottom.focusOnInput();\n                }\n            }\n        }, this);\n\n        this.on(\"show_group_chats\", function () {\n            this.chats_view.showGroupChats();\n        }, this);\n\n        this.on(\"show_chats\", function () {\n            this.chats_view.showChats();\n        }, this);\n\n        this.on(\"show_all_chats\", function () {\n            this.chats_view.showAllChats();\n        }, this);\n\n        this.on(\"show_account_chats\", function (ev, account) {\n            this.chats_view.showChatsByAccount(account);\n        }, this);\n\n        this.on(\"show_archive_chats\", function () {\n            this.chats_view.showArchiveChats();\n        }, this);\n\n        this.on(\"clear_search\", function () {\n            this.contacts_view.clearSearch();\n            this.chats_view.clearSearch();\n        }, this);\n    }, xabber);\n\n    return xabber;\n  };\n});\n","var constants = {\n\n    STORAGE_NAME: 'xabber-storage',\n    STORAGE_VERSION: 'v8',\n\n    FAVICON_DEFAULT: \"images/favicon.png\",\n    FAVICON_MESSAGE: \"images/favicon-message.png\",\n    BACKGROUND_IMAGE: \"images/background.png\",\n\n    WIDTH_MEDIUM: 1650,\n    WIDTH_NARROW: 1280,\n    WIDTH_TINY: 1152,\n\n    LOG_LEVEL_NONE: -1,\n    LOG_LEVEL_ERROR: 1,\n    LOG_LEVEL_WARN: 2,\n    LOG_LEVEL_INFO: 3,\n    LOG_LEVEL_DEBUG: 4,\n\n    LOG_LEVEL: 'ERROR',\n\n    KEY_BACKSPACE: 8,\n    KEY_TAB: 9,\n    KEY_ENTER: 13,\n    KEY_SHIFT: 16,\n    KEY_CTRL: 17,\n    KEY_ESCAPE: 27,\n    KEY_SPACE: 32,\n    KEY_ARROW_LEFT: 37,\n    KEY_ARROW_UP: 38,\n    KEY_ARROW_RIGHT: 39,\n    KEY_ARROW_DOWN: 40,\n    KEY_DELETE: 46,\n    KEY_FORWARD_SLASH: 47,\n    KEY_AT: 50,\n\n    VOICE_MSG_TIME: 120,\n\n    PASSWORD_DOT: String.fromCharCode(0x2022),\n\n    CONNECTION_URL: null,\n\n    CONN_STATUSES: {\n        0: 'ERROR',\n        1: 'CONNECTING',\n        2: 'CONNFAIL',\n        3: 'AUTHENTICATING',\n        4: 'AUTHFAIL',\n        5: 'CONNECTED',\n        6: 'DISCONNECTED',\n        7: 'DISCONNECTING',\n        8: 'ATTACHED',\n        9: 'REDIRECT',\n        10: 'CONNTIMEOUT'\n    },\n\n    PREKEYS_COUNT: 100,\n    MIN_PREKEYS_COUNT: 80,\n\n    AES_KEY_LENGTH: 128,\n    AES_TAG_LENGTH: 128,\n    AES_EXTRACTABLE: true,\n\n    BAD_CONN_STATUSES: [0, 2, 4, 6, 10],\n\n    RECONNECTION_TIMEOUTS: [5000, 10000, 15000],\n\n    STATUS_WEIGHTS: {\n        chat: 1,\n        online: 2,\n        away: 3,\n        xa: 4,\n        dnd: 5,\n        offline: 6,\n        unavailable: 7\n    },\n\n    PRESENT_INTERVAL: 30000,\n    CHATSTATE_INTERVAL_COMPOSING_AUDIO: 5000,\n    CHATSTATE_TIMEOUT_PAUSED: 15000,\n    CHATSTATE_TIMEOUT_STOPPED: 5000,\n    CHATSTATE_TIMEOUT_PAUSED_AUDIO: 10000,\n\n    JINGLE_WAITING_TIME: 60,\n\n    SYNCHRONIZATION_RSM_MAX: 25,\n\n    REGISTRATION_DOMAINS: [],\n    LOGIN_DOMAINS: [],\n    TRUSTED_DOMAINS: [],\n    RECOMMENDED_DOMAIN: '',\n    REGISTRATION_BUTTON: true,\n    REGISTRATION_CUSTOM_DOMAIN: true,\n    LOGIN_CUSTOM_DOMAIN: true,\n\n    TURN_SERVERS_LIST: [\n        {\n            url: 'turn:numb.viagenie.ca',\n            credential: 'muazkh',\n            username: 'webrtc@live.com'\n        },\n        {\n            urls: \"turn:turn.editcompany.org:5439\",\n            username: \"test\",\n            credential: \"1111\"\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=udp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=tcp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        }\n    ],\n\n    JINGLE_MSG_PROPOSE: 0,\n    JINGLE_MSG_REJECT: 1,\n    JINGLE_MSG_ACCEPT: 2,\n\n    MSG_BLOCKED: -2,\n    MSG_ERROR: -1,\n    MSG_PENDING: 0,\n    MSG_SENT: 1,\n    MSG_DELIVERED: 2,\n    MSG_DISPLAYED: 3,\n    MSG_ARCHIVED: 4,\n    MSG_SAVED: 5,\n\n    RSM_ATTRIBUTES: ['max', 'first', 'last', 'after', 'before', 'index', 'count'],\n    MAM_ATTRIBUTES: ['with', 'start', 'end'],\n\n    GENERAL_GROUP_ID: 1,\n    NON_ROSTER_GROUP_ID: 2,\n\n    MATERIAL_COLORS: [\n        \"red\", \"green\", \"blue\", \"deep-purple\", \"orange\", \"lime\",\n        \"pink\", \"purple\", \"indigo\", \"light-blue\", \"cyan\", \"teal\",\n        \"light-green\", \"amber\", \"deep-orange\", \"brown\", \"blue-grey\"\n    ],\n\n    MAX_AVATAR_FILE_SIZE: 64000,\n\n    AVATAR_PRIORITIES: {\n        VCARD_AVATAR: 0,\n        PUBSUB_AVATAR: 1\n    },\n\n    EMAIL_FOR_JOIN_TRANSLATION: \"info@xabber.com\",\n\n    AVATAR_SIZES: {\n        TOOLBAR_ACCOUNT_ITEM: 32,\n        SETTINGS_ACCOUNT_ITEM: 32,\n        XABBER_ACCOUNT: 32,\n        SYNCHRONIZE_ACCOUNT_ITEM: 36,\n        MENTION_ITEM: 36,\n        ACCOUNT_SETTINGS_LEFT: 96,\n        ACCOUNT_VCARD_EDIT: 80,\n        ROSTER_RIGHT_ACCOUNT_ITEM: 38,\n        ROSTER_LEFT_ACCOUNT_ITEM: 40,\n        PARTICIPANT_DETAILS_ITEM: 48,\n        CONTACT_RIGHT_ITEM: 32,\n        GROUPCHAT_MEMBER_ITEM: 32,\n        CONTACT_LEFT_ITEM: 32,\n        CONTACT_BLOCKED_ITEM: 32,\n        CONTACT_DETAILS: 192,\n        GROUP_SETTINGS: 96,\n        CHAT_ITEM: 40,\n        CHAT_HEAD: 40,\n        CHAT_MESSAGE: 32,\n        CHAT_BOTTOM: 48,\n        XABBER_VOICE_CALL_VIEW: 128,\n        OMEMO_ENABLE_SETTING: 182\n    },\n\n    SOUNDS: {\n        beep_up: 'sounds/beep_up.ogg',\n        tiny_noize: 'sounds/tiny_noize.ogg',\n        retro_game: 'sounds/retro_game.ogg',\n        pixel_beep: 'sounds/pixel_beep.ogg',\n        beep_positive: 'sounds/beep_positive.ogg',\n        good_chime: 'sounds/good_chime.ogg',\n        cellular_click: 'sounds/cellular_click.ogg',\n        bleep: 'sounds/bleep.ogg',\n        mono_u: 'sounds/mono_u.ogg',\n        plop: 'sounds/plop.ogg',\n        ether: 'sounds/ether.ogg',\n        pop: 'sounds/pop.ogg',\n        computer_chime: 'sounds/computer_chime.ogg',\n        beep_a: 'sounds/beep_a.ogg',\n        call: 'sounds/marching-band-dave-girtsman.mp3',\n        connecting: 'sounds/alien-bomb-timer.wav',\n        busy: 'sounds/phone_busy.wav',\n        attention: 'sounds/attention.wav'\n    },\n\n    SYNC_WAY_DATA: {\n        no: {\n            tip: 'xabber_account__sync__settings_already_synced',\n            icon: 'mdi-cloud-check'\n        },\n        from_server: {\n            tip: 'xabber_account__sync__settings_will_be_downloaded',\n            icon: 'mdi-cloud-download'\n        },\n        to_server: {\n            tip: 'xabber_account__sync__settings_will_be_uploaded',\n            icon: 'mdi-cloud-upload'\n        },\n        delete: {\n            tip: 'xabber_account__sync__acc_will_be_deleted',\n            icon: 'mdi-delete'\n        },\n        off_local: {\n            tip: 'xabber_account__sync__local_acc',\n            icon: 'mdi-cloud-outline-off'\n        },\n        off_remote: {\n            tip: 'xabber_account__sync__remote_acc',\n            icon: 'mdi-cloud-outline-off'\n        }\n    },\n\n    SYNCED_STATUS_DATA: {\n        off: {\n            tip: 'xabber_account__sync_status__disabled',\n            icon: 'mdi-cloud-outline-off'\n        },\n        yes: {\n            tip: 'xabber_account__sync_status__synced',\n            icon: 'mdi-cloud-check'\n        },\n        no: {\n            tip: 'xabber_account__sync_status__not_synced',\n            icon: 'mdi-cloud'\n        }\n    },\n\n    EMOJI_LIST_NAME: function (emoji_list) {\n        return {\n            \"smiles_and_people\": 'emoji_list__catelory_name__smiles_and_people',\n            \"body_and_clothes\": 'emoji_list__catelory_name__body_and_clothes',\n            \"animals_and_nature\": 'emoji_list__catelory_name__animals_and_nature',\n            \"food_and_drinks\": 'emoji_list__catelory_name__food_and_drinks',\n            \"travel_and_places\": 'emoji_list__catelory_name__travel_and_places',\n            \"events\": 'emoji_list__catelory_name__events',\n            \"objects\": 'emoji_list__catelory_name__objects',\n            \"signs\": 'emoji_list__catelory_name__signs'\n        }[emoji_list]\n    },\n\n    QUOTE_MARKER: '&gt;',\n    MARKUP_TAGS: ['bold', 'underline', 'italic', 'strike', 'link', 'quote'],\n\n    BLANK_VIDEO: {\n        OGG: 'data:video/ogg;base64, ',\n        MP4: 'data:video/mp4;base64, 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',\n        WEBM: 'data:video/webm;base64, GkXfowEAAAAAAAAfQoaBAUL3gQFC8oEEQvOBCEKChHdlYm1Ch4EEQoWBAhhTgGcBAAAAAAAVkhFNm3RALE27i1OrhBVJqWZTrIHfTbuMU6uEFlSua1OsggEwTbuMU6uEHFO7a1OsghV17AEAAAAAAACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVSalmAQAAAAAAAEUq17GDD0JATYCNTGF2ZjU1LjMzLjEwMFdBjUxhdmY1NS4zMy4xMDBzpJBlrrXf3DCDVB8KcgbMpcr+RImIQJBgAAAAAAAWVK5rAQAAAAAAD++uAQAAAAAAADLXgQFzxYEBnIEAIrWcg3VuZIaFVl9WUDiDgQEj44OEAmJaAOABAAAAAAAABrCBsLqBkK4BAAAAAAAPq9eBAnPFgQKcgQAitZyDdW5khohBX1ZPUkJJU4OBAuEBAAAAAAAAEZ+BArWIQOdwAAAAAABiZIEgY6JPbwIeVgF2b3JiaXMAAAAAAoC7AAAAAAAAgLUBAAAAAAC4AQN2b3JiaXMtAAAAWGlwaC5PcmcgbGliVm9yYmlzIEkgMjAxMDExMDEgKFNjaGF1ZmVudWdnZXQpAQAAABUAAABlbmNvZGVyPUxhdmM1NS41Mi4xMDIBBXZvcmJpcyVCQ1YBAEAAACRzGCpGpXMWhBAaQlAZ4xxCzmvsGUJMEYIcMkxbyyVzkCGkoEKIWyiB0JBVAABAAACHQXgUhIpBCCGEJT1YkoMnPQghhIg5eBSEaUEIIYQQQgghhBBCCCGERTlokoMnQQgdhOMwOAyD5Tj4HIRFOVgQgydB6CCED0K4moOsOQghhCQ1SFCDBjnoHITCLCiKgsQwuBaEBDUojILkMMjUgwtCiJqDSTX4GoRnQXgWhGlBCCGEJEFIkIMGQcgYhEZBWJKDBjm4FITLQagahCo5CB+EIDRkFQCQAACgoiiKoigKEBqyCgDIAAAQQFEUx3EcyZEcybEcCwgNWQUAAAEACAAAoEiKpEiO5EiSJFmSJVmSJVmS5omqLMuyLMuyLMsyEBqyCgBIAABQUQxFcRQHCA1ZBQBkAAAIoDiKpViKpWiK54iOCISGrAIAgAAABAAAEDRDUzxHlETPVFXXtm3btm3btm3btm3btm1blmUZCA1ZBQBAAAAQ0mlmqQaIMAMZBkJDVgEACAAAgBGKMMSA0JBVAABAAACAGEoOogmtOd+c46BZDppKsTkdnEi1eZKbirk555xzzsnmnDHOOeecopxZDJoJrTnnnMSgWQqaCa0555wnsXnQmiqtOeeccc7pYJwRxjnnnCateZCajbU555wFrWmOmkuxOeecSLl5UptLtTnnnHPOOeecc84555zqxekcnBPOOeecqL25lpvQxTnnnE/G6d6cEM4555xzzjnnnHPOOeecIDRkFQAABABAEIaNYdwpCNLnaCBGEWIaMulB9+gwCRqDnELq0ehopJQ6CCWVcVJKJwgNWQUAAAIAQAghhRRSSCGFFFJIIYUUYoghhhhyyimnoIJKKqmooowyyyyzzDLLLLPMOuyssw47DDHEEEMrrcRSU2011lhr7jnnmoO0VlprrbVSSimllFIKQkNWAQAgAAAEQgYZZJBRSCGFFGKIKaeccgoqqIDQkFUAACAAgAAAAABP8hzRER3RER3RER3RER3R8RzPESVREiVREi3TMjXTU0VVdWXXlnVZt31b2IVd933d933d+HVhWJZlWZZlWZZlWZZlWZZlWZYgNGQVAAACAAAghBBCSCGFFFJIKcYYc8w56CSUEAgNWQUAAAIACAAAAHAUR3EcyZEcSbIkS9IkzdIsT/M0TxM9URRF0zRV0RVdUTdtUTZl0zVdUzZdVVZtV5ZtW7Z125dl2/d93/d93/d93/d93/d9XQdCQ1YBABIAADqSIymSIimS4ziOJElAaMgqAEAGAEAAAIriKI7jOJIkSZIlaZJneZaomZrpmZ4qqkBoyCoAABAAQAAAAAAAAIqmeIqpeIqoeI7oiJJomZaoqZoryqbsuq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq4LhIasAgAkAAB0JEdyJEdSJEVSJEdygNCQVQCADACAAAAcwzEkRXIsy9I0T/M0TxM90RM901NFV3SB0JBVAAAgAIAAAAAAAAAMybAUy9EcTRIl1VItVVMt1VJF1VNVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVN0zRNEwgNWQkAkAEAkBBTLS3GmgmLJGLSaqugYwxS7KWxSCpntbfKMYUYtV4ah5RREHupJGOKQcwtpNApJq3WVEKFFKSYYyoVUg5SIDRkhQAQmgHgcBxAsixAsiwAAAAAAAAAkDQN0DwPsDQPAAAAAAAAACRNAyxPAzTPAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABA0jRA8zxA8zwAAAAAAAAA0DwP8DwR8EQRAAAAAAAAACzPAzTRAzxRBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABA0jRA8zxA8zwAAAAAAAAAsDwP8EQR0DwRAAAAAAAAACzPAzxRBDzRAwgIRQasiIAiBMAcEgSJAmSBM0DSJYFTYOmwTQBkmVB06BpME0AAAAAAAAAAAAAJE2DpkHTIIoASdOgadA0iCIAAAAAAAAAAAAAkqZB06BpEEWApGnQNGgaRBEAAAAAAAAAAAAAzzQhihBFmCbAM02IIkQRpgkAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAGHAAAAgwoQwUGrIiAIgTAHA4imUBAIDjOJYFAACO41gWAABYliWKAABgWZooAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAYcAAACDChDBQashIAiAIAcCiKZQHHsSzgOJYFJMmyAJYF0DyApgFEEQAIAAAocAAACLBBU2JxgEJDVgIAUQAABsWxLE0TRZKkaZoniiRJ0zxPFGma53meacLzPM80IYqiaJoQRVE0TZimaaoqME1VFQAAUOAAABBgg6bE4gCFhqwEAEICAByKYlma5nmeJ4qmqZokSdM8TxRF0TRNU1VJkqZ5niiKommapqqyLE3zPFEURdNUVVWFpnmeKIqiaaqq6sLzPE8URdE0VdV14XmeJ4qiaJqq6roQRVE0TdNUTVV1XSCKpmmaqqqqrgtETxRNU1Vd13WB54miaaqqq7ouEE3TVFVVdV1ZBpimaaqq68oyQFVV1XVdV5YBqqqqruu6sgxQVdd1XVmWZQCu67qyLMsCAAAOHAAAAoygk4wqi7DRhAsPQKEhKwKAKAAAwBimFFPKMCYhpBAaxiSEFEImJaXSUqogpFJSKRWEVEoqJaOUUmopVRBSKamUCkIqJZVSAADYgQMA2IGFUGjISgAgDwCAMEYpxhhzTiKkFGPOOScRUoox55yTSjHmnHPOSSkZc8w556SUzjnnnHNSSuacc845KaVzzjnnnJRSSuecc05KKSWEzkEnpZTSOeecEwAAVOAAABBgo8jmBCNBhYasBABSAQAMjmNZmuZ5omialiRpmud5niiapiZJmuZ5nieKqsnzPE8URdE0VZXneZ4oiqJpqirXFUXTNE1VVV2yLIqmaZqq6rowTdNUVdd1XZimaaqq67oubFtVVdV1ZRm2raqq6rqyDFzXdWXZloEsu67s2rIAAPAEBwCgAhtWRzgpGgssNGQlAJABAEAYg5BCCCFlEEIKIYSUUggJAAAYcAAACDChDBQashIASAUAAIyx1lprrbXWQGettdZaa62AzFprrbXWWmuttdZaa6211lJrrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmstpZRSSimllFJKKaWUUkoppZRSSgUA+lU4APg/2LA6wknRWGChISsBgHAAAMAYpRhzDEIppVQIMeacdFRai7FCiDHnJKTUWmzFc85BKCGV1mIsnnMOQikpxVZjUSmEUlJKLbZYi0qho5JSSq3VWIwxqaTWWoutxmKMSSm01FqLMRYjbE2ptdhqq7EYY2sqLbQYY4zFCF9kbC2m2moNxggjWywt1VprMMYY3VuLpbaaizE++NpSLDHWXAAAd4MDAESCjTOsJJ0VjgYXGrISAAgJACAQUooxxhhzzjnnpFKMOeaccw5CCKFUijHGnHMOQgghlIwx5pxzEEIIIYRSSsaccxBCCCGEkFLqnHMQQgghhBBKKZ1zDkIIIYQQQimlgxBCCCGEEEoopaQUQgghhBBCCKmklEIIIYRSQighlZRSCCGEEEIpJaSUUgohhFJCCKGElFJKKYUQQgillJJSSimlEkoJJYQSUikppRRKCCGUUkpKKaVUSgmhhBJKKSWllFJKIYQQSikFAAAcOAAABBhBJxlVFmGjCRcegEJDVgIAZAAAkKKUUiktRYIipRikGEtGFXNQWoqocgxSzalSziDmJJaIMYSUk1Qy5hRCDELqHHVMKQYtlRhCxhik2HJLoXMOAAAAQQCAgJAAAAMEBTMAwOAA4XMQdAIERxsAgCBEZohEw0JweFAJEBFTAUBigkIuAFRYXKRdXECXAS7o4q4DIQQhCEEsDqCABByccMMTb3jCDU7QKSp1IAAAAAAADADwAACQXAAREdHMYWRobHB0eHyAhIiMkAgAAAAAABcAfAAAJCVAREQ0cxgZGhscHR4fICEiIyQBAIAAAgAAAAAggAAEBAQAAAAAAAIAAAAEBB9DtnUBAAAAAAAEPueBAKOFggAAgACjzoEAA4BwBwCdASqwAJAAAEcIhYWIhYSIAgIABhwJ7kPfbJyHvtk5D32ych77ZOQ99snIe+2TkPfbJyHvtk5D32ych77ZOQ99YAD+/6tQgKOFggADgAqjhYIAD4AOo4WCACSADqOZgQArADECAAEQEAAYABhYL/QACIBDmAYAAKOFggA6gA6jhYIAT4AOo5mBAFMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAGSADqOFggB6gA6jmYEAewAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAj4AOo5mBAKMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAKSADqOFggC6gA6jmYEAywAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAz4AOo4WCAOSADqOZgQDzADECAAEQEAAYABhYL/QACIBDmAYAAKOFggD6gA6jhYIBD4AOo5iBARsAEQIAARAQFGAAYWC/0AAiAQ5gGACjhYIBJIAOo4WCATqADqOZgQFDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggFPgA6jhYIBZIAOo5mBAWsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAXqADqOFggGPgA6jmYEBkwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIBpIAOo4WCAbqADqOZgQG7ADECAAEQEAAYABhYL/QACIBDmAYAAKOFggHPgA6jmYEB4wAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIB5IAOo4WCAfqADqOZgQILADECAAEQEAAYABhYL/QACIBDmAYAAKOFggIPgA6jhYICJIAOo5mBAjMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAjqADqOFggJPgA6jmYECWwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYICZIAOo4WCAnqADqOZgQKDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggKPgA6jhYICpIAOo5mBAqsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCArqADqOFggLPgA6jmIEC0wARAgABEBAUYABhYL/QACIBDmAYAKOFggLkgA6jhYIC+oAOo5mBAvsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAw+ADqOZgQMjADECAAEQEAAYABhYL/QACIBDmAYAAKOFggMkgA6jhYIDOoAOo5mBA0sAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA0+ADqOFggNkgA6jmYEDcwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIDeoAOo4WCA4+ADqOZgQObADECAAEQEAAYABhYL/QACIBDmAYAAKOFggOkgA6jhYIDuoAOo5mBA8MAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA8+ADqOFggPkgA6jhYID+oAOo4WCBA+ADhxTu2sBAAAAAAAAEbuPs4EDt4r3gQHxghEr8IEK'\n    },\n\n    MIME_TYPES: {\n        image: [\n            'image/gif',\n            'image/jpeg',\n            'image/pjpeg',\n            'image/png',\n            'image/svg+xml',\n            'image/tiff',\n            'image/vnd.microsoft.icon',\n            'image/vnd.wap.wbmp',\n            'image/webp'\n        ],\n        audio: [\n            'audio/basic',\n            'audio/L24',\n            'audio/mp4',\n            'audio/aac',\n            'audio/mpeg',\n            'audio/ogg',\n            'audio/ogg; codecs=opus',\n            'audio/ogg; codecs=opus+voice',\n            'audio/vorbis',\n            'audio/x-ms-wma',\n            'audio/x-ms-wax',\n            'audio/vnd.rn-realaudio',\n            'audio/vnd.wave',\n            'audio/webm',\n            'audio/x-wav'\n        ],\n        video: [\n            'video/mpeg',\n            'video/mp4',\n            'video/ogg',\n            'video/quicktime',\n            'video/webm',\n            'video/x-ms-wmv',\n            'video/x-flv',\n            'video/3gpp',\n            'video/3gpp2'\n        ],\n        document: [\n            'text/cmd',\n            'text/css',\n            'text/csv',\n            'text/html',\n            'text/javascript (Obsolete)',\n            'text/plain',\n            'text/php',\n            'text/xml',\n            'text/markdown',\n            'text/cache-manifestapplication/json',\n            'application/xml',\n            'application/vnd.oasis.opendocument.text',\n            'application/vnd.oasis.opendocument.graphics',\n            'application/msword'\n        ],\n        pdf: [\n            'application/pdf'\n        ],\n        table: [\n            'application/vnd.oasis.opendocument.spreadsheet',\n            'application/vnd.ms-excel'\n        ],\n        archive: [\n            'application/zip',\n            'application/gzip',\n            'application/x-rar-compressed',\n            'application/x-tar',\n            'application/x-7z-compressed'\n        ],\n        presentation: [\n            'application/vnd.ms-powerpoint',\n            'application/vnd.oasis.opendocument.presentation'\n        ]\n    },\n\n    languages: {\n        \"en\": \"English\",\n        \"\": \"Montenegrin (Latin)\", // ????????\n        \"ar-SA\": \"العربية\",\n        \"az-AZ\": \"Azərbaycanca\",\n        \"be-BY\": \"Беларуская\",\n        \"bg-BG\": \"Български\",\n        \"bs-BA\": \"Bosanski\",\n        \"ca-ES\": \"Català\",\n        \"cs-CZ\": \"Čeština\",\n        \"cy-GB\": \"Cymraeg\",\n        \"da-DK\": \"Dansk\",\n        \"de-DE\": \"Deutsch\",\n        \"el-GR\": \"Ελληνικά\",\n        \"es419\": \"Spanish Latin America\",\n        \"es-ES\": \"Español\",\n        \"et-EE\": \"Eesti\",\n        \"fa-IR\": \"فارسی\",\n        \"fi-FI\": \"Suomi\",\n        \"fil-PH\": \"Pilipino\",\n        \"fr-FR\": \"Français\",\n        \"ga-IE\": \"Gaeilge\",\n        \"he\": \"עברית\",\n        \"hi-IN\": \"हिन्दी\",\n        \"hr-HR\": \"Hrvatski\",\n        \"hu-HU\": \"Magyar\",\n        \"hy-AM\": \"Հայերեն\",\n        \"in-ID\": \"Bahasa Indonesia\",\n        \"is-IS\": \"Íslenska\",\n        \"it-IT\": \"Italiano\",\n        \"ja-JP\": \"日本語\",\n        \"ka-GE\": \"ქართული\",\n        \"kmr-TR\": \"Kurmancî (Kurdî)\",\n        \"ko-KR\": \"한국어\",\n        \"ku-TR\": \"Kurdî\",\n        \"ky-KG\": \"Кыргызча\",\n        \"la-LA\": \"Latina\",\n        \"lb-LU\": \"Luxembourgish\",\n        \"lt-LT\": \"Lietuvių\",\n        \"mk-MK\": \"Македонски\",\n        \"mn-MN\": \"Монгол\",\n        \"mr-IN\": \"मराठी\",\n        \"ms-MY\": \"Bahasa Melayu\",\n        \"nb-NO\": \"Norsk (bokmål)\",\n        \"ne-NP\": \"Nepālī\",\n        \"nl-NL\": \"Nederlands\",\n        \"no-NO\": \"Norsk (nynorsk)\",\n        \"oc-FR\": \"Occitan\",\n        \"pa-IN\": \"ਪੰਜਾਬੀ (ਗੁਰਮੁਖੀ)\",\n        \"pl-PL\": \"Polski\",\n        \"pt-BR\": \"Português, brasileiro\",\n        \"pt-PT\": \"Português\",\n        \"qya-AA\": \"quenya\",\n        \"ro-RO\": \"Română\",\n        \"ru-RU\": \"Русский\",\n        \"sco-GB\": \"Scots\",\n        \"si-LK\": \"සිංහල\",\n        \"sk-SK\": \"Slovenčina\",\n        \"sl-SI\": \"Slovenščina\",\n        \"sq-AL\": \"Shqip\",\n        \"sr-Cyrl-ME\": \"Montenegrin (Cyrillic)\",\n        \"sr-SP\": \"Српски / Srpski\",\n        \"sv-SE\": \"Svenska\",\n        \"sw-KE\": \"Kiswahili\",\n        \"ta-IN\": \"தமிழ்\",\n        \"te-IN\": \"తెలుగు\",\n        \"tg-TJ\": \"Тоҷикӣ\",\n        \"tk-TM\": \"Türkmençe\",\n        \"tlh-AA\": \"Klingon\",\n        \"tr-TR\": \"Türkçe\",\n        \"uk-UA\": \"Українська\",\n        \"uz-UZ\": \"Oʻzbekcha / Ўзбекча\",\n        \"vi-VN\": \"Tiếng Việt\",\n        \"yo-NG\": \"Yorùbá\",\n        \"zh-CN\": \"简体中文\",\n        \"zh-TW\": \"中國傳統的\",\n        \"zu-ZA\": \"isiZulu\"\n    },\n\n    languages_another_locales: {\n        \"es419\": \"es-latin\",\n        \"in-ID\": \"id\"\n    },\n\n    PERSONAL_AREA_URL: {},\n\n    XABBER_ACCOUNT_URL: 'https://www.xabber.com/account',\n    API_SERVICE_URL: 'https://api.xabber.com/api/v2',\n    USE_SOCIAL_AUTH: true,\n    REGISTER_XMPP_ACCOUNT: true,\n    REGISTER_XMPP_ACCOUNT_URL: 'https://www.xabber.com/account/auth/signup/',\n    CHECK_VERSION: true,\n    DEFAULT_LOGIN_SCREEN: 'xmpp',\n\n    GCM_SENDER_ID: '868637702480',\n    GCM_API_KEY: 'AIzaSyC1JCBB3LLf_4DG_vRWMEEe0I4X5msEU-M',\n    MESSAGE_ARCHIVE_DB_NAME: 'MessageArchive',\n    STANZA_MAX_SIZE: Math.pow(2, 16),\n\n    BLUR_VALUE: 25,\n    VIGNETTING_VALUE: 128,\n    TRANSPARENCY_VALUE: 50,\n\n    MAIN_COLOR: 'red',\n    CLIENT_NAME: 'Xabber for Web',\n    SHORT_CLIENT_NAME: 'Xabber',\n    SHORT_CLIENT_DESCRIPTION: 'World’s best XMPP experience',\n    CLIENT_LOGO: 'images/xabber-logo-96.png',\n    TOOLBAR_LOGO: 'images/xabber-logo.png',\n    ENABLE_XABBER_ACCOUNT: false,\n    SCREEN_ABOUT: true,\n    CLIENT_URL: 'https://www.xabber.com',\n    DEVELOPER_URL: 'https://redsolution.com',\n    CLIENT_GITHUB_URL: 'https://github.com/redsolution/xabber-web',\n    PROJECT_CROWDIN_URL: 'https://crowdin.com/project/xabber',\n    CLIENT_LICENSE_GITHUB_URL: 'https://github.com/redsolution/xabber-web/blob/master/LICENSE'\n};\n\nconstants.JINGLE_MSG_STATE = {};\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_REJECT] = 'reject';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_PROPOSE] = 'propose';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_ACCEPT] = 'accept';\n\nconstants.MSG_STATE = {};\nconstants.MSG_STATE[constants.MSG_ERROR] = 'error';\nconstants.MSG_STATE[constants.MSG_PENDING] = 'pending';\nconstants.MSG_STATE[constants.MSG_SENT] = 'sent';\nconstants.MSG_STATE[constants.MSG_DELIVERED] = 'delivered';\nconstants.MSG_STATE[constants.MSG_DISPLAYED] = 'displayed';\nconstants.MSG_STATE[constants.MSG_ARCHIVED] = 'archived';\nconstants.MSG_STATE[constants.MSG_BLOCKED] = 'not-allowed';\nconstants.MSG_STATE[constants.MSG_SAVED] = 'saved';\n\nconstants.MSG_VERBOSE_STATE = {};\nconstants.MSG_VERBOSE_STATE[constants.MSG_ERROR] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_PENDING] = 'message__delivering_state__pending';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SENT] = 'message__delivering_state__sent';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DELIVERED] = 'message__delivering_state__delivered';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DISPLAYED] = 'message__delivering_state__displayed';\nconstants.MSG_VERBOSE_STATE[constants.MSG_ARCHIVED] = 'message__delivering_state__archived';\nconstants.MSG_VERBOSE_STATE[constants.MSG_BLOCKED] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SAVED] = 'message__delivering_state__saved';\n\n\nif (typeof define === \"function\") {\n    define(function () {\n        return constants;\n    });\n}\n","define(\"xabber-contacts\", function () {\n    return function (xabber) {\n        let env = xabber.env,\n            constants = env.constants,\n            templates = env.templates.contacts,\n            utils = env.utils,\n            $ = env.$,\n            $iq = env.$iq,\n            $pres = env.$pres,\n            Strophe = env.Strophe,\n            _ = env._,\n            moment = env.moment,\n            uuid = env.uuid,\n            Images = utils.images,\n            Emoji = utils.emoji,\n            pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n        xabber.Contact = Backbone.Model.extend({\n            idAttribute: 'jid',\n            defaults: {\n                status: \"offline\",\n                status_message: \"\",\n                subscription: undefined,\n                subscription_request_in: false,\n                subscription_request_out: false,\n                groups: [],\n                group_chat: false\n            },\n\n            initialize: function (_attrs, options) {\n                this.on(\"change:group_chat\", this.onChangedGroupchat, this);\n                this.account = options.account;\n                if (_attrs.avatar) {\n                    _attrs.image = _attrs.avatar;\n                    delete _attrs.avatar;\n                }\n                let attrs = _.clone(_attrs);\n                if (attrs.resource) {\n                    attrs.full_jid = attrs.jid + '/' + attrs.resource;\n                } else if (attrs.group_chat) {\n                    attrs.full_jid = attrs.jid + '/Group';\n                }\n                (this.account && this.account.domain === attrs.jid) && _.extend(attrs, {server: true, status: 'online'});\n                attrs.name = attrs.roster_name || attrs.name || attrs.jid;\n                if (!attrs.image) {\n                    attrs.photo_hash = \"\";\n                    attrs.image = Images.getDefaultAvatar(attrs.name);\n                }\n                if (this.account.blocklist.isBlocked(attrs.jid))\n                    attrs.blocked = true;\n                this.cached_image = Images.getCachedImage(attrs.image);\n                attrs.vcard = utils.vcard.getBlank(attrs.jid);\n                this.set(attrs);\n                this.onChangedGroupchat();\n                this.domain = Strophe.getDomainFromJid(this.get('jid'));\n                !this.get('group_chat') && this.set('group_chat', _.contains(this.account.chat_settings.get('group_chat'), this.get('jid')));\n                this.hash_id = env.b64_sha1(this.account.get('jid') + '-' + attrs.jid);\n                this.resources = new xabber.ContactResources(null, {contact: this});\n                this.on(\"update_avatar\", this.updateAvatar, this);\n                this.on(\"change:full_jid\", this.updateCachedInfo, this);\n                this.on(\"change:roster_name\", this.updateName, this);\n                this.account.dfd_presence.done(() => {\n                    if (!this.get('blocked') && !this.get('vcard_updated'))\n                        this.getVCard();\n                });\n            },\n\n            getStatusMessage: function () {\n                let subscription = this.get('subscription'),\n                    in_request = this.get('subscription_request_in'),\n                    out_request = this.get('subscription_request_out'),\n                    status_text = \"\";\n                if (this.get('blocked'))\n                    status_text = xabber.getString(\"action_contact_blocked\");\n                else if (this.get('group_chat')) {\n                    if (this.get('group_info')) {\n                        if (this.get('group_info').members_num)\n                            status_text += xabber.getQuantityString(\"contact_groupchat_status_member\", this.get('group_info').members_num);\n                        if (this.get('group_info').online_members_num > 0)\n                            status_text += xabber.getString(\"contact_groupchat_status_online\", [this.get('group_info').online_members_num || 0]);\n                    } else if (!subscription)\n                        status_text = xabber.getString(\"contact_state_no_subscriptions\");\n                    else\n                        status_text = this.get('status_message') || xabber.getString(this.get('status'));\n                } else {\n                    if (subscription === 'from') {\n                        if (out_request)\n                            status_text = xabber.getString(\"contact_state_outgoing_request\");\n                        else\n                            status_text = xabber.getString(\"chat_receives_presence_updates\");\n                    } else if (subscription === 'none') {\n                        if (out_request)\n                            status_text = xabber.getString(\"contact_state_outgoing_request\");\n                        else if (in_request)\n                            status_text = xabber.getString(\"contact_state_in_contact_list\");\n                        else\n                            status_text = xabber.getString(\"contact_state_in_contact_list\");\n                    }\n                    else if (!subscription)\n                        status_text = xabber.getString(\"contact_state_not_in_contact_list\");\n                    else\n                        status_text = this.get('status_message') || xabber.getString(this.get('status'));\n                }\n                return status_text;\n            },\n\n            getSubscriptionStatuses: function () {\n                let subscription = this.get('subscription'),\n                    subscription_preapproved = this.get('subscription_preapproved'),\n                    in_request = this.get('subscription_request_in'),\n                    out_request = this.get('subscription_request_out'),\n                    status_description = \"\",\n                    status_out_color = \"\",\n                    status_in_color = \"\",\n                    status_out_text = \"\",\n                    status_in_text = \"\";\n                if (this.get('blocked'))\n                    status_out_text = xabber.getString(\"action_contact_blocked\");\n                if (subscription === 'both') {\n                    status_out_text = xabber.getString(\"subscription_status_out_to\");\n                    status_in_text = xabber.getString(\"subscription_status_in_from\");\n                    status_description = xabber.getString(\"subscription_status_description_both\");\n                }\n                else if (subscription === 'from') {\n                    if (out_request){\n                        status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                        status_in_text = xabber.getString(\"subscription_status_in_from\");\n                        status_description = xabber.getString(\"subscription_status_description_out_requested_in_from\");\n                    }\n                    else {\n                        status_out_text = xabber.getString(\"subscription_status_out_none\");\n                        status_in_text = xabber.getString(\"subscription_status_in_from\");\n                        status_description = xabber.getString(\"subscription_status_description_out_none_in_from\");\n                    }\n                }\n                else if (subscription === 'to') {\n                    if (in_request){\n                        status_out_text = xabber.getString(\"subscription_status_out_to\");\n                        status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                        status_description = xabber.getString(\"subscription_status_description_out_to_in_request_incoming\");\n                    }\n                    else {\n                        status_out_text = xabber.getString(\"subscription_status_out_to\");\n                        status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                        status_description = xabber.getString(\"subscription_status_description_out_to_in_not_allowed\");\n                        if (subscription_preapproved){\n                            status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                            status_description = xabber.getString(\"subscription_status_description_out_to_in_allowed\");\n                        }\n                    }\n                } else if (subscription === 'none') {\n                    if (out_request && in_request){\n                        status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                        status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                        status_description = xabber.getString(\"subscription_status_description_out_requested_in_request_incoming\");\n                    }\n                    else if (out_request){\n                        status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                        status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                        status_description = xabber.getString(\"subscription_status_description_out_requested_in_not_allowed\");\n                        if (subscription_preapproved){\n                            status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                            status_description = xabber.getString(\"subscription_status_description_out_request_in_allowed\");\n                        }\n                    }\n                    else if (in_request){\n                        status_out_text = xabber.getString(\"subscription_status_out_none\");\n                        status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                        status_description = xabber.getString(\"subscription_status_description_out_none_in_request_incoming\");\n                    }\n                    else {\n                        status_out_text = xabber.getString(\"subscription_status_out_none\");\n                        status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                        status_description = xabber.getString(\"subscription_status_description_out_none_in_not_allowed\");\n                        if (subscription_preapproved){\n                            status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                            status_description = xabber.getString(\"subscription_status_description_out_none_in_allowed\");\n                        }\n                    }\n                }\n                else if (!subscription)\n                    status_out_text = xabber.getString(\"contact_add\");\n\n                if (out_request)\n                    status_out_color = \"request\";\n                if (in_request)\n                    status_in_color = \"request\";\n                if (subscription === 'to')\n                    status_out_color = \"subbed\";\n                if (subscription === 'from')\n                    status_in_color = \"subbed\";\n                if (subscription === 'both') {\n                    status_out_color = \"subbed\";\n                    status_in_color = \"subbed\";\n                }\n                return {\n                    status_out: status_out_text,\n                    status_in: status_in_text,\n                    status_out_color: status_out_color,\n                    status_in_color: status_in_color,\n                    status_description: status_description,\n                };\n            },\n\n            getIcon: function () {\n                if (this.get('blocked'))\n                    return 'blocked';\n                if (this.get('invitation'))\n                    return 'group-invite';\n                if (this.get('group_chat')) {\n                    if (this.get('jid').includes('redmine_issue_'))\n                        return 'task';\n                    if (this.get('private_chat'))\n                        return 'group-private';\n                    if (this.get('incognito_chat'))\n                        return 'group-incognito';\n                    return 'group-public';\n                }\n                if (this.get('server'))\n                    return 'server';\n                if (this.get('bot'))\n                    return 'bot';\n                return;\n            },\n\n            updateAvatar: function () {\n                this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n                    if (cached_info && this.get('photo_hash') === cached_info.photo_hash)\n                        return;\n                    this.getVCard();\n                });\n            },\n\n            getVCard: function (callback) {\n                let jid = this.get('jid'),\n                    is_callback = _.isFunction(callback);\n                this.account.getConnectionForIQ().vcard.get(jid,\n                     (vcard) => {\n                        if (vcard.group_info) {\n                            let group_info = this.get('group_info') || {};\n                            group_info = _.extend(group_info, vcard.group_info);\n                            this.set({group_info});\n                            delete vcard.group_info;\n                        }\n                        let attrs = {\n                            vcard: vcard,\n                            vcard_updated: moment.now(),\n                            name: this.get('roster_name')\n                        };\n                        if (!attrs.name) {\n                            if (this.get('group_chat'))\n                                attrs.name = vcard.nickname || this.get('name');\n                            else\n                                attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                        }\n                        if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                            if (vcard.photo.image) {\n                                attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                                attrs.image = vcard.photo.image;\n                            }\n                            else\n                                attrs.image = Images.getDefaultAvatar(attrs.name);\n                            this.cached_image = Images.getCachedImage(attrs.image);\n                        }\n                        this.set(attrs);\n                        if (this.get('in_roster')) {\n                            this.updateCachedInfo();\n                        }\n                        is_callback && callback(vcard);\n                    },\n                    function () {\n                        is_callback && callback(null);\n                    }\n                );\n            },\n\n            updateCachedInfo: function () {\n                let roster_info = {\n                    jid: this.get('jid'),\n                    in_roster: this.get('in_roster'),\n                    groups: this.get('groups'),\n                    subscription: this.get('subscription'),\n                    roster_name: this.get('roster_name'),\n                    subscription_request_out: this.get('subscription_request_out'),\n                    subscription_request_in: this.get('subscription_request_in'),\n                    name: this.get('name'),\n                    vcard_updated: this.get('vcard_updated')\n                }, full_jid = this.get('full_jid');\n                if (this.get('photo_hash') || this.get('image'))\n                    _.extend(roster_info, {\n                        photo_hash: (this.get('photo_hash') || this.account.getAvatarHash(this.get('image'))),\n                        avatar_priority: this.get('avatar_priority'),\n                        avatar: this.get('image')\n                    });\n                if (full_jid)\n                    roster_info.resource = Strophe.getResourceFromJid(full_jid);\n                this.account.cached_roster.putInRoster(roster_info);\n            },\n\n            onChangedGroupchat: function () {\n                if (this.get('group_chat')) {\n                    this.updateCounters();\n                    this.participants = new xabber.Participants(null, {contact: this});\n                }\n            },\n\n            getBlockedParticipants: function (callback, errback) {\n                let iq = $iq({\n                    type: 'get',\n                    to: this.get('full_jid') || this.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#block'});\n                this.account.sendFast(iq, callback, errback);\n            },\n\n            updateCounters: function () {\n                xabber.toolbar_view.recountAllMessageCounter();\n            },\n\n            getLastSeen: function() {\n                if (this.get('status') == 'offline') {\n                    if (!Strophe.getNodeFromJid(this.get('jid'))) {\n                        this.set({status_message: 'Server'});\n                        return;\n                    }\n                    let iq = $iq({type: 'get', to: this.get('jid') }).c('query', {xmlns: Strophe.NS.LAST});\n                    this.account.sendIQFast(iq, (iq) => {\n                        let last_seen = this.getLastSeenStatus(iq);\n                        if (this.get('status') == 'offline')\n                            this.set({status_message: last_seen});\n                        return this;\n                    });\n                }\n            },\n\n            getMyInfo: function (callback) {\n                this.participants.participantsRequest({id: '', properties: true}, (response) => {\n                    let $item = $($(response).find('query user')),\n                        cached_avatar = this.account.chat_settings.getAvatarInfoById($item.find('id').text());\n                    $item.length && this.participants && this.participants.createFromStanza($item);\n                    cached_avatar && (cached_avatar.avatar_hash == this.my_info.get('avatar')) && this.my_info.set('b64_avatar', cached_avatar.avatar_b64);\n                    this.trigger('update_my_info');\n                    this.participants.participantsRequest({id: ''}, (response) => {\n                        let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                        this.my_rights = data_form;\n                        this.trigger('permissions_changed');\n                        callback && callback();\n                    });\n                });\n            },\n\n            getAvatar: function (avatar, node, callback, errback) {\n                let jid = this.get('group_chat') ? this.get('full_jid') : this.get('jid'),\n                    iq_request_avatar = $iq({type: 'get', to: jid})\n                    .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                    .c('items', {node: node})\n                    .c('item', {id: avatar});\n                this.account.sendIQFast(iq_request_avatar, (iq) => {\n                    let pubsub_avatar = $(iq).find('data').text();\n                    if (pubsub_avatar == \"\")\n                        errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n                    else\n                        callback && callback(pubsub_avatar);\n                });\n            },\n\n            pubAvatar: function (image, node, callback, errback) {\n                let avatar_hash = sha1(image.base64),\n                    iq_pub_data = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(image.base64),\n                    iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                        .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                this.account.sendIQFast(iq_pub_data, () => {\n                        this.account.sendIQFast(iq_pub_metadata, () => {\n                                callback && callback(avatar_hash);\n                            },\n                            function (data_error) {\n                                errback && errback(data_error);\n                            });\n                    }, (data_error) => {\n                        errback && errback(data_error);\n                    });\n            },\n\n            getLastSeenStatus: function(iq) {\n                let seconds = $(iq).children('query').attr('seconds'),\n                    message_time = moment.now() - 1000*seconds;\n                this.set({ last_seen: message_time });\n                return xabber.pretty_last_seen(seconds);\n            },\n\n            pres: function (type) {\n                let pres = $pres({to: this.get('jid'), type: type});\n                this.account.sendPres(pres);\n                return this;\n            },\n\n            pushInRoster: function (attrs, callback, errback) {\n                attrs || (attrs = {});\n                let name = attrs.name || this.get('roster_name'),\n                    groups = attrs.groups || this.get('groups');\n                let iq = $iq({type: 'set'})\n                    .c('query', {xmlns: Strophe.NS.ROSTER})\n                    .c('item', {jid: this.get('jid'), name: name});\n                _.each(groups, function (group) {\n                    iq.c('group').t(group).up();\n                });\n                this.account.sendIQFast(iq, callback, errback);\n                this.set('known', true);\n                this.set('removed', false);\n                return this;\n            },\n\n            removeFromRoster: function (callback, errback) {\n                if (!this.get('removed')){\n                    let iq = $iq({type: 'set'})\n                        .c('query', {xmlns: Strophe.NS.ROSTER})\n                        .c('item', {jid: this.get('jid'), subscription: \"remove\"});\n                    this.account.cached_roster.removeFromRoster(this.get('jid'));\n                    this.account.sendIQFast(iq, callback, errback);\n                    this.set('known', false);\n                    this.set('removed', true);\n                }\n                return this;\n            },\n\n            acceptRequest: function (callback) {\n                this.pres('subscribed');\n                callback && callback();\n            },\n\n            askRequest: function (callback) {\n                this.pres('subscribe');\n                callback && callback();\n            },\n\n            blockRequest: function (callback) {\n                this.block(callback);\n            },\n\n            declineRequest: function (callback) {\n                this.pres('unsubscribed');\n                this.removeFromRoster(callback);\n            },\n\n            declineSubscription: function () {\n                this.pres('unsubscribe');\n                this.set('subscription_request_out', false);\n            },\n\n            declineSubscribe: function () {\n                this.pres('unsubscribed');\n                !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', false)\n            },\n\n            deleteWithDialog: function () {\n                let is_group = this.get('group_chat'),\n                    header = is_group ? xabber.getString(\"group_remove\") : xabber.getString(\"remove_contact\"),\n                    msg_text = is_group ? xabber.getString(\"group_remove_confirm\", [this.get('name').bold()]) : xabber.getString(\"contact_delete_confirm_short\", [this.get('name').bold()]),\n                    optional_buttons = is_group ? null : [{ name: 'delete_history', checked: false, text: xabber.getString(\"delete_contact__label_delete_history\")}];\n                utils.dialogs.ask(header, msg_text, optional_buttons, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                    if (result) {\n                        if (is_group) {\n                            let domain = this.domain,\n                                localpart = Strophe.getNodeFromJid(this.get('jid')),\n                                iq = $iq({to: domain, type: 'set'})\n                                    .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#delete`}).t(localpart);\n                            this.account.sendIQFast(iq, () => {\n                                this.declineSubscription();\n                                this.removeFromRoster();\n                                let chat = this.account.chats.getChat(this);\n                                chat.trigger(\"close_chat\");\n                                xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                            });\n                        } else {\n                            this.removeFromRoster();\n                            if (result.delete_history) {\n                                let chat = this.account.chats.getChat(this);\n                                chat.retractAllMessages(false);\n                                chat.deleteFromSynchronization();\n                                xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                            }\n                            xabber.trigger(\"clear_search\");\n                        }\n                    }\n                });\n            },\n\n            blockWithDialog: function () {\n                let is_group = this.get('group_chat'),\n                    contact = this,\n                    header = is_group ? xabber.getString(\"block_group__header\") : xabber.getString(\"contact_block\"),\n                    buttons = { ok_button_text: xabber.getString(\"contact_bar_block\")},\n                    msg_text = xabber.getString(\"block_contact_confirm_short\", [this.get('name').bold()]);\n                if (!is_group) {\n                    buttons.optional_button = xabber.getString(\"contact_block_and_delete\");\n                    msg_text += `\\n${xabber.getString(\"block_contact_warning\", [this.get('jid')])}`;\n                }\n                utils.dialogs.ask(header, msg_text, null, buttons).done(function (result) {\n                    if (result) {\n                       if (!is_group) {\n                            let chat = contact.account.chats.getChat(contact);\n                            if (result === 'block & delete') {\n                                contact.removeFromRoster();\n                                chat.retractAllMessages(false);\n                                chat.deleteFromSynchronization();\n                                chat.set('active', false);\n                            }\n                        }\n                        contact.blockRequest();\n                        xabber.trigger(\"clear_search\");\n                        if (!is_group)\n                            xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    }\n                });\n            },\n\n            unblockWithDialog: function () {\n                let contact = this;\n                utils.dialogs.ask(xabber.getString(\"chat_settings__button_unblock_contact\"), xabber.getString(\"unblock_contact_confirm_short\", [this.get('name')]), null, { ok_button_text: xabber.getString(\"contact_bar_unblock\")}).done(function (result) {\n                    if (result) {\n                        contact.unblock();\n                        xabber.trigger(\"clear_search\");\n                    }\n                });\n            },\n\n            block: function (callback, errback) {\n                let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n                    .c('item', {jid: this.get('jid')});\n                this.account.sendIQFast(iq, callback, errback);\n                this.set('blocked', true);\n                this.set('known', false);\n            },\n\n            unblock: function (callback, errback) {\n                let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n                    .c('item', {jid: this.get('jid')});\n                this.account.sendIQFast(iq, callback, errback);\n                this.set('blocked', false);\n            },\n\n            sendPresent: function () {\n                let pres = $pres({to: this.get('jid')})\n                    .c('x', {xmlns: `${Strophe.NS.GROUP_CHAT}#present`});\n                this.account.sendPres(pres);\n                clearInterval(this._sending_present_interval);\n                this._sending_present_interval = setInterval(() => {\n                    this.account.sendPres(pres);\n                }, constants.PRESENT_INTERVAL);\n            },\n\n            sendNotPresent: function () {\n                let pres = $pres({to: this.get('jid')})\n                    .c('x', {xmlns: `${Strophe.NS.GROUP_CHAT}#not-present`});\n                this.account.sendPres(pres);\n                clearInterval(this._sending_present_interval);\n            },\n\n            handlePresence: function (presence) {\n                let $presence = $(presence),\n                    type = presence.getAttribute('type'),\n                    $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCARD_UPDATE}\"]`);\n                if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                    this.set('photo_hash', $vcard_update.find('photo').text());\n                    this.trigger('update_avatar');\n                }\n                let $group_chat_info = $(presence).find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`);\n                if ($group_chat_info.length > 0 && $group_chat_info.children().length) {\n                    this.set('full_jid', $presence.attr('from'));\n                    if (!this.get('group_chat')) {\n                        this.set('group_chat', true);\n                        this.account.chat_settings.updateGroupChatsList(this.get('jid'), this.get('group_chat'));\n                    }\n                    if (this.details_view && !this.details_view.child('participants')) {\n                        this.details_view = new xabber.GroupChatDetailsView({model: this});\n                    }\n                    let group_chat_info = this.parseGroupInfo($(presence)),\n                        prev_group_info = this.get('group_info') || {};\n                    if (this.details_view && this.details_view.isVisible() && group_chat_info.online_members_num != prev_group_info.online_members_num)\n                        this.trigger('update_participants');\n                    _.extend(prev_group_info, group_chat_info);\n                    this.set('group_info', prev_group_info);\n                    if (!this.get('roster_name') && (prev_group_info.name !== this.get('name')))\n                        this.set('name', prev_group_info.name);\n                    this.set({status: prev_group_info.status, status_updated: moment.now(), status_message: (prev_group_info.members_num + ' members' + xabber.getString(\"contact_groupchat_status_online\", [prev_group_info.online_members_num || 0]))});\n                }\n                if (type === 'subscribe') {\n                    this.set('subscription_request_in', true);\n                    if (this.get('subscription_preapproved')) {\n                        this.pres('subscribed');\n                    } else {\n                        this.trigger('presence', this, 'subscribe');\n                    }\n                } else if (type === 'subscribed') {\n                    if (this.get('group_chat') && (this.get('subscription_request_out') || this.get('subscription') === 'to')) {\n\n                    }\n                    if (this.get('subscription') === 'to') {\n                        // this.pres('subscribed');\n                    }\n                    this.trigger('presence', this, 'subscribed');\n                } else if (type === 'unsubscribe') {\n                    this.set('subscription_request_in', false);\n                    if (this.get('group_chat')) {\n                        this.removeFromRoster();\n                        let chat = this.account.chats.getChat(this);\n                        if (!this.get('sync_deleted')){\n                            chat.deleteFromSynchronization(() => {\n                                chat.trigger(\"close_chat\");\n                                this.destroy();\n                            }, () => {\n                                chat.trigger(\"close_chat\");\n                                this.destroy();\n                            });\n                        } else {\n                            chat.trigger(\"close_chat\");\n                            this.destroy();\n                        }\n                    }\n                } else if (type === 'unsubscribed') {\n                    this.set('subscription_request_out', false);\n                    // this.trigger('presence', this, 'unsubscribed');\n                } else {\n                    let jid = presence.getAttribute('from'),\n                        resource = Strophe.getResourceFromJid(jid),\n                        priority = Number($presence.find('priority').text()),\n                        status = $presence.find('show').text() || 'online',\n                        $status_message = $presence.find('status'),\n                        status_message = $status_message.text();\n                    _.isNaN(priority) && (priority = 0);\n                    clearTimeout(this._reset_status_timeout);\n                    let resource_obj = this.resources.get(resource);\n                    if (type === 'unavailable') {\n                        this.set({ last_seen: moment.now() });\n                        resource_obj && resource_obj.destroy();\n                    } else {\n                        this.set({ last_seen: undefined });\n                        let attrs = {\n                            resource: resource,\n                            priority: priority,\n                            status: status\n                        };\n                        $status_message.length && (attrs.status_message = status_message);\n                        if (!resource_obj) {\n                            resource_obj = this.resources.create(attrs);\n                        } else {\n                            resource_obj.set(attrs);\n                        }\n                    }\n                }\n            },\n\n            parseGroupInfo: function ($presence) {\n                let jid = this.get('jid'),\n                    $group_chat = $presence.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`),\n                    name = $group_chat.find('name').text(),\n                    $model = $group_chat.find('membership'),\n                    status = $presence.children('show').text() || (($presence.attr('type') === 'unavailable') ? 'unavailable' : 'online'),\n                    status_msg = $presence.children('status').text(),\n                    privacy = $group_chat.find('privacy').text(),\n                    $index = $group_chat.find('index'),\n                    $description = $group_chat.find('description'),\n                    pinned_message = Number($group_chat.find('pinned-message').text()),\n                    prev_pinned_message = this.get('pinned_message') ? this.get('pinned_message').get('stanza_id') : 0,\n                    private_chat = $group_chat.find('parent-chat').text() || false,\n                    members_num = Number($group_chat.find('members').text()),\n                    $online_members_num = $group_chat.find('present'),\n                    info = {jid, name, status_msg, privacy, status, members_num};\n                $index.length && (info.searchable = $index.text());\n                $model.length && (info.model = $model.text());\n                $description.length && (info.description = $description.text());\n                $online_members_num.length && (info.online_members_num = Number($online_members_num.text()));\n                private_chat && this.set('private_chat', private_chat);\n                privacy === 'incognito' && this.set('incognito_chat', true);\n                let chat = this.account.chats.get(this.hash_id), pinned_msg_elem;\n                if ($group_chat.find('pinned-message').length) {\n                    if (prev_pinned_message != pinned_message) {\n                        if (chat) {\n                            if (chat.item_view && !chat.item_view.content)\n                                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                            pinned_msg_elem = chat.item_view.content.$pinned_message;\n                        }\n                        if (pinned_msg_elem) {\n                            if (pinned_message) {\n                                this.getMessageByStanzaId(pinned_message, ($message) => {\n                                    this.parsePinnedMessage($message, pinned_msg_elem);\n                                });\n                            }\n                            else {\n                                this.set('pinned_message', undefined);\n                                this.parsePinnedMessage(undefined, pinned_msg_elem);\n                            }\n                        }\n                    }\n                }\n                return info;\n            },\n\n            getAllRights: function (callback) {\n                let iq_get_rights = iq = $iq({type: 'get', to: this.get('full_jid') || this.get('jid') })\n                    .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights` });\n                this.account.sendIQFast(iq_get_rights, (iq_all_rights) => {\n                    let all_permissions = $(iq_all_rights).find('permission'),\n                        all_restrictions = $(iq_all_rights).find('restriction');\n                    this.all_rights = {permissions: all_permissions, restrictions: all_restrictions};\n                    callback && callback();\n                });\n            },\n\n            getMessageByStanzaId: function (stanza_id, callback) {\n                let queryid = uuid(),\n                    iq = $iq({type: 'set', to: this.get('full_jid') || this.get('jid')})\n                        .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                        .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                        .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                        .c('value').t(Strophe.NS.MAM).up().up()\n                        .c('field', {'var': '{urn:xmpp:sid:0}stanza-id'})\n                        .c('value').t(stanza_id);\n                let handler = this.account.connection.addHandler((message) => {\n                    let $msg = $(message);\n                    if ($msg.find('result').attr('queryid') === queryid)\n                        callback && callback($msg);\n                    return true;\n                }, Strophe.NS.MAM);\n                this.account.sendIQFast(iq, () => {\n                        this.account.connection.deleteHandler(handler);\n                    }, () => {\n                        this.account.connection.deleteHandler(handler);\n                    }\n                );\n            },\n\n            MAMRequest: function (options, callback, errback) {\n                let account = this.account,\n                    is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n                    conn = is_fast ? account.fast_connection : account.connection,\n                    contact = this,\n                    messages = [], queryid = uuid(),\n                    is_groupchat = contact && contact.get('group_chat'), success = true, iq;\n                delete options.fast;\n                if (is_groupchat)\n                    iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n                else\n                    iq = $iq({type: 'set'});\n                iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                    .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                    .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                    .c('value').t(Strophe.NS.MAM).up().up();\n                if (this.account.server_features.get(Strophe.NS.ARCHIVE) && options.encrypted)    {\n                    iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_encrypted`})\n                        .c('value').t(options.encrypted).up().up();\n                }\n                if (this.account.server_features.get(Strophe.NS.ARCHIVE) && !options.encrypted)    {\n                    if (options.filter_image)\n                        iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_image`})\n                            .c('value').t(options.filter_image).up().up();\n                    if (options.filter_video)\n                        iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_video`})\n                            .c('value').t(options.filter_video).up().up();\n                    if (options.filter_voice)\n                        iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_voice`})\n                            .c('value').t(options.filter_voice).up().up();\n                    if (options.filter_files){\n                        iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_image`})\n                            .c('value').t('false').up().up();\n                        iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_video`})\n                            .c('value').t('false').up().up();\n                        iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_voice`})\n                            .c('value').t('false').up().up();\n                        iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_sticker`})\n                            .c('value').t('false').up().up();\n                    }\n                }\n                if (!is_groupchat)\n                    iq.c('field', {'var': 'with'})\n                        .c('value').t(this.get('jid')).up().up();\n                if (options.var)\n                    options.var.forEach((opt_var) => {\n                        iq.c('field', {'var': opt_var.var})\n                            .c('value').t(opt_var.value).up().up();\n                    });\n                iq.up().cnode(new Strophe.RSM(options).toXML());\n                let deferred = new $.Deferred();\n                account.chats.onStartedMAMRequest(deferred);\n                deferred.done(function () {\n                    let handler = conn.addHandler(function (message) {\n                        if ((contact && is_groupchat == contact.get('group_chat'))) {\n                            let $msg = $(message);\n                            if ($msg.find('result').attr('queryid') === queryid) {\n                                messages.push(message);\n                            }\n                        }\n                        else {\n                            messages = [];\n                            success = false;\n                        }\n                        return true;\n                    }, Strophe.NS.MAM);\n                    let callb = function (res) {\n                            conn.deleteHandler(handler);\n                            account.chats.onCompletedMAMRequest(deferred);\n                            let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                            if ($fin.length && $fin.attr('queryid') === queryid) {\n                                let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                                rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                                callback && callback(success, messages, rsm);\n                            }\n                        },\n                        errb = function (err) {\n                            conn.deleteHandler(handler);\n                            xabber.error(\"MAM error\");\n                            xabber.error(err);\n                            account.chats.onCompletedMAMRequest(deferred);\n                            errback && errback(err);\n                        };\n                    if (is_fast)\n                        account.sendFast(iq, callb, errb);\n                    else\n                        account.sendIQ(iq, callb, errb);\n                });\n            },\n\n            getFilesFromStanza: function ($message, options) {\n                $message = $message.find('message')\n                let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n                    $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n                    $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n                    items = [];\n\n                references.each((idx, reference) => {\n                    let $reference = $(reference),\n                        type = $reference.attr('type');\n                    if (type === 'mutable') {\n                        let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                        if ($file_sharing.length) {\n                            let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                                $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                            $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                            file_attrs = {\n                                name: $file.children('name').text(),\n                                hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                                size: $file.children('size').text(),\n                                uniqueid: $message.attr('id'),\n                                id: $file.children('gallery-id').text(),\n                                created_at: $file.children('created').text(),\n                                thumbnail: $file.children('thumbnail-uri').text(),\n                                media_type: $file.children('media-type').text(),\n                                duration: $file.children('duration').text(),\n                                description: $file.children('desc').text(),\n                                height: $file.children('height').text(),\n                                width: $file.children('width').text(),\n                                voice: type === 'voice',\n                                sources: sources\n                            };\n                            if (sources[0].indexOf('aescbc') == 0) {\n                                let uri = sources[0].replace(/^aescbc/, 'https'),\n                                    key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                                uri = uri.slice(0, uri.length - 64 - 1);\n                                _.extend(file_attrs, {sources: [uri], key: key});\n                                file_attrs.has_encrypted_files = true;\n                            }\n                            items.push(file_attrs);\n                        }\n                    }\n                });\n                return items\n            },\n\n            parsePinnedMessage: function ($message, pinned_msg_elem) {\n                if (!$message) {\n                    this.renderPinnedMessage(null, pinned_msg_elem);\n                }\n                else {\n                    let $msg = $message.find('result message').first();\n                    if (this.get('pinned_message'))\n                        if (this.get('pinned_message').stanza_id === $msg.find('stanza-id').attr('id'))\n                            return;\n                    let message = this.account.chats.receiveChatMessage($message, {pinned_message: true});\n                    this.set('pinned_message', message);\n                    this.renderPinnedMessage(message, pinned_msg_elem);\n                }\n            },\n\n            renderPinnedMessage: function (message, pinned_msg_elem) {\n                if (!message) {\n                    pinned_msg_elem.html(\"\");\n                    pinned_msg_elem.siblings('.chat-content').css({'height':'100%'});\n                }\n                else {\n                    let images = message.get('images') || [],\n                        files = message.get('files') || [],\n                        locations = message.get('locations'),\n                        fwd_message = message.get('forwarded_message'),\n                        fwd_msg_author = null,\n                        msg_text = _.escape(message.get('message'));\n                    message.get('videos') && message.get('videos').length && (files = files.concat(message.get('videos')));\n                    if (fwd_message) {\n                        let user_info = fwd_message[0].get('user_info') || {};\n                        if (msg_text) {\n                        } else if (fwd_message.length > 1)\n                            msg_text = xabber.getQuantityString(\"forwarded_messages_count\", fwd_message.length);\n                        else {\n                            msg_text = fwd_message[0].get('message') || fwd_message[0].get('forwarded_message') && xabber.getString(\"forwarded_messages_count_plural_0\", [fwd_message[0].get('forwarded_message').length]);\n                            fwd_msg_author = user_info.nickname || fwd_message[0].get('from_jid') || user_info.id;\n                        }\n                    }\n                    if ((images && images.length) && (files && files.length))\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__attachments\", [images.length + files.length])}</span>`;\n                    else {\n                        if (images && images.length) {\n                            if (images.length == 1)\n                                msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__images_plural_0\")}: </span>` + images[0].name;\n                            if (images.length > 1)\n                                msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__images\", images.length)}</span>`;\n                        }\n                        if (files && files.length) {\n                            if (files.length == 1)\n                                msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__files_plural_0\")}: </span>` + files[0].name + ' (' + files[0].size + ')';\n                            if (files.length > 1)\n                                msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__files\", files.length)}</span>`;\n                        }\n                    }\n                    if (locations && locations.length) {\n                        if (locations.length == 1)\n                            msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__locations_plural_0\")}</span>`;\n                        if (locations.length > 1)\n                            msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length)}</span>`;\n                    }\n                    let user_info = message.get('user_info') || {},\n                        chat_content = this.account.chats.get(this.hash_id).item_view.content,\n                        is_scrolled = chat_content.isScrolledToBottom(),\n                        msg_author = user_info.nickname || message.get('from_jid') || user_info.id,\n                        pinned_msg = {\n                            author: msg_author,\n                            time: pretty_datetime(message.get('time')),\n                            message: msg_text,\n                            fwd_author: fwd_msg_author\n                        },\n                        pinned_msg_html = $(templates.group_chats.pinned_message(pinned_msg));\n                    pinned_msg_elem.html(pinned_msg_html).emojify('.chat-msg-content', {emoji_size: 18});\n                    let height_pinned_msg = pinned_msg_elem.height();\n                    pinned_msg_elem.siblings('.chat-content').css({\n                        'height': 'calc(100% - ' + height_pinned_msg + 'px)'\n                    });\n                    if (is_scrolled)\n                        chat_content.scrollToBottom();\n                    pinned_msg_elem.attr('data-uniqueid', message.get('unique_id'));\n                }\n            },\n\n            resetStatus: function (timeout) {\n                clearTimeout(this._reset_status_timeout);\n                this._reset_status_timeout = setTimeout(() => {\n                    this.set({\n                        status_updated: moment.now(),\n                        status: 'offline',\n                        status_message: ''\n                    });\n                }, timeout || 5000);\n            },\n\n            searchByParticipants: function (query, callback) {\n                if (!this.participants.version) {\n                    this.participants.participantsRequest({}, () => {\n                        let participants_list = this.participants.search(query);\n                        callback && callback(participants_list);\n                    });\n                } else {\n                    let participants_list = this.participants.search(query);\n                    callback && callback(participants_list);\n                }\n            },\n\n            updateName: function () {\n                if (this.get('roster_name') && this.get('name') !== this.get('roster_name'))\n                    this.set('name', this.get('roster_name'));\n            },\n\n            showDetails: function (screen) {\n                if (!this.details_view)\n                    this.details_view = (this.get('group_chat')) ? new xabber.GroupChatDetailsView({model: this}) : new xabber.ContactDetailsView({model: this});\n                screen || (screen = 'contacts');\n                xabber.body.setScreen(screen, {right: 'contact_details', contact: this});\n            },\n\n            showDetailsRight: function (screen, options) {\n                let chat = this.account.chats.getChat(this),\n                     scrolled_top_chats_view, scrolled_top_chat;\n                if (chat)\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    scrolled_top_chat = chat.item_view.content.getScrollTop()\n                if (xabber.chats_view)\n                    scrolled_top_chats_view = xabber.chats_view.getScrollTop();\n                options = options || {};\n                if (!this.details_view_right && !options.encrypted)\n                    this.details_view_right = (this.get('group_chat')) ? new xabber.GroupChatDetailsViewRight({model: this}) : new xabber.ContactDetailsViewRight({model: this});\n                if (!this.details_view_right_encrypted && options.encrypted)\n                    this.details_view_right_encrypted = new xabber.ContactDetailsViewRight({model: this, encrypted: true});\n                screen || (screen = 'contacts');\n                if (xabber.body.screen.get('right_contact') && options.type != 'search' && options.type != 'members' && options.type != 'participant' && !options.right_saved) {\n                    this.set('search_hidden', true)\n                    xabber.body.setScreen(screen, {right_contact: '', contact: this});\n                }\n                else {\n                    if (options.encrypted)\n                        xabber.body.setScreen(screen, {right_contact: 'contact_details_encrypted', contact: this});\n                    else\n                        xabber.body.setScreen(screen, {right_contact: 'contact_details', contact: this});\n                    if (this.details_view_right && this.details_view_right.contact_searched_messages_view){\n                        this.details_view_right.contact_searched_messages_view.hideSearch();\n                        if (options.type === 'search') {\n                            this.details_view_right.contact_searched_messages_view.clearSearch();\n                            this.details_view_right.showSearchMessages();\n                        }\n                        if (options.type === 'members') {\n                            this.details_view_right.$('.tabs:not(.participant-tabs) .list-variant[data-value=\"participants\"]').click()\n                        }\n                        this.details_view_right.onScroll()\n                    }\n                }\n                if (scrolled_top_chat)\n                    chat.item_view.content.scrollTo(scrolled_top_chat);\n                if (scrolled_top_chats_view)\n                    xabber.chats_view.scrollTo(scrolled_top_chats_view);\n            },\n        });\n\n        xabber.SetGroupchatStatusView = xabber.BasicView.extend({\n            className: 'modal main-modal change-status-modal',\n            template: templates.group_chats.set_status,\n\n            events: {\n                \"click .status-values li\": \"changeStatus\"\n            },\n\n            open: function (contact) {\n                this.contact = contact;\n                this.account = this.contact.account;\n                this.show();\n                this.getStatuses();\n            },\n\n            updateIcons: function () {\n                let ic_name = this.contact.getIcon();\n                this.$('.status-bulb').addClass('hidden');\n                ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n            },\n\n            highlightStatus: function (status) {\n                this.$(`.status-values li[data-value=\"${status}\"]`).addClass('active')\n                    .siblings().removeClass('active');\n                this.updateIcons();\n            },\n\n            getStatuses: function () {\n                let iq_get_properties = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'get'})\n                    .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`});\n                this.account.sendFast(iq_get_properties, (properties) => {\n                    this.data_form = this.account.parseDataForm($(properties).find('x[xmlns=\"' + Strophe.NS.DATAFORM + '\"]'));\n                    let status_field = this.data_form.fields.find(field => field.var == 'status'),\n                        options = (this.data_form.fields.find(field => field.var == 'status') || []).options || [];\n                    if (!options.length || status_field.type == 'fixed') {\n                        this.closeModal();\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        return;\n                    }\n                    this.renderStatuses(options);\n                }, () => {\n                    this.closeModal();\n                    utils.dialogs.error(xabber.getString(\"set_group_status__error__service_unavailable\"));\n                    return;\n                });\n            },\n\n            renderStatuses: function (options) {\n                this.$('.status-values').html(\"\");\n                options.forEach((option) => {\n                    let status = option,\n                        status_field = this.data_form.fields.find(f => f.var == status.value);\n                    if (status_field)\n                        status.show = status_field.values[0];\n                    else\n                        status.show = status.value;\n                    let $status_item = $(templates.group_chats.status_item({status}));\n                    this.$('.status-values').append($status_item);\n                });\n                this.highlightStatus(this.contact.get('status'));\n            },\n\n            changeStatus: function (ev) {\n                let status = $(ev.target).closest('li').data('value');\n                this.highlightStatus(status);\n                this.do_change();\n                this.closeModal();\n            },\n\n            do_change: function () {\n                let status = this.$('.status-values li.active').data('value');\n                this.setStatus(status);\n            },\n\n            render: function () {\n                this.$el.openModal({\n                    complete: this.close.bind(this)\n                });\n            },\n\n            setStatus: function (status) {\n                if (!this.data_form || this.contact.get('group_info').status === status)\n                    return;\n                let iq_set_status = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                        .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`}),\n                    status_field = this.data_form.fields.find(field => field.var === 'status'),\n                    idx = this.data_form.fields.indexOf(status_field);\n                status_field.values = [status];\n                this.data_form.fields[idx] = status_field;\n                iq_set_status = this.account.addDataFormToStanza(iq_set_status, this.data_form);\n                this.account.sendFast(iq_set_status);\n            },\n\n            onHide: function () {\n                this.$el.detach();\n            },\n\n            close: function () {\n                let value = this.$('.status-message').val();\n                if (!value)\n                    this.do_change();\n                this.closeModal();\n            },\n\n            closeModal: function () {\n                this.$el.closeModal({ complete: this.hide.bind(this) });\n            }\n        });\n\n        xabber.ContactItemView = xabber.BasicView.extend({\n            className: 'roster-contact list-item',\n\n            _initialize: function (options) {\n                this.account = this.model.account;\n                this.$el.attr({'data-id': uuid(), 'data-jid': this.model.get('jid')});\n                this.$('.jid').text(this.model.get('jid'));\n                this.interval_last;\n                this.updateName();\n                this.updateStatus();\n                this.updateAvatar();\n                this.selectView();\n                this.updateGroupChat();\n                this.updateIcon();\n                this.model.on(\"change:name\", this.updateName, this);\n                this.model.on(\"change:image\", this.updateAvatar, this);\n                this.model.on(\"change:status_updated\", this.updateStatus, this);\n                this.model.on(\"change:subscription\", this.updateStatus, this);\n                this.model.on(\"change:subscription_preapproved\", this.updateStatus, this);\n                this.model.on(\"change:subscription_request_in\", this.updateStatus, this);\n                this.model.on(\"change:subscription_request_out\", this.updateStatus, this);\n                this.model.on(\"change:private_chat\", this.updateIcon, this);\n                this.model.on(\"change:incognito_chat\", this.updateIcon, this);\n                this.model.on(\"change:bot\", this.updateIcon, this);\n                this.model.on(\"change:blocked\", this.onBlocked, this);\n                this.model.on(\"change:status_message\", this.updateStatusMsg, this);\n                this.model.on(\"change:last_seen\", this.lastSeenUpdated, this);\n                this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n            },\n\n            updateName: function () {\n                this.$('.name').text(this.model.get('name'));\n            },\n\n            updateAvatar: function () {\n                this.$('.circle-avatar').setAvatar(this.model.cached_image, this.avatar_size);\n            },\n\n            updateStatus: function () {\n                this.$('.status').attr('data-status', this.model.get('status'));\n                this.$('.chat-icon').attr('data-status', this.model.get('status'));\n                this.$('.status-message').text(this.model.getStatusMessage());\n                if (this.model.get('status') == 'offline') {\n                    if (!Strophe.getNodeFromJid(this.model.get('jid'))) {\n                        this.model.set({status_message: 'Server'});\n                        return;\n                    }\n                    if (this.model.get('last_seen')) {\n                    let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                        new_status = xabber.pretty_last_seen(seconds);\n                    this.model.set({ status_message: new_status });\n                    }\n                }\n            },\n\n            onBlocked: function () {\n                this.updateIcon();\n                this.$el.switchClass('blocked', this.model.get('blocked'));\n            },\n\n            selectView: function () {\n                if (this.model.get('group_chat')) {\n                    this.$('.private-chat').addClass('hidden');\n                    this.$('.group_chat').removeClass('hidden');\n                }\n            },\n\n            lastSeenUpdated: function () {\n                if (this.model.get('status') == 'offline' && this.model.get('last_seen') && _.isUndefined(this.interval_last)) {\n                    this.interval_last = setInterval(() => {\n                        let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                            new_status = xabber.pretty_last_seen(seconds);\n                        this.model.set({ status_message: new_status });\n                    }, 60000);\n                }\n                else\n                {\n                    clearInterval(this.interval_last);\n                }\n            },\n\n            updateGroupChat: function () {\n                let is_group_chat = this.model.get('group_chat');\n                this.$('.status').hideIf(is_group_chat);\n                this.updateIcon();\n            },\n\n            updateIcon: function () {\n                let ic_name = this.model.getIcon();\n                this.$('.chat-icon').addClass('hidden');\n                if (this.model.get('invitation'))\n                    return;\n                ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n            },\n\n            updateStatusMsg: function() {\n                this.$('.status-message').text(this.model.getStatusMessage());\n            }\n        });\n\n        xabber.ContactItemRightView = xabber.ContactItemView.extend({\n            template: templates.contact_right_item,\n            avatar_size: constants.AVATAR_SIZES.CONTACT_RIGHT_ITEM,\n\n            events: {\n                \"click\": \"clickOnItem\",\n                \"mouseover\": \"showJid\",\n                \"mouseleave\": \"hideJid\",\n            },\n\n            showJid: function () {\n                if (this.$('.name').text() !== this.model.get('jid')) {\n                    this.$('.status-message').addClass('hidden');\n                    this.$('.jid').removeClass('hidden');\n                }\n            },\n\n            hideJid: function () {\n                this.$('.jid').addClass('hidden');\n                this.$('.status-message').removeClass('hidden');\n            },\n\n            clickOnItem: function () {\n                this.model.trigger(\"open_chat\", this.model);\n            }\n        });\n\n        xabber.ContactItemLeftView = xabber.ContactItemView.extend({\n            template: templates.contact_left_item,\n            avatar_size: constants.AVATAR_SIZES.CONTACT_LEFT_ITEM,\n\n            events: {\n                \"click\": \"clickOnItem\"\n            },\n\n            __initialize: function () {\n                this.updateDisplayStatus();\n                this.updateBlockedState();\n                this.updateMutedState();\n                this.updateGroupChat();\n                this.model.on(\"change:display\", this.updateDisplayStatus, this);\n                this.model.on(\"change:blocked\", this.updateBlockedState, this);\n                this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n            },\n\n            updateDisplayStatus: function () {\n                this.$el.switchClass('active', this.model.get('display'));\n            },\n\n            updateBlockedState: function () {\n                this.$el.switchClass('blocked', this.model.get('blocked'));\n            },\n            updateMutedState: function () {\n                this.$('.muted-icon').hide();\n            },\n\n            clickOnItem: function () {\n                let options = {};\n                (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n                this.model.trigger(\"open_chat\", this.model, options);\n            }\n        });\n\n        xabber.ContactResources = xabber.Resources.extend({\n            initialize: function (models, options) {\n                this.contact = options.contact;\n                this.jid = options.contact.get('jid');\n                this.connection = options.contact.account.connection;\n                this.on(\"add change\", this.onResourceUpdated, this);\n                this.on(\"remove\", this.onResourceRemoved, this);\n            },\n\n            onResourceUpdated: function (resource) {\n                if (resource === this.first()) {\n                    this.contact.set({\n                        status_updated: moment.now(),\n                        status: resource.get('status'),\n                        status_message: resource.get('status_message')\n                    });\n                }\n            },\n\n            onResourceRemoved: function () {\n                let attrs = {status_updated: moment.now()};\n                if (this.length) {\n                    attrs.status = this.first().get('status');\n                    attrs.status_message = this.first().get('status_message');\n                } else {\n                    attrs.status = 'offline';\n                    attrs.status_message = '';\n                }\n                this.contact.set(attrs);\n            }\n        });\n\n        xabber.ContactResourcesView = xabber.ResourcesView.extend({\n            onResourceAdded: function (resource) {\n                this.addChild(resource.get('resource'),\n                    xabber.ResourceView, {model: resource});\n                this.updatePosition(resource);\n                this.$el.removeClass('hidden');\n                this.parent.updateScrollBar();\n            },\n\n            onResourceRemoved: function (resource) {\n                this.removeChild(resource.get('resource'));\n                this.$el.showIf(this.model.length);\n                this.parent.updateScrollBar();\n            },\n\n            onReset: function () {\n                this.removeChildren();\n                this.$el.addClass('hidden');\n                this.parent.updateScrollBar();\n            },\n\n            updatePosition: function (resource) {\n                let view = this.child(resource.get('resource'));\n                if (!view) return;\n                view.$el.detach();\n                let index = this.model.indexOf(resource);\n                if (index === 0) {\n                    this.$('.resources-wrap').prepend(view.$el);\n                } else {\n                    this.$('.resource-wrap').eq(index - 1).after(view.$el);\n                }\n                this.updateScrollBar();\n            }\n        });\n\n        xabber.ContactResourcesRightView = xabber.ResourcesView.extend({\n            className: 'modal main-modal resource-modal',\n\n            _initialize: function () {\n                this.model.on(\"remove\", this.onResourceRemoved, this);\n                this.model.on(\"reset\", this.onReset, this);\n                this.model.on(\"change:priority\", this.onPriorityChanged, this);\n            },\n\n            renderByInit: function () {\n                this.model.each((resource) => {\n                    this.onResourceAdded(resource);\n                });\n            },\n\n            open: function () {\n                if (this.model.length) {\n                    this.$el.openModal({\n                        ready: () => {\n                            this.$el.html('<svg class=\"details-icon mdi mdi-24px \"></svg><div class=\"resources-wrap\"></div>')\n                            this.$el.find('.details-icon').html(env.templates.svg['ic-jabber']())\n                            this.renderByInit();\n                        },\n                        // complete: () => {\n                        //     this.$el.detach();\n                        //     this.data.set('visible', false);\n                        // }\n                    });\n                }\n            },\n\n            onResourceAdded: function (resource) {\n                this.model.requestInfo(resource);\n                this.addChild(resource.get('resource'),\n                    xabber.ResourceRightView, {model: resource});\n                this.updatePosition(resource);\n                this.$el.removeClass('hidden');\n            },\n\n            onResourceRemoved: function (resource) {\n                this.removeChild(resource.get('resource'));\n                this.$el.showIf(this.model.length);\n            },\n\n            onReset: function () {\n                this.removeChildren();\n                this.$el.addClass('hidden');\n            },\n\n            updatePosition: function (resource) {\n                let view = this.child(resource.get('resource'));\n                if (!view) return;\n                view.$el.detach();\n                let index = this.model.indexOf(resource);\n                if (index === 0) {\n                    this.$('.resources-wrap').prepend(view.$el);\n                } else {\n                    this.$('.resource-wrap').eq(index - 1).after(view.$el);\n                }\n                this.updateScrollBar();\n            }\n        });\n\n        xabber.ContactVCardView = xabber.VCardView.extend({\n            events: {\n                \"click .btn-vcard-refresh\": \"refresh\",\n                \"click .details-icon\": \"onClickIcon\"\n            }\n        });\n\n        xabber.ContactRightVCardView = xabber.VCardRightView.extend({\n            events: {\n                \"click .btn-vcard-refresh\": \"refresh\",\n                \"click .info-hover\": \"onClickIcon\",\n                \"click .info-wrap.more\": \"showVCard\",\n                \"click .btn-back\": \"hideVCard\"\n            },\n\n\n            showVCard: function (ev) {\n                this.model.set('vcard_hidden', false);\n                this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n                this.model.getVCard(() => {\n                    this.updateName()\n                    this.update();\n                });\n                this.parent.$('.main-info').removeClass('fixed-scroll');\n                this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n                this.parent.scrollToTop();\n                if (this.parent.ps_container.length) {\n                    this.parent.ps_container.perfectScrollbar('destroy')\n                }\n            },\n\n            hideVCard: function (ev) {\n                this.model.set('vcard_hidden', true);\n                if (this.parent.ps_container.length) {\n                    this.parent.ps_container.perfectScrollbar(\n                        _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                    );\n                }\n                this.scrollToTop();\n                this.onScroll();\n                this.parent.onScroll();\n                this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n            },\n\n            updateName: function () {\n                this.$('.main-info .name-wrap').text(this.model.get('name'));\n                if (this.model.get('name') != this.model.get('roster_name'))\n                    this.$('.main-info .name-wrap').addClass('name-is-custom');\n                else\n                    this.$('.main-info .name-wrap').removeClass('name-is-custom');\n            },\n        });\n\n        xabber.ContactDetailsView = xabber.BasicView.extend({\n            className: 'details-panel contact-details-panel',\n            template: templates.contact_details,\n            ps_selector: '.panel-content-wrap',\n            avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n            events: {\n                \"click .btn-escape\": \"openChat\",\n                \"click .btn-chat\": \"openChat\",\n                \"click .btn-voice-call\": \"voiceCall\",\n                \"click .btn-add\": \"addContact\",\n                \"click .btn-delete\": \"deleteContact\",\n                \"click .btn-block\": \"blockContact\",\n                \"click .btn-qr-code\": \"showQRCode\",\n                \"click .btn-unblock\": \"unblockContact\",\n                \"click .btn-mute\": \"changeNotifications\",\n                \"click .btn-auth-request\": \"requestAuthorization\",\n                \"change .subscription-info-wrap input\": \"onChangedSubscription\"\n            },\n\n            _initialize: function () {\n                this.account = this.model.account;\n                this.name_field = new xabber.ContactNameWidget({\n                    el: this.$('.name-wrap')[0],\n                    model: this.model\n                });\n                this.resources_view = this.addChild('resources',\n                    xabber.ContactResourcesView, {model: this.model.resources,\n                        el: this.$('.resources-block-wrap')[0]});\n                this.vcard_view = this.addChild('vcard', xabber.ContactVCardView,\n                    {model: this.model, el: this.$('.vcard')[0]});\n                this.edit_groups_view = this.addChild('groups',\n                    xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n                this.updateName();\n                this.updateStatus();\n                this.updateAvatar();\n                this.updateButtons();\n                this.model.on(\"change\", this.update, this);\n                xabber.on(\"change:video\", this.updateJingleButtons, this);\n                xabber.on(\"change:audio\", this.updateJingleButtons, this);\n            },\n\n            render: function (options) {\n                if (!this.model.get('vcard_updated')) {\n                    this.vcard_view.refresh();\n                }\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'right'\n                };\n                this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n                this.updateSubscriptions();\n                this.updateJingleButtons();\n                this.updateStatusMsg();\n                this.updateName();\n                this.setButtonsWidth();\n                this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n            },\n\n            setButtonsWidth: function () {\n                let widths = [];\n                this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n                this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n            },\n\n            onChangedVisibility: function () {\n                this.model.set('display', this.isVisible());\n            },\n\n            updateJingleButtons: function () {\n                this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n            },\n\n            update: function () {\n                let changed = this.model.changed;\n                if (_.has(changed, 'name')) this.updateName();\n                if (_.has(changed, 'image')) this.updateAvatar();\n                if (_.has(changed, 'status_updated')) this.updateStatus();\n                // if (_.has(changed, 'muted')) this.updateNotifications();\n                if (_.has(changed, 'subscription')) this.updateSubscriptions();\n                if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n                if (_.has(changed, 'blocked')) this.updateStatusMsg();\n                if (_.has(changed, 'status_message')) this.updateStatusMsg();\n                if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n                    _.has(changed, 'subscription')) {\n                    this.updateButtons();\n                }\n            },\n\n            updateName: function () {\n                this.$('.main-info .contact-name').text(this.model.get('name'));\n                if (this.model.get('name') != this.model.get('roster_name'))\n                    this.$('.main-info .contact-name').addClass('name-is-custom');\n                else\n                    this.$('.main-info .contact-name').removeClass('name-is-custom');\n            },\n\n            updateStatus: function () {\n                this.$('.main-info .status').attr('data-status', this.model.get('status'));\n                this.$('.main-info .status-message').text(this.model.getStatusMessage());\n            },\n\n            updateStatusMsg: function () {\n                this.$('.main-info .status-message').text(this.model.getStatusMessage());\n            },\n\n            updateAvatar: function () {\n                let image = this.model.cached_image;\n                this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n            },\n\n            updateButtons: function () {\n                let in_roster = this.model.get('in_roster'),\n                    is_blocked = this.model.get('blocked'),\n                    is_server = this.model.get('server'),\n                    subscription = this.model.get('subscription');\n                this.$('.btn-add').hideIf(in_roster);\n                this.$('.btn-delete').showIf(in_roster);\n                this.$('.btn-block-wrap i').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n                this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n                this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap)').switchClass('non-active', is_blocked);\n                this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n                    subscription !== 'both' && subscription !== 'to');\n            },\n\n            // updateNotifications: function () {\n            //     let chat = this.account.chats.getChat(this.model);\n            //     this.$('.btn-mute').switchClass('mdi-bell-off', chat.get('muted'));\n            //     this.$('.btn-mute').switchClass('mdi-bell', !chat.get('muted'));\n            // },\n\n            showQRCode: function () {\n                let qrcode = new VanillaQR({\n                    url: 'xmpp:' + this.model.get('jid'),\n                    noBorder: true\n                });\n                utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n                });\n            },\n\n            updateSubscriptions: function () {\n                let subscription = this.model.get('subscription'),\n                    in_request = this.model.get('subscription_request_in'),\n                    out_request = this.model.get('subscription_request_out'),\n                    $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n                    $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n                if (subscription === 'both') {\n                    $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n                    $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n                } else if (subscription === 'from') {\n                    $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n                    $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n                } else if (subscription === 'to') {\n                    $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n                    $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n                }\n                else if (!subscription || subscription === 'none') {\n                    $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n                    $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n                }\n                if (in_request && subscription !== 'both') {\n                    $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n                }\n                if (out_request) {\n                    $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n                }\n            },\n\n            onChangedSubscription: function (ev) {\n                let contact = this.model,\n                    $target = $(ev.target),\n                    is_checked = $target.prop('checked');\n                if (is_checked) {\n                    if ($target.attr('id') === \"outcoming-subscription\")\n                        contact.askRequest();\n                    else {\n                        contact.set('subscription_preapproved', true);\n                        contact.acceptRequest();\n                    }\n                }\n                else {\n                    if ($target.attr('id') === \"outcoming-subscription\")\n                        contact.declineSubscription();\n                    else\n                        contact.declineSubscribe();\n                }\n            },\n\n            openChat: function (ev) {\n                if (ev && ($(ev.target).closest('.button-wrap').hasClass('non-active') || $(ev.target).closest('.button-wrap').length && this.model.get('blocked')))\n                    return;\n                let options = {};\n                (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n                this.model.trigger(\"open_chat\", this.model, options);\n            },\n\n            voiceCall: function (ev) {\n                if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n                    return;\n                if (xabber.get('audio'))\n                    this.initCall(ev);\n            },\n\n            initCall: function () {\n                if (xabber.current_voip_call) {\n                    utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n                    return;\n                }\n                this.openChat();\n                let chat = this.account.chats.getChat(this.model);\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.initJingleMessage();\n            },\n\n            deleteContact: function () {\n                this.model.deleteWithDialog();\n            },\n\n            blockContact: function () {\n                this.model.blockWithDialog();\n            },\n\n            unblockContact: function () {\n                this.model.unblockWithDialog();\n            },\n\n            changeNotifications: function (ev) {\n                if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n                    return\n                let chat = this.account.chats.getChat(this.model);\n                chat.muteChat();\n            },\n\n            addContact: function () {\n                xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n            },\n\n            requestAuthorization: function () {\n                this.model.pres('subscribe');\n                this.model.trigger('presence', this.model, 'subscribe_from');\n                this.openChat();\n            }\n        });\n\n        xabber.ContactDetailsViewRight = xabber.ContactDetailsView.extend({\n            className: 'details-panel-right contact-details-panel',\n            template: templates.contact_details_right,\n            avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n            events: {\n                \"click .btn-escape:not(.btn-top)\": \"openChat\",\n                \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n                \"click .btn-edit\": \"showEdit\",\n                \"click .btn-chat\": \"openChat\",\n                \"click .panel-background-clickable\": \"openChat\",\n                \"click .btn-search\": \"showSearchMessages\",\n                \"click .btn-voice-call\": \"voiceCall\",\n                \"click .btn-add\": \"addContact\",\n                \"click .btn-delete\": \"deleteContact\",\n                \"click .btn-block\": \"blockContact\",\n                \"click .btn-qr-code\": \"showQRCode\",\n                \"click .btn-unblock\": \"unblockContact\",\n                \"click .btn-mute-dropdown\": \"muteChat\",\n                \"click .btn-mute.muted\": \"unmuteChat\",\n                \"click .list-variant\": \"changeList\",\n                \"click .btn-auth-request\": \"requestAuthorization\",\n            },\n\n            _initialize: function (options) {\n                this.encrypted = options.encrypted;\n                this.ps_container = this.$('.panel-content-wrap');\n                this.account = this.model.account;\n                this.chat = this.account.chats.getChat(this.model, options.encrypted && 'encrypted');\n                this.name_field = new xabber.ContactNameWidget({\n                    el: this.$('.name-wrap')[0],\n                    model: this.model\n                });\n                this.name_field.$('.contact-name-input').prop('disabled', true)\n                if (!this.encrypted){\n                    this.contact_edit_view = this.addChild('edit', xabber.ContactEditView,\n                        {model: this.model, el: this.$('.edit-block-wrap')[0]});\n                }\n                this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n                    {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n                this.vcard_view = this.addChild('vcard', xabber.ContactRightVCardView,\n                    {model: this.model, el: this.$('.vcard')[0]});\n                this.edit_groups_view = this.addChild('groups',\n                    xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n                this.updateName();\n                this.updateStatus();\n                this.updateAvatar();\n                this.updateButtons();\n                this.updateColorScheme();\n                this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n                this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n                this.model.on(\"change\", this.update, this);\n                this.chat.on(\"change:muted\", this.updateNotifications, this);\n                xabber.on(\"change:video\", this.updateJingleButtons, this);\n                xabber.on(\"change:audio\", this.updateJingleButtons, this);\n            },\n\n            render: function (options) {\n                if (!this.model.get('vcard_updated')) {\n                    this.vcard_view.refresh();\n                }\n                if (!this.model.get('saved_search_panel')) {\n                    if (this.ps_container.length) {\n                        this.ps_container.perfectScrollbar(\n                            _.extend(this.ps_settings || {}, xabber.ps_settings)\n                        );\n                    }\n                }\n                else {\n                    this.ps_container.perfectScrollbar('destroy');\n                }\n                this.$('.btn-mute').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    hover: false\n                });\n                if (this.encrypted){\n                    this.$('.btn-search-messages').remove()\n                    this.$('.btn-edit').remove()\n                    this.$('.btn-qr-code').remove()\n                }\n                this.updateChilds();\n                this.updateSubscriptions();\n                this.updateJingleButtons();\n                this.updateStatusMsg();\n                this.updateName();\n                this.updateNotifications();\n                this.setButtonsWidth();\n                this.updateList('image');\n                xabber.once(\"update_css\", this.updateIndicator, this);\n                this.onScroll();\n                this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n                $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n            },\n\n            updateChilds: function () {\n                if (this.vcard_view && !this.model.get('vcard_hidden'))\n                    this.vcard_view.hideVCard();\n                if (this.contact_edit_view && !this.model.get('edit_hidden'))\n                    this.contact_edit_view.hideEdit();\n            },\n\n            updateIndicator: function () {\n                this.$('.tabs .indicator').remove();\n                this.$('.tabs').tabs();\n                this.$('.indicator').addClass('ground-color-500');\n            },\n\n\n            keydownHandler: function (ev) {\n                if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n                    this.model.showDetailsRight('all-chats');\n                    $(window).unbind(\"keydown.contact_panel\");\n                }\n            },\n\n            openChat: function (ev) {\n                this.model.showDetailsRight('all-chats');\n            },\n\n            updateColorScheme: function () {\n                this.$el.attr('data-color', this.account.settings.get('color'));\n            },\n\n            scrollToTopSmooth: function () {\n                this.ps_container.animate(\n                    {scrollTop: 0},\n                    400,\n                    () => {\n                        this.onScroll();\n                    });\n            },\n\n            setButtonsWidth: function () {\n                let widths = [];\n                this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n                this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n            },\n\n            onChangedVisibility: function () {\n                this.model.set('display', this.isVisible());\n            },\n\n            updateJingleButtons: function () {\n                this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n            },\n\n            update: function () {\n                let changed = this.model.changed;\n                if (_.has(changed, 'name')) this.updateName();\n                if (_.has(changed, 'image')) this.updateAvatar();\n                if (_.has(changed, 'status_updated')) this.updateStatus();\n                if (_.has(changed, 'subscription')) this.updateSubscriptions();\n                if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n                if (_.has(changed, 'blocked')) this.updateStatusMsg();\n                if (_.has(changed, 'status_message')) this.updateStatusMsg();\n                if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n                    _.has(changed, 'subscription')) {\n                    this.updateButtons();\n                }\n            },\n\n            updateName: function () {\n                this.$('.main-info .name-wrap').text(this.model.get('name'));\n                if (this.model.get('roster_name') && this.model.get('name') != this.model.get('roster_name'))\n                    this.$('.main-info .name-wrap').addClass('name-is-custom');\n                else\n                    this.$('.main-info .name-wrap').removeClass('name-is-custom');\n            },\n\n            onScroll: function () {\n                if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n                    this.ps_container.perfectScrollbar('destroy');\n                    return true;\n                }\n                let bottom_block_scroll;\n                if (this.$('.bottom-block:not(.edit-bottom-block)'))\n                    bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block)').get(0).getBoundingClientRect().top;\n\n                if(this.ps_container[0].scrollTop >= 200) {\n                    this.$('.header-buttons').css({'background-color': 'rgba(255,255,255,1)'});\n                    this.$('.main-info').addClass('fixed-scroll');\n                    this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n                    this.$('.block-wrap.vcard').css({'padding-top': '340px'})\n                    this.$('.main-info .block-name:not(.second-text)').removeClass('fade-out');\n                    this.$('.main-info .block-name.second-text').addClass('fade-out');\n                }\n                else if(this.ps_container[0].scrollTop >= 40) {\n                    this.$('.header-buttons').css({'background-color': 'rgba(255,255,255,0.5)'});\n                    this.$('.main-info').removeClass('fixed-scroll');\n                    this.$('.block-wrap.vcard').css({'padding-top': '0'});\n                    this.$('.main-info .block-name').addClass('fade-out');\n                }\n                else{\n                    this.$('.header-buttons').css({'background-color': 'rgba(255,255,255,0)'});\n                    this.$('.main-info').removeClass('fixed-scroll');\n                    this.$('.block-wrap.vcard').css({'padding-top': '0'});\n                    this.$('.main-info .block-name').addClass('fade-out');\n                }\n                if (bottom_block_scroll && bottom_block_scroll < 150) {\n                    this.$('.bottom-block:not(.edit-bottom-block) .tabs').addClass('fixed-scroll');\n                    this.$('.btn-escape').addClass('btn-top');\n                    this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n                    this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').addClass('fixed-scroll');\n                    this.$('.buttons-wrap').hideIf(true);\n                    this.$('.btn-edit').hideIf(true);\n                    this.$('.btn-qr-code').hideIf(true);\n                    this.$('.main-info .block-name:not(.second-text)').addClass('fade-out');\n                    this.$('.main-info .block-name.second-text').removeClass('fade-out');\n                    this.$('.main-info .block-name.second-text').text(this.$('.list-variant .active').text())\n                }\n                else {\n                    this.$('.btn-escape').removeClass('btn-top');\n                    this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n                    this.$('.bottom-block:not(.edit-bottom-block) .tabs').removeClass('fixed-scroll');\n                    this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n                    this.$('.buttons-wrap').hideIf(false);\n                    this.$('.btn-edit').hideIf(false);\n                    this.$('.btn-qr-code').hideIf(false);\n                }\n            },\n\n            updateStatus: function () {\n                this.$('.main-info .status').attr('data-status', this.model.get('status'));\n                this.$('.main-info .status-message').text(this.model.getStatusMessage());\n            },\n\n            updateStatusMsg: function () {\n                this.$('.main-info .status-message').text(this.model.getStatusMessage());\n            },\n\n            updateAvatar: function () {\n                let image = this.model.cached_image;\n                this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n            },\n\n            updateButtons: function () {\n                let in_roster = this.model.get('in_roster'),\n                    is_blocked = this.model.get('blocked'),\n                    is_server = this.model.get('server'),\n                    subscription = this.model.get('subscription');\n                this.$('.btn-add').hideIf(in_roster);\n                this.$('.btn-block-wrap .contact-btn').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n                this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n                this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap):not(.btn-search-messages)').switchClass('non-active', is_blocked);\n                this.$('.contact-mute-dropdown').hideIf(is_blocked);\n                this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n                    subscription !== 'both' && subscription !== 'to');\n            },\n\n            updateNotifications: function () {\n                if (this.chat.isMuted()) {\n                    if (this.chat.isMuted() > 4800000000)\n                        this.$('.btn-mute').html(env.templates.svg['bell-off']());\n                    else\n                        this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n                    this.$('.btn-mute').addClass('muted').addClass('active')\n                }\n                else {\n                    this.$('.btn-mute').html(env.templates.svg['bell']());\n                    this.$('.btn-mute').removeClass('muted')\n                }\n                this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n                this.$('.btn-unmute-dropdown').hideIf(!this.chat.isMuted());\n            },\n\n            showQRCode: function () {\n                let qrcode = new VanillaQR({\n                    url: 'xmpp:' + this.model.get('jid'),\n                    noBorder: true\n                });\n                utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n                });\n            },\n\n            updateSubscriptions: function () {\n                let subscription = this.model.get('subscription'),\n                    in_request = this.model.get('subscription_request_in'),\n                    out_request = this.model.get('subscription_request_out'),\n                    $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n                    $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n                if (subscription === 'both') {\n                    $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n                    $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n                } else if (subscription === 'from') {\n                    $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n                    $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n                } else if (subscription === 'to') {\n                    $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n                    $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n                }\n                else if (!subscription || subscription === 'none') {\n                    $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n                    $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n                }\n                if (in_request && subscription !== 'both') {\n                    $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n                }\n                if (out_request) {\n                    $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n                }\n            },\n\n            showEdit: function (ev) {\n                this.contact_edit_view.showEdit();\n            },\n\n            voiceCall: function (ev) {\n                if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n                    return;\n                if (xabber.get('audio'))\n                    this.initCall(ev);\n            },\n\n            initCall: function () {\n                if (xabber.current_voip_call) {\n                    utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n                    return;\n                }\n                let chat = this.account.chats.getChat(this.model);\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.initJingleMessage();\n            },\n\n            deleteContact: function () {\n                this.model.deleteWithDialog();\n            },\n\n            blockContact: function () {\n                this.model.blockWithDialog();\n            },\n\n            unblockContact: function () {\n                this.model.unblockWithDialog();\n            },\n\n            muteChat: function (ev) {\n                if (this.model.get('blocked'))\n                    return;\n                let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n                    muted_seconds;\n                if (mute_type === 'minutes15')\n                    muted_seconds = 900\n                if (mute_type === 'hours1')\n                    muted_seconds = 3600\n                if (mute_type === 'hours2')\n                    muted_seconds = 7200\n                if (mute_type === 'day')\n                    muted_seconds = 86400\n                if (mute_type === 'forever')\n                    muted_seconds = 0\n                this.chat.muteChat(muted_seconds);\n            },\n\n            unmuteChat: function (ev) {\n                if (this.model.get('blocked'))\n                    return;\n                this.chat.muteChat('');\n            },\n\n            showSearchMessages: function (ev) {\n                this.scrollToTop();\n                if (this.ps_container.length) {\n                    this.ps_container.perfectScrollbar('destroy');\n                }\n                this.model.set('search_hidden', false);\n                this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n                this.contact_searched_messages_view.$search_form.find('input').focus();\n            },\n\n            addContact: function () {\n                xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n            },\n\n            changeList: function (ev) {\n                let $target = $(ev.target).closest('.list-variant'),\n                    list_name = $target.data('value');\n                this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n                this.ps_container.animate(\n                    {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop()-110},\n                    200,\n                    () => {\n                        this.onScroll();\n                        this.ps_container.animate(\n                            {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop()-110},\n                            0,\n                        );\n                });\n                this.$('.header-buttons .block-name.second-text').text($target.text())\n                this.updateList(list_name);\n            },\n\n            updateList: function (name) {\n                let view = this.child(name);\n                !view && (view = this.addList(name));\n                if (view) {\n                    this.$('.tabs .list-variant a').removeClass('active');\n                    this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n                    view._render();\n                }\n            },\n\n            addList: function (name) {\n                let constructor_func;\n                switch (name) {\n                    case 'image':\n                        constructor_func = xabber.MediaImagesView;\n                        break;\n                    case 'video':\n                        constructor_func = xabber.MediaVideosView;\n                        break;\n                    case 'files':\n                        constructor_func = xabber.MediaFilesView;\n                        break;\n                    case 'voice':\n                        constructor_func = xabber.MediaVoiceView;\n                        break;\n                };\n                if (constructor_func)\n                    return this.addChild(name, constructor_func, {model: this.model, encrypted: this.encrypted, el: this.$('.participants-wrap')[0]});\n                else\n                    return;\n            },\n\n            requestAuthorization: function () {\n                this.model.pres('subscribe');\n                this.model.trigger('presence', this.model, 'subscribe_from');\n                this.openChat();\n            }\n        });\n\n        xabber.GroupChatDetailsView = xabber.BasicView.extend({\n            className: 'details-panel groupchat-details-panel',\n            template: templates.group_chats.group_chat_details,\n            ps_selector: '.panel-content-wrap',\n            avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n            member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n            events: {\n                \"click .btn-mute\": \"changeNotifications\",\n                \"click .btn-qr-code\": \"showQRCode\",\n                \"click .btn-leave\": \"leaveGroupChat\",\n                \"click .btn-invite\": \"inviteUser\",\n                \"click .btn-delete-group\": \"deleteGroup\",\n                \"click .btn-edit-settings\": \"editProperties\",\n                \"click .btn-default-restrictions\": \"editDefaultRestrictions\",\n                \"click .btn-chat\": \"openChat\",\n                \"click .btn-escape\": \"openChat\",\n                \"click .btn-clear-history\": \"retractAllMessages\",\n                \"change .circle-avatar input\": \"changeAvatar\",\n                \"click .list-variant\": \"changeList\"\n            },\n\n            _initialize: function () {\n                this.account = this.model.account;\n                this.name_field = new xabber.ContactNameWidget({\n                    el: this.$('.name-wrap')[0],\n                    model: this.model\n                });\n                this.participants = this.addChild('participants', xabber.ParticipantsView, {model: this.model, el: this.$('.participants-wrap')[0]});\n                this.edit_groups_view = this.addChild('groups',\n                    xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n                this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesView, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n                this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusView, {model:this.model, el: this.$('.status-block-wrap')[0]});\n                this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n                this.default_restrictions_edit = new xabber.DefaultRestrictionsView({model: this.model});\n                this.updateName();\n                this.updateStatus();\n                this.updateAvatar();\n                this.updateColorScheme();\n                this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n                this.model.on(\"change\", this.update, this);\n                this.model.on(\"permissions_changed\", this.updateButtons, this);\n                this.model.on(\"change:subscription\", this.updateButtons, this);\n            },\n\n            render: function () {\n                this.updateName();\n                this.updateButtons();\n                if (!this.model.my_rights)\n                    this.model.getMyInfo(() => {\n                        this.updateButtons();\n                    });\n                this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n                this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'right'\n                };\n                this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n                this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n                this.updateList('participants');\n                this.$('.tabs .indicator').remove();\n                this.$('.tabs').tabs();\n                this.$('.indicator').addClass('ground-color-500');\n                this.setButtonsWidth();\n                return this;\n            },\n\n            update: function () {\n                let changed = this.model.changed;\n                if (_.has(changed, 'name')) this.updateName();\n                if (_.has(changed, 'image')) this.updateAvatar();\n                // if (_.has(changed, 'muted')) this.updateNotifications();\n                if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n            },\n\n            updateColorScheme: function () {\n                this.$el.attr('data-color', this.account.settings.get('color'));\n            },\n\n            setButtonsWidth: function () {\n                let widths = [];\n                this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n                this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n            },\n\n            updateButtons: function () {\n                let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n                    change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n                    is_blocked = this.model.get('blocked');\n                this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n                this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n                this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n                this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n                this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n                this.$('.btn-block').hideIf(is_blocked);\n                this.$('.btn-unblock').showIf(is_blocked);\n            },\n\n            updateName: function () {\n                this.$('.main-info .contact-name').text(this.model.get('name'));\n                if (this.model.get('name') != this.model.get('roster_name'))\n                    this.$('.main-info .contact-name').addClass('name-is-custom');\n                else\n                    this.$('.main-info .contact-name').removeClass('name-is-custom');\n            },\n\n            changeNotifications: function (ev) {\n                if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n                    return;\n                let chat = this.account.chats.getChat(this.model);\n                chat.muteChat();\n            },\n\n            // updateNotifications: function () {\n            //     let chat = this.account.chats.getChat(this.model);\n            //     this.$('.btn-mute').switchClass('mdi-bell-off', chat.get('muted'));\n            //     this.$('.btn-mute').switchClass('mdi-bell', !chat.get('muted'));\n            // },\n\n            showQRCode: function () {\n                let qrcode = new VanillaQR({\n                    url: 'xmpp:' + this.model.get('jid'),\n                    noBorder: true\n                });\n                utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n                });\n            },\n\n            editProperties: function (ev) {\n                if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                        let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                            .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                        this.account.sendIQFast(iq_get_properties, (properties) => {\n                            let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                            this.group_chat_properties_edit.open(data_form);\n                        }, () => {\n                            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                        });\n                }\n            },\n\n            editDefaultRestrictions: function (ev) {\n                if (!$(ev.target).closest('.button-wrap').hasClass('non-active'))\n                    this.default_restrictions_edit.open();\n            },\n\n            leaveGroupChat: function (ev) {\n                if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n                    return;\n                let contact = this.model;\n                utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n                    if (result) {\n                        contact.declineSubscription();\n                        contact.removeFromRoster();\n                        let chat = this.account.chats.getChat(contact);\n                        chat.deleteFromSynchronization(() => {\n                            chat.trigger(\"close_chat\");\n                            xabber.body.setScreen('all-chats', {right: undefined});\n                        }, () => {\n                            chat.trigger(\"close_chat\");\n                            xabber.body.setScreen('all-chats', {right: undefined});\n                        });\n                    }\n                });\n            },\n\n            inviteUser: function (ev) {\n                if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                    if (!xabber.invite_panel)\n                        xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n                    xabber.invite_panel.open(this.account, this.model);\n                }\n            },\n\n            changeList: function (ev) {\n                let $target = $(ev.target).closest('.list-variant'),\n                    list_name = $target.data('value');\n                this.updateList(list_name);\n            },\n\n            updateList: function (name) {\n                let view = this.child(name);\n                !view && (view = this.addList(name));\n                if (view) {\n                    this.$('.tabs .list-variant a').removeClass('active');\n                    this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n                    view._render();\n                }\n            },\n\n            addList: function (name) {\n                let constructor_func;\n                switch (name) {\n                    case 'blocked':\n                        constructor_func = xabber.BlockedView;\n                        break;\n                    case 'invitations':\n                        constructor_func = xabber.InvitationsView;\n                        break;\n                };\n                if (constructor_func)\n                    return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n                else\n                    return;\n            },\n\n            getInvitations: function (callback, errback) {\n                let iq = $iq({\n                    type: 'get',\n                    to: this.model.get('full_jid') || this.model.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n                this.account.sendFast(iq, callback, errback);\n            },\n\n            deleteGroup: function () {\n                this.model.deleteWithDialog();\n            },\n\n            blockContact: function () {\n                this.model.blockWithDialog();\n            },\n\n            unblockContact: function () {\n                this.model.unblockWithDialog();\n            },\n\n            updateStatus: function () {\n                this.$('.main-info .status-message').text(this.model.getStatusMessage());\n            },\n\n            updateAvatar: function () {\n                let image = this.model.cached_image;\n                this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n            },\n\n            openChat: function () {\n                this.model.trigger(\"open_chat\", this.model);\n            },\n\n            changeAvatar: function (ev) {\n                let field = ev.target;\n                if (!field.files.length) {\n                    return;\n                }\n                let file = field.files[0];\n                field.value = '';\n                if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n                    return;\n                } else if (!file.type.startsWith('image')) {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                    return;\n                }\n                $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n                utils.images.getAvatarFromFile(file).done((image) => {\n                    if (image) {\n                        file.base64 = image;\n                        this.model.pubAvatar(file, \"\", function () {\n                            $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                        }, function (error) {\n                            $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                            let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                            utils.dialogs.error(error_text);\n                        });\n                    }\n                });\n            },\n\n            retractAllMessages: function () {\n                let group_chat = this.account.chats.getChat(this.model);\n                utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                    if (result) {\n                        group_chat.retractAllMessages(true);\n                    }\n                });\n            },\n        });\n\n        xabber.GroupChatDetailsViewRight = xabber.BasicView.extend({\n            className: 'details-panel-right groupchat-details-panel',\n            template: templates.group_chats.group_chat_details_right,\n            ps_selector: '.panel-content-wrap',\n            avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n            member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n            events: {\n                \"click .btn-mute-dropdown\": \"muteChat\",\n                \"click .btn-mute.muted\": \"unmuteChat\",\n                \"click .btn-edit\": \"showEdit\",\n                \"click .btn-search\": \"showSearchMessages\",\n                \"click .btn-clear-history-chat\": \"clearHistory\",\n                \"click .btn-qr-code\": \"showQRCode\",\n                \"click .btn-leave\": \"leaveGroupChat\",\n                \"click .btn-invite\": \"inviteUser\",\n                \"click .btn-delete-group\": \"deleteGroup\",\n                \"click .btn-edit-settings\": \"editProperties\",\n                \"click .btn-default-restrictions\": \"showRestrictions\",\n                \"click .btn-chat\": \"openChat\",\n                \"click .panel-background-clickable\": \"openChat\",\n                \"click .btn-escape:not(.btn-top)\": \"openChat\",\n                \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n                \"click .btn-clear-history\": \"retractAllMessages\",\n                \"change .circle-avatar input\": \"changeAvatar\",\n                \"click .tabs:not(.participant-tabs) .list-variant\": \"changeList\",\n                \"click .edit-pictured-buttons .list-variant\": \"changeList\"\n            },\n\n            _initialize: function () {\n                this.account = this.model.account;\n                this.chat = this.account.chats.getChat(this.model);\n                this.name_field = new xabber.ContactNameWidget({\n                    el: this.$('.name-wrap')[0],\n                    model: this.model\n                });\n                this.name_field.$('.contact-name-input').prop('disabled', true)\n                this.participants = this.addChild('participants', xabber.ParticipantsViewRight, {model: this.model, el: this.$('.participants-wrap')[0]});\n                this.edit_groups_view = this.addChild('groups',\n                    xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n                this.contact_edit_view = this.addChild('edit', xabber.GroupEditView,\n                    {model: this.model, el: this.$('.edit-block-wrap')[0]});\n                this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesViewRight, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n                this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusViewRight, {model:this.model, el: this.$('.status-block-wrap')[0]});\n                this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n                    {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n                this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n                this.default_restrictions_edit_right = this.addChild('restrictions',\n                    xabber.DefaultRestrictionsRightView,\n                    {model: this.model, el: this.$('.restrictions-block-wrap')[0]});\n                this.updateName();\n                this.updateStatus();\n                this.updateAvatar();\n                this.updateColorScheme();\n                this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n                this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n                this.model.on(\"change\", this.update, this);\n                this.chat.on(\"change:muted\", this.updateNotifications, this);\n                this.model.on(\"permissions_changed\", this.updateButtons, this);\n                this.model.on(\"change:subscription\", this.updateButtons, this);\n            },\n\n            render: function () {\n                this.updateName();\n                this.updateButtons();\n                if (!this.model.my_rights)\n                    this.model.getMyInfo(() => {\n                        this.updateButtons();\n                    });\n                if (!this.model.get('saved_search_panel')) {\n                    if (this.ps_container.length) {\n                        this.ps_container.perfectScrollbar(\n                            _.extend(this.ps_settings || {}, xabber.ps_settings)\n                        );\n                    }\n                }\n                else {\n                    this.ps_container.perfectScrollbar('destroy');\n                }\n                this.$('.btn-mute').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    hover: false\n                });\n                this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n                this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'right'\n                };\n                this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n                this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n                this.onScroll();\n                this.updateChilds();\n                this.updateNotifications();\n                this.updateList('participants');\n                this.setButtonsWidth();\n                xabber.once(\"update_css\", this.updateIndicator, this);\n                $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n                return this;\n            },\n\n            updateIndicator: function () {\n                this.$('.tabs.not-edit .indicator').remove();\n                this.$('.tabs.not-edit').tabs();\n                this.$('.tabs.not-edit .indicator').addClass('ground-color-500');\n            },\n\n            updateChilds: function () {\n                if (!this.model.get('vcard_hidden'))\n                    this.group_chat_properties.hideVCard();\n                if (!this.model.get('edit_hidden'))\n                    this.contact_edit_view.hideEdit();\n                if (!this.model.get('restrictions_hidden'))\n                    this.default_restrictions_edit_right.hideRestrictions();\n                this.model.set('participant_hidden', true);\n                this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n            },\n\n            showEdit: function (ev) {\n                this.contact_edit_view.showEdit();\n            },\n\n            showRestrictions: function (ev) {\n                this.default_restrictions_edit_right.showRestrictions();\n            },\n\n            hideRestrictions: function (ev) {\n                this.model.set('restrictions_hidden', true);\n                this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'));\n                this.showEdit();\n            },\n\n\n            keydownHandler: function (ev) {\n                if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n                    this.model.showDetailsRight('all-chats');\n                    $(window).unbind(\"keydown.contact_panel\");\n                }\n            },\n\n            updateNotifications: function () {\n                if (this.chat.isMuted()) {\n                    if (this.chat.isMuted() > 4800000000)\n                        this.$('.btn-mute').html(env.templates.svg['bell-off']());\n                    else\n                        this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n                    this.$('.btn-mute').addClass('muted').addClass('active')\n                }\n                else {\n                    this.$('.btn-mute').html(env.templates.svg['bell']());\n                    this.$('.btn-mute').removeClass('muted')\n                }\n                this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n            },\n\n            update: function () {\n                let changed = this.model.changed;\n                if (_.has(changed, 'name')) this.updateName();\n                if (_.has(changed, 'image')) this.updateAvatar();\n                // if (_.has(changed, 'muted')) this.updateNotifications();\n                if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n            },\n\n            updateColorScheme: function () {\n                this.$el.attr('data-color', this.account.settings.get('color'));\n            },\n\n            setButtonsWidth: function () {\n                let widths = [];\n                this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n                this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n            },\n\n            updateButtons: function () {\n                let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n                    change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n                    is_blocked = this.model.get('blocked');\n                this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n                this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n                this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n                this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n                this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n                this.$('.btn-block').hideIf(is_blocked);\n                this.$('.btn-unblock').showIf(is_blocked);\n            },\n\n            updateName: function () {\n                this.$('.main-info .contact-name').text(this.model.get('name'));\n            },\n\n            muteChat: function (ev) {\n                if (this.model.get('blocked'))\n                    return;\n                let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n                    muted_seconds;\n                if (mute_type === 'minutes15')\n                    muted_seconds = 900\n                if (mute_type === 'hours1')\n                    muted_seconds = 3600\n                if (mute_type === 'hours2')\n                    muted_seconds = 7200\n                if (mute_type === 'day')\n                    muted_seconds = 86400\n                if (mute_type === 'forever')\n                    muted_seconds = 0\n                this.chat.muteChat(muted_seconds);\n            },\n\n            unmuteChat: function (ev) {\n                if (this.model.get('blocked'))\n                    return;\n                this.chat.muteChat('');\n            },\n\n            showSearchMessages: function (ev) {\n                this.scrollToTop();\n                if (this.ps_container.length) {\n                    this.ps_container.perfectScrollbar('destroy');\n                }\n                this.model.set('search_hidden', false);\n                this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n                this.contact_searched_messages_view.$search_form.find('input').focus();\n            },\n\n            onScroll: function () {\n                if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n                    this.ps_container.perfectScrollbar('destroy');\n                    return true;\n                }\n                let bottom_block_scroll;\n                if (this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)'))\n                    bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').get(0).getBoundingClientRect().top;\n\n                if(this.ps_container[0].scrollTop >= 200) {\n                    this.$('.header-buttons').css({'background-color': 'rgba(255,255,255,1)'});\n                    this.$('.main-info').addClass('fixed-scroll');\n                    this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n                    this.$('.block-wrap.vcard').css({'padding-top': '340px'})\n                    this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n                    this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n                }\n                else if(this.ps_container[0].scrollTop >= 40) {\n                    this.$('.header-buttons').css({'background-color': 'rgba(255,255,255,0.5)'});\n                    this.$('.main-info').removeClass('fixed-scroll');\n                    this.$('.block-wrap.vcard').css({'padding-top': '0'});\n                    this.$('.header-buttons .block-name').addClass('fade-out');\n                }\n                else{\n                    this.$('.header-buttons').css({'background-color': 'rgba(255,255,255,0)'});\n                    this.$('.main-info').removeClass('fixed-scroll');\n                    this.$('.block-wrap.vcard').css({'padding-top': '0'});\n                    this.$('.header-buttons .block-name').addClass('fade-out');\n                }\n                if (bottom_block_scroll && bottom_block_scroll < 150) {\n                    this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .tabs').addClass('fixed-scroll');\n                    this.$('.btn-escape').addClass('btn-top');\n                    this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n                    this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').addClass('fixed-scroll');\n                    this.$('.main-info .buttons-wrap').hideIf(true);\n                    this.$('.btn-edit').hideIf(true);\n                    this.$('.btn-qr-code').hideIf(true);\n                    this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n                    this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n                    this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n                }\n                else {\n                    this.$('.btn-escape').removeClass('btn-top');\n                    this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n                    this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .tabs').removeClass('fixed-scroll');\n                    this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n                    this.$('.main-info .buttons-wrap').hideIf(false);\n                    this.$('.btn-edit').hideIf(false);\n                    this.$('.btn-qr-code').hideIf(false);\n                }\n            },\n\n            clearHistory: function () {\n                if (this.chat && this.chat.item_view && this.chat.item_view.content && this.chat.item_view.content.head){\n                    this.chat.item_view.content.head.clearHistory()\n                }\n            },\n\n            showQRCode: function () {\n                let qrcode = new VanillaQR({\n                    url: 'xmpp:' + this.model.get('jid'),\n                    noBorder: true\n                });\n                utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n                });\n            },\n\n            editProperties: function (ev) {\n                if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                        let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                            .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                        this.account.sendIQFast(iq_get_properties, (properties) => {\n                            let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                            this.group_chat_properties_edit.open(data_form);\n                        }, () => {\n                            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                        });\n                }\n            },\n\n            leaveGroupChat: function (ev) {\n                if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n                    return;\n                let contact = this.model;\n                utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n                    if (result) {\n                        contact.declineSubscription();\n                        contact.removeFromRoster();\n                        let chat = this.account.chats.getChat(contact);\n                        chat.deleteFromSynchronization(() => {\n                            chat.trigger(\"close_chat\");\n                            xabber.body.setScreen('all-chats', {right: undefined});\n                        }, () => {\n                            chat.trigger(\"close_chat\");\n                            xabber.body.setScreen('all-chats', {right: undefined});\n                        });\n                    }\n                });\n            },\n\n            inviteUser: function (ev) {\n                if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                    if (!xabber.invite_panel)\n                        xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n                    xabber.invite_panel.open(this.account, this.model);\n                }\n            },\n\n            scrollToTopSmooth: function () {\n                this.ps_container.animate(\n                    {scrollTop: 0},\n                    400,\n                    () => {\n                        this.onScroll();\n                    });\n            },\n\n            changeList: function (ev) {\n                let $target = $(ev.target).closest('.list-variant'),\n                    list_name = $target.data('value');\n                if (list_name != 'blocked' && list_name != 'invitations') {\n                    this.$('.main-info .header-buttons .block-name.second-text').text($target.text())\n                    this.$('.tabs').animate({scrollLeft: $target.position().left - 80}, 400);\n                    this.ps_container.animate(\n                        {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 110},\n                        400,\n                        () => {\n                            this.onScroll();\n                            this.ps_container.animate(\n                                {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 110},\n                                0,\n                            );\n                        });\n                }\n                this.updateList(list_name);\n            },\n\n            updateList: function (name) {\n                let view = this.child(name);\n                !view && (view = this.addList(name));\n                if (view) {\n                    if (name === 'invitations' || name === 'blocked'){\n                        this.$('.edit-wrap .tabs .list-variant a').removeClass('active');\n                        this.$('.edit-wrap .tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n                    }\n                    else {\n                        this.$('.tabs.not-edit .list-variant a').removeClass('active');\n                        this.$('.tabs.not-edit .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n                    }\n                    view._render();\n                }\n            },\n\n            addList: function (name) {\n                let constructor_func, edit_view;\n                switch (name) {\n                    case 'image':\n                        constructor_func = xabber.MediaImagesView;\n                        break;\n                    case 'video':\n                        constructor_func = xabber.MediaVideosView;\n                        break;\n                    case 'files':\n                        constructor_func = xabber.MediaFilesView;\n                        break;\n                    case 'voice':\n                        constructor_func = xabber.MediaVoiceView;\n                        break;\n                    case 'blocked':\n                        constructor_func = xabber.BlockedView;\n                        edit_view = true;\n                        break;\n                    case 'invitations':\n                        constructor_func = xabber.InvitationsView;\n                        edit_view = true;\n                        break;\n                };\n                if (constructor_func && edit_view)\n                    return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-edit-wrap')[0]});\n                else if (constructor_func)\n                    return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n                else\n                    return;\n            },\n\n            getInvitations: function (callback, errback) {\n                let iq = $iq({\n                    type: 'get',\n                    to: this.model.get('full_jid') || this.model.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n                this.account.sendFast(iq, callback, errback);\n            },\n\n            deleteGroup: function () {\n                this.model.deleteWithDialog();\n            },\n\n            blockContact: function () {\n                this.model.blockWithDialog();\n            },\n\n            unblockContact: function () {\n                this.model.unblockWithDialog();\n            },\n\n            updateStatus: function () {\n                this.$('.main-info .status-message').text(this.model.getStatusMessage());\n            },\n\n            updateAvatar: function () {\n                let image = this.model.cached_image;\n                this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n            },\n\n            openChat: function (ev) {\n                this.model.showDetailsRight('all-chats');\n            },\n\n            changeAvatar: function (ev) {\n                let field = ev.target;\n                if (!field.files.length) {\n                    return;\n                }\n                let file = field.files[0];\n                field.value = '';\n                if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n                    return;\n                } else if (!file.type.startsWith('image')) {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                    return;\n                }\n                $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n                utils.images.getAvatarFromFile(file).done((image) => {\n                    if (image) {\n                        file.base64 = image;\n                        this.model.pubAvatar(file, \"\", function () {\n                            $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                        }, function (error) {\n                            $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                            let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                            utils.dialogs.error(error_text);\n                        });\n                    }\n                });\n            },\n\n            retractAllMessages: function () {\n                let group_chat = this.account.chats.getChat(this.model);\n                utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                    if (result) {\n                        group_chat.retractAllMessages(true);\n                    }\n                });\n            }\n        });\n\n        xabber.GroupChatStatusView = xabber.BasicView.extend({\n            template: templates.group_chats.group_status,\n            events: {\n                \"click .status-wrap\": \"setStatus\",\n                \"click .btn-edit-status\": \"setStatus\"\n            },\n\n            _initialize: function () {\n                this.$el.html(this.template());\n                this.render();\n                this.model.on(\"change:status\", this.render, this);\n                this.model.on(\"change:group_info\", this.render, this);\n            },\n\n            render: function () {\n                let group_info = this.model.get('group_info');\n                if (!group_info)\n                    return;\n                this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n                this.$('.status-message').text(group_info.status_msg);\n            },\n\n            setStatus: function () {\n                let set_status_view = new xabber.SetGroupchatStatusView();\n                set_status_view.open(this.model);\n            }\n        });\n\n        xabber.GroupChatStatusViewRight = xabber.BasicView.extend({\n            template: templates.group_chats.group_status_right,\n            events: {\n                \"click .group-chat-status-wrap\": \"setStatus\",\n                \"click .btn-edit-status\": \"setStatus\"\n            },\n\n            _initialize: function () {\n                this.$el.html(this.template());\n                this.render();\n                this.model.on(\"change:status\", this.render, this);\n                this.model.on(\"change:group_info\", this.render, this);\n            },\n\n            render: function () {\n                let group_info = this.model.get('group_info');\n                if (!group_info)\n                    return;\n                this.updateIcon()\n                this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n                this.$('.status-message').text(group_info.status_msg);\n            },\n\n            updateIcon: function () {\n                let ic_name = this.model.getIcon();\n                this.$('.status-bulb').addClass('hidden');\n                if (this.model.get('invitation'))\n                    return;\n                ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n            },\n\n            setStatus: function () {\n                let set_status_view = new xabber.SetGroupchatStatusView();\n                set_status_view.open(this.model);\n            }\n        });\n\n        xabber.GroupChatPropertiesView = xabber.BasicView.extend({\n            template: templates.group_chats.group_chat_properties,\n\n            events: {\n                \"click .group-chat-properties .details-icon\": \"onClickIcon\"\n            },\n\n            _initialize: function () {\n                this.$el.html(this.template());\n                this.contact = this.model;\n                this.account = this.model.account;\n                this.model.on(\"change:group_info\", this.update, this);\n                this.model.on(\"change:vcard_updated\", this.update, this);\n            },\n\n            render: function () {\n                if (!this.model.get('vcard_updated'))\n                    this.model.vcard && this.model.vcard.refresh();\n                this.update();\n            },\n\n            update: function () {\n                let info = this.model.get('group_info') || {};\n                this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n                this.$('.jabber-id .value').text(info.jid);\n                this.$('.name .value').text(info.name);\n                this.$('.description .value').text(info.description);\n                this.$('.model .value').text(utils.pretty_name(info.model));\n                this.$('.status .value').text(utils.pretty_name(info.status));\n                this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n                this.$('.name-info-wrap').switchClass('hidden', !info.name);\n                this.$('.description-info-wrap').switchClass('hidden', !info.description);\n                this.$('.model-info-wrap').switchClass('hidden', !info.model);\n                this.$('.status-info-wrap').switchClass('hidden', !info.status);\n                this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n            },\n\n            onClickIcon: function (ev) {\n                let $target_info = $(ev.target).closest('.info-wrap'),\n                    $target_value = $target_info.find('.value'), copied_text = \"\";\n                $target_value.each((idx, item) => {\n                    let $item = $(item),\n                        value_text = $item.text();\n                    if ($target_info.hasClass('searchable-info-wrap')) {\n                        let label_name = $target_info.find('.label').first().text();\n                        if (value_text === xabber.getString(\"groupchat_index_type_none\"))\n                            value_text += ' ' + label_name.toLowerCase();\n                    }\n                    value_text && (copied_text != \"\") && (copied_text += '\\n');\n                    value_text && (copied_text += value_text);\n                    copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n                });\n            }\n        });\n\n        xabber.GroupChatPropertiesViewRight = xabber.BasicView.extend({\n            template: templates.group_chats.group_chat_properties_right,\n\n            events: {\n                \"click .btn-vcard-refresh\": \"refresh\",\n                \"click .info-hover\": \"onClickIcon\",\n                \"click .btn-back\": \"hideVCard\"\n            },\n\n            _initialize: function () {\n                this.$el.html(this.template());\n                this.contact = this.model;\n                this.account = this.model.account;\n                this.model.on(\"change:group_info\", this.update, this);\n                this.model.on(\"change:vcard_updated\", this.update, this);\n                this.ps_container = this.$('.full-vcard-content');\n                if (this.ps_container.length) {\n                    this.ps_container.perfectScrollbar(\n                        _.extend(this.ps_settings || {}, xabber.ps_settings)\n                    );\n                }\n                this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n                this.model.set('vcard_hidden', true)\n            },\n\n            render: function () {\n                if (!this.model.get('vcard_updated'))\n                    this.model.vcard && this.model.vcard.refresh();\n                this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n                if (this.parent.ps_container.length) {\n                    if(!this.model.get('vcard_hidden'))\n                        this.parent.ps_container.perfectScrollbar('destroy')\n                    else\n                        this.parent.ps_container.perfectScrollbar(\n                            _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                        );\n                }\n                this.model.updateName();\n                this.model.updateAvatar();\n                this.hideMoreDescription();\n                this.model.getVCard(() => {\n                    this.updateName()\n                    this.update();\n                    if (this.parent.contact_edit_view)\n                        this.parent.contact_edit_view.update();\n                });\n            },\n\n            onScroll: function () {\n                if(this.ps_container[0].scrollTop >= 170) {\n                    this.$('.vcard-header-title').addClass('fixed-scroll');\n                    this.$('.vcard-header-title').css({'background-color': 'rgba(255,255,255,1)'});\n                }\n                else if(this.ps_container[0].scrollTop >= 40) {\n                    this.$('.vcard-header-title').removeClass('fixed-scroll');\n                    this.$('.vcard-header-title').css({'background-color': 'rgba(255,255,255,0.5)'});\n                }\n                else {\n                    this.$('.vcard-header-title').removeClass('fixed-scroll');\n                    this.$('.vcard-header-title').css({'background-color': 'rgba(255,255,255,0)'});\n                }\n\n            },\n\n            hideMoreDescription: function (ev) {\n                if (!this.$('.vcard-wrap .info.description').hasClass('short')) {\n                    this.$('.vcard-wrap .info.description').addClass('short');\n                    this.$('.show-vcard').hideIf(false);\n                }\n            },\n\n\n            showVCard: function (ev) {\n                this.model.set('vcard_hidden', false);\n                this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n                this.model.getVCard(() => {\n                    this.updateName()\n                    this.update();\n                });\n                this.parent.$('.main-info').removeClass('fixed-scroll');\n                this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n                this.parent.scrollToTop();\n                if (this.parent.ps_container.length) {\n                    this.parent.ps_container.perfectScrollbar('destroy')\n                }\n            },\n\n            hideVCard: function (ev) {\n                this.model.set('vcard_hidden', true);\n                if (this.parent.ps_container.length) {\n                    this.parent.ps_container.perfectScrollbar(\n                        _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                    );\n                }\n                this.scrollToTop();\n                this.onScroll();\n                this.parent.onScroll();\n                this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n            },\n\n            updateName: function () {\n                this.$('.main-info .name-wrap').text(this.model.get('name'));\n                if (this.model.get('name') != this.model.get('roster_name'))\n                    this.$('.main-info .name-wrap').addClass('name-is-custom');\n                else\n                    this.$('.main-info .name-wrap').removeClass('name-is-custom');\n            },\n\n            update: function () {\n                let info = this.model.get('group_info') || {};\n                this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n                this.$('.jabber-id .value').text(info.jid);\n                this.$('.name .value').text(info.name);\n                this.$('.description .value').text(info.description);\n                this.$('.model .value').text(utils.pretty_name(info.model));\n                this.$('.status .value').text(utils.pretty_name(info.status));\n                this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n                this.$('.name-info-wrap').switchClass('hidden', !info.name);\n                this.$('.description-info-wrap').switchClass('hidden', !info.description);\n                this.$('.model-info-wrap').switchClass('hidden', !info.model);\n                this.$('.status-info-wrap').switchClass('hidden', !info.status);\n                this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n            },\n\n            onClickIcon: function (ev) {\n                let $target_info = $(ev.target),\n                    $target_value = $target_info.find('.value'), copied_text = \"\";\n                $target_value.each((idx, item) => {\n                    let $item = $(item),\n                        value_text = $item.text();\n                    value_text && (copied_text != \"\") && (copied_text += '\\n');\n                    value_text && (copied_text += value_text);\n                    copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n                });\n            }\n        });\n\n        xabber.GroupChatPropertiesEditView = xabber.BasicView.extend({\n            className: 'modal dialog-modal group-chat-properties-edit',\n\n            events: {\n                \"click .btn-save\": \"saveChanges\",\n                \"click .btn-cancel\": \"close\",\n                \"change input\": \"updateSaveButton\",\n                \"keyup .property-wrap .text-field\": \"updateSaveButton\"\n            },\n\n            _initialize: function () {\n                this.account = this.model.account;\n                this.contact = this.model;\n                this.model.on(\"change:name\", this.updateName, this);\n            },\n\n            open: function (data_form) {\n                this.data_form = data_form;\n                let all_fixed = this.data_form.fields.filter(f => f.type == 'fixed' || f.type == 'hidden').length == this.data_form.fields.length;\n                this.$el.html(templates.group_chats.group_chat_properties_edit({all_fixed: all_fixed, fields: data_form.fields, privacy: this.contact.get('incognito_group'), jid: this.model.get('jid')}));\n                this.$el.openModal({\n                    ready: () => {\n                        this.$('.modal-content').css('height', this.$el.height() - 115).perfectScrollbar({theme: 'item-list'});\n                        this.updateScrollBar();\n                    },\n                    complete: () => {\n                        this.$el.detach();\n                        this.$('.modal-content').css('height', '100%');\n                        this.data.set('visible', false);\n                    }\n                });\n            },\n\n            close: function () {\n                this.$el.closeModal({\n                    complete: () => {\n                        this.$el.detach();\n                        this.$('.modal-content').css('height', '100%');\n                        this.data.set('visible', false);\n                    }\n                });\n            },\n\n            updateName: function () {\n                this.$('.name-info-wrap').find('.name').find('.value').text(this.model.get('name'));\n            },\n\n            saveChanges: function() {\n                if (this.$('.btn-save').hasClass('non-active'))\n                    return;\n\n                let has_changes = false,\n                    iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.data_form.fields.forEach((field) => {\n                    if (field.type === 'hidden' || field.type === 'fixed')\n                        return;\n                    let value = field.values ? field.values[0] : null,\n                        checked_inp = this.$('.' + field.var + '-field input:checked'),\n                        text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                        textarea = this.$('.' + field.var + '-field textarea'),\n                        new_value = \"\";\n                    checked_inp.length && (new_value = checked_inp[0].id);\n                    text_inp.length && (new_value = text_inp.val());\n                    textarea.length && (new_value = textarea.val());\n                    if (value !== new_value) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [new_value];\n                        this.data_form.fields[field_idx] = field;\n                        has_changes = true;\n                    }\n                });\n\n                if (has_changes) {\n                    iq = this.account.addDataFormToStanza(iq, this.data_form);\n                    this.account.sendIQFast(iq, (result) => {\n                        let $result  = $(result),\n                            group_info = _.clone(this.contact.get('group_info')),\n                            attrs = {\n                                name: $result.find('field[var=\"name\"] value').text(),\n                                searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                                model: $result.find('field[var=\"membership\"]').children('value').text(),\n                                description: $result.find('field[var=\"description\"] value').text(),\n                                status: $result.find('field[var=\"status\"]').children('value').text()\n                        };\n                        this.$('button').addClass('non-active');\n                        this.close();\n                        _.extend(group_info, attrs);\n                        this.model.set('group_info', group_info);\n                    }, (error) => {\n                        this.$('button').addClass('non-active');\n                        let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                        this.close();\n                        utils.dialogs.error(err_text);\n                    });\n                } else\n                    this.$('button').removeClass('non-active');\n            },\n\n            updateSaveButton: function () {\n                let has_changes = false;\n                this.data_form.fields.forEach((field) => {\n                    if (field.type === 'hidden' || field.type === 'fixed')\n                        return;\n                    let value = field.values ? field.values[0] : null,\n                        checked_inp = this.$('.' + field.var + '-field input:checked'),\n                        text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                        textarea = this.$('.' + field.var + '-field textarea'),\n                        new_value = \"\";\n                    checked_inp.length && (new_value = checked_inp[0].id);\n                    text_inp.length && (new_value = text_inp.val());\n                    textarea.length && (new_value = textarea.val());\n                    (value !== new_value) && (has_changes = true);\n                });\n                this.$('.btn-save').switchClass('non-active', !has_changes);\n            }\n\n        });\n\n        xabber.InvitationsView = xabber.BasicView.extend({\n            events: {\n            },\n            status: 'invitations',\n            member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n            _initialize: function (options) {\n                this.contact = options.model;\n                this.contact.participants.on(\"participants_updated\", this._render, this);\n                this.contact.on(\"invitations_send\", this._render, this);\n                this.account = this.contact.account;\n                this.$error = $('<p class=\"errors\"/>');\n            },\n\n            _render: function () {\n                if (this.$el.length && this.$el.closest(\"body\").length == 0)\n                    this.$el = this.parent.$('.participants-edit-wrap')\n                this.$el.html($(templates.preloader()));\n                this.updateInvitations();\n            },\n\n            updateInvitations: function () {\n                this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"groupchat_invitations\"))\n                this.parent.getInvitations((response) => {\n                    this.$el.html(\"\");\n                    $(response).find('query').find('user').each((idx, item) => {\n                        let user = {jid: $(item).attr('jid'), status: this.status},\n                            $item_view = $(templates.group_chats.invited_member_item(user)),\n                            avatar = Images.getDefaultAvatar(user.jid);\n                        this.$el.append($item_view);\n                        $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                    });\n                    if (!$(response).find('query').find('user').length)\n                        this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n                    if (this.parent.contact_edit_view)\n                        this.parent.contact_edit_view.showInviteButton();\n                }, (err) => {\n\n                    this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n                });\n            },\n\n            revokeInvitation: function (ev) {\n                let $member_item = $(ev.target).closest('.invitations-user'),\n                    member_jid = $member_item.data('jid'),\n                    iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                        .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                        .c('jid').t(member_jid);\n                this.account.sendIQFast(iq, () => {\n                    $member_item.remove();\n                    if (this.parent.contact_edit_view)\n                        this.parent.contact_edit_view.updateRemoveParticipantButton();\n                    !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n                });\n            },\n\n            revokeInvitationByElement: function ($member_item) {\n                let member_jid = $member_item.data('jid'),\n                    iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                        .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                        .c('jid').t(member_jid);\n                this.account.sendIQFast(iq, () => {\n                    $member_item.remove();\n                    !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n                });\n            }\n        });\n\n        xabber.MediaBaseView = xabber.BasicView.extend({\n            status: 'base',\n            member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n            _initialize: function (options) {\n                this.contact = options.model;\n                this.participant = options.participant;\n                this.encrypted = options.encrypted;\n                this.account = this.contact.account;\n                this.chat = this.account.chats.getChat(this.contact, this.encrypted && 'encrypted');\n                this.temporary_items = []\n                this.parent.ps_container.on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n            },\n\n            _render: function () {\n                if (this.$el.length && this.$el.closest(\"body\").length == 0)\n                    this.$el = this.parent.$('.participants-details-media-wrap')\n                this.$el.html($(templates.preloader()));\n                this.all_messages_loaded = false;\n                this.temporary_items = [];\n                this.messagesFileRequest({}, () => {\n                    this.$el.html(\"<div class='gallery-files'></div>\");\n                    this.updateMedia();\n                });\n            },\n\n            onScroll: function () {\n                if (!this.active)\n                    return\n                let scrollTop = this.parent.ps_container[0].scrollTop,\n                    scrollHeight = this.parent.ps_container[0].scrollHeight,\n                    offsetHeight = this.parent.ps_container[0].offsetHeight,\n                    persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n                if (persentScrolled > 0.8 && this.last_rsm_message && !this.all_messages_loaded && !this.loading_messages){\n                    this.loadMoreFiles();\n                }\n            },\n\n            updateForParticipant: function () {\n                this.delegateEvents({})\n                this.parent.ps_container.off('ps-scroll-up.mediagallery').off('ps-scroll-down.mediagallery').on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n                this.$('.gallery-file').on('click', (ev) => {\n                    this.onClickFile(ev);\n                });\n            },\n\n            loadMoreFiles: function () {\n                $(templates.preloader()).appendTo(this.$('.gallery-files'))\n                this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n                    this.updateMedia(true);\n                });\n            },\n\n            filterEncryptedFiles: function () {\n                return this.temporary_items;\n            },\n\n            encryptedFilesHandler: function () {\n                let files_count = 0;\n                this.temporary_items = this.filterEncryptedFiles();\n\n                if (this.temporary_items.length)\n                    this.temporary_items.forEach((item, idx) => {\n                        let source = item.sources[0];\n                        if (!item.key){\n                            files_count++;\n                            return;\n                        }\n                        this.chat.messages.decryptFile(source, item.key).then((result) => {\n                            if (!this.active)\n                                return\n                            item.sources[0] = result\n                            files_count++;\n                            if (files_count === this.temporary_items.length) {\n                                this.updateEncryptedMedia()\n                                this.loading_messages = false;\n                            }\n                        });\n                    });\n                else {\n                    this.updateEncryptedMedia()\n                    this.loading_messages = false;\n                    if (!this.all_messages_loaded){\n                        this.loadMoreFiles();\n                    }\n                }\n            },\n\n            updateEncryptedMedia: function (is_loaded) {\n                !this.$('.gallery-files').length && this.$el.html(\"<div class='gallery-files'></div>\");\n                this.updateMedia();\n            },\n\n            updateMedia: function (is_loaded) {\n                if (!this.active)\n                    return;\n                if (this.temporary_items.length){\n                    this.temporary_items.reverse();\n                    this.temporary_items.forEach((item) => {\n                        if (this.filter_type === 'filter_voice')\n                            item.true_voice = true;\n                        let $gallery_file = $(templates.media_item({file: item, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                        $gallery_file.appendTo(this.$('.gallery-files'));\n                    });\n                }\n                this.temporary_items = [];\n                this.$('.gallery-files .gallery-empty').remove();\n                $(templates.media_items_empty()).appendTo(this.$('.gallery-files'));\n                this.$('.gallery-files .preloader-wrapper').remove();\n            },\n\n            messagesFileRequest: function (query, callback) {\n                if (!this.active || this.loading_messages)\n                    return;\n                let options = query || {},\n                    queryid = uuid();\n                this.loading_messages = true;\n                !options.max && (options.max = xabber.settings.mam_messages_limit);\n                !options.after && !options.before && (options.before = '');\n                this.encrypted && (options.encrypted = this.encrypted)\n                this.parent.participant && (options.var = [{var: 'with', value: this.parent.participant.id}]);\n                this.contact.MAMRequest(options, (success, messages, rsm) => {\n                    let messages_count = 0;\n                    if (this.encrypted) {\n                        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n                    }\n                    $(messages).each((idx, message) => {\n                        let $message = $(message),\n                            msg_items = [];\n                        if (this.encrypted) {\n                            let deferred = new $.Deferred();\n                            deferred.done(($msg) => {\n                                msg_items = this.contact.getFilesFromStanza($msg);\n                                if (msg_items.length)\n                                    this.temporary_items = this.temporary_items.concat(msg_items)\n                                messages_count++;\n                                if (messages_count === messages.length){\n                                    this.last_rsm_message = rsm.first;\n                                    this.encryptedFilesHandler();\n                                }\n                            }).fail(() => {\n                                messages_count++;\n                                if (messages_count === messages.length){\n                                    this.last_rsm_message = rsm.first;\n                                    this.all_messages_loaded = true;\n                                    this.encryptedFilesHandler();\n                                }\n                            });\n                            this.account.omemo.receiveChatMessage($message, {\n                                searched_message: true,\n                                gallery: true,\n                                query: query\n                            }, deferred);\n                        } else{\n                            msg_items = this.contact.getFilesFromStanza($message);\n                            this.account.chats.receiveChatMessage($message, {\n                                searched_message: true,\n                                query: query\n                            });\n                            if (msg_items.length)\n                                this.temporary_items = this.temporary_items.concat(msg_items)\n                        }\n                    });\n                    if (!this.encrypted){\n                        this.last_rsm_message = rsm.first;\n                        if (!messages.length)\n                            this.all_messages_loaded = true;\n                        this.loading_messages = false;\n                        (this.filter_type === 'filter_files') && (this.temporary_items = this.temporary_items.filter(file => !(file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files)))));\n                        if (!(this.temporary_items.length >= xabber.settings.mam_messages_limit) && this.filter_type === 'filter_files' && !this.all_messages_loaded) {\n                            this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, callback);\n                        }else\n                            callback && callback();\n                    }\n                }, () => {\n\n                });\n            },\n\n            onClickFile: function (ev) {\n                let $elem = $(ev.target);\n                if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n                    let $audio_elem = $elem.closest('.gallery-file'),\n                        f_url = $audio_elem.attr('data-file');\n                    $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n                    $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n                    this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n                    this.prev_audio_message = $audio_elem[0];\n                    return;\n                }\n                else if ($elem.hasClass('mdi-play') || $elem.children('.mdi-play').length) {\n                    let $audio_elem = $elem.closest('.gallery-file');\n                    this.prev_audio_message.voice_message.pause();\n                    this.prev_audio_message = $audio_elem[0];\n                    $audio_elem[0].voice_message.play();\n                    return;\n                }\n                else if ($elem.hasClass('mdi-pause') || $elem.children('.mdi-pause').length) {\n                    this.prev_audio_message.voice_message.pause();\n                    return;\n                }\n                else if (!$elem.parents('.gallery-file-audio-container').length) {\n                    let $file = $elem.closest('.gallery-file');\n                    this.parent.saveScrollBarOffset()\n                    xabber.body.data.set('contact_details_view', this.parent)\n                    this.chat.getMessageContext($file.data('uniqueid'), {searched_messages: true, encrypted: this.encrypted});\n                }\n            },\n\n            renderVoiceMessage: function (element, file_url) {\n                let not_expanded_msg = element.innerHTML,\n                    unique_id = 'waveform' + moment.now(),\n                    $elem = $(element),\n                    $msg_element = $elem.closest('.gallery-file');\n                $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n                let aud = this.createAudio(file_url, unique_id);\n\n                aud.on('ready', () => {\n                    $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n                    $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n                    let duration = Math.round(aud.getDuration());\n                    $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n                    aud.play();\n                });\n\n                aud.on('error', () => {\n                    $elem.removeClass('voice-message-rendering');\n                    element.innerHTML = not_expanded_msg;\n                    aud.unAll();\n                    $elem.find('.voice-message-play').get(0).remove();\n                    utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n                });\n\n                aud.on('play', () => {\n                    $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n                    $msg_element.addClass('playing');\n                    let timerId = setInterval(function() {\n                        let cur_time = Math.round(aud.getCurrentTime());\n                        if (aud.isPlaying())\n                            $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                        else\n                            clearInterval(timerId);\n                    }, 100);\n                });\n\n                aud.on('finish', () => {\n                    $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n                    $msg_element.removeClass('playing');\n                });\n\n                aud.on('pause', () => {\n                    $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n                    $msg_element.removeClass('playing');\n                });\n\n                $elem.find('.voice-message-volume')[0].onchange = () => {\n                    aud.setVolume($elem.find('.voice-message-volume').val()/100);\n                };\n                return aud;\n            },\n\n            createAudio: function(file_url, unique_id) {\n                let audio = WaveSurfer.create({\n                    container: \"#\" + unique_id,\n                    scrollParent: false,\n                    barWidth: 3,\n                    height: 48,\n                    barHeight: 48,\n                    cursorColor: 'rgba(211,47,47,0.8)',\n                    autoCenter: false,\n                    normalize: true,\n                    hideScrollBar: true,\n                    progressColor: '#757575'\n                });\n                audio.load(file_url);\n                audio.setVolume(0.5);\n                return audio;\n            },\n        });\n\n        xabber.MediaImagesView = xabber.MediaBaseView.extend({\n            events: {\n                \"click .gallery-files.images .gallery-file\": \"onClickFile\",\n            },\n            status: 'image',\n\n            _render: function () {\n                if (this.$el.length && this.$el.closest(\"body\").length == 0)\n                    this.$el = this.parent.$('.participants-details-media-wrap')\n                this.$el.html($(templates.preloader()));\n                this.active = true;\n                this.parent.children.video && (this.parent.children.video.active = false);\n                this.parent.children.files && (this.parent.children.files.active = false);\n                this.parent.children.voice && (this.parent.children.voice.active = false);\n                this.all_messages_loaded = false;\n                this.filter_type = 'filter_image';\n                this.temporary_items = [];\n                this.messagesFileRequest({[this.filter_type]: true}, () => {\n                    this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n                    this.$el.html(\"<div class='gallery-files images grid'></div>\");\n                    this.updateMedia();\n                    this.participant && this.updateForParticipant();\n                });\n            },\n\n            filterEncryptedFiles: function () {\n                return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image');\n            },\n\n            updateEncryptedMedia: function (is_loaded) {\n                !this.$('.gallery-files.images.grid').length && this.$el.html(\"<div class='gallery-files images grid'></div>\");\n                this.updateMedia();\n            },\n\n            loadMoreFiles: function () {\n                $(templates.preloader()).appendTo(this.$('.gallery-files'))\n                this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n                    this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n                    this.updateMedia(true);\n                });\n            },\n\n        });\n\n        xabber.MediaVideosView = xabber.MediaBaseView.extend({\n            events: {\n                \"click .gallery-files.videos .gallery-file\": \"onClickFile\",\n            },\n            status: 'video',\n\n            _render: function () {\n                if (this.$el.length && this.$el.closest(\"body\").length == 0)\n                    this.$el = this.parent.$('.participants-details-media-wrap')\n                this.$el.html($(templates.preloader()));\n                this.active = true;\n                this.parent.children.image && (this.parent.children.image.active = false);\n                this.parent.children.files && (this.parent.children.files.active = false);\n                this.parent.children.voice && (this.parent.children.voice.active = false);\n                this.all_messages_loaded = false;\n                this.filter_type = 'filter_video';\n                this.temporary_items = [];\n                this.messagesFileRequest({[this.filter_type]: true}, () => {\n                    this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n                    this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n                    this.updateMedia();\n                    this.participant && this.updateForParticipant();\n                });\n            },\n\n            filterEncryptedFiles: function () {\n                return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video');\n            },\n\n            updateEncryptedMedia: function (is_loaded) {\n                !this.$('.gallery-files.videos.grid').length && this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n                this.updateMedia();\n            },\n\n            loadMoreFiles: function () {\n                $(templates.preloader()).appendTo(this.$('.gallery-files'))\n                this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n                    this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n                    this.updateMedia(true);\n                });\n            },\n        });\n\n        xabber.MediaFilesView = xabber.MediaBaseView.extend({\n            events: {\n                \"click .gallery-files.files .gallery-file\": \"onClickFile\",\n            },\n            status: 'files',\n\n            _render: function () {\n                if (this.$el.length && this.$el.closest(\"body\").length == 0)\n                    this.$el = this.parent.$('.participants-details-media-wrap')\n                this.$el.html($(templates.preloader()));\n                this.active = true;\n                this.parent.children.image && (this.parent.children.image.active = false);\n                this.parent.children.video && (this.parent.children.video.active = false);\n                this.parent.children.voice && (this.parent.children.voice.active = false);\n                this.all_messages_loaded = false;\n                this.filter_type = 'filter_files';\n                this.temporary_items = [];\n                this.messagesFileRequest({[this.filter_type]: true}, () => {\n                    this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n                    this.$el.html(\"<div class='gallery-files files'></div>\");\n                    this.updateMedia();\n                    this.participant && this.updateForParticipant();\n                });\n            },\n\n            filterEncryptedFiles: function () {\n                return this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'));\n            },\n\n            updateEncryptedMedia: function (is_loaded) {\n                !this.$('.gallery-files.files').length && this.$el.html(\"<div class='gallery-files files'></div>\");\n                this.updateMedia();\n            },\n\n            loadMoreFiles: function () {\n                $(templates.preloader()).appendTo(this.$('.gallery-files'))\n                this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n                    this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n                    this.updateMedia(true);\n                });\n            },\n        });\n\n        xabber.MediaVoiceView = xabber.MediaBaseView.extend({\n            events: {\n                \"click .gallery-files.voice .gallery-file\": \"onClickFile\",\n            },\n            status: 'files',\n\n            _render: function () {\n                if (this.$el.length && this.$el.closest(\"body\").length == 0)\n                    this.$el = this.parent.$('.participants-details-media-wrap')\n                this.$el.html($(templates.preloader()));\n                this.active = true;\n                this.parent.children.image && (this.parent.children.image.active = false);\n                this.parent.children.video && (this.parent.children.video.active = false);\n                this.parent.children.files && (this.parent.children.files.active = false);\n                this.all_messages_loaded = false;\n                this.filter_type = 'filter_voice'\n                this.temporary_items = [];\n                this.messagesFileRequest({[this.filter_type]: true}, () => {\n                    this.temporary_items = this.temporary_items.filter(item => item.voice)\n                    this.$el.html(\"<div class='gallery-files voice'></div>\");\n                    this.updateMedia();\n                    this.participant && this.updateForParticipant();\n                });\n            },\n\n            filterEncryptedFiles: function () {\n                return this.temporary_items.filter(item => item.voice);\n            },\n\n            updateEncryptedMedia: function (is_loaded) {\n                !this.$('.gallery-files.voice').length && this.$el.html(\"<div class='gallery-files voice'></div>\");\n                this.updateMedia();\n            },\n\n            loadMoreFiles: function () {\n                $(templates.preloader()).appendTo(this.$('.gallery-files'))\n                this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n                    this.temporary_items = this.temporary_items.filter(item => item.voice)\n                    this.updateMedia(true);\n                });\n            },\n        });\n\n        xabber.BlockedView = xabber.BasicView.extend({\n            status: 'blocked',\n            member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n            _initialize: function (options) {\n                this.contact = options.model;\n                this.account = this.contact.account;\n                this.$error = $('<p class=\"errors\"/>');\n            },\n\n            _render: function () {\n                if (this.$el.length && this.$el.closest(\"body\").length == 0)\n                    this.$el = this.parent.$('.participants-edit-wrap')\n                this.$el.html($(templates.preloader()));\n                this.updateBlockedParticipants();\n            },\n\n            updateBlockedParticipants: function () {\n                this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"group_settings__block_list__header\"))\n                this.contact.getBlockedParticipants((response) => {\n                    this.$el.html(\"\");\n                    $(response).find('query').children().each((idx, item) => {\n                        let jid = $(item).attr('jid') ? $(item).attr('jid') : $(item).text(),\n                            user = {jid: jid, status: this.status},\n                            $item_view = $(templates.group_chats.invited_member_item(user)),\n                            avatar = Images.getDefaultAvatar(user.jid);\n                        this.$el.append($item_view);\n                        $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                    });\n                    if (!$(response).find('query').children.length)\n                        this.$el.append(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n                    if (this.parent.contact_edit_view)\n                        this.parent.contact_edit_view.showBlockButton();\n                }, (err) => {\n\n                    this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n                });\n            },\n\n            unblockUser: function (ev) {\n                let $member_item = $(ev.target).closest('.blocked-user'),\n                    member_jid = $member_item.data('jid'),\n                    tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n                    iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                        .c(tag).t(member_jid);\n                this.account.sendFast(iq, () => {\n                    $member_item.remove();\n                    if (this.parent.contact_edit_view)\n                        this.parent.contact_edit_view.updateRemoveParticipantButton();\n                    !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n                });\n            },\n\n            unblockUserByElement: function ($member_item) {\n                let member_jid = $member_item.data('jid'),\n                    tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n                    iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                        .c(tag).t(member_jid);\n                this.account.sendFast(iq, () => {\n                    $member_item.remove();\n                    !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n                });\n            },\n\n            blockId: function () {\n                utils.dialogs.ask_enter_value(xabber.getString(\"contact_bar_block\"), xabber.getString(\"groupchat_dialog_block__text\"), {input_placeholder_value: xabber.getString(\"groupchat_dialog_block__input_placeholder\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n                    if (result) {\n                        let tag = result.includes('@') ? 'jid' : 'domain',\n                            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                                .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                                .c(tag).t(result);\n                        this.account.sendIQFast(iq, () => {\n                            this.updateBlockedParticipants()\n                        }, function (err) {\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                    }\n                });\n            },\n        });\n\n        xabber.ParticipantsView = xabber.BasicView.extend({\n            className: 'overflow-visible',\n            ps_selector: '.members-list-wrap',\n            ps_settings: {theme: 'item-list'},\n            template: templates.group_chats.participants,\n            member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n            events: {\n                \"click .participant-wrap\": \"showParticipantProperties\",\n                \"keyup .participants-search-form\" : \"keyUpSearch\",\n                \"click .close-search-icon\": \"clearSearch\",\n                \"click .btn-block\": \"blockParticipant\",\n                \"click .btn-kick\": \"kickParticipant\"\n            },\n\n            _initialize: function () {\n                this.account = this.model.account;\n                this.participants = this.model.participants;\n                this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n                this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n                this.$(this.ps_selector).perfectScrollbar(this.ps_settings);\n            },\n\n            _render: function () {\n                this.$el.html(this.template()).addClass('request-waiting');\n                this.participant_properties_panel = new xabber.ParticipantPropertiesView({model: this.model});\n                this.updateParticipants();\n                this.$('.members-list-wrap').perfectScrollbar({theme: 'item-list'});\n                if (!this.model.all_rights)\n                    this.model.getAllRights();\n                return this;\n            },\n\n            updateParticipants: function () {\n                this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n                    let $response = $(response),\n                        version = $response.find('query').attr('version');\n                    if (this.model.get('group_info')) {\n                        (this.participants.version === 0) && (this.model.get('group_info').members_num = this.participants.length);\n                        if (this.participants.length != this.model.get('group_info').members_num) {\n                            this.account.groupchat_settings.resetParticipantsList(this.model.get('jid'));\n                            this.participants.resetParticipants();\n                            this.updateParticipants();\n                            return;\n                        }\n                    }\n                    if (this.participants.version > version)\n                        return;\n                    version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n                    (this.participants.version < version) && this.participants.updateVersion();\n                    this.renderParticipants();\n                }, () => {\n                    this.$el.removeClass('request-waiting');\n                });\n            },\n\n            updateParticipantsList: function () {\n                this.$el.find('.members-list-wrap tbody').html('');\n                this.updateParticipants();\n                if (!this.model.all_rights)\n                    this.model.getAllRights();\n            },\n\n            onParticipantsUpdated: function () {\n                this.isVisible() && this.renderParticipants();\n            },\n\n            renderParticipants: function () {\n                this.participants.each((participant) => {\n                    this.renderMemberItem(participant);\n                });\n                this.$el.removeClass('request-waiting');\n            },\n\n            blockParticipant: function (ev) {\n                let $target = $(ev.target).closest('.participant-wrap');\n                utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n                    null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n                    if (result) {\n                        let participant = this.participants.get($target.attr('data-id'));\n                        if (participant)\n                            participant.block(() => {\n                                    $target.remove();\n                                    this.parent.updateScrollBar();\n                                }, (error) => {\n                                    if ($(error).find('not-allowed').length)\n                                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                                });\n                    }\n                });\n            },\n\n            kickParticipant: function (ev) {\n                let $target = $(ev.target).closest('.participant-wrap');\n                utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n                    null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n                    if (result) {\n                        let participant = this.participants.get($target.attr('data-id'));\n                        if (participant)\n                            participant.kick(() => {\n                                    $target.remove();\n                                    this.parent.updateScrollBar();\n                                }, (error) => {\n                                    if ($(error).find('not-allowed').length)\n                                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                                });\n                    }\n                });\n            },\n\n            renderMemberItem: function (participant) {\n                let attrs = _.clone(participant.attributes);\n                attrs.nickname = _.escape(attrs.nickname);\n                attrs.badge = _.escape(attrs.badge);\n                attrs.is_me = attrs.jid == this.account.get('jid');\n                attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n                let $item_view = $(templates.group_chats.group_member_item(attrs)),\n                    view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n                $item_view.emojify('.badge', {emoji_size: 16});\n                if (view.length) {\n                    view.hasClass('active') && $item_view.addClass('active');\n                    $item_view.insertBefore(view);\n                    view.detach();\n                }\n                else {\n                    if (attrs.is_me) {\n                        $item_view.prependTo(this.$('.members-list-wrap tbody'));\n                    }\n                    else\n                        $item_view.appendTo(this.$('.members-list-wrap tbody'));\n                }\n                this.updateMemberAvatar(attrs);\n            },\n\n            updateMemberAvatar: function (member) {\n                let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n                    $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n                $avatar.setAvatar(image, this.member_avatar_size);\n                if (member.avatar) {\n                    let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n                    if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                        $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n                    else {\n                        if (member.avatar_url){\n                            this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                            this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                            if (this.account.get('jid') === member.jid) {\n                                this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                                this.model.trigger('update_my_info');\n                            }\n                        }\n                        else {\n                            let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                            this.model.getAvatar(member.avatar, node, (avatar) => {\n                                this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                                this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                                if (this.account.get('jid') === member.jid) {\n                                    this.model.my_info.set('b64_avatar', avatar);\n                                    this.model.trigger('update_my_info');\n                                }\n                            });\n                        }\n                    }\n                }\n            },\n\n            showParticipantProperties: function (ev) {\n                let $target = $(ev.target);\n                if ($target.closest('.buttons-wrap').length)\n                    return;\n                let participant_item = $target.closest('.participant-wrap'),\n                    participant_id = participant_item.attr('data-id'),\n                    participant = this.model.participants.get(participant_id);\n                (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n                this.model.participants.participantsRequest({id: participant_id}, (response) => {\n                    let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.participant_properties_panel.open(participant, data_form);\n                });\n            },\n\n            keyUpSearch: function (ev) {\n                if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n                    this.clearSearch(ev);\n                else\n                    this.searchParticipant();\n            },\n\n            searchParticipant: function () {\n                let query = this.$('.participants-search-form input').val().toLowerCase();\n                this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n                    let $this = $(item),\n                        participant_id = $this.data('id'),\n                        participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                        jid = participant.get('jid').toLowerCase(),\n                        name = participant.get('nickname').toLowerCase();\n                    $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n                });\n                if (query)\n                    this.$('.close-search-icon').show();\n                else\n                    this.$('.close-search-icon').hide();\n            },\n\n            clearSearch: function (ev) {\n                ev && ev.preventDefault();\n                this.$('.search-input').val('');\n                this.searchParticipant();\n            }\n        });\n\n        xabber.ParticipantsViewRight = xabber.BasicView.extend({\n            className: 'overflow-visible',\n            ps_settings: {theme: 'item-list'},\n            template: templates.group_chats.participants_right_panel,\n            member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n            events: {\n                \"click .participant-wrap\": \"showParticipantProperties\",\n                \"keyup .participants-search-form\" : \"keyUpSearch\",\n                \"click .close-search-icon\": \"clearSearch\",\n                \"click .btn-kick\": \"kickParticipantDialog\",\n                \"click .btn-edit-member\": \"showParticipantPropertiesEdit\",\n                \"click .btn-mute\": \"kickParticipantDialog\",\n            },\n\n            _initialize: function () {\n                this.account = this.model.account;\n                this.participants = this.model.participants;\n                this.participants.on(\"change\", this.onParticipantsChanged, this);\n                this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n                this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n                this.participant_properties_panel = this.addChild('participant_properties_panel', xabber.ParticipantPropertiesViewRight, {model: this.model, el: this.parent.$('.participant-view-wrap')[0], parent: this.parent});\n            },\n\n            _render: function () {\n                this.$el.html(this.template()).addClass('request-waiting');\n                this.updateParticipants();\n                if (!this.model.all_rights)\n                    this.model.getAllRights();\n                return this;\n            },\n\n            updateParticipants: function () {\n                this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n                    let $response = $(response),\n                        version = $response.find('query').attr('version');\n                    if (this.model.get('group_info')) {\n                        (this.participants.version === 0) && (this.model.get('group_info').members_num = this.participants.length);\n                        if (this.participants.length != this.model.get('group_info').members_num) {\n                            this.account.groupchat_settings.resetParticipantsList(this.model.get('jid'));\n                            this.participants.resetParticipants();\n                            this.updateParticipants();\n                            return;\n                        }\n                    }\n                    if (this.participants.version > version)\n                        return;\n                    version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n                    (this.participants.version < version) && this.participants.updateVersion();\n                    this.renderParticipants();\n                }, () => {\n                    this.$el.removeClass('request-waiting');\n                });\n            },\n\n            updateParticipantsList: function () {\n                this.updateParticipants();\n                if (!this.model.all_rights)\n                    this.model.getAllRights();\n            },\n\n            onParticipantsUpdated: function () {\n                this.isVisible() && this.renderParticipants();\n            },\n\n            onParticipantsChanged: function () {\n                this.updateParticipants();\n            },\n\n            renderParticipants: function () {\n                this.participants.each((participant) => {\n                    this.renderMemberItem(participant);\n                });\n                if (this.$('.participants-search-form input').val())\n                    this.searchParticipant();\n                this.$el.removeClass('request-waiting');\n            },\n\n            blockParticipant: function (ev) {\n                let $target = $(ev.target).closest('.participant-wrap');\n                utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n                    null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n                    if (result) {\n                        let participant = this.participants.get($target.attr('data-id'));\n                        if (participant)\n                            participant.block(() => {\n                                    $target.remove();\n                                    this.parent.updateScrollBar();\n                                }, (error) => {\n                                    if ($(error).find('not-allowed').length)\n\n                                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                                });\n                    }\n                });\n            },\n\n            kickParticipant: function (ev) {\n                let $target = $(ev.target).closest('.participant-wrap');\n                utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n                    null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n                    if (result) {\n                        let participant = this.participants.get($target.attr('data-id'));\n                        if (participant)\n                            participant.kick(() => {\n                                    $target.remove();\n                                    this.parent.updateScrollBar();\n                                }, (error) => {\n\n                                    if ($(error).find('not-allowed').length)\n                                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                                });\n                    }\n                });\n            },\n\n            kickParticipantDialog: function (ev) {\n                let $target = $(ev.target).closest('.participant-wrap');\n                utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n                    if (result) {\n                        if (result === 'block'){\n                            let participant = this.participants.get($target.attr('data-id'));\n                            if (participant)\n                                participant.block(() => {\n                                    $target.remove();\n                                    this.parent.updateScrollBar();\n                                }, (error) => {\n                                    if ($(error).find('not-allowed').length)\n\n                                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                                });\n                        }\n                        else{\n                            let participant = this.participants.get($target.attr('data-id'));\n                            participant.kick(() => {\n                                $target.remove();\n                                this.parent.updateScrollBar();\n                            }, (error) => {\n\n                                if ($(error).find('not-allowed').length)\n                                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                            });\n                        }\n                    }\n                });\n            },\n\n            renderMemberItem: function (participant) {\n                let attrs = _.clone(participant.attributes);\n                attrs.nickname = _.escape(attrs.nickname);\n                attrs.badge = _.escape(attrs.badge);\n                attrs.is_me = attrs.jid == this.account.get('jid');\n                attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n                let $item_view = $(templates.group_chats.group_member_item_right(attrs)),\n                    view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n                if (view.length) {\n                    view.hasClass('active') && $item_view.addClass('active');\n                    $item_view.insertBefore(view);\n                    view.detach();\n                }\n                else {\n                    if (attrs.is_me) {\n                        $item_view.prependTo(this.$('.members-list-wrap tbody'));\n                    }\n                    else\n                        $item_view.appendTo(this.$('.members-list-wrap tbody'));\n                }\n                this.updateMemberAvatar(attrs);\n            },\n\n            updateMemberAvatar: function (member) {\n                let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n                    $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n                $avatar.setAvatar(image, this.member_avatar_size);\n                if (member.avatar) {\n                    let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n                    if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                        $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n                    else {\n                        if (member.avatar_url){\n                            this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                            this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                            if (this.account.get('jid') === member.jid) {\n                                this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                                this.model.trigger('update_my_info');\n                            }\n                        }\n                        else {\n                            let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                            this.model.getAvatar(member.avatar, node, (avatar) => {\n                                this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                                this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                                if (this.account.get('jid') === member.jid) {\n                                    this.model.my_info.set('b64_avatar', avatar);\n                                    this.model.trigger('update_my_info');\n                                }\n                            });\n                        }\n                    }\n                }\n            },\n\n            showParticipantProperties: function (ev) {\n                let $target = $(ev.target);\n                if ($target.closest('.buttons-wrap').length)\n                    return;\n                let participant_item = $target.closest('.participant-wrap'),\n                    participant_id = participant_item.attr('data-id'),\n                    participant = this.model.participants.get(participant_id);\n                (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n                this.model.participants.participantsRequest({id: participant_id}, (response) => {\n                    let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.participant_properties_panel.open(participant, data_form);\n                });\n            },\n\n            showParticipantPropertiesEdit: function (ev) {\n                let $target = $(ev.target),\n                    participant_item = $target.closest('.participant-wrap'),\n                    participant_id = participant_item.attr('data-id'),\n                    participant = this.model.participants.get(participant_id);\n                (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n                this.model.participants.participantsRequest({id: participant_id}, (response) => {\n                    let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.participant_properties_panel.open(participant, data_form);\n                    this.participant_properties_panel.showNamePanel();\n                    this.participant_properties_panel.changeBackButton();\n                });\n            },\n\n            keyUpSearch: function (ev) {\n                if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n                    this.clearSearch(ev);\n                else\n                    this.searchParticipant();\n            },\n\n            searchParticipant: function () {\n                let query = this.$('.participants-search-form input').val().toLowerCase();\n                this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n                    let $this = $(item),\n                        participant_id = $this.data('id'),\n                        participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                        jid = participant.get('jid').toLowerCase(),\n                        name = participant.get('nickname').toLowerCase();\n                    $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n                });\n                if (query)\n                    this.$('.close-search-icon').show();\n                else\n                    this.$('.close-search-icon').hide();\n            },\n\n            clearSearch: function (ev) {\n                ev && ev.preventDefault();\n                this.$('.search-input').val('');\n                this.searchParticipant();\n            }\n        });\n\n        xabber.ParticipantPropertiesView = xabber.BasicView.extend({\n            className: 'modal dialog-modal edit-rights',\n            template: templates.group_chats.participant_rights,\n            member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n            ps_selector: '.modal-content',\n            ps_settings: {theme: 'item-list'},\n\n            events: {\n                \"click .btn-cancel-changes\": \"close\",\n                \"change .clickable-field input\": \"changeRights\",\n                \"click .btn-save-user-rights\": \"saveRights\",\n                \"click .participant-details-item:not(.unsubscribed) .nickname\": \"editNickname\",\n                \"change .circle-avatar input\": \"changeAvatar\",\n                \"click .btn-block-participant\": \"block\",\n                \"click .btn-kick-participant\": \"kick\",\n                \"click .btn-set-badge\": \"editBadge\",\n                \"click .btn-participant-messages\": \"getMessages\",\n                \"click .btn-chat\": \"getPrivateChat\",\n                \"click .property-variant\": \"changeTimerValue\",\n                \"keydown .rich-textarea\": \"checkKeydown\",\n                \"keyup .rich-textarea\": \"checkKeyup\"\n            },\n\n            _initialize: function () {\n                this.contact = this.model;\n                this.account = this.model.account;\n            },\n\n            open: function (participant, data_form) {\n                if (!participant) return;\n                this.participant = participant;\n                this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n                this.data_form = data_form;\n                this.render();\n                this.$el.openModal({\n                    ready: () => {\n                        this.$el.css('height', \"\");\n                        if (($(window).height() * 0.1 + this.$el.height()) > $(window).height())\n                            this.$el.css('height', $(window).height() * 0.9);\n                        this.$('.modal-content').css('max-height', 'calc(100% - ' + (64 + this.$('.header').height()) + 'px)');\n                        this.scrollToTop();\n                        this.updateSaveButton();\n                        let dropdown_settings = {\n                            inDuration: 100,\n                            outDuration: 100,\n                            constrainWidth: false,\n                            hover: false,\n                            alignment: 'left'\n                        };\n                        this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n                        this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n                    },\n                    complete: () => {\n                        this.render();\n                        this.$el.detach();\n                        this.data.set('visible', false);\n                    }\n                });\n            },\n\n            close: function () {\n                this.$el.closeModal({\n                    complete: () => {\n                        this.render();\n                        this.$el.detach();\n                        this.data.set('visible', false);\n                    }\n                });\n            },\n\n            render: function () {\n                this.new_avatar = \"\";\n                let attrs = _.clone(this.participant.attributes);\n                attrs.nickname = _.escape(attrs.nickname);\n                attrs.blocked = attrs.blocked;\n                attrs.subscription = attrs.subscription === null ? null : 'both';\n                attrs.badge = _.escape(attrs.badge);\n                attrs.is_myself = attrs.jid === this.account.get('jid');\n                attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n                attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n                let $member_info_view;\n                if (this.contact.get('private_chat')) {\n                    this.$el.addClass('edit-rights-private');\n                    $member_info_view = $(templates.group_chats.private_participant_details(attrs));\n                }\n                else\n                    $member_info_view = $(templates.group_chats.participant_details_item(attrs));\n                this.$('.header').html($member_info_view);\n                this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n                this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n                this.updateMemberAvatar(this.participant);\n                this.participant_messages = [];\n                this.actual_rights = [];\n                if (!this.contact.get('private_chat'))\n                    this.setActualRights();\n                else {\n                    this.$('.modal-content').addClass('hidden');\n                    this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n                }\n                this.updateScrollBar();\n                this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n                    let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n                    if (new_nickname === \"\")\n                        new_nickname = this.participant.get('nickname');\n                    this.$('.participant-info #edit-nickname').hide();\n                    this.$('.participant-info .nickname').show();\n                    this.updateNickname(new_nickname);\n                });\n                this.$('.content').perfectScrollbar({theme: 'item-list'});\n            },\n\n            updateMemberAvatar: function (member) {\n                let participant_id = member.get('id'),\n                    $avatar = this.$(`.participant-details-item[data-id=\"${participant_id}\"] .circle-avatar`);\n                member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n                $avatar.setAvatar(member.image, this.member_details_avatar_size);\n                this.$('.participant-details-item[data-id=\"'+ member.id +'\"]').emojify('.badge', {emoji_size: 18});\n                if (member.get('avatar')) {\n                    if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                        $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n                    else {\n                        if (member.get('avatar_url')){\n                            $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                        }\n                        else {\n                            let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                            this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                                this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                            });\n                        }\n                    }\n                }\n                else {\n                    if (this.account.chat_settings.getHashAvatar(participant_id))\n                        $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n                }\n            },\n\n            updateRightsView: function (ev) {\n                !$(ev.target).hasClass('non-active') && this.render(this.participant);\n            },\n\n            getMessages: function (options) {\n                let chat = this.account.chats.getChat(this.contact);\n                chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n                chat.messages_view.messagesRequest(options, () => {\n                    this.close();\n                    xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n                });\n            },\n\n            changeAvatar: function (ev) {\n                let field = ev.target;\n                if (!field.files.length)\n                    return;\n                let file = field.files[0];\n                field.value = '';\n                if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n                    return;\n                } else if (!file.type.startsWith('image')) {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                    return;\n                }\n\n                utils.images.getAvatarFromFile(file).done((image) => {\n                    if (image) {\n                        file.base64 = image;\n                        this.new_avatar = file;\n                        this.$('.circle-avatar').addClass('changed').setAvatar(image, this.member_details_avatar_size);\n                        this.updateSaveButton();\n                    }\n                });\n            },\n\n            changeTimerValue: function (ev) {\n                let $property_item = $(ev.target),\n                    $property_value = $property_item.closest('.select-timer').find('.property-value'),\n                    $input_item = $property_item.closest('.right-item').find('input');\n                if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n                    $property_item.closest('.right-item').addClass('changed-timer changed');\n                    this.updateSaveButton();\n                }\n                $property_value.text($property_item.text());\n                $property_value.attr('data-value', $property_item.attr('data-value'));\n                if ($property_item.attr('data-value') === '0') {\n                    $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n                } else if ($property_value.hasClass('default-value'))\n                    $property_value.removeClass('default-value');\n                if (!$input_item.prop('checked')) {\n                    $input_item.click();\n                }\n            },\n\n            onBadgeUpdated: function (participant) {\n                let badge = _.escape(participant.get('badge'));\n                this.updateBadge(badge);\n            },\n\n            updateBadge: function (badge) {\n                this.$('.badge').html(badge).switchClass('hidden', !badge);\n                this.$('.participant-info').emojify('.badge');\n            },\n\n            updateButtons: function (has_changes) {\n                this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n            },\n\n            updateSaveButton: function () {\n                let has_changes = this.$('.changed').length;\n                this.updateButtons(has_changes);\n            },\n\n            updateNickname: function (nickname) {\n                let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n                    $member_item_nickname = $member_item.find('.nickname');\n                $member_item_nickname.html(Strophe.xmlescape(nickname));\n                $member_item.emojify('.nickname');\n                if (nickname !== this.participant.get('nickname'))\n                    $member_item_nickname.addClass('changed');\n                else\n                    $member_item_nickname.removeClass('changed');\n                this.updateSaveButton();\n            },\n\n            editNickname: function () {\n                if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n                    return;\n                this.$('.participant-info .nickname').hide();\n                this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n            },\n\n            editBadge: function (ev) {\n                if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n                    return;\n                this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n            },\n\n            checkKeydown: function (ev) {\n                if (ev && ev.keyCode === constants.KEY_ENTER) {\n                    ev.preventDefault();\n                    $(document.activeElement).blur();\n                }\n            },\n\n            checkKeyup: function (ev) {\n                let $richtextarea = $(ev.target),\n                    new_value = $richtextarea.getTextFromRichTextarea().trim();\n                if (ev.target.id === 'edit-nickname') {\n                    let has_changes = (new_value !== this.participant.get('nickname'));\n                    this.updateButtons(has_changes);\n                }\n            },\n\n            retractUserMessages: function () {\n                utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                    if (result) {\n                        if (this.participant.get('id')) {\n                            let group_chat = this.account.chats.getChat(this.contact);\n                            group_chat.retractMessagesByUser(this.participant.get('id'));\n                        }\n                    }\n                });\n            },\n\n            block: function () {\n                utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n                    null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n                    if (result) {\n                        this.participant.block(() => {this.close();},\n                            function (error) {\n                                if ($(error).find('not-allowed').length)\n                                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                            });\n                    }\n                });\n            },\n\n            kick: function (ev) {\n                if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n                    return;\n                utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n                    null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n                    if (result) {\n                        this.participant.kick(() => {\n                                this.close();\n                            }, (error) => {\n                                if ($(error).find('not-allowed').length)\n                                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                            });\n                    }\n                });\n            },\n\n            setActualRights: function () {\n                this.$('.rights-wrap').html(\"\");\n                this.data_form.fields && this.data_form.fields.forEach((field) => {\n                    field = _.clone(field);\n                    if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0)) {\n                        !field.values && (field.values = []);\n                        let attrs = {\n                                pretty_name: field.label,\n                                name: field.var,\n                                expires: field.values ? field.values[0] : undefined\n                            },\n                            restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                            restriction_expire;\n                        if (field.options) {\n                            restriction_expire = $(templates.group_chats.right_expire_variants({\n                                right_name: ('default-' + attrs.name),\n                                expire_options: field.options\n                            }));\n                            restriction_item.append(restriction_expire);\n                        }\n                        this.$('.rights-wrap').append(restriction_item);\n                        if (attrs.expires) {\n                            this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                            this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                            if (attrs.expires != 0) {\n                                let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                                $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                                    .removeClass('default-value')\n                                    .text(moment(Number(attrs.expires)*1000).fromNow());\n                            }\n                        }\n                    } else if (field.type  === 'fixed')\n                        field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n                });\n            },\n\n            getPrivateChat: function (ev) {\n                if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n                    return;\n                let participant_jid = this.participant.get('jid'),\n                    participant_in_roster = this.account.contacts.get(participant_jid);\n                if (!participant_jid || this.contact.get('incognito_chat')) {\n                    let iq = $iq({to: this.contact.domain, type: 'set'})\n                        .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                        .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n                    this.account.sendIQFast(iq, (iq_response) => {\n                        let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                            contact = this.account.contacts.mergeContact(group_jid);\n                        contact.set('group_chat', true);\n                        contact.set('subscription_preapproved', true);\n                        contact.pres('subscribed');\n                        contact.pushInRoster(null, () => {\n                            contact.pres('subscribe');\n                            contact.getMyInfo();\n                            this.close();\n                            contact.sendPresent();\n                            this.account.chats.openChat(contact);\n                            let chat = this.account.chats.getChat(contact);\n                            chat.messages.createSystemMessage({\n                                from_jid: group_jid,\n                                message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                            });\n                        });\n                    }, (error) => {\n                        let $error = $(error),\n                            private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                        if (private_chat_jid) {\n                            let contact = this.account.contacts.mergeContact(private_chat_jid),\n                                chat = this.account.chats.getChat(contact);\n                            this.close();\n                            chat && chat.trigger('open');\n                            return;\n                        }\n                        let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                        this.close();\n                        utils.dialogs.error(err_text);\n                    });\n                }\n                else {\n                    if (participant_in_roster)\n                        if (participant_in_roster.get('in_roster')) {\n                            this.close();\n                            participant_in_roster.trigger('open_chat', participant_in_roster);\n                            return;\n                        }\n                    this.close();\n                    xabber.add_contact_view.show({\n                        account: this.account,\n                        jid: participant_jid\n                    });\n                }\n            },\n\n            changeRights: function (ev) {\n                let $target = $(ev.target),\n                    $right_item = $target.closest('.right-item'),\n                    right_name = $target.prop('id');\n                if ($target.prop('checked')) {\n                    if (!this.actual_rights.find(right => right.name === right_name))\n                        $right_item.addClass('changed');\n                    else\n                        if ($right_item.hasClass('changed-timer'))\n                            $right_item.addClass('changed');\n                        else\n                            $right_item.removeClass('changed');\n                }\n                else {\n                    if (this.actual_rights.find(right => right.name === right_name))\n                        $right_item.addClass('changed');\n                    else {\n                        $right_item.removeClass('changed');\n                        if ($right_item.hasClass('changed-timer'))\n                            $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n                    }\n                }\n                this.updateSaveButton();\n            },\n\n            saveRights: function (ev) {\n                if ($(ev.target).hasClass('non-active'))\n                    return;\n                let $btn = $(ev.target),\n                    jid = this.account.get('jid'),\n                    member_id = this.participant.get('id'),\n                    $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n                    nickname_value = this.$('.participant-info .nickname').text(),\n                    changed_avatar = this.new_avatar,\n                    rights_changed = false,\n                    has_changes = false,\n                    iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                        .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n                this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n                changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n                if (nickname_value != this.participant.get('nickname')) {\n                    has_changes = true;\n                    iq_changes.c('nickname').t(nickname_value).up();\n                }\n                this.$('.right-item').each((idx, right_item) => {\n                    if ($(right_item).hasClass('changed')) {\n                        let $right_item = $(right_item),\n                            right_name = $right_item.find('.field input')[0].id;\n                        if ($right_item.find('.field input:checked').val()) {\n                            let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                                field = this.data_form.fields.find(f => f.var === right_name),\n                                field_idx = this.data_form.fields.indexOf(field);\n                            field.values = [right_expire];\n                            this.data_form.fields[field_idx] = field;\n                            rights_changed = true;\n                        }\n                        else {\n                            let field = this.data_form.fields.find(f => f.var === right_name);\n                            if (field.values.length) {\n                                let field_idx = this.data_form.fields.indexOf(field);\n                                field.values = [];\n                                this.data_form.fields[field_idx] = field;\n                                rights_changed = true;\n                            }\n                        }\n                    }\n                });\n                if (changed_avatar)\n                    this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                        this.$('.buttons-wrap button').removeClass('non-active');\n                        $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                        this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                        this.close();\n                    }, function (error) {\n                        this.$('.buttons-wrap button').removeClass('non-active');\n                        $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                        let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                        !has_changes && utils.dialogs.error(error_text);\n                    });\n                if (has_changes)\n                    this.account.sendIQFast(iq_changes,\n                        () => {\n                            this.$('.buttons-wrap button').removeClass('non-active');\n                            this.participant.set('nickname', nickname_value);\n                            this.close();\n                        },\n                        (error) => {\n                            this.$('.buttons-wrap button').removeClass('non-active');\n                            this.close();\n\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                if (rights_changed) {\n                    let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n                    iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n                    this.account.sendIQFast(iq_rights_changes, () => {\n                            this.close();\n                        },\n                        (error) => {\n                            this.close();\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                $btn.blur();\n            }\n        });\n\n        xabber.ParticipantPropertiesViewRight = xabber.BasicView.extend({\n            className: 'modal dialog-modal edit-rights',\n            template: templates.group_chats.participant_details_right,\n            member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n\n            events: {\n                \"click .btn-back:not(.btn-top)\": \"close\",\n                \"click .btn-back.btn-top\": \"scrollToTopSmooth\",\n                'click .btn-edit-participant': 'showNamePanel',\n                'click .btn-back-name': 'hidePanel',\n                \"change .clickable-field input\": \"changeRights\",\n                \"click .btn-reset\": \"render\",\n                \"click .btn-reset-name\": \"resetPanel\",\n                \"click .btn-save-user-rights\": \"saveRights\",\n                \"change .circle-avatar input\": \"changeAvatar\",\n                \"click .btn-kick-participant\": \"kickParticipantDialog\",\n                \"click .btn-set-visibility-wrap\": \"setVisibility\",\n                \"click .info-hover\": \"onClickIcon\",\n                \"click .btn-set-badge\": \"editBadge\",\n                \"click .btn-participant-messages\": \"getMessages\",\n                \"click .btn-chat-participant\": \"getPrivateChat\",\n                \"click .property-variant\": \"changeTimerValue\",\n                \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n                \"keydown .rich-textarea\": \"checkKeydown\",\n                \"keyup .rich-textarea\": \"checkKeyup\",\n                \"click .list-variant\": \"changeList\"\n            },\n\n            _initialize: function () {\n                this.contact = this.model;\n                this.account = this.model.account;\n            },\n\n            open: function (participant, data_form) {\n                this.model.set('participant_hidden', false);\n                this.parent.scrollToTop();\n                if (this.parent.ps_container.length) {\n                    this.parent.ps_container.perfectScrollbar('destroy')\n                }\n                this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n                if (!participant) return;\n                this.participant = participant;\n                this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n                this.data_form = data_form;\n                this.render();\n                this.updateSaveButton();\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n                this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n            },\n\n            close: function () {\n                this.model.set('participant_hidden', true);\n                if (this.parent.ps_container.length) {\n                    this.parent.ps_container.perfectScrollbar(\n                        _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                    );\n                    this.parent.onScroll();\n                };\n                if (this.ps_container && this.ps_container.length) {\n                    this.ps_container.perfectScrollbar('destroy')\n                }\n                this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'));\n            },\n\n            render: function () {\n                this.$el.html(this.template(_.extend({view: this}, constants)));\n                this.new_avatar = \"\";\n                let attrs = _.clone(this.participant.attributes);\n                attrs.nickname = _.escape(attrs.nickname);\n                attrs.blocked = attrs.blocked;\n                attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n                attrs.subscription = attrs.subscription === null ? null : 'both';\n                attrs.badge = _.escape(attrs.badge);\n                attrs.is_myself = attrs.jid === this.account.get('jid');\n                attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n                attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n                let $member_info_view;\n                if (this.contact.get('private_chat')) {\n                    this.$el.addClass('edit-rights-private');\n                    $member_info_view = $(templates.group_chats.private_participant_details_item_right(attrs));\n                }\n                else\n                    $member_info_view = $(templates.group_chats.participant_details_item_right(attrs));\n                this.$('.participant-details-info-wrap').html($member_info_view);\n                this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n                this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n                this.updateMemberAvatar(this.participant);\n                this.participant_messages = [];\n                this.actual_rights = [];\n                if (!this.contact.get('private_chat'))\n                    this.setActualRights();\n                else {\n                    this.$('.modal-content').addClass('hidden');\n                    this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n                }\n                this.updateScrollBar();\n                this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n                    let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n                    if (new_nickname === \"\")\n                        new_nickname = this.participant.get('nickname');\n                    this.$('.participant-info #edit-nickname').hide();\n                    this.$('.participant-info .nickname').show();\n                    this.updateNickname(new_nickname);\n                });\n                this.ps_container = this.$('.participant-details-wrap');\n                if (this.ps_container.length) {\n                    this.ps_container.perfectScrollbar(\n                        _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                    );\n                }\n                this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n                this.onScroll();\n                this.participant_name_field = new xabber.ParticipantNameRightWidget({\n                    el: this.$('.edit-participant-name-wrap')[0],\n                    model: this.participant,\n                    parent: this,\n                });\n                this.participant_badge_field = new xabber.ParticipantBadgeRightWidget({\n                    el: this.$('.edit-participant-badge-wrap')[0],\n                    model: this.participant,\n                    parent: this,\n                });\n                this.updateList('image');\n                xabber.once(\"update_css\", this.updateIndicator, this);\n                this.updateIndicator()\n                this.$('.participant-details-edit-wrap').hideIf(true);\n                this.$('.block-name:not(.second-text)').hideIf(true);\n            },\n\n            updateIndicator: function () {\n                this.$('.tabs .indicator').remove();\n                this.$('.tabs').tabs();\n                this.$('.indicator').addClass('ground-color-500');\n            },\n\n            showNamePanel: function () {\n                this.$('.participant-details-edit-wrap').hideIf(false)\n                this.$('.btn-edit-participant').hideIf(true)\n                this.$('.parent-btn').hideIf(true)\n                this.$('.child-btn').hideIf(false)\n                this.$('.block-header').css({'background-color': 'rgba(255,255,255,0)'});\n                this.$('.block-name.second-text').text('');\n                this.$('.block-name:not(.second-text)').text(xabber.getString(\"groupchat_member_edit\"));\n                this.$('.block-name:not(.second-text)').hideIf(false);\n                if (this.ps_container && this.ps_container.length) {\n                    this.ps_container.perfectScrollbar('destroy')\n                }\n                this.ps_container = this.$('.participant-details-edit-wrap');\n                if (this.ps_container.length) {\n                    this.ps_container.perfectScrollbar(\n                        _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                    );\n                }\n            },\n\n            changeBackButton: function () {\n                this.$('.parent-btn').hideIf(false)\n                this.$('.child-btn').hideIf(true)\n            },\n\n            hidePanel: function () {\n                this.$('.participant-details-edit-wrap').hideIf(true)\n                this.$('.btn-edit-participant').hideIf(false)\n                this.$('.parent-btn').hideIf(false)\n                this.$('.child-btn').hideIf(true)\n                this.$('.block-name:not(.second-text)').hideIf(true);\n                this.ps_container = this.$('.participant-details-wrap');\n                if (this.ps_container.length) {\n                    this.ps_container.perfectScrollbar(\n                        _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                    );\n                }\n                if (this.ps_container && this.ps_container.length) {\n                    this.ps_container.perfectScrollbar(\n                        _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                    );\n                }\n                this.onScroll();\n            },\n\n            resetPanel: function () {\n                this.participant_name_field.updateValue(true);\n                this.participant_badge_field.updateValue(true);\n                this.new_avatar = \"\";\n                this.updateMemberAvatar(this.participant);\n                this.updateSaveButton()\n            },\n\n            changeList: function (ev) {\n                let $target = $(ev.target).closest('.list-variant'),\n                    list_name = $target.data('value');\n                this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n                this.updateList(list_name);\n            },\n\n            updateList: function (name) {\n                let view = this.child(name);\n                !view && (view = this.addList(name));\n                if (view) {\n                    this.$('.tabs .list-variant a').removeClass('active');\n                    this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n                    view._render();\n                }\n            },\n\n            addList: function (name) {\n                let constructor_func;\n                switch (name) {\n                    case 'image':\n                        constructor_func = xabber.MediaImagesView;\n                        break;\n                    case 'video':\n                        constructor_func = xabber.MediaVideosView;\n                        break;\n                    case 'files':\n                        constructor_func = xabber.MediaFilesView;\n                        break;\n                    case 'voice':\n                        constructor_func = xabber.MediaVoiceView;\n                        break;\n                };\n                if (constructor_func)\n                    return this.addChild(name, constructor_func, {model: this.model, participant: true, el: this.$('.participants-details-media-wrap')[0]});\n                else\n                    return;\n            },\n\n            changeName: function (value) {\n                this.updateSaveButton()\n            },\n\n            changeBadge: function (value) {\n                this.updateSaveButton()\n            },\n\n            onClickIcon: function (ev) {\n                let $target_info = $(ev.target),\n                    $target_value = $target_info.find('.value'), copied_text = \"\";\n                $target_value.each((idx, item) => {\n                    let $item = $(item),\n                        value_text = $item.text();\n                    value_text && (copied_text != \"\") && (copied_text += '\\n');\n                    value_text && (copied_text += value_text);\n                    copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n                });\n            },\n\n            scrollToTopSmooth: function () {\n                this.ps_container.animate(\n                    {scrollTop: 0},\n                    400,\n                    () => {\n                        this.onScroll();\n                    });\n            },\n\n            onScroll: function () {\n                if(this.ps_container[0].scrollTop >= 220) {\n                    this.$('.block-header').css({'background-color': 'rgba(255,255,255,1)'});\n                    this.$('.block-name.second-text').text(this.participant.get('nickname'));\n                    this.$('.block-name.second-text').removeClass('fade-out');\n                    this.$('.block-name:not(.second-text)').addClass('fade-out');\n                }\n                else if(this.ps_container[0].scrollTop >= 170) {\n                    this.$('.block-header').css({'background-color': 'rgba(255,255,255,1)'});\n                    this.$('.block-name.second-text').addClass('fade-out');\n                    this.$('.block-name:not(.second-text)').removeClass('fade-out');\n                }\n                else if(this.ps_container[0].scrollTop >= 1) {\n                    this.$('.block-header').css({'background-color': 'rgba(255,255,255,0.5)'});\n                    this.$('.block-name.second-text').addClass('fade-out');\n                    this.$('.block-name:not(.second-text)').removeClass('fade-out');\n                }\n                else {\n                    this.$('.block-header').css({'background-color': 'rgba(255,255,255,0)'});\n                    this.$('.block-name.second-text').text('');\n                    this.$('.block-name.second-text').addClass('fade-out');\n                    this.$('.block-name:not(.second-text)').removeClass('fade-out');\n                }\n                let bottom_block_scroll\n                if (this.$('.bottom-block'))\n                    bottom_block_scroll = this.$('.bottom-block').get(0).getBoundingClientRect().top;\n                if (bottom_block_scroll && bottom_block_scroll < 150) {\n                    this.$('.bottom-block .tabs').addClass('fixed-scroll');\n                    this.$('.btn-back').addClass('btn-top');\n                    this.$('.btn-back i').addClass('mdi-arrow-right').removeClass('mdi-close');\n                    this.$('.bottom-block .participants-search-form').addClass('fixed-scroll');\n                    this.$('.buttons-wrap').hideIf(true);\n                    this.$('.btn-edit').hideIf(true);\n                    this.$('.btn-qr-code').hideIf(true);\n                    this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n                    this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n                    this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n                }\n                else {\n                    this.$('.btn-back').removeClass('btn-top');\n                    this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n                    this.$('.bottom-block .tabs').removeClass('fixed-scroll');\n                    this.$('.bottom-block .participants-search-form').removeClass('fixed-scroll');\n                    this.$('.buttons-wrap').hideIf(false);\n                    this.$('.btn-edit').hideIf(false);\n                    this.$('.btn-qr-code').hideIf(false);\n                }\n            },\n\n            clickAvatarInput: function (ev) {\n                this.$('.circle-avatar input').click();\n            },\n\n            updateMemberAvatar: function (member) {\n                let participant_id = member.get('id'),\n                    $avatar = this.$(`.circle-avatar`);\n                member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n                $avatar.setAvatar(member.image, this.member_details_avatar_size);\n                $avatar.removeClass('changed');\n                if (member.get('avatar')) {\n                    if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                        $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n                    else {\n                        if (member.get('avatar_url')){\n                            $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                        }\n                        else {\n                            let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                            this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                                this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                            });\n                        }\n                    }\n                }\n                else {\n                    if (this.account.chat_settings.getHashAvatar(participant_id))\n                        $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n                }\n            },\n\n            updateRightsView: function (ev) {\n                !$(ev.target).hasClass('non-active') && this.render(this.participant);\n            },\n\n            getMessages: function (options) {\n                let chat = this.account.chats.getChat(this.contact);\n                chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n                chat.messages_view.messagesRequest(options, () => {\n                    xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n                    this.open(this.participant, this.data_form);\n                });\n            },\n\n            changeAvatar: function (ev) {\n                let field = ev.target;\n                if (!field.files.length)\n                    return;\n                let file = field.files[0];\n                field.value = '';\n                if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n                    return;\n                } else if (!file.type.startsWith('image')) {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                    return;\n                }\n\n                utils.images.getAvatarFromFile(file).done((image) => {\n                    if (image) {\n                        file.base64 = image;\n                        this.new_avatar = file;\n                        this.$('.participant-details-edit-wrap .circle-avatar').addClass('changed');\n                        this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n                        this.updateSaveButton();\n                    }\n                });\n            },\n\n            changeTimerValue: function (ev) {\n                let $property_item = $(ev.target),\n                    $property_value = $property_item.closest('.select-timer').find('.property-value'),\n                    $input_item = $property_item.closest('.right-item').find('input');\n                if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n                    $property_item.closest('.right-item').addClass('changed-timer changed');\n                    this.updateSaveButton();\n                }\n                $property_value.text($property_item.text());\n                $property_value.attr('data-value', $property_item.attr('data-value'));\n                if ($property_item.attr('data-value') === '0') {\n                    $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n                } else if ($property_value.hasClass('default-value'))\n                    $property_value.removeClass('default-value');\n                if (!$input_item.prop('checked')) {\n                    $input_item.click();\n                }\n            },\n\n            onBadgeUpdated: function (participant) {\n                let badge = _.escape(participant.get('badge'));\n                this.updateBadge(badge);\n            },\n\n            updateBadge: function (badge) {\n                this.$('.badge').html(badge).switchClass('hidden', !badge);\n                this.$('.participant-info').emojify('.badge');\n                this.$('.participant-info').emojify('.participant-edit-badge');\n            },\n\n            updateButtons: function (has_changes) {\n                this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n                this.$('.btn-save-user-rights').switchClass('fade-out', !has_changes);\n                this.$('.btn-edit-participant').switchClass('fade-out', has_changes);\n                if (has_changes) {\n                    this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n                    this.$('.block-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n                    this.$('.block-header .details-icon.parent-btn').removeClass('btn-back').addClass('btn-reset')\n                    this.$('.block-header .details-icon.child-btn').removeClass('btn-back-name').addClass('btn-reset-name')\n                    this.$('.block-header .block-name:not(.second-text)').addClass('fade-out');\n                    this.$('.block-header .block-name.second-text').removeClass('fade-out');\n                }\n                else{\n                    this.$('.block-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n                    this.$('.block-header .details-icon.parent-btn').addClass('btn-back').removeClass('btn-reset')\n                    this.$('.block-header .details-icon.child-btn').addClass('btn-back-name').removeClass('btn-reset-name')\n                    this.$('.block-header .block-name:not(.second-text)').removeClass('fade-out');\n                    this.$('.block-header .block-name.second-text').addClass('fade-out');\n                }\n            },\n\n            updateSaveButton: function () {\n                let has_changes = this.$('.changed').length;\n                this.updateButtons(has_changes);\n            },\n\n            updateNickname: function (nickname) {\n                let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n                    $member_item_nickname = $member_item.find('.nickname');\n                $member_item_nickname.html(Strophe.xmlescape(nickname));\n                $member_item.emojify('.nickname');\n                if (nickname !== this.participant.get('nickname'))\n                    $member_item_nickname.addClass('changed');\n                else\n                    $member_item_nickname.removeClass('changed');\n                this.updateSaveButton();\n            },\n\n            editNickname: function () {\n                if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n                    return;\n                this.$('.participant-info .nickname').hide();\n                this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n            },\n\n            editBadge: function (ev) {\n                if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n                    return;\n                this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n            },\n\n            checkKeydown: function (ev) {\n                if (ev && ev.keyCode === constants.KEY_ENTER) {\n                    ev.preventDefault();\n                    $(document.activeElement).blur();\n                }\n            },\n\n            checkKeyup: function (ev) {\n                let $richtextarea = $(ev.target),\n                    new_value = $richtextarea.getTextFromRichTextarea().trim();\n                if (ev.target.id === 'edit-nickname') {\n                    let has_changes = (new_value !== this.participant.get('nickname'));\n                    this.updateButtons(has_changes);\n                }\n            },\n\n            retractUserMessages: function () {\n                utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                    if (result) {\n                        if (this.participant.get('id')) {\n                            let group_chat = this.account.chats.getChat(this.contact);\n                            group_chat.retractMessagesByUser(this.participant.get('id'));\n                        }\n                    }\n                });\n            },\n\n            block: function () {\n                utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n                    null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n                    if (result) {\n                        this.participant.block(() => {this.close();},\n                            function (error) {\n\n                                if ($(error).find('not-allowed').length)\n                                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                            });\n                    }\n                });\n            },\n\n            kick: function (ev) {\n                if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n                    return;\n                utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n                    null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n                    if (result) {\n                        this.participant.kick(() => {\n                                this.close();\n                            }, (error) => {\n\n                                if ($(error).find('not-allowed').length)\n                                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                            });\n                    }\n                });\n            },\n\n            kickParticipantDialog: function (ev) {\n                if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n                    return;\n                utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n                    if (result) {\n                        if (result === 'block'){\n                            this.participant.block(() => {\n                                this.close();\n                                },\n                                function (error) {\n\n                                    if ($(error).find('not-allowed').length)\n                                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                                });\n                        }\n                        else{\n                            this.participant.kick(() => {\n                                this.close();\n                            }, (error) => {\n\n                                if ($(error).find('not-allowed').length)\n                                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                            });\n                        }\n                    }\n                });\n            },\n\n            setVisibility: function (ev) {\n                    utils.dialogs.error('Feature not yet implemented')\n            },\n\n            setActualRights: function () {\n                this.$('.rights-wrap').html(\"\");\n                this.data_form.fields && this.data_form.fields.forEach((field) => {\n                    field = _.clone(field);\n                    if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0 || field.values && field.label)) {\n                        !field.values && (field.values = []);\n                        let attrs = {\n                                pretty_name: field.label,\n                                name: field.var,\n                                expires: field.values ? field.values[0] : undefined\n                            },\n                            restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                            restriction_expire;\n                        if (field.options) {\n                            restriction_expire = $(templates.group_chats.right_expire_variants({\n                                right_name: ('default-' + attrs.name),\n                                expire_options: field.options\n                            }));\n                            restriction_item.append(restriction_expire);\n                        }\n                        this.$('.rights-wrap').append(restriction_item);\n                        if (attrs.expires) {\n                            this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                            this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                            if (attrs.expires != 0) {\n                                let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                                if ($current_restriction.find('.select-timer .property-value').length)\n                                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                                        .removeClass('default-value')\n                                        .text(moment(Number(attrs.expires)*1000).fromNow());\n                                else{\n                                    $current_restriction.append($('<div class=\"select-timer\"/>'));\n                                    $current_restriction.find('.select-timer').attr('data-value', attrs.expires)\n                                        .text(moment(Number(attrs.expires)*1000).fromNow())\n                                }\n                            }\n                        }\n                    } else if (field.type  === 'fixed')\n                        field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n                });\n            },\n\n            getPrivateChat: function (ev) {\n                if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n                    return;\n                let participant_jid = this.participant.get('jid'),\n                    participant_in_roster = this.account.contacts.get(participant_jid);\n                if (!participant_jid || this.contact.get('incognito_chat')) {\n                    let iq = $iq({to: this.contact.domain, type: 'set'})\n                        .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                        .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n                    this.account.sendIQFast(iq, (iq_response) => {\n                        let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                            contact = this.account.contacts.mergeContact(group_jid);\n                        contact.set('group_chat', true);\n                        contact.set('subscription_preapproved', true);\n                        contact.pres('subscribed');\n                        contact.pushInRoster(null, () => {\n                            contact.pres('subscribe');\n                            contact.getMyInfo();\n                            this.close();\n                            contact.sendPresent();\n                            this.account.chats.openChat(contact);\n                            let chat = this.account.chats.getChat(contact);\n                            chat.messages.createSystemMessage({\n                                from_jid: group_jid,\n                                message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                            });\n                        });\n                    }, (error) => {\n                        let $error = $(error),\n                            private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                        if (private_chat_jid) {\n                            let contact = this.account.contacts.mergeContact(private_chat_jid),\n                                chat = this.account.chats.getChat(contact);\n                            this.close();\n                            chat && chat.trigger('open');\n                            return;\n                        }\n                        let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                        this.close();\n                        utils.dialogs.error(err_text);\n                    });\n                }\n                else {\n                    if (participant_in_roster)\n                        if (participant_in_roster.get('in_roster')) {\n                            this.close();\n                            participant_in_roster.trigger('open_chat', participant_in_roster);\n                            return;\n                        }\n                    this.close();\n                    xabber.add_contact_view.show({\n                        account: this.account,\n                        jid: participant_jid\n                    });\n                }\n            },\n\n            changeRights: function (ev) {\n                let $target = $(ev.target),\n                    $right_item = $target.closest('.right-item'),\n                    right_name = $target.prop('id');\n                if ($target.prop('checked')) {\n                    if (this.actual_rights && !this.actual_rights.find(right => right.name === right_name))\n                        $right_item.addClass('changed');\n                    else\n                        if ($right_item.hasClass('changed-timer'))\n                            $right_item.addClass('changed');\n                        else\n                            $right_item.removeClass('changed');\n                }\n                else {\n                    if (this.actual_rights && this.actual_rights.find(right => right.name === right_name))\n                        $right_item.addClass('changed');\n                    else {\n                        $right_item.removeClass('changed');\n                        if ($right_item.hasClass('changed-timer'))\n                            $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n                    }\n                }\n                this.updateSaveButton();\n            },\n\n            saveRights: function (ev) {\n                if ($(ev.target).hasClass('non-active'))\n                    return;\n                let $btn = $(ev.target),\n                    jid = this.account.get('jid'),\n                    member_id = this.participant.get('id'),\n                    $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n                    nickname_value = this.$('.participant-name-input').val(),\n                    new_badge = this.$('.participant-badge-input').val(),\n                    changed_avatar = this.new_avatar,\n                    rights_changed = false,\n                    has_changes = false,\n                    iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                        .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n                this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n                changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n                if (nickname_value != this.participant.get('nickname')) {\n                    has_changes = true;\n                    iq_changes.c('nickname').t(nickname_value).up();\n                }\n                if (Array.from(new_badge).length > 32)\n                    utils.dialogs.error(xabber.getString(\"groupchat__set_badge__error_length\"));\n                else {\n                    if (new_badge != this.participant.get('badge')) {\n                        has_changes = true;\n                        iq_changes.c('badge').t(new_badge).up();\n                    }\n                }\n                this.$('.right-item').each((idx, right_item) => {\n                    if ($(right_item).hasClass('changed')) {\n                        let $right_item = $(right_item),\n                            right_name = $right_item.find('.field input')[0].id;\n                        if ($right_item.find('.field input:checked').val()) {\n                            let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                                field = this.data_form.fields.find(f => f.var === right_name),\n                                field_idx = this.data_form.fields.indexOf(field);\n                            field.values = [right_expire];\n                            this.data_form.fields[field_idx] = field;\n                            rights_changed = true;\n                        }\n                        else {\n                            let field = this.data_form.fields.find(f => f.var === right_name);\n                            if (field.values.length) {\n                                let field_idx = this.data_form.fields.indexOf(field);\n                                field.values = [];\n                                this.data_form.fields[field_idx] = field;\n                                rights_changed = true;\n                            }\n                        }\n                    }\n                });\n                if (changed_avatar)\n                    this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                        $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                        // this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                        this.$(`.circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                        this.close();\n                    }, function (error) {\n                        $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                        let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                        !has_changes && utils.dialogs.error(error_text);\n                        this.close();\n                    });\n                if (has_changes)\n                    this.account.sendIQFast(iq_changes,\n                        () => {\n                            this.$('.buttons-wrap button').removeClass('non-active');\n                            this.participant.set('nickname', nickname_value);\n                            this.close();\n                        },\n                        (error) => {\n                            this.$('.buttons-wrap button').removeClass('non-active');\n                            this.close();\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                if (rights_changed) {\n                    let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n                    iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n                    this.account.sendIQFast(iq_rights_changes, () => {\n                            this.close();\n                        },\n                        (error) => {\n                            this.close();\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                $btn.blur();\n            }\n        });\n\n        xabber.EditBadgeView = xabber.BasicView.extend({\n            className: 'modal edit-badge',\n            template: templates.group_chats.badge_edit_view,\n\n            events: {\n                \"click .btn-cancel\": \"close\",\n                \"click .btn-save\": \"saveNewBadge\",\n                \"keydown .badge-text\": \"checkKey\"\n            },\n\n            _initialize: function () {\n                this.account = this.model.account;\n                this.contact = this.model.contact;\n                this.participant = this.model.participant;\n                this.$el.openModal({\n                    ready: () => {\n                        if (this.participant.get('badge'))\n                            this.typeEmoticon(this.participant.get('badge'));\n                        else\n                            this.$('.badge-text').focus();\n                    },\n                    complete: () => {\n                        this.$el.detach();\n                        this.data.set('visible', false);\n                    }\n                });\n                let $insert_emoticon = this.$('.insert-emoticon'),\n                    $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n                    $emoji_panel = this.$('.emoticons-panel'),\n                    _timeout;\n\n                for (let emoji_list in Emoji.all) {\n                    let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                        list_name = emoji_list.replace(/ /g, '_');\n                    $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n                    _.each(Emoji.all[emoji_list], function (emoji) {\n                        $('<div class=\"emoji-wrap\"/>').html(\n                            emoji.emojify({emoji_size: 24, sprite: list_name})\n                        ).appendTo($emoji_list_wrap);\n                    });\n                    $emoji_list_wrap.appendTo($emoji_panel);\n                    $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n                }\n                $emoji_panel.perfectScrollbar(\n                    _.extend({theme: 'item-list'}, xabber.ps_settings));\n                this.$('.emoji-menu .emoji').click((ev) => {\n                    $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n                });\n                $insert_emoticon.hover((ev) => {\n                    if (ev && ev.preventDefault) { ev.preventDefault(); }\n                    $emoji_panel_wrap.addClass('opened');\n                    if (_timeout) {\n                        clearTimeout(_timeout);\n                    }\n                    $emoji_panel.perfectScrollbar('update');\n                }, (ev) => {\n                    if (ev && ev.preventDefault) { ev.preventDefault(); }\n                    if (_timeout) {\n                        clearTimeout(_timeout);\n                    }\n                    _timeout = setTimeout(function () {\n                        if (!$emoji_panel_wrap.is(':hover')) {\n                            $emoji_panel_wrap.removeClass('opened');\n                        }\n                    }, 800);\n                });\n                $emoji_panel_wrap.hover(null, (ev) => {\n                    if (ev && ev.preventDefault) { ev.preventDefault(); }\n                    if (_timeout) {\n                        clearTimeout(_timeout);\n                    }\n                    _timeout = setTimeout(function () {\n                        $emoji_panel_wrap.removeClass('opened');\n                    }, 200);\n                });\n                $emoji_panel_wrap.mousedown((ev) => {\n                    if (ev && ev.preventDefault) { ev.preventDefault(); }\n                    if (ev.button)\n                        return;\n                    let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n                    $target.length && this.typeEmoticon($target.data('emoji'));\n                });\n            },\n\n            close: function () {\n                this.$el.closeModal({ complete: () => {\n                        this.$el.detach();\n                        this.data.set('visible', false);\n                }});\n            },\n\n            saveNewBadge: function () {\n                let new_badge = this.$('.badge-text').getTextFromRichTextarea();\n                if (Array.from(new_badge).length > 32)\n                    this.$('.modal-content .error').text(xabber.getString(\"groupchat__set_badge__error_length\"));\n                else {\n                    if (new_badge != this.participant.get('badge')) {\n                        let iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`})\n                            .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: this.participant.get('id')})\n                            .c('badge').t(new_badge);\n                        this.account.sendIQFast(iq_changes, () => {\n                            this.model.updateBadge(new_badge);\n                            this.close();\n                        }, () => {\n                            this.$('.modal-content .error').text(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        })\n                    }\n                }\n            },\n\n            typeEmoticon: function (emoji) {\n                let emoji_node = emoji.emojify({tag_name: 'span'}),\n                    $textarea = this.$('.badge-text');\n                $textarea.focus().pasteHtmlAtCaret(emoji_node);\n            },\n\n            checkKey: function (ev) {\n                if (ev.keyCode === constants.KEY_ENTER) {\n                    ev.preventDefault();\n                    this.saveNewBadge();\n                }\n            }\n\n        });\n\n        xabber.DefaultRestrictionsView = xabber.BasicView.extend({\n            className: 'modal dialog-modal edit-default-restrictions',\n            template: templates.group_chats.default_restrictions,\n            events: {\n                \"click .btn-default-restrictions-save\": \"saveChanges\",\n                \"click .btn-default-restrictions-cancel\": \"close\",\n                \"change #default_restriction_expires\": \"changeExpiresTime\",\n                \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n                \"click .select-timer .property-variant\": \"changeTimerValue\",\n                \"click .clickable-field input\": \"changeRestriction\",\n                \"keyup .clickable-field input\": \"keyUpInput\",\n                \"change .clickable-field input\": \"updateSaveButton\"\n            },\n\n            _initialize: function () {\n                this.contact = this.model;\n                this.account = this.contact.account;\n            },\n\n            open: function () {\n                this.update(() => {\n                    this.$el.openModal({\n                        ready: () => {\n                            this.$('.select-timer .dropdown-button').dropdown({\n                                inDuration: 100,\n                                outDuration: 100,\n                                constrainWidth: false,\n                                hover: false,\n                                alignment: 'left'\n                            });\n                            this.updateScrollBar();\n                        },\n                        complete: () => {\n                            this.$el.detach();\n                            this.data.set('visible', false);\n                        }\n                    });\n                });\n            },\n\n            close: function () {\n                this.$el.closeModal({\n                    complete: () => {\n                        this.hide.bind(this);\n                    }\n                });\n            },\n\n            update: function (callback) {\n                this.$('.btn-default-restrictions-save').addClass('non-active');\n                this.default_restrictions = [];\n                this.actual_default_restrictions = [];\n                this.$('button').blur();\n                let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                    .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n                this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n                    this.showDefaultRestrictions(iq_all_rights);\n                    callback && callback();\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n            },\n\n            updateSaveButton: function () {\n                let has_changes = false;\n                this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n                    let $item = $(item),\n                        restriction_name = $item.find('input').attr('id'),\n                        restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n                    restriction_name = restriction_name.slice(8, restriction_name.length);\n                    if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                        if ($item.find('input').prop('checked'))\n                            has_changes = true;\n                        else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                            has_changes = true;\n                    }\n                });\n                this.$('.btn-default-restrictions-save').switchClass('non-active', !has_changes);\n            },\n\n            changeRestriction: function (ev) {\n                let $target = $(ev.target);\n                if (!$target.prop('checked')) {\n                    $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                        .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n                }\n            },\n\n            keyUpInput: function (ev) {\n                if (ev && ev.keyCode === constants.KEY_ENTER)\n                    $(ev.target).click();\n            },\n\n            changePropertyValue: function (ev) {\n                let $property_item = $(ev.target),\n                    $property_value = $property_item.closest('.property-field').find('.property-value');\n                $property_value.text($property_item.text());\n                $property_value.attr('data-value', $property_item.attr('data-value'));\n            },\n\n            changeTimerValue: function (ev) {\n                let $property_item = $(ev.target),\n                    $property_value = $property_item.closest('.select-timer').find('.property-value'),\n                    $input_item = $property_item.closest('.right-item').find('input');\n                $property_value.text($property_item.text());\n                $property_value.attr('data-value', $property_item.attr('data-value'));\n                if ($property_item.attr('data-value') == 0) {\n                    $property_value.addClass('default-value');\n                    $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n                } else if ($property_value.hasClass('default-value'))\n                    $property_value.removeClass('default-value');\n                if (!$input_item.prop('checked'))\n                    $input_item.prop('checked', true);\n                this.updateSaveButton();\n            },\n\n            showDefaultRestrictions: function (iq_all_rights) {\n                let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                data_form && (this.default_restrictions = _.clone(data_form));\n                data_form.fields.forEach((field) => {\n                    if (field.type === 'fixed' || field.type === 'hidden')\n                        return;\n                    let attrs = {\n                            pretty_name: field.label,\n                            name: field.var,\n                            expires: field.values ? field.values[0] : undefined\n                        },\n                        view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                        restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                        restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n                    if (view.length)\n                        view.detach();\n                    restriction_item.append(restriction_expire);\n                    this.$('.default-restrictions-list-wrap').append(restriction_item);\n                    if (attrs.expires) {\n                        this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                        this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                        if (attrs.expires != 0) {\n                            let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                            $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                                .removeClass('default-value')\n                                .text(field.options.find(x => x.value === attrs.expires).label);\n                        }\n                    }\n                });\n            },\n\n            saveChanges: function () {\n                if (this.$('.btn-default-restrictions-save').hasClass('non-active'))\n                    return;\n                this.$('button').blur();\n                let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                        .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n                    has_new_default_restrictions = false,\n                    data_form = _.clone(this.default_restrictions);\n                this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n                    let $item = $(item),\n                        restriction_name = $item.find('input').attr('id'),\n                        restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n                    restriction_name = restriction_name.slice(8, restriction_name.length);\n                    if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                        if ($item.find('input').prop('checked')) {\n                            let field = data_form.fields.find(f => f.var === restriction_name),\n                                field_idx = data_form.fields.indexOf(field);\n                            field.values = [restriction_expires];\n                            data_form.fields[field_idx] = field;\n                            has_new_default_restrictions = true;\n                        }\n                        else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                            let field = data_form.fields.find(f => f.var === restriction_name),\n                                field_idx = data_form.fields.indexOf(field);\n                            field.values = [\"\"];\n                            data_form.fields[field_idx] = field;\n                            has_new_default_restrictions = true;\n                        }\n                    }\n                });\n\n                if (has_new_default_restrictions) {\n                    this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n                    this.account.sendIQFast(iq_change_default_rights, () => {\n                        this.close();\n                    }, (error) => {\n                        let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                        utils.dialogs.error(err_text);\n                        this.close();\n                    });\n                }\n            },\n\n            changeExpiresTime: function (ev) {\n                let expire_time_item = $(ev.target),\n                    new_expire_time = expire_time_item.val(),\n                    $restriction_item = expire_time_item.prev();\n                if (expire_time_item.val() == '0')\n                    $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n                else\n                    $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n                $restriction_item .find('input').removeClass().addClass(new_expire_time);\n                expire_time_item.remove();\n            }\n        });\n\n        xabber.DefaultRestrictionsRightView = xabber.BasicView.extend({\n            className: 'modal dialog-modal edit-default-restrictions',\n            template: templates.group_chats.default_restrictions_right,\n            events: {\n                \"click .btn-default-restrictions-save\": \"saveChanges\",\n                \"click .btn-default-restrictions-cancel\": \"hideRestrictions\",\n                \"click .btn-back\": \"hideRestrictions\",\n                \"click .btn-reset\": \"showRestrictions\",\n                \"change #default_restriction_expires\": \"changeExpiresTime\",\n                \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n                \"click .select-timer .property-variant\": \"changeTimerValue\",\n                \"click .clickable-field input\": \"changeRestriction\",\n                \"keyup .clickable-field input\": \"keyUpInput\",\n                \"change .clickable-field input\": \"updateSaveButton\"\n            },\n\n            _initialize: function () {\n                this.contact = this.model;\n                this.account = this.contact.account;\n                this.model.set('restrictions_hidden', true)\n            },\n\n            render: function () {\n                this.$el.html(this.template(_.extend({view: this}, constants)));\n                this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n            },\n\n            showRestrictions: function (ev) {\n                this.model.set('restrictions_hidden', false);\n                this.update(() => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n                    this.updateSaveButton()\n                });\n            },\n\n            hideRestrictions: function (ev) {\n                this.parent.hideRestrictions();\n            },\n\n            open: function () {\n                this.update(() => {\n                    this.$el.openModal({\n                        ready: () => {\n                            this.$('.select-timer .dropdown-button').dropdown({\n                                inDuration: 100,\n                                outDuration: 100,\n                                constrainWidth: false,\n                                hover: false,\n                                alignment: 'left'\n                            });\n                            this.updateScrollBar();\n                        },\n                        complete: () => {\n                            this.$el.detach();\n                            this.data.set('visible', false);\n                        }\n                    });\n                });\n            },\n\n            update: function (callback) {\n                this.$('.btn-default-restrictions-save').addClass('fade-out');\n                this.default_restrictions = [];\n                this.actual_default_restrictions = [];\n                this.$('button').blur();\n                let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                    .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n                this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n                    this.showDefaultRestrictions(iq_all_rights);\n                    callback && callback();\n                }, () => {\n\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n            },\n\n            updateSaveButton: function () {\n                let has_changes = false;\n                this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n                    let $item = $(item),\n                        restriction_name = $item.find('input').attr('id'),\n                        restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n                    restriction_name = restriction_name.slice(8, restriction_name.length);\n                    if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                        if ($item.find('input').prop('checked'))\n                            has_changes = true;\n                        else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                            has_changes = true;\n                    }\n                });\n                this.$('.btn-default-restrictions-save').switchClass('fade-out', !has_changes);\n                if (has_changes) {\n                    this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n                    this.$('.restrictions-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n                    this.$('.restrictions-header .details-icon').removeClass('btn-back').addClass('btn-reset')\n                    this.$('.restrictions-header .block-name:not(.second-text)').addClass('fade-out');\n                    this.$('.restrictions-header .block-name.second-text').removeClass('fade-out');\n                }\n                else{\n                    this.$('.restrictions-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n                    this.$('.restrictions-header .details-icon').addClass('btn-back').removeClass('btn-reset')\n                    this.$('.restrictions-header .block-name:not(.second-text)').removeClass('fade-out');\n                    this.$('.restrictions-header .block-name.second-text').addClass('fade-out');\n                }\n            },\n\n            changeRestriction: function (ev) {\n                let $target = $(ev.target);\n                if (!$target.prop('checked')) {\n                    $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                        .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n                }\n            },\n\n            keyUpInput: function (ev) {\n                if (ev && ev.keyCode === constants.KEY_ENTER)\n                    $(ev.target).click();\n            },\n\n            changePropertyValue: function (ev) {\n                let $property_item = $(ev.target),\n                    $property_value = $property_item.closest('.property-field').find('.property-value');\n                $property_value.text($property_item.text());\n                $property_value.attr('data-value', $property_item.attr('data-value'));\n            },\n\n            changeTimerValue: function (ev) {\n                let $property_item = $(ev.target),\n                    $property_value = $property_item.closest('.select-timer').find('.property-value'),\n                    $input_item = $property_item.closest('.right-item').find('input');\n                $property_value.text($property_item.text());\n                $property_value.attr('data-value', $property_item.attr('data-value'));\n                if ($property_item.attr('data-value') == 0) {\n                    $property_value.addClass('default-value');\n                    $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n                } else if ($property_value.hasClass('default-value'))\n                    $property_value.removeClass('default-value');\n                if (!$input_item.prop('checked'))\n                    $input_item.prop('checked', true);\n                this.updateSaveButton();\n            },\n\n            showDefaultRestrictions: function (iq_all_rights) {\n                let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                data_form && (this.default_restrictions = _.clone(data_form));\n                data_form.fields.forEach((field) => {\n                    if (field.type === 'fixed' || field.type === 'hidden')\n                        return;\n                    let attrs = {\n                            pretty_name: field.label,\n                            name: field.var,\n                            expires: field.values ? field.values[0] : undefined\n                        },\n                        view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                        restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                        restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n                    if (view.length)\n                        view.detach();\n                    restriction_item.append(restriction_expire);\n                    this.$('.default-restrictions-list-wrap').append(restriction_item);\n                    if (attrs.expires) {\n                        this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                        this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                        if (attrs.expires != 0) {\n                            let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                            $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                                .removeClass('default-value')\n                                .text(field.options.find(x => x.value === attrs.expires).label);\n                        }\n                    }\n                });\n            },\n\n            saveChanges: function () {\n                if (this.$('.btn-default-restrictions-save').hasClass('fade-out'))\n                    return;\n                this.$('.btn-default-restrictions-save').addClass('fade-out')\n                this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n                this.$('button').blur();\n                let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                        .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n                    has_new_default_restrictions = false,\n                    data_form = _.clone(this.default_restrictions);\n                this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n                    let $item = $(item),\n                        restriction_name = $item.find('input').attr('id'),\n                        restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n                    restriction_name = restriction_name.slice(8, restriction_name.length);\n                    if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                        if ($item.find('input').prop('checked')) {\n                            let field = data_form.fields.find(f => f.var === restriction_name),\n                                field_idx = data_form.fields.indexOf(field);\n                            field.values = [restriction_expires];\n                            data_form.fields[field_idx] = field;\n                            has_new_default_restrictions = true;\n                        }\n                        else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                            let field = data_form.fields.find(f => f.var === restriction_name),\n                                field_idx = data_form.fields.indexOf(field);\n                            field.values = [\"\"];\n                            data_form.fields[field_idx] = field;\n                            has_new_default_restrictions = true;\n                        }\n                    }\n                });\n\n                if (has_new_default_restrictions) {\n                    this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n                    this.account.sendIQFast(iq_change_default_rights, () => {\n                        this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                        this.hideRestrictions();\n                    }, (error) => {\n\n                        let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                        utils.dialogs.error(err_text);\n                        this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                        this.hideRestrictions();\n                    });\n                }\n            },\n\n            changeExpiresTime: function (ev) {\n                let expire_time_item = $(ev.target),\n                    new_expire_time = expire_time_item.val(),\n                    $restriction_item = expire_time_item.prev();\n                if (expire_time_item.val() == '0')\n                    $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n                else\n                    $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n                $restriction_item .find('input').removeClass().addClass(new_expire_time);\n                expire_time_item.remove();\n            }\n        });\n\n        xabber.Participant = Backbone.Model.extend({\n            idAttribute: 'id',\n\n            initialize: function (_attrs, options) {\n                let attrs = _.clone(_attrs);\n                this.model = options.model;\n                this.contact = options.contact ? options.contact : this.model.contact;\n                this.account = this.contact.account;\n                this.on(\"change:avatar\", this.getBase64Avatar, this);\n                this.set(attrs);\n                this.getBase64Avatar();\n            },\n\n            getBase64Avatar: function () {\n                if (!this.get('id'))\n                    return;\n                if (this.get('avatar')) {\n                    let cached_info = this.account.chat_settings.getAvatarInfoById(this.get('id'));\n                    if (cached_info) {\n                        if (cached_info.avatar_hash == this.get('avatar')) {\n                            this.set('b64_avatar', cached_info.avatar_b64);\n                            (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                            return;\n                        }\n                    }\n                    if (this.get('avatar_url')){\n                        this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), this.get('avatar_url'));\n                        this.set('b64_avatar', this.get('avatar_url'));\n                        (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n\n                    } else {\n                        let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + this.get('id');\n                        this.contact.getAvatar(this.get('avatar'), node, (avatar) => {\n                            this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), avatar);\n                            this.set('b64_avatar', avatar);\n                            (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                        });\n\n                    }\n                }\n            },\n\n            kick: function (callback, errback) {\n                let id = this.get('id'),\n                    jid = this.get('jid'),\n                    iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('kick', {xmlns: Strophe.NS.GROUP_CHAT});\n                if (jid)\n                    iq.c('jid').t(jid);\n                else\n                    iq.c('id').t(id);\n                this.account.sendIQFast(iq, () => {\n                    callback && callback();\n                }, (err) => {\n                    errback && errback(err);\n                });\n            },\n\n            block: function (callback, errback) {\n                let id = this.get('id'),\n                    iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                        .c('id').t(id);\n                this.account.sendIQFast(iq, () => {\n                    callback && callback();\n                }, function (err) {\n                    errback && errback(err);\n                });\n            }\n        });\n\n        xabber.Participants = Backbone.Collection.extend({\n            model: xabber.Participant,\n            comparator: 'nickname',\n\n            initialize: function (models, options) {\n                this.contact = options.contact;\n                this.account = this.contact.account;\n                this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid'));\n                this.getCachedParticipants();\n                this.contact.on(\"update_participants\", this.updateParticipants, this);\n                this.on(\"change:nickname\", this.sort, this);\n            },\n\n            updateVersion: function () {\n                this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid')) || this.version;\n            },\n\n            getCachedParticipants: function () {\n                this.account.groupchat_settings.getParticipantsList(this.contact.get('jid')).forEach((participant) => {\n                    this.mergeParticipant(participant);\n                });\n            },\n\n            mergeParticipant: function (attrs) {\n                if (typeof attrs !== \"object\")\n                    attrs = {id: attrs};\n                let participant = this.get(attrs.id);\n                if (participant)\n                    participant.set(attrs);\n                else {\n                    participant = this.create(attrs, {model: this});\n                }\n                return participant;\n            },\n\n            resetParticipants: function () {\n                this.version = 0;\n                _.each(_.clone(this.models), function (participant) {\n                    participant.destroy();\n                });\n            },\n\n            getRights: function (rights) {\n                let pretty_rights = [];\n                $(rights).each((idx, permission) => {\n                    let name = $(permission).attr('name'),\n                        pretty_name = $(permission).attr('translation'),\n                        issued_time = $(permission).attr('issued-at'),\n                        expires_time = $(permission).attr('expires');\n                    pretty_rights.push({\n                        name: name,\n                        pretty_name: pretty_name,\n                        issued_time: issued_time,\n                        expires_time: expires_time\n                    });\n                });\n                return pretty_rights;\n            },\n\n            updateParticipants: function () {\n                this.participantsRequest({version: this.version}, () => {\n                    this.trigger(\"participants_updated\");\n                    chat = this.account.chats.getChat(this.contact);\n                    if (chat.item_view) {\n                        if (!chat.item_view.content)\n                            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                        chat.item_view.content.updatePinnedMessage()\n                    }\n                });\n            },\n\n            participantsRequest: function (options, callback, errback) {\n                options = options || {};\n                let participant_id = options.id,\n                    version = options.version || 0,\n                    iq = $iq({to: this.contact.get('full_jid'), type: 'get'});\n                if (participant_id != undefined) {\n                    if (options.properties)\n                        iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, id: participant_id});\n                    else\n                        iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights`}).c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: participant_id});\n                }\n                else\n                    iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, version: version});\n                this.account.sendFast(iq, (response) => {\n                    let $response = $(response),\n                        version = $response.find('query').attr('version');\n                    version && (this.version = Number(version));\n                    $response.find(`query user`).each((idx, item) => {\n                        let $item = $(item),\n                            subscription = $item.find('subscription').text(),\n                            id = $item.find('id').text();\n                        if (subscription === 'none') {\n                            this.get(id) && this.get(id).destroy();\n                            this.account.groupchat_settings.removeParticipantFromList(this.get('jid'), id);\n                        }\n                        else\n                            this.createFromStanza($item);\n                    });\n                    callback && callback(response);\n                }, (error) => {\n                    errback && errback(error);\n                });\n            },\n\n            search: function (query) {\n                let list = [];\n                this.models.forEach((participant) => {\n                    let jid = participant.get('jid');\n                    if (query) {\n                        query = query.toLowerCase();\n                        let nickname = participant.get('nickname');\n                        if (jid && jid.toLowerCase().indexOf(query) > -1 || nickname && nickname.toLowerCase().indexOf(query) > -1)\n                            list.push(participant);\n                    } else\n                        list.push(participant);\n                });\n                return list;\n            },\n\n            createFromStanza: function ($item) {\n                let jid = $item.find('jid').text(),\n                    nickname = $item.find('nickname').text(),\n                    id = $item.attr('id'),\n                    badge = $item.find('badge').text(),\n                    present = $item.find('present').text(),\n                    photo = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('id'),\n                    photo_url = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('url'),\n                    role = $item.find('role').text();\n                !nickname.trim().length && (nickname = jid || id);\n\n                let attrs = {\n                    jid: jid,\n                    id: id,\n                    avatar: photo,\n                    avatar_url: photo_url,\n                    nickname: nickname,\n                    badge: badge,\n                    present: present,\n                    role: role\n                };\n\n                let participant = this.mergeParticipant(attrs);\n                (this.account.get('jid') === participant.get('jid')) && (this.contact.my_info = participant) && this.contact.trigger('update_my_info');\n                this.account.groupchat_settings.updateParticipant(this.contact.get('jid'), attrs);\n                return participant;\n            }\n        });\n\n        xabber.GroupChatSettings = Backbone.ModelWithStorage.extend({\n            defaults: {\n                participants_lists: []\n            },\n\n            getParticipantsListVersion: function (jid) {\n                let all_participants_lists = _.clone(this.get('participants_lists')),\n                    result = all_participants_lists.find(list => list.jid === jid);\n                if (result)\n                    return result.version;\n                else\n                    return 0;\n            },\n\n            setParticipantsListVersion: function (jid, version) {\n                let all_participants_lists = _.clone(this.get('participants_lists')),\n                    participants_list = all_participants_lists.find(list => list.jid === jid),\n                    participants_list_idx = all_participants_lists.indexOf(participants_list);\n                if (participants_list_idx != -1) {\n                    all_participants_lists.splice(participants_list_idx, 1);\n                }\n                if (!participants_list) {\n                    participants_list = {jid: jid, participants_list: [], version: 0};\n                }\n                else\n                    participants_list.version = version;\n                all_participants_lists.push(participants_list);\n                this.save('participants_lists', all_participants_lists);\n            },\n\n            getParticipantsList: function (jid) {\n                let all_participants_lists = _.clone(this.get('participants_lists')),\n                    result = all_participants_lists.find(list => list.jid === jid);\n                if (result && result.participants_list)\n                    return result.participants_list;\n                else\n                    return [];\n            },\n\n            updateParticipant: function (jid, participant_info) {\n                let all_participants_lists = _.clone(this.get('participants_lists')),\n                    chat_participants = all_participants_lists.find(list => list.jid === jid),\n                    version = chat_participants && chat_participants.version || 0,\n                    participants_list = chat_participants && chat_participants.participants_list || [],\n                    participants_list_idx = all_participants_lists.indexOf(chat_participants);\n                if (participants_list.length) {\n                    let participant = participants_list.find(participant_item => participant_item.id === participant_info.id),\n                        participant_idx = participants_list.indexOf(participant);\n                    if (participant_idx != -1)\n                        participants_list[participant_idx] = participant_info;\n                    else\n                        participants_list.push(participant_info);\n                }\n                else\n                    participants_list.push(participant_info);\n                if (participants_list_idx != -1) {\n                    all_participants_lists.splice(participants_list_idx, 1);\n                }\n                all_participants_lists.push({jid: jid, participants_list: participants_list, version: version});\n                this.save('participants_lists', all_participants_lists);\n            },\n\n            setParticipantsList: function (jid, updated_participants_list) {\n                let all_participants_lists = _.clone(this.get('participants_lists')),\n                    participants_list = all_participants_lists.find(list => list.jid === jid) || [],\n                    participants_list_idx = all_participants_lists.indexOf(participants_list);\n                if (participants_list_idx != -1)\n                    all_participants_lists.splice(participants_list_idx, 1);\n                all_participants_lists.push({jid: jid, participants_list: updated_participants_list, version: participants_list.version});\n                this.save('participants_lists', all_participants_lists);\n            },\n\n            removeParticipantFromList: function (jid, participant_id) {\n                let participants_list = this.getParticipantsList(jid);\n                if (participants_list.length) {\n                    let participant_idx = participants_list.indexOf(participants_list.find(participant => participant.id === participant_id));\n                    if (participant_idx != -1)\n                        participants_list.splice(participant_idx, 1);\n                    this.setParticipantsList(jid, participants_list);\n                }\n            },\n\n            resetParticipantsList: function (jid) {\n                let all_participants_lists = _.clone(this.get('participants_lists')),\n                    participants_list_idx = all_participants_lists.indexOf(all_participants_lists.find(list => list.jid === jid));\n                if (participants_list_idx != -1)\n                    all_participants_lists.splice(participants_list_idx, 1);\n                all_participants_lists.push({jid: jid, participants_list: [], version: 0});\n                this.save('participants_lists', all_participants_lists);\n            }\n        });\n\n        xabber.GroupchatInvitationView = xabber.BasicView.extend({\n            className: 'details-panel invitation-view',\n            template: templates.group_chats.invitation,\n            ps_selector: '.panel-content',\n            avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n            events: {\n                \"click .btn-join\": \"join\",\n                \"click .btn-decline\": \"reject\",\n                \"click .btn-block\": \"blockContact\"\n            },\n\n            _initialize: function (options) {\n                this.account = this.model.account;\n                this.$('.msg-text').text(options.message && options.message.get('message') ? options.message.get('message') : xabber.getString(\"groupchat__public_group__text_invitation\", [this.account.get('jid')]));\n                this.message = options.message;\n                this.model.on(\"change\", this.update, this);\n            },\n\n            render: function () {\n                this.model.set('visible', true);\n                this.updateAvatar();\n                this.updateName();\n            },\n\n            hide: function () {\n                this.trigger('before_hide', this);\n                this.data.set('visible', false);\n                this.model.set('visible', false);\n                this.onHide.apply(this, arguments);\n            },\n\n            update: function () {\n                let changed = this.model.changed;\n                if (_.has(changed, 'name')) this.updateName();\n                if (_.has(changed, 'image')) this.updateAvatar();\n            },\n\n            openChat: function () {\n                this.model.set('in_roster', true);\n                this.model.trigger(\"open_chat\", this.model);\n            },\n\n            closeChat: function () {\n                let chat = this.account.chats.getChat(this.model);\n                chat.set({'opened': false, 'display': false, 'active': false});\n                xabber.body.setScreen('all-chats', { right: undefined });\n                chat.item_view.content.readMessages();\n            },\n\n            updateAvatar: function () {\n                let image = this.model.cached_image;\n                this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n            },\n\n            updateName: function () {\n                this.$('.main-info  .name-wrap').text(this.model.get('name'));\n                if (this.model.get('name-wrap') == this.model.get('jid')) {\n                    this.$('.main-info .name-wrap').addClass('name-is-jid');\n                    this.$('.main-info  .jid').text('');\n                }\n                else {\n                    this.$('.main-info .name-wrap').removeClass('name-is-jid');\n                    this.$('.main-info  .jid').text(this.model.get('jid'));\n                }\n            },\n\n            blockInvitation: function () {\n                if (this.account.connection && this.account.connection.do_synchronization)\n                    return;\n                let contact_jid = this.model.get('jid'),\n                    iq_get_blocking = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING}),\n                    iq_unblocking = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING}),\n                    iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n                    .c('item', {jid: this.model.get('jid') + '/' + moment.now()});\n                this.account.sendIQFast(iq_get_blocking, (iq_blocking_items) => {\n                    let items = $(iq_blocking_items).find('item');\n                    if (items.length > 0) {\n                        items.each(function (idx, item) {\n                            let item_jid = $(item).attr('jid');\n                            if (item_jid.indexOf(contact_jid) > -1)\n                                iq_unblocking.c('item', {jid: item_jid}).up();\n                        });\n                    }\n                    if ($(iq_unblocking.nodeTree).find('item').length)\n                        this.account.sendIQFast(iq_unblocking, () => {\n                            this.account.sendIQFast(iq_set_blocking);\n                        });\n                    else\n                        this.account.sendIQFast(iq_set_blocking);\n                });\n            },\n\n            join: function () {\n                let contact = this.model;\n                contact.set('subscription_preapproved', true);\n                contact.acceptRequest();\n                contact.pushInRoster(null, () => {\n                    contact.askRequest();\n                    this.blockInvitation();\n                    contact.getMyInfo();\n                    contact.sendPresent();\n                    this.openChat();\n                });\n                contact.trigger('remove_invite', contact);\n            },\n\n            reject: function () {\n                let contact = this.model;\n                this.closeChat();\n                let iq = $iq({to: contact.get('full_jid') || contact.get('jid'), type: 'set'})\n                    .c('decline', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`});\n                this.account.sendFast(iq, () => {}, () => {\n                    contact.declineRequest();\n                    this.blockInvitation();\n                });\n            },\n\n            blockContact: function () {\n                let contact = this.model;\n                utils.dialogs.ask(xabber.getString(\"contact_block\"), xabber.getString(\"block_contact_confirm\", [contact.get('name'), this.account.get('jid')]), null, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done(function (result) {\n                    if (result) {\n                        contact.trigger('remove_invite', contact);\n                        contact.block();\n                        xabber.trigger(\"clear_search\");\n                    }\n                });\n                this.blockInvitation();\n                this.closeChat();\n            }\n        });\n\n        xabber.ContactNameWidget = xabber.InputWidget.extend({\n            field_name: 'contact-name',\n            placeholder: \"\",\n            model_field: 'name',\n\n            setValue: function (value) {\n                if (name === \"\") {\n                    this.model.set('roster_name', null);\n                    let name = this.getDefaultName();\n                    this.model.set('name', name);\n                }\n                this.model.pushInRoster({name: value});\n            },\n\n            showInput: function () {\n                if (this.$input.prop('disabled'))\n                    return;\n                this.data.set('input_mode', true);\n                this.updateValue();\n            },\n\n            getDefaultName: function () {\n                let name = null;\n                if (this.model.get('group_chat')) {\n                    if (this.model.get('group_info'))\n                        name = this.model.get('group_info').name;\n                    else\n                        name = this.model.get('jid');\n                }\n                else {\n                    let vcard = this.model.get('vcard');\n                    name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n                }\n                return name;\n            },\n\n            keyUp: function () {\n                let value = this.getValue();\n                this.$input.switchClass('changed', this.$input.val() !== value);\n                if (!this.$input.val())\n                    this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            }\n        });\n\n        xabber.ContactNameRightWidget = xabber.InputWidget.extend({\n            field_name: 'contact-name',\n            placeholder: \"\",\n            model_field: 'name',\n            template: templates.group_chats.group_name_input_widget,\n\n            setValue: function (value) {\n                if (name === \"\") {\n                    this.model.set('roster_name', null);\n                    let name = this.getDefaultName();\n                    this.model.set('name', name);\n                }\n                this.model.pushInRoster({name: value});\n            },\n\n            getDefaultName: function () {\n                let name = null;\n                if (this.model.get('group_chat')) {\n                    if (this.model.get('group_info'))\n                        name = this.model.get('group_info').name;\n                    else\n                        name = this.model.get('jid');\n                }\n                else {\n                    let vcard = this.model.get('vcard');\n                    name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n                }\n                return name;\n            },\n\n            updateValue: function () {\n                let value = this.getValue();\n                this.$value.text(value);\n                if (!this.$input.val()) {\n                    this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n                    if (this.model.get('roster_name'))\n                        this.$input.val(this.model.get('roster_name'))\n                }\n                if (!this.model.get('roster_name'))\n                    this.$value.addClass('name-is-default');\n                else\n                    this.$value.removeClass('name-is-default');\n            },\n\n            keyUp: function () {\n                let value = this.getValue();\n                this.$input.switchClass('changed', this.$input.val() !== value);\n                if (!this.$input.val())\n                    this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            },\n        });\n\n        xabber.GroupNameRightWidget = xabber.InputWidget.extend({\n            field_name: 'group-name',\n            placeholder: \"\",\n            template: templates.group_chats.group_name_input_widget,\n\n            initialize: function (options) {\n                this.parent = options.parent\n                this.$el.html(this.template({\n                    field_name: this.field_name,\n                    field_type: this.field_type,\n                    placeholder: this.placeholder\n                }));\n                this.$value = this.$('.field-text');\n                this.$btn = this.$('.btn-rename');\n                this.$input = this.$('.field-input');\n                let $insert_emoticon = this.$('.insert-emoticon'),\n                    $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n                    $emoji_panel = this.$('.emoticons-panel'),\n                    _timeout;\n\n                for (let emoji_list in Emoji.all) {\n                    let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                        list_name = emoji_list.replace(/ /g, '_');\n                    $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n                    _.each(Emoji.all[emoji_list], function (emoji) {\n                        $('<div class=\"emoji-wrap\"/>').html(\n                            emoji.emojify({emoji_size: 24, sprite: list_name})\n                        ).appendTo($emoji_list_wrap);\n                    });\n                    $emoji_list_wrap.appendTo($emoji_panel);\n                    $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n                }\n                $emoji_panel.perfectScrollbar(\n                    _.extend({theme: 'item-list'}, xabber.ps_settings));\n                this.$('.emoji-menu .emoji').click((ev) => {\n                    $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n                });\n                $insert_emoticon.hover((ev) => {\n                    if (ev && ev.preventDefault) { ev.preventDefault(); }\n                    $emoji_panel_wrap.addClass('opened');\n                    if (_timeout) {\n                        clearTimeout(_timeout);\n                    }\n                    $emoji_panel.perfectScrollbar('update');\n                }, (ev) => {\n                    if (ev && ev.preventDefault) { ev.preventDefault(); }\n                    if (_timeout) {\n                        clearTimeout(_timeout);\n                    }\n                    _timeout = setTimeout(function () {\n                        if (!$emoji_panel_wrap.is(':hover')) {\n                            $emoji_panel_wrap.removeClass('opened');\n                        }\n                    }, 800);\n                });\n                $emoji_panel_wrap.hover(null, (ev) => {\n                    if (ev && ev.preventDefault) { ev.preventDefault(); }\n                    if (_timeout) {\n                        clearTimeout(_timeout);\n                    }\n                    _timeout = setTimeout(function () {\n                        $emoji_panel_wrap.removeClass('opened');\n                    }, 200);\n                });\n                $emoji_panel_wrap.mousedown((ev) => {\n                    if (ev && ev.preventDefault) { ev.preventDefault(); }\n                    if (ev.button)\n                        return;\n                    let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n                    if ($target.length) {\n                        this.$input.val(function () {\n                            return this.value + $target.data('emoji');\n                        });\n                        this.$input.scrollLeft(1000)\n                        this.changeValue();\n                    }\n                });\n                this.updateValue();\n                this.data = new Backbone.Model({input_mode: false});\n            },\n\n            changeValue: function () {\n                this.setValue(this.$input.val());\n            },\n\n            setValue: function (value) {\n                if (this.$input.val())\n                    this.parent.changeName(value);\n                else\n                    this.parent.changeName(this.getDefaultName());\n                this.updateValue();\n            },\n\n            getDefaultName: function () {\n                let name = null;\n                if (this.model.get('group_chat')) {\n                    if (this.model.get('group_info') && this.model.get('group_info').name)\n                        name = this.model.get('group_info').name;\n                    else\n                        name = this.model.get('jid');\n                }\n                return name;\n            },\n\n            updateValue: function (force_reset) {\n                let value = this.getValue();\n                this.$value.text(value);\n                if (!this.$input.val() || force_reset) {\n                    this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n                    if (this.model.get('group_info') && this.model.get('group_info').name)\n                        this.$input.val(this.model.get('group_info').name)\n                    if (force_reset)\n                        this.changeValue();\n                }\n            },\n\n            getValue: function () {\n                if (this.model.get('group_info'))\n                    return this.model.get('group_info').name;\n            },\n\n            keyUp: function () {\n                let value = this.getValue();\n                this.$input.switchClass('changed', this.$input.val() !== value);\n                if (!this.$input.val())\n                    this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n                else\n                    this.changeValue();\n\n            },\n        });\n\n        xabber.ParticipantNameRightWidget = xabber.InputWidget.extend({\n            field_name: 'participant-name',\n            placeholder: \"\",\n            template: templates.group_chats.group_name_input_widget,\n\n            initialize: function (options) {\n                this.parent = options.parent\n                this.$el.html(this.template({\n                    field_name: this.field_name,\n                    field_type: this.field_type,\n                    placeholder: this.placeholder\n                }));\n                this.$value = this.$('.field-text');\n                this.$btn = this.$('.btn-rename');\n                this.$input = this.$('.field-input');\n                let $insert_emoticon = this.$('.insert-emoticon'),\n                    $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n                    $emoji_panel = this.$('.emoticons-panel'),\n                    _timeout;\n\n                for (let emoji_list in Emoji.all) {\n                    let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                        list_name = emoji_list.replace(/ /g, '_');\n                    $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n                    _.each(Emoji.all[emoji_list], function (emoji) {\n                        $('<div class=\"emoji-wrap\"/>').html(\n                            emoji.emojify({emoji_size: 24, sprite: list_name})\n                        ).appendTo($emoji_list_wrap);\n                    });\n                    $emoji_list_wrap.appendTo($emoji_panel);\n                    $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n                }\n                $emoji_panel.perfectScrollbar(\n                    _.extend({theme: 'item-list'}, xabber.ps_settings));\n                this.$('.emoji-menu .emoji').click((ev) => {\n                    $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n                });\n                $insert_emoticon.hover((ev) => {\n                    if (ev && ev.preventDefault) { ev.preventDefault(); }\n                    $emoji_panel_wrap.addClass('opened');\n                    if (_timeout) {\n                        clearTimeout(_timeout);\n                    }\n                    $emoji_panel.perfectScrollbar('update');\n                }, (ev) => {\n                    if (ev && ev.preventDefault) { ev.preventDefault(); }\n                    if (_timeout) {\n                        clearTimeout(_timeout);\n                    }\n                    _timeout = setTimeout(function () {\n                        if (!$emoji_panel_wrap.is(':hover')) {\n                            $emoji_panel_wrap.removeClass('opened');\n                        }\n                    }, 800);\n                });\n                $emoji_panel_wrap.hover(null, (ev) => {\n                    if (ev && ev.preventDefault) { ev.preventDefault(); }\n                    if (_timeout) {\n                        clearTimeout(_timeout);\n                    }\n                    _timeout = setTimeout(function () {\n                        $emoji_panel_wrap.removeClass('opened');\n                    }, 200);\n                });\n                $emoji_panel_wrap.mousedown((ev) => {\n                    if (ev && ev.preventDefault) { ev.preventDefault(); }\n                    if (ev.button)\n                        return;\n                    let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n                    if ($target.length) {\n                        this.$input.val(function () {\n                            return this.value + $target.data('emoji');\n                        });\n                        this.$input.scrollLeft(1000)\n                        this.changeValue();\n                    }\n                });\n                this.updateValue();\n                this.data = new Backbone.Model({input_mode: false});\n            },\n\n            changeValue: function () {\n                this.setValue(this.$input.val());\n            },\n\n            setValue: function (value) {\n                this.updateValue();\n                if (this.$input.val())\n                    this.parent.changeName(value);\n                else\n                    this.parent.changeName(this.getDefaultName());\n            },\n\n            getDefaultName: function () {\n                let name = null;\n                if (this.model.get('nickname'))\n                    name = this.model.get('nickname');\n                else\n                    name = this.model.get('jid');\n                return name;\n            },\n\n            updateValue: function (force_reset) {\n                let value = this.getValue();\n                this.$value.text(value);\n                if (!this.$input.val() || force_reset) {\n                    this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n                    if (this.model.get('nickname'))\n                        this.$input.val(this.model.get('nickname'))\n                    if (force_reset)\n                        this.changeValue();\n                }\n                this.$input.switchClass('changed', this.$input.val() !== value);\n            },\n\n            getValue: function () {\n                if (this.model.get('nickname'))\n                    return this.model.get('nickname');\n            },\n\n            keyUp: function () {\n                let value = this.getValue();\n                if (!this.$input.val())\n                    this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n                else\n                    this.changeValue();\n\n            },\n        });\n\n        xabber.ParticipantBadgeRightWidget = xabber.InputWidget.extend({\n            field_name: 'participant-badge',\n            placeholder: \"\",\n            template: templates.group_chats.group_name_input_widget,\n\n            initialize: function (options) {\n                this.parent = options.parent\n                this.$el.html(this.template({\n                    field_name: this.field_name,\n                    field_type: this.field_type,\n                    placeholder: this.placeholder\n                }));\n                this.$value = this.$('.field-text');\n                this.$btn = this.$('.btn-rename');\n                this.$input = this.$('.field-input');\n                let $insert_emoticon = this.$('.insert-emoticon'),\n                    $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n                    $emoji_panel = this.$('.emoticons-panel'),\n                    _timeout;\n\n                for (let emoji_list in Emoji.all) {\n                    let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                        list_name = emoji_list.replace(/ /g, '_');\n                    $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n                    _.each(Emoji.all[emoji_list], function (emoji) {\n                        $('<div class=\"emoji-wrap\"/>').html(\n                            emoji.emojify({emoji_size: 24, sprite: list_name})\n                        ).appendTo($emoji_list_wrap);\n                    });\n                    $emoji_list_wrap.appendTo($emoji_panel);\n                    $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n                }\n                $emoji_panel.perfectScrollbar(\n                    _.extend({theme: 'item-list'}, xabber.ps_settings));\n                this.$('.emoji-menu .emoji').click((ev) => {\n                    $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n                });\n                $insert_emoticon.hover((ev) => {\n                    if (ev && ev.preventDefault) { ev.preventDefault(); }\n                    $emoji_panel_wrap.addClass('opened');\n                    if (_timeout) {\n                        clearTimeout(_timeout);\n                    }\n                    $emoji_panel.perfectScrollbar('update');\n                }, (ev) => {\n                    if (ev && ev.preventDefault) { ev.preventDefault(); }\n                    if (_timeout) {\n                        clearTimeout(_timeout);\n                    }\n                    _timeout = setTimeout(function () {\n                        if (!$emoji_panel_wrap.is(':hover')) {\n                            $emoji_panel_wrap.removeClass('opened');\n                        }\n                    }, 800);\n                });\n                $emoji_panel_wrap.hover(null, (ev) => {\n                    if (ev && ev.preventDefault) { ev.preventDefault(); }\n                    if (_timeout) {\n                        clearTimeout(_timeout);\n                    }\n                    _timeout = setTimeout(function () {\n                        $emoji_panel_wrap.removeClass('opened');\n                    }, 200);\n                });\n                $emoji_panel_wrap.mousedown((ev) => {\n                    if (ev && ev.preventDefault) { ev.preventDefault(); }\n                    if (ev.button)\n                        return;\n                    let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n                    if ($target.length) {\n                        this.$input.val(function () {\n                            return this.value + $target.data('emoji');\n                        });\n                        this.$input.scrollLeft(1000)\n                        this.changeValue();\n                    }\n                });\n                this.updateValue(true);\n            },\n\n            changeValue: function () {\n                this.setValue(this.$input.val());\n            },\n\n            setValue: function (value) {\n                this.updateValue();\n                this.parent.changeBadge(value);\n            },\n\n            updateValue: function (force_reset) {\n                let value = this.getValue();\n                if (!this.$input.val())\n                    this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n                if (force_reset) {\n                    this.$input.val(value);\n                    this.changeValue();\n                }\n                this.$input.switchClass('changed', this.$input.val() !== value);\n            },\n\n            getValue: function () {\n                let badge = _.escape(this.model.get('badge'));\n                return badge;\n            },\n\n            keyUp: function () {\n                if (!this.$input.val())\n                    this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n                this.changeValue();\n            },\n        });\n\n        xabber.GroupDescriptionRightWidget = xabber.InputWidget.extend({\n            field_name: 'group-description',\n            template: templates.group_chats.description_input_widget,\n            placeholder: \"\",\n\n            initialize: function (options) {\n                this.parent = options.parent\n                this.$el.html(this.template({\n                    field_name: this.field_name,\n                    field_type: this.field_type,\n                    placeholder: this.placeholder\n                }));\n                this.$value = this.$('.field-text');\n                this.$btn = this.$('.btn-rename');\n                this.$input = this.$('.field-input');\n                this.updateValue();\n                this.data = new Backbone.Model({input_mode: false});\n            },\n\n            changeValue: function () {\n                this.setValue(this.$input.val());\n            },\n\n            setValue: function (value) {\n                this.parent.changeDescription(value);\n                this.updateValue();\n            },\n\n            getDefaultName: function () {\n                let name = null;\n                if (this.model.get('group_chat')) {\n                    if (this.model.get('group_info') && this.model.get('group_info').description)\n                        name = this.model.get('group_info').description;\n                }\n                return name;\n            },\n\n            updateValue: function (force_reset) {\n                let value = this.getValue();\n                if (!this.$input.val() || force_reset) {\n                    this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n                    if (force_reset && this.model.get('group_info'))\n                        this.$input.val(this.model.get('group_info').description)\n                    if (force_reset)\n                        this.changeValue();\n                }\n            },\n\n            keyDown: function (ev) {\n                ev.stopPropagation();\n                let value = this.getValue();\n                if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n                    this.$input.removeClass('changed').val(value);\n                    this.data.set('input_mode', false);\n                }\n            },\n\n            getValue: function () {\n                if (this.model.get('group_info'))\n                    return this.model.get('group_info').description;\n            },\n\n            keyUp: function () {\n                let value = this.getValue();\n                this.$input.switchClass('changed', this.$input.val() !== value);\n                if (!this.$input.val())\n                    this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n                this.changeValue();\n            },\n        });\n\n        xabber.ContactEditGroupsView = xabber.BasicView.extend({\n            template: templates.groups,\n            events: {\n                'click .group': 'removeGroup',\n                'click .existing-group-field label': 'editGroup',\n                'change .new-group-name input': 'checkNewGroup',\n                'keyup .new-group-name input': 'checkNewGroup',\n                'click .new-group-checkbox': 'addNewGroup',\n                \"keyup #new-group-name\": \"keyupAddNewGroup\",\n                \"focusin #new-group-name\": \"focusinAddNewGroup\",\n                \"focusout #new-group-name\": \"focusoutAddNewGroup\",\n                \"keydown #new-group-name\": \"keydownAddNewGroup\",\n            },\n\n            _initialize: function (options) {\n                this.account = this.parent.account;\n                this.model = this.parent.model;\n                this.model.set('groups_hidden', true)\n                this.model.on(\"change:in_roster update_groups\", this.onUpdate, this);\n            },\n\n            render: function (view, arguments) {\n                this.$el.html(this.template());\n                if (this.model.get('in_roster')) {\n                    let groups = _.clone(this.model.get('groups')),\n                        all_groups = _.map(this.account.groups.notSpecial(), function (group) {\n                            let name = group.get('name');\n                            return {name: name, checked: _.contains(groups, name), id: uuid()};\n                        }),\n                        all_groups_unchecked = all_groups.filter(function(group) {\n                            if (group.checked)\n                                return false;\n                            return true;\n                        }).length;\n                    if (all_groups_unchecked)\n                        this.$('.groups-wrap').removeClass('empty-groups-wrap')\n                    else\n                        this.$('.groups-wrap').addClass('empty-groups-wrap')\n\n                    this.$('.checkbox-list').html(templates.groups_checkbox_list({\n                        groups: all_groups\n                    })).appendTo(this.$('.groups-wrap'));\n                    this.ps_container = this.$('.checkbox-list');\n                    if (this.ps_container.length) {\n                        this.ps_container.perfectScrollbar(\n                            _.extend(this.ps_settings || {}, xabber.ps_settings)\n                        );\n                    }\n                    this.scrollToTop();\n                    if (groups.length)\n                        this.$('.groups').html(templates.groups_list({\n                            groups: all_groups\n                        })).appendTo(this.$('.groups-wrap-list'));\n                    else\n                        this.$('.groups').html('<div class=\"empty-groups\">'+ xabber.getString(\"contact_circles_empty\") + '</div>')\n                    this.$('.groups').append(templates.groups_new_group());\n\n                }\n                this.$el.showIf(this.model.get('in_roster'));\n                if (arguments && arguments.on_add)\n                    this.$('.groups-wrap').hideIf(false)\n                else\n                    this.$('.groups-wrap').hideIf(true)\n                this.parent.updateScrollBar();\n            },\n\n            onUpdate: function (ev) {\n                if (this._update_template){\n                    this.render(this, {on_add: true});\n                    this.$('.new-group-name input').addClass('visible');\n                    this.$('.new-group-name input').focus();\n                }\n                else{\n                    this.render();\n                    this.$('.new-group-name input').addClass('visible');\n                }\n\n            },\n\n            removeGroup: function (ev) {\n                let $target = $(ev.target).closest('.group'),\n                    group_name = $target.attr('data-groupname'),\n                    groups = _.clone(this.model.get('groups')),\n                    idx = groups.indexOf(group_name);\n                if (idx >= 0) {\n                    groups.splice(idx, 1);\n                }\n                this._update_template = false\n                this.model.pushInRoster({groups: groups});\n            },\n\n            removeLastGroup: function (ev) {\n                let groups = _.clone(this.model.get('groups'));\n                if (groups.length) {\n                    groups.pop();\n                    this._update_template = true\n                    this.model.pushInRoster({groups: groups});\n                }\n            },\n\n            editGroup: function (ev) {\n                clearTimeout(this._hide_timeout)\n                let $target = $(ev.target),\n                    $input = $target.siblings('input'),\n                    checked = !$input.prop('checked'),\n                    group_name = $input.attr('data-groupname'),\n                    groups = _.clone(this.model.get('groups')),\n                    idx = groups.indexOf(group_name);\n                $input.prop('checked', checked);\n                if (checked) {\n                    groups.push(group_name);\n                } else if (idx >= 0) {\n                    groups.splice(idx, 1);\n                }\n                this._update_template = true\n                this.model.pushInRoster({groups: groups});\n            },\n\n            checkNewGroup: function (ev) {\n                let name = $(ev.target).val(),\n                    $checkbox = this.$('.new-group-checkbox');\n                $checkbox.showIf(name && !this.account.groups.get(name));\n            },\n\n            keyupAddNewGroup: function (ev) {\n                let $input = this.$('.new-group-name input'),\n                    name = $input.val();\n                if (ev.keyCode === constants.KEY_ENTER && name) {\n                    this.addNewGroup();\n                }\n            },\n\n            keydownAddNewGroup: function (ev) {\n                let $input = this.$('.new-group-name input'),\n                    name = $input.val();\n                if (ev.keyCode === constants.KEY_BACKSPACE && !name) {\n                    this.removeLastGroup();\n                }\n            },\n\n            focusinAddNewGroup: function (ev) {\n                clearTimeout(this._hide_timeout)\n                this.$('.groups-wrap').hideIf(false)\n                this.$('.empty-groups').hideIf(true)\n            },\n\n            focusoutAddNewGroup: function (ev) {\n                this.$('.empty-groups').hideIf(false)\n                if (this.$('.new-group-name input').val())\n                    this.addNewGroup();\n                this._hide_timeout = setTimeout(() => {\n                    this.$('.new-group-name input').removeClass('visible');\n                    this.$('.groups-wrap').hideIf(true)\n                    this.$('.new-group-name input').val('')\n                }, 100)\n            },\n\n            addNewGroup: function () {\n                let $input = this.$('.new-group-name input'),\n                    name = $input.val(),\n                    groups = _.clone(this.model.get('groups')),\n                    idx = groups.indexOf(name);\n                if (idx < 0) {\n                    groups.push(name);\n                }\n                this.model.pushInRoster({groups: groups});\n            }\n        });\n\n        xabber.ContactEditView = xabber.BasicView.extend({\n            template: templates.edit_contact,\n            events: {\n                'click .btn-back': 'hideEdit',\n                'click .btn-request': 'requestSubscription',\n                'click .btn-allow': 'allowSubscription',\n                'click .btn-cancel-request': 'cancelSubscriptionRequest',\n                'click .btn-allow-request': 'handleSubscriptionRequest',\n                'click .btn-disallow-request': 'cancelSubscriptionIn',\n                'click .btn-disallow-preapproved': 'cancelSubscriptionIn',\n                'click .btn-cancel-subscription-out': 'cancelSubscriptionOut',\n                'click .btn-cancel-subscription-in': 'cancelSubscriptionIn',\n            },\n\n            _initialize: function (options) {\n                this.account = this.parent.account;\n                this.model = this.parent.model;\n                this.model.set('edit_hidden', true)\n                this.model.on(\"change:status_updated\", this.updateStatuses, this);\n                this.model.on(\"change:subscription\", this.updateStatuses, this);\n                this.model.on(\"change:subscription_preapproved\", this.updateStatuses, this);\n                this.model.on(\"change:blocked\", this.updateStatuses, this);\n                this.model.on(\"change:subscription_request_in\", this.updateStatuses, this);\n                this.model.on(\"change:subscription_request_out\", this.updateStatuses, this);\n            },\n\n            render: function () {\n                this.$el.html(this.template(_.extend({view: this}, constants)));\n                this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n                this.name_field = new xabber.ContactNameRightWidget({\n                    el: this.$('.name-wrap')[0],\n                    model: this.model\n                });\n                this.$('.status-out.dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    hover: false\n                });\n                this.$('.status-in.dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    hover: false\n                });\n                this.updateStatuses();\n            },\n\n            showEdit: function () {\n                this.model.set('edit_hidden', false);\n                this.parent.scrollToTop();\n                if (this.parent.ps_container.length) {\n                    this.parent.ps_container.perfectScrollbar('destroy')\n                }\n                this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            },\n\n            updateStatuses: function () {\n                let statuses = this.model.getSubscriptionStatuses(),\n                    subscription_preapproved = this.model.get('subscription_preapproved');\n                if (statuses){\n                    this.$('.status-out').addClass(statuses.status_out_class)\n                    this.$('.status-out .value').text(statuses.status_out)\n                    this.$('.status-out').showIf(statuses.status_out)\n                    this.$('.status-in').addClass(statuses.status_in_class)\n                    this.$('.status-in  .value').text(statuses.status_in)\n                    this.$('.status-in').showIf(statuses.status_in)\n                    this.$('.status-description .value').html(statuses.status_description)\n                    this.$('.status-description').showIf(statuses.status_description)\n                    this.$('.btn-delete').hideIf(!this.model.get('in_roster'));\n                    if (statuses.status_out_color === 'request') {\n                        this.$('.status-out').addClass('text-color-500').addClass('request').removeClass('subbed')\n                        this.$('.status-out').addClass('text-decoration-color-300')\n                    }\n                    if (statuses.status_in_color === 'request') {\n                        this.$('.status-in').addClass('text-color-500').addClass('request').removeClass('subbed')\n                        this.$('.status-in').addClass('text-decoration-color-300')\n                    }\n                    if (statuses.status_out_color === 'subbed') {\n                        this.$('.status-out').addClass('text-color-500').addClass('subbed').removeClass('request')\n                        this.$('.status-out').addClass('text-decoration-color-300')\n                    }\n                    if (statuses.status_in_color === 'subbed') {\n                        this.$('.status-in').addClass('text-color-500').addClass('subbed').removeClass('request')\n                        this.$('.status-in').addClass('text-decoration-color-300')\n                    }\n                    if (statuses.status_out_color === '') {\n                        this.$('.status-out').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                        this.$('.status-out').removeClass('text-decoration-color-300')\n                    }\n                    if (statuses.status_in_color === '') {\n                        this.$('.status-in').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                        this.$('.status-in').removeClass('text-decoration-color-300')\n                    }\n                    this.$('.btn-request').hideIf(!(statuses.status_out_color === ''))\n                    this.$('.btn-allow').hideIf(!(statuses.status_in_color === '' && !subscription_preapproved))\n                    this.$('.btn-disallow-preapproved').hideIf(!(statuses.status_in_color === '' && subscription_preapproved))\n                    this.$('.btn-cancel-request').hideIf(!(statuses.status_out_color === 'request'))\n                    this.$('.btn-allow-request').hideIf(!(statuses.status_in_color === 'request'))\n                    this.$('.btn-disallow-request').hideIf(!(statuses.status_in_color === 'request'))\n                    this.$('.btn-cancel-subscription-out').hideIf(!(statuses.status_out_color === 'subbed'))\n                    this.$('.btn-cancel-subscription-in').hideIf(!(statuses.status_in_color === 'subbed'))\n                }\n            },\n\n            requestSubscription: function () {\n                this.model.askRequest();\n            },\n\n            allowSubscription: function () {\n                this.model.acceptRequest();\n                !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', true)\n            },\n\n            cancelSubscriptionRequest: function () {\n                this.model.declineSubscription();\n            },\n\n            handleSubscriptionRequest: function () {\n                this.model.acceptRequest();\n            },\n\n            cancelSubscriptionOut: function () {\n                this.model.declineSubscription();\n            },\n\n            cancelSubscriptionIn: function () {\n                this.model.declineSubscribe();\n                this.model.set('subscription_request_in', false);\n            },\n\n            hideEdit: function (ev) {\n                this.model.set('edit_hidden', true);\n                if (this.parent.ps_container.length) {\n                    this.parent.ps_container.perfectScrollbar(\n                        _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                    );\n                };\n                this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n            },\n        });\n\n        xabber.GroupEditView = xabber.BasicView.extend({\n            template: templates.edit_group,\n            events: {\n                \"click .btn-save\": \"saveChanges\",\n                'click .edit-header:not(.property-header) .btn-back': 'hideEdit',\n                'click .btn-reset': 'resetPanel',\n                'click .btn-edit': 'showDescriptionProperty',\n                'click .btn-back-panel': 'hidePanel',\n                'click .membership-field .property-radio input': 'changeMembership',\n                'click .index-field .property-radio input ': 'changeIndex',\n                'click .index-property:not(.property-disabled)': 'showIndexProperty',\n                'click .membership-property:not(.property-disabled)': 'showMembershipProperty',\n                'click .btn-back.btn-property-back': 'hideProperty',\n                \"click .list-variant\": \"showPanel\",\n                \"click .revoke-invitation\": \"revokeInvitation\",\n                \"click .btn-reset-panel\": \"deselectParticipants\",\n                \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n                \"click .participants-edit-wrap .list-item\": \"selectParticipant\",\n                \"click .unblock-user\": \"unblockUser\",\n                \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n                \"click .btn-add-block\": \"blockId\",\n                \"keydown .field-input\": \"keyDownName\",\n                \"keyup .field-input\": \"keyUp\",\n                \"focusout .field-input\": \"changeValue\"\n            },\n\n            _initialize: function (options) {\n                this.account = this.parent.account;\n                this.model = this.parent.model;\n                this.model.set('edit_hidden', true)\n                this.model.on('change:group_info', this.update, this)\n            },\n\n            render: function () {\n                this.$el.html(this.template(_.extend({view: this}, constants)));\n                this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n                this.$('.index-property-edit-wrap').hideIf(true)\n                this.$('.membership-property-edit-wrap').hideIf(true)\n                this.$('.description-edit-wrap').hideIf(true)\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'right'\n                };\n                this.$('.property-dropdown').dropdown(dropdown_settings);\n                // this.name_field = new xabber.ContactNameRightWidget({\n                //     el: this.$('.name-wrap')[0],\n                //     model: this.model\n                // });\n                this.group_name_field = new xabber.GroupNameRightWidget({\n                    el: this.$('.edit-group-name-wrap')[0],\n                    model: this.model,\n                    parent: this,\n                });\n                this.group_description_field = new xabber.GroupDescriptionRightWidget({\n                    el: this.$('.edit-group-description-wrap')[0],\n                    model: this.model,\n                    parent: this,\n                });\n                this.update();\n            },\n\n            update: function () {\n                let info = this.model.get('group_info') || {},\n                    model, searchable, privacy;\n                if (info){\n                    if (info.privacy === 'public')\n                        privacy = xabber.getString(\"groupchat_public_group\");\n                    if (info.privacy === 'incognito')\n                        privacy = xabber.getString(\"groupchat_incognito_group\");\n                    if (info.searchable === 'none') {\n                        searchable = xabber.getString(\"groupchat_index_type_none\");\n                        this.$('.property-wrap #none').prop(\"checked\", true);\n                    }\n                    if (info.searchable === 'local') {\n                        searchable = xabber.getString(\"groupchat_index_type_local\");\n                        this.$('.property-wrap #local').prop(\"checked\", true);\n                    }\n                    if (info.searchable === 'global') {\n                        searchable = xabber.getString(\"groupchat_index_type_global\");\n                        this.$('.property-wrap #global').prop(\"checked\", true);\n                    }\n                    if (info.model === 'open') {\n                        model = xabber.getString(\"groupchat_membership_type_open\");\n                        this.$('.property-wrap #open').prop(\"checked\", true);\n                    }\n                    if (info.model === 'member-only') {\n                        model = xabber.getString(\"groupchat_membership_type_members_only\");\n                        this.$('.property-wrap #member-only').prop(\"checked\", true);\n                    }\n                }\n                this.$('.main-edit-header .block-name:not(.second-text)').text(privacy);\n                this.$('.membership-property span').text(model);\n                this.$('.index-property span').text(searchable);\n                this.$('.edit-group-name').text(info.name);\n                this.$('.edit-group-description').text(info.description);\n                this.group_name_field.updateValue(true);\n                this.group_description_field.updateValue(true);\n                this.$('.btn-save').switchClass('fade-out', true);\n                let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values);\n                if (is_owner){\n                    let iq_get_rights = $iq({type: 'get', to: this.model.get('full_jid') || this.model.get('jid')})\n                        .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n                    this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n                        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)),\n                            restrictions_count = 0;\n                        data_form.fields.forEach((field) => {\n                            if (field.type === 'fixed' || field.type === 'hidden')\n                                return;\n                            let expires = field.values ? field.values[0] : undefined;\n                            if (expires) {\n                                restrictions_count++;\n                            }\n                        });\n                        this.$('.btn-default-restrictions .edit-button-value').text(restrictions_count);\n                    }, () => {\n                        utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                    });\n                }\n                this.updateAvatar();\n\n            },\n\n            updateAvatar: function () {\n                let image = this.model.cached_image;\n                this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n            },\n\n            showMembershipProperty: function () {\n                this.$('.membership-property-edit-wrap').hideIf(false)\n                if (this.ps_container.length) {\n                    this.ps_container.perfectScrollbar('destroy')\n                }\n            },\n\n            showIndexProperty: function () {\n                this.$('.index-property-edit-wrap').hideIf(false)\n                if (this.ps_container.length) {\n                    this.ps_container.perfectScrollbar('destroy')\n                }\n            },\n\n            showDescriptionProperty: function () {\n                this.$('.description-edit-wrap').hideIf(false)\n                this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n                if (this.ps_container.length) {\n                    this.ps_container.perfectScrollbar('destroy')\n                }\n            },\n\n            hideProperty: function () {\n                this.$('.index-property-edit-wrap').hideIf(true)\n                this.$('.description-edit-wrap').hideIf(true)\n                this.$('.membership-property-edit-wrap').hideIf(true)\n                if (this.ps_container.length) {\n                    this.ps_container.perfectScrollbar(\n                        _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                    );\n                }\n            },\n\n            revokeInvitation: function (ev) {\n                let $member_item = $(ev.target).closest('.invitations-user');\n                if (this.parent.children && this.parent.children.invitations)\n                    this.parent.children.invitations.revokeInvitation(ev)\n            },\n\n            showBlockButton: function (ev) {\n                this.$('.edit-bottom-block .btn-add-block').hideIf(false);\n            },\n\n            showInviteButton: function (ev) {\n                this.$('.edit-bottom-block .btn-invite').hideIf(false);\n            },\n\n            unblockUser: function (ev) {\n                if (this.parent.children && this.parent.children.blocked)\n                    this.parent.children.blocked.unblockUser(ev)\n            },\n\n            actionSelectedParticipants: function (ev) {\n                let selected = this.$('.list-item.selected');\n                selected.each((index, item) => {\n                    if ($(item).hasClass('invitations-user') && this.parent.children && this.parent.children.invitations)\n                        this.parent.children.invitations.revokeInvitationByElement($(item))\n                    if ($(item).hasClass('blocked-user') && this.parent.children && this.parent.children.blocked)\n                        this.parent.children.blocked.unblockUserByElement($(item))\n                    if ($(item).hasClass('blocked-user') || $(item).hasClass('invitations-user'))\n                        $(item).removeClass('selected')\n                });\n                this.updateRemoveParticipantButton();\n            },\n\n            blockId: function () {\n                if (this.parent.children && this.parent.children.blocked)\n                    this.parent.children.blocked.blockId()\n            },\n\n            deselectParticipants: function (ev) {\n                this.$('.list-item.selected').removeClass('selected')\n                this.updateRemoveParticipantButton();\n            },\n\n            selectParticipant: function (ev) {\n                if ($(ev.target).parent().hasClass('revoke-invitation') || $(ev.target).parent().hasClass('unblock-user') ||\n                    $(ev.target).hasClass('revoke-invitation') || $(ev.target).hasClass('unblock-user'))\n                    return;\n                let $member_item = $(ev.target).closest('.list-item'),\n                    is_selected = $member_item.hasClass('selected');\n                $member_item.switchClass('selected', !is_selected)\n                this.updateRemoveParticipantButton();\n            },\n\n            updateRemoveParticipantButton: function () {\n                let has_changes = this.$('.list-item.selected').length;\n                this.$('.block-name-panel.second-text span').html(has_changes)\n                if (has_changes) {\n                    this.$('.participants-edit-back').removeClass('mdi-arrow-right').addClass('mdi-close')\n                    this.$('.participants-edit-back').removeClass('btn-back-panel').addClass('btn-reset-panel')\n                    this.$('.block-name-panel:not(.second-text)').addClass('fade-out');\n                    this.$('.edit-bottom-block .btn-invite').addClass('fade-out');\n                    this.$('.edit-bottom-block .btn-add-block').addClass('fade-out');\n                    this.$('.block-name-panel.second-text').removeClass('fade-out');\n                    this.$('.btn-remove-selected').removeClass('fade-out');\n                }\n                else{\n                    this.$('.participants-edit-back').addClass('mdi-arrow-right').removeClass('mdi-close')\n                    this.$('.participants-edit-back').addClass('btn-back-panel').removeClass('btn-reset-panel')\n                    this.$('.block-name-panel:not(.second-text)').removeClass('fade-out');\n                    this.$('.edit-bottom-block .btn-invite').removeClass('fade-out');\n                    this.$('.edit-bottom-block .btn-add-block').removeClass('fade-out');\n                    this.$('.block-name-panel.second-text').addClass('fade-out');\n                    this.$('.btn-remove-selected').addClass('fade-out');\n                }\n            },\n\n            clickAvatarInput: function (ev) {\n                this.$('.circle-avatar input').click();\n            },\n\n            hidePanel: function () {\n                this.parent.getInvitations((response) => {\n                    this.$('.invitations-variant .counted').html($(response).find('query').find('user').length);\n                });\n                this.model.getBlockedParticipants((response) => {\n                    this.$('.blocked-variant .counted').html($(response).find('query').children().length);\n                });\n                this.$('.btn-back-panel').hideIf(true)\n                this.$('.block-name-panel').hideIf(true)\n                this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n                this.$('.edit-bottom-block .btn-invite').hideIf(true)\n                this.$('.btn-remove-selected').hideIf(true)\n                this.$('.participants-edit-wrap').hideIf(true)\n                // if (this.ps_container.length) {\n                //     this.ps_container.perfectScrollbar('destroy')\n                // }\n                // this.ps_container = this.$('.edit-wrap');\n                // if (this.ps_container.length) {\n                //     this.ps_container.perfectScrollbar(\n                //         _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                //     );\n                // }\n                // this.hideEdit();\n            },\n\n            showPanel: function () {\n                this.$('.btn-back-panel').hideIf(false)\n                this.$('.block-name-panel').hideIf(false)\n                this.$('.btn-remove-selected').hideIf(false)\n                this.$('.participants-edit-wrap').hideIf(false)\n                this.updateRemoveParticipantButton();\n                if (this.ps_container.length) {\n                    this.ps_container.perfectScrollbar('destroy')\n                }\n                this.ps_container = this.$('.participants-edit-wrap');\n                if (this.ps_container.length) {\n                    this.ps_container.perfectScrollbar(\n                        _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                    );\n                }\n            },\n\n            resetPanel: function () {\n                this.updateSaveButton()\n                this.showEdit()\n            },\n\n            updateSaveButton: function () {\n                let has_changes = false;\n                this.data_form.fields.forEach((field) => {\n                    if (field.type === 'hidden' || field.type === 'fixed')\n                        return;\n                    let value = field.values ? field.values[0] : null;\n                    if ((field.var in this.original_data_form_values) && this.original_data_form_values[field.var] != value) {\n                        has_changes = true;\n                    }\n                });\n                this.$('.btn-save').switchClass('fade-out', !has_changes);\n                this.$('.btn-qr-code').hideIf(has_changes);\n                if (has_changes) {\n                    this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n                    this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n                    this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('btn-back').addClass('btn-reset')\n                    this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').addClass('fade-out');\n                    this.$('.edit-header:not(.main-edit-header) .block-name.second-text').removeClass('fade-out');\n                }\n                else{\n                    this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n                    this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('btn-back').removeClass('btn-reset')\n                    this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').removeClass('fade-out');\n                    this.$('.edit-header:not(.main-edit-header) .block-name.second-text').addClass('fade-out');\n                }\n                let info = this.model.get('group_info') || {};\n                if (info){\n                    if (info.privacy === 'public')\n                        this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_public_group\"));\n                    if (info.privacy === 'incognito')\n                        this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_incognito_group\"));\n                }\n            },\n\n            changeName: function (value) {\n                if (this.data_form && value){\n                    let data_form_index = this.data_form.fields.findIndex(x => x.var == 'name')\n                    if (!this.original_data_form_values.name)\n                        this.original_data_form_values.name = this.data_form.fields[data_form_index].values[0]\n                    this.data_form.fields[data_form_index].values = [value]\n                    this.updateSaveButton()\n                }\n            },\n\n            changeDescription: function (value) {\n                if (this.data_form){\n                    let data_form_index = this.data_form.fields.findIndex(x => x.var == 'description')\n                    if (!this.original_data_form_values.description)\n                        this.original_data_form_values.description = this.data_form.fields[data_form_index].values[0]\n                    this.data_form.fields[data_form_index].values = [value]\n                    this.updateSaveButton()\n                }\n            },\n\n            changeMembership: function (ev) {\n                let membership = $(ev.target).attr('id'),\n                    membership_text;\n                if (this.data_form && membership){\n                    let data_form_index = this.data_form.fields.findIndex(x => x.var == 'membership')\n                    if (!this.original_data_form_values.membership)\n                        this.original_data_form_values.membership = this.data_form.fields[data_form_index].values[0]\n                    this.data_form.fields[data_form_index].values = [membership]\n                    if (membership === 'open')\n                        membership_text = xabber.getString(\"groupchat_membership_type_open\");\n                    if (membership === 'member-only')\n                        membership_text = xabber.getString(\"groupchat_membership_type_members_only\");\n                    this.$('.membership-property span').text(membership_text);\n                    this.updateSaveButton()\n                }\n            },\n\n            changeIndex: function (ev) {\n                let index = $(ev.target).attr('id'),\n                    index_text;\n                if (this.data_form && index){\n                    let data_form_index = this.data_form.fields.findIndex(x => x.var == 'index')\n                    if (!this.original_data_form_values.index)\n                        this.original_data_form_values.index = this.data_form.fields[data_form_index].values[0]\n                    this.data_form.fields[data_form_index].values = [index]\n                    if (index === 'none')\n                        index_text = xabber.getString(\"groupchat_index_type_none\");\n                    if (index === 'local')\n                        index_text = xabber.getString(\"groupchat_index_type_local\");\n                    if (index === 'global')\n                        index_text = xabber.getString(\"groupchat_index_type_global\");\n                    this.$('.index-property span').text(index_text);\n                    this.updateSaveButton()\n                }\n            },\n\n\n            saveChanges: function() {\n                if (this.$('.btn-save').hasClass('fade-out'))\n                    return;\n                this.$('.btn-save').addClass('fade-out')\n                this.group_name_field.$input.prop('disabled', true);\n                this.group_description_field.$input.prop('disabled', true);\n                this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n                let iq = $iq({type: 'set', to: this.model.get('full_jid') || this.model.get('jid')})\n                        .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                iq = this.account.addDataFormToStanza(iq, this.data_form);\n                this.account.sendIQFast(iq, (result) => {\n                    let $result  = $(result),\n                        group_info = _.clone(this.model.get('group_info')),\n                        attrs = {\n                            name: $result.find('field[var=\"name\"] value').text(),\n                            searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                            model: $result.find('field[var=\"membership\"]').children('value').text(),\n                            description: $result.find('field[var=\"description\"] value').text(),\n                            status: $result.find('field[var=\"status\"]').children('value').text()\n                        };\n                    _.extend(group_info, attrs);\n                    this.model.set('group_info', group_info);\n                    this.group_name_field.$input.prop('disabled', false);\n                    this.group_description_field.$input.prop('disabled', false);\n                    this.hideProperty()\n                    this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                    this.resetPanel()\n                }, (error) => {\n\n                    let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(err_text);\n                    this.group_name_field.$input.prop('disabled', false);\n                    this.group_description_field.$input.prop('disabled', false);\n                    this.hideProperty()\n                    this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                });\n            },\n\n            showEdit: function (ev) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.parent.$('.group-edit-preloader').html(env.templates.contacts.preloader())\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    this.data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.original_data_form_values = {}\n                    this.model.set('edit_hidden', false);\n                    this.parent.scrollToTop();\n                    if (this.parent.ps_container.length) {\n                        this.parent.ps_container.perfectScrollbar('destroy')\n                    }\n                    this.ps_container = this.$('.edit-wrap');\n                    if (this.ps_container.length) {\n                        this.ps_container.perfectScrollbar(\n                            _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                        );\n                    }\n                    this.update()\n                    this.$('.group-property:not(.privacy-property)').removeClass('disabled')\n                    this.group_name_field.$input.hideIf(false)\n                    this.group_description_field.$input.hideIf(false)\n                    this.group_name_field.$input.prop('disabled', false);\n                    this.group_description_field.$input.prop('disabled', false);\n                    this.$('.circle-avatar input').prop('disabled', false);\n                    this.$('.set-groupchat-avatar-text').hideIf(false);\n                    this.$('.group-property').removeClass('property-disabled');\n                    this.$('.membership-property .details-icon-right').hideIf(false);\n                    this.$('.index-property .details-icon-right').hideIf(false);\n                    this.$('.circle-avatar .set-groupchat-avatar').hideIf(false);\n                    this.$('.btn-edit').hideIf(false)\n                    this.$('.edit-bottom-block').hideIf(false)\n                    this.$('.btn-default-restrictions').hideIf(false)\n                    this.$('.btn-delete-group').hideIf(false)\n                    this.$('.btn-clear-history-chat').hideIf(false)\n                    this.$('.btn-back-panel').hideIf(true)\n                    this.$('.block-name-panel').hideIf(true)\n                    this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n                    this.$('.edit-bottom-block .btn-invite').hideIf(true)\n                    this.$('.btn-remove-selected').hideIf(true)\n                    this.$('.participants-edit-wrap').hideIf(true)\n                    this.parent.getInvitations((response) => {\n                        this.$('.invitations-variant .counted').html($(response).find('query').find('user').length);\n                    });\n                    this.model.getBlockedParticipants((response) => {\n                        this.$('.blocked-variant .counted').html($(response).find('query').children().length);\n                    });\n                    this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n                    this.parent.$('.group-edit-preloader').html('')\n                    this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n                    this.$('.tabs .indicator').remove();\n                }, () => {\n                    this.model.set('edit_hidden', false);\n                    this.parent.scrollToTop();\n                    if (this.parent.ps_container.length) {\n                        this.parent.ps_container.perfectScrollbar('destroy')\n                    }\n                    this.ps_container = this.$('.edit-wrap');\n                    if (this.ps_container.length) {\n                        this.ps_container.perfectScrollbar(\n                            _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                        );\n                    }\n                    this.update()\n                    this.group_name_field.$input.prop('disabled', true);\n                    this.group_description_field.$input.prop('disabled', true);\n                    if (!this.group_description_field.$input.val())\n                        this.group_description_field.$input.hideIf(true)\n                    this.$('.circle-avatar input').prop('disabled', true);\n                    this.$('.set-groupchat-avatar-text').hideIf(true);\n                    this.$('.group-property').addClass('property-disabled');\n                    this.$('.membership-property .details-icon-right').hideIf(true);\n                    this.$('.index-property .details-icon-right').hideIf(true);\n                    this.$('.circle-avatar .set-groupchat-avatar').hideIf(true);\n                    this.$('.group-property:not(.privacy-property)').addClass('disabled')\n                    this.$('.btn-edit').hideIf(true)\n                    this.$('.edit-bottom-block').hideIf(true)\n                    this.$('.btn-default-restrictions').hideIf(true)\n                    this.$('.btn-delete-group').hideIf(true)\n                    this.$('.btn-clear-history-chat').hideIf(true)\n                    this.$('.btn-back-panel').hideIf(true)\n                    this.$('.block-name-panel').hideIf(true)\n                    this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n                    this.$('.edit-bottom-block .btn-invite').hideIf(true)\n                    this.$('.btn-remove-selected').hideIf(true)\n                    this.$('.participants-edit-wrap').hideIf(true)\n                    let info = this.model.get('group_info') || {};\n                    this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n                    this.parent.$('.group-edit-preloader').html('')\n                    this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n                    this.$('.tabs .indicator').remove();\n                });\n            },\n\n            hideEdit: function (ev) {\n                this.model.set('edit_hidden', true);\n                if (this.parent.ps_container.length) {\n                    this.parent.ps_container.perfectScrollbar(\n                        _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                    );\n                };\n                if (this.ps_container.length) {\n                    this.ps_container.perfectScrollbar('destroy')\n                }\n                this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n            },\n        });\n\n        xabber.ContactsBase = Backbone.Collection.extend({\n            model: xabber.Contact\n        });\n\n        xabber.GroupContacts = xabber.ContactsBase.extend({\n            initialize: function (models, options) {\n                this.group = options.group;\n                this.on(\"change\", this.onContactChanged, this);\n            },\n\n            comparator: function (contact1, contact2) {\n                if (xabber.settings.roster.sorting === 'online-first') {\n                    let s1 = contact1.get('status'),\n                        s2 = contact2.get('status'),\n                        sw1 = constants.STATUS_WEIGHTS[s1],\n                        sw2 = constants.STATUS_WEIGHTS[s2],\n                        sw1_offline = sw1 >= constants.STATUS_WEIGHTS.offline,\n                        sw2_offline = sw2 >= constants.STATUS_WEIGHTS.offline;\n                    if (sw1_offline ^ sw2_offline) {\n                        return sw1_offline ? 1 : -1;\n                    }\n                }\n                let name1, name2;\n                name1 = contact1.get('name').toLowerCase();\n                name2 = contact2.get('name').toLowerCase();\n                return name1 < name2 ? -1 : (name1 > name2 ? 1 : 0);\n            },\n\n            onContactChanged: function (contact) {\n                let changed = contact.changed;\n                if (_.has(changed, 'name') || _.has(changed, 'status_updated')) {\n                    this.sort();\n                    this.trigger('update_contact_item', contact);\n                }\n            }\n        });\n\n        xabber.Group = Backbone.Model.extend({\n            defaults: {\n                counter: {all: 0, online: 0}\n            },\n\n            initialize: function (attrs, options) {\n                this.account = options.account;\n                attrs.name || (attrs.name = attrs.id);\n                this.set(attrs);\n                this._settings = this.account.groups_settings.get(attrs.name);\n                if (!this._settings)\n                    this._settings = this.account.groups_settings.create({name: attrs.name});\n                this.settings = this._settings.attributes;\n                this.contacts = new xabber.GroupContacts(null, {group: this});\n                this.settings_view = new xabber.GroupSettingsView({model: this});\n                this.contacts.on(\"add update_contact_item\", this.updateCounter, this);\n                this.contacts.on(\"destroy\", this.onContactRemoved, this);\n                xabber._roster_settings.on(\"change\", this.onChangedRosterSettings, this);\n            },\n\n            isSpecial: function () {\n                return _.isNumber(this.get('id'));\n            },\n\n            updateCounter: function () {\n                let all = this.contacts.length,\n                    online = all - this.contacts.where({status: 'offline'}).length;\n                this.set('counter', {all: all, online: online});\n            },\n\n            renameGroup: function (new_name) {\n                let name = this.get('name'),\n                    attrs = _.clone(this.settings);\n                attrs.name = new_name;\n                this._settings.destroy();\n                this._settings = this.account.groups_settings.create(attrs);\n                this.settings = this._settings.attributes;\n                this.set({id: new_name, name: new_name});\n                this.trigger('rename', this, name);\n                _.each(_.clone(this.contacts.models), function (contact) {\n                    let groups = _.clone(contact.get('groups')),\n                        index = groups.indexOf(name);\n                    if (index >= 0) {\n                        groups.splice(index, 1);\n                    }\n                    index = groups.indexOf(new_name);\n                    if (index < 0) {\n                        groups.push(new_name);\n                    }\n                    contact.pushInRoster({groups: groups});\n                });\n            },\n\n            deleteGroup: function () {\n                let name = this.get('name');\n                this._settings.destroy();\n                _.each(_.clone(this.contacts.models), function (contact) {\n                    let groups = _.clone(contact.get('groups')),\n                        index = groups.indexOf(name);\n                    if (index >= 0) {\n                        groups.splice(index, 1);\n                    }\n                    contact.pushInRoster({groups: groups});\n                });\n            },\n\n            removeContact: function (contact) {\n                if (this.contacts.get(contact)) {\n                    this.contacts.remove(contact);\n                    this.onContactRemoved(contact);\n                }\n            },\n\n            onContactRemoved: function (contact) {\n                this.updateCounter();\n                this.trigger('remove_contact', contact);\n                this.contacts.length || this.destroy();\n            },\n\n            onChangedRosterSettings: function () {\n                let changed = xabber._roster_settings.changed;\n                if (_.has(changed, 'show_offline')) {\n                    this._settings.trigger('change:show_offline');\n                }\n                if (_.has(changed, 'sorting')) {\n                    this.contacts.sort();\n                    this._settings.trigger('change:sorting');\n                }\n            },\n\n            showSettings: function () {\n                this.settings_view.show();\n            }\n        });\n\n        xabber.GroupView = xabber.BasicView.extend({\n            className: 'roster-group',\n            events: {\n                \"click .group-head\": \"toggle\",\n                \"click .group-head .group-icon\": \"showGroupSettings\",\n                \"mouseover .group-head\": \"showSettingsIcon\",\n                \"mouseleave .group-head\": \"updateGroupIcon\"\n            },\n\n            _initialize: function () {\n                this.account = this.model.account;\n                this.updateName();\n                this.updateGroupIcon();\n                this.updateMembersCounter();\n                this.model.contacts.on(\"add\", this.onContactAdded, this);\n                this.model.on(\"remove_contact\", this.onContactRemoved, this);\n                this.model.contacts.on(\"update_contact_item\", this.updateContactItem, this);\n                this.model.on(\"change:name\", this.updateName, this);\n                this.model.on(\"change:counter\", this.updateMembersCounter, this);\n                this.model._settings.on(\"change:show_offline\", this.onChangedOfflineSetting, this);\n                this.model._settings.on(\"change:sorting\", this.onChangedSortingSetting, this);\n                this.data.on(\"change:expanded\", this.updateExpanded, this);\n            },\n\n            updateExpanded: function () {\n                let expanded = this.data.get('expanded');\n                this.$el.switchClass('shrank', !expanded);\n                this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n                this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n                this.$('.roster-contact').showIf(expanded);\n                this.parent.parent.onListChanged();\n            },\n\n            updateGroupIcon: function () {\n                let mdi_icon, show_offline = this.model.settings.show_offline;\n                if (show_offline === 'default') {\n                    mdi_icon = 'settings';\n                } else if (show_offline === 'yes') {\n                    mdi_icon = 'group-filled';\n                } else if (show_offline === 'no') {\n                    mdi_icon = 'group-outline';\n                }\n                this.$('.group-icon').attr('data-mdi', mdi_icon).hideIf(mdi_icon === 'settings');\n            },\n\n            updateName: function () {\n                this.$('.group-name').text(this.model.get('name'));\n            },\n\n            updateMembersCounter: function () {\n                let counter = this.model.get('counter');\n                this.$('.participant-counter').text('('+counter.online+'/'+counter.all+')');\n            },\n\n            onContactAdded: function (contact) {\n                let view = this.addChild(contact.get('jid'), this.item_view, {model: contact});\n                this.updateContactItem(contact);\n            },\n\n            onContactRemoved: function (contact) {\n                this.removeChild(contact.get('jid'));\n                this.parent.parent.onListChanged();\n            },\n\n            updateContactItem: function (contact) {\n                let view = this.child(contact.get('jid'));\n                if (!view) return;\n                let roster_settings = xabber.settings.roster,\n                    group_settings = this.model.settings,\n                    is_default_show_offline = group_settings.show_offline === 'default',\n                    show_offline = group_settings.show_offline === 'yes' ||\n                        (is_default_show_offline && roster_settings.show_offline === 'yes'),\n                    is_offline = constants.STATUS_WEIGHTS[contact.get('status')] >= 6;\n\n                view.$el.switchClass('invisible', is_offline && !show_offline).detach();\n                let index = this.model.contacts.indexOf(contact);\n                if (index === 0) {\n                    this.$('.group-head').after(view.$el);\n                } else {\n                    this.$('.roster-contact').eq(index - 1).after(view.$el);\n                }\n                view.$el.showIf(this.data.get('expanded'));\n                this.parent.parent.onListChanged();\n                return view;\n            },\n\n            showSettingsIcon: function () {\n                this.$('.group-icon').attr('data-mdi', 'settings').removeClass('hidden');\n            },\n\n            showGroupSettings: function (ev) {\n                ev.stopPropagation();\n                this.model.showSettings();\n            },\n\n            onChangedOfflineSetting: function () {\n                this.updateGroupIcon();\n                let roster_settings = xabber.settings.roster,\n                    group_settings = this.model.settings,\n                    is_default_show_offline = group_settings.show_offline === 'default',\n                    show_offline = group_settings.show_offline === 'yes' ||\n                        (is_default_show_offline && roster_settings.show_offline === 'yes');\n                _.each(this.children, function (view) {\n                    let is_offline = constants.STATUS_WEIGHTS[view.model.get('status')] >= 6;\n                    view.$el.switchClass('invisible', is_offline && !show_offline);\n                });\n                this.parent.parent.onListChanged();\n            },\n\n            onChangedSortingSetting: function () {\n                _.each(this.children, function (view) { view.$el.detach(); });\n                this.model.contacts.each((c) => { this.updateContactItem(c); });\n                this.parent.parent.onListChanged();\n            }\n        });\n\n        xabber.GroupRightView = xabber.GroupView.extend({\n            template: templates.group_right,\n            item_view: xabber.ContactItemRightView,\n\n            __initialize: function () {\n                this.data.set('expanded', this.model.settings.expanded);\n            },\n\n            toggle: function () {\n                let expanded = !this.data.get('expanded');\n                this.data.set('expanded', expanded);\n                this.model._settings.save('expanded', expanded);\n            }\n        });\n\n        xabber.GroupLeftView = xabber.GroupView.extend({\n            template: templates.group_left,\n            item_view: xabber.ContactItemLeftView,\n\n            __initialize: function () {\n                this.data.set('expanded', true);\n            },\n\n            toggle: function (ev) {\n                ev.stopPropagation();\n                this.data.set('expanded', !this.data.get('expanded'));\n            }\n        });\n\n        xabber.GroupSettingsView = xabber.BasicView.extend({\n            className: 'modal main-modal group-settings',\n            template: templates.group_settings,\n            ps_selector: '.modal-content',\n            avatar_size: constants.AVATAR_SIZES.GROUP_SETTINGS,\n\n            events: {\n                \"change .offline input[type=radio][name=offline]\": \"setOffline\",\n                \"click .btn-apply\": \"applySettings\",\n                \"click .btn-delete\": \"deleteGroup\",\n                \"click .btn-cancel\": \"close\"\n            },\n\n            _initialize: function () {\n                this._settings = this.model._settings;\n                let name = this.model.get('name');\n                if (this.model.isSpecial()) {\n                    this.$('.group-name input').attr('readonly', true);\n                    this.$('.btn-delete').addClass('hidden');\n                }\n                this.model.on(\"destroy\", this.onDestroy, this);\n            },\n\n            render: function () {\n                this.$('.group-name input').val(this.model.get('name'));\n                this.$('.group-name .errors').addClass('hidden');\n                this.$('.offline input[type=radio][name=offline][value='+\n                    (this.model.settings.show_offline)+']').prop('checked', true);\n                this.$el.openModal({\n                    ready: function () {\n                        Materialize.updateTextFields();\n                    },\n                    complete: this.hide.bind(this)\n                });\n            },\n\n            setOffline: function (ev) {\n                this.model._settings.save('show_offline', ev.target.value);\n            },\n\n            validateName: function (name) {\n                if (!name) {\n                    return xabber.getString(\"dialog_add_circle__error__text_input_name\");\n                }\n                if (this.model.collection.get(name)) {\n                    return xabber.getString(\"dialog_add_circle__error__text_wrong_name\");\n                }\n            },\n\n            applySettings: function () {\n                let new_name = this.$('.group-name input').val();\n                if (new_name !== this.model.get('name')) {\n                    let name_error = this.validateName(new_name);\n                    if (name_error) {\n                        this.$('.group-name .errors').text(name_error).removeClass('hidden');\n                        return;\n                    } else {\n                        this.model.renameGroup(new_name);\n                    }\n                }\n                this.close();\n            },\n\n            deleteGroup: function () {\n                let name = this.model.get('name');\n                utils.dialogs.ask(xabber.getString(\"circle_remove\"), xabber.getString(\"circle_remove_confirm\", [name]), null, { ok_button_text: xabber.getString(\"remove\")})\n                    .done((result) => {\n                        result && this.model.deleteGroup();\n                    });\n            },\n\n            onHide: function () {\n                this.$el.detach();\n            },\n\n            close: function () {\n                this.$el.closeModal({ complete: this.hide.bind(this) });\n            },\n\n            onDestroy: function () {\n                this.$el.closeModal({ complete: this.remove.bind(this) });\n            }\n        });\n\n        xabber.Groups = Backbone.Collection.extend({\n            model: xabber.Group,\n\n            initialize: function (models, options) {\n                this.account = options.account;\n                this.on(\"change:id\", this.sort, this);\n                this.account.on('render_settings', this.render, this);\n            },\n\n            comparator: function (a, b) {\n                if (a.isSpecial() === b.isSpecial()) {\n                    return a.get('id') < b.get('id') ? -1 : 1;\n                }\n                return a.isSpecial() ? 1 : -1;\n            },\n\n            notSpecial: function () {\n                return this.filter(function (group) { return !group.isSpecial(); });\n            },\n\n            onGroupAdded: function (group) {\n                group.acc_view = new xabber.AccountGroupView({model: group});\n            },\n\n            render: function () {\n                this.on(\"add\", this.onGroupAdded, this);\n                this.models.forEach((group) => {\n                    group.acc_view = new xabber.AccountGroupView({model: group});\n                });\n            }\n        });\n\n        xabber.Contacts = xabber.ContactsBase.extend({\n            initialize: function (models, options) {\n                this.account = options.account;\n                this.account.on(\"deactivate destroy\", this.removeAllContacts, this);\n                this.collections = [];\n                this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n                this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n            },\n\n            addCollection: function (collection) {\n                this.collections.push(collection);\n            },\n\n            updateInCollections: function (event, contact) {\n                _.each(this.collections, function (collection) {\n                    collection.update(contact, event);\n                });\n            },\n\n            mergeContact: function (attrs) {\n                if (typeof attrs !== \"object\") {\n                    attrs = {jid: attrs};\n                }\n                let contact = this.get(attrs.jid);\n                if (contact) {\n                    if (attrs.avatar) {\n                        attrs.image = attrs.avatar;\n                        delete attrs.avatar;\n                        contact.cached_image = Images.getCachedImage(attrs.image);\n                    }\n                    contact.set(attrs);\n                } else {\n                    contact = this.create(attrs, {account: this.account});\n                }\n                return contact;\n            },\n\n            blockContact: function (jid, callback, errback) {\n                let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n                    .c('item', {jid: jid});\n                this.account.sendIQFast(iq, callback, errback);\n            },\n\n            unblockContact: function (jid, callback, errback) {\n                let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n                    .c('item', {jid: jid});\n                this.account.sendIQFast(iq, callback, errback);\n            },\n\n            removeAllContacts: function () {\n                _.each(_.clone(this.models), function (contact) {\n                    contact.destroy();\n                });\n                this.account.trigger('remove_saved_chat');\n            },\n\n            handlePresence: function (presence, jid) {\n                let contact = this.mergeContact(jid);\n                contact.handlePresence(presence);\n            }\n        });\n\n        xabber.BlockList = Backbone.Model.extend({\n            initialize: function (models, options) {\n                this.account = options.account;\n                this.list = {};\n                this.contacts = this.account.contacts;\n                this.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n                this.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n            },\n\n            length: function () {\n                return Object.keys(this.list).length;\n            },\n\n            isBlocked: function (jid) {\n                return this.list.hasOwnProperty(jid);\n            },\n\n            onContactRemoved: function (jid) {\n                delete this.list[jid];\n            },\n\n            onContactAdded: function (attrs) {\n                this.list[attrs.jid] = attrs;\n            },\n\n            registerHandler: function () {\n                this.account.connection.deleteHandler(this._stanza_handler);\n                this._stanza_handler = this.account.connection.addHandler(\n                    this.onBlockingIQ.bind(this),\n                    Strophe.NS.BLOCKING, 'iq', \"set\", null, this.account.get('jid')\n                );\n            },\n\n            getFromServer: function () {\n                let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n                this.account.sendIQFast(iq, this.onBlockingIQ.bind(this));\n            },\n\n            onBlockingIQ: function (iq) {\n                let $elem = $(iq).find(`[xmlns=\"${Strophe.NS.BLOCKING}\"]`),\n                    tag = $elem[0].tagName.toLowerCase(),\n                    blocked = tag.startsWith('block');\n                $elem.find('item').each((idx, item) => {\n                    let jid = item.getAttribute('jid'),\n                        resource = Strophe.getResourceFromJid(jid),\n                        domain = Strophe.getDomainFromJid(jid),\n                        attrs = {jid},\n                        contact = this.contacts.get(jid);\n                    resource && (attrs.resource = true);\n                    (domain === jid) && (attrs.domain = true);\n                    if (blocked)\n                        this.contacts.trigger(\"add_to_blocklist\", attrs);\n                    else {\n                        this.contacts.trigger(\"remove_from_blocklist\", jid);\n                        contact && contact.trigger(\"remove_from_blocklist\", contact);\n                    }\n                    contact && contact.set('blocked', blocked);\n                });\n                return true;\n            }\n        });\n\n        xabber.Roster = xabber.ContactsBase.extend({\n            initialize: function (models, options) {\n                this.account = options.account;\n                this.roster_version = this.account.get('roster_version') || 0;\n                this.groups = this.account.groups;\n                this.contacts = this.account.contacts;\n                this.contacts.on(\"add_to_roster\", this.onContactAdded, this);\n                this.contacts.on(\"change_in_roster\", this.onContactChanged, this);\n                this.contacts.on(\"remove_from_roster\", this.onContactRemoved, this);\n            },\n\n            update: function (contact, event) {\n                let contains = contact.get('in_roster') || contact.get('known');\n                if (contains) {\n                    if (!this.get(contact)) {\n                        this.add(contact);\n                        contact.trigger(\"add_to_roster\", contact);\n                    } else if (event === 'change') {\n                        contact.trigger(\"change_in_roster\", contact);\n                    }\n                } else if (this.get(contact)) {\n                    this.remove(contact);\n                    contact.trigger(\"remove_from_roster\", contact);\n                }\n            },\n\n            onContactAdded: function (contact) {\n                if (!contact.get('in_roster'))\n                    return;\n                let groups = contact.get('groups');\n                if (!groups.length) {\n                    this.addContactToGroup(contact, constants.GENERAL_GROUP_ID);\n                } else {\n                    _.each(groups, _.bind(this.addContactToGroup, this, contact));\n                }\n            },\n\n            onContactChanged: function (contact) {\n                let changed = contact.changed,\n                    known_changed = _.has(changed, 'known'),\n                    in_roster_changed = _.has(changed, 'in_roster'),\n                    groups_changed = _.has(changed, 'groups');\n                if (in_roster_changed || known_changed || groups_changed) {\n                    let groups;\n                    if (contact.get('in_roster')) {\n                        groups = _.clone(contact.get('groups'));\n                        if (!groups.length) {\n                            groups.push(constants.GENERAL_GROUP_ID);\n                        }\n                    } else if (contact.get('known')) {\n                        groups = [];\n                    }\n                    // TODO: optimize\n                    let groups_to_remove = this.groups.filter(function (group) {\n                        return !_.contains(groups, group.get('id'));\n                    });\n                    _.each(groups_to_remove, function (group) {\n                        group.removeContact(contact);\n                    });\n                    _.each(groups, _.bind(this.addContactToGroup, this, contact));\n                    contact.trigger('update_groups');\n                }\n            },\n\n            onContactRemoved: function (contact) {\n                _.each(this.groups.filter(), function (group) {\n                    group.removeContact(contact);\n                });\n            },\n\n            getGroup: function (name) {\n                let group = this.groups.get(name);\n                if (group)\n                    return group;\n                let attrs = {id: name};\n                if (name === constants.GENERAL_GROUP_ID) {\n                    attrs.name = xabber.settings.roster.general_group_name;\n                } else if (name === constants.NON_ROSTER_GROUP_ID) {\n                    attrs.name = xabber.settings.roster.non_roster_group_name;\n                }\n                return this.groups.create(attrs, {account: this.account});\n            },\n\n            addContactToGroup: function (contact, name) {\n                let group = this.getGroup(name);\n                group.contacts.add(contact);\n            },\n\n            registerHandler: function () {\n                this.account.connection.deleteHandler(this._stanza_handler);\n                this._stanza_handler = this.account.connection.addHandler(\n                    this.onRosterIQ.bind(this),\n                    Strophe.NS.ROSTER, 'iq', \"set\", null, this.account.get('jid')\n                );\n            },\n\n            syncFromServer: function (options, synchronization_with_stamp, is_first_sync) {\n                options = options || {};\n                let request_attrs = {xmlns: Strophe.NS.SYNCHRONIZATION};\n                if (!options.after) {\n                    if (options.stamp)\n                        request_attrs.stamp = options.stamp;\n                    else if (this.account.last_msg_timestamp)\n                        request_attrs.stamp = this.account.last_msg_timestamp * 1000;\n                }\n                delete(options.stamp);\n                let iq = $iq({type: 'get'}).c('query', request_attrs).cnode(new Strophe.RSM(options).toXML());\n                this.account.sendFast(iq, (response) => {\n                    this.onSyncIQ(response, request_attrs.stamp, synchronization_with_stamp, is_first_sync, options.last_version_sync);\n                });\n            },\n\n            syncCachedConversations: function (conv_list, request_with_stamp, is_first_sync) {\n                $(conv_list).each((idx, item) => {\n                    this.syncConversation(null, null, item.conversation, is_first_sync);\n                });\n            },\n\n            syncConversations: function (iq, request_with_stamp, is_first_sync) {\n                $(iq).find('conversation').each((idx, item) => {\n                    this.syncConversation(iq, request_with_stamp, item, is_first_sync);\n                });\n            },\n\n            syncConversation: function (iq, request_with_stamp, item, is_first_sync) {\n                if (!$(item).length){\n                    return;\n                }\n                if (!iq)\n                    item = $($.parseXML(item)).find('conversation')[0];\n                let $item = $(item),\n                    jid = $item.attr('jid'), saved = false;\n                if (jid === this.account.get('jid'))\n                    saved = true;\n                if ($item.attr('type') === Strophe.NS.SYNCHRONIZATION_OLD_OMEMO)\n                    return true;\n                let $sync_metadata = $item.children('metadata[node=\"' + Strophe.NS.SYNCHRONIZATION + '\"]'),\n                    type = $item.attr('type'),\n                    presence = $item.children('presence'),\n                    $group_metadata = $item.children('metadata[node=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n                    is_incognito =  type === Strophe.NS.GROUP_CHAT && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('privacy').text() === 'incognito',\n                    is_private = is_incognito && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('parent').text(),\n                    is_group_chat =  type === Strophe.NS.GROUP_CHAT || is_private || is_incognito,\n                    encrypted = type === Strophe.NS.SYNCHRONIZATION_OMEMO,\n                    contact = !saved && this.contacts.mergeContact({jid: jid, group_chat: is_group_chat, private_chat: is_private, incognito_chat: is_incognito}),\n                    chat = saved ? this.account.chats.getSavedChat() : this.account.chats.getChat(contact, encrypted && 'encrypted', true),\n                    message = $sync_metadata.children('last-message').children('message'),\n                    current_call = $item.children('metadata[node=\"' + Strophe.NS.JINGLE_MSG + '\"]').children('call'),\n                    $unread_messages = $sync_metadata.children('unread'),\n                    chat_timestamp = Math.trunc(Number($item.attr('stamp'))/1000),\n                    last_read_msg = $unread_messages.attr('after'),\n                    last_delivered_msg = $sync_metadata.children('delivered').attr('id'),\n                    last_displayed_msg = $sync_metadata.children('displayed').attr('id'),\n                    unread_msgs_count = Number($unread_messages.attr('count')) || 0,\n                    is_invite =  message.find('invite').length,\n                    msg_retraction_version = $item.children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n                    msg, options = {synced_msg: true,};\n                (iq && !($item.attr('status') === 'deleted')) && this.account.cached_sync_conversations.putInCachedConversations({\n                    account_conversation_type: $(item).attr('jid') +  '/' + $(item).attr('type'),\n                    conversation: item.outerHTML,\n                });\n                if (!chat.item_view.content && (is_invite || encrypted && this.account.omemo)) {\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                }\n                if ($item.attr('pinned') || $item.attr('pinned') === '0'){\n                    chat.set('pinned', $item.attr('pinned'));\n                }\n                if (encrypted && this.account.omemo) {\n                    chat.set('timestamp', chat_timestamp);\n                    chat.set('opened', true);\n                    if (iq && $(iq).attr('type') != 'set')\n                        chat.item_view.updateEncryptedChat();\n                }\n                if (!saved) {\n                    if ($item.attr('mute') || $item.attr('mute') === '0') {\n                        if ($item.attr('mute') < (Date.now() / 1000))\n                            chat.set('muted', false);\n                        else\n                            chat.set('muted', $item.attr('mute'));\n                        this.account.chat_settings.updateMutedList(contact.get('jid'), $item.attr('mute'));\n                        if (contact.details_view_right)\n                            contact.details_view_right.updateNotifications();\n                    }\n                    else{\n                        chat.set('muted', false);\n                    }\n                }\n                if ($item.attr('status') === 'archived')\n                    chat.set('archived', true);\n                else if ($item.attr('status') === 'active' && !saved)\n                    chat.set('archived', false);\n                if ($item.attr('status') === 'deleted') {\n                    contact && contact.details_view && contact.details_view.isVisible() && xabber.body.setScreen(xabber.body.screen.get('name'), {right: undefined});\n                    chat.get('display') && xabber.body.setScreen(xabber.body.screen.get('name'), {right_contact: '', right: undefined});\n                    chat.set('opened', false);\n                    chat.set('const_unread', 0);\n                    this.account.cached_sync_conversations.removeFromCachedConversations($(item).attr('jid') +  '/' + $(item).attr('type'));\n                    this.account.chat_settings.updateGroupChatsList(contact.get('jid'), false);\n                    xabber.toolbar_view.recountAllMessageCounter();\n                    xabber.chats_view.clearSearch();\n                    contact && contact.set('sync_deleted', true);\n                    if (is_group_chat) {\n                        contact && contact.set('in_roster', false);\n                        contact && contact.set('known', false);\n                        contact && contact.set('removed', true);\n                        this.account.cached_roster.removeFromRoster(jid);\n                    }\n                }\n                else\n                    contact && contact.set('sync_deleted', false);\n                if ($group_metadata.length) {\n                    contact.participants && contact.participants.createFromStanza($group_metadata.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`));\n                }\n                if (current_call.length) {\n                    let $jingle_message = current_call.children('message'),\n                        full_jid = $jingle_message.attr('from'),\n                        session_id = $jingle_message.children('propose').attr('id');\n                    chat.initIncomingCall(full_jid, session_id);\n                }\n                chat.set('last_delivered_id', last_delivered_msg);\n                chat.set('last_displayed_id', last_displayed_msg);\n                chat.set('last_read_msg', last_read_msg);\n                chat.set('sync_type', type);\n                if (!message.length) {\n                    chat.set('timestamp', chat_timestamp);\n                    if (!(Number(last_delivered_msg) || Number(last_displayed_msg) || Number(last_read_msg))\n                        && !chat.item_view.content && !chat.get('group_chat')){\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    }\n                    chat.item_view.updateEmptyChat();\n                }\n                if (is_group_chat) {\n                    if (request_with_stamp && !is_first_sync) {\n                        if (chat.retraction_version < msg_retraction_version)\n                            chat.trigger(\"get_retractions_list\");\n                    } else\n                        chat.retraction_version = msg_retraction_version;\n                }\n                if (request_with_stamp && chat.item_view && chat.item_view.content) {\n                    chat.trigger('get_missed_history', request_with_stamp/1000);\n                }\n                unread_msgs_count && (options.is_unread = true);\n                options.delay = message.children('time');\n                if (encrypted && this.account.omemo)\n                    unread_msgs_count && unread_msgs_count--;\n                message.length && (msg = this.account.chats.receiveChatMessage(message, options));\n                if (!(encrypted && !this.account.omemo)){\n                    chat.messages_unread.reset();\n                    chat.set('unread', 0);\n                    chat.set('const_unread', unread_msgs_count);\n                }\n                if (msg) {\n                    if (!msg.get('is_unread') && $unread_messages.attr('count') > 0 && !msg.isSenderMe() && ($unread_messages.attr('after') < msg.get('stanza_id') || $unread_messages.attr('after') < msg.get('contact_stanza_id')))\n                        msg.set('is_unread', true);\n                    if(!(is_invite || encrypted && this.account.omemo)) {\n                        if (msg.isSenderMe() && msg.get('stanza_id') == last_displayed_msg)\n                            msg.set('state', constants.MSG_DISPLAYED);\n                        else if (msg.isSenderMe() && msg.get('stanza_id') == last_delivered_msg)\n                            msg.set('state', constants.MSG_DELIVERED);\n                        this.account.messages.add(msg);\n                        if ((chat.last_message && (msg.get('timestamp') > chat.last_message.get('timestamp'))) || !chat.last_message){\n                            chat.last_message = msg;\n                            chat.item_view.updateLastMessage(msg);\n                        }\n                    }\n                    chat.set('first_archive_id', msg.get('stanza_id'));\n                }\n                if (presence.length)\n                    contact && contact.handlePresence(presence[0]);\n                else {\n                    contact && contact.set('subscription_request_in', false)\n                }\n                xabber.toolbar_view.recountAllMessageCounter();\n            },\n\n            onSyncIQ: function (iq, request_with_stamp, synchronization_with_stamp, is_first_sync, is_last_sync) {\n                let sync_timestamp = Number($(iq).children(`query[xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).attr('stamp')),\n                    sync_rsm_after = $(iq).find(`query set[xmlns=\"${Strophe.NS.RSM}\"]`).children('last').text();\n                this.account.last_msg_timestamp = Math.round(sync_timestamp/1000);\n                let last_chat_msg_id = $(iq).find('set last'),\n                    encrypted_retract_version = $(iq).find('query conversation[type=\"encrypted\"]').first().children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n                    retract_version = $(iq).find('query conversation[type=\"chat\"]').first().children(`metadata[node=\"${Strophe.NS.REWRITE}\"]`).children('retract').attr('version');\n                if (!request_with_stamp)\n                    last_chat_msg_id.length ? (this.last_chat_msg_id = last_chat_msg_id.text()) : (this.conversations_loaded = true);\n                if (!_.isUndefined(encrypted_retract_version) && this.account.omemo && this.account.omemo.getRetractVersion() < encrypted_retract_version)\n                    this.account.getAllMessageRetractions(true);\n                if (request_with_stamp) {\n                    if (this.account.retraction_version < retract_version)\n                        this.account.getAllMessageRetractions();\n                } else {\n                    this.account.retraction_version = retract_version;\n                }\n                this.account.set('last_sync', sync_timestamp);\n                this.account.settings.update_settings({last_sync_timestamp: sync_timestamp});\n                let dfd = new $.Deferred();\n                dfd.done((is_cached) => {\n                    xabber.chats_view.hideChatsFeedback();\n                    if (!request_with_stamp)\n                        this.account.chats.getSavedChat();\n                    if (is_first_sync)\n                        this.account.set('first_sync', sync_timestamp);\n                    if (!$(iq).find('conversation').length || $(iq).find('conversation').length < constants.SYNCHRONIZATION_RSM_MAX ){\n                        if (is_first_sync) {\n                            this.getRoster();\n                        }\n                    }\n                    else if ($(iq).find('conversation').length) {\n                        if (!synchronization_with_stamp) {\n                            this.syncFromServer({max: constants.SYNCHRONIZATION_RSM_MAX, after: sync_rsm_after});\n                        }\n                        else {\n                            this.account.get('last_sync') && this.syncFromServer({stamp: this.account.get('last_sync'), max: constants.SYNCHRONIZATION_RSM_MAX}, true);\n                        }\n                    }\n                });\n                if (is_first_sync)\n                    this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                        let synced_conversations = $(iq).find('conversation').map(function () {\n                            return $(this).attr('jid') +  '/' + $(this).attr('type');\n                        }).toArray();\n                        res = res.filter(item => !synced_conversations.includes(item.account_conversation_type))\n                        this.syncCachedConversations(res, request_with_stamp, is_first_sync);\n                        this.syncConversations(iq, request_with_stamp, is_first_sync);\n                        dfd.resolve(true);\n                    });\n                else{\n                    this.syncConversations(iq, request_with_stamp);\n                    dfd.resolve();\n                }\n            },\n\n            getRoster: function () {\n                let request_ver = this.roster_version;\n                this.account.cached_roster.getAllFromRoster((roster_items) => {\n                    // $(roster_items).each((idx, roster_item) => {\n                    //     this.contacts.mergeContact(roster_item);\n                    // });\n                    if (!roster_items.length && request_ver != 0) {\n                        this.roster_version = 0;\n                    }\n                    this.getFromServer();\n                });\n            },\n\n            getFromServer: function () {\n                let iq = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.ROSTER, ver: this.roster_version});\n                this.account.sendIQFast(iq, (iq) => {\n                    this.onRosterIQ(iq);\n                    this.account.get('first_sync') && this.syncFromServer({stamp: this.account.get('first_sync'), max: constants.SYNCHRONIZATION_RSM_MAX, last_version_sync: true}, true);\n                    this.account.dfd_presence.resolve();\n                });\n            },\n\n            onRosterIQ: function (iq) {\n                let new_roster_version = $(iq).children('query').attr('ver');\n                if (iq.getAttribute('type') === 'set') {\n                    this.account.onSetIQResult(iq);\n                }\n                else {\n                    new_roster_version && (this.roster_version != new_roster_version) && this.account.cached_roster.clearDataBase();\n                    if (iq.getAttribute('type') === 'result') {\n                        new_roster_version && (this.roster_version = new_roster_version);\n                        this.account.save('roster_version', this.roster_version);\n                    }\n                }\n                $(iq).children('query').find('item').each((idx, item) => {\n                    this.onRosterItem(item);\n                });\n                return true;\n            },\n\n            onRosterItem: function (item) {\n                let jid = item.getAttribute('jid');\n                if (jid === this.account.get('jid'))\n                    return;\n                let contact = this.contacts.mergeContact(jid),\n                    subscription = item.getAttribute(\"subscription\"),\n                    subscription_preapproved = item.getAttribute(\"approved\"),\n                    ask = item.getAttribute(\"ask\");\n                if (contact.get('invitation') && (subscription === 'both' || subscription === 'to')) {\n                    contact.set('invitation', false);\n                    contact.trigger('remove_invite');\n                }\n                if (subscription === 'remove') {\n                    contact.set({\n                        in_roster: false,\n                        known: false,\n                        name: contact.get('jid'),\n                        subscription: undefined,\n                        subscription_request_out: false\n                    });\n                    contact.set('subscription_preapproved', false)\n                    this.account.cached_roster.removeFromRoster(jid);\n                    return;\n                }\n                let groups = [];\n                $(item).find('group').each(function () {\n                    let group = $(this).text();\n                    groups.indexOf(group) < 0 && groups.push(group);\n                });\n                let attrs = {\n                    subscription: subscription || 'none',\n                    in_roster: true,\n                    roster_name: item.getAttribute(\"name\"),\n                    groups: groups\n                };\n                if (subscription === 'both') {\n                    attrs.subscription_request_out = false;\n                    attrs.subscription_request_in = false;\n                }\n                if (subscription === 'from')\n                    attrs.subscription_request_in = false;\n                if (subscription === 'to')\n                    attrs.subscription_request_out = false;\n                if (ask === 'subscribe')\n                    attrs.subscription_request_out = true;\n                else\n                    attrs.subscription_request_out = false;\n                attrs.roster_name && (attrs.name = attrs.roster_name);\n                this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && (attrs.subscription_preapproved = subscription_preapproved ? true : subscription_preapproved);\n                contact.set(attrs);\n                contact.updateCachedInfo();\n            }\n        });\n\n        xabber.AccountRosterView = xabber.BasicView.extend({\n            className: 'account-roster-wrap',\n\n            events: {\n                \"click .roster-account-info-wrap .status-button\": \"openChangeStatus\",\n                \"click .roster-account-info\": \"toggle\"\n            },\n\n            _initialize: function (options) {\n                this.account = options.account;\n                this.groups = this.account.groups;\n                this.roster = this.account.roster;\n                this.contacts = this.account.contacts;\n                this.$el.attr('data-jid', this.account.get('jid'));\n                this.$el.appendTo(this.parent.$('.contact-list'));\n                this.$info = this.$('.roster-account-info-wrap');\n                this.updateName();\n                this.updateStatus();\n                this.updateAvatar();\n                this.updateColorScheme();\n                this.account.on(\"change:name\", this.updateName, this);\n                this.account.on(\"change:image\", this.updateAvatar, this);\n                this.account.on(\"change:status_updated\", this.updateStatus, this);\n                this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n                this.groups.on(\"add\", this.onGroupAdded, this);\n                this.groups.on(\"rename\", this.onGroupRenamed, this);\n                this.groups.on(\"destroy\", this.onGroupRemoved, this);\n                this.data.on(\"change:expanded\", this.updateExpanded, this);\n                this.data.set('expanded', true);\n            },\n\n            updateName: function () {\n                this.$info.find('.name').text(this.account.get('name'));\n            },\n\n            updateStatus: function () {\n                this.$info.find('.status').attr('data-status', this.account.get('status'));\n                this.$info.find('.status-message').text(this.account.getStatusMessage());\n            },\n\n            updateAvatar: function () {\n                let image = this.account.cached_image;\n                this.$info.find('.circle-avatar').setAvatar(image, this.avatar_size);\n            },\n\n            updateColorScheme: function () {\n                this.$el.attr('data-color', this.account.settings.get('color'));\n            },\n\n            updateExpanded: function () {\n                let expanded = this.data.get('expanded');\n                this.$el.switchClass('shrank', !expanded);\n                this.parent.updateScrollBar();\n            },\n\n            updateGroupPosition: function (view) {\n                view.$el.detach();\n                let index = this.groups.indexOf(view.model);\n                if (index === 0) {\n                    this.$info.after(view.$el);\n                } else {\n                    this.$('.roster-group').eq(index - 1).after(view.$el);\n                }\n                this.parent.updateScrollBar();\n            },\n\n            onGroupAdded: function (group) {\n                let view = this.addChild(group.get('id'), this.group_view, {model: group});\n                this.updateGroupPosition(view);\n            },\n\n            onGroupRenamed: function (group, old_name) {\n                let view = this.child(old_name);\n                delete this.children[old_name];\n                this.children[group.get('name')] = view;\n                view && this.updateGroupPosition(view);\n            },\n\n            onGroupRemoved: function (group) {\n                this.removeChild(group.get('id'));\n            },\n\n            toggle: function (ev) {\n                this.data.set('expanded', !this.data.get('expanded'));\n            },\n\n            openChangeStatus: function (ev) {\n                if (!xabber.change_status_view)\n                    xabber.change_status_view = new xabber.ChangeStatusView();\n                xabber.change_status_view.open(this.account);\n            }\n        });\n\n        xabber.AccountRosterRightView = xabber.AccountRosterView.extend({\n            template: templates.account_roster_right,\n            group_view: xabber.GroupRightView,\n            avatar_size: constants.AVATAR_SIZES.ROSTER_RIGHT_ACCOUNT_ITEM,\n\n            __initialize: function () {\n                this.contacts.on(\"add_to_roster change_in_roster remove_from_roster\",\n                    this.updateCounter, this);\n                this.contacts.on(\"add_to_roster remove_from_roster\",\n                    this.updateGlobalCounter, this);\n            },\n\n            updateCounter: function () {\n                let all = this.roster.length,\n                    online = all - this.roster.where({status: 'offline'}).length;\n                this.$info.find('.counter').text(online + '/' + all);\n            },\n\n            updateGlobalCounter: function () {\n                this.parent.updateCounter();\n            }\n        });\n\n        xabber.AccountRosterLeftView = xabber.AccountRosterView.extend({\n            template: templates.account_roster_left,\n            group_view: xabber.GroupLeftView,\n            avatar_size: constants.AVATAR_SIZES.ROSTER_LEFT_ACCOUNT_ITEM,\n\n            __initialize: function () {\n                this.$info.find('.jid').text(this.account.get('jid'));\n            },\n\n            search: function (query) {\n                this.$el.removeClass('shrank');\n                this.$('.group-head').addClass('hidden');\n                let count = 0, hashes = {};\n                this.$('.roster-contact').each((idx, item) => {\n                    let $item = $(item),\n                        jid = $item.data('jid'),\n                        contact = this.roster.get(jid);\n                    if (!contact) return;\n                    if (hashes[contact.hash_id]) {\n                        $item.addClass('hidden');\n                        return;\n                    }\n                    hashes[contact.hash_id] = true;\n                    let name = contact.get('name').toLowerCase(),\n                        hide = name.indexOf(query) < 0 && jid.indexOf(query) < 0;\n                    $item.hideIf(hide);\n                    hide || count++;\n                });\n                this.$('.roster-account-info-wrap').showIf(count);\n            },\n\n            searchAll: function () {\n                this.$el.switchClass('shrank', !this.data.get('expanded'));\n                this.$('.roster-account-info-wrap').removeClass('hidden');\n                this.$('.group-head').removeClass('hidden');\n                this.$('.list-item').removeClass('hidden');\n            }\n        });\n\n        xabber.BlockListView = xabber.BasicView.extend({\n            avatar_size: constants.AVATAR_SIZES.CONTACT_BLOCKED_ITEM,\n            events: {\n                \"click .blocked-item\": \"onTabClick\",\n                \"click .btn-reset-panel\": \"deselectParticipants\",\n                \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n                \"click .blocked-contact input\": \"selectUnblock\",\n                \"click .btn-unblock-selected\": \"unblockSelected\"\n            },\n\n            _initialize: function (options) {\n                this.account = options.account;\n                for (let jid in this.account.blocklist.list) {\n                    this.onContactAdded(this.account.blocklist.list[jid], false);\n                };\n                this.$('.blocked-item:not(.hidden)').first().click().find('a').addClass('active');\n                this.hideTabs();\n                this.account.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n                this.account.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n            },\n\n            render: function (options) {\n                this.deselectBlocked();\n                this.updateIndicator();\n                xabber.once(\"update_css\", this.updateIndicator, this);\n            },\n\n            updateIndicator: function () {\n                this.$('.tabs .indicator').remove();\n                this.$('.tabs').tabs();\n                this.$('.indicator').addClass('ground-color-500');\n            },\n\n            selectUnblock: function (ev) {\n                this.updateUnblockButton();\n            },\n\n            deselectBlocked: function (ev) {\n                this.$('.blocked-contact input').prop('checked', false)\n                this.updateUnblockButton();\n            },\n\n            updateUnblockButton: function () {\n                let has_changes = this.$('.blocked-contact input:checked').length;\n                this.parent.$('.btn-unblock-selected').hideIf(!has_changes)\n                this.parent.$('.btn-deselect-blocked').hideIf(!has_changes)\n                this.parent.$('.btn-block').hideIf(has_changes)\n            },\n\n            unblockSelected: function (ev) {\n                let selected = this.$('.blocked-contact input:checked').closest('.blocked-contact');\n                selected.each((index, item) => {\n                    this.unblockContactByJid($(item).attr('data-jid'))\n                });\n            },\n\n            unblockContactByJid: function (jid) {\n                let contact = this.account.contacts.get(jid);\n                if (contact)\n                    contact.unblock();\n                else {\n                    this.account.contacts.unblockContact(jid);\n                }\n            },\n\n            onTabClick: function (ev) {\n                let tab = $(ev.target).closest('.blocked-item'),\n                    tab_name = $(ev.target).closest('.blocked-item').attr('data-tab-name');\n                this.$('.blocked-item a').removeClass('active');\n                tab.find('a').addClass('active');\n                this.$('.blocked-items-container').addClass('hidden');\n                this.$('.' + tab_name).removeClass('hidden');\n                this.$('.blocked-contact input').prop('checked', false)\n                this.updateUnblockButton();\n            },\n\n            hideTabs: function () {\n                this.$('.tabs').hideIf(this.$('.blocked-item:not(.hidden)').length === 1)\n            },\n\n            hideEmptyContainers: function () {\n                let tabs = this.$('.blocked-list:empty');\n                tabs.each((idx, item) => {\n                    let tab_name = $(item).closest('.blocked-items-container').addClass('hidden').attr('data-tab-name');\n                    this.$('.' + tab_name).addClass('hidden').removeClass('tab');\n                });\n                if (this.$('.blocked-item.hidden .active').length){\n                    this.$('.blocked-item:not(.hidden)').first().click().find('a').addClass('active');\n\n                }\n                this.hideTabs();\n                this.updateUnblockButton();\n                this.updateIndicator();\n            },\n\n            onContactAdded: function (attrs) {\n                let tmp = templates.contact_blocked_item({jid: attrs.jid});\n                if (attrs.resource) {\n                    this.$('.invitations-item').removeClass('hidden').addClass('tab');\n                    this.$('.blocked-invitations-wrap').find('.blocked-invitations').append(tmp);\n                }\n                else if (attrs.domain) {\n                    this.$('.domains-item').removeClass('hidden').addClass('tab');\n                    let $domain_wrap = this.$('.blocked-domains-wrap'),\n                        $desc = $domain_wrap.find('.blocked-item-description');\n                    $domain_wrap.find('.blocked-domains').append(tmp);\n                    $desc.text($desc.text() + ($desc.text() ? ', ' : \"\") + attrs.jid);\n                }\n                else {\n                    this.$('.contacts-item').removeClass('hidden').addClass('tab');\n                    this.$('.blocked-contacts-wrap').find('.blocked-contacts').append(tmp);\n                    let $desc = this.$('.blocked-contacts-wrap .blocked-item-description');\n                    $desc.text($desc.text() + ($desc.text() ? ', ' : \"\") + attrs.jid);\n                }\n                this.$('.placeholder').addClass('hidden');\n                this.hideTabs();\n                this.updateIndicator();\n                if (this.$('.blocked-items-container.hidden').length === 3)\n                    this.$('.blocked-list:not(:empty)').closest('.blocked-items-container').removeClass('hidden');\n                this.isVisible() && this.parent.updateScrollBar();\n            },\n\n            onContactRemoved: function (jid) {\n                let $elem = this.$(`.blocked-contact[data-jid=\"${jid}\"]`);\n                let blocked_list = $elem.closest('.blocked-list'),\n                    reg = new RegExp(('\\\\,\\\\s' + jid + '|' + jid + '\\\\,\\\\s' + '|' + jid)),\n                    blocked_contacts_desc = $elem.closest('.blocked-contacts-wrap').showIf(blocked_list.children().length > 1).find('.blocked-item-description'),\n                    blocked_domains_desc = $elem.closest('.blocked-domains-wrap').showIf(blocked_list.children().length > 1).find('.blocked-item-description');\n                $elem.closest('.blocked-invitations-wrap').showIf(blocked_list.children().length > 1);\n                blocked_contacts_desc.text(blocked_contacts_desc.text().replace(reg, \"\"));\n                blocked_domains_desc.text(blocked_domains_desc.text().replace(reg, \"\"));\n                $elem.detach();\n                this.$('.placeholder').hideIf(this.account.blocklist.length());\n                this.parent.updateScrollBar();\n                this.hideEmptyContainers();\n            },\n        });\n\n        xabber.RosterView = xabber.SearchPanelView.extend({\n            ps_selector: '.contact-list-wrap',\n\n            _initialize: function () {\n                this._settings = xabber._roster_settings;\n                this.model.on(\"activate\", this.updateOneRosterView, this);\n                this.model.on(\"update_order\", this.updateRosterViews, this);\n                this.model.on(\"deactivate destroy\", this.removeRosterView, this);\n                this.on(\"before_hide\", this.saveScrollBarOffset, this);\n                this.$('input').on('input', this.updateSearch.bind(this));\n            },\n\n            updateOneRosterView: function (account) {\n                let jid = account.get('jid'),\n                    view = this.child(jid);\n                if (view) {\n                    view.$el.detach();\n                } else if (account.isConnected()) {\n                    view = this.addChild(jid, this.account_roster_view, {account: account});\n                } else {\n                    return;\n                }\n                let index = this.model.connected.indexOf(account);\n                if (index === 0) {\n                    this.$('.contact-list').prepend(view.$el);\n                } else {\n                    this.$('.contact-list').children().eq(index - 1).after(view.$el);\n                }\n                this.updateScrollBar();\n            },\n\n            updateRosterViews: function () {\n                _.each(this.children, function (view) { view.detach(); });\n                this.model.each((account) => {\n                    let jid = account.get('jid'), view = this.child(jid);\n                    view && this.$('.contact-list').append(view.$el);\n                });\n                this.updateScrollBar();\n            },\n\n            removeRosterView: function (account) {\n                this.removeChild(account.get('jid'));\n                this.updateScrollBar();\n            }\n        });\n\n        xabber.RosterRightView = xabber.RosterView.extend({\n            className: 'roster-right-container container',\n            template: templates.roster_right,\n            ps_settings: {theme: 'roster-right'},\n            account_roster_view: xabber.AccountRosterRightView,\n\n            events: {\n                \"click .collapsed-wrap\": \"expand\",\n                \"mouseleave .expanded-wrap\": \"collaps\"\n            },\n\n            __initialize: function () {\n                this.updateCounter();\n                this.updateTheme();\n                this.updateBlur();\n                this.updateTransparency();\n                this.model.on(\"activate deactivate destroy\", this.updateCounter, this);\n                this.data.on(\"change\", this.updateLayout, this);\n                let pinned = this._settings.get('pinned');\n                this.data.set({expanded: false, pinned: false});\n            },\n\n            updateTheme: function (theme) {\n                theme = theme || xabber.settings.side_panel.theme;\n                this.$el.attr('data-theme', theme);\n                this.updateTransparency();\n            },\n\n            updateTransparency: function (transparency) {\n                transparency = transparency || xabber.settings.side_panel.transparency;\n                if (xabber.settings.side_panel.theme == 'dark')\n                    this.$el.css('background-color', `rgba(0, 0, 0, ${1 - transparency/100})`);\n                else\n                    this.$el.css('background-color', `rgba(255, 255, 255, ${1 - transparency/100})`);\n            },\n\n            updateBlur: function (blur) {\n                blur = _.isUndefined(blur) ? xabber.settings.side_panel.blur : blur;\n                this.$el.switchClass('with-blur', blur);\n            },\n\n            expand: function () {\n                this.data.set('expanded', true);\n            },\n\n            collaps: function () {\n                if (!this.data.get('pinned'))\n                    this.data.set('expanded', false);\n            },\n\n            updateLayout: function () {\n                let changed = this.data.changed;\n                if (_.has(changed, 'expanded') || _.has(changed, 'pinned')) {\n                    xabber.trigger('update_layout', {roster_state_changed: true});\n                }\n            },\n\n            updateCounter: function () {\n                this.$('.all-contacts-counter').text(\n                    _.reduce(this.children, function (counter, view) {\n                        return counter + view.roster.length;\n                    }, 0)\n                );\n            },\n\n            onListChanged: function () {\n                this.updateScrollBar();\n            }\n        });\n\n        xabber.RosterLeftView = xabber.RosterView.extend({\n            className: 'roster-left-container container',\n            template: templates.roster_left,\n            ps_settings: {theme: 'item-list'},\n            main_container: '.contact-list',\n            account_roster_view: xabber.AccountRosterLeftView,\n\n            __initialize: function () {\n                this.model.on(\"list_changed\", this.updateLeftIndicator, this);\n                this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n            },\n\n            updateLeftIndicator: function () {\n                this.$el.attr('data-indicator', this.model.connected.length > 1);\n            },\n\n            getContactForItem: function (item) {\n                let $item = $(item),\n                    account_jid = $item.parent().parent().data('jid'),\n                    jid = $item.data('jid'),\n                    roster_view = this.child(account_jid);\n                return roster_view && roster_view.roster.get(jid);\n            },\n\n            render: function (options) {\n                (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n            },\n\n            searchAll: function () {\n                _.each(this.children, function (view) {\n                    view.searchAll();\n                });\n            },\n\n            selectItem: function (id, arrow) {\n                if (!id) {\n                    (arrow === 'up') && (this.ps_container[0].scrollTop = 0);\n                    return;\n                }\n                this.clearSearchSelection();\n                let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n                if ($selection.length) {\n                    this.selection_id = id;\n                } else {\n                    this.ps_container[0].scrollTop = 0;\n                    $selection = this.$('.list-item:visible').first();\n                    this.selection_id = $selection.data('id');\n                }\n                if ($selection.length && arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n                || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop < this.ps_container[0].scrollTop))\n                    this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n                if ($selection.length && arrow === 'up' && ($selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop <= this.ps_container[0].scrollTop\n                || $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n                    this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n                $selection.addClass('selected');\n            },\n\n            onEnterPressed: function (selection) {\n                let view;\n                if (selection.closest('.searched-lists-wrap').length) {\n                    this.clearSearch();\n                    this.$('.list-item.active').removeClass('active');\n                    if (selection.hasClass('chat-item')) {\n                        view = xabber.chats_view.child(selection.data('id'));\n                        view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                        selection.addClass('active');\n                    }\n                    if (selection.hasClass('roster-contact')) {\n                        view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                        view && (view = view.item_view);\n                        view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                        selection.addClass('active');\n                    }\n                    if (selection.hasClass('message-item')) {\n                        selection.click();\n                    }\n                }\n                else {\n                    let contact = this.getContactForItem(selection);\n                    contact && contact.showDetails();\n                }\n            },\n\n            onListChanged: function () {\n                this.updateSearch();\n            }\n        });\n\n        xabber.RosterSettingsView = xabber.BasicView.extend({\n            className: 'roster-settings-wrap',\n            template: templates.roster_settings,\n\n            events: {\n                \"change .offline-contacts input\": \"setOfflineSetting\",\n                \"change .sorting-contacts input\": \"setSortingSetting\"\n            },\n\n            _initialize: function () {\n                this.$el.appendTo(this.parent.$('.settings-subblock-wrap.contact-list'));\n            },\n\n            render: function () {\n                this.$('.offline-contacts input[type=radio][name=offline-contacts][value='+\n                    (this.model.get('show_offline'))+']').prop('checked', true);\n                this.$('.sorting-contacts input[type=radio][name=sorting-contacts][value='+\n                    (this.model.get('sorting'))+']').prop('checked', true);\n            },\n\n            setOfflineSetting: function () {\n                this.model.save('show_offline',\n                    this.$('.offline-contacts input[type=radio][name=offline-contacts]:checked').val());\n            },\n\n            setSortingSetting: function () {\n                this.model.save('sorting',\n                    this.$('.sorting-contacts input[type=radio][name=sorting-contacts]:checked').val());\n            }\n        });\n\n        xabber.AccountGroupView = xabber.BasicView.extend({\n            className: 'group',\n            template: function () {\n                this.$el.append('<div class=\"group-name one-line\"/><span class=\"group-members-count\"/>');\n            },\n\n            events: {\n                \"click\": \"showGroupSettings\"\n            },\n\n            _initialize: function (options) {\n                this.$('.group-name').text(this.model.get('name'));\n                this.$('.group-members-count').text(this.model.get('counter').all);\n                let index = this.model.collection.indexOf(this.model),\n                    $parent_el = this.model.account.settings_right.$('.groups');\n                if (index === 0) {\n                    $parent_el.prepend(this.$el);\n                } else {\n                    $parent_el.children().eq(index - 1).after(this.$el);\n                }\n                this.model.on(\"destroy\", this.remove, this);\n            },\n\n            showGroupSettings: function () {\n                this.model.showSettings();\n            }\n        });\n\n        xabber.ContactPlaceholderView = xabber.BasicView.extend({\n            className: 'placeholder-wrap contact-placeholder-wrap noselect',\n            template: templates.contact_placeholder\n        });\n\n        xabber.AddContactView = xabber.BasicView.extend({\n            className: 'modal main-modal add-contact-modal',\n            template: templates.add_contact,\n            avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n            events: {\n                \"click .dropdown-content#select-account-for-add-contact\": \"selectAccount\",\n                \"click .existing-group-field label\": \"editGroup\",\n                \"change .new-group-name input\": \"checkNewGroup\",\n                \"keyup .new-group-name input\": \"checkNewGroup\",\n                \"keyup .name-field #new_contact_username\": \"checkJid\",\n                \"focusout .name-field #new_contact_username\": \"focusoutInputField\",\n                \"focusout .new-group-name #new-group-name\": \"addNewGroup\",\n                \"click .btn-add\": \"stepForward\",\n                \"click .btn-cancel\": \"close\"\n            },\n\n            _initialize: function () {\n                this.group_data = new Backbone.Model;\n                this.group_data.on(\"change\", this.updateGroups, this);\n            },\n\n            render: function (options) {\n                if (!xabber.accounts.connected.length) {\n                    utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n                    return;\n                }\n                options || (options = {});\n                let accounts = options.account ? [options.account] : xabber.accounts.connected,\n                    jid = options.jid || '';\n                this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n                    .removeClass('invalid');\n                this.$('.single-acc').showIf(accounts.length === 1);\n                this.$('.multiple-acc').hideIf(accounts.length === 1);\n                this.$('.dropdown-content#select-account-for-add-contact').empty();\n                _.each(accounts, (account) => {\n                    this.$('.dropdown-content#select-account-for-add-contact').append(\n                        this.renderAccountItem(account));\n                });\n                this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n                this.bindAccount(accounts[0]);\n                this.$('span.errors').text('');\n                this.$el.openModal({\n                    ready: () => {\n                        Materialize.updateTextFields();\n                        this.$('.account-dropdown-wrap').dropdown({\n                            inDuration: 100,\n                            outDuration: 100,\n                            constrainWidth: false,\n                            hover: false,\n                            alignment: 'left'\n                        });\n                        this.$('input[name=\"username\"]').focus();\n                    },\n                    complete: this.close.bind(this)\n                });\n                return this;\n            },\n\n            bindAccount: function (account) {\n                this.account = account;\n                this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n                    .replaceWith(this.renderAccountItem(account));\n                this.renderGroupsForAccount(account);\n            },\n\n            stepForward: function () {\n                let jid = this.$('input[name=username]').val().trim();\n                this.$el.append($(templates.preloader()))\n                this.$('.btn-add').addClass('hidden-disabled')\n                this.$('input[name=contact_name]').val('');\n                if (this.account.connection && this.account.connection.connected) {\n                    this.account.getConnectionForIQ().vcard.get(jid, (vcard) => {\n                            let username = vcard.username ? vcard.username : vcard.fullname ? vcard.fullname : ''\n                            username && this.$('input[name=contact_name]').val(username);\n                            this.$('.preloader-wrapper').remove();\n                            this.$('.btn-add').removeClass('hidden-disabled');\n                            this.addContact()\n                        },\n                        (err) => {\n                            this.$('.preloader-wrapper').remove();\n                            this.$('.btn-add').removeClass('hidden-disabled');\n                            this.$('input[name=username]').addClass('invalid')\n                                .siblings('.errors').text($(err).find('error text').text());\n                        });\n                }\n            },\n\n            renderAccountItem: function (account) {\n                let $item = $(templates.add_contact_account_item({jid: account.get('jid'), name: account.get('name')}));\n                $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n                return $item;\n            },\n\n            renderGroupsForAccount: function (account) {\n                this.group_data.set({\n                    selected: [],\n                    groups: _.map(account.groups.notSpecial(), function (group) {\n                        return group.get('name');\n                    })\n                }, {silent: true});\n                this.updateGroups();\n            },\n\n            updateGroups: function () {\n                let selected = this.group_data.get('selected');\n                this.$('.groups').html(templates.groups_checkbox_list_contact({\n                    groups: _.map(this.group_data.get('groups'), function (name) {\n                        return { name: name, id: uuid(), checked: _.contains(selected, name) };\n                    })\n                }));\n            },\n\n            selectAccount: function (ev) {\n                let $item = $(ev.target).closest('.account-item-wrap'),\n                    account = xabber.accounts.get($item.data('jid'));\n                this.bindAccount(account);\n            },\n\n            editGroup: function (ev) {\n                ev.preventDefault();\n                let $target = $(ev.target),\n                    $input = $target.siblings('input'),\n                    checked = !$input.prop('checked'),\n                    group_name = $input.attr('data-groupname'),\n                    selected = _.clone(this.group_data.get('selected')),\n                    idx = selected.indexOf(group_name);\n                $input.prop('checked', checked);\n                if (checked) {\n                    idx < 0 && selected.push(group_name);\n                } else if (idx >= 0) {\n                    selected.splice(idx, 1);\n                }\n                this.group_data.set('selected', selected);\n            },\n\n            checkNewGroup: function (ev) {\n                let name = $(ev.target).val(),\n                    $checkbox = this.$('.new-group-checkbox #new_group_checkbox');\n                $checkbox.prop('disabled', !(name && !_.contains(this.group_data.get('groups'), name)));\n                if (ev.keyCode === constants.KEY_ENTER)\n                    this.addNewGroup();\n            },\n\n            addNewGroup: function (ev) {\n                ev && ev.preventDefault();\n                if (this.$('.new-group-checkbox #new_group_checkbox').prop('disabled'))\n                    return;\n                let $input = this.$('.new-group-name input'),\n                    name = $input.val(),\n                    groups = _.clone(this.group_data.get('groups')),\n                    idx = groups.indexOf(name);\n                if (idx < 0) {\n                    let selected = _.clone(this.group_data.get('selected'));\n                    selected.push(name);\n                    groups.push(name);\n                    this.group_data.set({groups: groups, selected: selected});\n                }\n            },\n\n            focusoutInputField: function () {\n                if (!this.$('input[name=username]').val().trim()) {\n                    this.$('input[name=username]').removeClass('invalid');\n                    this.$('span.errors').text('').addClass('hidden');\n                }\n            },\n\n            checkJid: function (ev) {\n                let jid = this.$('input[name=username]').val().trim(),\n                    error_text,\n                    regexp_full_jid = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))|(([0-9]{1,3}\\.){3}[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                if (!regexp_full_jid.test(jid) && jid) {\n                    error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n                }\n                if (error_text) {\n                    this.$('input[name=username]').addClass('invalid')\n                        .siblings('.errors').text(error_text);\n                }\n                else {\n                    this.$('input[name=username]').removeClass('invalid');\n                    this.$('span.errors').text('').addClass('hidden');\n                    if (ev.keyCode === constants.KEY_ENTER)\n                        this.stepForward();\n                }\n            },\n\n            addContact: function () {\n                this.$('span.errors').text('').addClass('hidden');\n                let jid = this.$('input[name=username]').removeClass('invalid').val().trim(),\n                    name = this.$('input[name=contact_name]').removeClass('invalid').val(),\n                    groups = this.group_data.get('selected'),\n                    contact, error_text,\n                    regexp = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                if (jid)\n                    jid = jid.toLowerCase()\n                jid = Strophe.getBareJidFromJid(jid);\n                if (!jid) {\n                    error_text = xabber.getString(\"dialog_add_contact__error__text_input_username\");\n                } else if (jid === this.account.get('jid')) {\n                    error_text = xabber.getString(\"dialog_add_contact__error__text_can_not_add_youself\");\n                } else if (!regexp.test(jid)) {\n                    error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n                }\n                else {\n                    contact = this.account.contacts.mergeContact(jid);\n                    if (contact.get('in_roster')) {\n                        error_text = xabber.getString(\"dialog_add_contact__error__text_already_in_roster\");\n                    }\n                }\n                if (error_text) {\n                    this.$('input[name=username]').addClass('invalid')\n                        .siblings('.errors').text(error_text);\n                } else {\n                    !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && contact.set('subscription_preapproved', true);\n                    contact.pres('subscribed');\n                    contact.pushInRoster({name: name, groups: groups}, () => {\n                        contact.pres('subscribe');\n                        contact.trigger('presence', contact, 'subscribe_from');\n                        contact.trigger(\"open_chat\", contact);\n                    }, function () {\n                        contact.destroy();\n                    });\n                    this.close();\n                }\n            },\n\n            onHide: function () {\n                this.$el.detach();\n            },\n\n            close: function () {\n                this.$el.closeModal({ complete: this.hide.bind(this) });\n            }\n        });\n\n        xabber.GroupSettings = Backbone.Model.extend({\n            idAttribute: 'name',\n            defaults: {\n                expanded: true,\n                show_offline: 'default',\n                sorting: 'default',\n                custom_notifications: false,\n                notifications: false,\n                message_preview: false\n            }\n        });\n\n        xabber.GroupsSettings = Backbone.CollectionWithStorage.extend({\n            model: xabber.GroupSettings,\n\n            _initialize: function (models, options) {\n                this.account = options.account;\n                this.account.on(\"destroy\", this.clearStorage, this);\n                this.fetch();\n            }\n        });\n\n        xabber.RosterSettings = Backbone.ModelWithStorage.extend({\n\n            defaults: function () {\n                let general_group_name = xabber.getString(\"circles__name_general_circle\"),\n                    non_roster_group_name = xabber.getString(\"circles__name_non_roster_circle\");\n                return {\n                    pinned: false,\n                    show_offline: 'yes',\n                    sorting: 'online-first',\n                    general_group_name,\n                    non_roster_group_name\n                };\n            }\n        });\n\n        xabber.CachedRoster = Backbone.ModelWithDataBase.extend({\n            putInRoster: function (value, callback) {\n                this.database.put('roster_items', value, function (response_value) {\n                    callback && callback(response_value);\n                });\n            },\n\n            getFromRoster: function (value, callback) {\n                this.database.get('roster_items', value, function (response_value) {\n                    callback && callback(response_value);\n                });\n            },\n\n            getAllFromRoster: function (callback) {\n                this.database.get_all('roster_items', null, function (response_value) {\n                    callback && callback(response_value || []);\n                });\n            },\n\n            removeFromRoster: function (value, callback) {\n                this.database.remove('roster_items', value, function (response_value) {\n                    callback && callback(response_value);\n                });\n            },\n\n            clearDataBase: function () {\n                this.database.clear_database('roster_items');\n            }\n        });\n\n        xabber.CachedSyncСonversations = Backbone.ModelWithDataBase.extend({\n            putInCachedConversations: function (value, callback) {\n                this.database.put('conversation_items', value, function (response_value) {\n                    callback && callback(response_value);\n                });\n            },\n\n            getFromCachedConversations: function (value, callback) {\n                this.database.get('conversation_items', value, function (response_value) {\n                    callback && callback(response_value);\n                });\n            },\n\n            getAllFromCachedConversations: function (callback) {\n                this.database.get_all('conversation_items', null, function (response_value) {\n                    callback && callback(response_value || []);\n                });\n            },\n\n            removeFromCachedConversations: function (value, callback) {\n                this.database.remove('conversation_items', value, function (response_value) {\n                    callback && callback(response_value);\n                });\n            },\n\n            clearDataBase: function () {\n                this.database.clear_database('conversation_items');\n            }\n        });\n\n        xabber.CachedServerFeatures = Backbone.ModelWithDataBase.extend({\n            putInCachedFeatures: function (value, callback) {\n                this.database.put('server_features_items', value, function (response_value) {\n                    callback && callback(response_value);\n                });\n            },\n\n            getFromCachedFeatures: function (value, callback) {\n                this.database.get('server_features_items', value, function (response_value) {\n                    callback && callback(response_value);\n                });\n            },\n\n            getAllFromCachedFeatures: function (callback) {\n                this.database.get_all('server_features_items', null, function (response_value) {\n                    callback && callback(response_value || []);\n                });\n            },\n\n            removeFromCachedFeatures: function (value, callback) {\n                this.database.remove('server_features_items', value, function (response_value) {\n                    callback && callback(response_value);\n                });\n            },\n\n            clearDataBase: function () {\n                this.database.clear_database('server_features_items');\n            }\n        });\n\n        xabber.Account.addInitPlugin(function () {\n            this.groups_settings = new xabber.GroupsSettings(null, {\n                account: this,\n                storage_name: xabber.getStorageName() + '-groups-settings-' + this.get('jid')\n            });\n            this.cached_roster = new xabber.CachedRoster(null, {\n                name:'cached-roster-list-' + this.get('jid'),\n                objStoreName: 'roster_items',\n                primKey: 'jid'\n            });\n            this.cached_sync_conversations = new xabber.CachedSyncСonversations(null, {\n                name:'cached-conversation-list-' + this.get('jid'),\n                objStoreName: 'conversation_items',\n                primKey: 'account_conversation_type'\n            });\n            this.cached_server_features = new xabber.CachedServerFeatures(null, {\n                name:'cached-features-list-' + this.get('jid'),\n                objStoreName: 'server_features_items',\n                primKey: 'var'\n            });\n\n            this.groupchat_settings = new xabber.GroupChatSettings({id: 'group-chat-settings'}, {\n                account: this,\n                storage_name: xabber.getStorageName() + '-group-chat-settings-' + this.get('jid'),\n                fetch: 'after'\n            });\n            this.groups = new xabber.Groups(null, {account: this});\n            this.contacts = new xabber.Contacts(null, {account: this});\n            this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this}));\n            this.blocklist = new xabber.BlockList(null, {account: this});\n\n            this._added_pres_handlers.push(this.contacts.handlePresence.bind(this.contacts));\n\n            this.on(\"ready_to_get_roster\", function () {\n                this.resources.reset();\n                this.contacts.each(function (contact) {\n                    contact.resources.reset();\n                    contact.resetStatus();\n                });\n                this.cached_roster.getAllFromRoster((roster_items) => {\n                    $(roster_items).each((idx, roster_item) => {\n                        this.contacts.mergeContact(roster_item);\n                    });\n                    if (this.connection && this.connection.do_synchronization && xabber.chats_view) {\n                        let options = {},\n                            last_sync_timestamp = this.settings && this.settings.get('last_sync_timestamp') ? this.settings.get('last_sync_timestamp') : null\n                        !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                        last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                        this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                    }\n                    else {\n                        this.roster.getRoster();\n                    }\n                    this.blocklist.getFromServer();\n                });\n            }, this);\n        });\n\n        xabber.Account.addConnPlugin(function () {\n            this.registerIQHandler();\n            this.registerSyncedIQHandler();\n            this.roster.registerHandler();\n            this.blocklist.registerHandler();\n        }, true, true);\n\n        xabber.once(\"start\", function () {\n            this._roster_settings = new this.RosterSettings({id: 'roster-settings'},\n                {storage_name: this.getStorageName(), fetch: 'after'});\n            this.settings.roster = this._roster_settings.attributes;\n            this.roster_settings_view = xabber.settings_view.addChild(\n                'roster_settings', this.RosterSettingsView, {model: this._roster_settings});\n            this.contacts_view = this.left_panel.addChild('contacts', this.RosterLeftView,\n                {model: this.accounts});\n            this.roster_view = this.body.addChild('roster', this.RosterRightView,\n                {model: this.accounts});\n            this.contact_container = this.right_panel.addChild('details', this.Container);\n            this.details_container = this.right_contact_panel.addChild('details', this.Container);\n            this.contact_placeholder = this.right_contact_panel.addChild('contact_placeholder',\n                this.ContactPlaceholderView);\n            this.add_contact_view = new this.AddContactView();\n            this.on(\"add_contact\", function () {\n                this.add_contact_view.show();\n            }, this);\n        }, xabber);\n\n        return xabber;\n    };\n});\n","(function (root, factory) {\n    define(\"xabber-core\", [\"xabber-environment\"], function (env) {\n        return factory(env);\n    });\n}(this, function (env) {\n    let constants = env.constants,\n        _ = env._,\n        $ = env.$,\n        xabber_i18next = env.xabber_i18next,\n        xabber_i18next_sprintf = env.xabber_i18next_sprintf,\n        uuid = env.uuid,\n        utils = env.utils,\n        bc = new BroadcastChannel(\"xabber-web\");\n\n    bc.onmessage = (event) => {\n        if (event.data === `1` && !bc.disabled_client) {\n            bc.postMessage(`2`);\n        }\n        if (event.data === `2`) {\n            bc.disabled_client = true\n        }\n    };\n\n    bc.postMessage(`1`);\n\n    let Xabber = Backbone.Model.extend({\n        defaults: {\n            version_number: env.version_number,\n            actual_version_number: env.version_number,\n            audio: false,\n            video: false,\n            client_id: uuid().substring(0, 8),\n            client_name: 'Xabber for Web'\n        },\n\n        initialize: function () {\n            this.env = env;\n            this.fetchURLParams();\n            this.cleanUpStorage();\n            this.initDefaultLanguage();\n            this.detectMediaDevices();\n            window.navigator.mediaDevices && (window.navigator.mediaDevices.ondevicechange = this.detectMediaDevices.bind(this));\n            this._settings = new this.Settings({id: 'settings'},\n                    {storage_name: this.getStorageName(), fetch: 'before'});\n            this.settings = this._settings.attributes;\n            let url = window.location.host + window.location.pathname.replace(/\\//g, \"-\");\n            if (url[url.length - 1] == \"-\")\n                url.slice(0, url.length - 1);\n            this._cache = new Backbone.ModelWithStorage({id: `cache-${url}`},\n                    {storage_name: this.getStorageName(), fetch: 'before'});\n            this.cache = this._cache.attributes;\n            this.cache.client_id && (this.set('client_id', this.cache.client_id));\n            this._cache.save('client_id', this.get('client_id'));\n            this.cacheFavicons();\n            this.extendFunction();\n            this.check_config = new $.Deferred();\n            this.plyr_players = [];\n            this.current_plyr_player = null;\n            this.on(\"change:actual_version_number\", this.throwNewVersion, this);\n            this.on(\"quit\", this.onQuit, this);\n            this._version_interval = setInterval(this.readActualVersion.bind(this), 600000);\n        },\n\n        initDefaultLanguage: function () {\n            let lang = window.navigator.language,\n                progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n            if (progress != 100)\n                lang = 'en';\n            this.set(\"default_language\", lang);\n        },\n\n        loadTranslations: async function (lang) {\n            return new Promise((resolve, reject) => {\n                let language = {};\n                language.lang = lang;\n                !language.lang && (language.lang = this.settings.language);\n                if (language.lang == 'default' && this.default_translation) {\n                    language.lang = this.get(\"default_language\");\n                    language.translation  = this.default_translation;\n                    resolve(language);\n                    return;\n                }\n                import(`~/translations/${language.lang.replace(/-/g, \"-r\")}.js`).then(translation => {\n                    language.translation  = translation;\n                    resolve(language)\n                });\n            });\n        },\n\n        setLocale: function (lang, translations) {\n            let default_lang = this.get(\"default_language\"),\n                _translations = {\n                    [default_lang]: {\n                        translation: this.default_translation\n                    }\n                };\n            lang && (_translations[lang] = {translation: translations});\n            xabber_i18next.use(xabber_i18next_sprintf);\n            xabber_i18next.init({\n                lng: default_lang,\n                debug: false,\n                pluralSeparator: '-',\n                resources: _translations\n            });\n            if (lang) {\n                xabber_i18next.changeLanguage(lang);\n                moment.locale(lang);\n            }\n            xabber_i18next.default_lang = xabber_i18next.getFixedT(default_lang);\n        },\n        getOneLiners: function () {\n            if (xabber_i18next.exists(\"motivating_oneliner\")) {\n                return xabber_i18next.t(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n            } else if (xabber_i18next.default_lang) {\n                return xabber_i18next.default_lang(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n            } else\n                return [];\n        },\n        getString: function (id, params) {\n            if (xabber_i18next.exists(id)) {\n                return xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n            } else if (xabber_i18next.default_lang) {\n                return xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n            } else\n                return \"\";\n        },\n\n        getQuantityString: function (id, count, params) {\n            let lang = xabber_i18next.language,\n                plurals = xabber_i18next.services.pluralResolver.getRule(lang);\n            if (!plurals)\n                return this.getString(`${id}_plural_0`, (params || [count]));\n            let _count = parseInt(count, 10);\n            xabber_i18next.services.pluralResolver.options.compatibilityJSON = 'v0';\n            let suffix = xabber_i18next.services.pluralResolver.getSuffix(lang, _count);\n            suffix = suffix.replace(/-/g, \"_\");\n            if (xabber_i18next.language == 'en' || !xabber_i18next.exists(`${id}_plural${suffix}`)) {\n                suffix = xabber_i18next.services.pluralResolver.getSuffix(\"en\", _count);\n                if (!suffix || suffix && !suffix.length)\n                    suffix = '_0';\n                else\n                    suffix = '_1';\n            }\n            return this.getString(`${id}_plural${suffix}`, (params || [count]));\n        },\n\n        error: function (msg) {\n            if (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR) {\n                console.error(msg);\n            }\n        },\n\n        warn: function (msg) {\n            if (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN) {\n                console.warn(msg);\n            }\n        },\n\n        info: function (msg) {\n            if (constants.LOG_LEVEL >= constants.LOG_LEVEL_INFO) {\n                console.log(msg);\n            }\n        },\n\n        debug: function (msg) {\n            if (constants.LOG_LEVEL >= constants.LOG_LEVEL_DEBUG) {\n                console.log(msg);\n            }\n        },\n\n        pretty_last_seen: function (seconds) {\n            if (seconds >= 0 && seconds <= 120)\n                return this.getString(\"last_seen_now\");\n            if (seconds > 120 && seconds < 3600)\n                return this.getString(\"last_seen_minutes\", [Math.trunc(seconds/60)]);\n            if (seconds >= 3600 && seconds < 7200)\n                return this.getString(\"last_seen_hours\");\n            if (seconds >= 3600*48*2)\n                return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').format('LL')]);\n            else\n                return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').calendar().toLowerCase()]);\n        },\n\n        readActualVersion: function () {\n            if (!constants.CHECK_VERSION)\n                return;\n            // get version.js file from server and parse it\n            let rawFile = new XMLHttpRequest();\n            rawFile.open(\"GET\", \"version.js?\"+uuid(), true);\n            rawFile.onreadystatechange = () => {\n                if (rawFile.readyState === 4 && rawFile.status === 200) {\n                    let text, json;\n                    rawFile.onreadystatechange = null;\n                    try {\n                        text = rawFile.responseText;\n                        json = JSON.parse(text.split('\\n')[1].slice(1, -1));\n                    } catch (e) {\n                        return;\n                    }\n                    this.set({\n                        actual_version_number: json.version_number,\n                        version_description: json.version_description\n                    });\n                }\n            };\n            rawFile.send();\n        },\n\n        extendFunction: function () {\n            if (!String.prototype.trimStart) {\n                String.prototype.trimStart = function () {\n                    return this.replace(/^\\s+/, '');\n                }\n            }\n            if (!String.prototype.trimEnd) {\n                String.prototype.trimEnd = function () {\n                    return Array.from(Array.from(this).reverse().join(\"\").trimStart(/\\s$/, '')).reverse().join(\"\");\n                }\n            }\n        },\n\n        onQuit: function () {\n            if (window.indexedDB.databases) {\n                window.indexedDB.databases().then((a) => {\n                    a.forEach((db) => {\n                        window.indexedDB.deleteDatabase(db.name)\n                    });\n                });\n            } else {\n                this.accounts.forEach((acc) => {\n                    indexedDB.deleteDatabase(acc.cached_roster.database.name);\n                    indexedDB.deleteDatabase(acc.cached_sync_conversations.database.name);\n                });\n            }\n            let full_storage_name = xabber.getStorageName();\n            for (let key in window.localStorage) {\n                if (key.startsWith(full_storage_name) || key.startsWith(constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION + '-' + this.cache.id)) {\n                    window.localStorage.removeItem(key);\n                }\n            }\n        },\n\n        cacheFavicons: async function () {\n            this._cache.save('favicon', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT).then(r => r.blob())));\n            this._cache.save('favicon_message', URL.createObjectURL(await fetch(constants.FAVICON_MESSAGE).then(r => r.blob())));\n        },\n\n        detectMediaDevices: function () {\n            this.getMediaDevices((media_devices) => {\n                this.set(media_devices);\n            });\n        },\n\n        getMediaDevices: function (callback, errback) {\n            if (window.navigator && window.navigator.mediaDevices) {\n                window.navigator.mediaDevices.enumerateDevices()\n                    .then((devices) => {\n                        let media_devices = {audio: false, video: false};\n                        (devices.find(device => device.kind === 'audioinput')) && (media_devices.audio = true);\n                        (devices.find(device => device.kind === 'videoinput')) && (media_devices.video = true);\n                        callback && callback(media_devices);\n                    })\n                    .catch((err) => {\n                        errback && errback(err);\n                    });\n            }\n        },\n\n        throwNewVersion: function () {\n            if (!constants.CHECK_VERSION)\n                return;\n            let version_number = this.get('actual_version_number'),\n                version_description = this.get('version_description');\n            utils.dialogs.common(this.getString(\"dialog_version_update__header\", [constants.CLIENT_NAME]), `${this.getString(\"dialog_version_update__confirm_text__new_version\", [version_number])}<div class=\"new-version-description\">${version_description}</div>${this.getString(\"dialog_version_update__confirm_text__question_reload_page\")}`,\n                {ok_button: {text: this.getString(\"dialog_version_update__button_reload\")}, cancel_button: {text: this.getString(\"dialog_version_update__option_not_now\")}}\n            ).done((result) => {\n                if (result) {\n                    window.location.reload(true);\n                }\n            });\n        },\n\n        Settings: Backbone.ModelWithStorage.extend({\n            defaults: {\n                max_connection_retries: -1,\n                notifications: true,\n                notifications_private: true,\n                notifications_group: true,\n                notifications_volume: 0.50,\n                message_preview_private: false,\n                message_preview_group: false,\n                private_sound: true,\n                group_sound: true,\n                background: {type: 'default'},\n                side_panel: {theme: 'dark', blur: false, transparency: 50},\n                appearance: {blur: 0, vignetting: 0, color: '#E0E0E0'},\n                main_color: 'default',\n                sound_on_private_message: 'beep_up',\n                sound_on_group_message: 'beep_up',\n                call_attention: true,\n                load_media: 'default',\n                typing_notifications: 'default',\n                mapping_service: 'default',\n                sound_on_call: 'call',\n                sound_on_dialtone: 'call',\n                sound_on_connection: 'connecting',\n                sound_on_attention: 'attention',\n                sound_on_auth_request: 'beep_a',\n                hotkeys: 'enter',\n                avatar_shape: 'circle',\n                language: 'default',\n                load_history: true,\n                mam_requests_limit: 200,\n                mam_messages_limit_start: 1,\n                mam_messages_limit: 20,\n                ping_interval: 60,\n                reconnect_interval: 90\n            }\n        }),\n\n        start: function () {\n            this.check_config.done((result) => {\n                this.check_config = undefined;\n                result && this.trigger('start');\n            });\n        },\n\n        configure: function (config) {\n            this.loadTranslations(this.get('default_language')).then((language) => {\n                this.default_translation = language.translation ;\n                return this.loadTranslations();}).then((language) => {\n                    this.setLocale(language.lang, language.translation);\n                _.extend(constants, _.pick(config, [\n                    'CONNECTION_URL',\n                    'PERSONAL_AREA_URL',\n                    'LOG_LEVEL',\n                    'SYNCHRONIZATION_RSM_MAX',\n                    'XABBER_ACCOUNT_URL',\n                    'REGISTER_XMPP_ACCOUNT',\n                    'REGISTER_XMPP_ACCOUNT_URL',\n                    'REGISTER_XMPP_ACCOUNT_TEXT',\n                    'API_SERVICE_URL',\n                    'USE_SOCIAL_AUTH',\n                    'CONTAINER',\n                    'CHECK_VERSION',\n                    'DEFAULT_LOGIN_SCREEN',\n                    'STORAGE_NAME_ENDING',\n                    'CLIENT_NAME',\n                    'SHORT_CLIENT_NAME',\n                    'CLIENT_LOGO',\n                    'TOOLBAR_LOGO',\n                    'ENABLE_XABBER_ACCOUNT',\n                    'SCREEN_ABOUT',\n                    'DISABLE_LOOKUP_WS',\n                    'PRIVACY_LOAD_MEDIA',\n                    'PRIVACY_TYPING_NOTIFICATIONS',\n                    'PRIVACY_MAPPING_SERVICE',\n                ]));\n\n                let log_level = constants['LOG_LEVEL_'+constants.LOG_LEVEL];\n                constants.LOG_LEVEL = log_level || constants.LOG_LEVEL_ERROR;\n                constants.MATERIAL_COLORS.includes(config.MAIN_COLOR) && (constants.MAIN_COLOR = config.MAIN_COLOR);\n                (this._settings.get(\"main_color\") == 'default') && this._settings.set(\"main_color\", constants.MAIN_COLOR);\n                this.trigger(\"update_main_color\");\n                if (this._settings.get(\"load_media\") === 'default' && config.PRIVACY_LOAD_MEDIA != null)\n                    this._settings.set(\"load_media\", config.PRIVACY_LOAD_MEDIA);\n                else if (this._settings.get(\"load_media\") === 'default')\n                    this._settings.set(\"load_media\", true);\n                if (this._settings.get(\"typing_notifications\") === 'default' && config.PRIVACY_TYPING_NOTIFICATIONS != null)\n                    this._settings.set(\"typing_notifications\", config.PRIVACY_TYPING_NOTIFICATIONS);\n                else if (this._settings.get(\"typing_notifications\") === 'default')\n                    this._settings.set(\"typing_notifications\", true);\n                if (this._settings.get(\"mapping_service\") === 'default' && config.PRIVACY_MAPPING_SERVICE != null)\n                    this._settings.set(\"mapping_service\", config.PRIVACY_MAPPING_SERVICE);\n                else if (this._settings.get(\"mapping_service\") === 'default')\n                    this._settings.set(\"mapping_service\", true);\n\n                window.xabber = this;\n                _.extend(window, env);\n                if (config.SYNCHRONIZATION_RSM_MAX)\n                    constants.SYNCHRONIZATION_RSM_MAX = config.SYNCHRONIZATION_RSM_MAX;\n                if (config.REGISTRATION_DOMAINS)\n                    constants.REGISTRATION_DOMAINS = config.REGISTRATION_DOMAINS;\n                if (config.LOGIN_DOMAINS)\n                    constants.LOGIN_DOMAINS = config.LOGIN_DOMAINS;\n                if (config.TRUSTED_DOMAINS)\n                    constants.TRUSTED_DOMAINS = config.TRUSTED_DOMAINS;\n                if (config.RECOMMENDED_DOMAIN)\n                    constants.RECOMMENDED_DOMAIN = config.RECOMMENDED_DOMAIN;\n                if (config.REGISTRATION_BUTTON != null)\n                    constants.REGISTRATION_BUTTON = config.REGISTRATION_BUTTON;\n                if (config.REGISTRATION_CUSTOM_DOMAIN != null)\n                    constants.REGISTRATION_CUSTOM_DOMAIN = config.REGISTRATION_CUSTOM_DOMAIN;\n                if (config.LOGIN_CUSTOM_DOMAIN != null)\n                    constants.LOGIN_CUSTOM_DOMAIN = config.LOGIN_CUSTOM_DOMAIN;\n                if (config.SHORT_CLIENT_DESCRIPTION)\n                    constants.SHORT_CLIENT_DESCRIPTION = config.SHORT_CLIENT_DESCRIPTION;\n\n                if (config.CLIENT_NAME && !config.SHORT_CLIENT_NAME)\n                    constants.SHORT_CLIENT_NAME = config.CLIENT_NAME;\n                else if (!config.CLIENT_NAME && config.SHORT_CLIENT_NAME)\n                    constants.CLIENT_NAME = config.SHORT_CLIENT_NAME;\n\n                if (config.TURN_SERVERS_LIST) {\n                    if (_.isArray(config.TURN_SERVERS_LIST))\n                        _.extend(constants, {TURN_SERVERS_LIST: config.TURN_SERVERS_LIST});\n                    else if (_.isObject(config.TURN_SERVERS_LIST) && Object.keys(config.TURN_SERVERS_LIST).length)\n                        _.extend(constants, {TURN_SERVERS_LIST: [config.TURN_SERVERS_LIST]});\n                }\n\n                if (utils.isMobile.any()) {\n                    let ios_msg = this.getString(\"warning__client_not_support_ios_browser\", [constants.CLIENT_NAME]),\n                        android_msg = this.getString(\"warning__client_not_support_android_browser\"),\n                        any_mobile_msg = this.getString(\"warning__client_not_support_mobile\", [constants.CLIENT_NAME]),\n                        msg;\n                    if (utils.isMobile.iOS()) {\n                        msg = ios_msg;\n                    } else if (utils.isMobile.Android()) {\n                        msg = any_mobile_msg + android_msg;\n                    } else {\n                        msg = any_mobile_msg;\n                    }\n                    utils.dialogs.error(msg);\n                    this.check_config.resolve(false);\n                    return;\n                }\n                if (!constants.CONNECTION_URL) {\n                    utils.dialogs.error(this.getString(\"client_error__missing_connection_url\"));\n                    this.check_config.resolve(false);\n                    return;\n                }\n                if (bc.disabled_client){\n                    utils.dialogs.error(this.getString(\"client_error__another_tab_active\"));\n                    this.check_config.resolve(false);\n                    return;\n                }\n\n                let self = this;\n                if (!Backbone.useLocalStorage && !this.cache.ignore_localstorage_warning) {\n                    utils.dialogs.warning(this.getString(\"client_warning__no_local_storage\"),\n                        [{name: this.getString(\"ignore\"), text: this.getString(\"client_error__option_show_msg_again\")}]\n                    ).done(function (res) {\n                        res && res.ignore && self._cache.save('ignore_localstorage_warning', true);\n                    });\n                }\n\n                this.requestNotifications().done(function (granted) {\n                    self._cache.save('notifications', granted);\n                    self._cache.save('endpoint_key', undefined);\n                    self.check_config.resolve(true);\n                });\n            });\n        },\n\n        fetchURLParams: function () {\n            let splitted_url = window.location.href.split(/[?#]/),\n                splitted_url_anchor = window.location.href.split('#');\n            this.url_params = {};\n            if (splitted_url.length > 1) {\n                let idx, param, params = splitted_url[1].split('&');\n                for (idx = 0; idx < params.length; idx++) {\n                    param = params[idx].split('=');\n                    if (param.length === 1) {\n                        this.url_params[param[0]] = null;\n                    } else {\n                        this.url_params[param[0]] = param[1];\n                    }\n                }\n            }\n            if (splitted_url_anchor.length > 1) {\n                this.url_params['anchor'] = splitted_url[1];\n            }\n            window.history.pushState(null, null, window.location.pathname);\n        },\n\n        getStorageName: function () {\n            let name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n            if (constants.STORAGE_NAME_ENDING) {\n                name = name + '-' + constants.STORAGE_NAME_ENDING;\n            }\n            return name;\n        },\n\n        cleanUpStorage: function () {\n            let full_storage_name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n            for (let key in window.localStorage) {\n                if (key.startsWith('xabber') &&\n                        !key.startsWith(full_storage_name)) {\n                    window.localStorage.removeItem(key);\n                }\n            }\n        },\n\n        requestNotifications: function () {\n            let result = new $.Deferred(),\n                self = this;\n            if (!window.Notification) {\n                result.resolve(null);\n            } else if (window.Notification.permission === 'granted') {\n                result.resolve(true);\n            } else {\n                if (!self.cache.ignore_notifications_warning)\n                    self.notifications_placeholder = new self.NotificationsPlaceholder();\n                result.resolve(false);\n            }\n            return result.promise();\n        },\n\n        extendWith: function () {\n            return _.reduce(arguments, function (instance, module) {\n                return module(instance);\n            }, this);\n        }\n    });\n\n    return new Xabber();\n}));\n","// only external libs and plugins for them\ndefine([\n    \"backbone\",\n    \"underscore\",\n    \"jquery\",\n    \"moment\",\n    \"wavesurfer\",\n    \"slug\",\n    \"sha256\",\n    \"magnific-popup\",\n    \"i18next\",\n    \"i18next-post\",\n    \"strophe\",\n    \"Plyr\",\n    \"Quill\",\n    \"libsignal-protocol\",\n    \"strophe.disco\",\n    \"strophe.ping\",\n    \"strophe.rsm\",\n    \"strophe.caps\",\n    \"strophe.pubsub\",\n    \"omemo\",\n    \"backbone.localsync\",\n    \"sha1_hasher\",\n    \"materialize\",\n    \"qrcode\",\n    \"perfectScrollbarJQuery\"\n], function(Backbone, _, $, moment, WaveSurfer, slug, sha256, magnificPopup, i18next, i18next_sprintf, Strophe, plyr, Quill, libsignal) {\n    return _.extend({\n        $: $,\n        _: _,\n        ol: ol,\n        moment: moment,\n        WaveSurfer: WaveSurfer,\n        Plyr: plyr,\n        Quill: Quill,\n        libsignal: libsignal,\n        slug: slug,\n        xabber_i18next: i18next,\n        xabber_i18next_sprintf: i18next_sprintf,\n        sha256: sha256,\n        magnificPopup: magnificPopup,\n        Strophe: Strophe\n    }, Strophe);\n});\n","define(\"xabber-discovery\", function () {\n  return function (xabber) {\n    let env = xabber.env,\n        $ = env.$,\n        _ = env._,\n        moment = env.moment,\n        Strophe = env.Strophe,\n        $iq = env.$iq;\n\n    xabber.ClientFeature = Backbone.Model.extend({\n        idAttribute: 'namespace'\n    });\n\n    xabber.FeatureView = xabber.BasicView.extend({\n        className: 'client-feature',\n        template: function () {\n            this.$el.append('<div class=\"feature-name one-line\"/>')\n                    .append('<div class=\"supports\"/>');\n        },\n\n        _initialize: function () {\n            this.render();\n            this.$el.appendTo(this.model.collection.account.settings_right.$('.capabilities'));\n            this.model.on(\"change\", this.render, this);\n            this.model.on(\"destroy\", this.remove, this);\n        },\n\n        render: function () {\n            let name = this.model.get('verbose_name'),\n                supports = this.model.get('supports');\n            this.$('.feature-name').text(name);\n            this.$('.supports').text(supports ? xabber.getString(\"account_settings__server_info__status_available\") : xabber.getString(\"account_settings__server_info__status_unavailable\"))\n        }\n    });\n\n    xabber.ClientFeatures = Backbone.Collection.extend({\n        model: xabber.ClientFeature,\n\n        initialize: function (models, options) {\n            this.account = options.account;\n            this.account.on('render_settings', this.render, this);\n            this.connection = this.account.connection;\n            this.connection.disco.addIdentity(\n                'client',\n                'web',\n                xabber.get('client_name'),\n                'en'\n            );\n            this.addFeature(Strophe.NS.LAST, 'XEP-0012: Last Activity');\n            this.addFeature(Strophe.NS.VCARD, 'XEP-0054: vCard-temp');\n            this.addFeature(Strophe.NS.RSM, 'XEP-0059: Result Set Management');\n            this.connection.disco.addFeature(Strophe.NS.CHATSTATES);\n            this.addFeature(Strophe.NS.BLOCKING, 'XEP-0191: Blocking Command');\n            this.addFeature(Strophe.NS.PING, 'XEP-0199: XMPP Ping');\n            this.connection.disco.addFeature(Strophe.NS.ATTENTION, 'XEP-0244: Attention');\n            this.addFeature(Strophe.NS.CARBONS, 'XEP-0280: Message carbons');\n            this.addFeature(Strophe.NS.MAM, 'XEP-0313: Message archive management');\n            this.connection.disco.addFeature(Strophe.NS.CHAT_MARKERS);\n            this.connection.disco.addFeature(Strophe.NS.PUBSUB_AVATAR_METADATA + '+notify');\n            this.addFeature(Strophe.NS.HTTP_UPLOAD, 'XEP-0363: HTTP File Upload');\n            this.addFeature(Strophe.NS.SYNCHRONIZATION, 'XEP-SYNC: Client Synchronization');\n            this.addFeature(Strophe.NS.AUTH_DEVICES, 'XEP-DEVICES: HOTP and Device Management');\n            this.addFeature(Strophe.NS.GEOLOC, 'XEP-0080: User Location');\n            this.addFeature(Strophe.NS.PUBSUB, 'XEP-0060: Publish-Subscribe');\n            this.addFeature(Strophe.NS.ARCHIVE, 'XEP-ARCHIVED: Archived Chats');\n            this.addFeature(Strophe.NS.DELIVERY, 'XEP-DELIVERY: Reliable message delivery');\n            this.addFeature(Strophe.NS.GROUP_CHAT, 'XEP-GROUPS: Groups');\n            this.addFeature(Strophe.NS.REWRITE, 'XEP-RETRACT: Message Delete and Rewrite');\n            this.addFeature(Strophe.NS.REGISTER, 'XEP-0077: In-Band Registration');\n        },\n\n        addFeature: function (namespace, verbose_name) {\n            let feature = this.create({\n                namespace: namespace,\n                verbose_name: verbose_name\n            });\n            this.connection.disco.addFeature(namespace);\n        },\n\n        render: function () {\n            this.models.forEach((feature) => {\n                let view = new xabber.FeatureView({model: feature});\n            });\n        }\n    });\n\n    xabber.ServerFeature = Backbone.Model.extend({\n        idAttribute: 'var'\n    });\n\n    xabber.ServerFeatures = Backbone.Collection.extend({\n        model: xabber.ServerFeature,\n\n        initialize: function (models, options) {\n            this.account = options.account;\n            this.connection = this.account.connection;\n            this.on(\"add\", this.onFeatureAdded, this);\n        },\n\n        request: function () {\n            this.account.cached_server_features.getAllFromCachedFeatures((res) => {\n                if (res && res.length){\n                    res.forEach((item) => {\n                        this.create({\n                            'var': item.var,\n                            from: item.from\n                        });\n                    });\n                    this.is_cached = true;\n                } else {\n                    this.connection.disco.info(this.account.domain, null, this.onInfo.bind(this));\n                }\n                this.connection.disco.items(this.account.domain, null, this.onItems.bind(this));\n            });\n        },\n\n        onItems: function (stanza) {\n            let groupchat_servers_list = [];\n            $(stanza).find('query item').each((idx, item) => {\n                let jid = $(item).attr('jid'),\n                    name = $(item).attr('name'),\n                    node = $(item).attr('node');\n                if (node === Strophe.NS.GROUP_CHAT) {\n                    groupchat_servers_list.push(jid);\n                    this.account.set('groupchat_servers_list', groupchat_servers_list);\n                }\n                this.connection.disco.addItem(jid, name, node, () => {});\n                (!this.is_cached) && this.connection.disco.info(\n                    jid,\n                    null,\n                    this.onInfo.bind(this));\n            });\n        },\n\n        onInfo: function (stanza) {\n            let $stanza = $(stanza),\n                from = $stanza.attr('from'),\n                self = this;\n            $stanza.find('feature').each(function () {\n                let namespace = $(this).attr('var');\n                self.create({\n                    'var': namespace,\n                    from: from\n                });\n                if (namespace === Strophe.NS.AUTH_DEVICES)\n                    self.account.getAllXTokens();\n            });\n            $stanza.find('x').each(function () {\n                let form_type_val = $(this).find('field[var=\"FORM_TYPE\"] value');\n                if (form_type_val.length && form_type_val.text() === Strophe.NS.URLDISCO && self.account.domain === from){\n                    let media_gallery_url = $(this).find('field[var=\"' + Strophe.NS.MEDIAGALLERY + '\"] value');\n                    if (media_gallery_url.length && media_gallery_url.text()){\n                        self.create({\n                            'var': 'media-gallery',\n                            from: media_gallery_url.text()\n                        });\n                    }\n                }\n            });\n            if (this.account.auth_view && !(constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1)){\n                this.account.auth_view.first_features_received = true\n                if (this.account.auth_view.stepped_auth_complete)\n                    this.account.auth_view.successFeedback();\n            }\n        },\n\n        onFeatureAdded: function (feature) {\n            let _var = feature.get('var'),\n                client_feature = this.account.client_features.get(_var);\n            client_feature && client_feature.set('supports', true);\n            (_var != Strophe.NS.SUBSCRIPTION_PREAPPROVAL && _var != Strophe.NS.SYNCHRONIZATION) && this.account.cached_server_features.putInCachedFeatures({\n                var: _var,\n                from: feature.get('from'),\n            })\n\n            if (_var === 'media-gallery') {\n                this.account.set('gallery_auth', false)\n                if (!(this.account.get('gallery_token') && this.account.get('gallery_url')) || (this.account.get('gallery_url') != feature.get('from')))\n                    this.account.initGalleryAuth(feature);\n            }\n        },\n    });\n\n    xabber.Account.addInitPlugin(function () {\n        this.client_features = new xabber.ClientFeatures(null, {account: this});\n        this.server_features = new xabber.ServerFeatures(null, {account: this});\n    });\n\n    xabber.Account.addConnPlugin(function () {\n        this.last_stanza_timestamp = moment.now();\n\n        this.connection.deleteHandler(this._last_stanza_handler);\n        this._last_stanza_handler = this.connection.addHandler(() => {\n            this.last_stanza_timestamp = moment.now();\n            return true;\n        });\n\n        this.connection.deleteHandler(this._pong_handler);\n        this._pong_handler = this.connection.ping.addPingHandler((ping) => {\n            this.last_stanza_timestamp = moment.now();\n            this.connection.ping.pong(ping);\n            return true;\n        });\n\n        this.connection.deleteTimedHandler(this._ping_handler);\n        this._ping_handler = this.connection.addTimedHandler(30000, () => {\n            let downtime = moment.now() - this.last_stanza_timestamp;\n            if (downtime / 1000 > (xabber.settings.reconnect_interval || 90)) {\n                if (this.connection.connected)\n                    this.connection.disconnect();\n                else\n                    this.connect();\n                return false;\n            }\n            if (downtime / 1000 > (xabber.settings.ping_interval || 60)) {\n                this.connection.ping.ping(this.get('jid'));\n            }\n            return true;\n        });\n\n        this.server_features.request();\n    }, true, true);\n\n    xabber.Account.addFastConnPlugin(function () {\n        this.last_fast_stanza_timestamp = moment.now();\n\n        this.fast_connection.deleteHandler(this._last_fast_stanza_handler);\n        this._last_fast_stanza_handler = this.fast_connection.addHandler(() => {\n            this.last_fast_stanza_timestamp = moment.now();\n            return true;\n        });\n\n        this.fast_connection.deleteHandler(this._fast_pong_handler);\n        this._fast_pong_handler = this.fast_connection.ping.addPingHandler((ping) => {\n            this.last_fast_stanza_timestamp = moment.now();\n            this.fast_connection.ping.pong(ping);\n            return true;\n        });\n\n        this.fast_connection.deleteTimedHandler(this._fast_ping_handler);\n        this._fast_ping_handler = this.fast_connection.addTimedHandler(30000, () => {\n            let downtime = moment.now() - this.last_fast_stanza_timestamp;\n            if (downtime / 1000 > (xabber.settings.reconnect_interval || 90)) {\n                if (this.fast_connection.connected)\n                    this.fast_connection.disconnect();\n                else\n                    this.fast_connection.connect('password', this.fast_connection.jid, this.fast_connection.pass);\n                return false;\n            }\n            if (downtime / 1000 > (xabber.settings.ping_interval || 60)) {\n                this.fast_connection.ping.ping(this.fast_connection.jid);\n            }\n            return true;\n        });\n    }, true, true);\n\n    xabber.Account.addConnPlugin(function () {\n        let disco = this.connection.disco;\n        this.connection.addHandler(disco._onDiscoInfo.bind(disco),\n                Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n        this.connection.addHandler(disco._onDiscoItems.bind(disco),\n                Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n    }, false, true);\n\n    return xabber;\n  };\n});\n","// expands dependencies with internal xabber modules\ndefine([\n    \"xabber-dependencies\",\n    \"xabber-constants\",\n    \"xabber-templates\",\n    \"xabber-utils\",\n    \"xabber-translations-info\",\n    \"xabber-version\",\n    \"underscore\"\n], function(deps, constants, templates, utils, client_translation_progress, version, _) {\n    return _.extend({\n        constants: constants,\n        templates: templates,\n        client_translation_progress: client_translation_progress,\n        utils: utils,\n        uuid: utils.uuid\n    }, version, deps);\n});\n","define(\"xabber-mentions\", function () {\n    return function (xabber) {\n        let env = xabber.env,\n            constants = env.constants,\n            templates = env.templates.mentions,\n            utils = env.utils,\n            $ = env.$,\n            Strophe = env.Strophe,\n            _ = env._,\n            Images = utils.images,\n            pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\n        xabber.Mention = Backbone.Model.extend({\n            defaults: {\n                active: false,\n                display: false,\n                timestamp: 0\n            },\n\n            initialize: function (attrs, options) {\n                this.contact = options.contact;\n                this.message = options.message;\n                this.id = this.message.get('unique_id');\n                this.set('timestamp', this.message.get('timestamp'));\n                this.account = this.contact.account;\n                this.item_view = new xabber.MentionItemView({model: this});\n                this.contact.on(\"destroy\", this.destroy, this);\n                this.message.on(\"change:last_replace_time\", this.onMessageUpdated, this);\n            },\n\n            onMessageUpdated: function () {\n                if (this.message.get('mentions') && this.message.get('mentions').length) {\n                    this.message.get('mentions').forEach((mention) => {\n                        let mention_target = mention.target || \"\",\n                            id = mention_target.match(/\\?id=\\w*/),\n                            jid = mention_target.match(/\\?jid=.*/);\n                        if (id)\n                            mention_target = id[0].slice(4);\n                        else if (jid)\n                            mention_target = jid[0].slice(5);\n                        else\n                            mention_target = \"\";\n                        if (id) {\n                            if (this.contact.my_info) {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                            }\n                            else if (this.contact.get('group_chat')) {\n                                if (this._pending_my_info) {\n                                    this._pending_my_info.done(() => {\n                                        if (mention_target === this.contact.my_info.get('id'))\n                                            this.item_view.updateLastMessage();\n                                        else\n                                            this.destroy();\n                                        this._pending_my_info = null;\n                                    });\n                                }\n                                else {\n                                    this._pending_my_info = new $.Deferred();\n                                    this.contact.getMyInfo(() => {\n                                        if (mention_target === this.contact.my_info.get('id'))\n                                            this.item_view.updateLastMessage();\n                                        else\n                                            this.destroy();\n                                        this._pending_my_info.resolve();\n                                    });\n                                }\n                            }\n                        } else if (jid && mention_target === this.account.get('jid')) {\n                            this.item_view.updateLastMessage();\n                        }\n                        else\n                            this.destroy();\n                    });\n                } else\n                    this.destroy();\n            }\n        });\n\n        xabber.MentionsBase = Backbone.Collection.extend({\n            model: xabber.Mention\n        });\n\n        xabber.AccountMentions = xabber.MentionsBase.extend({\n            initialize: function (models, options) {\n                this.account = options.account;\n                this.on(\"add\", this.onMentionAdded, this)\n            },\n\n            onMentionAdded: function (mention) {\n                xabber.mentions.add(mention);\n            }\n        });\n\n        xabber.Mentions = xabber.MentionsBase.extend({\n            comparator: 'timestamp',\n            initialize: function () {\n                this.collections = [];\n                this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n                this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n            },\n\n            addCollection: function (collection) {\n                this.collections.push(collection);\n            },\n\n            updateInCollections: function (event, contact) {\n                _.each(this.collections, function (collection) {\n                    collection.update(contact, event);\n                });\n            }\n        });\n\n        xabber.MentionsView = xabber.SearchPanelView.extend({\n            className: 'mentions-container container',\n            ps_selector: '.mentions-list-wrap',\n            main_container: '.mentions-list',\n            ps_settings: {theme: 'item-list'},\n            template: templates.mentions_panel,\n\n            _initialize: function () {\n                this.active_mention = null;\n                this.keyup_timeout = null;\n                this.model.on(\"add\", this.onMentionAdded, this);\n                this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n                this.model.on(\"destroy\", this.onMentionRemoved, this);\n                xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n                this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n                this.$('input').on('input', this.updateSearch.bind(this));\n            },\n\n            render: function (options) {\n                if (!options.right && this.active_mention) {\n                    this.active_mention.model.set('active', false);\n                    this.active_mention = null;\n                }\n                (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n            },\n\n            onMentionAdded: function (mention) {\n                this.addChild(mention.id, mention.item_view);\n                this.updateMentionPosition(mention);\n            },\n\n            onMentionRemoved: function (mention, options) {\n                options = options || {};\n                if (this.active_mention === this.child(mention.id)) {\n                    this.active_mention = null;\n                }\n                this.removeChild(mention.id, options);\n                this.updateScrollBar();\n            },\n\n            selectItem: function (id) {\n                this.clearSearchSelection();\n                let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n                if ($selection.length) {\n                    this.selection_id = id;\n                } else {\n                    $selection = this.$('.list-item:visible').first();\n                    this.selection_id = $selection.data('id');\n                }\n                $selection.find('.mention-info-wrap').addClass('selected');\n            },\n\n            clearSearchSelection: function (ev) {\n                this.selection_id = null;\n                this.$('.list-item.selected').removeClass('selected');\n                this.$('.list-item .selected').removeClass('selected');\n            },\n\n            onEnterPressed: function (selection) {\n                let view;\n                if (selection.closest('.searched-lists-wrap').length) {\n                    this.clearSearch();\n                    this.$('.list-item.active').removeClass('active');\n                    if (selection.hasClass('chat-item')) {\n                        view = xabber.chats_view.child(selection.data('id'));\n                        view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                        selection.addClass('active');\n                    }\n                    if (selection.hasClass('roster-contact')) {\n                        view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                        view && (view = view.item_view);\n                        view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                        selection.addClass('active');\n                    }\n                    if (selection.hasClass('message-item')) {\n                        selection.click();\n                    }\n                }\n                else {\n                    selection.find('.mention-info-wrap').click();\n                }\n            },\n\n            replaceMentionItem: function (item, mentions) {\n                let view = this.child(item.id);\n                if (view && item.get('timestamp')) {\n                    view.$el.detach();\n                    let index = mentions.indexOf(item);\n                    if (index === 0) {\n                        this.$('.mentions-list').append(view.$el);\n                    } else {\n                        this.$('.mention-item').eq(-index).before(view.$el);\n                    }\n                    let $prev_el = view.$el.prev('.mention-item'),\n                        $next_el = view.$el.next('.mention-item'),\n                        contact_jid = view.$el.data('contact-jid');\n                        if ($prev_el.length) {\n                            let prev_contact_jid = $prev_el.data('contact-jid');\n                            if (prev_contact_jid !== contact_jid)\n                                view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                        }\n                        else\n                            view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                        if ($next_el.length) {\n                            let next_contact_jid = $next_el.data('contact-jid');\n                            if (next_contact_jid === contact_jid) {\n                                $next_el.find('.group-chat-title-wrap').addClass('hidden');\n                            }\n                            else\n                                $next_el.find('.group-chat-title-wrap').removeClass('hidden');\n                        }\n                        else\n                            view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n            },\n\n            readAllMentions: function () {\n                xabber.accounts.connected.forEach((account) => {\n                    let mentions = _.clone(account.unread_mentions.models);\n                    _.each(mentions, ((mention) => {\n                        let msgid = mention.message.get('msgid'),\n                            archive_id = mention.message.get('archive_id'),\n                            contact_archive_id = mention.message.get('contact_archive_id'),\n                            chat = account.chats.getChat(mention.contact);\n                        mention.message.set('is_unread', false);\n                        chat.sendMarker(msgid, 'displayed', archive_id, contact_archive_id);\n                    }));\n                });\n            },\n\n            updateLeftIndicator: function (accounts) {\n                this.$el.attr('data-indicator', accounts.connected.length > 1);\n            },\n\n            updateMentionPosition: function (item) {\n                let view = this.child(item.id);\n                if (!view)\n                    return;\n                this.replaceMentionItem(item, this.model);\n            },\n\n            onChangedActiveStatus: function (mention) {\n                if (mention.get('active')) {\n                    let previous_mention = this.active_mention;\n                    this.active_mention = this.child(mention.id);\n                    previous_mention && previous_mention.model.set('active', false);\n                }\n            }\n        });\n\n        xabber.MentionItemView = xabber.BasicView.extend({\n            className: 'mention-item list-item',\n            template: templates.mention_item,\n            avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n            events: {\n                'click .mention-info-wrap': 'openByClick'\n            },\n\n            _initialize: function () {\n                this.account = this.model.account;\n                this.contact = this.model.contact;\n                this.$el.attr('data-id', this.model.id);\n                this.$el.attr('data-contact-jid', this.contact.get('jid'));\n                this.updateContactName();\n                this.updateGroupChat();\n                this.updateName();\n                this.updateLastMessage();\n                this.updateAvatar();\n                this.updateColorScheme();\n                this.updateCounter();\n                this.updateIcon();\n                this.model.on(\"change:active\", this.updateActiveStatus, this);\n                this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n                this.contact.on(\"change:name\", this.updateContactName, this);\n                this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n                this.model.message.on(\"change:is_unread\", this.updateCounter, this);\n            },\n\n            updateName: function () {\n                let message = this.model.message,\n                    user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n                    contact_name = this.contact.get('name');\n                if (user_info)\n                    contact_name = user_info.nickname || user_info.jid || user_info.id || this.model.message.get('from_jid');\n                this.$('.chat-title').text(contact_name);\n            },\n\n            updateIcon: function () {\n                this.$('.contact-icon .group-chat-icon').hideIf(!this.contact.get('group_chat') && this.contact.get('jid') === this.account.domain);\n                this.$('.contact-icon .server-icon').hideIf(this.contact.get('jid') !== this.account.domain);\n            },\n\n            updateContactName: function () {\n                let contact_name = this.contact.get('name');\n                this.$('.group-chat-name').text(contact_name);\n                if (!this.contact.get('group_chat')) {\n                    this.updateName();\n                    if (!this.contact.get('photo_hash')) {\n                        let default_avatar = Images.getDefaultAvatar(contact_name);\n                        this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n                    }\n                }\n            },\n\n            updateGroupChat: function () {\n                this.updateIcon();\n            },\n\n            updateCounter:function () {\n                let unread = this.model.message.get('is_unread');\n                this.$('.msg-counter').switchClass('hidden', !unread);\n                if (unread)\n                    this.account.unread_mentions.add(this.model);\n                else\n                    this.account.unread_mentions.remove(this.model);\n                xabber.toolbar_view.recountAllMessageCounter();\n            },\n\n            updateLastMessage: function () {\n                let msg = this.model.message;\n                if (!msg)\n                    return;\n                let msg_time = msg.get('time'),\n                    timestamp = msg.get('timestamp'),\n                    forwarded_message = msg.get('forwarded_message'),\n                    msg_files = msg.get('files') || [],\n                    msg_images = msg.get('images') || [],\n                    msg_locations = msg.get('locations') || [],\n                    msg_text = (forwarded_message) ? (msg.get('message') || xabber.getString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText();\n                msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n                this.model.set({timestamp: timestamp});\n                if (msg_files.length || msg_images.length || msg_locations.length) {\n                    let $colored_span = $('<span class=\"text-color-500\"/>');\n                    if (msg_files.length && msg_images.length)\n                        msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n                    else {\n                        if (msg_files.length > 0) {\n                            let total_size = 0;\n                            msg_files.forEach((f) => {total_size+=Number(f.size)});\n                            msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                        }\n                        if (msg_images.length > 0) {\n                            let total_size = 0;\n                            msg_images.forEach((f) => {total_size+=Number(f.size)});\n                            msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                        }\n                        if (msg_locations.length > 0) {\n                            msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                        }\n                    }\n                    this.$('.last-msg').text(\"\").append(msg_text);\n                }\n                else {\n                    this.$('.last-msg').text(msg_text);\n                }\n                this.$el.emojify('.last-msg', {emoji_size: 16});\n                this.$('.last-msg-date').text(utils.pretty_short_datetime(msg_time))\n                    .attr('title', pretty_datetime(msg_time));\n            },\n\n            updateActiveStatus: function () {\n                this.$el.find('.mention-info-wrap').switchClass('active', this.model.get('active'));\n            },\n\n            updateAvatar: function () {\n                let message = this.model.message,\n                    user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n                    image;\n                if (user_info) {\n                    if (user_info.avatar) {\n                        image = user_info.b64_avatar || this.account.chat_settings.getB64Avatar(user_info.id);\n                        if (image) {\n                            this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                        }\n                        else {\n                            let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + user_info.id;\n                            this.contact.getAvatar(user_info.avatar, node, (data_avatar) => {\n                                image = data_avatar;\n                                this.account.chat_settings.updateCachedAvatars(user_info.id, user_info.avatar, data_avatar);\n                                this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                            }, () => {\n                                let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n                            });\n                        }\n                    }\n                    else {\n                        let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                        this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n                    }\n                }\n                else {\n                    image = this.contact.cached_image;\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                }\n            },\n\n            openByClick: function () {\n                let message = this.model.message,\n                    chat = this.account.chats.getChat(this.contact);\n                this.model.message.set('is_unread', false);\n                chat.sendMarker(message.get('origin_id'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n                this.model.set('active', true);\n                this.contact.trigger(\"open_mention\", this.contact, message.get('unique_id'));\n            },\n\n            updateColorScheme: function () {\n                let color = this.account.settings.get('color');\n                this.$el.attr('data-color', color);\n            }\n\n        });\n\n        xabber.MentionsPlaceholderView = xabber.BasicView.extend({\n            className: 'placeholder-wrap mentions-placeholder-wrap noselect',\n            template: templates.mentions_placeholder\n        });\n\n        xabber.Account.addInitPlugin(function () {\n           this.mentions = new xabber.AccountMentions(null, {account: this});\n           this.unread_mentions = new xabber.Mentions(null, {account: this});\n        });\n\n        xabber.once(\"start\", function () {\n            this.mentions = new this.Mentions;\n            this.mentions_view = this.left_panel.addChild('mentions',\n                this.MentionsView, {model: this.mentions});\n            this.mentions_placeholder = this.right_panel.addChild('mentions_placeholder',\n                this.MentionsPlaceholderView);\n        }, xabber);\n\n        return xabber;\n    };\n});","define(\"xabber-omemo\", function () {\n    return function (xabber) {\n        let env = xabber.env,\n            constants = env.constants,\n            utils = env.utils,\n            $ = env.$,\n            templates = env.templates.base,\n            Strophe = env.Strophe,\n            _ = env._,\n            KeyHelper = libsignal.KeyHelper,\n            SignalProtocolAddress = libsignal.SignalProtocolAddress,\n            SessionBuilder = libsignal.SessionBuilder,\n            SessionCipher = libsignal.SessionCipher;\n\n        xabber.Peer = Backbone.Model.extend({\n            idAttribute: 'jid',\n\n            initialize: function (attrs, options) {\n                attrs = attrs || {};\n                this.account = options.account;\n                this.devices = {};\n                this.store = this.account.omemo.store;\n                this.fingerprints = new xabber.Fingerprints({model: this});\n                this.updateDevices(attrs.devices);\n                this.set({\n                    jid: attrs.jid\n                });\n            },\n\n            updateDevices: function (devices) {\n                if (!devices)\n                    return;\n                for (let d in this.devices) {\n                    if (!devices[d]) {\n                        this.account.omemo.removeSession('session' + this.devices[d].address.toString());\n                        delete this.devices[d];\n                    }\n                }\n                for (let d in devices) {\n                    let device = this.getDevice(d),\n                        label = devices[d].label;\n                    label && device.set('label', label);\n                }\n            },\n\n            getDevicesNode: async function () {\n                if (!this._pending_devices) {\n                    this._pending_devices = true;\n                    this._dfd_devices = new $.Deferred();\n                    return new Promise((resolve, reject) => {\n                        this.account.getConnectionForIQ().omemo.getDevicesNode(this.get('jid'), (cb) => {\n                            this.updateDevices(this.account.getConnectionForIQ().omemo.parseUserDevices($(cb)));\n                            this._pending_devices = false;\n                            this._dfd_devices.resolve();\n                            resolve();\n                        }, () => {\n                            this._pending_devices = false;\n                            this._dfd_devices.resolve();\n                            resolve();\n                        });\n                    });\n                } else {\n                    return new Promise((resolve, reject) => {\n                        this._dfd_devices.done(() => {\n                            resolve();\n                        });\n                    });\n                }\n            },\n\n            encrypt: async function (message) {\n                let enc_promises = [],\n                    aes = await utils.AES.encrypt(message),\n                    is_trusted = true;\n\n                if (!_.keys(this.devices).length)\n                    await this.getDevicesNode();\n                for (let device in this.devices) {\n                    enc_promises.push(this.devices[device].encrypt(aes.keydata));\n                }\n\n                for (let device in this.account.omemo.own_devices) {\n                    enc_promises.push(this.account.omemo.own_devices[device].encrypt(aes.keydata));\n                }\n\n                let keys = await Promise.all(enc_promises);\n\n                keys = keys.filter(key => key !== null);\n\n                for (let device_id in this.devices) {\n                    let device = this.devices[device_id];\n                    if (device.get('ik') === null)\n                        continue;\n                    if (device.get('trusted') === null)\n                        is_trusted = 'error';\n                    if (is_trusted && device.get('trusted') === undefined)\n                        is_trusted = 'none';\n                }\n\n                return {\n                    keys: keys,\n                    payload: aes.payload,\n                    is_trusted: is_trusted\n                };\n            },\n\n            decrypt: async function (deviceId, ciphertext, preKey) {\n                let device = this.getDevice(deviceId);\n\n                return device.decrypt(ciphertext, preKey);\n            },\n\n            getDevice: function (id) {\n                if (!this.devices[id]) {\n                    this.devices[id] = new xabber.Device({jid: this.get('jid'), id: id }, { account: this.account, store: this.store});\n                }\n\n                return this.devices[id];\n            }\n        });\n\n        xabber.Peers = Backbone.Collection.extend({\n            model: xabber.Peer,\n\n            initialize: function (models, options) {\n                this.collections = [];\n                this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n                this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n            },\n\n            addCollection: function (collection) {\n                this.collections.push(collection);\n            },\n\n            updateInCollections: function (event, contact) {\n                _.each(this.collections, function (collection) {\n                    collection.update(contact, event);\n                });\n            }\n        });\n\n        xabber.Fingerprints = xabber.BasicView.extend({\n            className: 'modal main-modal fingerprints-wrap',\n            template: templates.fingerprints,\n            ps_selector: '.fingerprints-content',\n            ps_settings: {theme: 'item-list'},\n\n            events: {\n                'click .btn-trust': \"trustDevice\",\n                'click .btn-ignore': \"ignoreDevice\",\n                'click .btn-delete': \"deleteDevice\",\n                \"click .set-label + div\": \"editLabel\",\n                'click .btn-cancel': \"close\"\n            },\n\n            _initialize: function () {\n                if (this.model.own_devices) {\n                    this.account = this.model.account;\n                    this.omemo = this.model;\n                    this.jid = this.account.get('jid');\n                    this.is_own_devices = true;\n                } else {\n                    this.account = this.model.account;\n                    this.omemo = this.account.omemo;\n                    this.jid = this.model.get('jid');\n                }\n            },\n\n            open: function () {\n                this.omemo = this.account.omemo;\n                let name = \"\";\n                if (this.is_own_devices)\n                    name = this.account.get('name');\n                else {\n                    let contact = this.account.contacts.get(this.jid);\n                    name = contact ? contact.get('name') : this.jid;\n                }\n                this.$('.header').text(xabber.getString('omemo__dialog_fingerprints__header', [name]));\n                this.data.set('visible', true);\n                this.show();\n                this.$('div.fingerprints-content').html(env.templates.contacts.preloader());\n                if (this.is_own_devices)\n                    this.renderOwnDevices();\n                else\n                    this.renderDevices();\n            },\n\n            renderDevices: function () {\n                this.model.getDevicesNode().then(() => {\n                    let devices_count = _.keys(this.model.devices).length;\n                    this.updateFingerprints(this.model.devices);\n                });\n                this.updateOwnFingerprint();\n            },\n\n            renderOwnDevices: function () {\n                this.omemo.getMyDevices().then(() => {\n                    let devices_count = _.keys(this.model.own_devices).length;\n                    this.updateFingerprints(this.model.own_devices);\n                    this.updateOwnFingerprint();\n                });\n            },\n\n            render: function () {\n                this.$el.openModal({\n                    complete: () => {\n                        this.$el.detach();\n                        this.data.set('visible', false);\n                    }\n                });\n            },\n\n            editLabel: function () {\n                this.$('.set-label').removeClass('hidden');\n                this.$('.set-label').focus();\n                let saveLabel = (ev) => {\n                    let label = ev.target.value.trim();\n                    this.saveLabel(label);\n                };\n                this.$('.set-label')[0].onblur = saveLabel;\n                this.$('input.set-label')[0].onkeydown = (ev) => {\n                    if (ev.keyCode == constants.KEY_ENTER)\n                        saveLabel(ev);\n                };\n            },\n\n            saveLabel: function (label) {\n                this.$('.set-label').addClass('hidden');\n                if (label == this.account.settings.get('device_label_text'))\n                    return;\n                this.account.settings.save('device_label_text', label);\n                this.account.getConnectionForIQ().omemo.publishDevice(this.omemo.get('device_id'), label, () => {\n                    this.updateOwnFingerprint();\n                });\n            },\n\n            updateFingerprints: async function (devices) {\n                let counter = 0,\n                    devices_count = _.keys(devices).length,\n                    dfd = new $.Deferred(),\n                    $container = this.$('div.fingerprints-content');\n                dfd.done((f_count) => {\n                    if (!f_count)\n                        $container.html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                    else\n                        this.$('.dropdown-button').dropdown({\n                            inDuration: 100,\n                            outDuration: 100,\n                            constrainWidth: false,\n                            hover: false,\n                            container: this.$('.fingerprints-content')[0],\n                            alignment: 'left'\n                        });\n                    this.jid == this.account.get('jid') && f_count++;\n                    this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n                    $container.find('.preloader-wrapper').detach();\n                });\n                for (let device_id in devices) {\n                    if (device_id == this.omemo.get('device_id')) {\n                        counter++;\n                        if (devices_count == counter)\n                            dfd.resolve($container.find('div.row').length);\n                        continue;\n                    }\n                    let device = devices[device_id];\n                    if (device.get('ik')) {\n                        let options = {},\n                            f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                        $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                        counter++;\n                        if (devices_count == counter)\n                            dfd.resolve($container.find('div.row').length);\n                    }\n                    else {\n                        this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                            let $iq = $(iq),\n                                $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                                ik = $bundle.find(`ik`).text();\n                            if (ik) {\n                                device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                                let options = {},\n                                    f = device.generateFingerprint(),\n                                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                                is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                                $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                            }\n                            counter++;\n                            if (devices_count == counter)\n                                dfd.resolve($container.find('div.row').length);\n                        }, () => {\n                            counter++;\n                            if (devices_count == counter)\n                                dfd.resolve($container.find('div.row').length);\n                        });\n                    }\n                }\n            },\n\n            updateOwnFingerprint: async function () {\n                this.$('.this-device-content').html(\"\");\n                let omemo = this.account.omemo;\n                if (omemo) {\n                    let device = omemo.own_devices[omemo.get('device_id')];\n                    if (device) {\n                        if (device.get('fingerprint')) {\n                            this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                        } else if (device.get('ik')) {\n                            device.set('fingerprint', device.generateFingerprint());\n                            this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                        } else {\n                            device.getBundle().then(({pk, spk, ik}) => {\n                                device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                                let fingerprint = device.generateFingerprint();\n                                if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                                    device.set('fingerprint', fingerprint);\n                                this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                            });\n                        }\n                    } else {\n                        omemo.store.getIdentityKeyPair().then((ik) => {\n                            let pubKey = ik.pubKey;\n                            if (pubKey.byteLength == 33)\n                                pubKey = pubKey.slice(1);\n                            let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                            this.$('.this-device-content').append(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                        });\n                    }\n\n                }\n            },\n\n            close: function () {\n                let deferred = new $.Deferred();\n                this.$el.closeModal({ complete: () => {\n                        this.$el.detach();\n                        this.data.set('visible', false);\n                        deferred.resolve();\n                    }});\n                return deferred.promise();\n            },\n\n            trustDevice: function (ev) {\n                let $target = $(ev.target).closest('div.row'),\n                    fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n                    is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n                    device_id = Number($target.find('div.device-id').text());\n                $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n                $target.find('.trust-item-wrap').children().attr('data-value', 'trust').text(xabber.getString('omemo__dialog_fingerprints__button_trust'));\n                this.omemo.updateFingerprints(this.jid, device_id, fingerprint, true);\n                let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n                if (device && is_trusted != 'trusted') {\n                    if (is_trusted === 'error')\n                        $target.find('.old-fingerprint').detach();\n                    device.set('trusted', true);\n                    device.is_session_initiated = false;\n                    device.preKeys = null;\n                    this.account.trigger('trusting_updated');\n                }\n            },\n\n            ignoreDevice: function (ev) {\n                let $target = $(ev.target).closest('div.row'),\n                    fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n                    is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n                    device_id = Number($target.find('div.device-id').text());\n                $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n                $target.find('.trust-item-wrap').children().attr('data-value', 'ignore').text(xabber.getString('omemo__dialog_fingerprints__button_error'));\n                this.omemo.updateFingerprints(this.jid, device_id, fingerprint, false);\n                let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n                if (device && is_trusted != 'ignore') {\n                    if (is_trusted === 'error')\n                        $target.find('.old-fingerprint').detach();\n                    device.set('trusted', false);\n                    device.is_session_initiated = false;\n                    device.preKeys = null;\n                    this.account.trigger('trusting_updated');\n                }\n            },\n\n            addRow: function (id, label, trust, fingerprint, options) {\n                options = options || {};\n                let delete_button = this.is_own_devices ? true : false,\n                    edit_setting = id == this.omemo.get('device_id'),\n                    old_fingerprint = options.old_fingerprint,\n                    error;\n                if (fingerprint.match(/.{1,8}/g))\n                    fingerprint = fingerprint.match(/.{1,8}/g).join(\" \");\n                else {\n                    fingerprint = '';\n                    error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n                    let device = this.is_own_devices ? this.account.omemo.own_devices[id] : this.model.devices[id];\n                    if (device && trust != 'ignore') {\n                        trust = 'ignore';\n                        this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                        device.set('trusted', false);\n                        device.is_session_initiated = false;\n                        device.preKeys = null;\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,8}/g).join(\" \"));\n                let $row = templates.fingerprint_item({id,label,trust,fingerprint, delete_button, edit_setting, old_fingerprint, error});\n                return $row;\n            },\n\n            deleteDevice: function (ev) {\n                let $target = $(ev.target).closest('div.row'),\n                    device_id = Number($target.find('div.device-id').text());\n                utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n                    if (result) {\n                        $target.detach();\n                        delete this.model.own_devices[device_id];\n                        let conn = this.account.getConnectionForIQ();\n                        if (conn && conn.omemo) {\n                            delete conn.omemo.devices[device_id];\n                            conn.omemo.publishDevice(null, null, () => {\n                                $target.detach();\n                            });\n                            conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                        }\n                    }\n                });\n            },\n        });\n\n        xabber.Bundle = Backbone.Model.extend({\n            initialize: async function (attrs, options) {\n                this.preKeys = [];\n                this.model = options.model;\n                this.store = options.store;\n                if (this.model.get('identityKey'))\n                    this.getIdentity();\n                else\n                    await this.generateIdentity();\n               await this.getPreKeys();\n               if (this.model.get('resend_bundle')) {\n                   this.model.publishBundle();\n                   this.set('resend_bundle', false);\n               }\n            },\n\n            generateIdentity: function () {\n                return Promise.all([\n                    KeyHelper.generateIdentityKeyPair(),\n                    KeyHelper.generateRegistrationId(),\n                ]).then((result) => {\n                    let identityKey = result[0],\n                        registrationId = result[1];\n                    this.store.put('identityKey', identityKey);\n                    this.store.put('registrationId', registrationId);\n                    this.cacheIdentity(identityKey, registrationId);\n                });\n            },\n\n            getIdentity: function () {\n                let identityKey = JSON.parse(this.model.get('identityKey')),\n                    registrationId = this.model.get('registrationId'),\n                    pubKey = utils.fromBase64toArrayBuffer(identityKey.pubKey),\n                    privKey = utils.fromBase64toArrayBuffer(identityKey.privKey);\n                this.store.put('identityKey', {pubKey: pubKey, privKey: privKey});\n                this.store.put('registrationId', registrationId);\n            },\n\n            cacheIdentity: function (identityKey, registrationId) {\n                let pubKey = utils.ArrayBuffertoBase64(identityKey.pubKey),\n                    privKey = utils.ArrayBuffertoBase64(identityKey.privKey);\n                this.model.save('identityKey', JSON.stringify({pubKey: pubKey, privKey: privKey}));\n                this.model.save('registrationId', registrationId);\n            },\n\n            generatePreKeys: async function () {\n                let preKeysPromises = [];\n                for (let i = 1; i <= constants.PREKEYS_COUNT; i++) {\n                    preKeysPromises.push(this.generatePreKey(i));\n                }\n\n                preKeysPromises.push(this.generateSignedPreKey(1));\n\n                return await Promise.all(preKeysPromises);\n            },\n\n            getSignedPreKey: async function () {\n                let spk = this.model.get('signedPreKey');\n                if (spk) {\n                    let pubKey = utils.fromBase64toArrayBuffer(spk.keyPair.pubKey),\n                        privKey = utils.fromBase64toArrayBuffer(spk.keyPair.privKey),\n                        signature = utils.fromBase64toArrayBuffer(spk.signature),\n                        keyPair = {pubKey, privKey},\n                        keyId = spk.keyId;\n                    return {keyPair, keyId, signature};\n                }\n                else {\n                    return await this.generateSignedPreKey(this.preKeys[0].keyId || 1);\n                }\n            },\n\n            getPreKeys: async function () {\n                let prekeys = this.model.prekeys.getAll();\n                if (Object.keys(prekeys).length >= constants.MIN_PREKEYS_COUNT) {\n                    for (let p in prekeys) {\n                        let pk = prekeys[p],\n                            id = pk.id,\n                            prekey = JSON.parse(pk.key),\n                            priv_pk = utils.fromBase64toArrayBuffer(prekey.privKey),\n                            pub_pk = utils.fromBase64toArrayBuffer(prekey.pubKey),\n                            key_pair = {pubKey: pub_pk, privKey: priv_pk};\n                        this.preKeys.push({keyId: id, keyPair: key_pair});\n                        this.store.storePreKey(id, key_pair);\n                    }\n                    this.getUsedPreKeys();\n                    let spk = await this.getSignedPreKey();\n                    this.preKeys.push(spk);\n                    this.store.storeSignedPreKey(spk.keyId, spk.keyPair);\n                }\n                else {\n                    this.generatePreKeys().then((prekeys) => {\n                        this.preKeys = prekeys;\n                        this.getUsedPreKeys();\n                    });\n                }\n            },\n\n            getUsedPreKeys: function () {\n                let prekeys = this.model.own_used_prekeys.getAll();\n                if (Object.keys(prekeys).length) {\n                    for (let p in prekeys) {\n                        let pk = prekeys[p],\n                            id = pk.id,\n                            prekey = JSON.parse(pk.key),\n                            privKey = utils.fromBase64toArrayBuffer(prekey.privKey),\n                            pubKey = utils.fromBase64toArrayBuffer(prekey.pubKey);\n                        this.store.storePreKey(id, {pubKey, privKey});\n                    }\n                }\n            },\n\n            generatePreKey: async function (id) {\n                let preKey = await KeyHelper.generatePreKey(id);\n                this.store.storePreKey(id, preKey.keyPair);\n\n                return preKey;\n            },\n\n            generateSignedPreKey: async function (id) {\n                let identity = await this.store.getIdentityKeyPair();\n                let signedPreKey = await KeyHelper.generateSignedPreKey(identity, id);\n\n                this.store.storeSignedPreKey(id, signedPreKey.keyPair);\n                this.cacheSignedPreKey(signedPreKey);\n\n                return signedPreKey;\n            },\n\n            cacheSignedPreKey: function (spk) {\n                let pubKey = utils.ArrayBuffertoBase64(spk.keyPair.pubKey),\n                    privKey = utils.ArrayBuffertoBase64(spk.keyPair.privKey),\n                    signature = utils.ArrayBuffertoBase64(spk.signature),\n                    keyPair = {pubKey, privKey},\n                    keyId = spk.keyId,\n                    converted_spk = {keyPair, keyId, signature};\n                this.model.save('signedPreKey', converted_spk);\n            }\n\n        });\n        \n        xabber.Prekeys = Backbone.Model.extend({\n            initialize: function (options) {\n                this.name = options.name;\n                this.model = options.model;\n            },\n\n            get: function (id) {\n                let prekeys = _.clone(this.model.get(this.name));\n                return prekeys[id];\n            },\n\n            put: function (prekey) {\n                if (!prekey.id)\n                    return;\n                let prekeys = _.clone(this.model.get(this.name));\n                prekeys[prekey.id] = prekey;\n                this.model.save(this.name, prekeys);\n            },\n\n            getAll: function () {\n                let prekeys = _.clone(this.model.get(this.name));\n                return prekeys;\n            },\n\n            remove: function (id) {\n                if (!id)\n                    return;\n                let prekeys = _.clone(this.model.get(this.name));\n                delete prekeys[id];\n                this.model.save(this.name, prekeys);\n            }\n        });\n\n        xabber.Device = Backbone.Model.extend({\n            initialize: function (attrs, options) {\n                this.account = options.account;\n                this.id = attrs.id;\n                this.jid = attrs.jid;\n                this.store = options.store;\n                this.preKeys = null;\n                this.address = new SignalProtocolAddress(attrs.jid, attrs.id);\n            },\n\n            generateFingerprint: function () {\n                let identityKey = this.get('ik');\n                if (!identityKey)\n                    return;\n                if (identityKey.byteLength == 33)\n                    identityKey = identityKey.slice(1);\n                return Array.from(new Uint8Array(identityKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n            },\n\n            closeSession: function (reason) {\n                this.account.getConnectionForIQ().omemo.sendOptOut({\n                    to: this.jid,\n                    reason: reason\n                }, () => {});\n            },\n\n            getBundle: async function () {\n                if (!this._pending_bundle) {\n                    this._pending_bundle = true;\n                    this._dfd_bundle = new $.Deferred();\n                    return new Promise((resolve, reject) => {\n                        this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.jid, id: this.id}, (iq) => {\n                            let $iq = $(iq),\n                                $bundle = $iq.find(`item[id=\"${this.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                                $spk = $bundle.find('spk'),\n                                spk = {id: $spk.attr('id'), key: $spk.text(), signature: $bundle.find('spks').text()},\n                                ik = $bundle.find(`ik`).text();\n                            this.preKeys = [];\n                            if (!ik)\n                                this.set('ik', null);\n                            $bundle.find('prekeys pk').each((i, pk) => {\n                                let $pk = $(pk);\n                                this.preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                            });\n                            this._pending_bundle = false;\n                            let pk = this.getRandomPreKey();\n                            if (!pk) {\n                                this._dfd_bundle.reject();\n                                reject();\n                            }\n                            else {\n                                this._dfd_bundle.resolve({pk, spk, ik});\n                                resolve({pk, spk, ik});\n                            }\n                        }, () => {\n                            this.set('ik', null);\n                            this.preKeys = [];\n                            this._dfd_bundle.reject();\n                            this._pending_bundle = false;\n                            reject();\n                        });\n                    });\n                } else {\n                    return new Promise((resolve, reject) => {\n                        this._dfd_bundle.done(({pk, spk, ik}) => {\n                            resolve({pk, spk, ik});\n                        });\n                        this._dfd_bundle.fail(() => {\n                            reject();\n                        });\n                    });\n                }\n            },\n\n            getRandomPreKey: function () {\n                let min = 0,\n                    max = this.preKeys.length - 1,\n                    i = Math.floor(min + Math.random() * (max + 1 - min));\n                return this.preKeys[i];\n            },\n\n            decrypt: async function (cipherText, preKey) {\n                try {\n                    let sessionCipher = new SessionCipher(this.store, this.address), plainText;\n\n                    if (preKey)\n                        plainText = await sessionCipher.decryptPreKeyWhisperMessage(cipherText, 'binary');\n                    else {\n                        if (!this.store.hasSession(this.address.toString())) {\n                            let session = this.getCachedSession();\n                            if (session)\n                                await this.store.storeSession(this.address.toString(), session);\n                        }\n                        plainText = await sessionCipher.decryptWhisperMessage(cipherText, 'binary');\n                    }\n\n                    return plainText;\n                }\n                catch (e) {\n                    return null;\n                }\n            },\n\n            getPreKey: function () {\n                let pk = this.account.omemo.used_prekeys.get(String(this.id));\n                return pk;\n            },\n\n            getCachedSession: function () {\n                return this.account.omemo.getSession('session' + this.address.toString());\n            },\n\n            encrypt: async function (plainText) {\n                try {\n                    if (this.get('trusted') === false && (this.id != this.account.omemo.get('device_id')))\n                        return null;\n                    if (!this.store.hasSession(this.address.toString()) || !this.is_session_initiated) { // this.preKeys ??\n                        if (this.preKeys && !this.preKeys.length)\n                            return null;\n                        this.is_session_initiated = true;\n                        let s = await this.initSession();\n                        if (!s)\n                            return null;\n                    }\n\n                    let session = this.getSession(),\n                        ciphertext = await session.encrypt(plainText);\n\n                    return {\n                        preKey: ciphertext.type === 3,\n                        ciphertext: ciphertext,\n                        deviceId: this.address.getDeviceId()\n                    };\n                } catch (e) {\n                    console.log('Error:', e);\n                    console.warn('Could not encrypt data for device with id ' + this.address.getDeviceId());\n\n                    return null;\n                }\n            },\n\n            initSession: async function () {\n                let {pk, spk, ik} = await this.getBundle(),\n                    cached_pk = this.getPreKey(),\n                    id = this.id;\n                if (cached_pk) {\n                    if (!spk || spk && JSON.stringify(spk) == JSON.stringify(cached_pk.spk) && JSON.stringify(ik) == JSON.stringify(cached_pk.ik))\n                        pk = cached_pk.pk;\n                    else\n                        this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n                }\n                else\n                    this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n                this.set({'pk': utils.fromBase64toArrayBuffer(pk.key), 'ik': utils.fromBase64toArrayBuffer(ik)});\n                this.fingerprint = this.generateFingerprint();\n                let trusted = this.account.omemo.isTrusted(this.jid, id, this.fingerprint);\n                this.set('trusted', trusted);\n                if ((this.id != this.account.omemo.get('device_id')) && trusted === false)\n                    return false;\n                this.processPreKey({\n                    registrationId: Number(id),\n                    identityKey: utils.fromBase64toArrayBuffer(ik),\n                    signedPreKey: {\n                        keyId: Number(spk.id),\n                        publicKey: utils.fromBase64toArrayBuffer(spk.key),\n                        signature: utils.fromBase64toArrayBuffer(spk.signature)\n                    },\n                    preKey: {\n                        keyId: Number(pk.id),\n                        publicKey: utils.fromBase64toArrayBuffer(pk.key)\n                    }\n                });\n                return true;\n            },\n\n            processPreKey: function (preKeyBundle) {\n                this.session = new SessionBuilder(this.store, this.address);\n                return this.session.processPreKey(preKeyBundle);\n            },\n\n            removeSession: function () {\n                this.store.removeSession(this.address.toString());\n                this.sessionCipher = null;\n            },\n\n            getSession: function () {\n                if (!this.sessionCipher) {\n                    this.sessionCipher = new SessionCipher(this.store, this.address);\n                }\n                return this.sessionCipher;\n            }\n        });\n\n        xabber.Omemo = Backbone.ModelWithStorage.extend({\n            defaults: {\n                sessions: {},\n                fingerprints: {},\n                prekeys: {},\n                retract_version: 0,\n                used_prekeys: {},\n                own_used_prekeys: {},\n                device_id: \"\"\n            },\n\n            _initialize: function (attrs, options) {\n                this.on(\"change:device_id\", this.onDeviceIdUpdated, this);\n                this.on(\"destroy\", this.onOmemoDestroyed, this);\n                this.own_devices = {};\n                this.account = options.account;\n                this.peers = new xabber.Peers();\n                if (!this.get('device_id'))\n                    this.set('device_id', this.generateDeviceId());\n                this.store = new xabber.SignalProtocolStore();\n                this.account.on('device_published', this.publishBundle, this);\n                this.account.on(\"devices_updated\", this.onOwnDevicesUpdated, this);\n                this.store.on('prekey_removed', this.removePreKey, this);\n                this.store.on('session_stored', this.cacheSession, this);\n            },\n\n            storeSessions: function () {\n                let sessions = this.get('sessions');\n                for (let session_id in sessions) {\n                    let session = sessions[session_id];\n                    session && this.store.put(session_id, session);\n                }\n            },\n\n            onOmemoDestroyed: function () {\n                if (this.own_devices && Object.keys(this.own_devices).length != 0)\n                    this.deleteOwnDevice();\n                this.account.connection.deleteHandler(this._msg_handler);\n            },\n\n            deleteOwnDevice: function () {\n                let device_id = this.get('device_id');\n                delete this.own_devices[device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[device_id];\n                    conn.omemo.publishDevice(null, null, () => {});\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                }\n            },\n\n            onConnected: function () {\n                this.prekeys = new xabber.Prekeys({name: 'prekeys', model: this});\n                this.used_prekeys = new xabber.Prekeys({name: 'used_prekeys', model: this});\n                this.own_used_prekeys = new xabber.Prekeys({name: 'own_used_prekeys', model: this});\n                this.cached_messages = new xabber.DecryptedMessages({id: 'decrypted-messages'}, {\n                    account: this.account,\n                    storage_name: xabber.getStorageName() + '-decrypted-messages-' + this.account.get('jid'),\n                    fetch: 'before'\n                });\n                this.bundle = new xabber.Bundle(null, {store: this.store, model: this});\n                this.connection = this.account.connection;\n                this.registerMessageHandler();\n                this.addDevice();\n            },\n\n            getMyDevices: async function () {\n                if (!this._pending_own_devices) {\n                    this._pending_own_devices = true;\n                    this._dfd_own_devices = new $.Deferred();\n                    return new Promise((resolve, reject) => {\n                        let conn = this.account.getConnectionForIQ();\n                        if (conn) {\n                            if (conn.omemo) {\n                                conn.omemo.getDevicesNode(null, (cb) => {\n                                    conn.omemo.devices = conn.omemo.parseUserDevices($(cb));\n                                    this._pending_own_devices = false;\n                                    this._dfd_own_devices.resolve();\n                                    resolve();\n                                }, function () {\n                                    this._pending_own_devices = false;\n                                    this._dfd_own_devices.resolve();\n                                    resolve();\n                                });\n                            } else\n                                this._pending_own_devices = false;\n                        } else\n                            this._pending_own_devices = false;\n                    });\n                } else {\n                    return new Promise((resolve, reject) => {\n                        this._dfd_own_devices.done(() => {\n                            resolve();\n                        });\n                    });\n                }\n            },\n\n            updateFingerprints: function (contact, device_id, fingerprint, trusted) {\n                let fingerprints = _.clone(this.get('fingerprints'));\n                if (!fingerprints[contact])\n                    fingerprints[contact] = {};\n                let contact_fingerprints = fingerprints[contact];\n                if (_.isArray(contact_fingerprints))\n                    contact_fingerprints = {};\n                contact_fingerprints[device_id] = {fingerprint, trusted};\n                fingerprints[contact] = contact_fingerprints;\n                this.save('fingerprints', fingerprints);\n            },\n\n            isTrusted: function (jid, device_id, fingerprint) {\n                let fingerprints = _.clone(this.get('fingerprints'));\n                if (!fingerprints[jid])\n                    return;\n                if (!fingerprints[jid][device_id])\n                    return;\n                let fing = fingerprints[jid][device_id];\n                if (fing) {\n                    if (fing.fingerprint == fingerprint) {\n                        if (fing.trusted === undefined)\n                            return;\n                        else\n                            return fing.trusted;\n                    }\n                    else\n                        return null;\n                }\n            },\n\n            cacheRetractVersion: function (version) {\n                console.log('version ' + version)\n                this.save('retract_version', version);\n            },\n\n            getRetractVersion: function () {\n                return this.get('retract_version');\n            },\n\n            addDevice: function () {\n                let device_id = this.get('device_id');\n                if (this.connection) {\n                    let omemo = this.account.getConnectionForIQ().omemo;\n                    if (Object.keys(omemo.devices).length) {\n                        let device = omemo.devices[device_id];\n                        if (!device || device && (device.label || this.account.settings.get('device_label_text')) && device.label != this.account.settings.get('device_label_text')) {\n                            let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                            omemo.publishDevice(device_id, label, () => {\n                                this.account.trigger('device_published');\n                            });\n                        }\n                        else\n                            this.account.trigger('device_published');\n                    }\n                    else\n                        omemo.getDevicesNode(null, (cb) => {\n                            this.account.getConnectionForIQ().omemo.devices = omemo.parseUserDevices($(cb));\n                            for (let dev_id in this.account.getConnectionForIQ().omemo.devices) {\n                                if (!this.own_devices[dev_id])\n                                    this.own_devices[dev_id] = new xabber.Device({jid: this.account.get('jid'), id: dev_id}, { account: this.account, store: this.store});\n                            }\n                            let device = omemo.devices[device_id];\n                            if (!device || device && (device.label || this.account.settings.get('device_label_text')) && device.label != this.account.settings.get('device_label_text')) {\n                                let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                                omemo.publishDevice(device_id, label, () => {\n                                    this.account.trigger('device_published');\n                                });\n                            }\n                            else\n                                this.account.trigger('device_published');\n                        });\n                }\n            },\n\n            onDeviceIdUpdated: function () {\n                this.save('device_id', this.get('device_id'));\n            },\n\n            generateDeviceId: function () {\n                if (this.account.get('x_token') && this.account.get('x_token').token_uid && this.account.get('x_token').token_uid.length >= 8 && Number(this.account.get('x_token').token_uid.slice(0,8)))\n                    return Number(this.account.get('x_token').token_uid.slice(0,8));\n                let min = 1,\n                    max = Math.pow(2, 31) - 1,\n                    rand = min + Math.random() * (max + 1 - min);\n                return Math.floor(rand);\n            },\n\n            updateMessage: function (attrs, contact) {\n                if (!this.cached_messages)\n                    return;\n                this.cached_messages.updateMessage(attrs, contact);\n            },\n\n            registerMessageHandler: function () {\n                this.account.connection.deleteHandler(this._msg_handler);\n                this._msg_handler = this.account.connection.addHandler((message) => {\n                    this.receiveMessage(message);\n                    return true;\n                }, null, 'message', null, null, null, {'encrypted': true});\n            },\n\n            encrypt: function (contact, message) {\n                let peer = this.getPeer(contact.get('jid')),\n                    $msg = $(message.tree()),\n                    origin_id = $msg.children('origin-id').attr('id'),\n                    plaintext = Strophe.serialize($msg.children('envelope')[0]) || \"\";\n\n                origin_id && this.cached_messages.putMessage(contact, origin_id, plaintext);\n\n                return peer.encrypt(plaintext).then((encryptedMessage) => {\n\n                    let encryptedElement = $build('encrypted', {xmlns: Strophe.NS.OMEMO})\n                        .c('header', {\n                            sid: this.get('device_id'),\n                            label: this.account.settings.get('device_label_text')\n                        }),\n                        myKeys = $build('keys', {jid: this.account.get('jid')});\n\n                    encryptedElement.c('keys', { jid: contact.get('jid')});\n\n                    for (let key of encryptedMessage.keys) {\n                        let attrs = {\n                            rid: key.deviceId,\n                            kex: undefined\n                        };\n                        if (key.preKey) {\n                            attrs.kex = true;\n                        }\n\n                        if (peer.devices[key.deviceId])\n                            encryptedElement.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n                        else\n                            myKeys.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n\n                    }\n                    encryptedElement.up().cnode(myKeys.tree());\n\n                    encryptedElement.up().up()\n                        .c('payload').t(utils.ArrayBuffertoBase64(encryptedMessage.payload));\n\n                    $(message.tree()).find('envelope').remove();\n\n                    message.cnode(encryptedElement.tree());\n                    message.up().c('store', {\n                        xmlns: 'urn:xmpp:hints'\n                    }).up()\n                        .c('body').t('This message is encrypted using OMEMO end-to-end encryption.').up();\n\n                    return {message: message, is_trusted: encryptedMessage.is_trusted};\n                }).catch((msg) => {\n                });\n            },\n\n            hasChanges: function (o1, o2) {\n                let obj1 = _.clone(o1), obj2 = _.clone(o2);\n                for (let d in obj1) {\n                    delete obj2[d];\n                }\n                for (let d in obj2) {\n                    delete obj1[d];\n                }\n                return Object.keys(obj1).length || Object.keys(obj2).length;\n            },\n\n            receiveHeadlineMessage: function (message) {\n                if (!this.account.omemo || (this.account.omemo && this.cid != this.account.omemo.cid))\n                    return;\n                let $message = $(message),\n                    from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n                    node = $message.find('items').attr('node');\n                if ($message.find('event[xmlns=\"' + Strophe.NS.PUBSUB + '#event\"]').length) {\n                    if (node == `${Strophe.NS.OMEMO}:devices`) {\n                        let devices = this.account.getConnectionForIQ().omemo.parseUserDevices($message);\n                        if (from_jid === this.account.get('jid')) {\n                            let has_devices = this.own_devices && Object.keys(this.own_devices).length,\n                                has_changes = this.hasChanges(this.own_devices, devices);\n                            this.account.getConnectionForIQ().omemo.devices = devices;\n                            let device_id = this.get('device_id'),\n                                device = this.account.getConnectionForIQ().omemo.devices[device_id];\n                            if (has_changes) {\n                                this.account.trigger(\"devices_updated\");\n                            }\n                            if (has_devices && has_changes) {\n                                this.account.trigger('trusting_updated');\n                            }\n                        }\n                        else {\n                            let peer = this.getPeer(from_jid),\n                                has_devices = peer.devices && Object.keys(peer.devices).length,\n                                has_changes = this.hasChanges(peer.devices, devices);\n                            peer.updateDevices(devices);\n                            if (has_devices && has_changes) {\n                                this.account.trigger('trusting_updated');\n                            }\n                        }\n                        return;\n                    }\n                    if (node == `${Strophe.NS.OMEMO}:bundles`) {\n                        let $item = $message.find('items item').first(),\n                            device_id = $item.attr('id'),\n                            $bundle = $item.children(`bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`), device;\n                        if (from_jid === this.account.get('jid')) {\n                            let devices = this.account.getConnectionForIQ().omemo.devices\n                            if (devices && devices[device_id]) {\n                                if (!this.own_devices[device_id])\n                                    this.own_devices[device_id] = new xabber.Device({jid: this.account.get('jid'), id: device_id}, { account: this.account, store: this.store});\n                                device = this.own_devices[device_id];\n                            }\n                        } else {\n                            let peer = this.peers.get(from_jid);\n                            if (peer) {\n                                device = peer.devices[device_id];\n                            }\n                        }\n                        if (device) {\n                            let ik = $bundle.find(`ik`).text(),\n                                device_ik = device.get(`ik`), preKeys = [];\n                            if (!ik) {\n                                device.set('ik', null);\n                                return;\n                            }\n                            $bundle.find('prekeys pk').each((i, pk) => {\n                                let $pk = $(pk);\n                                preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                            });\n                            device.preKeys = preKeys;\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            device_ik && (device_ik = utils.ArrayBuffertoBase64(device_ik));\n                            if (!_.isUndefined(device_ik) && device_ik != ik)\n                                this.account.trigger('trusting_updated');\n                        }\n                    }\n                }\n            },\n\n            receiveChatMessage: function (message, options, deferred) {\n                options = options || {};\n                let $message = $(message);\n                if ($message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length) {\n                    if ($message.find('result[xmlns=\"' + Strophe.NS.MAM + '\"]').length)\n                        _.extend(options, {\n                            is_mam: true,\n                            is_archived: true\n                        });\n                    if ($message.find('[xmlns=\"' + Strophe.NS.CARBONS + '\"]').length)\n                        options.carbon_copied = true;\n\n                    let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n                        jid = (Strophe.getBareJidFromJid($msg.attr('from')) === this.account.get('jid') ? Strophe.getBareJidFromJid($msg.attr('to')) : Strophe.getBareJidFromJid($msg.attr('from'))) || options.from_jid,\n                        contact = this.account.contacts.get(options.conversation ? options.conversation : jid),\n                        stanza_id = $msg.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n                        cached_msg = stanza_id && this.cached_messages.getMessage(contact, stanza_id);\n\n                    if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid') && options.carbon_copied)\n                        return;\n\n                    if (cached_msg) {\n                        if (!options.replaced) {\n                            options.encrypted = true;\n                            this.getTrusted($message).then((is_trusted) => {\n                                options.is_trusted = is_trusted;\n                                $message.find('body').remove();\n                                $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                                if (options.gallery && deferred)\n                                    deferred.resolve($message);\n                                this.account.chats.receiveChatMessage($message[0], options);\n                            });\n                            return;\n                        }\n                        else if (options.replaced && $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid') == this.get('device_id')) {\n                            options.encrypted = true;\n                            $message.find('body').remove();\n                            $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                            let chat = this.account.chats.getChat(contact, 'encrypted');\n                            chat && chat.messages.createFromStanza($message, options);\n                            let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                            if (msg_item) {\n                                msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                                chat && chat.item_view.updateLastMessage(chat.last_message);\n                            }\n                            return;\n                        }\n                    }\n\n                    if (options.replaced) {\n                        this.decrypt(message.children('replace').children('message'), options).then((decrypted_msg) => {\n                            if (decrypted_msg) {\n                                options.encrypted = true;\n                                stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                                $message.find('body').remove();\n                                $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                                let chat = this.account.chats.getChat(contact, 'encrypted');\n                                chat && chat.messages.createFromStanza($message, options);\n                                let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                                if (msg_item) {\n                                    msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                                    chat && chat.item_view.updateLastMessage(chat.last_message);\n                                }\n                            }\n                        });\n                    } else {\n                        this.getTrusted($message).then((is_trusted) => {\n                            options.is_trusted = is_trusted;\n                            return this.decrypt(message);\n                        }).then((decrypted_msg) => {\n                            if (decrypted_msg) {\n                                options.encrypted = true;\n                                stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                                $message.find('body').remove();\n                            }\n                            else {\n                                if (decrypted_msg === null) {\n                                    this.account.chats.getChat(contact, 'encrypted').item_view.updateLastMessage();\n                                    return;\n                                }\n                                options.not_encrypted = true;\n                                delete options.is_trusted;\n                            }\n                            $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                            if (options.gallery && decrypted_msg && deferred)\n                                deferred.resolve($message);\n                            else if (options.gallery && deferred)\n                                deferred.reject();\n                            this.account.chats.receiveChatMessage($message[0], options);\n                        }).catch(() => {\n                            if (options.synced_msg && !options.decryption_retry) {\n                                this.receiveChatMessage($message[0], _.extend(options, {decryption_retry: true}));\n                                return;\n                            }\n                            options.not_encrypted = true;\n                            delete options.is_trusted;\n                            $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).remove();\n                            if (options.gallery && deferred)\n                                deferred.reject();\n                            this.account.chats.receiveChatMessage($message[0], options);\n                        });\n                    }\n                    if (options.gallery && deferred)\n                        deferred.reject();\n                }\n                if (options.gallery && deferred)\n                    deferred.reject();\n            },\n\n            checkOwnFingerprints: async function () {\n                return new Promise((resolve, reject) => {\n                    let is_trusted = true,\n                        dfd = new $.Deferred(), counter = 0;\n                    dfd.done((t) => {\n                        let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                        resolve(trust);\n                    });\n                    if (Object.keys(this.own_devices).length) {\n                        counter = Object.keys(this.own_devices).length;\n                        for (let device_id in this.own_devices) {\n                            let device = this.own_devices[device_id];\n                            if (device_id == this.get('device_id')) {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                                continue;\n                            }\n                            if (device.get('fingerprint')) {\n                                let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                                if (trusted === undefined && is_trusted !== null)\n                                    is_trusted = undefined;\n                                if (trusted === null)\n                                    is_trusted = null;\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            } else if (device.get('ik')) {\n                                device.set('fingerprint', device.generateFingerprint());\n                                let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                                if (trusted === undefined && is_trusted !== null)\n                                    is_trusted = undefined;\n                                if (trusted === null)\n                                    is_trusted = null;\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            } else {\n                                if (device.get('ik') === null) {\n                                    counter--;\n                                    !counter && dfd.resolve(is_trusted);\n                                    continue;\n                                }\n                                device.getBundle().then(({pk, spk, ik}) => {\n                                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                                    device.set('fingerprint', device.generateFingerprint());\n                                    let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                                    if (trusted === undefined && is_trusted !== null)\n                                        is_trusted = undefined;\n                                    if (trusted === null)\n                                        is_trusted = null;\n                                    counter--;\n                                    !counter && dfd.resolve(is_trusted);\n                                }).catch(() => {\n                                    counter--;\n                                    !counter && dfd.resolve(is_trusted);\n                                });\n                            }\n                        }\n                    }\n                    else {\n                        this.getMyDevices().then(() => {\n                            this.onOwnDevicesUpdated().then(() => {\n                                counter = Object.keys(this.own_devices).length;\n                                for (let device_id in this.own_devices) {\n                                    if (device_id == this.get('device_id')) {\n                                        counter--;\n                                        !counter && dfd.resolve(is_trusted);\n                                        continue;\n                                    }\n                                    let device = this.own_devices[device_id];\n                                    if (device.get('fingerprint')) {\n                                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                                        if (trusted === undefined && is_trusted !== null)\n                                            is_trusted = undefined;\n                                        if (trusted === null)\n                                            is_trusted = null;\n                                        counter--;\n                                        !counter && dfd.resolve(is_trusted);\n                                    } else {\n                                        counter--;\n                                        !counter && dfd.resolve(is_trusted);\n                                    }\n                                }\n                            });\n                        });\n                    }\n                });\n            },\n\n            checkContactFingerprints: function (contact) {\n                return new Promise((resolve, reject) => {\n                    let is_trusted = true,\n                        peer = this.getPeer(contact.get('jid')),\n                        dfd = new $.Deferred(), counter = 0;\n                    dfd.done((t) => {\n                        let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                        contact.trigger('update_trusted', trust);\n                        resolve(trust);\n                    });\n                    if (Object.keys(peer.devices).length) {\n                        counter = Object.keys(peer.devices).length;\n                        for (let device_id in peer.devices) {\n                            let device = peer.devices[device_id];\n                            if (device.get('fingerprint')) {\n                                let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                                if (trusted === undefined && is_trusted !== null)\n                                    is_trusted = undefined;\n                                if (trusted === null)\n                                    is_trusted = null;\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            } else if (device.get('ik')) {\n                                device.set('fingerprint', device.generateFingerprint());\n                                let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                                if (trusted === undefined && is_trusted !== null)\n                                    is_trusted = undefined;\n                                if (trusted === null)\n                                    is_trusted = null;\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            } else {\n                                if (device.get('ik') === null) {\n                                    counter--;\n                                    if (!counter) {\n                                        if (Object.keys(peer.devices).length === 1)\n                                            is_trusted = 'nil';\n                                        dfd.resolve(is_trusted);\n                                    }\n                                    continue;\n                                }\n                                device.getBundle().then(({pk, spk, ik}) => {\n                                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                                    device.set('fingerprint', device.generateFingerprint());\n                                    let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                                    if (trusted === undefined && is_trusted !== null)\n                                        is_trusted = undefined;\n                                    if (trusted === null)\n                                        is_trusted = null;\n                                    counter--;\n                                    !counter && dfd.resolve(is_trusted);\n                                }).catch(() => {\n                                    counter--;\n                                    if (!counter) {\n                                        if (Object.keys(peer.devices).length === 1)\n                                            is_trusted = 'nil';\n                                        dfd.resolve(is_trusted);\n                                    }\n                                });\n                            }\n                        }\n                    } else {\n                        peer.getDevicesNode().then(() => {\n                            counter = Object.keys(peer.devices).length;\n                            !counter && dfd.resolve('nil');\n                            for (let device_id in peer.devices) {\n                                let device = peer.devices[device_id];\n                                device.getBundle().then(({pk, spk, ik}) => {\n                                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                                    device.set('fingerprint', device.generateFingerprint());\n                                    let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                                    if (trusted === undefined && is_trusted !== null)\n                                        is_trusted = undefined;\n                                    if (trusted === null) {\n                                        if (Object.keys(peer.devices).length === 1)\n                                            is_trusted = 'nil';\n                                        else\n                                            is_trusted = null;\n                                    }\n                                    counter--;\n                                    !counter && dfd.resolve(is_trusted);\n                                }).catch(() => {\n                                    counter--;\n                                    if (!counter) {\n                                        if (Object.keys(peer.devices).length === 1)\n                                            is_trusted = 'nil';\n                                        dfd.resolve(is_trusted);\n                                    }\n                                });\n                            }\n                        });\n\n                    }\n                });\n            },\n\n            getTrusted: async function ($message) {\n                let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n                    from_jid = Strophe.getBareJidFromJid($msg.attr('from')),\n                    to_jid = Strophe.getBareJidFromJid($msg.attr('to')),\n                    contact = this.account.contacts.mergeContact(from_jid === this.account.get('jid') ? to_jid : from_jid);\n\n                let own_trusted = await this.checkOwnFingerprints(),\n                    contact_trusted = await this.checkContactFingerprints(contact);\n                if (own_trusted === 'error' || (own_trusted === 'none' && contact_trusted !== 'error')) {\n                    return own_trusted;\n                } else if (contact_trusted === 'error' || contact_trusted === 'none') {\n                    return contact_trusted;\n                } else {\n                    let device_id = $message.find('encrypted header').attr('sid'),\n                        peer = this.getPeer(contact.get('jid')),\n                        device = peer.devices[device_id];\n                    if (device) {\n                        if (device.get('fingerprint')) {\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === false) {\n                                return 'untrusted';\n                            }\n                        }\n                    }\n                    return true;\n                }\n            },\n\n            receiveMessage: function (message) {\n                let $message = $(message),\n                    type = $message.attr('type');\n                if (type === 'headline') {\n                    return this.receiveHeadlineMessage(message);\n                }\n            },\n\n            parseEncrypted: function ($encrypted) {\n                let $payload = $encrypted.children(`payload`),\n                    $header = $encrypted.children('header'),\n                    payload = utils.fromBase64toArrayBuffer($payload.text()),\n                    sid = Number($header.attr('sid'));\n\n                let keys = $header.find(`key`).get().map(function(keyElement) {\n                    return {\n                        preKey: $(keyElement).attr('kex') === 'true',\n                        ciphertext: utils.fromBase64toArrayBuffer($(keyElement).text()),\n                        deviceId: parseInt($(keyElement).attr('rid'))\n                    };\n                });\n\n                return {sid, keys, payload};\n            },\n\n            getPeer: function (jid) {\n                if (!this.peers.get(jid))\n                    this.peers.create({jid}, {account:this.account});\n                return this.peers.get(jid);\n            },\n\n            decrypt: async function (message, options) {\n                let $message = $(message),\n                    from_jid = Strophe.getBareJidFromJid($message.attr('from')) || options.from_jid,\n                    $encrypted;\n\n                if ($message.find('result[xmlns=\"'+Strophe.NS.MAM+'\"]').length) {\n                    let $m = $message.find('message').first();\n                    from_jid = Strophe.getBareJidFromJid($m.attr('from'));\n                    $encrypted = $message.children(`result`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n                }\n                else if ($message.find('[xmlns=\"'+Strophe.NS.CARBONS+'\"]').length){\n                    $encrypted = $message.children(`[xmlns=\"${Strophe.NS.CARBONS}\"]`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n                }\n                else\n                    $encrypted = $message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n\n                let encryptedData = this.parseEncrypted($encrypted),\n                    deviceId = this.get('device_id'),\n                    ownPreKeysArr =  encryptedData.keys.filter(preKey => preKey.deviceId == deviceId),\n                    ownPreKey = ownPreKeysArr[0];\n                if (!ownPreKey)\n                    return null;\n                let peer = this.getPeer(from_jid),\n                    exportedKey = await peer.decrypt(encryptedData.sid, ownPreKey.ciphertext, ownPreKey.preKey);\n                if (!exportedKey)\n                    return;\n                let exportedMasterKey = exportedKey.slice(0, 32),\n                    HMACData = exportedKey.slice(32);\n\n                return utils.AES.decrypt(exportedMasterKey, HMACData, encryptedData.payload);\n            },\n\n            toBase64: function (arrayBuffer) {\n                return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n            },\n\n            publish: function (spk, ik, pks) {\n                if (!this.account.connection)\n                    return;\n                let conn_omemo = this.account.getConnectionForIQ().omemo,\n                    prekeys = [];\n                pks.forEach((pk) => {\n                    let id = pk.keyId,\n                        pubKey = utils.ArrayBuffertoBase64(pk.keyPair.pubKey),\n                        privKey = utils.ArrayBuffertoBase64(pk.keyPair.privKey),\n                        key = JSON.stringify({pubKey, privKey});\n                    if (!pk.signature) {\n                        prekeys.push({id: id, key: pubKey});\n                        this.prekeys.put({id, key});\n                    }\n                });\n                conn_omemo.configNode(() => {\n                    conn_omemo.publishBundle({\n                        spk: {id: spk.keyId, key: utils.ArrayBuffertoBase64(spk.keyPair.pubKey)},\n                        spks: utils.ArrayBuffertoBase64(spk.signature),\n                        ik:  utils.ArrayBuffertoBase64(ik),\n                        pks: prekeys,\n                        device_id: this.get('device_id')\n                    });\n                });\n            },\n\n            removePreKey: async function (id) {\n                if (!this.account)\n                    return;\n                let bundle = this.bundle,\n                    removed_pk = this.bundle.preKeys.find(p => p.keyId === id && !p.signature);\n                if (!removed_pk)\n                    return;\n                let pubKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.pubKey),\n                    privKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.privKey),\n                    key = JSON.stringify({pubKey, privKey}),\n                    idx = this.bundle.preKeys.indexOf(removed_pk);\n                bundle.preKeys.splice(idx, 1);\n                this.own_used_prekeys.put({id, key});\n                this.prekeys.remove(id);\n                if (bundle.preKeys.length && bundle.preKeys.length < constants.MIN_PREKEYS_COUNT) {\n                    let missing_keys = constants.PREKEYS_COUNT - bundle.preKeys.length,\n                        last_id = _.sortBy(xabber.accounts.connected[0].omemo.bundle.preKeys, 'keyId').last().keyId;\n                    for (let i = ++last_id; last_id + missing_keys; i++)\n                        await this.bundle.generatePreKey(i);\n                    this.account.omemo.publishBundle();\n                }\n                else\n                    this.account.omemo.publishBundle();\n            },\n\n            cacheSession: function (attrs) {\n                let id = attrs.id,\n                    session = attrs.rec,\n                    sessions = _.clone(this.get('sessions'));\n                _.isArray(sessions) && (sessions = {});\n                sessions[id] = session;\n                this.save('sessions', sessions);\n            },\n\n            removeSession: function (id) {\n                let sessions = _.clone(this.get('sessions'));\n                _.isArray(sessions) && (sessions = {});\n                delete sessions[id];\n                this.save('sessions', sessions);\n            },\n\n            getSession: function (id) {\n                let sessions = _.clone(this.get('sessions'));\n                return sessions[id];\n            },\n\n            publishBundle: async function () {\n                if (!this.bundle)\n                    return;\n                let spk = this.bundle.preKeys.find(pk => pk.signature),\n                    ik = await this.store.getIdentityKeyPair(),\n                    pks = this.bundle.preKeys;\n                if (!spk || !ik) {\n                    this.set('resend_bundle', true);\n                    return;\n                }\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.account.get('jid'), id: this.get('device_id')}, () => {\n                        this.publish(spk, ik.pubKey, pks);\n                    }, (err) => {\n                        if (($(err).find('error').attr('code') == 404))\n                            this.account.getConnectionForIQ().omemo.createBundleNode(() => {\n                                this.publish(spk, ik.pubKey, pks);\n                            });\n                    });\n            },\n\n            onOwnDevicesUpdated: async function () {\n                return new Promise((resolve, reject) => {\n                    let conn = this.account.getConnectionForIQ();\n                    if (conn && conn.omemo && conn.omemo.devices) {\n                        for (let d in this.own_devices) {\n                            if (!conn.omemo.devices[d]) {\n                                this.account.omemo.removeSession('session' + this.own_devices[d].address.toString());\n                                delete this.own_devices[d];\n                            }\n                        }\n                        let counter = Object.keys(conn.omemo.devices).length;\n                        for (let device_id in conn.omemo.devices) {\n                            if (!this.own_devices[device_id])\n                                this.own_devices[device_id] = new xabber.Device({\n                                    jid: this.account.get('jid'),\n                                    id: device_id\n                                }, {account: this.account, store: this.store});\n                            let device = this.own_devices[device_id],\n                                label = conn.omemo.devices[device_id].label;\n                            if (!device.get('ik')) {\n                                if (device.get('ik') === null) {\n                                    counter--;\n                                    !counter && resolve();\n                                    continue;\n                                }\n                                device.getBundle().then(({pk, spk, ik}) => {\n                                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                                    let fingerprint = device.generateFingerprint();\n                                    if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                                        device.set('fingerprint', fingerprint);\n                                    counter--;\n                                    !counter && resolve();\n                                }).catch(() => {\n                                    counter--;\n                                    !counter && resolve();\n                                });\n                            } else if (!device.get('fingerprint')) {\n                                device.set('fingerprint', device.generateFingerprint());\n                                counter--;\n                                !counter && resolve();\n                            } else {\n                                counter--;\n                                !counter && resolve();\n                            }\n                            label && device.set('label', label);\n                        }\n                    }\n                });\n            }\n        });\n\n        xabber.DecryptedMessages = Backbone.ModelWithStorage.extend({\n            defaults: {\n                messages: {}\n            },\n\n            getMessage: function (contact, stanza_id) {\n                let messages = _.clone(this.get('messages')),\n                    contact_messages = messages[contact.get('jid')] || {};\n                return contact_messages[stanza_id];\n            },\n\n            putMessage: function (contact, stanza_id, message) {\n                let messages = _.clone(this.get('messages')),\n                    contact_messages = messages[contact.get('jid')] || {};\n                contact_messages[stanza_id] = message;\n                messages[contact.get('jid')] = contact_messages;\n                this.save('messages', messages);\n            },\n\n            removeMessage: function (attrs, contact) {\n                let origin_id = attrs.origin_id;\n                let messages = _.clone(this.get('messages')),\n                    contact_messages = messages[contact.get('jid')] || {};\n                delete contact_messages[origin_id];\n                messages[contact.get('jid')] = contact_messages;\n                this.save('messages', messages);\n            },\n\n            updateMessage: function (attrs, contact) {\n                let stanza_id = attrs.stanza_id,\n                    origin_id = attrs.origin_id,\n                    messages = _.clone(this.get('messages')),\n                    contact_messages = messages[contact.get('jid')] || {},\n                    message = contact_messages[origin_id];\n                if (origin_id)\n                    this.removeMessage({origin_id}, contact);\n                if (stanza_id)\n                    this.putMessage(contact, stanza_id, message);\n            }\n        });\n\n        xabber.SignalProtocolStore = Backbone.Model.extend({\n            initialize: function () {\n                this.Direction = {\n                    SENDING: 1,\n                    RECEIVING: 2\n                };\n                this.store = {};\n            },\n\n            getIdentityKeyPair: function () {\n                return Promise.resolve(this.get('identityKey'));\n            },\n\n            getLocalRegistrationId: function () {\n                return Promise.resolve(this.get('registrationId'));\n            },\n\n            put: function (key, value) {\n                if (key === undefined || value === undefined || key === null || value === null)\n                    throw new Error(\"Tried to store undefined/null\");\n                this.store[key] = value;\n            },\n\n            get: function (key, defaultValue) {\n                if (key === null || key === undefined)\n                    throw new Error(\"Tried to get value for undefined/null key\");\n                if (key in this.store) {\n                    return this.store[key];\n                } else {\n                    return defaultValue;\n                }\n            },\n\n            remove: function (key) {\n                if (key === null || key === undefined)\n                    throw new Error(\"Tried to remove value for undefined/null key\");\n                delete this.store[key];\n            },\n\n            isTrustedIdentity: function (identifier, identityKey, direction) {\n                if (identifier === null || identifier === undefined) {\n                    throw new Error(\"tried to check identity key for undefined/null key\");\n                }\n                if (!(identityKey instanceof ArrayBuffer)) {\n                    throw new Error(\"Expected identityKey to be an ArrayBuffer\");\n                }\n                let trusted = this.get('identityKey' + identifier);\n                if (trusted === undefined) {\n                    return Promise.resolve(true);\n                }\n                return Promise.resolve(util.toString(identityKey) === util.toString(trusted));\n            },\n\n            loadIdentityKey: function (identifier) {\n                if (identifier === null || identifier === undefined)\n                    throw new Error(\"Tried to get identity key for undefined/null key\");\n                return Promise.resolve(this.get('identityKey' + identifier));\n            },\n\n            saveIdentity: function (identifier, identityKey) {\n                if (identifier === null || identifier === undefined)\n                    throw new Error(\"Tried to put identity key for undefined/null key\");\n\n                let address = new SignalProtocolAddress.fromString(identifier);\n\n                let existing = this.get('identityKey' + address.getName());\n                this.put('identityKey' + address.getName(), identityKey);\n\n                if (existing && libsignal.toString(identityKey) !== libsignal.toString(existing)) {\n                    return Promise.resolve(true);\n                } else {\n                    return Promise.resolve(false);\n                }\n\n            },\n\n            /* Returns a prekeypair object or undefined */\n            loadPreKey: function (keyId) {\n                let res = this.get('25519KeypreKey' + keyId);\n                if (res !== undefined) {\n                    res = {pubKey: res.pubKey, privKey: res.privKey};\n                }\n                return Promise.resolve(res);\n            },\n\n            storePreKey: function (keyId, keyPair) {\n                return Promise.resolve(this.put('25519KeypreKey' + keyId, keyPair));\n            },\n\n            removePreKey: function (keyId) {\n                this.trigger('prekey_removed', keyId);\n                // return Promise.resolve(this.remove('25519KeypreKey' + keyId));\n            },\n\n            /* Returns a signed keypair object or undefined */\n            loadSignedPreKey: function (keyId) {\n                let res = this.get('25519KeysignedKey' + keyId);\n                if (res !== undefined) {\n                    res = {pubKey: res.pubKey, privKey: res.privKey};\n                }\n                return Promise.resolve(res);\n            },\n\n            storeSignedPreKey: function (keyId, keyPair) {\n                return Promise.resolve(this.put('25519KeysignedKey' + keyId, keyPair));\n            },\n\n            removeSignedPreKey: function (keyId) {\n                return Promise.resolve(this.remove('25519KeysignedKey' + keyId));\n            },\n\n            loadSession: function (identifier) {\n                return Promise.resolve(this.get('session' + identifier));\n            },\n\n            hasSession: function (identifier) {\n                return !!this.get('session' + identifier)\n            },\n\n            storeSession: function (identifier, record) {\n                this.trigger('session_stored', {id: 'session' + identifier, rec: record});\n                return Promise.resolve(this.put('session' + identifier, record));\n            },\n\n            removeSession: function (identifier) {\n                return Promise.resolve(this.remove('session' + identifier));\n            },\n\n            getAllSessions: function (identifier) {\n                let sessions = [];\n                for (let id in this.store) {\n                    if (id.startsWith('session' + identifier)) {\n                        sessions.push({id: id, session: this.store[id]});\n                    }\n                }\n                return Promise.resolve(sessions);\n            },\n\n            removeAllSessions: function (identifier) {\n                for (let id in this.store) {\n                    if (id.startsWith('session' + identifier)) {\n                        delete this.store[id];\n                    }\n                }\n                return Promise.resolve();\n            }\n        });\n\n        xabber.OMEMOEnablePlaceholder = xabber.BasicView.extend({\n            className: 'omemo-enable-placeholder',\n\n            events: {\n                'click .btn-enable': 'enableOmemo',\n                'click .btn-escape': 'closeOmemoPlaceholder'\n            },\n\n            _initialize: function (options) {\n                this.account = options.account;\n                this.updateColorScheme();\n                this.$el.html(templates.omemo_enable({jid: this.account.get('jid')}));\n                xabber.placeholders_wrap.$el.append(this.$el);\n                xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n                xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n                this.account.session.on(\"change:connected\", this.updateConnected, this);\n                this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n                this.account.settings.on(\"change:omemo\", this.onOmemoChange, this);\n            },\n\n            updateColorScheme: function () {\n                let color = this.account.settings.get('color');\n                this.$el.attr('data-color', color);\n            },\n\n            onUpdatedScreen: function () {\n                if (!this.account.omemo_enable_placeholder || this.account.omemo_enable_placeholder.cid !== this.cid)\n                    return;\n                this.$el.detach();\n                xabber.placeholders_wrap.$el.append(this.$el);\n                xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n            },\n\n            updateConnected: function () {\n                if (!this.account.isConnected())\n                    this.close();\n            },\n\n            enableOmemo: function () {\n                this.account.settings.save('omemo', true);\n                this.close();\n                this.account.omemo = new xabber.Omemo({id: 'omemo'}, {\n                    account: this.account,\n                    storage_name: xabber.getStorageName() + '-omemo-settings-' + this.account.get('jid'),\n                    fetch: 'before'\n                });\n                setTimeout(() => {\n                    this.account.omemo.onConnected();\n                }, 2000);\n            },\n\n            closeOmemoPlaceholder: function () {\n                this.account.settings.save('omemo', false);\n                this.close();\n            },\n\n            onOmemoChange: function () {\n                if (this.account.settings.get('omemo'))\n                    this.close();\n            },\n\n            close: function () {\n                this.trigger('remove') && this.remove();\n                this.account.omemo_enable_placeholder = undefined;\n                xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n            }\n        });\n\n        xabber.Account.addInitPlugin(function () {\n            if (!this.settings.get('omemo'))\n                return;\n            this.omemo = new xabber.Omemo({id: 'omemo'}, {\n                account: this,\n                storage_name: xabber.getStorageName() + '-omemo-settings-' + this.get('jid'),\n                fetch: 'before'\n            });\n        });\n\n        xabber.Account.addConnPlugin(function () {\n            if (!this.settings.get('omemo'))\n                return;\n            this.omemo.onConnected();\n        }, true, true);\n\n        return xabber;\n    };\n});","define(\"xabber-searching\", function () {\n    return function (xabber) {\n        let env = xabber.env,\n            constants = env.constants,\n            templates = env.templates.searching,\n            utils = env.utils,\n            $ = env.$,\n            $iq = env.$iq,\n            Strophe = env.Strophe,\n            _ = env._,\n            Images = utils.images;\n\n        xabber.DiscoveringView = xabber.BasicView.extend({\n            className: 'searching-main noselect',\n            template: templates.searching_wide,\n            ps_selector: '.chats-list-wrap',\n            ps_settings: {\n                wheelPropagation: true,\n                theme: 'existing-chats-list'\n            },\n\n            avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n            events: {\n                \"click .account-field .dropdown-content\": \"selectAccount\",\n                \"click .btn-cancel\": \"close\",\n                \"click .btn-search\": \"search\",\n                \"click .existing-chat-wrap\": \"getChatProperties\",\n                \"keyup .search-input\": \"keyUp\"\n            },\n\n            _initialize: function () {\n                this.data.on(\"change:color\", this.colorUpdated, this);\n                this.$('.searching-properties-field .dropdown-button').on('click', () => {\n                    this.toggleProperties();\n                });\n            },\n\n            render: function (options) {\n                this.endDiscovering();\n                this.data.set('color','#9E9E9E');\n                options || (options = {});\n                let accounts = xabber.accounts.connected,\n                    jid = options.jid || '';\n                this.$('.single-acc').showIf(accounts.length === 1);\n                this.$('.multiple-acc').hideIf(accounts.length === 1);\n                this.$('.account-field .dropdown-content').empty();\n                _.each(accounts, (account) => {\n                    this.$('.account-field .dropdown-content').append(\n                        this.renderAccountItem(account));\n                });\n                if (accounts.length)\n                    this.bindAccount(accounts[0]);\n                this.$('#select-searching-properties .account-field .dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                });\n                return this;\n            },\n\n            toggleProperties: function () {\n                let is_visible = this.isPropertiesVisible();\n                this.$('#select-searching-properties').slideToggle(\"fast\");\n                this.$('.arrow').switchClass('mdi-chevron-up', !is_visible);\n                this.$('.arrow').switchClass('mdi-chevron-down', is_visible);\n            },\n\n            isPropertiesVisible: function () {\n                if (this.$('#select-searching-properties').css('display') === 'none')\n                    return false;\n                else\n                    return true;\n            },\n\n            discover: function () {\n                let domain = _.escape(this.$('.search-input.simple-input-field').val());\n                if (domain) {\n                    if (this.isPropertiesVisible())\n                        this.toggleProperties();\n                    this.$('.searching-more').html(\"\");\n                    let searching_title = this.$('#searching_property_title').val(),\n                        searching_sort_by = this.$('#searching_property_sort_by').val();\n                    this.$('.searching-result-wrap .preloader-wrapper').show();\n                    this.searchExistingGroupChats(domain);\n                }\n            },\n\n            setColor: function () {\n                if (this.account) {\n                    let color = this.account.settings.get('color');\n                    this.data.set('color', color);\n                }\n            },\n\n            colorUpdated: function () {\n                let color = this.data.get('color');\n                this.$el.attr('data-color', color);\n            },\n\n            keyUp: function (ev) {\n                if (this.$('.search-input').val() === \"\")\n                    this.$('.btn-search').addClass('none-active');\n                else\n                    this.$('.btn-search').removeClass('none-active');\n                if (ev.keyCode === constants.KEY_ENTER)\n                    this.discover();\n            },\n\n            searchExistingGroupChats: function (domain) {\n                this.account.connection.disco.items((domain), null, this.getGroupchatService.bind(this), this.onDiscoveringError.bind(this));\n            },\n\n            onDiscoveringError: function (error) {\n                this.endDiscovering();\n                this.$('.chats-list').html(\"\");\n                this.$('.result-string').text(xabber.getString(\"discover__no_matches\", [$(error).attr('from')]));\n            },\n\n            endDiscovering: function () {\n                this.$('.searching-result-wrap .preloader-wrapper').hide();\n            },\n\n            getGroupchatService: function (stanza) {\n                $(stanza).find('query item').each((idx, item) => {\n                    if ($(item).attr('node') === Strophe.NS.GROUP_CHAT) {\n                        let jid = $(item).attr('jid');\n                        this.getGroupchatFeatures(jid);\n                    }\n                });\n                this.endDiscovering();\n            },\n\n            getGroupchatFeatures: function (jid) {\n                let iq = $iq({type: 'get', to: jid})\n                    .c('query', {xmlns: Strophe.NS.DISCO_INFO, node: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq, this.getServerInfo.bind(this), this.onDiscoveringError.bind(this));\n            },\n\n            getServerInfo: function (stanza) {\n                $(stanza).find('query identity').each((idx, item) => {\n                    let $item = $(item);\n                    if (($item.attr('category') === 'conference') && ($item.attr('type') === 'server')) {\n                        let jid = $(stanza).attr('from');\n                        this.getChatsFromSever(jid);\n                    }\n                });\n            },\n\n            getChatsFromSever: function (jid) {\n                let iq = $iq({type: 'get', to: jid}).c('query', {xmlns: Strophe.NS.DISCO_ITEMS, node: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq, (stanza) => {\n                    this.$('.chats-list').html(\"\");\n                    $(stanza).find('query item').each((idx, item) => {\n                        let $item = $(item),\n                            name = $item.attr('name'),\n                            jid = $item.attr('jid'),\n                            $chat_item_html = $(templates.existing_groupchat_item({name: name, jid: jid, color: this.account.settings.get('color')})),\n                            avatar = Images.getDefaultAvatar(name);\n                        $chat_item_html.find('.circle-avatar').setAvatar(avatar, 32);\n                        $chat_item_html.appendTo(this.$('.searching-result-wrap .chats-list'));\n                    });\n                    this.$('.result-string').text(xabber.getString(\"discover__text_discovered_groups\", [$(stanza).find('query item').length, this.account.get('jid')]));\n                });\n            },\n\n            bindAccount: function (account) {\n                this.account = account;\n                this.$('.account-field .dropdown-button .account-item-wrap')\n                    .replaceWith(this.renderAccountItem(account));\n                this.setColor();\n            },\n\n            renderAccountItem: function (account) {\n                let $item = $(templates.searching_account_item({jid: account.get('jid')}));\n                return $item;\n            },\n\n            selectAccount: function (ev) {\n                let $item = $(ev.target).closest('.account-item-wrap'),\n                    account = xabber.accounts.get($item.data('jid'));\n                this.bindAccount(account);\n            },\n\n            getChatProperties: function (ev) {\n                let $target = $(ev.target).closest('.existing-chat-wrap'),\n                    jid = $target.data('jid'),\n                    name = $target.data('name'),\n                    request_iq = $iq({type: 'get', to: jid})\n                        .c('query', {xmlns: Strophe.NS.DISCO_INFO});\n                this.account.sendIQFast(request_iq, (iq_response) => {\n                    let $iq_response = $(iq_response),\n                        description = $iq_response.find('field[var=\"description\"] value').text(),\n                        privacy = $iq_response.find('field[var=\"anonymous\"] value').text(),\n                        membership = $iq_response.find('field[var=\"model\"] value').text(),\n                        chat_properties = {jid: jid, name: name, privacy: privacy, description: description, membership: membership};\n                    this.more_info_view = this.addChild('groupchat_properties', xabber.MoreInfoView,\n                        {model: this, chat_properties: chat_properties, el: this.$('.searching-more')[0]})\n                });\n            }\n        });\n\n        xabber.MoreInfoView = xabber.BasicView.extend({\n            className: 'searching-main noselect',\n            template: templates.existing_groupchat_details_view,\n\n            events: {\n                \"click .btn-join-chat\": \"joinChat\"\n            },\n\n            _initialize: function (options) {\n                this.account = this.model.account;\n                this.chat_properties = options.chat_properties;\n                this.$el.html(this.template(this.chat_properties));\n            },\n\n            render: function (options) {\n\n            },\n\n            joinChat: function () {\n                let contact = this.account.contacts.mergeContact(this.chat_properties.jid);\n                contact.set('group_chat', true);\n                contact.acceptRequest();\n                contact.pushInRoster(null, () => {\n                    contact.askRequest();\n                    contact.getMyInfo();\n                    contact.sendPresent();\n                });\n                contact.trigger(\"open_chat\", contact);\n            }\n        });\n\n        xabber.Searching = Backbone.Model.extend({\n\n            initialize: function (options) {\n                this.account = options.account;\n            },\n\n            getSearchingFields: function () {\n                let this_domain = 'xabber.com',//this.account.connection && this.account.connection.domain,\n                    iq_get = $iq({type: 'get', to: 'index.' + this_domain}).c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'});\n                this.account.sendIQFast(iq_get, this.parseSearchingFields);\n            },\n\n            parseSearchingFields: function (iq_result) {\n                let $result = $(iq_result),\n                    $fields = $result.find(`x[xmlns = \"${Strophe.NS.XDATA}\"] field`),\n                    supported_fields = [];\n                $fields.each((idx, field) => {\n                    let $field = $(field);\n                    if ($field.attr('type') !== 'hidden')\n                        supported_fields.push({var: $field.attr('var'), label: $field.attr('label')});\n                });\n            },\n        });\n\n        xabber.LocalSearchingView = xabber.BasicView.extend({\n            className: '',\n            // template:,\n\n            events: {\n\n            },\n\n            _initialize: function (options) {\n                this.account = options.account;\n            },\n\n            render: function () {\n\n            },\n\n            search: function (query) {\n            }\n        });\n\n        xabber.GlobalSearchingView = xabber.BasicView.extend({\n            className: '',\n            // template:,\n\n            events: {\n\n            },\n\n            _initialize: function (options) {\n                this.account = options.account;\n                this.indexed_chats = [];\n            },\n\n            render: function () {\n\n            },\n\n            search: function (query) {\n                this.indexed_chats = [];\n                let iq_search = $iq({to:'index.xabber.com', type: 'set'})\n                    .c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'})\n                    .c('x', {xmlns: Strophe.NS.XDATA, type: 'form'})\n                    .c('field', {var: 'FORM_TYPE', type:'hidden'})\n                    .c('value').t(Strophe.NS.INDEX + '#groupchat').up().up();\n                if (query.description)\n                    iq_search.c('field', {var: 'description'})\n                        .c('value').t(query.description).up().up();\n                if (query.name)\n                    iq_search.c('field', {var: 'name'})\n                        .c('value').t(query.name).up().up();\n                if (query.model)\n                    iq_search.c('field', {var: 'model'})\n                        .c('value').t(query.model).up().up();\n                if (query.anywhere)\n                    iq_search.c('field', {var: 'anywhere'})\n                        .c('value').t(query.anywhere).up().up();\n                this.account.sendIQFast(iq_search, this.onSearched.bind(this));\n            },\n\n            onSearched: function (result) {\n                let $result = $(result),\n                    $chats = $($result.find('query item groupchat'));\n                $chats.each((idx, chat) => {\n                    let $chat = $(chat),\n                        chat_jid = $chat.attr('jid'),\n                        attrs = {jid: chat_jid},\n                        $properties = $chat.children();\n                    $properties.each((idx, property) => {\n                        let $property = $(property),\n                            property_name = $property[0].tagName.replace(/-/g, '_'),\n                            property_value = $property.text();\n                        _.extend(attrs, {[property_name]: property_value});\n                    });\n                    this.indexed_chats.push(attrs);\n                });\n            }\n        });\n\n        xabber.once(\"start\", function () {\n            this.discovering = this.wide_panel.addChild('discovering_main',\n                this.DiscoveringView);\n            /*this.local_searching = new xabber.LocalSearching;\n            this.global_searching = new xabber.GlobalSearching;*/\n        }, xabber);\n\n        return xabber;\n    };\n});","define(\"xabber-strophe\", function () {\n    return function (xabber) {\n        let env = xabber.env,\n            uuid = env.uuid,\n            $iq = env.$iq,\n            utils = env.utils,\n            Strophe = env.Strophe,\n            constants = env.constants;\n\n        Strophe.log = function (log_level, msg) {\n            let do_log = (constants.LOG_LEVEL === constants.LOG_LEVEL_DEBUG) ||\n                (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN &&\n                    log_level >= Strophe.LogLevel.WARN) ||\n                (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR &&\n                    log_level >= Strophe.LogLevel.ERROR);\n            if (do_log) {\n                console.info('Strophe log: ');\n                console.info(msg);\n            }\n            if (msg && msg.includes('policy-violation') && log_level === Strophe.LogLevel.ERROR)\n                utils.dialogs.error(msg);\n        };\n\n        Strophe.addConnectionPlugin('register', {\n            _connection: null,\n\n            //The plugin must have the init function.\n            init: function(conn) {\n                this._connection = conn;\n\n                // compute free emun index number\n                let i = 0;\n                Object.keys(Strophe.Status).forEach(function (key) {\n                    i = Math.max(i, Strophe.Status[key]);\n                });\n\n                /* extend name space\n                 *  NS.REGISTER - In-Band Registration\n                 *              from XEP 77.\n                 */\n                Strophe.addNamespace('REGISTER', 'jabber:iq:register');\n                Strophe.Status.REGIFAIL        = i + 1;\n                Strophe.Status.REGISTER        = i + 2;\n                Strophe.Status.REGISTERED      = i + 3;\n                Strophe.Status.CONFLICT        = i + 4;\n                Strophe.Status.NOTACCEPTABLE   = i + 5;\n\n                if (conn.disco) {\n                    if(conn.disco.addFeature)\n                        conn.disco.addFeature(Strophe.NS.REGISTER);\n                    if(conn.disco.addNode)\n                        conn.disco.addNode(Strophe.NS.REGISTER, {items:[]});\n                }\n\n                // hooking strophe's connection.reset\n                var self = this, reset = conn.reset.bind(conn);\n                conn.reset = function () {\n                    reset();\n                    self.instructions = \"\";\n                    self.fields = {};\n                    self.registered = false;\n                };\n\n                // hooking strophe's _connect_cb\n                var connect_cb = conn._connect_cb.bind(conn);\n                conn._connect_cb = function (req, callback, raw) {\n                    if (!self._registering) {\n                        if (self.processed_features) {\n                            // exchange Input hooks to not print the stream:features twice\n                            var xmlInput = conn.xmlInput;\n                            conn.xmlInput = Strophe.Connection.prototype.xmlInput;\n                            var rawInput = conn.rawInput;\n                            conn.rawInput = Strophe.Connection.prototype.rawInput;\n                            connect_cb(req, callback, raw);\n                            conn.xmlInput = xmlInput;\n                            conn.rawInput = rawInput;\n                            delete self.processed_features;\n                        } else {\n                            connect_cb(req, callback, raw);\n                        }\n                    } else {\n                        if(!self._check_user) {\n                            // Save this request in case we want to authenticate later\n                            self._connect_cb_data = {\n                                req: req,\n                                raw: raw\n                            };\n                            if (self._register_cb(req, callback, raw)) {\n                                // remember that we already processed stream:features\n                                self.processed_features = true;\n                                delete self._registering;\n                            }\n                        }\n                        else {\n                            if (self._register_cb_check_user(req, callback, raw)) {\n                                // remember that we already processed stream:features\n                                self.processed_features = true;\n                                delete self._registering;\n                            }\n\n                        }\n                    }\n                };\n\n                // hooking strophe`s authenticate\n                var auth_old = conn.authenticate.bind(conn);\n                conn.authenticate = function(matched) {\n                    if (typeof matched === \"undefined\") {\n                        var conn = this._connection;\n\n                        if (!this.fields.username || !this.domain || !this.fields.password) {\n                            Strophe.info(\"Register a JID first!\");\n                            return;\n                        }\n\n                        var jid = this.fields.username + \"@\" + this.domain;\n\n                        conn.jid = jid;\n                        conn.authzid = Strophe.getBareJidFromJid(conn.jid);\n                        conn.authcid = Strophe.getNodeFromJid(conn.jid);\n                        conn.pass = this.fields.password;\n\n                        var req = this._connect_cb_data.req;\n                        var callback = conn.connect_callback;\n                        var raw = this._connect_cb_data.raw;\n                        conn._connect_cb(req, callback, raw);\n                    } else {\n                        auth_old(matched);\n                    }\n                }.bind(this);\n\n            },\n\n            /** Function: connect\n             *  Starts the registration process.\n             *\n             *  As the registration process proceeds, the user supplied callback will\n             *  be triggered multiple times with status updates.  The callback\n             *  should take two arguments - the status code and the error condition.\n             *\n             *  The status code will be one of the values in the Strophe.Status\n             *  constants.  The error condition will be one of the conditions\n             *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n             *\n             *  Please see XEP 77 for a more detailed explanation of the optional\n             *  parameters below.\n             *\n             *  Parameters:\n             *    (String) domain - The xmpp server's Domain.  This will be the server,\n             *      which will be contacted to register a new JID.\n             *      The server has to provide and allow In-Band Registration (XEP-0077).\n             *    (Function) callback The connect callback function.\n             *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n             *      time the server will wait before returning an empty result for\n             *      a request.  The default setting of 60 seconds is recommended.\n             *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n             *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n             *      number of connections the server will hold at one time.  This\n             *      should almost always be set to 1 (the default).\n             */\n            connect: function(domain, callback, wait, hold, route) {\n                var conn = this._connection;\n                this.domain = Strophe.getDomainFromJid(domain);\n                this.instructions = \"\";\n                this.fields = {};\n                this.registered = false;\n\n                this._registering = true;\n\n                conn.connect(this.domain, \"\", callback, wait, hold, route);\n            },\n\n\n            connect_check_user: function(domain, callback, wait, hold, route) {\n                var conn = this._connection;\n                this.domain = Strophe.getDomainFromJid(domain);\n                this.instructions = \"\";\n                this.fields = {};\n                this.registered = false;\n\n                this._registering = true;\n                this._check_user = true;\n\n                conn.connect(this.domain, \"\", callback, wait, hold, route);\n            },\n\n            connect_change_password: function(jid, password, callback, wait, hold, route) {\n                var conn = this._connection;\n                this.domain = Strophe.getDomainFromJid(jid);\n                this.instructions = \"\";\n                this.fields = {};\n                conn.registerSASLMechanisms([Strophe.SASLAnonymous,\n                    Strophe.SASLExternal,\n                    Strophe.SASLMD5,\n                    Strophe.SASLPlain,\n                    Strophe.SASLSHA1]);\n\n                conn.connect(jid, password, callback, wait, hold, route);\n            },\n\n            /** PrivateFunction: _register_cb\n             *  _Private_ handler for initial registration request.\n             *\n             *  This handler is used to process the initial registration request\n             *  response from the BOSH server. It is used to set up a bosh session\n             *  and requesting registration fields from host.\n             *\n             *  Parameters:\n             *    (Strophe.Request) req - The current request.\n             */\n            _register_cb: function (req, _callback, raw) {\n                var conn = this._connection;\n\n                Strophe.info(\"_register_cb was called\");\n                conn.connected = true;\n\n                var bodyWrap = conn._proto._reqToData(req);\n                if (!bodyWrap) { return; }\n\n                if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n                    if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                        conn.xmlInput(bodyWrap.childNodes[0]);\n                    } else {\n                        conn.xmlInput(bodyWrap);\n                    }\n                }\n                if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n                    if (raw) {\n                        conn.rawInput(raw);\n                    } else {\n                        conn.rawInput(Strophe.serialize(bodyWrap));\n                    }\n                }\n\n                var conncheck = conn._proto._connect_cb(bodyWrap);\n                if (conncheck === Strophe.Status.CONNFAIL) {\n                    return false;\n                }\n\n                // Check for the stream:features tag\n                var register = bodyWrap.getElementsByTagName(\"register\");\n                var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n                if (register.length === 0 && mechanisms.length === 0) {\n                    conn._proto._no_auth_received(_callback);\n                    return false;\n                }\n\n                if (register.length === 0) {\n                    conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n                    return true;\n                }\n\n                // send a get request for registration, to get all required data fields\n                conn._addSysHandler(this._get_register_cb.bind(this),\n                    null, \"iq\", null, null);\n                conn.send($iq({type: \"get\", id: uuid(), to: this.domain }).c(\"query\",\n                    {xmlns: Strophe.NS.REGISTER}).tree());\n\n                return true;\n            },\n            _register_cb_check_user: function (req, _callback, raw) {\n                var conn = this._connection;\n\n                Strophe.info(\"_register_cb was called\");\n                conn.connected = true;\n\n                var bodyWrap = conn._proto._reqToData(req);\n                if (!bodyWrap) { return; }\n\n                if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n                    if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                        conn.xmlInput(bodyWrap.childNodes[0]);\n                    } else {\n                        conn.xmlInput(bodyWrap);\n                    }\n                }\n                if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n                    if (raw) {\n                        conn.rawInput(raw);\n                    } else {\n                        conn.rawInput(Strophe.serialize(bodyWrap));\n                    }\n                }\n\n                var conncheck = conn._proto._connect_cb(bodyWrap);\n                if (conncheck === Strophe.Status.CONNFAIL) {\n                    return false;\n                }\n\n                // Check for the stream:features tag\n                var register = bodyWrap.getElementsByTagName(\"register\");\n                var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n                if (register.length === 0 && mechanisms.length === 0) {\n                    conn._proto._no_auth_received(_callback);\n                    return false;\n                }\n\n                if (register.length === 0) {\n                    conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n                    return true;\n                }\n                conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n\n                return true;\n            },\n\n            /** PrivateFunction: _get_register_cb\n             *  _Private_ handler for Registration Fields Request.\n             *\n             *  Parameters:\n             *    (XMLElement) elem - The query stanza.\n             *\n             *  Returns:\n             *    false to remove SHOULD contain the registration information currentlSHOULD contain the registration information currentlSHOULD contain the registration information currentlthe handler.\n             */\n            _get_register_cb: function (stanza) {\n                var i, query, field, conn = this._connection;\n                query = stanza.getElementsByTagName(\"query\");\n\n                if (query.length !== 1) {\n                    conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                    return false;\n                }\n                query = query[0];\n                // get required fields\n                for (i = 0; i < query.childNodes.length; i++) {\n                    field = query.childNodes[i];\n                    if (field.tagName.toLowerCase() === 'instructions') {\n                        // this is a special element\n                        // it provides info about given data fields in a textual way.\n                        conn.register.instructions = Strophe.getText(field);\n                        continue;\n                    } else if (field.tagName.toLowerCase() === 'x') {\n                        // ignore x for now\n                        continue;\n                    }\n                    conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n                }\n                conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n                return false;\n            },\n\n            /** Function: submit\n             *  Submits Registration data.\n             *\n             *  As the registration process proceeds, the user supplied callback will\n             *  be triggered with status code Strophe.Status.REGISTER. At this point\n             *  the user should fill all required fields in connection.register.fields\n             *  and invoke this function to procceed in the registration process.\n             */\n            submit: function () {\n                var lang = xabber.settings.language;\n                (lang === 'default') && (lang = xabber.get('default_language'));\n                var i, name, query, fields, conn = this._connection;\n                query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER});\n\n                // set required fields\n                fields = Object.keys(this.fields);\n                for (i = 0; i < fields.length; i++) {\n                    name = fields[i];\n                    query.c(name).t(this.fields[name]).up();\n                }\n\n                // providing required information\n                conn._addSysHandler(this._submit_cb.bind(this),\n                    null, \"iq\", null, null);\n                conn.send(query);\n            },\n\n            /** PrivateFunction: _submit_cb\n             *  _Private_ handler for submitted registration information.\n             *\n             *  Parameters:\n             *    (XMLElement) elem - The query stanza.\n             *\n             *  Returns:\n             *    false to remove the handler.\n             */\n            _submit_cb: function (stanza) {\n                var i, query, field, error = null, conn = this._connection;\n\n                query = stanza.getElementsByTagName(\"query\");\n                if (query.length > 0) {\n                    query = query[0];\n                    // update fields\n                    for (i = 0; i < query.childNodes.length; i++) {\n                        field = query.childNodes[i];\n                        if (field.tagName.toLowerCase() === 'instructions') {\n                            // this is a special element\n                            // it provides info about given data fields in a textual way\n                            this.instructions = Strophe.getText(field);\n                            continue;\n                        }\n                        this.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n                    }\n                }\n\n                if (stanza.getAttribute(\"type\") === \"error\") {\n                    error = stanza.getElementsByTagName(\"error\");\n                    let error_text = stanza.getElementsByTagName(\"text\");\n                    if (error_text.length > 0)\n                        error_text = error_text[0].innerHTML;\n                    if (error.length !== 1) {\n                        conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                        return false;\n                    }\n\n                    Strophe.info(\"Registration failed.\");\n\n                    // this is either 'conflict' or 'not-acceptable'\n                    error = error[0].firstChild.tagName.toLowerCase();\n                    if (error === 'conflict') {\n                        conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n                    } else if (error === 'not-acceptable') {\n                        conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n                    } else {\n                        conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n                    }\n                } else {\n                    Strophe.info(\"Registration successful.\");\n\n                    conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n                }\n\n                return false;\n            }\n        });\n\n\n        let utf16to8 = function (str) {\n            let i, c;\n            let out = \"\";\n            let len = str.length;\n            for (i = 0; i < len; i++) {\n                c = str.charCodeAt(i);\n                if ((c >= 0x0000) && (c <= 0x007F)) {\n                    out += str.charAt(i);\n                } else if (c > 0x07FF) {\n                    out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n                    out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\n                    out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n                } else {\n                    out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\n                    out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n                }\n            }\n            return out;\n        };\n\n        Strophe.SASLHOTP = function() {};\n        Strophe.SASLHOTP.prototype = new Strophe.SASLMechanism(\"HOTP\", true, 100);\n\n        Strophe.SASLHOTP.prototype.test = function (connection) {\n            return true;\n        };\n\n        Strophe.SASLHOTP.prototype.onChallenge = function (connection) {\n            let auth_str = String.fromCharCode(0) + connection.authcid +\n                String.fromCharCode(0) + connection.hotp_pass;\n            return utf16to8(auth_str);\n        };\n\n        Strophe.ConnectionManager = function (CONNECTION_URL, options) {\n            options = options || {};\n            this.connection = new Strophe.Connection(CONNECTION_URL, options);\n        };\n\n        Strophe.ConnectionManager.prototype = {\n            connect: function (auth_type, jid, password, callback) {\n                this.connection.mechanisms = {};\n                this.auth_type = auth_type || 'password';\n                if (this.auth_type === 'password') {\n                    this.connection.registerSASLMechanisms([Strophe.SASLAnonymous,\n                        Strophe.SASLExternal,\n                        Strophe.SASLMD5,\n                        Strophe.SASLPlain,\n                        Strophe.SASLSHA1]);\n                } else if (this.auth_type === 'x-token') {\n                    this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n                    delete this.connection._sasl_data[\"server-signature\"];\n                    utils.generateHOTP(utils.fromBase64toArrayBuffer(password), this.connection.counter).then((pass) => {\n                        this.connection.hotp_pass = pass;\n                    }).then(() => {\n                        this.connection.connect(jid, password, callback)\n                    });\n                    return;\n                } else {\n                    this.connection.registerSASLMechanisms([Strophe.SASLXOAuth2]);\n                    delete this.connection._sasl_data[\"server-signature\"];\n                }\n                this.connection.connect(jid, password, callback);\n            },\n\n            reconnect: function (callback) {\n                if (this.auth_type === 'x-token') {\n                    if (!this.connection.mechanisms[\"HOTP\"]) {\n                        this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n                        delete this.connection._sasl_data[\"server-signature\"];\n                    }\n                    if (this.connection.account && this.connection.account.get('hotp_counter'))\n                        this.connection.counter = this.connection.account.get('hotp_counter');\n                    utils.generateHOTP(utils.fromBase64toArrayBuffer(this.connection.pass), this.connection.counter).then((pass) => {\n                        this.connection.hotp_pass = pass;\n                    }).then(() => {\n                        this.connection.connect(this.connection.jid, this.connection.pass, callback)\n                    });\n                    return;\n                }\n                this.connection.connect(this.connection.jid, this.connection.pass, callback);\n            }\n        };\n\n        _.extend(Strophe.Connection.prototype, {\n\n            _attemptSASLAuth: function (mechanisms) {\n                mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n                var i = 0, mechanism_found = false;\n                for (i = 0; i < mechanisms.length; ++i) {\n                    if (!mechanisms[i].prototype.test(this)) {\n                        continue;\n                    }\n                    this._sasl_success_handler = this._addSysHandler(\n                        this._sasl_success_cb.bind(this), null,\n                        \"success\", null, null);\n                    this._sasl_failure_handler = this._addSysHandler(\n                        this._sasl_failure_cb.bind(this), null,\n                        \"failure\", null, null);\n                    this._sasl_challenge_handler = this._addSysHandler(\n                        this._sasl_challenge_cb.bind(this), null,\n                        \"challenge\", null, null);\n\n                    this._sasl_mechanism = new mechanisms[i]();\n                    this._sasl_mechanism.onStart(this);\n\n                    var request_auth_exchange = $build(\"auth\", {\n                        xmlns: Strophe.NS.SASL,\n                        mechanism: this._sasl_mechanism.name\n                    });\n                    if (this._sasl_mechanism.isClientFirst) {\n                        var response = this._sasl_mechanism.onChallenge(this, null);\n                        request_auth_exchange.t(btoa(response));\n                    }\n                    this.send(request_auth_exchange.tree());\n                    mechanism_found = true;\n                    if (this.account && this.counter && this.account.get('x_token') && this._sasl_mechanism.name === \"HOTP\") {\n                        this.counter++;\n                        this.account.save({\n                            hotp_counter: this.counter,\n                        });\n                    }\n                    break;\n                }\n                return mechanism_found;\n            },\n\n            _sasl_auth1_cb: function (elem) {\n                this.features = elem;\n                let i, child;\n                for (i = 0; i < elem.childNodes.length; i++) {\n                    child = elem.childNodes[i];\n                    if (child.nodeName === 'bind') {\n                        this.do_bind = true;\n                    }\n\n                    if (child.nodeName === 'session') {\n                        this.do_session = true;\n                    }\n\n                    if ((child.nodeName === 'devices') && child.namespaceURI === Strophe.NS.AUTH_DEVICES && this.options['x-token']) {\n                        this.x_token_auth = true;\n                    }\n\n                    if ((child.nodeName === 'synchronization') && (child.namespaceURI === Strophe.NS.SYNCHRONIZATION)) {\n                        this.account.server_features.create({\n                            'var': child.namespaceURI,\n                            from: this.domain\n                        });\n                        this.do_synchronization = true;\n                    }\n\n                    if ((child.nodeName === 'sub') && (child.namespaceURI === Strophe.NS.SUBSCRIPTION_PREAPPROVAL)) {\n                        this.account.server_features.create({\n                            'var': child.namespaceURI,\n                            from: this.domain\n                        });\n                    }\n                }\n\n                if (!this.do_bind) {\n                    this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n                    return false;\n                } else {\n                    if (this.x_token_auth && (!this.x_token || (parseInt(this.x_token.expire)*1000 < env.moment.now()))) {\n                        this.getXToken((success) => {\n                            let token = $(success).find('secret').text(),\n                                expires_at = $(success).find('expire').text(),\n                                token_uid = $(success).find('device').attr('id');\n                            this.x_token = {token: token, expire: expires_at, token_uid: token_uid,};\n                            this.counter = 1;\n                            this.pass = token;\n                            this._send_auth_bind();\n                            if (this.account) {\n                                this.account.save({\n                                    hotp_counter: this.counter,\n                                    password: null,\n                                });\n                            }\n                        }, () => {\n                            this._send_auth_bind();\n                        });\n                    }\n                    else {\n                        this._send_auth_bind();\n                    }\n                }\n                return false;\n            },\n\n            _send_auth_bind() {\n                this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\n                    null, \"_bind_auth_2\");\n\n                let resource = Strophe.getResourceFromJid(this.jid);\n                if (resource) {\n                    this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                        .c('bind', {xmlns: Strophe.NS.BIND})\n                        .c('resource', {}).t(resource).tree());\n                } else {\n                    this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                        .c('bind', {xmlns: Strophe.NS.BIND})\n                        .tree());\n                }\n            },\n\n            getXToken: function (callback, errback) {\n                let uniq_id = uuid(), old_token,\n                    iq = $iq({\n                    type: 'set',\n                    to: this.domain,\n                    id: uniq_id\n                }).c('register', { xmlns: Strophe.NS.AUTH_DEVICES});\n                this.account && (old_token = this.account.get('old_device_token'));\n                if (old_token && old_token.token && old_token.token_uid){\n                    iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES, id: old_token.token_uid})\n                        .c('client').t(xabber.get('client_name')).up()\n                        .c('secret').t(old_token.token).up()\n                        .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n                    this.account.save('old_device_token', null);\n                } else {\n                    iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES})\n                        .c('client').t(xabber.get('client_name')).up()\n                        .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n                }\n                handler = function (stanza) {\n                    let iqtype = stanza.getAttribute('type');\n                    if (iqtype == 'result') {\n                        if (callback) {\n                            callback(stanza);\n                        }\n                    } else if (iqtype == 'error') {\n                        if (errback) {\n                            errback(stanza);\n                        }\n                    } else {\n                        throw {\n                            name: \"StropheError\",\n                            message: \"Got bad IQ type of \" + iqtype\n                        };\n                    }\n                };\n\n                this._addSysHandler(handler.bind(this), Strophe.NS.AUTH_DEVICES, 'iq', 'result' , uniq_id);\n\n                this.send(iq.tree());\n            }\n        });\n\n        _.extend(Strophe.Websocket.prototype, {\n\n            _onIdle: function () {\n                var data = this._conn._data;\n                if (data.length > 0 && !this._conn.paused) {\n                    for (var i = 0; i < data.length; i++) {\n                        if (data[i] !== null) {\n                            var stanza, rawStanza;\n                            if (data[i] === \"restart\") {\n                                stanza = this._buildStream().tree();\n                            } else {\n                                stanza = data[i];\n                            }\n                            rawStanza = Strophe.serialize(stanza);\n                            this._conn.xmlOutput(stanza);\n                            this._conn.rawOutput(rawStanza);\n                            if (this.socket && this.socket.readyState === 1){\n                                this.socket.send(rawStanza);\n                            } else {\n                                console.log('data went to pending');\n                                console.log(this._conn._data.slice(i));\n                                this._conn.account._pending_stanzas.push(this._conn._data.slice(i))\n                                this._conn._data = [];\n                                return;\n                            }\n                        }\n                    }\n                    this._conn._data = [];\n                }\n            },\n        });\n\n        Strophe.xmlunescape = function (text) {\n            let reg_exp = {\n                '&amp;': '&',\n                '&lt;': '<',\n                '&gt;': '>',\n                '&quot;': '\"',\n                '&apos;': \"'\"\n            };\n            let escaper = function(match) {\n                return reg_exp[match];\n            };\n            // Regexes for identifying a key that needs to be escaped\n            let source = '(?:' + _.keys(reg_exp).join('|') + ')',\n                testRegexp = RegExp(source),\n                replaceRegexp = RegExp(source, 'g');\n            text = text == null ? '' : '' + text;\n            return testRegexp.test(text) ? text.replace(replaceRegexp, escaper) : text;\n        };\n\n        Strophe.addNamespace('ATTENTION', 'urn:xmpp:attention:0');\n        Strophe.addNamespace('CARBONS', 'urn:xmpp:carbons:2');\n        Strophe.addNamespace('FORWARD', 'urn:xmpp:forward:0');\n        Strophe.addNamespace('HASH', 'urn:xmpp:hashes:2');\n        Strophe.addNamespace('HINTS', 'urn:xmpp:hints');\n        Strophe.addNamespace('SCE', 'urn:xmpp:sce:1');\n        Strophe.addNamespace('RECEIPTS', 'urn:xmpp:receipts');\n        Strophe.addNamespace('JINGLE', 'urn:xmpp:jingle:1');\n        Strophe.addNamespace('JINGLE_SECURITY_STUB', 'urn:xmpp:jingle:security:stub:0');\n        Strophe.addNamespace('JINGLE_MSG', 'urn:xmpp:jingle-message:0');\n        Strophe.addNamespace('JINGLE_RTP', 'urn:xmpp:jingle:apps:rtp:1');\n        Strophe.addNamespace('JINGLE_TRANSPORTS_ICE', 'urn:xmpp:jingle:transports:ice-udp:1');\n        Strophe.addNamespace('ADDRESS', 'http://jabber.org/protocol/address');\n        Strophe.addNamespace('CHATSTATES', 'http://jabber.org/protocol/chatstates');\n        Strophe.addNamespace('EXTENDED_CHATSTATES', 'https://xabber.com/protocol/extended-chatstates');\n        Strophe.addNamespace('HTTP_AUTH', 'http://jabber.org/protocol/http-auth');\n        Strophe.addNamespace('AUTH_TOKENS', 'https://xabber.com/protocol/auth-tokens');\n        Strophe.addNamespace('AUTH_DEVICES', 'https://xabber.com/protocol/devices');\n        Strophe.addNamespace('SYNCHRONIZATION', 'https://xabber.com/protocol/synchronization');\n        Strophe.addNamespace('SYNCHRONIZATION_REGULAR_CHAT', 'https://xabber.com/protocol/synchronization#chat');\n        Strophe.addNamespace('SYNCHRONIZATION_CHANNEL', 'https://xabber.com/protocol/channels');\n        Strophe.addNamespace('SYNCHRONIZATION_OLD_OMEMO', 'urn:xmpp:omemo:1');\n        Strophe.addNamespace('SYNCHRONIZATION_OMEMO', 'urn:xmpp:omemo:2');\n        Strophe.addNamespace('DELIVERY', 'https://xabber.com/protocol/delivery');\n        Strophe.addNamespace('ARCHIVE', 'https://xabber.com/protocol/archive');\n        Strophe.addNamespace('MAM', 'urn:xmpp:mam:2');\n        Strophe.addNamespace('RSM', 'http://jabber.org/protocol/rsm');\n        Strophe.addNamespace('DATAFORM', 'jabber:x:data');\n        Strophe.addNamespace('CHAT_MARKERS', 'urn:xmpp:chat-markers:0');\n        Strophe.addNamespace('VCARD_UPDATE', 'vcard-temp:x:update');\n        Strophe.addNamespace('HTTP_UPLOAD', 'urn:xmpp:http:upload');\n        Strophe.addNamespace('BLOCKING', 'urn:xmpp:blocking');\n        Strophe.addNamespace('SEARCH', 'jabber:iq:search');\n        Strophe.addNamespace('PRIVATE_STORAGE', 'jabber:iq:private');\n        Strophe.addNamespace('MEDIA', 'urn:xmpp:media-element');\n        Strophe.addNamespace('LAST', 'jabber:iq:last');\n        Strophe.addNamespace('GROUP_CHAT', 'https://xabber.com/protocol/groups');\n        Strophe.addNamespace('GROUP_CHAT_INVITE', 'https://xabber.com/protocol/groups#invite');\n        Strophe.addNamespace('GROUP_CHAT_INVITE_HTTP', 'http://xabber.com/protocol/groups#invite');\n        Strophe.addNamespace('WEBCHAT', 'https://xabber.com/protocol/webchat');\n        Strophe.addNamespace('INDEX', 'https://xabber.com/protocol/index');\n        Strophe.addNamespace('PUBSUB', 'http://jabber.org/protocol/pubsub');\n        Strophe.addNamespace('PUBSUB_AVATAR_DATA', 'urn:xmpp:avatar:data');\n        Strophe.addNamespace('PUBSUB_AVATAR_METADATA', 'urn:xmpp:avatar:metadata');\n        Strophe.addNamespace('PUBSUB_AVATAR_METADATA_THUMBNAIL', 'urn:xmpp:thumbs:1');\n        Strophe.addNamespace('REWRITE', 'https://xabber.com/protocol/rewrite');\n        Strophe.addNamespace('REFERENCE', 'https://xabber.com/protocol/references');\n        Strophe.addNamespace('GEOLOC', 'http://jabber.org/protocol/geoloc');\n        Strophe.addNamespace('MARKUP', 'https://xabber.com/protocol/markup');\n        Strophe.addNamespace('VOICE_MESSAGE', 'https://xabber.com/protocol/voice-messages');\n        Strophe.addNamespace('FILES', 'https://xabber.com/protocol/files');\n        Strophe.addNamespace('SUBSCRIPTION_PREAPPROVAL', 'urn:xmpp:features:pre-approval');\n        Strophe.addNamespace('OGP', 'https://xabber.com/protocol/ogp');\n        Strophe.addNamespace('URLDISCO', 'urn:xabber:http:url');\n        Strophe.addNamespace('MEDIAGALLERY', 'urn:xabber:http:url:mediagallery');\n        return xabber;\n    };\n});\n","define(\"xabber-templates\", [\n    \"underscore\",\n    \"jquery\",\n\n    \"raw-loader!~/templates/base/dialog.html\",\n    \"raw-loader!~/templates/base/fingerprints.html\",\n    \"raw-loader!~/templates/base/fingerprint_item.html\",\n    \"raw-loader!~/templates/base/jingle_message_calling.html\",\n    \"raw-loader!~/templates/base/plyr_player_popup.html\",\n    \"raw-loader!~/templates/base/input_widget.html\",\n    \"raw-loader!~/templates/base/toolbar.html\",\n    \"raw-loader!~/templates/base/settings.html\",\n    \"raw-loader!~/templates/base/about.html\",\n    \"raw-loader!~/templates/base/omemo_enable.html\",\n    \"raw-loader!~/templates/base/backgrounds_gallery.html\",\n    \"raw-loader!~/templates/base/color_picker.html\",\n    \"raw-loader!~/templates/base/color_scheme.html\",\n\n    \"raw-loader!~/templates/api_service/xabber_login.html\",\n    \"raw-loader!~/templates/api_service/xabber_login_by_email.html\",\n    \"raw-loader!~/templates/api_service/xabber_account.html\",\n    \"raw-loader!~/templates/api_service/linked_email_item.html\",\n    \"raw-loader!~/templates/api_service/add_xabber_account.html\",\n    \"raw-loader!~/templates/api_service/sync_settings.html\",\n    \"raw-loader!~/templates/api_service/sync_settings_account_item.html\",\n\n    \"raw-loader!~/templates/accounts/xmpp_login.html\",\n    \"raw-loader!~/templates/accounts/add_account.html\",\n    \"raw-loader!~/templates/accounts/change_password.html\",\n    \"raw-loader!~/templates/accounts/toolbar_item.html\",\n    \"raw-loader!~/templates/accounts/media_gallery_account_file.html\",\n    \"raw-loader!~/templates/accounts/media_gallery_account.html\",\n    \"raw-loader!~/templates/accounts/settings_left.html\",\n    \"raw-loader!~/templates/accounts/settings_right.html\",\n    \"raw-loader!~/templates/accounts/existing_groupchat_item.html\",\n    \"raw-loader!~/templates/accounts/resource.html\",\n    \"raw-loader!~/templates/accounts/resource_right.html\",\n    \"raw-loader!~/templates/accounts/webcam_panel.html\",\n    \"raw-loader!~/templates/accounts/emoji_panel.html\",\n    \"raw-loader!~/templates/accounts/emoji_picker.html\",\n    \"raw-loader!~/templates/accounts/emoji_picker_tabs.html\",\n    \"raw-loader!~/templates/accounts/global_settings_item.html\",\n    \"raw-loader!~/templates/accounts/change_status.html\",\n    \"raw-loader!~/templates/accounts/token_item.html\",\n    \"raw-loader!~/templates/accounts/current_token_item.html\",\n    \"raw-loader!~/templates/accounts/audio_file_waveform.html\",\n    \"raw-loader!~/templates/accounts/avatars_gallery.html\",\n\n    \"raw-loader!~/templates/vcard/vcard.html\",\n    \"raw-loader!~/templates/vcard/vcard_edit.html\",\n    \"raw-loader!~/templates/vcard/vcard_right.html\",\n\n    \"raw-loader!~/templates/searching/searching_wide.html\",\n    \"raw-loader!~/templates/searching/searching_account_item.html\",\n    \"raw-loader!~/templates/searching/existing_groupchat_item.html\",\n    \"raw-loader!~/templates/searching/existing_groupchat_details_view.html\",\n\n    \"raw-loader!~/templates/contacts/roster_right.html\",\n    \"raw-loader!~/templates/contacts/roster_left.html\",\n    \"raw-loader!~/templates/contacts/account_roster_right.html\",\n    \"raw-loader!~/templates/contacts/account_roster_left.html\",\n    \"raw-loader!~/templates/contacts/roster_left.html\",\n    \"raw-loader!~/templates/contacts/group_right.html\",\n    \"raw-loader!~/templates/contacts/group_left.html\",\n    \"raw-loader!~/templates/contacts/add_contact.html\",\n    \"raw-loader!~/templates/contacts/contact_right_item.html\",\n    \"raw-loader!~/templates/contacts/contact_left_item.html\",\n    \"raw-loader!~/templates/contacts/contact_blocked_item.html\",\n    \"raw-loader!~/templates/contacts/contact_details.html\",\n    \"raw-loader!~/templates/contacts/contact_details_right.html\",\n    \"raw-loader!~/templates/contacts/roster_settings.html\",\n    \"raw-loader!~/templates/contacts/group_settings.html\",\n    \"raw-loader!~/templates/contacts/groups_checkbox_list.html\",\n    \"raw-loader!~/templates/contacts/groups_checkbox_list_contact.html\",\n    \"raw-loader!~/templates/contacts/groups_new_group.html\",\n    \"raw-loader!~/templates/contacts/groups_list.html\",\n    \"raw-loader!~/templates/contacts/add_contact_account_item.html\",\n    \"raw-loader!~/templates/contacts/contact_placeholder.html\",\n    \"raw-loader!~/templates/contacts/groups.html\",\n    \"raw-loader!~/templates/contacts/edit_contact.html\",\n    \"raw-loader!~/templates/contacts/edit_group.html\",\n    \"raw-loader!~/templates/contacts/preloader.html\",\n    \"raw-loader!~/templates/contacts/media_item.html\",\n    \"raw-loader!~/templates/contacts/media_items_empty.html\",\n    \"raw-loader!~/templates/contacts/audio_file_waveform.html\",\n    \"raw-loader!~/templates/contacts/group_chats/group_chat_properties.html\",\n    \"raw-loader!~/templates/contacts/group_chats/group_chat_properties_right.html\",\n    \"raw-loader!~/templates/contacts/group_chats/group_chat_details.html\",\n    \"raw-loader!~/templates/contacts/group_chats/group_chat_details_right.html\",\n    \"raw-loader!~/templates/contacts/group_chats/invitation.html\",\n    \"raw-loader!~/templates/contacts/group_chats/group_chat_properties_edit.html\",\n    \"raw-loader!~/templates/contacts/group_chats/default_restrictions.html\",\n    \"raw-loader!~/templates/contacts/group_chats/default_restrictions_right.html\",\n    \"raw-loader!~/templates/contacts/group_chats/group_member_item.html\",\n    \"raw-loader!~/templates/contacts/group_chats/group_member_item_right.html\",\n    \"raw-loader!~/templates/contacts/group_chats/description_input_widget.html\",\n    \"raw-loader!~/templates/contacts/group_chats/group_name_input_widget.html\",\n    \"raw-loader!~/templates/contacts/group_chats/participant_badge_input_widget.html\",\n    \"raw-loader!~/templates/contacts/group_chats/invited_member_item.html\",\n    \"raw-loader!~/templates/contacts/group_chats/add_blocked_participant_form.html\",\n    \"raw-loader!~/templates/contacts/group_chats/participant_details_right.html\",\n    \"raw-loader!~/templates/contacts/group_chats/participant_rights.html\",\n    \"raw-loader!~/templates/contacts/group_chats/restriction_item.html\",\n    \"raw-loader!~/templates/contacts/group_chats/right_expire_variants.html\",\n    \"raw-loader!~/templates/contacts/group_chats/pinned_message.html\",\n    \"raw-loader!~/templates/contacts/group_chats/participant_details_item.html\",\n    \"raw-loader!~/templates/contacts/group_chats/participant_details_item_right.html\",\n    \"raw-loader!~/templates/contacts/group_chats/participants.html\",\n    \"raw-loader!~/templates/contacts/group_chats/participants_right_panel.html\",\n    \"raw-loader!~/templates/contacts/group_chats/badge_edit_view.html\",\n    \"raw-loader!~/templates/contacts/group_chats/private_participant_details.html\",\n    \"raw-loader!~/templates/contacts/group_chats/private_participant_details_item_right.html\",\n    \"raw-loader!~/templates/contacts/group_chats/set_status.html\",\n    \"raw-loader!~/templates/contacts/group_chats/status_item.html\",\n    \"raw-loader!~/templates/contacts/group_chats/group_status.html\",\n    \"raw-loader!~/templates/contacts/group_chats/group_status_right.html\",\n    \"raw-loader!~/templates/contacts/group_chats/file_item.html\",\n\n    \"raw-loader!~/templates/chats/chats_panel.html\",\n    \"raw-loader!~/templates/chats/add_chat_account_item.html\",\n    \"raw-loader!~/templates/chats/chat_item.html\",\n    \"raw-loader!~/templates/chats/chat_head.html\",\n    \"raw-loader!~/templates/chats/send_media.html\",\n    \"raw-loader!~/templates/chats/saved_chat_head.html\",\n    \"raw-loader!~/templates/chats/chat_content.html\",\n    \"raw-loader!~/templates/chats/chat_content_contact.html\",\n    \"raw-loader!~/templates/chats/chat_bottom.html\",\n    \"raw-loader!~/templates/chats/location_popup.html\",\n    \"raw-loader!~/templates/chats/subscription_buttons.html\",\n    \"raw-loader!~/templates/chats/forward_panel.html\",\n    \"raw-loader!~/templates/chats/chat_placeholder.html\",\n    \"raw-loader!~/templates/chats/message_item.html\",\n    \"raw-loader!~/templates/chats/messages/main.html\",\n    \"raw-loader!~/templates/chats/messages/searched.html\",\n    \"raw-loader!~/templates/chats/messages/forwarded.html\",\n    \"raw-loader!~/templates/chats/messages/system.html\",\n    \"raw-loader!~/templates/chats/messages/file_upload.html\",\n    \"raw-loader!~/templates/chats/messages/loading_circle.html\",\n    \"raw-loader!~/templates/chats/messages/file.html\",\n    \"raw-loader!~/templates/chats/messages/file_loading.html\",\n    \"raw-loader!~/templates/chats/messages/link_reference.html\",\n    \"raw-loader!~/templates/chats/messages/link_reference_chat.html\",\n    \"raw-loader!~/templates/chats/messages/attached_file.html\",\n    \"raw-loader!~/templates/chats/messages/video.html\",\n    \"raw-loader!~/templates/chats/messages/location.html\",\n    \"raw-loader!~/templates/chats/messages/audio_file.html\",\n    \"raw-loader!~/templates/chats/messages/audio_file_waveform.html\",\n    \"raw-loader!~/templates/chats/messages/auth_request.html\",\n    \"raw-loader!~/templates/chats/messages/group_request.html\",\n    \"raw-loader!~/templates/chats/messages/template-for-2.html\",\n    \"raw-loader!~/templates/chats/messages/template-for-3.html\",\n    \"raw-loader!~/templates/chats/messages/template-for-4.html\",\n    \"raw-loader!~/templates/chats/messages/template-for-5.html\",\n    \"raw-loader!~/templates/chats/messages/template-for-6.html\",\n    \"raw-loader!~/templates/chats/messages/hidden-template-for-2.html\",\n    \"raw-loader!~/templates/chats/messages/hidden-template-for-3.html\",\n    \"raw-loader!~/templates/chats/messages/hidden-template-for-4.html\",\n    \"raw-loader!~/templates/chats/messages/hidden-template-for-5.html\",\n    \"raw-loader!~/templates/chats/messages/hidden-template-for-6.html\",\n    \"raw-loader!~/templates/chats/messages/images_details.html\",\n    \"raw-loader!~/templates/chats/messages/saved_main.html\",\n    \"raw-loader!~/templates/chats/group_chats/pinned_message_panel.html\",\n    \"raw-loader!~/templates/chats/group_chats/add_group_chat.html\",\n    \"raw-loader!~/templates/chats/group_chats/invitation_panel_view.html\",\n    \"raw-loader!~/templates/chats/group_chats/mention_item.html\",\n    \"raw-loader!~/templates/chats/encryption_warning.html\",\n    \"raw-loader!~/templates/chats/content_encryption_warning.html\",\n\n    \"raw-loader!~/templates/mentions/mentions_panel.html\",\n    \"raw-loader!~/templates/mentions/mentions_placeholder.html\",\n    \"raw-loader!~/templates/mentions/mention_item.html\",\n\n    \"raw-loader!~/templates/svg/ic-jabber.html\",\n    \"raw-loader!~/templates/svg/xmpp.html\",\n    \"raw-loader!~/templates/svg/account-outline.html\",\n    \"raw-loader!~/templates/svg/qrcode.html\",\n    \"raw-loader!~/templates/svg/id-outline.html\",\n    \"raw-loader!~/templates/svg/clock-outline.html\",\n    \"raw-loader!~/templates/svg/index.html\",\n    \"raw-loader!~/templates/svg/restrictions-outline.html\",\n    \"raw-loader!~/templates/svg/history.html\",\n    \"raw-loader!~/templates/svg/chevron-down.html\",\n    \"raw-loader!~/templates/svg/camera-retake.html\",\n    \"raw-loader!~/templates/svg/membership-outline.html\",\n    \"raw-loader!~/templates/svg/invite-outline.html\",\n    \"raw-loader!~/templates/svg/chevron-right-variant.html\",\n    \"raw-loader!~/templates/svg/chevron-left-variant.html\",\n    \"raw-loader!~/templates/svg/subscription-to.html\",\n    \"raw-loader!~/templates/svg/subscription-from.html\",\n    \"raw-loader!~/templates/svg/image.html\",\n    \"raw-loader!~/templates/svg/file-audio.html\",\n    \"raw-loader!~/templates/svg/file-video.html\",\n    \"raw-loader!~/templates/svg/file-document.html\",\n    \"raw-loader!~/templates/svg/file-presentation.html\",\n    \"raw-loader!~/templates/svg/file-zip.html\",\n    \"raw-loader!~/templates/svg/file.html\",\n    \"raw-loader!~/templates/svg/file-pdf.html\",\n    \"raw-loader!~/templates/svg/close.html\",\n    \"raw-loader!~/templates/svg/link.html\",\n    \"raw-loader!~/templates/svg/picture-in-picture-minimize.html\",\n    \"raw-loader!~/templates/svg/picture-in-picture-bottom-right.html\",\n    \"raw-loader!~/templates/svg/picture-in-picture-top-right.html\",\n    \"raw-loader!~/templates/svg/pause.html\",\n    \"raw-loader!~/templates/svg/volume-off.html\",\n    \"raw-loader!~/templates/svg/volume-high.html\",\n    \"raw-loader!~/templates/svg/plyr.html\",\n    \"raw-loader!~/templates/svg/plus.html\",\n    \"raw-loader!~/templates/svg/player-float.html\",\n    \"raw-loader!~/templates/svg/player-full.html\",\n    \"raw-loader!~/templates/svg/player-mini-variant.html\",\n    \"raw-loader!~/templates/svg/player-mini.html\",\n    \"raw-loader!~/templates/svg/message-bookmark-outline.html\",\n    \"raw-loader!~/templates/svg/play.html\",\n    \"raw-loader!~/templates/svg/video.html\",\n    \"raw-loader!~/templates/svg/status-outline.html\",\n    \"raw-loader!~/templates/svg/birthday-outline.html\",\n    \"raw-loader!~/templates/svg/job-outline.html\",\n    \"raw-loader!~/templates/svg/address-outline.html\",\n    \"raw-loader!~/templates/svg/email-outline.html\",\n    \"raw-loader!~/templates/svg/description-outline.html\",\n    \"raw-loader!~/templates/svg/call-outline.html\",\n    \"raw-loader!~/templates/svg/call.html\",\n    \"raw-loader!~/templates/svg/search.html\",\n    \"raw-loader!~/templates/svg/devices.html\",\n    \"raw-loader!~/templates/svg/bell.html\",\n    \"raw-loader!~/templates/svg/bell-sleep.html\",\n    \"raw-loader!~/templates/svg/bell-off.html\",\n    \"raw-loader!~/templates/svg/cancel.html\",\n    \"raw-loader!~/templates/svg/edit.html\",\n    \"raw-loader!~/templates/svg/edit-outline.html\",\n    \"raw-loader!~/templates/svg/blocked-add.html\",\n    \"raw-loader!~/templates/svg/information-outline.html\",\n    \"raw-loader!~/templates/svg/fullname.html\",\n    \"raw-loader!~/templates/svg/fullname-outline.html\",\n    \"raw-loader!~/templates/svg/ic-at.html\",\n    \"raw-loader!~/templates/svg/ic-searching.html\",\n    \"raw-loader!~/templates/svg/blocked.html\",\n    \"raw-loader!~/templates/svg/bot.html\",\n    \"raw-loader!~/templates/svg/bot-variant.html\",\n    \"raw-loader!~/templates/svg/group-incognito.html\",\n    \"raw-loader!~/templates/svg/group-invite.html\",\n    \"raw-loader!~/templates/svg/group-public.html\",\n    \"raw-loader!~/templates/svg/task.html\",\n    \"raw-loader!~/templates/svg/group-private.html\",\n    \"raw-loader!~/templates/svg/channel.html\",\n    \"raw-loader!~/templates/svg/rss.html\",\n    \"raw-loader!~/templates/svg/rss-variant.html\",\n    \"raw-loader!~/templates/svg/server.html\",\n    \"raw-loader!~/templates/svg/volume-off-variant.html\",\n    \"raw-loader!~/templates/svg/message-group.html\",\n    \"raw-loader!~/templates/svg/xabber-offline.html\",\n    \"raw-loader!~/templates/svg/xabber-online.html\",\n    \"raw-loader!~/templates/svg/saved-messages.html\",\n    \"raw-loader!~/templates/svg/palette.html\",\n    \"raw-loader!~/templates/svg/circles.html\",\n    \"raw-loader!~/templates/svg/translate.html\",\n    \"raw-loader!~/templates/svg/crosshairs-gps.html\",\n    \"raw-loader!~/templates/svg/crosshairs-question.html\",\n    \"raw-loader!~/templates/svg/crosshairs.html\",\n    \"raw-loader!~/templates/svg/map-marker-outline.html\",\n    \"raw-loader!~/templates/svg/map-marker.html\",\n    \"raw-loader!~/templates/svg/minus.html\",\n\n    \"raw-loader!~/templates/accounts/emojis.txt\",\n\n], function (_, $) {\n\n    _.templateSettings = {\n        evaluate : /\\{\\[([\\s\\S]+?)\\]\\}/g,\n        interpolate : /\\{\\{([\\s\\S]+?)\\}\\}/g\n    };\n\n    let templates = {};\n\n    let insertSvg = function (html) {\n        let $html = $('<div/>').html(html);\n        $html.find('.mdi-svg-template').each(function () {\n            let $el = $(this),\n                svg_name = $el.data('svgname');\n            $el.removeClass('mdi-svg-template').addClass('mdi-'+svg_name)\n                .attr('data-svgname', null);\n            $el.html(templates.svg[svg_name]());\n        });\n        return $html.html();\n    };\n\n    let _addTemplate = function (name, options) {\n        options || (options = {});\n        let path = name.split('.'),\n            tpl = _.template(require('raw-loader!~/templates/'+path.join('/')+'.html').default),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        if (options.is_svg) {\n            res[tpl_name] = tpl;\n        } else {\n            res[tpl_name] = function (data) {\n                return insertSvg(tpl(data));\n            };\n        }\n    };\n\n    let addJSONTemplate = function (name, ) {\n        let path = name.split('.'),\n            tpl = _.template(require('raw-loader!~/templates/'+path.join('/')+'.txt').default),//todo fix json import\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        res[tpl_name] = function (data) {\n            return insertSvg(tpl(data));\n        };\n    };\n\n    let addTemplate = function (name) {\n        _addTemplate(name, {is_svg: false});\n    };\n\n    let addSvgTemplate = function (name) {\n        _addTemplate(name, {is_svg: true});\n    };\n\n\n    addTemplate('base.dialog');\n    addTemplate('base.fingerprints');\n    addTemplate('base.fingerprint_item');\n    addTemplate('base.jingle_message_calling');\n    addTemplate('base.plyr_player_popup');\n    addTemplate('base.input_widget');\n    addTemplate('base.toolbar');\n    addTemplate('base.settings');\n    addTemplate('base.about');\n    addTemplate('base.omemo_enable');\n    addTemplate('base.backgrounds_gallery');\n    addTemplate('base.color_picker');\n    addTemplate('base.color_scheme');\n\n    addTemplate('api_service.xabber_login');\n    addTemplate('api_service.xabber_login_by_email');\n    addTemplate('api_service.add_xabber_account');\n    addTemplate('api_service.xabber_account');\n    addTemplate('api_service.linked_email_item');\n    addTemplate('api_service.sync_settings');\n    addTemplate('api_service.sync_settings_account_item');\n\n    addTemplate('accounts.xmpp_login');\n    addTemplate('accounts.add_account');\n    addTemplate('accounts.change_password');\n    addTemplate('accounts.toolbar_item');\n    addTemplate('accounts.media_gallery_account_file');\n    addTemplate('accounts.media_gallery_account');\n    addTemplate('accounts.settings_left');\n    addTemplate('accounts.settings_right');\n    addTemplate('accounts.existing_groupchat_item');\n    addTemplate('accounts.resource');\n    addTemplate('accounts.resource_right');\n    addTemplate('accounts.webcam_panel');\n    addTemplate('accounts.emoji_panel');\n    addTemplate('accounts.emoji_picker');\n    addTemplate('accounts.emoji_picker_tabs');\n    addTemplate('accounts.global_settings_item');\n    addTemplate('accounts.change_status');\n    addTemplate('accounts.token_item');\n    addTemplate('accounts.current_token_item');\n    addTemplate('accounts.audio_file_waveform');\n    addTemplate('accounts.avatars_gallery');\n\n    addTemplate('vcard.vcard');\n    addTemplate('vcard.vcard_edit');\n    addTemplate('vcard.vcard_right');\n\n    addTemplate('searching.searching_wide');\n    addTemplate('searching.searching_account_item');\n    addTemplate('searching.existing_groupchat_item');\n    addTemplate('searching.existing_groupchat_details_view');\n\n    addTemplate('contacts.roster_right');\n    addTemplate('contacts.roster_left');\n    addTemplate('contacts.account_roster_right');\n    addTemplate('contacts.account_roster_left');\n    addTemplate('contacts.group_right');\n    addTemplate('contacts.group_left');\n    addTemplate('contacts.add_contact');\n    addTemplate('contacts.contact_right_item');\n    addTemplate('contacts.contact_left_item');\n    addTemplate('contacts.contact_blocked_item');\n    addTemplate('contacts.contact_details');\n    addTemplate('contacts.contact_details_right');\n    addTemplate('contacts.roster_settings');\n    addTemplate('contacts.group_settings');\n    addTemplate('contacts.groups_checkbox_list');\n    addTemplate('contacts.groups_checkbox_list_contact');\n    addTemplate('contacts.groups_new_group');\n    addTemplate('contacts.groups_list');\n    addTemplate('contacts.add_contact_account_item');\n    addTemplate('contacts.contact_placeholder');\n    addTemplate('contacts.groups');\n    addTemplate('contacts.edit_contact');\n    addTemplate('contacts.edit_group');\n    addTemplate('contacts.preloader');\n    addTemplate('contacts.media_item');\n    addTemplate('contacts.media_items_empty');\n    addTemplate('contacts.audio_file_waveform');\n    addTemplate('contacts.group_chats.group_chat_properties');\n    addTemplate('contacts.group_chats.group_chat_properties_right');\n    addTemplate('contacts.group_chats.group_chat_details');\n    addTemplate('contacts.group_chats.group_chat_details_right');\n    addTemplate('contacts.group_chats.invitation');\n    addTemplate('contacts.group_chats.group_chat_properties_edit');\n    addTemplate('contacts.group_chats.default_restrictions');\n    addTemplate('contacts.group_chats.default_restrictions_right');\n    addTemplate('contacts.group_chats.group_member_item');\n    addTemplate('contacts.group_chats.group_member_item_right');\n    addTemplate('contacts.group_chats.description_input_widget');\n    addTemplate('contacts.group_chats.group_name_input_widget');\n    addTemplate('contacts.group_chats.participant_badge_input_widget');\n    addTemplate('contacts.group_chats.invited_member_item');\n    addTemplate('contacts.group_chats.add_blocked_participant_form');\n    addTemplate('contacts.group_chats.participant_details_right');\n    addTemplate('contacts.group_chats.participant_rights');\n    addTemplate('contacts.group_chats.restriction_item');\n    addTemplate('contacts.group_chats.right_expire_variants');\n    addTemplate('contacts.group_chats.pinned_message');\n    addTemplate('contacts.group_chats.participant_details_item_right');\n    addTemplate('contacts.group_chats.participant_details_item');\n    addTemplate('contacts.group_chats.participants');\n    addTemplate('contacts.group_chats.participants_right_panel');\n    addTemplate('contacts.group_chats.badge_edit_view');\n    addTemplate('contacts.group_chats.private_participant_details');\n    addTemplate('contacts.group_chats.private_participant_details_item_right');\n    addTemplate('contacts.group_chats.set_status');\n    addTemplate('contacts.group_chats.status_item');\n    addTemplate('contacts.group_chats.group_status');\n    addTemplate('contacts.group_chats.group_status_right');\n    addTemplate('contacts.group_chats.file_item');\n\n    addTemplate('chats.chats_panel');\n    addTemplate('chats.add_chat_account_item');\n    addTemplate('chats.chat_item');\n    addTemplate('chats.chat_head');\n    addTemplate('chats.send_media');\n    addTemplate('chats.saved_chat_head');\n    addTemplate('chats.chat_content');\n    addTemplate('chats.chat_content_contact');\n    addTemplate('chats.chat_bottom');\n    addTemplate('chats.location_popup');\n    addTemplate('chats.subscription_buttons');\n    addTemplate('chats.forward_panel');\n    addTemplate('chats.chat_placeholder');\n    addTemplate('chats.message_item');\n    addTemplate('chats.messages.main');\n    addTemplate('chats.messages.searched');\n    addTemplate('chats.messages.forwarded');\n    addTemplate('chats.messages.system');\n    addTemplate('chats.messages.file_upload');\n    addTemplate('chats.messages.loading_circle');\n    addTemplate('chats.messages.file');\n    addTemplate('chats.messages.file_loading');\n    addTemplate('chats.messages.link_reference');\n    addTemplate('chats.messages.link_reference_chat');\n    addTemplate('chats.messages.attached_file');\n    addTemplate('chats.messages.video');\n    addTemplate('chats.messages.location');\n    addTemplate('chats.messages.audio_file');\n    addTemplate('chats.messages.audio_file_waveform');\n    addTemplate('chats.messages.auth_request');\n    addTemplate('chats.messages.group_request');\n    addTemplate('chats.messages.template-for-2');\n    addTemplate('chats.messages.template-for-3');\n    addTemplate('chats.messages.template-for-4');\n    addTemplate('chats.messages.template-for-5');\n    addTemplate('chats.messages.template-for-6');\n    addTemplate('chats.messages.hidden-template-for-2');\n    addTemplate('chats.messages.hidden-template-for-3');\n    addTemplate('chats.messages.hidden-template-for-4');\n    addTemplate('chats.messages.hidden-template-for-5');\n    addTemplate('chats.messages.hidden-template-for-6');\n    addTemplate('chats.messages.images_details');\n    addTemplate('chats.messages.saved_main');\n    addTemplate('chats.group_chats.pinned_message_panel');\n    addTemplate('chats.group_chats.add_group_chat');\n    addTemplate('chats.group_chats.invitation_panel_view');\n    addTemplate('chats.group_chats.mention_item');\n    addTemplate('chats.encryption_warning');\n    addTemplate('chats.content_encryption_warning');\n\n\n    addTemplate('mentions.mentions_panel');\n    addTemplate('mentions.mentions_placeholder');\n    addTemplate('mentions.mention_item');\n\n    addSvgTemplate('svg.ic-jabber');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.account-outline');\n    addSvgTemplate('svg.qrcode');\n    addSvgTemplate('svg.id-outline');\n    addSvgTemplate('svg.clock-outline');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.restrictions-outline');\n    addSvgTemplate('svg.history');\n    addSvgTemplate('svg.chevron-down');\n    addSvgTemplate('svg.camera-retake');\n    addSvgTemplate('svg.membership-outline');\n    addSvgTemplate('svg.invite-outline');\n    addSvgTemplate('svg.chevron-right-variant');\n    addSvgTemplate('svg.chevron-left-variant');\n    addSvgTemplate('svg.subscription-to');\n    addSvgTemplate('svg.subscription-from');\n    addSvgTemplate('svg.image');\n    addSvgTemplate('svg.file-audio');\n    addSvgTemplate('svg.file-video');\n    addSvgTemplate('svg.file-document');\n    addSvgTemplate('svg.file-presentation');\n    addSvgTemplate('svg.file-zip');\n    addSvgTemplate('svg.file');\n    addSvgTemplate('svg.file-pdf');\n    addSvgTemplate('svg.close');\n    addSvgTemplate('svg.link');\n    addSvgTemplate('svg.picture-in-picture-minimize');\n    addSvgTemplate('svg.picture-in-picture-bottom-right');\n    addSvgTemplate('svg.picture-in-picture-top-right');\n    addSvgTemplate('svg.pause');\n    addSvgTemplate('svg.volume-off');\n    addSvgTemplate('svg.volume-high');\n    addSvgTemplate('svg.plyr');\n    addSvgTemplate('svg.plus');\n    addSvgTemplate('svg.player-float');\n    addSvgTemplate('svg.player-full');\n    addSvgTemplate('svg.player-mini-variant');\n    addSvgTemplate('svg.player-mini');\n    addSvgTemplate('svg.message-bookmark-outline');\n    addSvgTemplate('svg.play');\n    addSvgTemplate('svg.video');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.status-outline');\n    addSvgTemplate('svg.birthday-outline');\n    addSvgTemplate('svg.job-outline');\n    addSvgTemplate('svg.address-outline');\n    addSvgTemplate('svg.email-outline');\n    addSvgTemplate('svg.description-outline');\n    addSvgTemplate('svg.call-outline');\n    addSvgTemplate('svg.call');\n    addSvgTemplate('svg.search');\n    addSvgTemplate('svg.devices');\n    addSvgTemplate('svg.bell');\n    addSvgTemplate('svg.bell-sleep');\n    addSvgTemplate('svg.bell-off');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.edit');\n    addSvgTemplate('svg.edit-outline');\n    addSvgTemplate('svg.blocked-add');\n    addSvgTemplate('svg.information-outline');\n    addSvgTemplate('svg.fullname');\n    addSvgTemplate('svg.fullname-outline');\n    addSvgTemplate('svg.ic-at');\n    addSvgTemplate('svg.ic-searching');\n    addSvgTemplate('svg.blocked');\n    addSvgTemplate('svg.bot');\n    addSvgTemplate('svg.bot-variant');\n    addSvgTemplate('svg.group-incognito');\n    addSvgTemplate('svg.group-invite');\n    addSvgTemplate('svg.group-public');\n    addSvgTemplate('svg.task');\n    addSvgTemplate('svg.group-private');\n    addSvgTemplate('svg.channel');\n    addSvgTemplate('svg.rss');\n    addSvgTemplate('svg.rss-variant');\n    addSvgTemplate('svg.server');\n    addSvgTemplate('svg.volume-off-variant');\n    addSvgTemplate('svg.message-group');\n    addSvgTemplate('svg.xabber-offline');\n    addSvgTemplate('svg.xabber-online');\n    addSvgTemplate('svg.saved-messages');\n    addSvgTemplate('svg.palette');\n    addSvgTemplate('svg.circles');\n    addSvgTemplate('svg.translate');\n    addSvgTemplate('svg.crosshairs-gps');\n    addSvgTemplate('svg.crosshairs-question');\n    addSvgTemplate('svg.crosshairs');\n    addSvgTemplate('svg.map-marker-outline');\n    addSvgTemplate('svg.map-marker');\n    addSvgTemplate('svg.minus');\n\n    addJSONTemplate('accounts.emojis');\n\n    return templates;\n});","define(\"xabber-ui\", function () {\n  return function (xabber) {\n    let env = xabber.env,\n        constants = env.constants,\n        $ = env.$;\n\n    xabber.once(\"start\", function () {\n        $(window).on(\"keydown\", (ev) => {\n            if ((ev.ctrlKey || ev.metaKey) && ev.keyCode == constants.KEY_SHIFT || ev.shiftKey && ev.keyCode == constants.KEY_CTRL) {\n                this.shift_pressed = null;\n                this.shiftctrl_pressed = true;\n                ev.preventDefault();\n            } else if (ev.keyCode == constants.KEY_SHIFT) {\n                this.shift_pressed = true;\n                ev.preventDefault();\n            }\n            let attrs = xabber.body.screen.attributes;\n            if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n                if (xabber.body.$el.siblings('#modals').children('.open').length)\n                    return;\n                if (attrs.name === 'all-chats' && attrs.right === 'contact_details')\n                    attrs.contact.trigger('open_chat', attrs.contact);\n            }\n            if (attrs.chat_item && (attrs.name === 'mentions' || attrs.name === 'contacts' || attrs.name === 'all-chats') && (attrs.right === 'chat' || attrs.right === 'participant_messages' || attrs.right === 'message_context' || attrs.right === 'searched_messages')) {\n                if (!window.$('.message-actions-panel').hasClass('hidden')) {\n                    if (!ev.ctrlKey && !ev.metaKey) {\n                        switch (ev.keyCode) {\n                            case 67:\n                                attrs.chat_item.model.trigger('copy_selected_messages');\n                                break;\n                            case 68:\n                                attrs.chat_item.model.trigger('delete_selected_messages');\n                                break;\n                            case 69:\n                                attrs.chat_item.model.trigger('edit_selected_message');\n                                break;\n                            case 70:\n                                attrs.chat_item.model.trigger('forward_selected_messages');\n                                break;\n                            case 80:\n                                attrs.chat_item.model.trigger('pin_selected_message');\n                                break;\n                            case 82:\n                                attrs.chat_item.model.trigger('reply_selected_messages');\n                                break;\n                            case constants.KEY_ESCAPE:\n                                if (!xabber.body.screen.get('right_contact'))\n                                    attrs.chat_item.model.trigger('reset_selected_messages');\n                                break;\n                        }\n                        ev.preventDefault();\n                    }\n                }\n            }\n            });\n        $(window).on(\"keyup\", (ev) => {\n            if (!(ev.shiftKey && ev.ctrlKey))\n                this.shiftctrl_pressed = null;\n            if (ev.shiftKey && !ev.ctrlKey)\n                this.shift_pressed = true;\n            if (!ev.shiftKey)\n                this.shift_pressed = null;\n        });\n\n        this.updateLayout = function (options) {\n            options || (options = {});\n            if (this.roster_view.isVisible()) {\n                this.updateRosterLayout(options);\n            }\n            xabber.trigger('update_css', options);\n            this.body.$('.ps-container').perfectScrollbar('update');\n        };\n\n        this.updateRosterLayout = function (options) {\n            let width = this.body.$el.width(),\n                is_wide = width >= constants.WIDTH_MEDIUM,\n                is_narrow = width < constants.WIDTH_MEDIUM,\n                is_tiny = width < constants.WIDTH_TINY,\n                expanded = this.roster_view.data.get('expanded'),\n                pinned = this.roster_view.data.get('pinned');\n            this.roster_view.$('.collapsed-wrap').hideIf(expanded);\n            this.roster_view.$('.expanded-wrap').showIf(expanded);\n            this.roster_view.$('.btn-pin').hide();\n            if (is_narrow && pinned) {\n                this.roster_view.data.set({expanded: false, pinned: false});\n                return;\n            }\n            let roster_width,\n                panel_width,\n                left_panel_width,\n                right_panel_width,\n                right_contact_panel_width,\n                chat_bottom_panel_width,\n                toolbar_width = 50,\n                right_contact_panel_styles = {};\n            if (is_wide || !(is_narrow || pinned)) {\n                panel_width = 1536;\n                roster_width = 300;\n            } else if (is_narrow) {\n                panel_width = width - toolbar_width - 20 - 44;\n                roster_width = 250;\n            } else {\n                panel_width = (width - toolbar_width - 20) * 7 / 9;\n                roster_width = (width - toolbar_width - 20) * 2 / 9;\n            }\n            if (!expanded) {\n                roster_width = is_wide ? 48 : 44;\n            }\n            left_panel_width = right_contact_panel_width = 384;\n            right_panel_width = panel_width - (left_panel_width + right_contact_panel_width);\n            chat_bottom_panel_width = '100%';\n            if (is_narrow){\n                right_contact_panel_width = left_panel_width = (panel_width * 0.264) < 288 ? 288 : panel_width * 0.264;\n\n            }\n            if (right_panel_width < 512 ){\n                right_panel_width = panel_width - left_panel_width;\n                this.right_contact_panel_saveable = false;\n                right_contact_panel_styles = {\n                    position : 'absolute',\n                    right : 0,\n                    'z-index' : 499,\n                };\n                if ((right_panel_width - 384) < 128) {\n                    right_contact_panel_width = right_panel_width;\n                    this.right_contact_panel.$el.removeClass('background-click')\n                }\n                else {\n                    right_contact_panel_width = 384\n                    this.right_contact_panel.$el.addClass('background-click')\n                }\n            }\n            else {\n                this.right_contact_panel_saveable = true;\n                right_contact_panel_styles = {\n                    position : 'static',\n                    'z-index' : 0,\n                };\n                this.right_contact_panel.$el.removeClass('background-click')\n\n            }\n            this.right_contact_panel_width = right_contact_panel_width;\n\n            if (!this.body.screen.get('right_contact')) {\n                right_contact_panel_width = 0;\n                right_panel_width = panel_width - left_panel_width;\n            }\n            if (right_panel_width < 768) {\n                chat_bottom_panel_width = right_panel_width;\n            }\n\n            let panel_gap = (width - panel_width) / 2,\n                left_gap = panel_gap - toolbar_width,\n                right_gap = panel_gap - roster_width;\n            this.roster_view.$('.expanded-wrap').switchClass('solid',\n                    (!pinned && (!is_wide || right_gap < 0)));\n            right_contact_panel_styles.width = right_contact_panel_width;\n            this.chat_head.$el.switchClass('chat-head-ultra-narrow', right_panel_width <= 650);\n            this.chat_head.$el.switchClass('chat-head-narrow', right_panel_width < 750);\n            this.chat_head.$el.switchClass('chat-head-normal', (right_panel_width < 850 && right_panel_width >= 750));\n            this.chat_head.$el.switchClass('chat-head-normal-wide', (right_panel_width < 1000 && right_panel_width >= 850));\n            this.chat_head.$el.switchClass('chat-head-wide', right_panel_width > 1000);\n            this.main_panel.setCustomCss({\n                width: panel_width,\n            });\n            this.left_panel.setCustomCss({\n                width: left_panel_width,\n            });\n            this.right_panel.setCustomCss({\n                width: right_panel_width,\n            });\n            this.right_contact_panel.setCustomCss(right_contact_panel_styles);\n            this.chat_bottom.setCustomCss({\n                width: chat_bottom_panel_width,\n            });\n            this.roster_view.setCustomCss({width: roster_width});\n        };\n\n        this.on(\"update_layout\", this.updateLayout, this);\n\n        this.body.addScreen('blank', {});\n\n        this.body.addScreen('login', {\n            login: { xmpp_login: null }\n        });\n\n        this.body.addScreen('settings', {\n            blur_overlay: null,\n            toolbar: null,\n            main: {\n                wide: { settings: null },\n                placeholders: null\n            },\n            roster: null\n        });\n\n        this.body.addScreen('add_account', {\n            blur_overlay: null,\n            toolbar: null,\n            login: null\n        });\n\n        this.body.addScreen('about', {\n            blur_overlay: null,\n            toolbar: null,\n            main: {\n                wide: { about: null },\n                placeholders: null\n            },\n            roster: null\n        });\n\n        let path_acc_settings_left = new this.ViewPath('account.settings_left'),\n            path_acc_settings_right = new this.ViewPath('account.settings_right'),\n            path_acc_vcard_edit = new this.ViewPath('account.vcard_edit');\n\n        this.body.addScreen('account_settings', {\n            blur_overlay: null,\n            toolbar: null,\n            main: {\n                wide: {\n                    account_settings: {\n                        left: path_acc_settings_left,\n                        right: path_acc_settings_right\n                    }\n                },\n                placeholders: null\n            },\n            roster: null\n        });\n\n        this.account_settings.patchTree = function (tree, options) {\n            if (options.right === 'vcard_edit') {\n                return {\n                    left: path_acc_settings_left,\n                    right: path_acc_vcard_edit\n                };\n            }\n        };\n\n\n        let path_chat_head = new this.ViewPath('chat_item.content.head'),\n            path_chat_body = new this.ViewPath('chat_item.content'),\n            path_chat_bottom = new this.ViewPath('chat_item.content.bottom'),\n            path_group_invitation = new this.ViewPath('contact.invitation'),\n            path_enable_view = new this.ViewPath('omemo_item.account.omemo_enable_view'),\n            path_contact_details = new this.ViewPath('contact.details_view'),\n            path_contact_details_right = new this.ViewPath('contact.details_view_right'),\n            path_contact_details_right_encrypted = new this.ViewPath('contact.details_view_right_encrypted'),\n            path_participant_messages = new this.ViewPath('model.messages_view'),\n            path_details_participants = new this.ViewPath('contact.details_view.participants');\n\n        this.body.addScreen('contacts', {\n            blur_overlay: null,\n            toolbar: null,\n            main: {\n                left: { contacts: null },\n                right: { contact_placeholder: null },\n                right_contact: {},\n                placeholders: null\n            },\n            roster: null\n        });\n\n        this.body.addScreen('search', {\n            blur_overlay: null,\n            toolbar: null,\n            main: {\n                wide: { discovering_main: null},\n                placeholders: null\n            },\n            roster: null\n        });\n\n        this.body.addScreen('mentions', {\n            blur_overlay: null,\n            toolbar: null,\n            main: {\n                left: { mentions: null },\n                right: { mentions_placeholder: null },\n                right_contact: {},\n                placeholders: null\n            },\n            roster: null\n        });\n\n        this.body.addScreen('all-chats', {\n            blur_overlay: null,\n            toolbar: null,\n            main: {\n                left: { chats: null },\n                right: { chat_placeholder: null },\n                right_contact: {},\n                placeholders: null\n            },\n            roster: null\n        });\n\n\n        this.right_panel.patchTree = function (tree, options) {\n            if (options.right === undefined)\n                return;\n            if ((options.right === 'message_context') || (options.right === 'participant_messages') || (options.right === 'searched_messages')) {\n                return {\n                    chat_head: path_chat_head,\n                    chat_body: path_participant_messages,\n                    chat_bottom: path_chat_bottom\n                };\n            }\n            if (options.right === 'group_invitation') {\n                return { details: path_group_invitation };\n            }\n            if (options.right === 'contact_details') {\n                return { details: path_contact_details };\n            }\n            if (options.details_content === 'participants')\n                return { details_content: path_details_participants };\n            if (options.chat_item) {\n                return {\n                    chat_head: path_chat_head,\n                    chat_body: path_chat_body,\n                    chat_bottom: path_chat_bottom\n                };\n            }\n            if (options.right === 'enable_encryption' || options.omemo_item) {\n                return { details: path_enable_view };\n            }\n        };\n\n\n        this.right_contact_panel.patchTree = function (tree, options) {\n            if (options.right_contact === undefined)\n                return;\n            if (options.right_contact === 'contact_details') {\n                return { details: path_contact_details_right };\n            }\n            if (options.right_contact === 'contact_details_encrypted') {\n                return { details: path_contact_details_right_encrypted };\n            }\n            if (options.details_content === 'participants')\n                return { details_content: path_details_participants };\n        };\n\n        this.body.setScreen('blank');\n\n        // initial synchronization\n        if (this.api_account) {\n            this.api_account.once(\"settings_result\", function (result) {\n                if (result === null && !this.accounts.length) {\n                    this.body.setScreen('login');\n                } else if (this.body.isScreen('blank')) {\n                    this.body.setScreen('all-chats');\n                }\n            }, this);\n\n            this.api_account.ready.then(this.api_account.start.bind(this.api_account));\n        } else {\n            if (!this.accounts.length)\n                this.body.setScreen('login');\n            else if (this.body.isScreen('blank'))\n                this.body.setScreen('all-chats');\n            xabber.trigger(\"bind_xmpp_accounts\");\n        }\n\n    }, xabber);\n\n    return xabber;\n  };\n});\n","define([\"jquery\", \"underscore\"], function ($, _) {\n\n    var raw_data = {\n        \"smiles_and_people\": [{code:0x1f600,x:9,y:3},{code:0x1f603,x:12,y:3},{code:0x1f604,x:13,y:3},{code:0x1f601,x:10,y:3},{code:0x1f606,x:1,y:4},{code:0x1f605,x:0,y:4},{code:0x1f923,x:6,y:10},{code:0x1f602,x:11,y:3},{code:0x1f642,x:5,y:8},{code:0x1f643,x:6,y:8},{code:0x1f609,x:4,y:4},{code:0x1f60a,x:5,y:4},{code:0x1f607,x:2,y:4},{code:0x1f60d,x:8,y:4},{code:0x1f929,x:12,y:10},{code:0x1f617,x:4,y:5},{code:0x263a,x:14,y:5},{code:0x1f61a,x:7,y:5},{code:0x1f619,x:6,y:5},{code:0x1f60b,x:6,y:4},{code:0x1f61b,x:8,y:5},{code:0x1f61c,x:9,y:5},{code:0x1f92a,x:13,y:10},{code:0x1f61d,x:10,y:5},{code:0x1f911,x:10,y:9},{code:0x1f917,x:2,y:10},{code:0x1f92d,x:2,y:11},{code:0x1f92b,x:0,y:11},{code:0x1f914,x:13,y:9},{code:0x1f910,x:9,y:9},{code:0x1f928,x:11,y:10},{code:0x1f610,x:11,y:4},{code:0x1f611,x:12,y:4},{code:0x1f636,x:7,y:7},{code:0x1f60f,x:10,y:4},{code:0x1f612,x:13,y:4},{code:0x1f644,x:7,y:8},{code:0x1f62c,x:11,y:6},{code:0x1f925,x:8,y:10},{code:0x1f60c,x:7,y:4},{code:0x1f614,x:1,y:5},{code:0x1f62a,x:9,y:6},{code:0x1f924,x:7,y:10},{code:0x1f634,x:5,y:7},{code:0x1f637,x:8,y:7},{code:0x1f912,x:11,y:9},{code:0x1f915,x:0,y:10},{code:0x1f922,x:5,y:10},{code:0x1f92e,x:3,y:11},{code:0x1f927,x:10,y:10},{code:0x1f975,x:7,y:12},{code:0x1f976,x:8,y:12},{code:0x1f974,x:6,y:12},{code:0x1f635,x:6,y:7},{code:0x1f92f,x:4,y:11},{code:0x1f920,x:3,y:10},{code:0x1f973,x:5,y:12},{code:0x1f60e,x:9,y:4},{code:0x1f913,x:12,y:9},{code:0x1f9d0,x:1,y:13},{code:0x1f615,x:2,y:5},{code:0x1f61f,x:12,y:5},{code:0x1f641,x:4,y:8},{code:0x2639,x:14,y:4},{code:0x1f62e,x:13,y:6},{code:0x1f62f,x:0,y:7},{code:0x1f632,x:3,y:7},{code:0x1f633,x:4,y:7},{code:0x1f97a,x:9,y:12},{code:0x1f626,x:5,y:6},{code:0x1f627,x:6,y:6},{code:0x1f628,x:7,y:6},{code:0x1f630,x:1,y:7},{code:0x1f625,x:4,y:6},{code:0x1f622,x:1,y:6},{code:0x1f62d,x:12,y:6},{code:0x1f631,x:2,y:7},{code:0x1f616,x:3,y:5},{code:0x1f623,x:2,y:6},{code:0x1f61e,x:11,y:5},{code:0x1f613,x:0,y:5},{code:0x1f629,x:8,y:6},{code:0x1f62b,x:10,y:6},{code:0x1f624,x:3,y:6},{code:0x1f621,x:0,y:6},{code:0x1f620,x:13,y:5},{code:0x1f92c,x:1,y:11},{code:0x1f608,x:3,y:4},{code:0x1f47f,x:9,y:2},{code:0x1f480,x:10,y:2},{code:0x2620,x:14,y:3},{code:0x1f4a9,x:4,y:3},{code:0x1f921,x:4,y:10},{code:0x1f479,x:3,y:2},{code:0x1f47a,x:4,y:2},{code:0x1f47b,x:5,y:2},{code:0x1f47d,x:7,y:2},{code:0x1f47e,x:8,y:2},{code:0x1f916,x:1,y:10},{code:0x1f63a,x:11,y:7},{code:0x1f638,x:9,y:7},{code:0x1f639,x:10,y:7},{code:0x1f63b,x:12,y:7},{code:0x1f63c,x:13,y:7},{code:0x1f63d,x:0,y:8},{code:0x1f640,x:3,y:8},{code:0x1f63f,x:2,y:8},{code:0x1f63e,x:1,y:8},{code:0x1f648,x:11,y:8},{code:0x1f649,x:12,y:8},{code:0x1f64a,x:13,y:8},{code:0x1f476,x:0,y:2},{code:0x1f9d2,x:3,y:13},{code:0x1f466,x:12,y:0},{code:0x1f467,x:13,y:0},{code:0x1f471,x:9,y:1},{code:0x1f9d4,x:5,y:13},{code:0x1f9d3,x:4,y:13},{code:0x1f474,x:12,y:1},{code:0x1f475,x:13,y:1},{code:0x1f64d,x:1,y:9},{code:0x1f64e,x:2,y:9},{code:0x1f645,x:8,y:8},{code:0x1f646,x:9,y:8},{code:0x1f481,x:11,y:2},{code:0x1f64b,x:0,y:9},{code:0x1f647,x:10,y:8},{code:0x1f926,x:9,y:10},{code:0x1f937,x:10,y:11},{code:0x1f46e,x:6,y:1},{code:0x1f575,x:6,y:3},{code:0x1f482,x:12,y:2},{code:0x1f477,x:1,y:2},{code:0x1f934,x:7,y:11},{code:0x1f478,x:2,y:2},{code:0x1f473,x:11,y:1},{code:0x1f472,x:10,y:1},{code:0x1f9d5,x:6,y:13},{code:0x1f935,x:8,y:11},{code:0x1f470,x:8,y:1},{code:0x1f930,x:5,y:11},{code:0x1f931,x:6,y:11},{code:0x1f47c,x:6,y:2},{code:0x1f385,x:0,y:0},{code:0x1f936,x:9,y:11},{code:0x1f9b8,x:10,y:12},{code:0x1f9b9,x:11,y:12},{code:0x1f9d9,x:10,y:13},{code:0x1f9da,x:11,y:13},{code:0x1f9db,x:12,y:13},{code:0x1f9dc,x:13,y:13},{code:0x1f9dd,x:14,y:0},{code:0x1f9de,x:14,y:1},{code:0x1f9df,x:14,y:2},{code:0x1f486,x:0,y:3},{code:0x1f487,x:1,y:3},{code:0x1f6b6,x:6,y:9},{code:0x1f3c3,x:2,y:0},{code:0x1f483,x:13,y:2},{code:0x1f57a,x:7,y:3},{code:0x1f574,x:5,y:3},{code:0x1f46f,x:7,y:1},{code:0x1f9d6,x:7,y:13},{code:0x1f9d7,x:8,y:13},{code:0x1f93a,x:13,y:11},{code:0x1f3c7,x:4,y:0},{code:0x26f7,x:14,y:6},{code:0x1f3c2,x:1,y:0},{code:0x1f3cc,x:7,y:0},{code:0x1f3c4,x:3,y:0},{code:0x1f6a3,x:3,y:9},{code:0x1f3ca,x:5,y:0},{code:0x26f9,x:14,y:7},{code:0x1f3cb,x:6,y:0},{code:0x1f6b4,x:4,y:9},{code:0x1f6b5,x:5,y:9},{code:0x1f938,x:11,y:11},{code:0x1f93c,x:0,y:12},{code:0x1f93d,x:1,y:12},{code:0x1f93e,x:2,y:12},{code:0x1f939,x:12,y:11},{code:0x1f9d8,x:9,y:13},{code:0x1f6c0,x:7,y:9},{code:0x1f6cc,x:8,y:9},{code:0x1f46d,x:5,y:1},{code:0x1f46b,x:3,y:1},{code:0x1f46c,x:4,y:1},{code:0x1f48f,x:2,y:3},{code:0x1f491,x:3,y:3},{code:0x1f46a,x:2,y:1},{code:0x1f5e3,x:8,y:3},{code:0x1f464,x:10,y:0},{code:0x1f465,x:11,y:0},{code:0x1f463,x:9,y:0}],\n        \"body_and_clothes\": [{code:0x1f44b,x:3,y:1},{code:0x1f91a,x:10,y:7},{code:0x1f590,x:7,y:6},{code:0x270b,x:9,y:10},{code:0x1f596,x:9,y:6},{code:0x1f44c,x:4,y:1},{code:0x270c,x:10,y:10},{code:0x1f91e,x:3,y:8},{code:0x1f91f,x:4,y:8},{code:0x1f918,x:8,y:7},{code:0x1f919,x:9,y:7},{code:0x1f448,x:0,y:1},{code:0x1f449,x:1,y:1},{code:0x1f446,x:9,y:0},{code:0x1f595,x:8,y:6},{code:0x1f447,x:10,y:0},{code:0x261d,x:6,y:10},{code:0x1f44d,x:5,y:1},{code:0x1f44e,x:6,y:1},{code:0x270a,x:8,y:10},{code:0x1f44a,x:2,y:1},{code:0x1f91b,x:0,y:8},{code:0x1f91c,x:1,y:8},{code:0x1f44f,x:7,y:1},{code:0x1f64c,x:2,y:7},{code:0x1f450,x:8,y:1},{code:0x1f932,x:5,y:8},{code:0x1f91d,x:2,y:8},{code:0x1f64f,x:3,y:7},{code:0x270d,x:11,y:0},{code:0x1f485,x:6,y:3},{code:0x1f933,x:6,y:8},{code:0x1f4aa,x:9,y:5},{code:0x1f9b5,x:2,y:9},{code:0x1f9b6,x:3,y:9},{code:0x1f442,x:5,y:0},{code:0x1f443,x:6,y:0},{code:0x1f9e0,x:6,y:9},{code:0x1f9b7,x:4,y:9},{code:0x1f9b4,x:1,y:9},{code:0x1f440,x:3,y:0},{code:0x1f445,x:8,y:0},{code:0x1f444,x:7,y:0},{code:0x1f48b,x:7,y:3},{code:0x1f48c,x:8,y:3},{code:0x1f498,x:5,y:4},{code:0x1f49d,x:10,y:4},{code:0x1f496,x:3,y:4},{code:0x1f497,x:4,y:4},{code:0x1f493,x:0,y:4},{code:0x1f49e,x:0,y:5},{code:0x1f495,x:2,y:4},{code:0x1f49f,x:1,y:5},{code:0x2763,x:11,y:1},{code:0x1f494,x:1,y:4},{code:0x2764,x:11,y:2},{code:0x1f9e1,x:7,y:9},{code:0x1f49b,x:8,y:4},{code:0x1f49a,x:7,y:4},{code:0x1f499,x:6,y:4},{code:0x1f49c,x:9,y:4},{code:0x1f5a4,x:10,y:6},{code:0x1f4af,x:3,y:6},{code:0x1f4a2,x:2,y:5},{code:0x1f4a5,x:5,y:5},{code:0x1f4ab,x:10,y:5},{code:0x1f4a6,x:6,y:5},{code:0x1f4a8,x:8,y:5},{code:0x1f573,x:5,y:6},{code:0x1f4a3,x:3,y:5},{code:0x1f4ac,x:0,y:6},{code:0x1f441,x:4,y:0},{code:0x1f5e8,x:0,y:7},{code:0x1f5ef,x:1,y:7},{code:0x1f4ad,x:1,y:6},{code:0x1f4a4,x:4,y:5},{code:0x1f453,x:0,y:2},{code:0x1f576,x:6,y:6},{code:0x1f97d,x:9,y:8},{code:0x1f97c,x:8,y:8},{code:0x1f454,x:1,y:2},{code:0x1f455,x:2,y:2},{code:0x1f456,x:3,y:2},{code:0x1f9e3,x:9,y:9},{code:0x1f9e4,x:10,y:9},{code:0x1f9e5,x:0,y:10},{code:0x1f9e6,x:1,y:10},{code:0x1f457,x:4,y:2},{code:0x1f458,x:5,y:2},{code:0x1f459,x:6,y:2},{code:0x1f45a,x:7,y:2},{code:0x1f45b,x:8,y:2},{code:0x1f45c,x:9,y:2},{code:0x1f45d,x:10,y:2},{code:0x1f6cd,x:4,y:7},{code:0x1f392,x:0,y:0},{code:0x1f45e,x:0,y:3},{code:0x1f45f,x:1,y:3},{code:0x1f97e,x:10,y:8},{code:0x1f97f,x:0,y:9},{code:0x1f460,x:2,y:3},{code:0x1f461,x:3,y:3},{code:0x1f462,x:4,y:3},{code:0x1f451,x:9,y:1},{code:0x1f452,x:10,y:1},{code:0x1f3a9,x:2,y:0},{code:0x1f393,x:1,y:0},{code:0x1f9e2,x:8,y:9},{code:0x26d1,x:7,y:10},{code:0x1f4ff,x:4,y:6},{code:0x1f484,x:5,y:3},{code:0x1f48d,x:9,y:3},{code:0x1f48e,x:10,y:3}],\n        \"animals_and_nature\": [{code:0x1f435,x:6,y:6},{code:0x1f412,x:4,y:3},{code:0x1f98d,x:2,y:9},{code:0x1f436,x:7,y:6},{code:0x1f415,x:7,y:3},{code:0x1f429,x:6,y:5},{code:0x1f43a,x:0,y:7},{code:0x1f98a,x:10,y:8},{code:0x1f99d,x:7,y:10},{code:0x1f408,x:5,y:2},{code:0x1f981,x:1,y:8},{code:0x1f42f,x:1,y:6},{code:0x1f405,x:2,y:2},{code:0x1f406,x:3,y:2},{code:0x1f434,x:5,y:6},{code:0x1f40e,x:0,y:3},{code:0x1f984,x:4,y:8},{code:0x1f993,x:8,y:9},{code:0x1f98c,x:1,y:9},{code:0x1f42e,x:0,y:6},{code:0x1f402,x:10,y:1},{code:0x1f403,x:0,y:2},{code:0x1f404,x:1,y:2},{code:0x1f437,x:8,y:6},{code:0x1f416,x:9,y:3},{code:0x1f417,x:10,y:3},{code:0x1f43d,x:3,y:7},{code:0x1f40f,x:1,y:3},{code:0x1f411,x:3,y:3},{code:0x1f410,x:2,y:3},{code:0x1f42a,x:7,y:5},{code:0x1f42b,x:8,y:5},{code:0x1f999,x:3,y:10},{code:0x1f992,x:7,y:9},{code:0x1f418,x:0,y:4},{code:0x1f98f,x:4,y:9},{code:0x1f99b,x:5,y:10},{code:0x1f42d,x:10,y:5},{code:0x1f401,x:9,y:1},{code:0x1f400,x:8,y:1},{code:0x1f439,x:10,y:6},{code:0x1f430,x:2,y:6},{code:0x1f407,x:4,y:2},{code:0x1f43f,x:5,y:7},{code:0x1f994,x:9,y:9},{code:0x1f987,x:7,y:8},{code:0x1f43b,x:1,y:7},{code:0x1f428,x:5,y:5},{code:0x1f43c,x:2,y:7},{code:0x1f998,x:2,y:10},{code:0x1f9a1,x:11,y:0},{code:0x1f43e,x:4,y:7},{code:0x1f983,x:3,y:8},{code:0x1f414,x:6,y:3},{code:0x1f413,x:5,y:3},{code:0x1f423,x:0,y:5},{code:0x1f424,x:1,y:5},{code:0x1f425,x:2,y:5},{code:0x1f426,x:3,y:5},{code:0x1f427,x:4,y:5},{code:0x1f54a,x:7,y:7},{code:0x1f985,x:5,y:8},{code:0x1f986,x:6,y:8},{code:0x1f9a2,x:11,y:1},{code:0x1f989,x:9,y:8},{code:0x1f99a,x:4,y:10},{code:0x1f99c,x:6,y:10},{code:0x1f438,x:9,y:6},{code:0x1f40a,x:7,y:2},{code:0x1f422,x:10,y:4},{code:0x1f98e,x:3,y:9},{code:0x1f40d,x:10,y:2},{code:0x1f432,x:3,y:6},{code:0x1f409,x:6,y:2},{code:0x1f995,x:10,y:9},{code:0x1f996,x:0,y:10},{code:0x1f433,x:4,y:6},{code:0x1f40b,x:8,y:2},{code:0x1f42c,x:9,y:5},{code:0x1f41f,x:7,y:4},{code:0x1f420,x:8,y:4},{code:0x1f421,x:9,y:4},{code:0x1f988,x:8,y:8},{code:0x1f419,x:1,y:4},{code:0x1f41a,x:2,y:4},{code:0x1f40c,x:9,y:2},{code:0x1f98b,x:0,y:9},{code:0x1f41b,x:3,y:4},{code:0x1f41c,x:4,y:4},{code:0x1f41d,x:5,y:4},{code:0x1f41e,x:6,y:4},{code:0x1f997,x:1,y:10},{code:0x1f577,x:8,y:7},{code:0x1f578,x:9,y:7},{code:0x1f982,x:2,y:8},{code:0x1f99f,x:9,y:10},{code:0x1f9a0,x:10,y:10},{code:0x1f490,x:6,y:7},{code:0x1f338,x:6,y:0},{code:0x1f3f5,x:7,y:1},{code:0x1f339,x:7,y:0},{code:0x1f940,x:10,y:7},{code:0x1f33a,x:8,y:0},{code:0x1f33b,x:9,y:0},{code:0x1f33c,x:10,y:0},{code:0x1f337,x:5,y:0},{code:0x1f331,x:0,y:0},{code:0x1f344,x:6,y:1},{code:0x1f332,x:1,y:0},{code:0x1f333,x:2,y:0},{code:0x1f334,x:3,y:0},{code:0x1f335,x:4,y:0},{code:0x1f33e,x:0,y:1},{code:0x1f33f,x:1,y:1},{code:0x2618,x:11,y:8},{code:0x1f340,x:2,y:1},{code:0x1f341,x:3,y:1},{code:0x1f342,x:4,y:1},{code:0x1f343,x:5,y:1},{code:0x1f980,x:0,y:8},{code:0x1f99e,x:8,y:10},{code:0x1f990,x:5,y:9},{code:0x1f991,x:6,y:9}],\n        \"food_and_drinks\": [{code:0x1f347,x:8,y:0},{code:0x1f348,x:9,y:0},{code:0x1f349,x:0,y:1},{code:0x1f34a,x:1,y:1},{code:0x1f34b,x:2,y:1},{code:0x1f34c,x:3,y:1},{code:0x1f34d,x:4,y:1},{code:0x1f96d,x:10,y:0},{code:0x1f34e,x:5,y:1},{code:0x1f34f,x:6,y:1},{code:0x1f350,x:7,y:1},{code:0x1f351,x:8,y:1},{code:0x1f352,x:9,y:1},{code:0x1f353,x:0,y:2},{code:0x1f95d,x:4,y:8},{code:0x1f345,x:6,y:0},{code:0x1f965,x:2,y:9},{code:0x1f951,x:2,y:7},{code:0x1f346,x:7,y:0},{code:0x1f954,x:5,y:7},{code:0x1f955,x:6,y:7},{code:0x1f33d,x:5,y:0},{code:0x1f336,x:4,y:0},{code:0x1f952,x:3,y:7},{code:0x1f96c,x:9,y:9},{code:0x1f966,x:3,y:9},{code:0x1f95c,x:3,y:8},{code:0x1f330,x:3,y:0},{code:0x1f35e,x:1,y:3},{code:0x1f950,x:1,y:7},{code:0x1f956,x:7,y:7},{code:0x1f968,x:5,y:9},{code:0x1f96f,x:10,y:2},{code:0x1f95e,x:5,y:8},{code:0x1f9c0,x:10,y:3},{code:0x1f356,x:3,y:2},{code:0x1f357,x:4,y:2},{code:0x1f969,x:6,y:9},{code:0x1f953,x:4,y:7},{code:0x1f354,x:1,y:2},{code:0x1f35f,x:2,y:3},{code:0x1f355,x:2,y:2},{code:0x1f32d,x:0,y:0},{code:0x1f96a,x:7,y:9},{code:0x1f32e,x:1,y:0},{code:0x1f32f,x:2,y:0},{code:0x1f959,x:0,y:8},{code:0x1f95a,x:1,y:8},{code:0x1f373,x:2,y:5},{code:0x1f958,x:9,y:7},{code:0x1f372,x:1,y:5},{code:0x1f963,x:0,y:9},{code:0x1f957,x:8,y:7},{code:0x1f37f,x:4,y:6},{code:0x1f9c2,x:10,y:5},{code:0x1f96b,x:8,y:9},{code:0x1f371,x:0,y:5},{code:0x1f358,x:5,y:2},{code:0x1f359,x:6,y:2},{code:0x1f35a,x:7,y:2},{code:0x1f35b,x:8,y:2},{code:0x1f35c,x:9,y:2},{code:0x1f35d,x:0,y:3},{code:0x1f360,x:3,y:3},{code:0x1f362,x:5,y:3},{code:0x1f363,x:6,y:3},{code:0x1f364,x:7,y:3},{code:0x1f365,x:8,y:3},{code:0x1f96e,x:10,y:1},{code:0x1f361,x:4,y:3},{code:0x1f95f,x:6,y:8},{code:0x1f960,x:7,y:8},{code:0x1f961,x:8,y:8},{code:0x1f366,x:9,y:3},{code:0x1f367,x:0,y:4},{code:0x1f368,x:1,y:4},{code:0x1f369,x:2,y:4},{code:0x1f36a,x:3,y:4},{code:0x1f382,x:5,y:6},{code:0x1f370,x:9,y:4},{code:0x1f9c1,x:10,y:4},{code:0x1f967,x:4,y:9},{code:0x1f36b,x:4,y:4},{code:0x1f36c,x:5,y:4},{code:0x1f36d,x:6,y:4},{code:0x1f36e,x:7,y:4},{code:0x1f36f,x:8,y:4},{code:0x1f37c,x:1,y:6},{code:0x1f95b,x:2,y:8},{code:0x2615,x:4,y:10},{code:0x1f375,x:4,y:5},{code:0x1f376,x:5,y:5},{code:0x1f37e,x:3,y:6},{code:0x1f377,x:6,y:5},{code:0x1f378,x:7,y:5},{code:0x1f379,x:8,y:5},{code:0x1f37a,x:9,y:5},{code:0x1f37b,x:0,y:6},{code:0x1f942,x:8,y:6},{code:0x1f943,x:9,y:6},{code:0x1f964,x:1,y:9},{code:0x1f962,x:9,y:8},{code:0x1f37d,x:2,y:6},{code:0x1f374,x:3,y:5},{code:0x1f944,x:0,y:7},{code:0x1f52a,x:7,y:6},{code:0x1f3fa,x:6,y:6}],\n        \"travel_and_places\": [{code:0x1f30d,x:13,y:0},{code:0x1f30e,x:0,y:1},{code:0x1f30f,x:1,y:1},{code:0x1f310,x:2,y:1},{code:0x1f5fa,x:0,y:8},{code:0x1f5fe,x:4,y:8},{code:0x1f9ed,x:12,y:12},{code:0x1f3d4,x:9,y:3},{code:0x26f0,x:14,y:8},{code:0x1f30b,x:11,y:0},{code:0x1f5fb,x:1,y:8},{code:0x1f3d5,x:10,y:3},{code:0x1f3d6,x:11,y:3},{code:0x1f3dc,x:3,y:4},{code:0x1f3dd,x:4,y:4},{code:0x1f3de,x:5,y:4},{code:0x1f3df,x:6,y:4},{code:0x1f3db,x:2,y:4},{code:0x1f3d7,x:12,y:3},{code:0x1f9f1,x:13,y:12},{code:0x1f3d8,x:13,y:3},{code:0x1f3da,x:1,y:4},{code:0x1f3e0,x:7,y:4},{code:0x1f3e1,x:8,y:4},{code:0x1f3e2,x:9,y:4},{code:0x1f3e3,x:10,y:4},{code:0x1f3e4,x:11,y:4},{code:0x1f3e5,x:12,y:4},{code:0x1f3e6,x:13,y:4},{code:0x1f3e8,x:0,y:5},{code:0x1f3e9,x:1,y:5},{code:0x1f3ea,x:2,y:5},{code:0x1f3eb,x:3,y:5},{code:0x1f3ec,x:4,y:5},{code:0x1f3ed,x:5,y:5},{code:0x1f3ef,x:6,y:5},{code:0x1f3f0,x:7,y:5},{code:0x1f492,x:9,y:5},{code:0x1f5fc,x:2,y:8},{code:0x1f5fd,x:3,y:8},{code:0x26ea,x:14,y:7},{code:0x1f54c,x:0,y:6},{code:0x1f54d,x:1,y:6},{code:0x26e9,x:14,y:6},{code:0x1f54b,x:13,y:5},{code:0x26f2,x:14,y:10},{code:0x26fa,x:0,y:14},{code:0x1f301,x:1,y:0},{code:0x1f303,x:3,y:0},{code:0x1f3d9,x:0,y:4},{code:0x1f304,x:4,y:0},{code:0x1f305,x:5,y:0},{code:0x1f306,x:6,y:0},{code:0x1f307,x:7,y:0},{code:0x1f309,x:9,y:0},{code:0x2668,x:14,y:0},{code:0x1f3a0,x:1,y:3},{code:0x1f3a1,x:2,y:3},{code:0x1f3a2,x:3,y:3},{code:0x1f488,x:8,y:5},{code:0x1f3aa,x:5,y:3},{code:0x1f682,x:8,y:8},{code:0x1f683,x:9,y:8},{code:0x1f684,x:10,y:8},{code:0x1f685,x:11,y:8},{code:0x1f686,x:12,y:8},{code:0x1f687,x:13,y:8},{code:0x1f688,x:0,y:9},{code:0x1f689,x:1,y:9},{code:0x1f68a,x:2,y:9},{code:0x1f69d,x:7,y:10},{code:0x1f69e,x:8,y:10},{code:0x1f68b,x:3,y:9},{code:0x1f68c,x:4,y:9},{code:0x1f68d,x:5,y:9},{code:0x1f68e,x:6,y:9},{code:0x1f690,x:8,y:9},{code:0x1f691,x:9,y:9},{code:0x1f692,x:10,y:9},{code:0x1f693,x:11,y:9},{code:0x1f694,x:12,y:9},{code:0x1f695,x:13,y:9},{code:0x1f696,x:0,y:10},{code:0x1f697,x:1,y:10},{code:0x1f698,x:2,y:10},{code:0x1f699,x:3,y:10},{code:0x1f69a,x:4,y:10},{code:0x1f69b,x:5,y:10},{code:0x1f69c,x:6,y:10},{code:0x1f3ce,x:8,y:3},{code:0x1f3cd,x:7,y:3},{code:0x1f6f5,x:4,y:12},{code:0x1f6b2,x:4,y:11},{code:0x1f6f4,x:3,y:12},{code:0x1f6f9,x:7,y:12},{code:0x1f68f,x:7,y:9},{code:0x1f6e3,x:9,y:11},{code:0x1f6e4,x:10,y:11},{code:0x1f6e2,x:8,y:11},{code:0x26fd,x:1,y:14},{code:0x1f6a8,x:3,y:11},{code:0x1f6a5,x:0,y:11},{code:0x1f6a6,x:1,y:11},{code:0x1f6d1,x:6,y:11},{code:0x1f6a7,x:2,y:11},{code:0x2693,x:14,y:1},{code:0x26f5,x:14,y:13},{code:0x1f6f6,x:5,y:12},{code:0x1f3a3,x:4,y:3},{code:0x1f6a4,x:13,y:10},{code:0x1f6f3,x:2,y:12},{code:0x26f4,x:14,y:12},{code:0x1f6e5,x:11,y:11},{code:0x1f6a2,x:12,y:10},{code:0x2708,x:2,y:14},{code:0x1f6e9,x:12,y:11},{code:0x1f6eb,x:13,y:11},{code:0x1f6ec,x:0,y:12},{code:0x1f4ba,x:11,y:5},{code:0x1f681,x:7,y:8},{code:0x1f69f,x:9,y:10},{code:0x1f6a0,x:10,y:10},{code:0x1f6a1,x:11,y:10},{code:0x1f6f0,x:1,y:12},{code:0x1f680,x:6,y:8},{code:0x1f6f8,x:6,y:12},{code:0x1f6ce,x:5,y:11},{code:0x1f9f3,x:0,y:13},{code:0x231b,x:3,y:13},{code:0x23f3,x:7,y:13},{code:0x231a,x:2,y:13},{code:0x23f0,x:4,y:13},{code:0x23f1,x:5,y:13},{code:0x23f2,x:6,y:13},{code:0x1f570,x:12,y:7},{code:0x1f55b,x:13,y:6},{code:0x1f567,x:11,y:7},{code:0x1f550,x:2,y:6},{code:0x1f55c,x:0,y:7},{code:0x1f551,x:3,y:6},{code:0x1f55d,x:1,y:7},{code:0x1f552,x:4,y:6},{code:0x1f55e,x:2,y:7},{code:0x1f553,x:5,y:6},{code:0x1f55f,x:3,y:7},{code:0x1f554,x:6,y:6},{code:0x1f560,x:4,y:7},{code:0x1f555,x:7,y:6},{code:0x1f561,x:5,y:7},{code:0x1f556,x:8,y:6},{code:0x1f562,x:6,y:7},{code:0x1f557,x:9,y:6},{code:0x1f563,x:7,y:7},{code:0x1f558,x:10,y:6},{code:0x1f564,x:8,y:7},{code:0x1f559,x:11,y:6},{code:0x1f565,x:9,y:7},{code:0x1f55a,x:12,y:6},{code:0x1f566,x:10,y:7},{code:0x1f311,x:3,y:1},{code:0x1f312,x:4,y:1},{code:0x1f313,x:5,y:1},{code:0x1f314,x:6,y:1},{code:0x1f315,x:7,y:1},{code:0x1f316,x:8,y:1},{code:0x1f317,x:9,y:1},{code:0x1f318,x:10,y:1},{code:0x1f319,x:11,y:1},{code:0x1f31a,x:12,y:1},{code:0x1f31b,x:13,y:1},{code:0x1f31c,x:0,y:2},{code:0x1f321,x:5,y:2},{code:0x2600,x:8,y:13},{code:0x1f31d,x:1,y:2},{code:0x1f31e,x:2,y:2},{code:0x2b50,x:4,y:14},{code:0x1f31f,x:3,y:2},{code:0x1f320,x:4,y:2},{code:0x1f30c,x:12,y:0},{code:0x2601,x:9,y:13},{code:0x26c5,x:14,y:4},{code:0x26c8,x:14,y:5},{code:0x1f324,x:6,y:2},{code:0x1f325,x:7,y:2},{code:0x1f326,x:8,y:2},{code:0x1f327,x:9,y:2},{code:0x1f328,x:10,y:2},{code:0x1f329,x:11,y:2},{code:0x1f32a,x:12,y:2},{code:0x1f32b,x:13,y:2},{code:0x1f32c,x:0,y:3},{code:0x1f300,x:0,y:0},{code:0x1f308,x:8,y:0},{code:0x1f302,x:2,y:0},{code:0x2602,x:10,y:13},{code:0x2614,x:13,y:13},{code:0x26f1,x:14,y:9},{code:0x26a1,x:14,y:2},{code:0x2744,x:3,y:14},{code:0x2603,x:11,y:13},{code:0x26c4,x:14,y:3},{code:0x2604,x:12,y:13},{code:0x1f525,x:12,y:5},{code:0x1f4a7,x:10,y:5},{code:0x1f30a,x:10,y:0}],\n        \"events\": [{code:0x1f383,x:4,y:0},{code:0x1f384,x:5,y:0},{code:0x1f386,x:6,y:0},{code:0x1f387,x:7,y:0},{code:0x1f9e8,x:5,y:6},{code:0x2728,x:9,y:3},{code:0x1f388,x:8,y:0},{code:0x1f389,x:0,y:1},{code:0x1f38a,x:1,y:1},{code:0x1f38b,x:2,y:1},{code:0x1f38d,x:3,y:1},{code:0x1f38e,x:4,y:1},{code:0x1f38f,x:5,y:1},{code:0x1f390,x:6,y:1},{code:0x1f391,x:7,y:1},{code:0x1f9e7,x:4,y:6},{code:0x1f380,x:2,y:0},{code:0x1f381,x:3,y:0},{code:0x1f397,x:0,y:2},{code:0x1f39f,x:1,y:2},{code:0x1f3ab,x:3,y:2},{code:0x1f396,x:8,y:1},{code:0x1f3c6,x:7,y:3},{code:0x1f3c5,x:6,y:3},{code:0x1f947,x:4,y:5},{code:0x1f948,x:5,y:5},{code:0x1f949,x:6,y:5},{code:0x26bd,x:8,y:8},{code:0x26be,x:9,y:0},{code:0x1f94e,x:2,y:6},{code:0x1f3c0,x:5,y:3},{code:0x1f3d0,x:2,y:4},{code:0x1f3c8,x:8,y:3},{code:0x1f3c9,x:0,y:4},{code:0x1f3be,x:3,y:3},{code:0x1f94f,x:3,y:6},{code:0x1f3b3,x:1,y:3},{code:0x1f3cf,x:1,y:4},{code:0x1f3d1,x:3,y:4},{code:0x1f3d2,x:4,y:4},{code:0x1f94d,x:1,y:6},{code:0x1f3d3,x:5,y:4},{code:0x1f3f8,x:6,y:4},{code:0x1f94a,x:7,y:5},{code:0x1f94b,x:8,y:5},{code:0x1f945,x:3,y:5},{code:0x26f3,x:9,y:1},{code:0x26f8,x:9,y:2},{code:0x1f3bd,x:2,y:3},{code:0x1f3bf,x:4,y:3},{code:0x1f6f7,x:2,y:5},{code:0x1f94c,x:0,y:6},{code:0x1f3af,x:6,y:2},{code:0x1f3b1,x:8,y:2},{code:0x1f52e,x:8,y:4},{code:0x1f9ff,x:1,y:7},{code:0x1f3ae,x:5,y:2},{code:0x1f579,x:0,y:5},{code:0x1f3b0,x:7,y:2},{code:0x1f3b2,x:0,y:3},{code:0x1f9e9,x:6,y:6},{code:0x1f9f8,x:0,y:7},{code:0x2660,x:4,y:8},{code:0x2665,x:6,y:8},{code:0x2666,x:7,y:8},{code:0x2663,x:5,y:8},{code:0x265f,x:3,y:8},{code:0x1f0cf,x:1,y:0},{code:0x1f004,x:0,y:0},{code:0x1f3ad,x:4,y:2},{code:0x1f5bc,x:1,y:5},{code:0x1f3a8,x:2,y:2},{code:0x1f9f5,x:7,y:6},{code:0x1f9f6,x:8,y:6}],\n        \"objects\": [{code:0x1f507,x:1,y:7},{code:0x1f508,x:2,y:7},{code:0x1f509,x:3,y:7},{code:0x1f50a,x:4,y:7},{code:0x1f4e2,x:3,y:5},{code:0x1f4e3,x:4,y:5},{code:0x1f4ef,x:3,y:6},{code:0x1f514,x:1,y:8},{code:0x1f515,x:2,y:8},{code:0x1f3bc,x:2,y:1},{code:0x1f3b5,x:8,y:0},{code:0x1f3b6,x:9,y:0},{code:0x1f399,x:0,y:0},{code:0x1f39a,x:1,y:0},{code:0x1f39b,x:2,y:0},{code:0x1f3a4,x:4,y:0},{code:0x1f3a7,x:6,y:0},{code:0x1f4fb,x:11,y:6},{code:0x1f3b7,x:10,y:0},{code:0x1f3b8,x:11,y:0},{code:0x1f3b9,x:12,y:0},{code:0x1f3ba,x:0,y:1},{code:0x1f3bb,x:1,y:1},{code:0x1f941,x:6,y:11},{code:0x1f4f1,x:5,y:6},{code:0x1f4f2,x:6,y:6},{code:0x260e,x:13,y:3},{code:0x1f4de,x:12,y:4},{code:0x1f4df,x:0,y:5},{code:0x1f4e0,x:1,y:5},{code:0x1f50b,x:5,y:7},{code:0x1f50c,x:6,y:7},{code:0x1f4bb,x:4,y:2},{code:0x1f5a5,x:5,y:9},{code:0x1f5a8,x:6,y:9},{code:0x2328,x:13,y:2},{code:0x1f5b1,x:7,y:9},{code:0x1f5b2,x:8,y:9},{code:0x1f4bd,x:6,y:2},{code:0x1f4be,x:7,y:2},{code:0x1f4bf,x:8,y:2},{code:0x1f4c0,x:9,y:2},{code:0x1f9ee,x:2,y:12},{code:0x1f3a5,x:5,y:0},{code:0x1f39e,x:3,y:0},{code:0x1f4fd,x:0,y:7},{code:0x1f3ac,x:7,y:0},{code:0x1f4fa,x:10,y:6},{code:0x1f4f7,x:7,y:6},{code:0x1f4f8,x:8,y:6},{code:0x1f4f9,x:9,y:6},{code:0x1f4fc,x:12,y:6},{code:0x1f50d,x:7,y:7},{code:0x1f50e,x:8,y:7},{code:0x1f56f,x:12,y:8},{code:0x1f4a1,x:8,y:1},{code:0x1f526,x:5,y:8},{code:0x1f3ee,x:3,y:1},{code:0x1f4d4,x:3,y:4},{code:0x1f4d5,x:4,y:4},{code:0x1f4d6,x:5,y:4},{code:0x1f4d7,x:6,y:4},{code:0x1f4d8,x:7,y:4},{code:0x1f4d9,x:8,y:4},{code:0x1f4da,x:9,y:4},{code:0x1f4d3,x:2,y:4},{code:0x1f4d2,x:1,y:4},{code:0x1f4c3,x:12,y:2},{code:0x1f4dc,x:10,y:4},{code:0x1f4c4,x:0,y:3},{code:0x1f4f0,x:4,y:6},{code:0x1f5de,x:4,y:10},{code:0x1f4d1,x:0,y:4},{code:0x1f516,x:3,y:8},{code:0x1f3f7,x:4,y:1},{code:0x1f4b0,x:9,y:1},{code:0x1f4b4,x:11,y:1},{code:0x1f4b5,x:12,y:1},{code:0x1f4b6,x:0,y:2},{code:0x1f4b7,x:1,y:2},{code:0x1f4b8,x:2,y:2},{code:0x1f4b3,x:10,y:1},{code:0x1f9fe,x:13,y:0},{code:0x1f4b9,x:3,y:2},{code:0x2709,x:1,y:13},{code:0x1f4e7,x:8,y:5},{code:0x1f4e8,x:9,y:5},{code:0x1f4e9,x:10,y:5},{code:0x1f4e4,x:5,y:5},{code:0x1f4e5,x:6,y:5},{code:0x1f4e6,x:7,y:5},{code:0x1f4eb,x:12,y:5},{code:0x1f4ea,x:11,y:5},{code:0x1f4ec,x:0,y:6},{code:0x1f4ed,x:1,y:6},{code:0x1f4ee,x:2,y:6},{code:0x1f5f3,x:6,y:10},{code:0x270f,x:2,y:13},{code:0x2712,x:3,y:13},{code:0x1f58b,x:2,y:9},{code:0x1f58a,x:1,y:9},{code:0x1f58c,x:3,y:9},{code:0x1f58d,x:4,y:9},{code:0x1f4dd,x:11,y:4},{code:0x1f4bc,x:5,y:2},{code:0x1f4c1,x:10,y:2},{code:0x1f4c2,x:11,y:2},{code:0x1f5c2,x:9,y:9},{code:0x1f4c5,x:1,y:3},{code:0x1f4c6,x:2,y:3},{code:0x1f5d2,x:0,y:10},{code:0x1f5d3,x:1,y:10},{code:0x1f4c7,x:3,y:3},{code:0x1f4c8,x:4,y:3},{code:0x1f4c9,x:5,y:3},{code:0x1f4ca,x:6,y:3},{code:0x1f4cb,x:7,y:3},{code:0x1f4cc,x:8,y:3},{code:0x1f4cd,x:9,y:3},{code:0x1f4ce,x:10,y:3},{code:0x1f587,x:0,y:9},{code:0x1f4cf,x:11,y:3},{code:0x1f4d0,x:12,y:3},{code:0x2702,x:0,y:13},{code:0x1f5c3,x:10,y:9},{code:0x1f5c4,x:11,y:9},{code:0x1f5d1,x:12,y:9},{code:0x1f512,x:12,y:7},{code:0x1f513,x:0,y:8},{code:0x1f50f,x:9,y:7},{code:0x1f510,x:10,y:7},{code:0x1f511,x:11,y:7},{code:0x1f5dd,x:3,y:10},{code:0x1f528,x:7,y:8},{code:0x26cf,x:13,y:11},{code:0x2692,x:13,y:4},{code:0x1f6e0,x:3,y:11},{code:0x1f5e1,x:5,y:10},{code:0x2694,x:13,y:5},{code:0x1f52b,x:9,y:8},{code:0x1f3f9,x:5,y:1},{code:0x1f6e1,x:4,y:11},{code:0x1f527,x:6,y:8},{code:0x1f529,x:8,y:8},{code:0x2699,x:13,y:8},{code:0x1f5dc,x:2,y:10},{code:0x2696,x:13,y:6},{code:0x1f517,x:4,y:8},{code:0x26d3,x:13,y:12},{code:0x1f9f0,x:4,y:12},{code:0x1f9f2,x:5,y:12},{code:0x2697,x:13,y:7},{code:0x1f9ea,x:12,y:11},{code:0x1f9eb,x:0,y:12},{code:0x1f9ec,x:1,y:12},{code:0x1f52c,x:10,y:8},{code:0x1f52d,x:11,y:8},{code:0x1f4e1,x:2,y:5},{code:0x1f489,x:6,y:1},{code:0x1f48a,x:7,y:1},{code:0x1f6aa,x:8,y:10},{code:0x1f6cf,x:1,y:11},{code:0x1f6cb,x:0,y:11},{code:0x1f6bd,x:10,y:10},{code:0x1f6bf,x:11,y:10},{code:0x1f6c1,x:12,y:10},{code:0x1f9f4,x:6,y:12},{code:0x1f9f7,x:7,y:12},{code:0x1f9f9,x:8,y:12},{code:0x1f9fa,x:9,y:12},{code:0x1f9fb,x:10,y:12},{code:0x1f9fc,x:11,y:12},{code:0x1f9fd,x:12,y:12},{code:0x1f9ef,x:3,y:12},{code:0x1f6d2,x:2,y:11},{code:0x1f6ac,x:9,y:10},{code:0x26b0,x:13,y:9},{code:0x26b1,x:13,y:10},{code:0x1f5ff,x:7,y:10}],\n        \"signs\": [{code:0x1f6ae,x:4,y:8},{code:0x1f6b0,x:6,y:8},{code:0x267f,x:3,y:13},{code:0x1f6b9,x:11,y:8},{code:0x1f6ba,x:12,y:8},{code:0x1f6bb,x:13,y:8},{code:0x1f6bc,x:14,y:8},{code:0x1f6be,x:0,y:9},{code:0x1f6c2,x:1,y:9},{code:0x1f6c3,x:2,y:9},{code:0x1f6c4,x:3,y:9},{code:0x1f6c5,x:4,y:9},{code:0x1f3e7,x:13,y:4},{code:0x26a0,x:7,y:13},{code:0x1f6b8,x:10,y:8},{code:0x26d4,x:11,y:13},{code:0x1f6ab,x:2,y:8},{code:0x1f6b3,x:8,y:8},{code:0x1f6ad,x:3,y:8},{code:0x1f6af,x:5,y:8},{code:0x1f6b1,x:7,y:8},{code:0x1f6b7,x:9,y:8},{code:0x1f4f5,x:7,y:5},{code:0x1f51e,x:7,y:6},{code:0x2622,x:10,y:11},{code:0x2623,x:11,y:11},{code:0x2b06,x:15,y:5},{code:0x2197,x:14,y:9},{code:0x27a1,x:14,y:14},{code:0x2198,x:0,y:10},{code:0x2b07,x:15,y:6},{code:0x2199,x:1,y:10},{code:0x2b05,x:15,y:4},{code:0x2196,x:13,y:9},{code:0x2195,x:12,y:9},{code:0x2194,x:11,y:9},{code:0x21a9,x:2,y:10},{code:0x21aa,x:3,y:10},{code:0x2934,x:15,y:2},{code:0x2935,x:15,y:3},{code:0x1f503,x:12,y:5},{code:0x1f504,x:13,y:5},{code:0x1f519,x:2,y:6},{code:0x1f51a,x:3,y:6},{code:0x1f51b,x:4,y:6},{code:0x1f51c,x:5,y:6},{code:0x1f51d,x:6,y:6},{code:0x1f6d0,x:5,y:9},{code:0x269b,x:5,y:13},{code:0x1f549,x:14,y:7},{code:0x2721,x:1,y:14},{code:0x2638,x:1,y:12},{code:0x262f,x:0,y:12},{code:0x271d,x:0,y:14},{code:0x2626,x:12,y:11},{code:0x262a,x:13,y:11},{code:0x262e,x:14,y:11},{code:0x1f54e,x:0,y:8},{code:0x1f52f,x:14,y:6},{code:0x2648,x:4,y:12},{code:0x2649,x:5,y:12},{code:0x264a,x:6,y:12},{code:0x264b,x:7,y:12},{code:0x264c,x:8,y:12},{code:0x264d,x:9,y:12},{code:0x264e,x:10,y:12},{code:0x264f,x:11,y:12},{code:0x2650,x:12,y:12},{code:0x2651,x:13,y:12},{code:0x2652,x:14,y:12},{code:0x2653,x:0,y:13},{code:0x26ce,x:10,y:13},{code:0x1f500,x:9,y:5},{code:0x1f501,x:10,y:5},{code:0x1f502,x:11,y:5},{code:0x25b6,x:3,y:11},{code:0x23e9,x:5,y:10},{code:0x23ed,x:9,y:10},{code:0x23ef,x:11,y:10},{code:0x25c0,x:4,y:11},{code:0x23ea,x:6,y:10},{code:0x23ee,x:10,y:10},{code:0x1f53c,x:12,y:7},{code:0x23eb,x:7,y:10},{code:0x1f53d,x:13,y:7},{code:0x23ec,x:8,y:10},{code:0x23f8,x:12,y:10},{code:0x23f9,x:13,y:10},{code:0x23fa,x:14,y:10},{code:0x23cf,x:4,y:10},{code:0x1f3a6,x:11,y:4},{code:0x1f505,x:14,y:5},{code:0x1f506,x:0,y:6},{code:0x1f4f6,x:8,y:5},{code:0x1f4f3,x:5,y:5},{code:0x1f4f4,x:6,y:5},{code:0x2640,x:2,y:12},{code:0x2642,x:3,y:12},{code:0x2716,x:14,y:13},{code:0x2795,x:11,y:14},{code:0x2796,x:12,y:14},{code:0x2797,x:13,y:14},{code:0x267e,x:2,y:13},{code:0x203c,x:6,y:9},{code:0x2049,x:7,y:9},{code:0x2753,x:7,y:14},{code:0x2754,x:8,y:14},{code:0x2755,x:9,y:14},{code:0x2757,x:10,y:14},{code:0x3030,x:15,y:10},{code:0x1f4b1,x:2,y:5},{code:0x1f4b2,x:3,y:5},{code:0x2695,x:4,y:13},{code:0x267b,x:1,y:13},{code:0x269c,x:6,y:13},{code:0x1f531,x:1,y:7},{code:0x1f4db,x:4,y:5},{code:0x1f530,x:0,y:7},{code:0x2b55,x:15,y:9},{code:0x2705,x:12,y:13},{code:0x2611,x:9,y:11},{code:0x2714,x:13,y:13},{code:0x274c,x:5,y:14},{code:0x274e,x:6,y:14},{code:0x27b0,x:15,y:0},{code:0x27bf,x:15,y:1},{code:0x303d,x:15,y:11},{code:0x2733,x:2,y:14},{code:0x2734,x:3,y:14},{code:0x2747,x:4,y:14},{code:0x00a9,x:12,y:0},{code:0x00ae,x:13,y:0},{code:0x2122,x:9,y:9},{code:0x1f520,x:9,y:6},{code:0x1f521,x:10,y:6},{code:0x1f522,x:11,y:6},{code:0x1f523,x:12,y:6},{code:0x1f524,x:13,y:6},{code:0x1f170,x:14,y:0},{code:0x1f18e,x:3,y:1},{code:0x1f171,x:0,y:1},{code:0x1f191,x:4,y:1},{code:0x1f192,x:5,y:1},{code:0x1f193,x:6,y:1},{code:0x2139,x:10,y:9},{code:0x1f194,x:7,y:1},{code:0x24c2,x:0,y:11},{code:0x1f195,x:8,y:1},{code:0x1f196,x:9,y:1},{code:0x1f17e,x:1,y:1},{code:0x1f197,x:10,y:1},{code:0x1f17f,x:2,y:1},{code:0x1f198,x:11,y:1},{code:0x1f199,x:12,y:1},{code:0x1f19a,x:13,y:1},{code:0x1f201,x:10,y:3},{code:0x1f202,x:11,y:3},{code:0x1f237,x:4,y:4},{code:0x1f236,x:3,y:4},{code:0x1f22f,x:13,y:3},{code:0x1f250,x:8,y:4},{code:0x1f239,x:6,y:4},{code:0x1f21a,x:12,y:3},{code:0x1f232,x:14,y:3},{code:0x1f251,x:9,y:4},{code:0x1f238,x:5,y:4},{code:0x1f234,x:1,y:4},{code:0x1f233,x:0,y:4},{code:0x3297,x:15,y:12},{code:0x3299,x:15,y:13},{code:0x1f23a,x:7,y:4},{code:0x1f235,x:2,y:4},{code:0x1f534,x:4,y:7},{code:0x1f535,x:5,y:7},{code:0x26ab,x:9,y:13},{code:0x26aa,x:8,y:13},{code:0x2b1c,x:15,y:8},{code:0x25fc,x:6,y:11},{code:0x25fb,x:5,y:11},{code:0x25fe,x:8,y:11},{code:0x25fd,x:7,y:11},{code:0x25aa,x:1,y:11},{code:0x25ab,x:2,y:11},{code:0x1f536,x:6,y:7},{code:0x1f537,x:7,y:7},{code:0x1f538,x:8,y:7},{code:0x1f539,x:9,y:7},{code:0x1f53a,x:10,y:7},{code:0x1f53b,x:11,y:7},{code:0x1f4a0,x:1,y:5},{code:0x1f518,x:1,y:6},{code:0x1f533,x:3,y:7},{code:0x1f532,x:2,y:7},{code:0x1f3c1,x:12,y:4},{code:0x1f6a9,x:1,y:8},{code:0x1f38c,x:10,y:4},{code:0x1f3f4,x:0,y:5},{code:0x1f3f3,x:14,y:4},{code:0x1f1e6,x:14,y:1},{code:0x1f1e7,x:0,y:2},{code:0x1f1e8,x:1,y:2},{code:0x1f1e9,x:2,y:2},{code:0x1f1ea,x:3,y:2},{code:0x1f1eb,x:4,y:2},{code:0x1f1ec,x:5,y:2},{code:0x1f1ed,x:6,y:2},{code:0x1f1ee,x:7,y:2},{code:0x1f1ef,x:8,y:2},{code:0x1f1f0,x:9,y:2},{code:0x1f1f1,x:10,y:2},{code:0x1f1f2,x:11,y:2},{code:0x1f1f3,x:12,y:2},{code:0x1f1f4,x:13,y:2},{code:0x1f1f5,x:14,y:2},{code:0x1f1f6,x:0,y:3},{code:0x1f1f7,x:1,y:3},{code:0x1f1f8,x:2,y:3},{code:0x1f1f9,x:3,y:3},{code:0x1f1fa,x:4,y:3},{code:0x1f1fb,x:5,y:3},{code:0x1f1fc,x:6,y:3},{code:0x1f1fd,x:7,y:3},{code:0x1f1fe,x:8,y:3},{code:0x1f1ff,x:9,y:3}]\n    };\n\n    var getEmoji = function (code) {\n        if (code < 0x10000) {\n            return String.fromCharCode(code);\n        }\n        var offset = code - 0x10000,\n            lead = 0xd800 + (offset >> 10),\n            trail = 0xdc00 + (offset & 0x3ff);\n        return String.fromCharCode(lead)+String.fromCharCode(trail);\n    };\n\n    var emoji_data = {}, all = {};\n\n    var getEmojiByIndex = function (idx) {\n        var emoji;\n        for (var emoji_list in raw_data) {\n           if (raw_data[emoji_list][idx]) {\n               emoji = raw_data[emoji_list][idx];\n               break;\n           }\n        }\n        return getEmoji(emoji.code);\n    };\n\n    for (var emoji_list in raw_data) {\n        _.each(raw_data[emoji_list], function (item) {\n            var emoji = getEmoji(item.code);\n            emoji_data[emoji] = item;\n            !all[emoji_list] && (all[emoji_list] = []);\n            all[emoji_list].push(emoji);\n        });\n    }\n\n    var emoji_regexp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/g;\n\n    String.prototype.emojify = function (options) {\n        options || (options = {});\n        var sprite = options.sprite,\n            tag_name = sprite ? (options.tag_name || 'span') : 'img',\n            emoji_size = options.emoji_size || 20,\n            href = options.href ? ` href=\"#${options.href}\" ` :\"\",\n            title = options.title ? ` title=\"${options.title}\" ` :\"\";\n        return this.replace(emoji_regexp, function (emoji) {\n            let data = emoji_data[emoji],\n                emoji_code = data && Number(data.code).toString(16);\n            if (data) {\n                (emoji_code.length < 4) && (emoji_code = \"0\".repeat(4 - emoji_code.length) + emoji_code);\n                let img_src = tag_name === 'img' ? (sprite ? ' src=\"images/emoji/blank.gif\"' : '  src=\"images/emoji/svg32/emoji_u' + emoji_code + '.svg\"') : '';\n                return '<' + tag_name + img_src + href + title + ' class=\"emoji emoji-w' + emoji_size +\n                    (sprite ? (' sprite-' + sprite + '\" style=\"background-position: ' + '-' + (emoji_size * data.x) + 'px ' + '-' + (emoji_size * data.y) + 'px;\" ') : '\" ') +\n                    'alt=\"' + emoji + '\" ' +\n                    'data-emoji=\"' + emoji + '\"/>';\n            }\n            else\n                return emoji;\n        });\n    };\n\n    String.prototype.removeEmoji = function () {\n        return this.replace(emoji_regexp, function (emoji) {\n            var data = emoji_data[emoji];\n            if (data) {\n                return \"\";\n            } else {\n                return emoji;\n            }\n        });\n    };\n\n    String.prototype.replaceEmoji = function () {\n        return this.replace(emoji_regexp, function (emoji) {\n            var data = emoji_data[emoji];\n            if (data) {\n                return \" \";\n            } else {\n                return emoji;\n            }\n        });\n    };\n\n    $.fn.emojify = function (selector, options) {\n        this.find(selector).each(function () {\n            var text = $(this).html();\n            $(this).html(text.emojify(options));\n        });\n        return this;\n    };\n\n    return {\n        all: all,\n        get: getEmoji,\n        getByIndex: getEmojiByIndex\n    };\n});\n","define([\"xabber-dependencies\"], function (deps) {\n    var _ = deps._,\n        $ = deps.$,\n        hasher = deps.SHA1.b64_sha1;\n\n    var _image_cache = {};\n\n    var COLORS = [\n        \"#1abc9c\", \"#16a085\", \"#f1c40f\", \"#f39c12\",\n        \"#2ecc71\", \"#27ae60\", \"#e67e22\", \"#d35400\",\n        \"#3498db\", \"#2980b9\", \"#e74c3c\", \"#c0392b\",\n        \"#9b59b6\", \"#8e44ad\", \"#bdc3c7\", \"#34495e\",\n        \"#2c3e50\", \"#95a5a6\", \"#7f8c8d\", \"#ec87bf\",\n        \"#d870ad\", \"#f69785\", \"#9ba37e\", \"#b49255\",\n        \"#a94136\"\n    ];\n\n    var MAX_SIZE = 200;\n    var MAX_IMG_SIZE = 1280;\n\n    var b64toBlob = function (b64Data, contentType, sliceSize) {\n        contentType = contentType || '';\n        sliceSize = sliceSize || 512;\n        var byteCharacters = atob(b64Data);\n        var byteArrays = [];\n        for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n            var slice = byteCharacters.slice(offset, offset + sliceSize);\n            var byteNumbers = new Array(slice.length);\n            for (var i = 0; i < slice.length; i++) {\n                byteNumbers[i] = slice.charCodeAt(i);\n            }\n            var byteArray = new Uint8Array(byteNumbers);\n            byteArrays.push(byteArray);\n        }\n        var blob = new Blob(byteArrays, {type: contentType});\n        return blob;\n    };\n\n    var CachedImage = function (image) {\n        this.url = window.URL.createObjectURL(b64toBlob(image));\n        _image_cache[image] = this;\n        return this;\n    };\n\n    var getCachedImage = function (image) {\n        // save often used image and get blob url for it\n        if (image instanceof CachedImage) {\n            return image;\n        } else if (image && (_.isString(image) && image.indexOf('http') == 0 || _.isObject(image) && image.url && image.url.indexOf('http') == 0)) {\n            if (_.isString(image))\n                return {url: image};\n            else if (_.isObject(image))\n                return image;\n        }\n        return _image_cache[image] || new CachedImage(image);\n    };\n\n    var getDefaultAvatar = function (name, color, font, width, height) {\n        // generate colored avatar with first letters of username\n        var canvas = document.createElement('canvas'),\n            ctx = canvas.getContext('2d'),\n            _name = name ? name.trim() : '',\n            first_name, last_name, splitted_name = _name.split(' ', 2),\n            first_letter, second_letter;\n            // color_index;\n        first_name = splitted_name[0];\n        last_name = (splitted_name.length > 1 ? splitted_name[1] : '');\n        first_letter = first_name[0] || '';\n        if (last_name) {\n            second_letter = last_name[0];\n        } else {\n            second_letter = (first_name.length > 1 ? first_name[1] : '');\n        }\n        // color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n        canvas.width = width || 256;\n        canvas.height = height || 256;\n        ctx.rect(0, 0, width || 256, height || 256);\n        ctx.fillStyle = color || getAccountColor(name);//COLORS[color_index];\n        ctx.fill();\n        ctx.font = font || \"bold 100px sans-serif\";\n        ctx.fillStyle = \"#FFF\";\n        ctx.textAlign = \"center\";\n        if (font){\n            ctx.textBaseline = 'ideographic';\n            ctx.fillText(_name, width/2 || 128, (height/2 + height *0.28) || 160);\n        }\n        else\n            ctx.fillText(first_letter.toUpperCase()+second_letter.toUpperCase(), 128, 160);\n        var image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        return image;\n    };\n\n    var getAccountColor = function (name) {\n        var _name = name ? name.trim() : '',\n            color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n        return COLORS[color_index];\n    };\n\n    var getImageSize = function (size, max_size) {\n        if (size.width > size.height) {\n            if (size.width > max_size) {\n                size.height *= max_size / size.width;\n                size.width = max_size;\n            }\n        } else {\n            if (size.height > max_size) {\n                size.width *= max_size / size.height;\n                size.height = max_size;\n            }\n        }\n        return size;\n    };\n\n    var compressImage = function (file) {\n        var image_obj = new Image(),\n            src = window.URL.createObjectURL(file),\n            deferred = new $.Deferred();\n        image_obj.onload = function () {\n            image_obj.onload = null;\n            var canvas = document.createElement('canvas'),\n                ctx = canvas.getContext('2d'),\n                width = image_obj.naturalWidth,\n                height = image_obj.naturalHeight,\n                file_type = file.type,\n                file_name = file.name,\n                new_size = getImageSize({width: width, height: height}, MAX_IMG_SIZE);\n            if (file.type === 'image/svg+xml') {\n                file.width = width;\n                file.height = height;\n                deferred.resolve(file);\n            }\n            canvas.width = new_size.width;\n            canvas.height = new_size.height;\n            ctx.drawImage(image_obj, 0, 0, new_size.width, new_size.height);\n            canvas.toBlob((blob) => {\n                const file = new File([blob], file_name, {\n                    type: file_type,\n                    lastModified: Date.now()\n                });\n                deferred.resolve(file);\n            }, file_type, 0.8);\n            window.URL.revokeObjectURL(src);\n        };\n        image_obj.onerror = function() {\n            image_obj.onerror = null;\n            window.URL.revokeObjectURL(src);\n            deferred.resolve(false);\n        };\n        image_obj.src = src;\n        return deferred.promise();\n    };\n\n    var setCss = function (image_el, cached_image, img_size) {\n        var $image_el = $(image_el),\n            css = {\n                backgroundImage: 'url(\"' + cached_image.url + '\")',\n                backgroundSize: 'cover',\n                backgroundColor: '#FFF'\n            };\n        $image_el.css(css);\n    };\n\n    var getCachedBackground = function (base64) {\n        if (base64.indexOf('http') == 0)\n            return base64;\n        return getCachedImage(base64.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')).url;\n    };\n\n    var getAvatarFromFile = function (file) {\n        var image_obj = new Image(),\n             src = window.URL.createObjectURL(file),\n             deferred = new $.Deferred();\n         image_obj.onload = function () {\n             image_obj.onload = null;\n             var canvas = document.createElement('canvas'),\n                 ctx = canvas.getContext('2d'),\n                 width = image_obj.naturalWidth,\n                 height = image_obj.naturalHeight,\n                 b64_image, hash,\n                 new_size = getImageSize({width: width, height: height}, MAX_SIZE);\n             canvas.width = new_size.width;\n             canvas.height = new_size.height;\n             ctx.drawImage(image_obj, 0, 0, canvas.width, canvas.height);\n             b64_image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n             window.URL.revokeObjectURL(src);\n             canvas.toBlob((blob) => {\n                 var reader = new FileReader();\n                 reader.onload = function () {\n                     b64_image = reader.result.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n                     let binary_file = atob(b64_image),\n                        bytes = new Uint8Array(binary_file.length);\n\n                     for (let i = 0; i < binary_file.length; i++)\n                         bytes[i] = binary_file.charCodeAt(i);\n\n                     hash = sha1(bytes);\n                     deferred.resolve(b64_image, hash, binary_file.length);\n                 }.bind(this);\n                 reader.readAsDataURL(blob);\n             }, file.type, 0.8);\n         };\n         image_obj.onerror = function() {\n             image_obj.onerror = null;\n             window.URL.revokeObjectURL(src);\n             deferred.resolve(false, false, false);\n         };\n         image_obj.src = src;\n         return deferred.promise();\n    };\n\n    $.fn.setAvatar = function (image, size) {\n        var cached_image = getCachedImage(image);\n        setCss(this, cached_image, size);\n    };\n\n    return {\n        getCachedImage: getCachedImage,\n        getBlobImage: b64toBlob,\n        getDefaultAvatar: getDefaultAvatar,\n        getAvatarFromFile: getAvatarFromFile,\n        getDefaultColor: getAccountColor,\n        getCachedBackground: getCachedBackground,\n        compressImage: compressImage\n    };\n});\n","define([\"xabber-dependencies\", \"xabber-templates\"], function (deps, templates) {\n    var _ = deps._,\n        $ = deps.$;\n\n    var $modal_container = $('<div>').attr('id', 'modals').appendTo('body');\n\n    var modal_queue = [];\n \n    var Modal = function (modal_constructor, options) {\n        if (modal_constructor instanceof Function) {\n            this.$modal = $(modal_constructor());\n        } else {\n            this.$modal = $(modal_constructor);\n        }\n        this.options = options || {};\n        this.closed = new $.Deferred();\n    };\n\n    let getString = function (id, params) {\n        if (deps.xabber_i18next.exists(id)) {\n            return deps.xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else if (deps.xabber_i18next.default_lang) {\n            return deps.xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else\n            return \"\";\n    };\n \n    _.extend(Modal.prototype, {\n        open: function (options) {\n            if (this.options.use_queue) {\n                modal_queue.push(this);\n                (modal_queue.length === 1) && this.throw();\n            } else {\n                this.throw();\n            }\n            setTimeout(() => {\n                document.addEventListener(\"keyup\", this.clickHandler.bind(this));\n            }, 500);\n            return this.closed.promise();\n        },\n\n        throw: function () {\n            this.$modal.appendTo($('#modals')).prop('modal', this);\n            var modal_options = _.omit(this.options, ['use_queue']);\n            _.extend(modal_options, {\n                is_default_complete: true,\n                complete_data: null\n            });\n\n            if (this.options.use_queue) {\n                this.$modal.one('modal_close', function (ev, data) {\n                    this.$modal.detach();\n                    this.closed.resolve(data.value);\n                    modal_queue.shift();\n                    modal_queue.length && modal_queue[0].throw();\n                }.bind(this));\n            }\n\n            this.$modal._openModal(modal_options);\n        },\n\n        close: function (options) {\n            var modal_options = _.omit(options, ['use_queue', 'is_default_complete', 'complete_data']);\n            _.extend(modal_options, {\n                complete: function () {\n                    if (this.options.use_queue) {\n                        var data = _.isUndefined(options.complete_data) ? null : options.complete_data;\n                        this.complete(data);\n                    }\n                    if (options.is_default_complete) {\n                        if (typeof(this.options.complete) === \"function\") {\n                            this.options.complete();\n                        }\n                    } else {\n                        if (this.options.use_queue) {\n                            this.complete();\n                        }\n                        if (typeof(options.complete) === \"function\") {\n                            options.complete();\n                        }\n                    }\n                }.bind(this)\n            });\n\n            this.$modal.prop('modal', null);\n            this.$modal._closeModal(modal_options);\n        },\n\n        complete: function (value) {\n            document.removeEventListener(\"keyup\", this.clickHandler);\n            this.$modal.trigger('modal_close', {value: value});\n        },\n\n        clickHandler: function (ev) {\n            if (ev.keyCode === 13) {\n                this.$modal.find('.modal-footer button.ok-button').click();\n                ev.preventDefault();\n            }\n        }\n    });\n\n    $.fn._openModal = $.fn.openModal;\n\n    $.fn.openModal = function (options) {\n        var modal = new Modal(this, options);\n        return modal.open();\n    };\n\n    $.fn._closeModal = $.fn.closeModal;\n\n    $.fn.closeModal = function (options) {\n        var modal = this.prop('modal');\n        if (modal) {\n            modal.close(options);\n        } else {\n            this._closeModal(options);\n        }\n    };\n\n    return {\n        Modal: Modal,\n\n        clear_queue: function () {\n            modal_queue = [];\n        },\n\n        dialogs: {\n            common: function (header, text, buttons, dialog_options, flag, modal_class) {\n                var dialog = new Modal(function () {\n                    buttons || (buttons = {});\n                    dialog_options || (dialog_options = []);\n                    var ok_button = buttons.ok_button,\n                        cancel_button = buttons.cancel_button,\n                        optional_buttons = (buttons.optional_buttons || []).reverse();\n                    ok_button && (ok_button = {text: ok_button.text || getString(\"ok\")});\n                    cancel_button && (cancel_button = {text: cancel_button.text || getString(\"cancel\")});\n                    return templates.base.dialog({\n                        header: header,\n                        text: text,\n                        ok_button: ok_button,\n                        cancel_button: cancel_button,\n                        optional_buttons: optional_buttons,\n                        dialog_options: dialog_options,\n                        flag: flag || \"\",\n                        modal_class: modal_class || \"\"\n                    });\n                }, {use_queue: true});\n\n                if (dialog_options.modal_class) {\n                    dialog.$modal.addClass(dialog_options.modal_class)\n                }\n\n                if (dialog_options.inverted_buttons) {\n                    dialog.$modal.find('.dialog-options-wrap').html('');\n                    dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n                    dialog.$modal.find('.ok-button').addClass('btn-dark');\n                    dialog.$modal.find('.modal-footer').addClass('inverted-buttons');\n                }\n\n                if (dialog_options.img_details) {\n                    dialog.$modal.find('.modal-content').append('<div class=\"modal-images-details\"/>').append('<div class=\"modal-images-details-btn btn-flat btn-dark btn-main\"/>');\n                    dialog.$modal.find('.modal-images-details-btn').text(xabber.getString(\"details\"));\n                    dialog.$modal.find('.modal-images-details').append('<div class=\"image-details-container hidden\"/>');\n                    dialog.$modal.find('.image-details-container').html(dialog_options.img_details);\n                    dialog.$modal.find('.modal-images-details-btn').click(function () {\n                        dialog.$modal.find('.image-details-container').switchClass('hidden', !dialog.$modal.find('.image-details-container').hasClass('hidden'));\n                    });\n                }\n\n                if (dialog_options.blob_image_from_clipboard) {\n                    dialog.$modal.find('.dialog-options-wrap').html('');\n                    dialog.$modal.find('.img-from-clipboard')[0].src = dialog_options.blob_image_from_clipboard;\n                    dialog.$modal.find('.container-for-img').removeClass('hidden');\n                }\n\n                if (dialog_options.canvas) {\n                    dialog.$modal.find('.dialog-options-wrap').html('');\n                    dialog.$modal.find('.container-for-img').html(\"\").removeClass('hidden')[0].appendChild(dialog_options.canvas);\n                    if (dialog_options.bottom_text)\n                        $('<div class=\"dialog-bottom-text\"/>').html(dialog_options.bottom_text).appendTo(dialog.$modal.find('.container-for-img'));\n                }\n\n                if (dialog_options.escape_button) {\n                    dialog.$modal.find('.modal-header').append('<i class=\"close-modal mdi mdi-close mdi-24px\"></i>');\n                }\n\n                if (dialog_options.input_placeholder_value || dialog_options.input_value) {\n                    dialog.$modal.find('.dialog-options-wrap').html($('<input type=\"text\" placeholder=\"' + dialog_options.input_placeholder_value + '\" id=\"user_value\"/>').val(dialog_options.input_value));\n                }\n\n                dialog.$modal.find('.modal-footer button').click(function (ev) {\n                    var option = $(ev.target).data('option'),\n                        $options = dialog.$modal.find('.dialog-option'),\n                        user_value_input = dialog.$modal.find('#user_value');\n                    if (option && $options.length) {\n                        var result = {};\n                        _.each($options, function (item) {\n                            var $item = $(item);\n                            result[$item.data('name')] = $item.find('input').prop('checked');\n                        });\n                        dialog.close({complete_data: result});\n                    } else {\n                        if (user_value_input.length) {\n                            if ($(ev.target).hasClass('btn-cancel')) {\n                                dialog.close({complete_data: false});\n                            } else if ($(ev.target).hasClass('optional-button')) {\n                                dialog.close({complete_data: option});\n                            }\n                            else {\n                                var user_value = user_value_input.val();\n                                dialog.close({complete_data: user_value});\n                            }\n                        }\n                        else\n                            dialog.close({complete_data: option});\n                    }\n                });\n\n                dialog.$modal.find('.modal-header .close-modal').click(function () {\n                        dialog.close({complete_data: false});\n                });\n\n                return dialog.open();\n            },\n\n            warning: function (text, dialog_options) {\n                return this.common(getString(\"warning\"), text, {ok_button: true}, dialog_options);\n            },\n\n            error: function (text, dialog_options) {\n                return this.common(getString(\"xabber_account__login__dialog_error__header\"), text, {ok_button: true}, dialog_options);\n            },\n\n            ask: function (header, text, dialog_options, buttons, flag) {\n                var ok_text, cancel_text;\n                if (buttons) {\n                    ok_text = buttons.ok_button_text;\n                    cancel_text = buttons.cancel_button_text;\n                }\n                return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}}, dialog_options, flag);\n            },\n\n            ask_extended: function (header, text, dialog_options, buttons) {\n                var ok_text, optional_button;\n                if (buttons) {\n                    ok_text = buttons.ok_button_text;\n                    optional_button = (buttons.optional_button) ? [{value: buttons.optional_button, name: buttons.optional_button_text}] : false;\n                }\n                return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: true, optional_buttons: optional_button}, dialog_options, 'extended');\n            },\n\n            ask_enter_value: function (header, text, dialog_options, buttons) {\n                var ok_text, resend_button;\n                if (buttons) {\n                    ok_text = buttons.ok_button_text;\n                    resend_button = (buttons.resend_button_text) ? [{value: buttons.resend_to, name: buttons.resend_button_text}] : false;\n                }\n                return this.common(header, text, {ok_button: {text: ok_text}, optional_buttons: resend_button, cancel_button: true}, dialog_options);\n            },\n\n            notify: function (header, text) {\n                return this.common(header, text, {ok_button: true});\n            }\n        }\n    };\n});\n","define([\"xabber-dependencies\"], function (deps) {\n    var _ = deps._,\n        $ = deps.$;\n\n    $.fn.placeCaretAtEnd = function () {\n        if (!this.length) {\n            return this;\n        }\n        var el = this[0];\n        el.focus();\n        if (!_.isUndefined(window.getSelection) && !_.isUndefined(document.createRange)) {\n            var range = document.createRange();\n            range.selectNodeContents(el);\n            range.collapse(false);\n            var sel = window.getSelection();\n            sel.removeAllRanges();\n            sel.addRange(range);\n        } else if (!_.isUndefined(document.body.createTextRange)) {\n            var textRange = document.body.createTextRange();\n            textRange.moveToElementText(el);\n            textRange.collapse(false);\n            textRange.select();\n        }\n        return this;\n    };\n\n    $.fn.updateRichTextarea = function () {\n        var text = this.getTextFromRichTextarea();\n        if (!text) {\n            this.html('');\n        }\n        return this;\n    };\n\n    $.fn.flushRichTextarea = function () {\n        this.html('');\n        return this;\n    };\n\n    $.fn.pasteHtmlAtCaret = function (html) {\n        var sel, range;\n        this[0].focus();\n        if (window.getSelection) {\n            // IE9 and non-IE\n            sel = window.getSelection();\n            if (sel.getRangeAt && sel.rangeCount) {\n                range = sel.getRangeAt(0);\n                range.deleteContents();\n\n                // Range.createContextualFragment() would be useful here but is\n                // non-standard and not supported in all browsers (IE9, for one)\n                var el = document.createElement(\"div\");\n                el.innerHTML = html;\n                var frag = document.createDocumentFragment(), node, lastNode;\n                while ( (node = el.firstChild) ) {\n                    lastNode = frag.appendChild(node);\n                }\n                range.insertNode(frag);\n\n                // Preserve the selection\n                if (lastNode) {\n                    range = range.cloneRange();\n                    range.setStartAfter(lastNode);\n                    range.collapse(true);\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n            }\n        } else if (document.selection && document.selection.type != \"Control\") {\n            // IE < 9\n            document.selection.createRange().pasteHTML(html);\n        }\n        return this;\n    };\n\n    $.fn.getTextFromRichTextarea = function () {\n        var $div = $('<div>').html(this.html());\n        $div.find('.emoji').each(function () {\n            $(this).replaceWith($(this).data('emoji'));\n        });\n        $div.find('p').each(function () {\n            $(this).replaceWith($(this).html() + '\\n');\n        });\n        /*$div.find('blockquote').each(function () {\n            $(this).replaceWith($(this).html() + '\\n');\n        });*/\n        $div.find('span').each(function () {\n            $(this).replaceWith($(this).html());\n        });\n        $div.find('div').each(function () {\n            var $this = $(this);\n            $this.find('br').remove();\n            var html = $this.html();\n            if ($this.hasClass('emoji'))\n                $this.replaceWith(html);\n            else\n                $this.replaceWith('\\n'+html);\n        });\n        /*$div.find('br').each(function () {\n            $(this).replaceWith('\\n');\n        });*/\n        return $div.text();\n    };\n\n    return null;\n});\n","define([\n    \"xabber-dependencies\",\n    \"xabber-emoji-utils\",\n    \"xabber-image-utils\",\n    \"xabber-modal-utils\",\n    \"xabber-constants\",\n    \"xabber-textarea-utils\"\n], function (deps, emoji, images, modals, constants, textarea) {\n    var $ = deps.$,\n        _ = deps._,\n        moment = deps.moment;\n\n    // jQuery extensions\n    $.fn.switchClass = function (klass, condition) {\n        if (arguments.length === 1) {\n            condition = !this.hasClass(klass);\n        }\n        if (condition) {\n            this.addClass(klass);\n        } else {\n            this.removeClass(klass);\n        }\n        return this;\n    };\n\n    $.fn.showIf = function (condition) {\n        return this.switchClass('hidden', !condition);\n    };\n\n    $.fn.hideIf = function (condition) {\n        return this.switchClass('hidden', condition);\n    };\n\n    var getHyperLink = function (url) {\n        var prot = (url.indexOf('http://') === 0 ||  url.indexOf('https://') === 0) ? '' : 'http://',\n            escaped_url = \"\";\n        try {\n            escaped_url = encodeURI(decodeURI(url)).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\n        }\n        catch (e) {\n            escaped_url = url;\n        }\n        try {\n            url = decodeURI(url);\n        }\n        catch (e) {}\n        return \"<a target='_blank' class='msg-hyperlink' href='\"+prot+escaped_url + \"'>\"+url+\"</a>\";\n    };\n\n    $.fn.hyperlinkify = function (options) {\n        options || (options = {});\n        var $query = options.selector ? this.find(options.selector) : this;\n        $query.each(function (i, obj) {\n            var $obj = $(obj),\n                html_concat = \"\",\n                url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n                // url_regexp = /((((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)|((\\b)((\\w+)([\\w#!:.?+=&%@!\\-\\/])(\\w+))?(\\.net|\\.edu|\\.cloud|\\.top|\\.vip|\\.cash|\\.im|\\.online|\\.chat|\\.com|\\.org|\\.ru|\\.travel|\\.info|\\.tv|\\.biz|\\.mobi|\\.tel|\\.ar|\\.al|\\.asia|\\.np|\\.ng|\\.io|\\.bb|\\.br|\\.ca|\\.tr|\\.co|\\.ec|\\.fr|\\.ht|\\.in|\\.eg|\\.ie|\\.et|\\.jo|\\.mr|\\.id|\\.iq|\\.nl|\\.ps|\\.ph|\\.sl|\\.si|\\.se|\\.af|\\.ag|\\.be|\\.bd|\\.bg|\\.cl|\\.cd|\\.my|\\.mz|\\.mx|\\.cz|\\.eu|\\.dz|\\.de|\\.hk|\\.it|\\.la|\\.no|\\.pl|\\.ro|\\.sg|\\.ke|\\.kr|\\.ch|\\.ug|\\.us|\\.ve|\\.vn|\\.at|\\.bo|\\.cm|\\.cn|\\.cg|\\.dk|\\.fi|\\.gr|\\.gh|\\.is|\\.ir|\\.jp|\\.lv|\\.ma|\\.me|\\.pk|\\.pe|\\.pt|\\.sa|\\.sk|\\.es|\\.tz|\\.tw|\\.ua|\\.uz|\\.ye)((\\/\\w+)|(\\S+)|\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/g;\n            $obj[0].childNodes.forEach(function (node) {\n                let $node = $(node),\n                    x = node.outerHTML;\n                if (node.tagName === 'A') {\n                    html_concat += x;\n                    return;\n                }\n                else {\n                    if (node.nodeName === '#text')\n                        x = _.escape($node.text());\n                    let list = x && x.match(url_regexp);\n                    list = Array.from(new Set(list));\n                    if (!list) {\n                        html_concat += x;\n                        return;\n                    }\n                    if (list.length === 1 && list[0] === x) {\n                        html_concat += options.decode_uri ? decodeURI(x) : getHyperLink(x);\n                    } else {\n                        for (i = 0; i < list.length; i++) {\n                            if (options.decode_uri)\n                                x = x.replace(list[i], decodeURI(list[i]));\n                            else\n                                x = x.replaceAll(new RegExp(`(\\\\s|^)(${list[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`,\"g\"), '$1' + getHyperLink(list[i]));\n                        }\n                        html_concat += x;\n                    }\n                }\n            }.bind(this));\n            $obj.html(html_concat);\n        });\n        return this;\n    };\n\n    var utils = {\n        uuid: function () {\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                var r = Math.random() * 16 | 0,\n                    v = c == 'x' ? r : r & 0x3 | 0x8;\n                return v.toString(16);\n            });\n        },\n\n        utoa: function (str) {\n            return window.btoa(_.unescape(encodeURIComponent(str)));\n        },\n\n        atou: function (str) {\n            return decodeURIComponent(_.escape(window.atob(str)));\n        },\n\n        now: function () {\n            return Math.floor(moment.now() / 1000);\n        },\n\n        pretty_time: function (timestamp) {\n            var datetime = timestamp ? moment(timestamp) : moment();\n            return datetime.format('HH:mm:ss');\n        },\n\n        pretty_date: function (timestamp, format) {\n            var datetime = timestamp ? moment(timestamp) : moment();\n            return datetime.format(format || 'dddd, MMMM D, YYYY');\n        },\n\n        pretty_datetime: function (timestamp, format) {\n            var datetime = timestamp ? moment(timestamp) : moment();\n            return datetime.format(format || 'MMMM D, YYYY HH:mm:ss');\n        },\n\n        pretty_short_datetime_recent_chat: function (timestamp) {\n            timestamp = Number(timestamp ? moment(timestamp) : moment());\n            if (moment(timestamp).startOf('day').isSame(moment().startOf('day')) || Number(moment().subtract(12, 'hours') < timestamp)) {\n                return moment(timestamp).format(\"HH:mm:ss\");\n            }\n            if (Number(moment().subtract(12, 'hours')) > timestamp && Number(moment().subtract(7, 'days')) <= timestamp) {\n                return moment(timestamp).format(\"ddd\");\n            }\n            if (Number(moment().subtract(7, 'days')) > timestamp && Number(moment().subtract(1, 'year')) <= timestamp) {\n                return moment(timestamp).format(\"MMM D\");\n            }\n            if (timestamp && Number(moment().subtract(1, 'year')) > timestamp) {\n                return moment(timestamp).format(\"D MMM YYYY\");\n            }\n        },\n\n        pretty_short_datetime: function (timestamp) {\n            var datetime = timestamp ? moment(timestamp) : moment(),\n                day = moment(datetime).startOf('day'),\n                year = moment(datetime).startOf('year');\n            if (day.isSame(moment().startOf('day'))) {\n                return datetime.format('HH:mm:ss');\n            } else if (year.isSame(moment().startOf('year'))) {\n                return datetime.format('MMM D');\n            } else {\n                return datetime.format('DD/MM/gg');\n            }\n        },\n\n        pretty_short_month_date: function (timestamp) {\n            var datetime = timestamp ? moment(timestamp) : moment(),\n                day = moment(datetime).startOf('day');\n            if (day.isSame(moment().startOf('day'))) {\n                return datetime.format('HH:mm:ss');\n            } else {\n                return datetime.format('MMM D, YYYY HH:mm:ss');\n            }\n        },\n\n        isImageType: function(type) {\n            if (type.indexOf('image') > -1)\n                return true;\n            else\n                return false;\n        },\n\n        getDomainFromUrl: function(url) {\n            let a = document.createElement('a');\n            if (url && !/^https?:\\/\\//i.test(url))\n                url = 'http://' + url;\n            a.href = url;\n            return a.hostname;\n        },\n\n        isVideoType: function(type) {\n            if (type.indexOf('video') > -1)\n                return true;\n            else\n                return false;\n        },\n\n        file_type_icon: function (mime_type) {\n            let filetype = utils.pretty_file_type(mime_type);\n            if (filetype === 'image')\n                return 'mdi-image';\n            if (filetype === 'audio')\n                return 'mdi-music-note';\n            if (filetype === 'video')\n                return 'mdi-filmstrip';\n            if (filetype === 'document')\n                return 'mdi-file-document-box';\n            if (filetype === 'presentation')\n                return 'mdi-presentation';\n            if (filetype === 'archive')\n                return 'mdi-zip-box';\n            if (filetype === 'file')\n                return 'mdi-file';\n            if (filetype === 'pdf')\n                return 'mdi-file-pdf';\n            return 'mdi-file'\n        },\n\n        file_type_icon_svg: function (mime_type) {\n            let filetype = utils.pretty_file_type(mime_type);\n            if (filetype === 'image')\n                return 'image';\n            if (filetype === 'audio')\n                return 'file-audio';\n            if (filetype === 'video')\n                return 'file-video';\n            if (filetype === 'document')\n                return 'file-document';\n            if (filetype === 'presentation')\n                return 'file-presentation';\n            if (filetype === 'archive')\n                return 'file-zip';\n            if (filetype === 'file')\n                return 'file';\n            if (filetype === 'pdf')\n                return 'file-pdf';\n            return 'file'\n        },\n\n        pretty_file_type: function (mime_type) {\n            if (constants.MIME_TYPES.image.includes(mime_type))\n                return 'image';\n            if (constants.MIME_TYPES.audio.includes(mime_type))\n                return 'audio';\n            if (constants.MIME_TYPES.video.includes(mime_type))\n                return 'video';\n            if (constants.MIME_TYPES.document.includes(mime_type))\n                return 'document';\n            if (constants.MIME_TYPES.pdf.includes(mime_type))\n                return 'pdf';\n            if (constants.MIME_TYPES.presentation.includes(mime_type))\n                return 'presentation';\n            if (constants.MIME_TYPES.archive.includes(mime_type))\n                return 'archive';\n            if (constants.MIME_TYPES.table.includes(mime_type))\n                return 'electronic table';\n            return 'file';\n        },\n\n        pretty_file_type_with_article: function (mime_type) {\n            let type = utils.pretty_file_type(mime_type),\n                vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n            (type === 'pdf') && (type = 'document');\n            if (vowels.includes(type[0]))\n                return 'an ' + type;\n            else\n                return 'a ' + type;\n        },\n\n        pretty_size: function (size) {\n            if (!size)\n                return \"\";\n            if (_.isNaN(Number(size)))\n                return size;\n            if (size < 1024) {\n                return size+' B';\n            } else if (size < 1048576) {\n                return (size/1024).toFixed(2)+' KiB';\n            } else if (size < 1073741824) {\n                return (size/1048576).toFixed(2)+' MiB';\n            } else {\n                return (size/1073741824).toFixed(2)+' GiB';\n            }\n        },\n\n        pretty_duration: function (duration) {\n            if (_.isNaN(Number(duration)))\n                return duration;\n            if (_.isUndefined(duration) || duration === \"\")\n                return \"\";\n            if (duration < 10)\n                return (\"0:0\" + duration);\n            if (duration < 60)\n                return (\"0:\" + duration);\n            if (duration >= 60)\n                return (Math.trunc(duration/60) + \":\" + ((duration%60 < 10) ? (\"0\" + (duration%60)) : duration%60));\n        },\n\n        pretty_name: function (name) {\n            return name ? (name[0].toUpperCase() + name.replace(/-/,' ').substr(1).toLowerCase()) : \"\";\n        },\n\n        getKeyByValue: function (object, value) {\n            return Object.keys(object).find(key => object[key] === value);\n        },\n\n        slice_string: function (str, from, to) {\n            to = _.isNumber(to) ? to : [...str].length;\n            if (str.length === [...str].length)\n                return str.slice(from, to);\n            else\n                return Array.from(str).slice(from, to).join(\"\");\n        },\n\n        slice_pretty_body: function (body, mutable_refs) {\n            if (!mutable_refs || !mutable_refs.length)\n                return body;\n            body = body || \"\";\n            mutable_refs = mutable_refs.filter(m => m.type === 'groupchat' || m.type === 'forward');\n            let pretty_body = Array.from(deps.Strophe.xmlescape(body));\n            mutable_refs && mutable_refs.forEach(function (ref) {\n                for (let idx = ref.start; idx < ref.end; idx++)\n                    pretty_body[idx] = \"\";\n            }.bind(this));\n            return deps.Strophe.xmlunescape(pretty_body.join(\"\").trim());\n        },\n\n        markupBodyMessage: function (message, mention_tag) {\n            let attrs = _.clone(message.attributes),\n                mentions = attrs.mentions || [],\n                markups = attrs.markups || [],\n                mutable_refs = attrs.mutable_content || [],\n                blockquotes = attrs.blockquotes || [],\n                markup_body = Array.from(deps.Strophe.xmlescape(attrs.original_message || attrs.message || \"\"));\n            !mention_tag && (mention_tag = 'span');\n\n            mutable_refs.forEach(function (muted) {\n                for (let idx = muted.start; idx < muted.end; idx++)\n                    markup_body[idx] = \"\";\n            }.bind(this));\n\n            mentions.forEach(function (mention) {\n                let start_idx = mention.start,\n                    end_idx = mention.end > (markup_body.length - 1) ? (markup_body.length - 1) : (mention.end - 1), target = mention.target;\n                if (start_idx > markup_body.length - 1)\n                    return;\n                if (mention.is_gc) {\n                    let id = target.match(/\\?id=\\w*/),\n                        jid = target.match(/\\?jid=.*/);\n                    if (id)\n                        target = id[0].slice(4);\n                    else if (jid)\n                        target = jid[0].slice(5);\n                    else {\n                        target = \"\";\n                        mention.me = true;\n                    }\n                }\n                else\n                    target = target.slice(5);\n                if (mention_tag === 'mention'){\n                    markup_body[start_idx] = '<' + mention_tag + ' data-target=\"?jid=' + target + '\">' + markup_body[start_idx];\n                    markup_body[end_idx] += '</' + mention_tag + '>';\n                    return;\n                }\n                markup_body[start_idx] = '<' + mention_tag + ' data-target=\"' + target + '\" class=\"mention' + (mention.me ? ' ground-color-100' : '') + '\">' + markup_body[start_idx];\n                markup_body[end_idx] += '</' + mention_tag + '>';\n            }.bind(this));\n\n            markups.forEach(function (markup) {\n                let start_idx = markup.start,\n                    end_idx = markup.end > (markup_body.length - 1) ? (markup_body.length - 1) : (markup.end - 1);\n                if (start_idx > markup_body.length - 1)\n                    return;\n                if (markup.markup.length) {\n                    let start_tags = \"\",\n                        end_tags = \"\";\n                    markup.markup.forEach(function (mark_up_style) {\n                        if (typeof(mark_up_style) === 'object') {\n                            start_tags = '<a target=\"_blank\" class=\"msg-hyperlink\" href=\"' + mark_up_style.uri + '\">' + start_tags;\n                            end_tags += '</a>';\n                        } else {\n                            start_tags = '<' + mark_up_style[0].toLowerCase() + '>' + start_tags;\n                            end_tags += '</' + mark_up_style[0].toLowerCase() + '>';\n                        }\n                    }.bind(this));\n                    markup_body[start_idx] = start_tags + markup_body[start_idx];\n                    markup_body[end_idx] += end_tags;\n                }\n            }.bind(this));\n\n            blockquotes.forEach(function (quote) {\n                let end_idx = quote.end > (markup_body.length - 1) ? (markup_body.length - 1) : (quote.end - 1);\n                for (let idx = quote.start; idx < (quote.start + constants.QUOTE_MARKER.length); idx++) {\n                    if (idx === end_idx)\n                        markup_body[idx] = '<br>';\n                    else\n                        markup_body[idx] = \"\";\n\n                }\n                for (let idx = quote.start; idx < end_idx; idx++) {\n                    if (markup_body[idx] === '\\n') {\n                        for (let child_idx = idx + 1; child_idx <= (idx + constants.QUOTE_MARKER.length); child_idx++)\n                            markup_body[child_idx] = \"\";\n                        idx+= constants.QUOTE_MARKER.length - 1;\n                    }\n                }\n                if (mention_tag === 'mention'){\n                    markup_body[quote.start] = '<blockquote>';\n                    markup_body[end_idx] += '</blockquote>';\n                    return;\n                }\n                markup_body[quote.start] = '<div class=\"quote\">';\n                markup_body[end_idx] += '</div>';\n            }.bind(this));\n\n            return markup_body.join(\"\").trim();\n        },\n\n        getOS: function() {\n            let platform = window.navigator.platform,\n                macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n                windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n                os = null;\n\n            if (macosPlatforms.indexOf(platform) !== -1) {\n                os = 'Mac OS';\n            } else if (windowsPlatforms.indexOf(platform) !== -1) {\n                os = 'Windows';\n            } else if (!os && /Linux/.test(platform)) {\n                os = 'Linux';\n            }\n\n            return os;\n        },\n\n        isOverflownWidth: function(element) {\n            return element.scrollWidth > element.clientWidth;\n        },\n\n        isOverflownHeight: function(element) {\n            return element.scrollHeight > element.clientHeight;\n        },\n\n        render_data_form: function (data_form) {\n            let $data_form = $('<div class=\"data-form\"/>');\n            data_form.fields.forEach(function (field) {\n                if (field.type === 'hidden')\n                    return;\n                if (field.type === 'fixed') {\n                    let $fixed_field = $('<div class=\"data-form-field fixed-field\"/>');\n                    field.label && $fixed_field.append($('<div class=\"label\"/>').text(field.label));\n                    field.values.forEach(function (value) {\n                        let $input = $('<div class=\"value\"/>').text(value);\n                        $fixed_field.append($input);\n                    }.bind(this));\n                    $data_form.append($fixed_field);\n                }\n                if (field.type === 'boolean') {\n                    let $input = $(`<button id=${field.var} class=\"data-form-field ground-color-100 btn-dark btn-flat btn-main boolean-field\"/>`).text(field.label);\n                    $data_form.append($input);\n                }\n            }.bind(this));\n            return $data_form;\n        },\n\n        copyTextToClipboard: function(text, callback_msg, errback_msg) {\n            if (!window.navigator.clipboard) {\n                return;\n            }\n            window.navigator.clipboard.writeText(text).then(function() {\n                if (callback_msg) {\n                    let info_msg = callback_msg;\n                    this.callback_popup_message(info_msg, 1500);\n                }\n            }.bind(this), function() {\n                if (errback_msg) {\n                    let info_msg = errback_msg;\n                    this.callback_popup_message(info_msg, 1500);\n                }\n            }.bind(this));\n        },\n\n        callback_popup_message: function (info_msg, time) {\n            let $body = $(document.body),\n                $popup_msg = $('<div class=\"callback-popup-message\"/>').text(info_msg);\n            time = time || 3000;\n            $body.find('.callback-popup-message').remove();\n            $body.append($popup_msg);\n            setTimeout( function() {\n                $popup_msg.remove();\n            }, time);\n        },\n\n        emoji_size: function (count) {\n            let size;\n            switch (count) {\n                case 1:\n                    size = 56;\n                    break;\n                case 2:\n                    size = 44;\n                    break;\n                case 3:\n                    size = 32;\n                    break;\n                case 4:\n                    size = 24;\n                    break;\n                case 5:\n                    size = 22;\n                    break;\n                default:\n                    size = 20;\n                    break;\n            }\n            return size;\n        },\n\n        openWindow: function (url, errback) {\n            let win = window.open(url, '_blank');\n            if (win) {\n                win.focus();\n            } else {\n                errback && errback();\n            }\n        },\n\n        clearSelection: function () {\n            var selection = window.getSelection();\n            if (selection.empty) {\n                selection.empty();\n            } else if (selection.removeAllRanges) {\n                selection.removeAllRanges();\n            }\n        },\n\n        getCookie: function (name) {\n            let matches = window.document.cookie.match(new RegExp(\n                \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n            ));\n            return matches ? decodeURIComponent(matches[1]) : undefined;\n        },\n\n        isMobile: {\n            Android: function () {\n                return navigator.userAgent.match(/Android/i);\n            },\n            BlackBerry: function () {\n                return navigator.userAgent.match(/BlackBerry/i);\n            },\n            iOS: function () {\n                return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n            },\n            Opera: function () {\n                return navigator.userAgent.match(/Opera Mini/i);\n            },\n            Windows: function () {\n                return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);\n            },\n            any: function () {\n                return (this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows());\n            }\n        },\n\n        fromBase64toArrayBuffer: function (b64_string) {\n            return Uint8Array.from(atob(b64_string), c => c.charCodeAt(0)).buffer;\n        },\n\n        ArrayBuffertoBase64: function (arrayBuffer) {\n            return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n        },\n\n        generateHOTPKey: async function(secret, counter) {\n            let Crypto = window.crypto.subtle;\n            let counterArray = this.padCounter(counter);\n\n            let key = await Crypto.importKey(\n                'raw',\n                secret,\n                { name: 'HMAC', hash: { name: 'SHA-1' } },\n                false,\n                ['sign']\n            );\n\n            let HS = await Crypto.sign('HMAC', key, counterArray);\n\n            return HS;\n        },\n\n        padCounter: function(counter) {\n            let buffer = new ArrayBuffer(8);\n            let bView = new DataView(buffer);\n\n            let byteString = '0'.repeat(64); // 8 bytes\n            let bCounter = (byteString + counter.toString(2)).slice(-64);\n\n            for (let byte = 0; byte < 64; byte += 8) {\n                let byteValue = parseInt(bCounter.slice(byte, byte + 8), 2);\n                bView.setUint8(byte / 8, byteValue);\n            }\n\n            return buffer;\n        },\n\n        DT: function(HS) {\n            let offset = HS[19] & 0b1111;\n            let P = ((HS[offset] & 0x7f) << 24) | (HS[offset + 1] << 16) | (HS[offset + 2] << 8) | HS[offset + 3]\n            let pString = P.toString(2);\n\n            return pString;\n        },\n\n        truncate: function(uKey) {\n            let Sbits = this.DT(uKey);\n            let Snum = parseInt(Sbits, 2);\n\n            return Snum;\n        },\n\n        generateHOTP: async function(secret, counter) {\n            let key = await this.generateHOTPKey(secret, counter);\n            let uKey = new Uint8Array(key);\n\n            let Snum = this.truncate(uKey);\n            let padded = ('000000' + (Snum % (10 ** 8))).slice(-8);\n\n            return padded;\n        },\n\n        hmacSha256: async function(key, message) {\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n            let hashBuffer = await crypto.subtle.sign(\n                algorithm.name,\n                key,\n                message\n            );\n\n            return hashBuffer;\n        },\n\n        stringToArrayBuffer: function (string) {\n            let { length } = string;\n            let buffer = new Uint8Array(length);\n\n            for (let i = 0; i < length; i++) {\n                buffer[i] = string.charCodeAt(i);\n            }\n\n            return buffer;\n        },\n\n        AES: {\n            ALGO_NAME: 'AES-GCM',\n\n            decoder: new window.TextDecoder('utf-8'),\n            encoder: new window.TextEncoder('utf-8'),\n\n            decrypt: async function (masterKey, HMACData, payload) {\n                let masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                    hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n                let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n                key = new Uint8Array(key);\n\n                let encryptionKey = key.slice(0,32),\n                    authenticationKey = key.slice(32,64),\n                    iv = key.slice(64);\n\n                let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n                authenticationKey = await crypto.subtle.importKey(\n                    \"raw\",\n                    authenticationKey,\n                    algorithm,\n                    false, [\"sign\", \"verify\"]\n                );\n\n                let generatedHMAC = await utils.hmacSha256(authenticationKey, payload);\n\n                generatedHMAC = generatedHMAC.slice(0, generatedHMAC.byteLength - 16);\n\n                if (!(utils.ArrayBuffertoBase64(HMACData) === utils.ArrayBuffertoBase64(generatedHMAC)))\n                    return;\n\n                encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['decrypt'])\n\n\n                let decryptedBuffer = await window.crypto.subtle.decrypt({\n                    name: 'AES-CBC',\n                    iv,\n                }, encryptionKey, payload);\n\n                return utils.AES.decoder.decode(decryptedBuffer);\n            },\n\n            encrypt: async function (plaintext) {\n                let masterKey = window.crypto.getRandomValues(new Uint8Array(32)),\n                    masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                    hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n                let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n                key = new Uint8Array(key);\n\n                let encryptionKey = key.slice(0,32),\n                    authenticationKey = key.slice(32,64),\n                    iv = key.slice(64);\n\n                encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['encrypt']);\n\n                let encrypted = await utils.AES.generateAESencryptedMessage(iv, encryptionKey, plaintext);\n\n                let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n                authenticationKey = await crypto.subtle.importKey(\n                    \"raw\",\n                    authenticationKey,\n                    algorithm,\n                    false, [\"sign\", \"verify\"]\n                );\n\n                let payload = await utils.hmacSha256(authenticationKey, encrypted);\n\n                payload = payload.slice(0, payload.byteLength - 16);\n\n                let keydata = new Uint8Array([...masterKey, ...new Uint8Array(payload)]);\n\n                return {\n                    keydata: keydata.buffer,\n                    payload: encrypted,\n                }\n            },\n\n            generateAESencryptedMessage: async function (iv, key, plaintext) {\n                let encryptOptions = {\n                    name: 'AES-CBC',\n                    iv,\n                };\n                let encodedPlaintext = utils.AES.encoder.encode(plaintext),\n                    encrypted = await window.crypto.subtle.encrypt(encryptOptions, key, encodedPlaintext);\n\n                return encrypted;\n            },\n\n            arrayBufferConcat: function () {\n                let length = 0,\n                    buffer = null;\n\n                for (let i in arguments) {\n                    buffer = arguments[i];\n                    length += buffer.byteLength;\n                }\n\n                let joined = new Uint8Array(length),\n                    offset = 0;\n\n                for (let i in arguments) {\n                    buffer = arguments[i];\n                    joined.set(new Uint8Array(buffer), offset);\n                    offset += buffer.byteLength;\n                }\n\n                return joined.buffer\n            },\n\n            generateAESKey: async function () {\n                let algo = {\n                    name: utils.AES.ALGO_NAME,\n                    length: constants.AES_KEY_LENGTH,\n                };\n                let keyUsage = ['encrypt', 'decrypt'],\n                    key = await window.crypto.subtle.generateKey(algo, constants.AES_EXTRACTABLE, keyUsage);\n\n                return key;\n            }\n        },\n\n        getBrowser: function () {\n            // Get the user-agent string\n            let userAgentString =\n                navigator.userAgent;\n\n            // Detect Chrome\n            let chromeAgent =\n                userAgentString.indexOf(\"Chrome\") > -1;\n\n            // Detect Internet Explorer\n            let IExplorerAgent =\n                userAgentString.indexOf(\"MSIE\") > -1 ||\n                userAgentString.indexOf(\"Windows NT:\") > -1;\n\n            // Detect Firefox\n            let firefoxAgent =\n                userAgentString.indexOf(\"Firefox\") > -1;\n\n            // Detect Safari\n            let safariAgent =\n                userAgentString.indexOf(\"Safari\") > -1;\n\n            // Discard Safari since it also matches Chrome\n            if ((chromeAgent) && (safariAgent))\n                safariAgent = false;\n\n            // Detect Opera\n            let operaAgent =\n                userAgentString.indexOf(\"OP\") > -1;\n\n            // Discard Chrome since it also matches Opera\n            if ((chromeAgent) && (operaAgent))\n                chromeAgent = false;\n\n            if (safariAgent)\n                return 'Safari';\n            if (chromeAgent)\n                return 'Chrome';\n            if (IExplorerAgent)\n                return 'IE';\n            if (operaAgent)\n                return 'Opera';\n            if (firefoxAgent)\n                return 'Firefox';\n            return 'Unknown browser';\n        },\n\n        emoji: emoji,\n        images: images,\n        modals: modals,\n        dialogs: modals.dialogs\n    };\n\n    return utils;\n});\n","define(\"xabber-vcard\", function () {\n  return function (xabber) {\n    let env = xabber.env,\n        constants = env.constants,\n        templates = env.templates.vcard,\n        $ = env.$,\n        _ = env._,\n        moment = env.moment,\n        Strophe = env.Strophe,\n        $iq = env.$iq,\n        $build = env.$build,\n        utils = env.utils;\n\n    let xmlToObject = function ($vcard) {\n        let vcard = {\n            nickname: $vcard.find('NICKNAME').text().trim(),\n            fullname: $vcard.find('FN').text().trim(),\n            first_name: $vcard.find('N GIVEN').text().trim(),\n            middle_name: $vcard.find('N MIDDLE').text().trim(),\n            last_name: $vcard.find('N FAMILY').text().trim(),\n            birthday: $vcard.find('BDAY').text().trim(),\n            job_title: $vcard.find('TITLE').text().trim(),\n            role: $vcard.find('ROLE').text().trim(),\n            url: $vcard.find('URL').text().trim(),\n            description: $vcard.find('DESC').text().trim(),\n            jabber_id: $vcard.find('JABBERID').text().trim(),\n            org: {},\n            photo: {},\n            phone: {},\n            address: {},\n            email: {}\n        };\n\n        if ($vcard.find('X-PRIVACY').length || $vcard.find('X-MEMBERSHIP').length || $vcard.find('X-INDEX').length) {\n            vcard.group_info = {\n                jid: vcard.jabber_id,\n                description: vcard.description,\n                name: vcard.nickname,\n                anonymous: $vcard.find('X-PRIVACY').text().trim(),\n                searchable: $vcard.find('X-INDEX').text().trim(),\n                model: $vcard.find('X-MEMBERSHIP').text().trim(),\n                status_msg: $vcard.find('X-STATUS').text().trim(),\n                members_num: $vcard.find('X-MEMBERS').text().trim()\n            };\n        }\n\n        let $org = $vcard.find('ORG');\n        if ($org.length) {\n            vcard.org.name = $org.find('ORGNAME').text().trim();\n            vcard.org.unit = $org.find('ORGUNIT').text().trim();\n        }\n\n        let $photo = $vcard.find('PHOTO');\n        if ($photo.length) {\n            vcard.photo.image = $photo.find('BINVAL').text().trim();\n            vcard.photo.type = $photo.find('TYPE').text().trim();\n        }\n\n        $vcard.find('TEL').each(function () {\n            let $this = $(this),\n                number = $this.find('NUMBER').text().trim();\n            if (!number) {\n                return;\n            }\n            if ($this.find('WORK').length) {\n                vcard.phone.work = number;\n            } else if ($this.find('HOME').length) {\n                vcard.phone.home = number;\n            } else if ($this.find('MOBILE').length) {\n                vcard.phone.mobile = number;\n            } else {\n                vcard.phone.default = number;\n            }\n        });\n\n        $vcard.find('EMAIL').each(function () {\n            let $this = $(this);\n            let email = $this.find('USERID').text().trim();\n            if (!email) {\n                return;\n            }\n            if ($this.find('WORK').length) {\n                vcard.email.work = email;\n            } else if ($this.find('HOME').length) {\n                vcard.email.home = email;\n            } else {\n                vcard.email.default = email;\n            }\n        });\n\n        $vcard.find('ADR').each(function () {\n            let $this = $(this);\n            let address = {\n                pobox: $this.find('POBOX').text().trim(),\n                extadd: $this.find('EXTADR').text().trim(),\n                street: $this.find('STREET').text().trim(),\n                locality: $this.find('LOCALITY').text().trim(),\n                region: $this.find('REGION').text().trim(),\n                pcode: $this.find('PCODE').text().trim(),\n                country: $this.find('CTRY').text().trim()\n            };\n            if ($this.find('WORK').length) {\n                vcard.address.work = address;\n            } else if ($this.find('HOME').length) {\n                vcard.address.home = address;\n            } else {\n                vcard.address.default = address;\n            }\n        });\n\n        return vcard;\n    };\n\n    let objectToXml = function (vcard) {\n        let $vcard = $build(\"vCard\", {xmlns: Strophe.NS.VCARD});\n        vcard.nickname && $vcard.c(\"NICKNAME\").t(vcard.nickname).up();\n        vcard.fullname && $vcard.c(\"FN\").t(vcard.fullname).up();\n        if (vcard.first_name || vcard.last_name || vcard.middle_name) {\n            $vcard.c(\"N\");\n            vcard.first_name && $vcard.c(\"GIVEN\").t(vcard.first_name).up();\n            vcard.last_name && $vcard.c(\"FAMILY\").t(vcard.last_name).up();\n            vcard.middle_name && $vcard.c(\"MIDDLE\").t(vcard.middle_name).up();\n            $vcard.up();\n        }\n        vcard.birthday && $vcard.c(\"BDAY\").t(vcard.birthday).up();\n        vcard.job_title && $vcard.c(\"TITLE\").t(vcard.job_title).up();\n        vcard.role && $vcard.c(\"ROLE\").t(vcard.role).up();\n        if (vcard.org.name || vcard.org.unit) {\n            $vcard.c(\"ORG\");\n            vcard.org.name && $vcard.c(\"ORGNAME\").t(vcard.org.name).up();\n            vcard.org.unit && $vcard.c(\"ORGUNIT\").t(vcard.org.unit).up();\n            $vcard.up();\n        }\n        vcard.url && $vcard.c(\"URL\").t(vcard.url).up();\n        if (vcard.photo.image) {\n            $vcard.c(\"PHOTO\").c(\"BINVAL\").t(vcard.photo.image).up();\n            $vcard.c(\"TYPE\").t(vcard.photo.type || 'image/jpeg').up();\n            $vcard.up();\n        }\n        vcard.description && $vcard.c(\"DESC\").t(vcard.description).up();\n        vcard.jabber_id && $vcard.c(\"JABBERID\").t(vcard.jabber_id).up();\n\n        _.each(vcard.phone, function (phone, type) {\n            $vcard.c(\"TEL\").c(\"NUMBER\").t(phone).up();\n            type !== 'default' && $vcard.c(type.toUpperCase()).up();\n            $vcard.up();\n        });\n\n        _.each(vcard.email, function (email, type) {\n            $vcard.c(\"EMAIL\").c(\"USERID\").t(email).up();\n            type !== 'default' && $vcard.c(type.toUpperCase()).up();\n            $vcard.up();\n        });\n\n        _.each(vcard.address, function (address, type) {\n            $vcard.c(\"ADR\");\n            type !== 'default' && $vcard.c(type.toUpperCase()).up();\n            address.pobox && $vcard.c(\"POBOX\").t(address.pobox).up();\n            address.extadd && $vcard.c(\"EXTADR\").t(address.extadd).up();\n            address.street && $vcard.c(\"STREET\").t(address.street).up();\n            address.locality && $vcard.c(\"LOCALITY\").t(address.locality).up();\n            address.region && $vcard.c(\"REGION\").t(address.region).up();\n            address.pcode && $vcard.c(\"PCODE\").t(address.pcode).up();\n            address.country && $vcard.c(\"CTRY\").t(address.country).up();\n            $vcard.up();\n        });\n\n        return $vcard.tree();\n    };\n\n    Strophe.addConnectionPlugin('vcard', {\n        _connection: null,\n\n        init: function(conn) {\n            this._connection = conn;\n            return Strophe.addNamespace('VCARD', 'vcard-temp');\n        },\n\n        get: function(jid, callback, errback) {\n            let iq = $iq({type: 'get', to: jid}).c('vCard', {xmlns: Strophe.NS.VCARD});\n            this._connection.sendIQ(iq, function (res) {\n                if (!callback) { return; }\n                let vcard = xmlToObject($(res).find('vCard[xmlns='+Strophe.NS.VCARD+']'));\n                vcard.jabber_id || (vcard.jabber_id = jid);\n                return callback(vcard);\n            }, errback);\n        },\n\n        set: function(jid, vcard, callback, errback) {\n            vcard.jabber_id || (vcard.jabber_id = jid);\n            let iq = $iq({type: 'set', to: jid}).cnode(objectToXml(vcard));\n            this._connection.sendIQ(iq, callback, errback);\n        }\n    });\n\n    utils.vcard = {\n        getBlank: function (jid) {\n            let vcard = xmlToObject($('<div/>'));\n            vcard.jabber_id = jid;\n            return vcard;\n        }\n    };\n\n    xabber.VCardView = xabber.BasicView.extend({\n        template: templates.vcard,\n\n        _initialize: function () {\n            this.$el.html(this.template());\n            this.model.on(\"change:vcard_updated\", this.update, this);\n            this.data.on(\"change:refresh\", this.updateRefreshButton, this);\n        },\n\n        render: function () {\n            this.$('.block-header .block-name').text(this.model.get('group_chat') ? 'Group chat details' : xabber.getString(\"vcard_screen__header\"));\n            this.data.set('refresh', false);\n            this.model.getVCard(() => {\n                this.update();\n            });\n        },\n\n        update: function () {\n            let $info, vcard = this.model.get('vcard');\n\n            $info = this.$('.jid-info-wrap');\n            $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n            $info.showIf(vcard.jabber_id);\n\n            $info = this.$('.personal-info-wrap');\n            $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n            $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n            $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n            $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n            $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n            $info = this.$('.nickname-info-wrap');\n            $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n            $info.showIf(vcard.nickname);\n\n            $info = this.$('.birthday-info-wrap');\n            $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n            $info.showIf(vcard.birthday);\n\n            $info = this.$('.job-info-wrap');\n            $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n            $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n            $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n            $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n            $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n            $info = this.$('.site-info-wrap');\n            $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n            $info.showIf(vcard.url);\n\n            $info = this.$('.description-info-wrap');\n            $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n            $info.showIf(vcard.description);\n\n            let $addr_info = this.$('.address-info-wrap'),\n                address = _.clone(vcard.address),\n                show_addr_block = false;\n            $addr_info.find('.info').addClass('hidden');\n            _.each(address, function (addr, type) {\n                $info = $addr_info.find('.address-'+type);\n                $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n                $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n                $info.find('.street').showIf(addr.street).text(addr.street);\n                $info.find('.locality').showIf(addr.locality).text(addr.locality);\n                $info.find('.region').showIf(addr.region).text(addr.region);\n                $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n                $info.find('.country').showIf(addr.country).text(addr.country);\n                let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                             addr.region || addr.pcode || addr.country);\n                show && (show_addr_block = true);\n                $info.showIf(show);\n            });\n            $addr_info.showIf(show_addr_block);\n\n            $info = this.$('.phone-info-wrap');\n            let phone = vcard.phone;\n            if (phone) {\n                $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n                $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n                $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n                $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n            }\n            $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n            $info = this.$('.email-info-wrap');\n            let email = vcard.email;\n            if (email) {\n                $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n                $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n                $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n            }\n            $info.showIf(email && (email.work || email.home || email.default));\n\n            this.parent.updateScrollBar();\n        },\n\n        onClickIcon: function (ev) {\n            let $target_info = $(ev.target).closest('.info-wrap'),\n                $target_value = $target_info.find('.value'), copied_text = \"\";\n            $target_value.each((idx, item) => {\n                let $item = $(item),\n                    value_text = $item.text();\n                value_text && (copied_text != \"\") && (copied_text += '\\n');\n                value_text && (copied_text += value_text);\n                copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n            });\n        },\n\n        updateRefreshButton: function () {\n            this.$('.btn-vcard-refresh .button').hideIf(this.data.get('refresh'));\n            this.$('.btn-vcard-refresh .preloader-wrapper').showIf(this.data.get('refresh'));\n        },\n\n        refresh: function () {\n            if (!this.data.get('refresh')) {\n                this.data.set('refresh', true);\n                this.model.getVCard(() => {\n                    this.data.set('refresh', false);\n                });\n            }\n        }\n    });\n\n    xabber.VCardRightView = xabber.VCardView.extend({\n        template: templates.vcard_right,\n\n        __initialize: function (ev) {\n            this.ps_container = this.$('.full-vcard-content');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n            this.model.set('vcard_hidden', true)\n        },\n\n        render: function () {\n            this.data.set('refresh', false);\n            this.update();\n            this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n            if (this.parent.ps_container.length) {\n                if(!this.model.get('vcard_hidden'))\n                    this.parent.ps_container.perfectScrollbar('destroy')\n                else\n                    this.parent.ps_container.perfectScrollbar(\n                        _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                    );\n            }\n            this.model.updateName();\n            this.model.updateAvatar();\n            this.model.getVCard(() => {\n                this.update();\n            });\n        },\n\n        update: function () {\n            let $info, vcard = this.model.get('vcard');\n\n            $info = this.$('.jid-info-wrap');\n            $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n            $info.showIf(vcard.jabber_id);\n\n            $info = this.$('.vcard-wrap .personal-info-wrap');\n            $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n            $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n            $info.showIf(vcard.first_name || vcard.last_name);\n\n            $info = this.$('.full-vcard-wrap .personal-info-wrap');\n            $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n            $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n            $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n            $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n            $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n            $info = this.$('.nickname-info-wrap');\n            $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n            $info.showIf(vcard.nickname);\n\n            $info = this.$('.birthday-info-wrap');\n            $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n            $info.showIf(vcard.birthday);\n\n            $info = this.$('.job-info-wrap');\n            $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n            $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n            $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n            $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n            $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n            $info = this.$('.site-info-wrap');\n            $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n            $info.showIf(vcard.url);\n\n            $info = this.$('.description-info-wrap');\n            $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n            $info.showIf(vcard.description);\n\n            let $addr_info = this.$('.address-info-wrap'),\n                address = _.clone(vcard.address),\n                show_addr_block = false;\n            $addr_info.find('.info').addClass('hidden');\n            _.each(address, function (addr, type) {\n                $info = $addr_info.find('.address-'+type);\n                $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n                $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n                $info.find('.street').showIf(addr.street).text(addr.street);\n                $info.find('.locality').showIf(addr.locality).text(addr.locality);\n                $info.find('.region').showIf(addr.region).text(addr.region);\n                $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n                $info.find('.country').showIf(addr.country).text(addr.country);\n                let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                    addr.region || addr.pcode || addr.country);\n                show && (show_addr_block = true);\n                $info.showIf(show);\n            });\n            $addr_info.showIf(show_addr_block);\n\n            $info = this.$('.phone-info-wrap');\n            let phone = vcard.phone;\n            if (phone) {\n                $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n                $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n                $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n                $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n            }\n            $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n            $info = this.$('.email-info-wrap');\n            let email = vcard.email;\n            if (email) {\n                $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n                $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n                $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n            }\n            $info.showIf(email && (email.work || email.home || email.default));\n\n            this.parent.updateScrollBar();\n        },\n\n        onScroll: function () {\n            if(this.ps_container[0].scrollTop >= 170) {\n                this.$('.vcard-header-title').addClass('fixed-scroll');\n                this.$('.vcard-header-title').css({'background-color': 'rgba(255,255,255,1)'});\n            }\n            else if(this.ps_container[0].scrollTop >= 40) {\n                this.$('.vcard-header-title').removeClass('fixed-scroll');\n                this.$('.vcard-header-title').css({'background-color': 'rgba(255,255,255,0.5)'});\n            }\n            else {\n                this.$('.vcard-header-title').removeClass('fixed-scroll');\n                this.$('.vcard-header-title').css({'background-color': 'rgba(255,255,255,0)'});\n            }\n\n        },\n\n        onClickIcon: function (ev) {\n            let $target_info = $(ev.target),\n                $target_value = $target_info.find('.value'), copied_text = \"\";\n            $target_value.each((idx, item) => {\n                let $item = $(item),\n                    value_text = $item.text();\n                value_text && (copied_text != \"\") && (copied_text += '\\n');\n                value_text && (copied_text += value_text);\n                copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n            });\n        },\n\n    });\n\n    xabber.VCardEditView = xabber.BasicView.extend({\n        className: 'account-vcard-edit-wrap',\n        template: templates.vcard_edit,\n        ps_selector: '.panel-content',\n\n        events: {\n            \"keyup input\": \"keyUp\",\n            \"keyup textarea\": \"keyUp\",\n            \"input .first-name input\": \"changePlaceholder\",\n            \"input .middle-name input\": \"changePlaceholder\",\n            \"input .last-name input\": \"changePlaceholder\",\n            \"click .btn-vcard-save\": \"save\",\n            \"click .btn-vcard-back\": \"render\",\n        },\n\n        _initialize: function () {\n            let self = this,\n                $input = this.$('.datepicker').pickadate({\n                selectMonths: true,\n                selectYears: 100,\n                autoOk: false,\n                // min = 100 years ago\n                min: new Date(moment.now() - 3153600000000),\n                max: new Date(moment.now() - 86400000),\n                format: 'dd.mm.yyyy',\n                allowKeyboardControl: false,\n                today: '',\n                onClose: function(){\n                    $(document.activeElement).blur();\n                    self.$('.btn-vcard-back').removeClass('hidden');\n                    self.$('.btn-vcard-save').removeClass('hidden');\n                },\n                klass: {\n                    weekday_display: 'picker__weekday-display ground-color-700',\n                    date_display: 'picker__date-display ground-color-500',\n                    navPrev: 'picker__nav--prev hover-ground-color-100',\n                    navNext: 'picker__nav--next hover-ground-color-100',\n                    selected: 'picker__day--selected ground-color-500',\n                    now: 'picker__day--today text-color-700',\n                    buttonClear: 'btn-flat btn-main btn-dark',\n                    buttonClose: 'btn-flat btn-main text-color-700'\n                }\n            });\n            $input.on('mousedown', function cancelEvent(evt) {\n                evt.preventDefault();\n            });\n            this.data.on(\"change:saving\", this.updateSaveButton, this);\n        },\n\n        render: function () {\n            this.data.set('saving', false);\n            this.setData();\n            Materialize.updateTextFields();\n            this.changePlaceholder();\n            this.updateScrollBar();\n            this.$('.btn-vcard-back').addClass('hidden');\n            this.$('.btn-vcard-save').addClass('hidden');\n        },\n\n        changePlaceholder: function () {\n            let nickname_placeholder = ((this.$('.first-name input').val() + \" \" + this.$('.middle-name input').val()).trim() + \" \" + this.$('.last-name input').val()).trim() || this.model.get('jid');\n            this.$('.nickname input').attr('placeholder', nickname_placeholder);\n        },\n\n        setData: function () {\n            let vcard = this.model.get('vcard');\n\n            this.$('.nickname input').val(vcard.nickname);\n            this.$('.fullname input').val(vcard.fullname);\n            this.$('.first-name input').val(vcard.first_name);\n            this.$('.last-name input').val(vcard.last_name);\n            this.$('.middle-name input').val(vcard.middle_name);\n\n            this.$('.birthday input').val(vcard.birthday);\n\n            this.$('.role input').val(vcard.role);\n            this.$('.job-title input').val(vcard.job_title);\n            this.$('.org-name input').val(vcard.org.name);\n            this.$('.org-unit input').val(vcard.org.unit);\n\n            this.$('.url input').val(vcard.url);\n\n            this.$('.description textarea').val(vcard.description);\n\n            this.$('.phone-work input').val(vcard.phone.work);\n            this.$('.phone-home input').val(vcard.phone.home);\n            this.$('.phone-mobile input').val(vcard.phone.mobile);\n\n            this.$('.email-work input').val(vcard.email.work);\n            this.$('.email-home input').val(vcard.email.home);\n\n            let addr = vcard.address.work || {},\n                $info = this.$('.address-work-wrap');\n            $info.find('.pobox input').val(addr.pobox);\n            $info.find('.extadd input').val(addr.extadd);\n            $info.find('.street input').val(addr.street);\n            $info.find('.locality input').val(addr.locality);\n            $info.find('.region input').val(addr.region);\n            $info.find('.pcode input').val(addr.pcode);\n            $info.find('.country input').val(addr.country);\n\n            addr = vcard.address.home || {};\n            $info = this.$('.address-home-wrap');\n            $info.find('.pobox input').val(addr.pobox);\n            $info.find('.extadd input').val(addr.extadd);\n            $info.find('.street input').val(addr.street);\n            $info.find('.locality input').val(addr.locality);\n            $info.find('.region input').val(addr.region);\n            $info.find('.pcode input').val(addr.pcode);\n            $info.find('.country input').val(addr.country);\n        },\n\n        getData: function () {\n            let vcard = utils.vcard.getBlank(this.model.get('jid'));\n\n            vcard.nickname = this.$('.nickname input').val();\n            vcard.fullname = this.$('.fullname input').val();\n            vcard.first_name = this.$('.first-name input').val();\n            vcard.last_name = this.$('.last-name input').val();\n            vcard.middle_name = this.$('.middle-name input').val();\n\n            vcard.birthday = this.$('.birthday input').val();\n\n            vcard.role = this.$('.role input').val();\n            vcard.job_title = this.$('.job-title input').val();\n            vcard.org.name = this.$('.org-name input').val();\n            vcard.org.unit = this.$('.org-unit input').val();\n\n            vcard.url = this.$('.url input').val();\n\n            vcard.description = this.$('.description textarea').val();\n\n            vcard.phone.work = this.$('.phone-work input').val();\n            vcard.phone.home = this.$('.phone-home input').val();\n            vcard.phone.mobile = this.$('.phone-mobile input').val();\n\n            vcard.email.work = this.$('.email-work input').val();\n            vcard.email.home = this.$('.email-home input').val();\n\n            vcard.address.work = {};\n            let addr = vcard.address.work,\n                $info = this.$('.address-work-wrap');\n            addr.pobox = $info.find('.pobox input').val();\n            addr.extadd = $info.find('.extadd input').val();\n            addr.street = $info.find('.street input').val();\n            addr.locality = $info.find('.locality input').val();\n            addr.region = $info.find('.region input').val();\n            addr.pcode = $info.find('.pcode input').val();\n            addr.country = $info.find('.country input').val();\n\n            vcard.address.home = {};\n            addr = vcard.address.home;\n            $info = this.$('.address-home-wrap');\n            addr.pobox = $info.find('.pobox input').val();\n            addr.extadd = $info.find('.extadd input').val();\n            addr.street = $info.find('.street input').val();\n            addr.locality = $info.find('.locality input').val();\n            addr.region = $info.find('.region input').val();\n            addr.pcode = $info.find('.pcode input').val();\n            addr.country = $info.find('.country input').val();\n            return vcard;\n        },\n\n        updateSaveButton: function () {\n            this.$('.btn-vcard-save').text(this.data.get('saving') ? xabber.getString(\"saving\") : xabber.getString(\"vcard_edit__button_save\"));\n        },\n\n        save: function () {\n            if (this.data.get('saving')) {\n                return;\n            }\n            this.data.set('saving', true);\n            this.model.setVCard(this.getData(),\n                () => {\n                    this.model.getVCard();\n                    this.data.set('saving', false);\n                    this.$('.btn-vcard-back').addClass('hidden');\n                    this.$('.btn-vcard-save').addClass('hidden');\n                },\n                function () {\n                    utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                    this.data.set('saving', false);\n                }\n            );\n        },\n\n        keyUp: function () {\n            this.$('.btn-vcard-back').removeClass('hidden');\n            this.$('.btn-vcard-save').removeClass('hidden');\n        },\n    });\n\n    return xabber;\n  };\n});\n","define(\"xabber-views\", function () {\n  return function (xabber) {\n    let env = xabber.env,\n        constants = env.constants,\n        templates = env.templates.base,\n        utils = env.utils,\n        uuid = env.uuid,\n        $ = env.$,\n        _ = env._;\n\n    xabber.ViewPath = function (str) {\n        this.path = str.split('.');\n        this.applyTo = function (obj) {\n            let result = obj;\n            for (let idx = 0; idx < this.path.length; idx++) {\n                if (!(result = _.result(result, this.path[idx]))) {\n                    return null;\n                }\n            }\n            return result;\n        };\n    };\n\n    xabber.BasicView = Backbone.View.extend({\n        template: function () {\n            return '';\n        },\n\n        initialize: function (options) {\n            options || (options = {});\n            this.parent = options.parent;\n            this.vname = options.vname;\n            this.children = {};\n            this.$el.addClass(options.classlist);\n            if (!options.el) {\n                this.$el.html(this.template(_.extend({view: this}, constants)));\n            }\n            if (!_.isUndefined(this.ps_selector)) {\n                this.ps_container = this.$(this.ps_selector);\n                if (this.ps_container.length) {\n                    this.ps_container.perfectScrollbar(\n                        _.extend(this.ps_settings || {}, xabber.ps_settings)\n                    );\n                }\n            }\n            this.data = new Backbone.Model({visible: false});\n            this.data.on(\"change:visible\", this.onChangedVisibility, this);\n            xabber.on(\"update_css\", function (options) {\n                this.updateCSS && this.updateCSS();\n                (options && options.size_changed && this.windowResized) && this.windowResized();\n            }, this);\n            this._initialize && this._initialize(options);\n            this.__initialize && this.__initialize(options);\n        },\n\n        isVisible: function () {\n            return this.data.get('visible');\n        },\n\n        onChangedVisibility: function () {},\n\n        show: function () {\n            this.onShow.apply(this, arguments);\n            this.data.set('visible', true);\n            this.trigger('after_show', this);\n            this.updateScrollBar();\n        },\n\n        hide: function () {\n            this.trigger('before_hide', this);\n            this.data.set('visible', false);\n            this.onHide.apply(this, arguments);\n        },\n\n        onShow: function () {\n            this.render.apply(this, arguments);\n            _.each(this.children, function (view) {\n                view.render.apply(view, arguments);\n            });\n        },\n\n        onHide: function () {\n            _.each(this.children, function (view) {\n                view.onHide.apply(view, arguments);\n            });\n        },\n\n        detach: function () {\n            this.$el.detach();\n        },\n\n        child: function (name) {\n            return this.children[name];\n        },\n\n        addChild: function (name, constructor, options) {\n            let view;\n            if (constructor instanceof Backbone.View) {\n                view = constructor;\n                view.parent = this;\n            } else {\n                view = new constructor(_.extend({\n                    parent: this,\n                    vname: name\n                }, options));\n            }\n            this.children[name] = view;\n            return view;\n        },\n\n        removeChild: function (name, options) {\n            options || (options = {});\n            let view = this.children[name];\n            if (view) {\n                delete this.children[name];\n                options.soft ? view.detach() : (view.trigger(\"remove\") && view.remove());\n            }\n        },\n\n        removeChildren: function () {\n            _.each(_.keys(this.children), (view_id) => {\n                this.removeChild(view_id);\n            });\n        },\n\n        setCustomCss: function (styles) {\n            this.$el.css(styles);\n        },\n\n        removeCustomCss: function () {\n            this.$el.removeAttr('style');\n        },\n\n        saveScrollBarOffset: function () {\n            if (this.ps_container && this.isVisible()) {\n                let scroll_top = this.data.get('scroll_top');\n                if (typeof scroll_top === \"undefined\") {\n                    this.data.set('scroll_top', this.getScrollTop());\n                }\n            }\n        },\n\n        updateScrollBar: function () {\n            // let start_scrolled_bottom = this.getScrollBottom();\n            if (this.ps_container && this.isVisible()) {\n                let scroll_top = this.data.get('scroll_top');\n                if (typeof scroll_top === \"undefined\") {\n                    this.ps_container.perfectScrollbar('update');\n                } else {\n                    this.data.set('scroll_top', undefined);\n                    this.scrollTo(scroll_top);\n                }\n            }\n            // this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - start_scrolled_bottom);\n            return this;\n        },\n\n        scrollTo: function (offset) {\n            this.ps_container[0].scrollTop = offset;\n            this.ps_container.perfectScrollbar('update');\n        },\n\n        scrollToTop: function () {\n            this.scrollTo(0);\n        },\n\n        scrollToBottom: function () {\n            let scrollHeight = this.ps_container[0].scrollHeight,\n                offsetHeight = this.ps_container[0].offsetHeight;\n            this.scrollTo(scrollHeight - offsetHeight);\n        },\n\n        scrollToChild: function ($child) {\n            let scrollTop = _.reduce($child.prevAll(), function (sum, el) {\n                return sum + el.offsetHeight + 2;\n            }, 0);\n            this.scrollTo(scrollTop);\n        },\n\n        getScrollTop: function () {\n            return this.ps_container[0].scrollTop;\n        },\n\n        getScrollBottom: function () {\n            let scrollTop = this.ps_container[0].scrollTop,\n                scrollHeight = this.ps_container[0].scrollHeight,\n                offsetHeight = this.ps_container[0].offsetHeight;\n            return scrollHeight - (scrollTop + offsetHeight);\n        },\n\n        getPercentScrolled: function () {\n            if (this.isScrolledToTop()) {\n                return 0;\n            }\n            let scrollTop = this.ps_container[0].scrollTop,\n                scrollHeight = this.ps_container[0].scrollHeight,\n                offsetHeight = this.ps_container[0].offsetHeight;\n            return scrollTop / (scrollHeight - offsetHeight);\n        },\n\n        isScrolledToTop: function () {\n            return this.getScrollTop() === 0;\n        },\n\n        isScrolledToBottom: function () {\n            let scrollTop = this.ps_container[0].scrollTop,\n                scrollHeight = this.ps_container[0].scrollHeight,\n                offsetHeight = this.ps_container[0].offsetHeight;\n            return scrollHeight === scrollTop + offsetHeight;\n        }\n    });\n\n    xabber.NodeView = xabber.BasicView.extend({\n        onShow: function (options, tree) {\n            if ((xabber.body.data.get('contact_details_view') && (this.vname === 'right_contact'))){\n                xabber.body.data.get('contact_details_view').scrollTo(xabber.body.data.get('contact_details_view').data.get('scroll_top'));\n                xabber.body.data.set('contact_details_view', null)\n                return;\n            }\n            _.each(this.children, function (view) {\n                view.hide();\n            });\n            this.$el.children().detach();\n            tree = this.patchTree(tree, options) || tree;\n            _.each(this.children, (view, name) => {\n                if (_.has(tree, name)) {\n                    if (name !== 'login')\n                        this.$el.append(view.$el);\n                    this.$el.switchClass('hidden', name === 'login');\n                    view.show(options, tree[name]);\n                }\n            });\n            return this.render(options);\n        },\n\n        onHide: function (options) {\n            _.each(this.children, function (view) {\n                view.hide(options);\n            });\n        },\n\n        patchTree: function () {}\n    });\n\n    xabber.Container = xabber.BasicView.extend({\n        className: 'container',\n\n        render: function (options, path) {\n            let new_view = path.applyTo(options);\n            this.$el.children().detach();\n            if (this.view !== new_view) {\n                this.onHide(options);\n            }\n            this.view = new_view;\n            if (this.view) {\n                this.$el.append(this.view.$el);\n                this.view.show(options);\n            }\n            return this;\n        },\n\n        onHide: function (options) {\n            if (this.view) {\n                this.view.hide(options);\n            }\n            this.view = null;\n        }\n    });\n\n    xabber.SearchView = xabber.BasicView.extend({\n        events: {\n            \"keydown .search-input\": \"keyUpOnSearch\",\n            \"focusout .search-input\": \"clearSearchSelection\",\n            \"click .close-search-icon\": \"clearSearch\",\n            \"click .list-item\": \"onClickItem\"\n        },\n\n        keyUpOnSearch: function (ev) {\n            ev.stopPropagation();\n            this.ids = this.$('.list-item:not(.hidden)').map(function () {\n                return $(this).data('id');\n            }).toArray();\n            let $selection = this.getSelectedItem();\n            if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n                return this.selectNextItem();\n            }\n            if (ev.keyCode === constants.KEY_ARROW_UP) {\n                return this.selectPreviousItem();\n            }\n            if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n                ev.preventDefault();\n                return this.onEnterPressed($selection);\n            }\n            if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n                ev.preventDefault();\n                if ($(ev.target).val())\n                    return this.clearSearch();\n                else\n                    this.close();\n            }\n            this.updateSearch();\n        },\n\n        getSelectedItem: function () {\n            return this.$('.list-item[data-id=\"'+this.selection_id+'\"]');\n        },\n\n        selectItem: function (id, arrow) {\n            if (!id)\n                return;\n            this.clearSearchSelection();\n            let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n            if ($selection.length) {\n                this.selection_id = id;\n            } else {\n                this.ps_container[0].scrollTop = 0;\n                $selection = this.$('.list-item:visible').first();\n                this.selection_id = $selection.data('id');\n            }\n            if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop || $selection[0].clientHeight + $selection[0].offsetTop < this.ps_container[0].scrollTop))\n                this.ps_container[0].scrollTop = $selection[0].offsetTop;\n            if (arrow === 'up' && ($selection[0].offsetTop <= this.ps_container[0].scrollTop || $selection[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n                this.ps_container[0].scrollTop = $selection[0].offsetTop;\n            $selection.addClass('selected');\n        },\n\n        selectNextItem: function () {\n            this.selectItem(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n        },\n\n        selectPreviousItem: function () {\n            this.selectItem(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n        },\n\n        updateSearch: function () {\n            if (!this._update_search_timeout) {\n                let query = this.$('.search-input').val();\n                this.$('.search-form').switchClass('active', query);\n                this.clearSearchSelection();\n                if (query)\n                    this.search(query.toLowerCase());\n                else {\n                    this.$('.list-item').removeClass('hidden');\n                    this.onEmptyQuery();\n                }\n                this.updateScrollBar();\n                this.query = false;\n                this._update_search_timeout = setTimeout(() => {\n                    this._update_search_timeout = null;\n                    this.query && this.updateSearch();\n                }, 150);\n            } else {\n                this.query = true;\n            }\n        },\n\n        clearSearch: function (ev) {\n            ev && ev.preventDefault();\n            this.$('.search-input').val('');\n            this.updateSearch();\n        },\n\n        clearSearchSelection: function (ev) {\n            this.selection_id = null;\n            this.$('.list-item.selected').removeClass('selected');\n        },\n\n        searchAll: function () {\n            this.$('.list-item').removeClass('hidden');\n        },\n\n        keyUpOnSearchWithQuery: function () {},\n\n        close: function () {},\n\n        search: function () {},\n\n        onEnterPressed: function () {},\n\n        onEmptyQuery: function () {},\n\n        onClickItem: function () {}\n    });\n\n      xabber.SearchPanelView = xabber.SearchView.extend({\n          events: {\n              \"keydown .search-input\": \"keyUpOnSearch\",\n              \"focusout .search-input\": \"clearSearchSelection\",\n              \"click .close-search-icon\": \"clearSearch\",\n              \"click .list-item\": \"onClickItem\",\n              \"click .btn-search-messages\": \"updateSearchWithMessages\"\n          },\n\n          updateSearchWithMessages: function (ev) {\n              this.search_messages = true;\n              this.updateSearch();\n          },\n\n          keyUpOnSearch: function (ev) {\n              ev.stopPropagation();\n              if ($(ev.target).val()) {\n                  this.keyUpOnSearchWithQuery(ev);\n                  return;\n              }\n              this.ids = this.$('.list-item:not(.hidden)').map(function () {\n                  return $(this).data('id');\n              }).toArray();\n              let $selection = this.getSelectedItem();\n              if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n                  return this.selectNextItem();\n              }\n              if (ev.keyCode === constants.KEY_ARROW_UP) {\n                  return this.selectPreviousItem();\n              }\n              if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n                  ev.preventDefault();\n                  return this.onEnterPressed($selection);\n              }\n              if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n                  ev.preventDefault();\n                  if ($(ev.target).val())\n                      return this.clearSearch();\n                  else\n                      this.close();\n              }\n              this.updateSearch();\n          },\n\n          onScrollY: function (options) {\n              if (xabber.all_searched_messages && xabber.all_searched_messages.length && this.queryid && !this._loading_messages && !this._messages_loaded && this.isScrolledToBottom()) {\n                  this._loading_messages = true;\n                  options = options || {};\n                  this.queryid = uuid();\n                  options.query_id = this.queryid;\n                  let accounts = xabber.accounts.connected;\n                  accounts.forEach((account) => {\n                      let first_message = xabber.all_searched_messages.find(message => (message.account.get('jid') === account.get('jid')));\n                      if (!first_message || account.searched_msgs_loaded) {\n                          // this._loading_messages = false;\n                          return;\n                      }\n                      options.account = account;\n                      options.before = first_message.get('archive_id');\n                      this.MAMRequest(this.query_text, options, (messages) => {\n                          _.each(messages, (message) => {\n                              let message_from_stanza = account.chats.receiveChatMessage(message,\n                                  _.extend({is_searched: true}, options)\n                                  ),\n                                  msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza),\n                                  $message_item_view;\n                              if (!message_from_stanza)\n                                  return;\n                              else\n                                  $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                              if (msg_idx === 0) {\n                                  $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                              } else {\n                                  $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                              }\n                          });\n                          this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                          this.updateScrollBar();\n                          this._loading_messages = false;\n                      });\n                  });\n                  (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n              }\n          },\n\n          onScroll: function () {},\n\n          keyUpOnSearchWithQuery: function (ev) {\n              ev.stopPropagation();\n              this.ids = this.$('.searched-lists-wrap .list-item:not(.hidden)').map(function () {\n                  return $(this).data('id');\n              }).toArray();\n              let $selection = this.getSelectedItemWithQuery();\n              if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n                  return this.selectNextItemWithQuery();\n              }\n              if (ev.keyCode === constants.KEY_ARROW_UP) {\n                  return this.selectPreviousItemWithQuery();\n              }\n              if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n                  ev.preventDefault();\n                  return this.onEnterPressed($selection);\n              }\n              else if (ev.keyCode === constants.KEY_ENTER){\n                  this.search_messages = true;\n              }\n              if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n                  ev.preventDefault();\n                  if ($(ev.target).val())\n                      return this.clearSearch();\n                  else\n                      this.close();\n              }\n              this.updateSearch();\n          },\n\n          getSelectedItemWithQuery: function () {\n              return this.$('.searched-lists-wrap .list-item[data-id=\"'+this.selection_id+'\"]');\n          },\n\n          selectItemWithQuery: function (id, arrow) {\n              if (!id) {\n                  if (this.isScrolledToBottom())\n                      this.onScrollY();\n                  return;\n              }\n              this.clearSearchSelection();\n              let $selection = this.$('.searched-lists-wrap .list-item[data-id=\"'+id+'\"]');\n              if ($selection.length) {\n                  this.selection_id = id;\n              } else {\n                  this.ps_container[0].scrollTop = 0;\n                  $selection = this.$('.searched-lists-wrap .list-item:visible').first();\n                  this.selection_id = $selection.data('id');\n              }\n              if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n              || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop < this.ps_container[0].scrollTop))\n                  this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n              if (arrow === 'up' && ($selection[0].offsetTop + $selection.parent().parent()[0].offsetTop <= this.ps_container[0].scrollTop\n              || $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n                  this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n              $selection.addClass('selected');\n          },\n\n          selectNextItemWithQuery: function () {\n              this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n          },\n\n          selectPreviousItemWithQuery: function () {\n              this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n          },\n\n          search: function (query) {\n              this.$(this.main_container).addClass('hidden');\n              clearTimeout(this.keyup_timeout);\n              this.keyup_timeout = null;\n              this.query_text = query;\n              this.$('.contacts-list').html(\"\");\n              this.$('.chats-list').html(\"\");\n              xabber.accounts.connected.forEach((acc) => {\n                  let saved_chat = acc.chats.getSavedChat();\n                  saved_chat.set('opened', true);\n                  saved_chat.item_view.updateLastMessage();\n              });\n              let query_chats = _.clone(xabber.chats);\n              query_chats.comparator = 'timestamp';\n              query_chats.sort('timestamp').forEach((chat) => {\n                  let jid = chat.get('jid').toLowerCase(),\n                      name = chat.contact ? (chat.contact.get('roster_name') || chat.contact.get('name')) : chat.get('name');\n                  name && (name = name.toLowerCase());\n                  if (chat.get('timestamp') || chat.get('saved')) {\n                      if (name.indexOf(query) > -1 || jid.indexOf(query) > -1 || (chat.get('saved') && query.includes('saved'))) {\n                          let searched_by = name.indexOf(query) > -1 ? 'by-name' : 'by-jid',\n                              chat_item = xabber.chats_view.child(chat.get('id'));\n                          chat_item && (chat_item = chat_item.$el.clone().addClass(searched_by));\n                          if (chat_item) {\n                              this.$('.chats-list-wrap').removeClass('hidden');\n                              if (searched_by === 'by-name')\n                                  this.$('.chats-list').prepend(chat_item);\n                              else if (this.$('.chats-list .by-jid').length)\n                                  chat_item.insertBefore(this.$('.chats-list .by-jid').first());\n                              else\n                                  this.$('.chats-list').append(chat_item);\n                              chat_item.click(() => {\n                                  this.$('.list-item.active').removeClass('active');\n                                  xabber.chats_view.openChat(chat.item_view, {screen: xabber.body.screen.get('name')});\n                                  chat_item.addClass('active');\n                              });\n                          }\n                      }\n                  }\n              });\n              xabber.accounts.each((account) => {\n                  account.contacts.each((contact) => {\n                      let jid = contact.get('jid').toLowerCase(),\n                          name = contact.get('roster_name') || contact.get('name'),\n                          chat = account.chats.get(contact.hash_id),\n                          chat_id = chat && chat.id;\n                      name && (name = name.toLowerCase());\n                      if (!chat_id || chat_id && !this.$('.chat-item[data-id=\"' + chat_id + '\"]').length)\n                          if (name.indexOf(query) > -1 || jid.indexOf(query) > -1) {\n                              let searched_by = name.indexOf(query) > -1 ? 'by-name' : 'by-jid',\n                                  item_list = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${account.get('jid')}\"] .list-item[data-jid=\"${jid}\"]`).first().clone().data('account-jid', account.get('jid'));\n                              item_list.attr({'data-color': account.settings.get('color'), 'data-account': account.get('jid')}).addClass(searched_by).prepend($('<div class=\"account-indicator ground-color-700\"/>'));\n                              if (searched_by === 'by-name')\n                                  this.$('.contacts-list').prepend(item_list);\n                              else if (this.$('.contacts-list .by-jid').length)\n                                  item_list.insertBefore(this.$('.contacts-list .by-jid').first());\n                              else\n                                  this.$('.contacts-list').append(item_list);\n                              item_list.click(() => {\n                                  this.$('.list-item.active').removeClass('active');\n                                  let chat = account.chats.getChat(contact);\n                                  chat && xabber.chats_view.openChat(chat.item_view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                                  item_list.addClass('active');\n                              });\n                          }\n                  });\n              });\n              this.$('.chats-list-wrap').switchClass('hidden', !this.$('.chats-list').children().length);\n              this.$('.pinned-chat-list').switchClass('hidden', query);\n              this.$('.contacts-list-wrap').switchClass('hidden', !this.$('.contacts-list').children().length);\n              this.$('.messages-list-wrap').addClass('hidden').find('.messages-list').html(\"\");\n              if (query.length >= 2 && this.search_messages) {\n                  this.search_messages = false;\n                  this.queryid = uuid();\n                  this.searchMessages(query, {query_id: this.queryid});\n              }\n              else if (query.length >= 2 && !this.search_messages){\n                  this.$('.btn-search-messages').showIf(query);\n              }\n          },\n\n          searchMessages: function (query, options) {\n              this._loading_messages = true;\n              this._messages_loaded = false;\n              this.$('.messages-list-wrap').showIf(query);\n              this.$('.btn-search-messages').hideIf(query);\n              this.$('.messages-list-wrap .messages-list').html(env.templates.contacts.preloader());\n              options = options || {};\n              !options.max && (options.max = xabber.settings.mam_messages_limit);\n              !options.before && (options.before = \"\");\n              xabber.all_searched_messages = new xabber.SearchedMessages();\n              let accounts = xabber.accounts.connected;\n              accounts.forEach((account) => {\n                  account.searched_msgs_loaded = false;\n                  options.account = account;\n                  this.MAMRequest(query, options, (messages) => {\n                      this.$('.messages-list-wrap .messages-list').html('');\n                      if (!this.query_text)\n                          return;\n                      _.each(messages, (message) => {\n                          if (!this.query_text)\n                              return;\n                          let message_from_stanza = account.chats.receiveChatMessage(message,\n                              _.extend({is_searched: true}, options)\n                              ),\n                              msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza), $message_item_view;\n                              if (!message_from_stanza)\n                                  return;\n                              else\n                                  $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                          if (msg_idx === 0) {\n                              $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                          } else {\n                              $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                          }\n                      });\n                      this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                      this.updateScrollBar();\n                      this._loading_messages = false;\n                  });\n              });\n              (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n          },\n\n          MAMRequest: function (query, options, callback, errback) {\n              let messages = [],\n                  account = options.account,\n                  queryid = uuid(),\n                  iq = $iq({type: 'set'})\n                      .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                      .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                      .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                      .c('value').t(Strophe.NS.MAM).up().up()\n                      .c('field', {'var': 'withtext'})\n                      .c('value').t(query).up().up().up().cnode(new Strophe.RSM(options).toXML()),\n                  handler = account.connection.addHandler((message) => {\n                      let $msg = $(message);\n                      if ($msg.find('result').attr('queryid') === queryid && options.query_id === this.queryid) {\n                          messages.push(message);\n                      }\n                      return true;\n                  }, env.Strophe.NS.MAM);\n              account.sendIQFast(iq,\n                  function (res) {\n                      account.connection.deleteHandler(handler);\n                      let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                      if ($fin.length && $fin.attr('queryid') === queryid) {\n                          let rsm_complete = ($fin.attr('complete') === 'true') ? true : false;\n                          rsm_complete && (account.searched_msgs_loaded = true);\n                      }\n                      callback && callback(messages);\n                  },\n                  function () {\n                      account.connection.deleteHandler(handler);\n                      errback && errback();\n                  }\n              );\n          },\n\n          clearSearch: function (ev) {\n              ev && ev.preventDefault();\n              this.$('.search-input').val('');\n              this.updateSearch();\n              this.onEmptyQuery();\n          },\n\n          onEmptyQuery: function () {\n              xabber.accounts.forEach(function (account) {\n                  account.searched_msgs_loaded = false;\n              });\n              this.query_text = null;\n              this.queryid = null;\n              this._messages_loaded = false;\n              this._loading_messages = false;\n              this.$(this.main_container).removeClass('hidden');\n              this.$('.chats-list-wrap').addClass('hidden');\n              this.$('.pinned-chat-list').removeClass('hidden');\n              this.$('.contacts-list-wrap').addClass('hidden');\n              this.$('.messages-list-wrap').addClass('hidden');\n          }\n      });\n\n      xabber.InputWidget = Backbone.View.extend({\n        field_type: 'text',\n        template: templates.input_widget,\n\n        events: {\n            \"click .field-text\": \"showInput\",\n            \"click .btn-rename\": \"showInput\",\n            \"keydown .field-input\": \"keyDown\",\n            \"keyup .field-input\": \"keyUp\",\n            \"focusout .field-input\": \"changeValue\"\n        },\n\n        initialize: function () {\n            this.$el.html(this.template({\n                field_name: this.field_name,\n                field_type: this.field_type,\n                placeholder: this.placeholder\n            }));\n            this.$value = this.$('.field-text');\n            this.$btn = this.$('.btn-rename');\n            this.$input = this.$('.field-input');\n            this.updateValue();\n            this.data = new Backbone.Model({input_mode: false});\n            this.data.on(\"change:input_mode\", this.onChangedInputMode, this);\n            this.bindModelEvents();\n        },\n\n        bindModelEvents: function () {\n            this.model.on(\"change:\"+this.model_field, this.updateValue, this);\n        },\n\n        showInput: function () {\n            this.data.set('input_mode', true);\n            this.updateValue();\n        },\n\n        onChangedInputMode: function () {\n            let input_mode = this.data.get('input_mode');\n            this.$value.hideIf(input_mode);\n            this.$btn.hideIf(input_mode);\n            this.$input.showIf(input_mode).focus();\n        },\n\n        keyDown: function (ev) {\n            ev.stopPropagation();\n            let value = this.getValue();\n            if (ev.keyCode === constants.KEY_ENTER) {\n                this.changeValue();\n            } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n                this.$input.removeClass('changed').val(value);\n                this.data.set('input_mode', false);\n            }\n        },\n\n        keyUp: function (ev) {\n            let value = this.getValue();\n            this.$input.switchClass('changed', this.$input.val() !== value);\n        },\n\n        getValue: function () {\n            return this.model.get(this.model_field);\n        },\n\n        setValue: function (value) {\n            this.model.save(this.model_field, value);\n        },\n\n        changeValue: function () {\n            let value = this.getValue(),\n                new_value = this.$input.removeClass('changed').val();\n            new_value !== value && this.setValue(new_value);\n            this.data.set('input_mode', false);\n        },\n\n        updateValue: function () {\n            let value = this.getValue();\n            this.$value.text(value);\n            this.$input.val(value);\n        }\n    });\n\n    xabber.Body = xabber.NodeView.extend({\n        className: 'client-body-wrap',\n\n        _initialize: function () {\n            this.vname = 'body';\n            this.data.set('visible', true);\n            this.screen = new Backbone.Model();\n            this.screen_map = new Backbone.Model();\n            this.screen.on(\"change\", this.update, this);\n            this.screen_map.on(\"change\", this.onScreenMapChanged, this);\n            $('body').append(this.$el);\n            this.updateBackground();\n            this.updateMainColor();\n            this.updateAvatarShape();\n            $('<div id=\"modals\"></div>').insertAfter(this.$el);\n            xabber.on('update_main_color', this.updateMainColor, this);\n            xabber.on('update_avatar_shape', this.updateAvatarShape, this);\n        },\n\n        addScreen: function (name, attrs) {\n            this.screen_map.set(name, attrs);\n        },\n\n        updateMainColor: function () {\n            this.$el.attr('data-main-color', xabber.settings.main_color);\n            this.$el.siblings('#modals').attr('data-main-color', xabber.settings.main_color);\n            $(window.document).find('.login-container').attr('data-main-color', xabber.settings.main_color);\n        },\n\n        updateAvatarShape: function () {\n            let shape = xabber.settings.avatar_shape;\n            $('body').switchClass('non-circle-avatars', shape != 'circle');\n            $('body').switchClass('octagon-avatars', shape === 'octagon');\n            $('body').switchClass('hexagon-avatars', shape === 'hexagon');\n            $('body').switchClass('pentagon-avatars', shape === 'pentagon');\n            $('body').switchClass('rounded-avatars', shape === 'rounded');\n            $('body').switchClass('star-avatars', shape === 'star');\n            $('body').switchClass('squircle-avatars', shape === 'squircle');\n        },\n\n        updateBackground: function () {\n            let background_settings = xabber.settings.background || {};\n            if (background_settings.image) {\n                if (background_settings.type === 'repeating-pattern') {\n                    this.$el.css({\n                        'background-repeat': 'repeat',\n                        'background-size': 'unset',\n                        'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                    });\n                } else if (background_settings.type === 'image') {\n                    this.$el.css({\n                        'background-repeat': 'no-repeat',\n                        'background-size': 'cover',\n                        'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                    });\n                }\n            } else {\n                this.$el.css({\n                    'background-repeat': 'repeat',\n                    'background-size': 'unset',\n                    'background-image': `url(\"${constants.BACKGROUND_IMAGE}\")`,\n                    'box-shadow': 'none'\n                });\n            }\n            this.updateBoxShadow(xabber.settings.appearance.vignetting);\n        },\n\n        updateBoxShadow: function (value) {\n            value = Number(value);\n            if (!value)\n                this.$el.css({\n                    'box-shadow': `unset`\n                });\n            else\n                this.$el.css({\n                'box-shadow': `${value}px 0 100px 1px rgba(0, 0, 0, 0.7) inset, -${value}px 0 100px -1px rgba(0, 0, 0, 0.7) inset`\n            });\n        },\n\n        updateBlur: function (value) {\n            value = Number(value);\n            xabber.blur_overlay.$el.css({\n                \"backdrop-filter\": `blur(${value}px)`,\n                \"-webkit-backdrop-filter\": `blur(${value}px)`\n            });\n        },\n\n        setScreen: function (name, attrs, options) {\n            options = options || {};\n            $(window).unbind(\"keydown.contact_panel\");\n            xabber.notifications_placeholder && xabber.main_panel.$el.addClass('notifications-request');\n            $('body').switchClass('xabber-login', name === 'login');\n            $('body').switchClass('on-xabber-login', name !== 'login');\n            let new_attrs = {stamp: _.uniqueId()};\n            if (name && !this.isScreen(name)) {\n                new_attrs.name = name;\n            }\n            if ((attrs && attrs.right && attrs.right === 'group_invitation') || (name === 'settings' || name ==='account_settings'))\n                new_attrs.right_contact = null;\n            else {\n                new_attrs.right_contact = xabber.body.screen.get('right_contact');\n            }\n            if ((!attrs && xabber.body.screen.get('right'))\n                || (attrs && !attrs.right && attrs.right !== null && xabber.body.screen.get('right')))\n                new_attrs.right = xabber.body.screen.get('right');\n            this.screen.set(_.extend(new_attrs, attrs), options);\n        },\n\n        isScreen: function (name) {\n            return this.screen.get('name') === name;\n        },\n\n        onScreenMapChanged: function () {\n            let name = this.screen.get('name');\n            if (_.has(this.screen_map.changed, name)) {\n                this.update();\n            }\n        },\n\n        update: function () {\n            let options = this.screen.attributes,\n                tree = this.screen_map.get(options.name);\n            if (typeof tree !== \"undefined\") {\n                this.onShow(options, tree);\n                this.model.trigger('update_screen', this.screen.get('name'));\n                this.model.trigger('update_layout', {screen_changed: options.name});\n            }\n        }\n    });\n\n    xabber.ToolbarView = xabber.BasicView.extend({\n        className: \"toolbar noselect\",\n        ps_selector: '.accounts',\n        ps_settings: {theme: 'item-list'},\n        template: templates.toolbar,\n\n        events: {\n            \"click .all-chats\":             \"showAllChats\",\n            \"click .chats\":                 \"showChats\",\n            \"click .group-chats\":           \"showGroupChats\",\n            \"click .contacts\":              \"showContacts\",\n            \"click .search\":                \"showSearch\",\n            \"click .archive-chats\":         \"showArchive\",\n            \"click .mentions\":              \"showMentions\",\n            \"click .settings\":              \"showSettings\",\n            \"click .add-variant.contact\":   \"showAddContactView\",\n            \"click .add-variant.account\":   \"showAddAccountView\",\n            \"click .add-variant.public-groupchat\": \"showAddPublicGroupChatView\",\n            \"click .add-variant.incognito-groupchat\": \"showAddIncognitoGroupChatView\",\n            \"click .about\":                 \"showAbout\"\n        },\n\n        _initialize: function () {\n            this.$('.add-something').on(\"change_state\", function (ev, state) {\n                $(this).switchClass('active', state).find('.mdi')\n                        .switchClass('mdi-close', state)\n                        .switchClass('mdi-plus', !state);\n                if (state) {\n                    this.setAttribute('data-title',  this.getAttribute('title'));\n                    this.setAttribute('title', \"\");\n                } else {\n                    this.setAttribute('title', this.getAttribute('data-title'));\n                    this.removeAttribute('data-title');\n                }\n            });\n\n            xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n            this.data.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n            this.data.on(\"change:group_msg_counter\", this.onChangedGroupMessageCounter, this);\n            this.data.on(\"change:mentions_counter\", this.onChangedMentionsCounter, this);\n            this.data.on(\"change:msg_counter\", this.onChangedMessageCounter, this);\n            this.data.set({msg_counter: 0});\n            this.data.set({group_msg_counter: 0});\n            this.data.set({all_msg_counter: 0});\n            this.data.set({mentions_counter: 0});\n        },\n\n        render: function () {\n            this.$('.add-something').dropdown({\n                inDuration: 50,\n                outDuration: 50,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n            this.$('.add-variant.account').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n        },\n\n        updateColor: function (color) {\n            this.$('.toolbar-icon').css('color', color);\n            this.$('.toolbar-icon path').css('fill', color);\n        },\n\n        onUpdatedScreen: function (name) {\n            if ((name === 'account_settings') || ((name === 'all-chats') &&\n                (this.$('.toolbar-item.all-chats').hasClass('active') ||\n                    this.$('.toolbar-item.group-chats').hasClass('active') ||\n                    this.$('.toolbar-item.chats').hasClass('active')||\n                    this.$('.toolbar-item.account-item').hasClass('active')||\n                    this.$('.toolbar-item.archive-chats').hasClass('active')))) {\n                return;\n            }\n            this.$('.toolbar-item').removeClass('active unread');\n            if (_.contains(['all-chats', 'contacts', 'mentions',\n                            'settings', 'search', 'about'], name)) {\n                this.$('.toolbar-item.'+name).addClass('active');\n            }\n        },\n\n        showAllChats: function (ev) {\n            let $el = $(ev.target).closest('.toolbar-item'), is_active = $el.hasClass('active') && !$el.hasClass('unread');\n            this.$('.toolbar-item').removeClass('active unread')\n                .filter('.all-chats').addClass('active').switchClass('unread', is_active);\n            xabber.body.setScreen('all-chats',);\n            xabber.trigger('show_all_chats');\n        },\n\n        showChats: function (ev) {\n            let $el = $(ev.target).closest('.toolbar-item'), is_active = $el.hasClass('active') && !$el.hasClass('unread');\n            this.$('.toolbar-item').removeClass('active unread')\n                .filter('.chats').addClass('active').switchClass('unread', is_active);\n            xabber.body.setScreen('all-chats',);\n            xabber.trigger('show_chats');\n        },\n\n        showGroupChats: function (ev) {\n            let $el = $(ev.target).closest('.toolbar-item'), is_active = $el.hasClass('active') && !$el.hasClass('unread');\n            this.$('.toolbar-item').removeClass('active unread')\n                .filter('.group-chats').addClass('active').switchClass('unread', is_active);\n            xabber.body.setScreen('all-chats',);\n            xabber.trigger('show_group_chats');\n        },\n\n        showArchive: function () {\n            this.$('.toolbar-item').removeClass('active unread')\n                .filter('.archive-chats').addClass('active');\n            xabber.body.setScreen('all-chats',);\n            xabber.trigger('show_archive_chats');\n        },\n\n        showChatsByAccount: function (account) {\n            this.$('.toolbar-item').removeClass('active unread')\n                .filter('.account-item[data-jid=\"' + account.get('jid') + '\"]').addClass('active');\n            xabber.body.setScreen('all-chats', {\n                right_contact_save: true\n            });\n            xabber.trigger('show_account_chats', [account]);\n        },\n\n        showSearch: function () {\n            xabber.body.setScreen('search');\n        },\n\n        showContacts: function () {\n            xabber.body.setScreen('contacts', {right_contact: null});\n        },\n\n        showMentions: function () {\n            xabber.body.setScreen('mentions');\n        },\n\n        showSettings: function () {\n            xabber.body.setScreen('settings');\n        },\n\n        showAddContactView: function () {\n            xabber.trigger('add_contact', {right: null});\n        },\n\n        showAddAccountView: function () {\n            xabber.trigger('add_account', {right: null});\n        },\n\n        showAddIncognitoGroupChatView: function () {\n            xabber.trigger('add_group_chat', {incognito: true, right: null});\n        },\n\n        showAddPublicGroupChatView: function () {\n            xabber.trigger('add_group_chat', {public: true, right: null});\n        },\n\n        showAbout: function () {\n            if (!xabber.about_view)\n                xabber.about_view = xabber.wide_panel.addChild('about', xabber.AboutView, {model: xabber});\n            xabber.body.setScreen('about');\n        },\n\n        setAllMessageCounter: function () {\n            let count_msg = 0, count_all_msg = 0, count_group_msg = 0, mentions = 0;\n            xabber.accounts.each((account) => {\n                account.chats.each((chat) => {\n                    if (chat.contact && !chat.isMuted()) {\n                        count_all_msg += chat.get('unread') + chat.get('const_unread');\n                        if (chat.contact.get('group_chat'))\n                            count_group_msg += chat.get('unread') + chat.get('const_unread');\n                        else\n                            count_msg += chat.get('unread') + chat.get('const_unread');\n                    }\n                });\n                let incoming_subscriptions = account.contacts.filter(item => item.get('invitation') || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n                count_all_msg += incoming_subscriptions;\n                mentions += account.unread_mentions.length;\n            });\n            return { msgs: count_msg, all_msgs: count_all_msg, group_msgs: count_group_msg, mentions: mentions };\n        },\n\n        recountAllMessageCounter: function () {\n            let unread_messages = this.setAllMessageCounter();\n            this.data.set('all_msg_counter', unread_messages.all_msgs);\n            this.data.set('msg_counter', unread_messages.msgs);\n            this.data.set('group_msg_counter', unread_messages.group_msgs);\n            this.data.set('mentions_counter', unread_messages.mentions);\n        },\n\n        onChangedMessageCounter: function () {\n            let c = this.data.get('msg_counter');\n            this.$('.msg-indicator').switchClass('unread', c).text();\n        },\n\n        onChangedGroupMessageCounter: function () {\n            let c = this.data.get('group_msg_counter');\n            this.$('.group-msg-indicator').switchClass('unread', c).text();\n        },\n\n        onChangedMentionsCounter: function () {\n            let c = this.data.get('mentions_counter');\n            this.$('.mentions-indicator').switchClass('unread', c).text();\n        },\n\n        onChangedAllMessageCounter: function () {\n            let c = this.data.get('all_msg_counter');\n            this.$('.all-msg-indicator').switchClass('unread', c).text(c);\n        },\n    });\n\n    xabber.JingleMessageView = xabber.BasicView.extend({\n        className: 'modal main-modal jingle-message-view',\n        template: templates.jingle_message_calling,\n        avatar_size: constants.AVATAR_SIZES.XABBER_VOICE_CALL_VIEW,\n\n        events: {\n            \"click\": \"clickOnWindow\",\n            \"click .btn-accept\": \"accept\",\n            \"click .btn-share-screen\": \"shareScreen\",\n            \"click .btn-microphone\": \"toggleMicrophone\",\n            \"click .btn-video\": \"videoCall\",\n            \"click .btn-volume\": \"toggleVolume\",\n            \"click .btn-collapse\": \"collapse\",\n            \"click .btn-cancel\": \"cancel\",\n            \"click .btn-full-screen\": \"setFullScreen\"\n        },\n\n        _initialize: function (options) {\n            this.model = options.model;\n            this.model.on('destroy', this.onDestroy, this);\n            this.contact = this.model.contact;\n            this.account = this.contact.account;\n            this.model.on('change:state', this.updateCallingStatus, this);\n            this.model.on('change:status', this.updateBackground, this);\n            this.model.on('change:volume_on', this.updateButtons, this);\n            this.model.on('change:video_live', this.updateButtons, this);\n            this.model.on('change:video_screen', this.updateButtons, this);\n            this.model.on('change:video_in', this.updateCollapsedWindow, this);\n            this.model.on('change:video', this.updateCollapsedWindow, this);\n            this.model.on('change:audio', this.updateButtons, this);\n        },\n\n        render: function (options) {\n            options = options || {};\n            this.updateName();\n            this.updateCallingStatus(options.status);\n            if (options.status === 'in') {\n                this.updateStatusText(xabber.getString(\"dialog_jingle_message__status_calling\"));\n            }\n            else {\n                this.model.set('status', 'calling');\n            }\n            this.updateAccountJid();\n            this.updateButtons();\n            this.$el.openModal({\n                dismissible: false,\n                ready: () => {\n                    this.updateAvatar();\n                    this.pos1 = 0;\n                    this.pos2 = 0;\n                    this.pos3 = 0;\n                    this.pos4 = 0;\n                    this.$('.collapsed-movable').mousedown((e) => {\n                        e = e || window.event;\n                        e.preventDefault();\n                        // get the mouse cursor position at startup:\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        let didDrag = false;\n                        document.onmouseup = (e) => {\n                            document.onmouseup = null;\n                            document.onmousemove = null;\n                            if (!didDrag)\n                                this.collapse();\n                        };\n                        // call a function whenever the cursor moves:\n                        document.onmousemove = (e) => {\n                            e = e || window.event;\n                            e.preventDefault();\n                            // calculate the new cursor position:\n                            this.pos1 = this.pos3 - e.clientX;\n                            this.pos2 = this.pos4 - e.clientY;\n                            this.pos3 = e.clientX;\n                            this.pos4 = e.clientY;\n                            // set the element's new position:\n                            this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                            this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                            this.$el.css('transform', \"none\");\n                            this.$el.css('right', \"unset\");\n                            didDrag = true;\n                        };\n                    });\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n\n        },\n\n        setFullScreen: function () {\n            let video = this.$el.find('.webrtc-remote-video')[0],\n                local_video = this.$el.find('.webrtc-local-video')[0],\n                buttons = this.$el.find('.buttons-panel')[0];\n            if (!video)\n                return;\n            if (video.requestFullScreen) {\n                video.requestFullScreen();\n                local_video.requestFullScreen();\n                buttons.requestFullScreen();\n            }\n            else if (video.webkitRequestFullScreen) {\n                video.webkitRequestFullScreen();\n                local_video.webkitRequestFullScreen();\n                buttons.webkitRequestFullScreen();\n            }\n            else if (video.mozRequestFullScreen) {\n                video.mozRequestFullScreen();\n                local_video.mozRequestFullScreen();\n                buttons.mozRequestFullScreen();\n            }\n            else if (video.msRequestFullScreen) {\n                video.msRequestFullScreen();\n                local_video.msRequestFullScreen();\n                buttons.msRequestFullScreen();\n            }\n        },\n\n        cancelFullScreen: function () {\n            if (document.exitFullscreen) {\n                let full_screen_el = document.fullscreenElement;\n                full_screen_el && document.exitFullscreen().then(() => {\n                    document.fullscreenElement && this.cancelFullScreen();\n                });\n            } else if (document.mozCancelFullScreen) { /* Firefox */\n                let full_screen_el = document.mozFullScreenElement;\n                full_screen_el && document.mozCancelFullScreen();\n                document.mozFullScreenElement && this.cancelFullScreen();\n            } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n                let full_screen_el = document.webkitCurrentFullScreenElement;\n                full_screen_el && document.webkitExitFullscreen();\n                document.webkitCurrentFullScreenElement && this.cancelFullScreen();\n            } else if (document.msExitFullscreen) { /* IE/Edge */\n                let full_screen_el = document.msFullscreenElement;\n                full_screen_el && document.msExitFullscreen();\n                document.msFullscreenElement && this.cancelFullScreen();\n            }\n        },\n\n        windowResized: function () {\n            this.$el.hasClass('collapsed') && this.$el.css('right', parseInt(xabber.main_panel.$el.css('margin-right')) + 8 + 'px');\n        },\n\n        updateButtons: function () {\n            this.$('.btn-video .video').switchClass('hidden', !this.model.get('video'));\n            this.$('.btn-share-screen').switchClass('active', this.model.get('video_screen'));\n            this.$('.btn-full-screen').switchClass('hidden', !this.model.get('video_in'));\n            this.$('.btn-video').switchClass('mdi-video active', this.model.get('video_live'))\n                .switchClass('mdi-video-off', !this.model.get('video_live'));\n            this.$('.btn-volume').switchClass('mdi-volume-high active', this.model.get('volume_on'))\n                .switchClass('mdi-volume-off', !this.model.get('volume_on'));\n            this.$('.btn-microphone').switchClass('active mdi-microphone', this.model.get('audio'))\n                .switchClass('mdi-microphone-off', !this.model.get('audio'));\n        },\n\n        updateAvatar: function () {\n            let image = this.contact.cached_image;\n            this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n        },\n\n        updateBackground: function () {\n            let status = this.model.get('status');\n            this.$el.attr('data-state', status);\n        },\n\n        updateCallingStatus: function (status) {\n            this.$('.buttons-wrap').switchClass('incoming', (status === 'in'));\n        },\n\n        updateStatusText: function (status) {\n            this.$('.calling-status').text(status || \"\");\n        },\n\n        updateName: function () {\n            this.$('.name').text(this.contact.get('name'));\n        },\n\n        updateAccountJid: function () {\n            this.$('.modal-footer .contact-info .jid').text(this.contact.get('jid'));\n        },\n\n        close: function () {\n            this.$el.closeModal({ complete: this.hide.bind(this) });\n        },\n\n        shareScreen: function () {\n            this.model.set('video_screen', !this.model.get('video_screen'));\n        },\n\n        isFullScreen: function () {\n            if (document.fullscreenElement)\n                return true;\n            else if (document.webkitFullscreenElement)\n                return true;\n            else if (document.mozFullScreenElement)\n                return true;\n            else return false;\n        },\n\n        accept: function () {\n            this.model.accept();\n            this.updateCallingStatus(constants.JINGLE_MSG_ACCEPT);\n            this.model.initSession();\n        },\n\n        clickOnWindow: function (ev) {\n            if ($(ev.target).closest('.collapsed-movable').length)\n                return;\n            if ($(ev.target).closest('.video-wrap').length && this.$el.hasClass('collapsed') && this.$el.hasClass('collapsed-video'))\n                this.collapse();\n        },\n\n        collapse: function (ev) {\n            ev && ev.stopPropagation();\n            if (this.isFullScreen()) {\n                this.cancelFullScreen();\n                return;\n            }\n            let $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n            $overlay.toggle();\n            this.$el.toggleClass('collapsed');\n            if (this.$el.hasClass('collapsed')) {\n                this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n                this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n            }\n            else {\n                this.$el.css('right', \"\");\n                this.$el.css('left', \"\");\n                this.$el.css('width', \"\");\n                this.$el.css('height', \"\");\n                this.$el.removeClass('collapsed-video');\n            }\n            this.windowResized();\n        },\n\n        updateCollapsedWindow: function () {\n            this.updateButtons();\n            if (this.$el.hasClass('collapsed')) {\n                this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n                this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n            }\n        },\n\n        toggleMicrophone: function () {\n            this.model.set('audio', !this.model.get('audio'));\n        },\n\n        onDestroy: function () {\n            this.updateStatusText(xabber.getString(this.model.get('status') == 'device_busy' ? \"dialog_jingle_message__status_device_busy\" : this.model.get('status') == 'busy' ? \"dialog_jingle_message__status_busy\" : \"dialog_jingle_message__status_disconnected\"));\n            setTimeout(() => {\n                this.close();\n                this.$el.detach();\n            }, 3000);\n        },\n\n        videoCall: function () {\n            this.model.set('video_live', !this.model.get('video_live'));\n        },\n\n        toggleVolume: function (ev) {\n            let $target = $(ev.target);\n            $target.switchClass(this.model.set('volume_on', !this.model.get('volume_on')));\n        },\n\n        cancel: function () {\n            this.model.reject();\n            this.close();\n        }\n    });\n\n    xabber.PlyrPlayerPopupView = xabber.BasicView.extend({\n        className: 'modal main-modal player-overlay plyr-player-popup-view',\n        template: templates.plyr_player_popup,\n\n        events: {\n            \"click .mdi-close\": \"closePopup\",\n            \"click .mdi-minimize-float\": \"floatPopup\",\n            \"click .mdi-minimize-full\": \"fullPopup\",\n            \"click .mdi-plyr-hide\": \"hidePopup\",\n            \"click .btn-next-plyr\": \"nextPlyr\",\n            \"click .btn-previous-plyr\": \"previousPlyr\",\n            \"click .mdi-open-message\": \"openMessage\",\n            \"click .mdi-toggle-play\": \"togglePlay\",\n            \"click .mdi-toggle-mute\": \"toggleMute\",\n        },\n\n        _initialize: function (options) {\n            this.data.set('visibility_state', 0);\n            this.data.on('change:visibility_state', this.onVisibilityChange, this);\n            xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n        },\n\n        render: function (options) {\n            options = options || {};\n            this.$el.openModal({\n                dismissible: false,\n                ready: () => {\n                    if (!this.player){\n                        this.player = new Plyr('.plyr-player-popup', {\n                            controls: [\n                                'play-large', 'play', 'progress', 'duration', 'mute', 'volume', 'settings', 'download', 'fullscreen',\n                            ],\n                            youtube: {controls: 0, disablekb: 1, iv_load_policy: 3, modestbranding: 1, rel: 0, showinfo: 0}\n                        });\n                        this.player.on('play',(event) => {\n                            let other_players = xabber.plyr_players.filter(other => other != this.player);\n                            other_players.forEach(function(other) {\n                                if (other.$audio_elem){\n                                    if (other.$audio_elem.voice_message)\n                                        other.$audio_elem.voice_message.stopTime();\n                                }\n                            })\n                            xabber.trigger('plyr_player_updated');\n                        });\n                        this.player.on('pause',(event) => {\n                            xabber.trigger('plyr_player_updated');\n                        });\n                        this.player.on('timeupdate',(event) => {\n                            xabber.trigger('plyr_player_time_updated');\n                        });\n                        this.player.on('volumechange',(event) => {\n                            xabber.trigger('plyr_player_updated');\n                        });\n                        this.player.on('statechange',(event) => {\n                            if (event.detail.code === 3) {\n                                this.$('.plyr-player-popup-draggable').removeClass('hidden');\n                                this.$('.plyr-player-popup-draggable').css({\n                                    width: '',\n                                    height: '',\n                                });\n                            }\n                            xabber.trigger('plyr_player_updated');\n                        });\n                    }\n                    this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).mousedown(() => {this.minimizePopup()});\n                    this.showNewVideo(options);\n                    this.onVisibilityChange();\n                    this.updatePlyrControls();\n                    this.pos1 = 0;\n                    this.pos2 = 0;\n                    this.pos3 = 0;\n                    this.pos4 = 0;\n                    this.$('.plyr-player-min-controls-tab').mousedown((e) => {\n                        e = e || window.event;\n                        if ($(e.target).closest('.plyr__control--overlaid').length || $(e.target).closest('.plyr__controls').length || $(e.target).closest('.mdi-close').length || $(e.target).closest('.plyr-player-min-controls-buttons').length)\n                            return;\n                        e.preventDefault();\n                        // get the mouse cursor position at startup:\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        let didDrag = false;\n                        document.onmouseup = (e) => {\n                            document.onmouseup = null;\n                            document.onmousemove = null;\n                            if (!didDrag && !$(e.target).closest('.plyr__control--overlaid').length)\n                                this.$('.plyr__video-wrapper').click();\n                        };\n                        // call a function whenever the cursor moves:\n                        document.onmousemove = (e) => {\n                            e = e || window.event;\n                            didDrag = true;\n                            e.preventDefault();\n                            if (this.$el.hasClass('player-overlay'))\n                                return;\n                            // calculate the new cursor position:\n                            this.pos1 = this.pos3 - e.clientX;\n                            this.pos2 = this.pos4 - e.clientY;\n                            this.pos3 = e.clientX;\n                            this.pos4 = e.clientY;\n                            // set the element's new position:\n                            this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                            this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                            this.$el.css('transform', \"none\");\n                            this.$el.css('right', \"unset\");\n                        };\n                    });\n                },\n            });\n\n        },\n\n        showNewVideo: function (options) {\n            options = options || {};\n            if (options.player.provider === 'youtube'){\n                this.$('.plyr-player-popup-draggable').addClass('hidden');\n                this.$('.plyr-player-popup-draggable').css({\n                    width: 400,\n                    height: 200,\n                });\n            }\n            this.account = options.player.chat_item.account;\n            this.updateColorScheme();\n            this.player.chat_item = options.player.chat_item;\n            this.player.player_item = options.player;\n            this.player.message_unique_id = options.player.message_unique_id;\n            this.player.source = {\n                type: 'video',\n                sources: [\n                    {\n                        src: options.player.video_src,\n                        provider: options.player.provider,\n                    },\n                ],\n            }\n            xabber.current_plyr_player = this.player;\n            this.player.once('ready',(event) => {\n                let $minimize_element_float = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-float mdi-svg-template\" data-svgname=\"player-float\"></svg>')\n                $minimize_element_float.append(env.templates.svg['player-float']())\n                $minimize_element_float.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $minimize_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-full mdi-svg-template\" data-svgname=\"player-full\"></svg>')\n                $minimize_element_full.append(env.templates.svg['player-full']())\n                $minimize_element_full.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $show_message_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-open-message mdi-svg-template\" data-svgname=\"message-bookmark-outline\"></svg>')\n                $show_message_element_full.append(env.templates.svg['message-bookmark-outline']())\n                $show_message_element_full.insertAfter(this.$('.plyr__controls__item[data-plyr=\"download\"]'));\n                let $previous_element = $('<div class=\"btn-previous-plyr\"><i class=\"mdi mdi-skip-previous mdi-24px\"></i></div>')\n                $previous_element.insertBefore(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                let $next_element = $('<div class=\"btn-next-plyr\"><i class=\"mdi mdi-skip-next mdi-24px\"></i></div>')\n                $next_element.insertAfter(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                this.player.play();\n                xabber.trigger('plyr_player_updated');\n            });\n        },\n\n        closePopup: function () {\n            this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).detach();\n            this.$el.detach();\n            xabber.current_plyr_player = null;\n            xabber.plyr_player_popup = null;\n            xabber.trigger('plyr_player_updated');\n        },\n\n        minimizePopup: function () {\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n                return;\n            let visibility_state = this.data.get('visibility_state');\n            visibility_state = visibility_state + 1;\n            (visibility_state > 2) && (visibility_state = 0);\n            this.data.set('visibility_state', visibility_state);\n        },\n\n        hidePopup: function () {\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n                return;\n            this.data.set('visibility_state', 2);\n        },\n\n        floatPopup: function () {\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n                return;\n            this.data.set('visibility_state', 1);\n        },\n\n        fullPopup: function () {\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n                return;\n            this.data.set('visibility_state', 0);\n        },\n\n        onVisibilityChange: function () {\n            let visibility_state = this.data.get('visibility_state'),\n                $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n            $overlay.switchClass('hidden', visibility_state != 0);\n            this.$el.switchClass('player-overlay', visibility_state === 0);\n            this.$el.switchClass('hidden', visibility_state === 2);\n        },\n\n        nextPlyr: function () {\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n            if (player_index === -1 && xabber.current_plyr_player.player_item)\n                player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n                return;\n            if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n                let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n                if (!next_item.$audio_elem.voice_message){\n                    let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                    $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                    next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n                } else {\n                    next_item.$audio_elem.voice_message.play()\n                }\n            } else{\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            }\n        },\n\n        previousPlyr: function () {\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n            if (player_index === -1 && xabber.current_plyr_player.player_item)\n                player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n                return;\n            if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n                let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n                if (!prev_item.$audio_elem.voice_message){\n                    let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                    $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                    prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n                } else {\n                    prev_item.$audio_elem.voice_message.play()\n                }\n            } else{\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            }\n        },\n\n        updatePlyrControls: function () {\n            if (xabber.current_plyr_player) {\n                let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n                this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                this.$('.mdi-plyr-play').switchClass('hidden', xabber.current_plyr_player.playing);\n                this.$('.mdi-plyr-pause').switchClass('hidden', !xabber.current_plyr_player.playing);\n                this.$('.mdi-mute-plyr').switchClass('hidden', !xabber.current_plyr_player.muted);\n                this.$('.mdi-unmute-plyr').switchClass('hidden', xabber.current_plyr_player.muted);\n            }\n        },\n\n        openMessage: function () {\n            if (!(this.player && this.player.chat_item && this.player.message_unique_id))\n                return;\n            this.floatPopup();\n            let chat = this.player.chat_item.model;\n            xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n            xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n            if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n                if (xabber.right_contact_panel_saveable)\n                    chat.contact.showDetailsRight('all-chats', {right_saved: true});\n                else\n                    chat.contact.showDetailsRight('all-chats', {right_saved: false});\n            }\n            chat.getMessageContext(this.player.message_unique_id, {message: true});\n        },\n\n        togglePlay: function () {\n            if (!xabber.current_plyr_player)\n                return;\n            if (xabber.current_plyr_player.$audio_elem){\n                if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                    let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                    $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                    xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n                } else {\n                    xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n                }\n            } else\n                xabber.current_plyr_player.togglePlay();\n        },\n\n        toggleMute: function () {\n            if (!xabber.current_plyr_player)\n                return;\n            xabber.current_plyr_player.muted = !xabber.current_plyr_player.muted;\n        },\n\n        updateColorScheme: function () {\n            this.$el.attr('data-color', this.account.settings.get('color'));\n            this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n        },\n    });\n\n    xabber.SettingsView = xabber.BasicView.extend({\n        className: 'settings-panel',\n        template: templates.settings,\n        ps_selector: '.panel-content',\n\n        events: {\n            \"click .settings-tabs-wrap .settings-tab\": \"jumpToBlock\",\n            \"click .btn-add-account\": \"showAddAccountView\",\n            \"click .setting.notifications label\": \"setNotifications\",\n            \"click .setting.private-notifications label\": \"setPrivateNotifications\",\n            \"click .setting.group-notifications label\": \"setGroupNotifications\",\n            \"click .setting.message-preview.private-preview label\": \"setPrivateMessagePreview\",\n            \"click .setting.message-preview.group-preview label\": \"setGroupMessagePreview\",\n            \"click .setting.call-attention label\": \"setCallAttention\",\n            \"click .setting.load-media label\": \"setLoadMedia\",\n            \"click .setting.typing-notifications label\": \"setTypingNotifications\",\n            \"click .setting.mapping-service label\": \"setMappingService\",\n            \"change .sound input[type=radio][name=private_sound]\": \"setPrivateSound\",\n            \"change .sound input[type=radio][name=group_sound]\": \"setGroupSound\",\n            \"change .sound input[type=radio][name=call_sound]\": \"setCallSound\",\n            \"change .sound input[type=radio][name=dialtone_sound]\": \"setDialtoneSound\",\n            \"change .sound input[type=radio][name=attention_sound]\": \"setAttentionSound\",\n            \"change .languages-list input[type=radio][name=language]\": \"changeLanguage\",\n            \"change #vignetting\": \"changeVignetting\",\n            \"change #blur\": \"changeBlur\",\n            \"change #notifications_volume\": \"changeNotificationsVolume\",\n            \"change #transparency\": \"changeTransparency\",\n            \"change #blur_switch\": \"switchBlur\",\n            \"change #vignetting_switch\": \"switchVignetting\",\n            \"click .selected-color-wrap\": \"openColorPicker\",\n            \"click .current-main-color-wrap\": \"openMainColorPicker\",\n            \"change .background input[type=radio][name=background]\": \"setBackground\",\n            \"change .background input[type=radio][name=side-panel]\": \"setSidePanelTheme\",\n            \"change #side_panel_blur_switch\": \"setSidePanelBlur\",\n            \"change #transparency_switch\": \"switchTransparency\",\n            \"click .current-background-wrap\": \"changeBackgroundImage\",\n            \"change .hotkeys input[type=radio][name=hotkeys]\": \"setHotkeys\",\n            \"change .avatar-shape input[type=radio][name=avatar_shape]\": \"setAvatarShape\",\n            \"click .settings-tab.delete-all-accounts\": \"deleteAllAccounts\"\n        },\n\n        _initialize: function () {\n            this.$('.xabber-info-wrap .version').text(xabber.get('version_number'));\n            xabber.on('update_main_color', this.updateMainColor, this);\n        },\n\n        render: function () {\n            let settings = this.model.attributes,\n                lang = settings.language;\n            this.$('.notifications input[type=checkbox]').prop({\n                checked: settings.notifications && xabber._cache.get('notifications')\n            });\n            this.$('.private-notifications input[type=checkbox]')\n                .prop({checked: settings.notifications_private});\n            this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !settings.notifications_private)\n            this.$('.group-notifications input[type=checkbox]')\n                .prop({checked: settings.notifications_group});\n            this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n            this.$('.message-preview.private-preview input[type=checkbox]')\n                .prop({checked: settings.message_preview_private});\n            this.$('.message-preview.group-preview input[type=checkbox]')\n                .prop({checked: settings.message_preview_group});\n            this.$('.call-attention input[type=checkbox]')\n                .prop({checked: settings.call_attention});\n            this.$('.load-media input[type=checkbox]')\n                .prop({checked: settings.load_media});\n            this.$('.typing-notifications input[type=checkbox]')\n                .prop({checked: settings.typing_notifications});\n            this.$('.mapping-service input[type=checkbox]')\n                .prop({checked: settings.mapping_service});\n            let sound_private_value = settings.private_sound ? settings.sound_on_private_message : '';\n            this.$(`.sound input[type=radio][name=private_sound][value=\"${sound_private_value}\"]`)\n                    .prop('checked', true);\n            let sound_group_value = settings.group_sound ? settings.sound_on_group_message : '';\n            this.$(`.sound input[type=radio][name=group_sound][value=\"${sound_group_value}\"]`)\n                    .prop('checked', true);\n            this.$(`.sound input[type=radio][name=call_sound][value=\"${settings.sound_on_call}\"]`)\n                    .prop('checked', true);\n            this.$(`.sound input[type=radio][name=dialtone_sound][value=\"${settings.sound_on_dialtone}\"]`)\n                    .prop('checked', true);\n            this.$(`.sound input[type=radio][name=attention_sound][value=\"${settings.sound_on_attention}\"]`)\n                    .prop('checked', true);\n            this.$(`.hotkeys input[type=radio][name=hotkeys][value=${settings.hotkeys}]`)\n                    .prop('checked', true);\n            this.$(`.avatar-shape input[type=radio][name=avatar_shape][value=${settings.avatar_shape}]`)\n                    .prop('checked', true);\n            (lang == xabber.get(\"default_language\")) && (lang = 'default');\n            this.$(`.languages-list input[type=radio][name=language][value=\"${lang}\"]`)\n                .prop('checked', true);\n            let notifications_volume = !isNaN(settings.notifications_volume) ? settings.notifications_volume * 100 : 100;\n            this.$(`#notifications_volume`).val(notifications_volume);\n            this.$('.settings-panel-head span').text(this.$('.settings-block-wrap:not(.hidden)').attr('data-header'))\n            this.updateDescription();\n            this.updateBackgroundSetting();\n            this.updateColor();\n            this.updateMainColor();\n            this.updateSidePanelSetting();\n            this.$('.toolbar-main-color-setting-wrap .dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                belowOrigin: true,\n                hover: false\n            });\n            return this;\n        },\n\n        updateMainColor: function () {\n            this.$('.toolbar-main-color-setting').attr('data-color', this.model.get('main_color'));\n            this.$('.toolbar-main-color-setting .color-name').text(xabber.getString(`account_color_name_${this.model.get('main_color').replace(/-/g, \"_\")}`).replace(/-/g, \" \"));\n        },\n\n        updateBackgroundSetting: function () {\n            this.$(`.background input[type=radio][name=background][value=${this.model.get('background').type}]`)\n                .prop('checked', true);\n            if (this.model.get('background').image) {\n                this.$('.current-background').css('background-image', `url(${utils.images.getCachedBackground(this.model.get('background').image)})`);\n            }\n            this.$('.current-background-wrap').switchClass('hidden', !this.model.get('background').image);\n            let appearance = this.model.get('appearance'),\n                blur_switched = appearance.blur !== false,\n                vignetting_switched = appearance.vignetting !== false;\n            this.$('#blur_switch')[0].checked = blur_switched;\n            this.$('.blur-setting .disabled').switchClass('hidden', blur_switched);\n            this.$('#blur')[0].value = blur_switched ? appearance.blur : constants.BLUR_VALUE;\n\n            this.$('#vignetting_switch')[0].checked = vignetting_switched;\n            this.$('.vignetting-setting .disabled').switchClass('hidden', vignetting_switched);\n            this.$('#vignetting')[0].value = vignetting_switched ? appearance.vignetting : constants.VIGNETTING_VALUE;\n            this.updateScrollBar();\n        },\n\n        updateColor: function () {\n            let color = this.model.get('appearance').color || '#E0E0E0';\n            this.$('.selected-color-item').css('background-color', color);\n            this.$('.selected-color-hex').text(color);\n            let material_color = xabber.ColorPicker.prototype.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == color.toLowerCase()));\n            if (material_color) {\n                let tone = material_color.variations.find(v => v.hex.toLowerCase() == color.toLowerCase());\n                this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n            } else {\n                this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n            }\n            xabber.toolbar_view.updateColor(color);\n        },\n\n        updateSidePanelSetting: function () {\n            let side_panel_settings = this.model.get('side_panel'),\n                transparency_switched = side_panel_settings.transparency !== false;\n            this.$('#side_panel_blur_switch')[0].checked = side_panel_settings.blur;\n            this.$('#transparency_switch')[0].checked = transparency_switched;\n            this.$('.transparency-setting .disabled').switchClass('hidden', transparency_switched);\n            this.$('#transparency')[0].value = transparency_switched ? side_panel_settings.transparency : constants.TRANSPARENCY_VALUE;\n            this.$(`#${this.cid}-${side_panel_settings.theme}-side-panel`)[0].checked = true;\n        },\n\n        jumpToBlock: function (ev) {\n            let $tab = $(ev.target).closest('.settings-tab'),\n                $elem = this.$('.settings-block-wrap.' + $tab.data('block-name'));\n            this.$('.btn-add-account').hideIf($tab.data('block-name') != 'xmpp-accounts')\n            if ($tab.hasClass('link-button')) {\n                $tab.parent().siblings().removeClass('active');\n                this.scrollTo(0);\n                return;\n            }\n            this.$('.settings-block-wrap').addClass('hidden');\n            $elem.removeClass('hidden');\n            this.$('.settings-panel-head span').text($elem.attr('data-header'))\n            $tab.addClass('active').siblings().removeClass('active');\n            this.scrollToChild($elem);\n        },\n\n        setNotifications: function (ev) {\n            let value = this.model.get('notifications'),\n                $target = $(ev.target);\n            ev.preventDefault();\n            if (value === null) {\n                utils.callback_popup_message(xabber.getString(\"notifications__toast_notifications_not_supported\"), 1500);\n            } else {\n                value = value && xabber._cache.get('notifications');\n                if (!xabber._cache.get('notifications')) {\n                    window.Notification.requestPermission((permission) => {\n                        xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n                        xabber.notifications_placeholder && xabber.notifications_placeholder.close();\n                        value = (permission === 'granted');\n                        this.model.save('notifications', value ? value : this.model.get('notifications'));\n                        $target.closest('.setting.notifications').find('input').prop('checked', value);\n                    });\n                } else {\n                    value = !value;\n                    this.model.save('notifications', value);\n                    $target.closest('.setting.notifications').find('input').prop('checked', value);\n                }\n            }\n        },\n\n        setPrivateNotifications: function (ev) {\n            let value = !this.model.get('notifications_private');\n            this.model.save('notifications_private', value);\n            ev.preventDefault();\n            this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !value)\n            $(ev.target).closest('.setting.private-notifications').find('input').prop('checked', value);\n        },\n\n        setGroupNotifications: function (ev) {\n            let value = !this.model.get('notifications_group');\n            this.model.save('notifications_group', value);\n            ev.preventDefault();\n            this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !value)\n            $(ev.target).closest('.setting.group-notifications').find('input').prop('checked', value);\n        },\n\n        setPrivateMessagePreview: function (ev) {\n            let value = !this.model.get('message_preview_private');\n            this.model.save('message_preview_private', value);\n            ev.preventDefault();\n            $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n        },\n\n        setGroupMessagePreview: function (ev) {\n            let value = !this.model.get('message_preview_group');\n            this.model.save('message_preview_group', value);\n            ev.preventDefault();\n            $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n        },\n\n        setCallAttention: function (ev) {\n            let value = !this.model.get('call_attention');\n            this.model.save('call_attention', value);\n            ev.preventDefault();\n            $(ev.target).closest('.setting.call-attention').find('input').prop('checked', value);\n        },\n\n        setLoadMedia: function (ev) {\n            let value = !this.model.get('load_media');\n            this.model.save('load_media', value);\n            ev.preventDefault();\n            $(ev.target).closest('.setting.load-media').find('input').prop('checked', value);\n        },\n\n        setTypingNotifications: function (ev) {\n            let value = !this.model.get('typing_notifications');\n            this.model.save('typing_notifications', value);\n            ev.preventDefault();\n            $(ev.target).closest('.setting.typing-notifications').find('input').prop('checked', value);\n        },\n\n        setMappingService: function (ev) {\n            let value = !this.model.get('mapping_service');\n            this.model.save('mapping_service', value);\n            ev.preventDefault();\n            $(ev.target).closest('.setting.mapping-service').find('input').prop('checked', value);\n        },\n\n        setPrivateSound: function (ev) {\n            let value = ev.target.value;\n            if (value) {\n                this.current_sound && this.current_sound.pause();\n                this.current_sound = xabber.playAudio(value, false, this.model.get('notifications_volume'));\n                this.model.save({private_sound: true, sound_on_private_message: value});\n            } else {\n                this.model.save('private_sound', false);\n            }\n        },\n\n        setGroupSound: function (ev) {\n            let value = ev.target.value;\n            if (value) {\n                this.current_sound && this.current_sound.pause();\n                this.current_sound = xabber.playAudio(value, false, this.model.get('notifications_volume'));\n                this.model.save({group_sound: true, sound_on_group_message: value});\n            } else {\n                this.model.save('group_sound', false);\n            }\n        },\n\n        setCallSound: function (ev) {\n            let value = ev.target.value;\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false);\n            this.model.save({sound_on_call: value});\n        },\n\n        setDialtoneSound: function (ev) {\n            let value = ev.target.value;\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false);\n            this.model.save({sound_on_dialtone: value});\n        },\n\n        setAttentionSound: function (ev) {\n            let value = ev.target.value;\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false);\n            this.model.save({sound_on_attention: value});\n        },\n\n        setBackground: function (ev) {\n            let value = ev.target.value;\n            if (value == 'default') {\n                this.model.save('background', {type: 'default'});\n                xabber.body.updateBackground();\n                this.updateBackgroundSetting();\n            } else if (value == 'repeating-pattern' || value == 'image') {\n                let background_view = new xabber.SetBackgroundView();\n                background_view.render({type: value, model: this.model});\n            }\n        },\n\n        setSidePanelTheme: function (ev) {\n            let value = ev.target.value,\n                side_panel_settings = this.model.get('side_panel');\n            this.model.save('side_panel', _.extend(side_panel_settings, {theme: value}));\n            xabber.roster_view.updateTheme(value);\n        },\n\n        setSidePanelBlur: function () {\n            let value = this.$('#side_panel_blur_switch')[0].checked,\n                side_panel_settings = this.model.get('side_panel');\n            this.model.save('side_panel', _.extend(side_panel_settings, {blur: value}));\n            xabber.roster_view.updateBlur(value);\n        },\n\n        changeBackgroundImage: function () {\n            let type = this.model.get('background').type;\n            if (type == 'repeating-pattern' || type == 'image') {\n                let background_view = new xabber.SetBackgroundView();\n                background_view.render({type: type, model: this.model});\n            }\n        },\n\n        openColorPicker: function () {\n            if (!this.colorPicker)\n                this.colorPicker = new xabber.ColorPicker({model: this.model});\n            this.colorPicker.render();\n        },\n\n        openMainColorPicker: function () {\n            if (!this.mainColorPicker)\n                this.mainColorPicker = new xabber.mainColorPicker({model: this.model});\n            this.mainColorPicker.render();\n        },\n\n        changeBlur: function () {\n            let value = this.$('#blur')[0].value,\n                appearance = this.model.get('appearance');\n            xabber.body.updateBlur(value);\n            this.model.save('appearance', _.extend(appearance, {blur: value}));\n        },\n\n        switchTransparency: function () {\n            let is_switched = this.$('#transparency_switch')[0].checked,\n                side_panel_settings = this.model.get('side_panel'),\n                value = is_switched ? constants.TRANSPARENCY_VALUE : false;\n            this.$('.transparency-setting .disabled').switchClass('hidden', is_switched);\n            this.$('#transparency')[0].value = constants.TRANSPARENCY_VALUE;\n            this.model.save('side_panel', _.extend(side_panel_settings, {transparency: value}));\n            xabber.roster_view.updateTransparency(value);\n        },\n\n        changeNotificationsVolume: function () {\n            let volume = this.$('#notifications_volume')[0].value / 100,\n                sound = this.$('.sound input[type=radio][name=private_sound]:checked').val() || this.$('.sound input[type=radio][name=group_sound]:checked').val();\n            this.model.save('notifications_volume', volume);\n            if (sound) {\n                this.current_sound && this.current_sound.pause();\n                this.current_sound = xabber.playAudio(sound, false, volume);\n            }\n        },\n\n        changeTransparency: function () {\n            let value = this.$('#transparency')[0].value,\n                side_panel_settings = this.model.get('side_panel');\n            this.model.save('side_panel', _.extend(side_panel_settings, {transparency: value}));\n            xabber.roster_view.updateTransparency(value);\n        },\n\n        changeVignetting: function () {\n            let value = this.$('#vignetting')[0].value,\n                appearance = this.model.get('appearance');\n            xabber.body.updateBoxShadow(value);\n            this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n        },\n\n        switchVignetting: function () {\n            let is_switched = this.$('#vignetting_switch:checked').length,\n                appearance = this.model.get('appearance'),\n                value = is_switched ? constants.VIGNETTING_VALUE : false;\n            this.$('.vignetting-setting .disabled').switchClass('hidden', is_switched);\n            this.$('#vignetting')[0].value = constants.VIGNETTING_VALUE;\n            this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n            xabber.body.updateBoxShadow(value);\n        },\n\n        switchBlur: function () {\n            let is_switched = this.$('#blur_switch:checked').length,\n                appearance = this.model.get('appearance'),\n                value = is_switched ? constants.BLUR_VALUE : false;\n            this.$('.blur-setting .disabled').switchClass('hidden', is_switched);\n            this.$('#blur')[0].value = constants.BLUR_VALUE;\n            this.model.save('appearance', _.extend(appearance, {blur: value}));\n            xabber.body.updateBlur(value);\n        },\n\n        setHotkeys: function (ev) {\n            this.model.save('hotkeys', ev.target.value);\n        },\n\n        setAvatarShape: function (ev) {\n            this.model.save('avatar_shape', ev.target.value);\n            xabber.trigger('update_avatar_shape');\n        },\n\n        deleteAllAccounts: function (ev) {\n            utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"settings__dialog_quit_client__confirm\", [constants.CLIENT_NAME]), null, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n                res && xabber.trigger('quit');\n            });\n        },\n\n        changeLanguage: function (ev) {\n            let value = ev.target.value;\n            utils.dialogs.ask(xabber.getString(\"settings__dialog_change_language__header\"), xabber.getString(\"settings__dialog_change_language__confirm\"), null, { ok_button_text: xabber.getString(\"settings__dialog_change_language__button_change\")}).done((result) => {\n                if (result) {\n                    this.model.save('language', value);\n                    window.location.reload(true);\n                } else {\n                    this.$(`.languages-list input[type=radio][name=language][value=\"${this.model.get('language')}\"]`)\n                        .prop('checked', true);\n                }\n            });\n        },\n\n        showAddAccountView: function () {\n            xabber.trigger('add_account', {right: null});\n        },\n\n        updateDescription: function () {\n            let lang = window.navigator.language,\n                progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n            (lang == 'default' || !lang.indexOf('en')) && (progress = 100);\n            if (!_.isUndefined(progress)) {\n                let progress_text, platform_text;\n                if (progress == 100) {\n                    progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                    platform_text = xabber.getString(\"settings__interface_language__text_description_full_translation_platform\",\n                        [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`]);\n                } else if (progress == 0) {\n                    progress_text = xabber.getString(\"settings__section_interface_language__text_description_no_translations\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                    platform_text = xabber.getString(\"settings__interface_language__text_description_no_translation_platform\",\n                            [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`]);\n                } else {\n                    progress_text = xabber.getString(\"settings__interface_language__text_description_unfull_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                    platform_text = xabber.getString(\"settings__section_interface_language__text_description_translation_platform\",\n                        [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`, constants.EMAIL_FOR_JOIN_TRANSLATION]);\n                }\n                this.$('.description').html(`${progress_text}<br><br>${platform_text}`);\n            }\n        }\n    });\n\n    xabber.mainColorPicker = xabber.BasicView.extend({\n        className: 'modal main-modal main-color-picker',\n        template: templates.color_scheme,\n        ps_selector: '.modal-content',\n        ps_settings: {theme: 'item-list'},\n\n        events: {\n            \"click .color-value\": \"setColor\"\n        },\n\n        _initialize: function (options) {\n            this.model = options.model;\n        },\n\n        render: function () {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n                },\n                complete: this.close.bind(this)\n            });\n        },\n\n        setColor: function (ev) {\n            let color = $(ev.target).closest('.color-value').attr('data-value');\n            this.model.save('main_color', color);\n            xabber.trigger('update_main_color');\n            this.close();\n        },\n\n        close: function () {\n            this.$el.closeModal({ complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        }\n\n    });\n\n    xabber.ColorPicker = xabber.BasicView.extend({\n        className: 'modal main-modal color-picker',\n        materialColors: [\n            {\n                color: \"red\",\n                variations: [\n                    {\n                        weight: 50,\n                        hex: \"#FFEBEE\"\n                    },\n                    {\n                        weight: 100,\n                        hex: \"#FFCDD2\"\n                    },\n                    {\n                        weight: 200,\n                        hex: \"#EF9A9A\"\n                    },\n                    {\n                        weight: 300,\n                        hex: \"#E57373\"\n                    },\n                    {\n                        weight: 400,\n                        hex: \"#EF5350\"\n                    },\n                    {\n                        weight: 500,\n                        hex: \"#F44336\"\n                    },\n                    {\n                        weight: 600,\n                        hex: \"#E53935\"\n                    },\n                    {\n                        weight: 700,\n                        hex: \"#D32F2F\"\n                    },\n                    {\n                        weight: 800,\n                        hex: \"#C62828\"\n                    },\n                    {\n                        weight: 900,\n                        hex: \"#B71C1C\"\n                    }\n                ]\n            },\n            {\n                color: \"pink\",\n                variations: [\n                    {\n                        weight: 50,\n                        hex: \"#FCE4EC\"\n                    },\n                    {\n                        weight: 100,\n                        hex: \"#F8BBD0\"\n                    },\n                    {\n                        weight: 200,\n                        hex: \"#F48FB1\"\n                    },\n                    {\n                        weight: 300,\n                        hex: \"#F06292\"\n                    },\n                    {\n                        weight: 400,\n                        hex: \"#EC407A\"\n                    },\n                    {\n                        weight: 500,\n                        hex: \"#E91E63\"\n                    },\n                    {\n                        weight: 600,\n                        hex: \"#D81B60\"\n                    },\n                    {\n                        weight: 700,\n                        hex: \"#C2185B\"\n                    },\n                    {\n                        weight: 800,\n                        hex: \"#AD1457\"\n                    },\n                    {\n                        weight: 900,\n                        hex: \"#880E4F\"\n                    }\n                ]\n            },\n            {\n                color: \"purple\",\n                variations: [\n                    {\n                        weight: 50,\n                        hex: \"#F3E5F5\"\n                    },\n                    {\n                        weight: 100,\n                        hex: \"#E1BEE7\"\n                    },\n                    {\n                        weight: 200,\n                        hex: \"#CE93D8\"\n                    },\n                    {\n                        weight: 300,\n                        hex: \"#BA68C8\"\n                    },\n                    {\n                        weight: 400,\n                        hex: \"#AB47BC\"\n                    },\n                    {\n                        weight: 500,\n                        hex: \"#9C27B0\"\n                    },\n                    {\n                        weight: 600,\n                        hex: \"#8E24AA\"\n                    },\n                    {\n                        weight: 700,\n                        hex: \"#7B1FA2\"\n                    },\n                    {\n                        weight: 800,\n                        hex: \"#6A1B9A\"\n                    },\n                    {\n                        weight: 900,\n                        hex: \"#4A148C\"\n                    }\n                ]\n            },\n            {\n                color: \"deep-purple\",\n                variations: [\n                    {\n                        weight: 50,\n                        hex: \"#EDE7F6\"\n                    },\n                    {\n                        weight: 100,\n                        hex: \"#D1C4E9\"\n                    },\n                    {\n                        weight: 200,\n                        hex: \"#B39DDB\"\n                    },\n                    {\n                        weight: 300,\n                        hex: \"#9575CD\"\n                    },\n                    {\n                        weight: 400,\n                        hex: \"#7E57C2\"\n                    },\n                    {\n                        weight: 500,\n                        hex: \"#673AB7\"\n                    },\n                    {\n                        weight: 600,\n                        hex: \"#5E35B1\"\n                    },\n                    {\n                        weight: 700,\n                        hex: \"#512DA8\"\n                    },\n                    {\n                        weight: 800,\n                        hex: \"#4527A0\"\n                    },\n                    {\n                        weight: 900,\n                        hex: \"#311B92\"\n                    }\n                ]\n            },\n            {\n                color: \"indigo\",\n                variations: [\n                    {\n                        weight: 50,\n                        hex: \"#E8EAF6\"\n                    },\n                    {\n                        weight: 100,\n                        hex: \"#C5CAE9\"\n                    },\n                    {\n                        weight: 200,\n                        hex: \"#9FA8DA\"\n                    },\n                    {\n                        weight: 300,\n                        hex: \"#7986CB\"\n                    },\n                    {\n                        weight: 400,\n                        hex: \"#5C6BC0\"\n                    },\n                    {\n                        weight: 500,\n                        hex: \"#3F51B5\"\n                    },\n                    {\n                        weight: 600,\n                        hex: \"#3949AB\"\n                    },\n                    {\n                        weight: 700,\n                        hex: \"#303F9F\"\n                    },\n                    {\n                        weight: 800,\n                        hex: \"#283593\"\n                    },\n                    {\n                        weight: 900,\n                        hex: \"#1A237E\"\n                    }\n                ]\n            },\n            {\n                color: \"blue\",\n                variations: [\n                    {\n                        weight: 50,\n                        hex: \"#E3F2FD\"\n                    },\n                    {\n                        weight: 100,\n                        hex: \"#BBDEFB\"\n                    },\n                    {\n                        weight: 200,\n                        hex: \"#90CAF9\"\n                    },\n                    {\n                        weight: 300,\n                        hex: \"#64B5F6\"\n                    },\n                    {\n                        weight: 400,\n                        hex: \"#42A5F5\"\n                    },\n                    {\n                        weight: 500,\n                        hex: \"#2196F3\"\n                    },\n                    {\n                        weight: 600,\n                        hex: \"#1E88E5\"\n                    },\n                    {\n                        weight: 700,\n                        hex: \"#1976D2\"\n                    },\n                    {\n                        weight: 800,\n                        hex: \"#1565C0\"\n                    },\n                    {\n                        weight: 900,\n                        hex: \"#0D47A1\"\n                    }\n                ]\n            },\n            {\n                color: \"light-blue\",\n                variations: [\n                    {\n                        weight: 50,\n                        hex: \"#E1F5FE\"\n                    },\n                    {\n                        weight: 100,\n                        hex: \"#B3E5FC\"\n                    },\n                    {\n                        weight: 200,\n                        hex: \"#81D4FA\"\n                    },\n                    {\n                        weight: 300,\n                        hex: \"#4FC3F7\"\n                    },\n                    {\n                        weight: 400,\n                        hex: \"#29B6F6\"\n                    },\n                    {\n                        weight: 500,\n                        hex: \"#03A9F4\"\n                    },\n                    {\n                        weight: 600,\n                        hex: \"#039BE5\"\n                    },\n                    {\n                        weight: 700,\n                        hex: \"#0288D1\"\n                    },\n                    {\n                        weight: 800,\n                        hex: \"#0277BD\"\n                    },\n                    {\n                        weight: 900,\n                        hex: \"#01579B\"\n                    }\n                ]\n            },\n            {\n                color: \"cyan\",\n                variations: [\n                    {\n                        weight: 50,\n                        hex: \"#E0F7FA\"\n                    },\n                    {\n                        weight: 100,\n                        hex: \"#B2EBF2\"\n                    },\n                    {\n                        weight: 200,\n                        hex: \"#80DEEA\"\n                    },\n                    {\n                        weight: 300,\n                        hex: \"#4DD0E1\"\n                    },\n                    {\n                        weight: 400,\n                        hex: \"#26C6DA\"\n                    },\n                    {\n                        weight: 500,\n                        hex: \"#00BCD4\"\n                    },\n                    {\n                        weight: 600,\n                        hex: \"#00ACC1\"\n                    },\n                    {\n                        weight: 700,\n                        hex: \"#0097A7\"\n                    },\n                    {\n                        weight: 800,\n                        hex: \"#00838F\"\n                    },\n                    {\n                        weight: 900,\n                        hex: \"#006064\"\n                    }\n                ]\n            },\n            {\n                color: \"teal\",\n                variations: [\n                    {\n                        weight: 50,\n                        hex: \"#E0F2F1\"\n                    },\n                    {\n                        weight: 100,\n                        hex: \"#B2DFDB\"\n                    },\n                    {\n                        weight: 200,\n                        hex: \"#80CBC4\"\n                    },\n                    {\n                        weight: 300,\n                        hex: \"#4DB6AC\"\n                    },\n                    {\n                        weight: 400,\n                        hex: \"#26A69A\"\n                    },\n                    {\n                        weight: 500,\n                        hex: \"#009688\"\n                    },\n                    {\n                        weight: 600,\n                        hex: \"#00897B\"\n                    },\n                    {\n                        weight: 700,\n                        hex: \"#00796B\"\n                    },\n                    {\n                        weight: 800,\n                        hex: \"#00695C\"\n                    },\n                    {\n                        weight: 900,\n                        hex: \"#004D40\"\n                    }\n                ]\n            },\n            {\n                color: \"green\",\n                variations: [\n                    {\n                        weight: 50,\n                        hex: \"#E8F5E9\"\n                    },\n                    {\n                        weight: 100,\n                        hex: \"#C8E6C9\"\n                    },\n                    {\n                        weight: 200,\n                        hex: \"#A5D6A7\"\n                    },\n                    {\n                        weight: 300,\n                        hex: \"#81C784\"\n                    },\n                    {\n                        weight: 400,\n                        hex: \"#66BB6A\"\n                    },\n                    {\n                        weight: 500,\n                        hex: \"#4CAF50\"\n                    },\n                    {\n                        weight: 600,\n                        hex: \"#43A047\"\n                    },\n                    {\n                        weight: 700,\n                        hex: \"#388E3C\"\n                    },\n                    {\n                        weight: 800,\n                        hex: \"#2E7D32\"\n                    },\n                    {\n                        weight: 900,\n                        hex: \"#1B5E20\"\n                    }\n                ]\n            },\n            {\n                color: \"light-green\",\n                variations: [\n                    {\n                        weight: 50,\n                        hex: \"#F1F8E9\"\n                    },\n                    {\n                        weight: 100,\n                        hex: \"#DCEDC8\"\n                    },\n                    {\n                        weight: 200,\n                        hex: \"#C5E1A5\"\n                    },\n                    {\n                        weight: 300,\n                        hex: \"#AED581\"\n                    },\n                    {\n                        weight: 400,\n                        hex: \"#9CCC65\"\n                    },\n                    {\n                        weight: 500,\n                        hex: \"#8BC34A\"\n                    },\n                    {\n                        weight: 600,\n                        hex: \"#7CB342\"\n                    },\n                    {\n                        weight: 700,\n                        hex: \"#689F38\"\n                    },\n                    {\n                        weight: 800,\n                        hex: \"#558B2F\"\n                    },\n                    {\n                        weight: 900,\n                        hex: \"#33691E\"\n                    }\n                ]\n            },\n            {\n                color: \"lime\",\n                variations: [\n                    {\n                        weight: 50,\n                        hex: \"#F9FBE7\"\n                    },\n                    {\n                        weight: 100,\n                        hex: \"#F0F4C3\"\n                    },\n                    {\n                        weight: 200,\n                        hex: \"#E6EE9C\"\n                    },\n                    {\n                        weight: 300,\n                        hex: \"#DCE775\"\n                    },\n                    {\n                        weight: 400,\n                        hex: \"#D4E157\"\n                    },\n                    {\n                        weight: 500,\n                        hex: \"#CDDC39\"\n                    },\n                    {\n                        weight: 600,\n                        hex: \"#C0CA33\"\n                    },\n                    {\n                        weight: 700,\n                        hex: \"#AFB42B\"\n                    },\n                    {\n                        weight: 800,\n                        hex: \"#9E9D24\"\n                    },\n                    {\n                        weight: 900,\n                        hex: \"#827717\"\n                    }\n                ]\n            },\n            {\n                color: \"yellow\",\n                variations: [\n                    {\n                        weight: 50,\n                        hex: \"#FFFDE7\"\n                    },\n                    {\n                        weight: 100,\n                        hex: \"#FFF9C4\"\n                    },\n                    {\n                        weight: 200,\n                        hex: \"#FFF59D\"\n                    },\n                    {\n                        weight: 300,\n                        hex: \"#FFF176\"\n                    },\n                    {\n                        weight: 400,\n                        hex: \"#FFEE58\"\n                    },\n                    {\n                        weight: 500,\n                        hex: \"#FFEB3B\"\n                    },\n                    {\n                        weight: 600,\n                        hex: \"#FDD835\"\n                    },\n                    {\n                        weight: 700,\n                        hex: \"#FBC02D\"\n                    },\n                    {\n                        weight: 800,\n                        hex: \"#F9A825\"\n                    },\n                    {\n                        weight: 900,\n                        hex: \"#F57F17\"\n                    }\n                ]\n            },\n            {\n                color: \"amber\",\n                variations: [\n                    {\n                        weight: 50,\n                        hex: \"#FFF8E1\"\n                    },\n                    {\n                        weight: 100,\n                        hex: \"#FFECB3\"\n                    },\n                    {\n                        weight: 200,\n                        hex: \"#FFE082\"\n                    },\n                    {\n                        weight: 300,\n                        hex: \"#FFD54F\"\n                    },\n                    {\n                        weight: 400,\n                        hex: \"#FFCA28\"\n                    },\n                    {\n                        weight: 500,\n                        hex: \"#FFC107\"\n                    },\n                    {\n                        weight: 600,\n                        hex: \"#FFB300\"\n                    },\n                    {\n                        weight: 700,\n                        hex: \"#FFA000\"\n                    },\n                    {\n                        weight: 800,\n                        hex: \"#FF8F00\"\n                    },\n                    {\n                        weight: 900,\n                        hex: \"#FF6F00\"\n                    }\n                ]\n            },\n            {\n                color: \"orange\",\n                variations: [\n                    {\n                        weight: 50,\n                        hex: \"#FFF3E0\"\n                    },\n                    {\n                        weight: 100,\n                        hex: \"#FFE0B2\"\n                    },\n                    {\n                        weight: 200,\n                        hex: \"#FFCC80\"\n                    },\n                    {\n                        weight: 300,\n                        hex: \"#FFB74D\"\n                    },\n                    {\n                        weight: 400,\n                        hex: \"#FFA726\"\n                    },\n                    {\n                        weight: 500,\n                        hex: \"#FF9800\"\n                    },\n                    {\n                        weight: 600,\n                        hex: \"#FB8C00\"\n                    },\n                    {\n                        weight: 700,\n                        hex: \"#F57C00\"\n                    },\n                    {\n                        weight: 800,\n                        hex: \"#EF6C00\"\n                    },\n                    {\n                        weight: 900,\n                        hex: \"#E65100\"\n                    }\n                ]\n            },\n            {\n                color: \"deep-orange\",\n                variations: [\n                    {\n                        weight: 50,\n                        hex: \"#FBE9E7\"\n                    },\n                    {\n                        weight: 100,\n                        hex: \"#FFCCBC\"\n                    },\n                    {\n                        weight: 200,\n                        hex: \"#FFAB91\"\n                    },\n                    {\n                        weight: 300,\n                        hex: \"#FF8A65\"\n                    },\n                    {\n                        weight: 400,\n                        hex: \"#FF7043\"\n                    },\n                    {\n                        weight: 500,\n                        hex: \"#FF5722\"\n                    },\n                    {\n                        weight: 600,\n                        hex: \"#F4511E\"\n                    },\n                    {\n                        weight: 700,\n                        hex: \"#E64A19\"\n                    },\n                    {\n                        weight: 800,\n                        hex: \"#D84315\"\n                    },\n                    {\n                        weight: 900,\n                        hex: \"#BF360C\"\n                    }\n                ]\n            },\n            {\n                color: \"brown\",\n                variations: [\n                    {\n                        weight: 50,\n                        hex: \"#EFEBE9\"\n                    },\n                    {\n                        weight: 100,\n                        hex: \"#D7CCC8\"\n                    },\n                    {\n                        weight: 200,\n                        hex: \"#BCAAA4\"\n                    },\n                    {\n                        weight: 300,\n                        hex: \"#A1887F\"\n                    },\n                    {\n                        weight: 400,\n                        hex: \"#8D6E63\"\n                    },\n                    {\n                        weight: 500,\n                        hex: \"#795548\"\n                    },\n                    {\n                        weight: 600,\n                        hex: \"#6D4C41\"\n                    },\n                    {\n                        weight: 700,\n                        hex: \"#5D4037\"\n                    },\n                    {\n                        weight: 800,\n                        hex: \"#4E342E\"\n                    },\n                    {\n                        weight: 900,\n                        hex: \"#3E2723\"\n                    }\n                ]\n            },\n            {\n                color: \"grey\",\n                variations: [\n                    {\n                        weight: 50,\n                        hex: \"#FAFAFA\"\n                    },\n                    {\n                        weight: 100,\n                        hex: \"#F5F5F5\"\n                    },\n                    {\n                        weight: 200,\n                        hex: \"#EEEEEE\"\n                    },\n                    {\n                        weight: 300,\n                        hex: \"#E0E0E0\"\n                    },\n                    {\n                        weight: 400,\n                        hex: \"#BDBDBD\"\n                    },\n                    {\n                        weight: 500,\n                        hex: \"#9E9E9E\"\n                    },\n                    {\n                        weight: 600,\n                        hex: \"#757575\"\n                    },\n                    {\n                        weight: 700,\n                        hex: \"#616161\"\n                    },\n                    {\n                        weight: 800,\n                        hex: \"#424242\"\n                    },\n                    {\n                        weight: 900,\n                        hex: \"#212121\"\n                    }\n                ]\n            },\n            {\n                color: \"blue-grey\",\n                variations: [\n                    {\n                        weight: 50,\n                        hex: \"#ECEFF1\"\n                    },\n                    {\n                        weight: 100,\n                        hex: \"#CFD8DC\"\n                    },\n                    {\n                        weight: 200,\n                        hex: \"#B0BEC5\"\n                    },\n                    {\n                        weight: 300,\n                        hex: \"#90A4AE\"\n                    },\n                    {\n                        weight: 400,\n                        hex: \"#78909C\"\n                    },\n                    {\n                        weight: 500,\n                        hex: \"#607D8B\"\n                    },\n                    {\n                        weight: 600,\n                        hex: \"#546E7A\"\n                    },\n                    {\n                        weight: 700,\n                        hex: \"#455A64\"\n                    },\n                    {\n                        weight: 800,\n                        hex: \"#37474F\"\n                    },\n                    {\n                        weight: 900,\n                        hex: \"#263238\"\n                    }\n                ]\n            }\n        ],\n\n        ps_selector: '.material-color-picker-wrap',\n        events: {\n            \"click .color-palette-item\": \"selectColor\",\n            \"click .selected-color-hex\": \"updateInputField\",\n            \"focusout .selected-color-hex-input\": \"focusoutInputField\",\n            \"keyup .selected-color-hex-input\": \"keyUpInput\",\n            \"click .btn-set\": \"setColor\"\n        },\n\n        _initialize(options) {\n            this.model = options.model;\n            this.$el.html(templates.color_picker({materialColors: this.materialColors}));\n        },\n\n        render: function () {\n            this.$el.openModal({\n                ready: () => {\n                    let $input = this.$('.selected-color-hex-input'),\n                        $color_hex = this.$('.selected-color-hex'),\n                        value = this.model.get('appearance').color || '#E0E0E0';\n                    let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n                    if (material_color) {\n                        let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n                        this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n                    } else {\n                        this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n                    }\n                    if (value) {\n                        this.$('.selected-color-wrap').removeClass('hidden');\n                        $input.addClass('hidden');\n                        $color_hex.removeClass('hidden').text(value);\n                        value && this.$('.selected-color-item').css('background-color', value);\n                    }\n                },\n                complete: this.close.bind(this)\n            });\n\n        },\n\n        updateInputField: function () {\n            let $input = this.$('.selected-color-hex-input'),\n                $color_hex = this.$('.selected-color-hex');\n            $input.removeClass('hidden');\n            $input[0].value = $color_hex.text();\n            $color_hex.addClass('hidden');\n        },\n\n        keyUpInput: function (ev) {\n            if (ev.keyCode == constants.KEY_ENTER) {\n                ev.preventDefault();\n                this.focusoutInputField();\n            }\n            let $input = this.$('.selected-color-hex-input'),\n                value = $input[0].value.trim();\n            this.$('.selected-color-item').css('background-color', value);\n            let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n            if (material_color) {\n                let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n                this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n            } else {\n                this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n            }\n        },\n\n        focusoutInputField: function () {\n            let $input = this.$('.selected-color-hex-input'),\n                $color_hex = this.$('.selected-color-hex'),\n                value = $input[0].value.trim();\n            let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n            if (material_color) {\n                let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n                this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n            } else {\n                this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n            }\n            $input.addClass('hidden');\n            $color_hex.removeClass('hidden').text(value);\n            this.$('.selected-color-item').css('background-color', value);\n        },\n\n        selectColor: function (ev) {\n            let $target = $(ev.target),\n                hex = $target.attr('data-hex'),\n                color_name = $target.closest('.color-palette-wrapper').attr('data-color-name').replace(/-/g, \"_\"),\n                weight = $target.attr('data-weight');\n            this.$('.selected-color-wrap').removeClass('hidden');\n            this.$('.selected-color-item').css('background-color', hex);\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${color_name}`).replace(/-/g, \" \").replace(/-/g, \" \") + ` ${weight}`);\n            this.$('.selected-color-hex').text(hex);\n            let $input = this.$('.selected-color-hex-input'),\n                $color_hex = this.$('.selected-color-hex');\n            $input.addClass('hidden');\n            $color_hex.removeClass('hidden');\n        },\n\n        setColor: function () {\n            this.close();\n            let appearance = this.model.get('appearance');\n            this.model.save('appearance', _.extend(appearance, {color: this.$('.selected-color-hex').text()}));\n\n        },\n\n        close: function () {\n            this.$el.closeModal({ complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                    xabber.settings_view.updateColor();\n                }\n            });\n        }\n\n    });\n\n    xabber.SetBackgroundView = xabber.BasicView.extend({\n        className: 'modal main-modal settings-background background-panel',\n        template: templates.backgrounds_gallery,\n        ps_selector: '.modal-content',\n        ps_settings: {theme: 'item-list'},\n\n        events: {\n            \"click .menu-btn\": \"updateActiveMenu\",\n            \"click .library-wrap .image-item\": \"setActiveImage\",\n            'change input[type=\"file\"]': \"onFileInputChanged\",\n            'keyup input.url': \"onInputChanged\",\n            \"click .btn-add\": \"addBackground\",\n            \"click .btn-cancel\": \"close\"\n        },\n\n        _initialize: function () {\n            this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n            this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        },\n\n        render: function (options) {\n            this.model = options.model;\n            this.type = options.type;\n            this.createLibrary();\n            this.$('.menu-btn').removeClass('active');\n            this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n            if (this.type == 'repeating-pattern')\n                this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_pattern\"));\n            else\n                this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_image\"));\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n                },\n                complete: this.close.bind(this)\n            });\n            let draggable = this.$('.upload-wrap');\n            draggable[0].ondragenter = function (ev) {\n                ev.preventDefault();\n                draggable.addClass('file-drop');\n            };\n            draggable[0].ondragover = function (ev) {\n                ev.preventDefault();\n            };\n            draggable[0].ondragleave = function (ev) {\n                if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                    return;\n                ev.preventDefault();\n                draggable.removeClass('file-drop');\n            };\n            draggable[0].ondrop = (ev) => {\n                ev.preventDefault();\n                ev.stopPropagation();\n                draggable.removeClass('file-drop');\n                let files = ev.dataTransfer.files || [], file;\n                for (let i = 0; i < files.length; i++) {\n                    if (utils.isImageType(files[i].type)) {\n                        file = files[i];\n                        break;\n                    }\n                }\n                file && this.addFile(file);\n            };\n        },\n\n        onScrollY: function () {\n            if (this.$('.screen-wrap:not(.hidden)').attr('data-screen') === 'library' && this.getScrollBottom() < 5) {\n                this.loadMoreImages();\n            }\n        },\n\n        getImagesFromXML: function (callback) {\n            if (this.type == 'repeating-pattern' && this.model.patterns_library || this.type == 'images' && this.model.img_library) {\n                callback && callback();\n                return;\n            }\n            let request = {\n                type: \"GET\",\n                contentType: \"application/xml\",\n                dataType: 'xml',\n                success: (data) => {\n                    if (this.type == 'repeating-pattern') {\n                        this.onGetPatternsCallback(data);\n                    } else {\n                        this.onGetImagesCallback(data);\n                    }\n                    callback && callback();\n                }\n            };\n            if (this.type == 'repeating-pattern') {\n                request.url = './background-patterns.xml';\n            } else {\n                request.url = './background-images.xml';\n            }\n            $.ajax(request);\n        },\n\n        onGetPatternsCallback: function (data) {\n            let images = [];\n            $(data).find('image').each((idx, img) => {\n                images.push({thumbnail: $(img).text()});\n            });\n            this.model.patterns_library = images;\n        },\n\n        onGetImagesCallback: function (data) {\n            let images = [];\n            $(data).find('image').each((idx, img) => {\n                let $img = $(img),\n                    thumbnail = $img.children('thumbnail').text(),\n                    fs_img = $img.children('fullscreen-image').text();\n                images.push({thumbnail, fs_img});\n            });\n            this.model.img_library = images;\n        },\n\n        onPaste: function (ev) {\n            let url = ev.clipboardData.getData('text').trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        },\n\n        updateActiveMenu: function (ev) {\n            let screen_name = ev.target.getAttribute('data-screen-name');\n            this.$('.menu-btn').removeClass('active');\n            this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n            this.updateScreen(screen_name);\n        },\n\n        updateScreen: function (name) {\n            this.$('.screen-wrap').addClass('hidden');\n            this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n            this.scrollToTop();\n            this.updateActiveButton();\n        },\n\n        updateActiveButton: function () {\n            let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n                non_active = true;\n            if ($active_screen.attr('data-screen') == 'library') {\n                $active_screen.find('div.active').length && (non_active = false);\n            } else {\n                $active_screen.find('img:not(.hidden)').length && (non_active = false);\n            }\n            this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n        },\n\n        createLibrary: function () {\n            this.getImagesFromXML(() => {\n                this.loadMoreImages(40);\n            });\n        },\n\n        loadMoreImages: function (count) {\n            !count && (count = 20);\n            let current_count = this.$(`.image-item`).length;\n            if (this.type == 'repeating-pattern' && current_count >= this.model.patterns_library.length || this.type == 'images' && current_count >= this.model.img_library.length)\n                return;\n            for (let i = current_count; i < (current_count + count); i++) {\n                let img = $(`<div class=\"image-item\"/>`),\n                    img_sources = this.type == 'repeating-pattern' ? this.model.patterns_library[i] : this.model.img_library[i];\n                if (!img_sources)\n                    break;\n                img.css('background-image', `url(\"${img_sources.thumbnail}\")`);\n                img.attr('data-src', this.type == 'repeating-pattern' ? img_sources.thumbnail : img_sources.fs_img);\n                this.$('.library-wrap').append(img);\n            }\n        },\n\n        setActiveImage: function (ev) {\n            let $target = $(ev.target);\n            if ($target.hasClass('active'))\n                $target.removeClass('active');\n            else {\n                this.$('.library-wrap>div').removeClass('active');\n                $target.addClass('active');\n            }\n            this.updateActiveButton();\n        },\n\n        onFileInputChanged: function (ev) {\n            let target = ev.target, file;\n            for (let i = 0; i < target.files.length; i++) {\n                if (utils.isImageType(target.files[i].type)) {\n                    file = target.files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n            $(target).val('');\n        },\n\n        addFile: function (file) {\n            let reader = new FileReader();\n            reader.onload = (e) => {\n                let image_prev = new Image(),\n                    src = e.target.result;\n                image_prev.src = src;\n                this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n                this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n                this.updateActiveButton();\n            };\n            reader.readAsDataURL(file);\n        },\n\n        onInputChanged: function (ev) {\n            if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n                return;\n            if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n                let url = ev.target.value.trim();\n                this.$('.image-preview img')[0].onload = () => {\n                    this.$('.image-preview img').removeClass('hidden');\n                    this.updateActiveButton();\n                };\n                this.$('.image-preview img').addClass('hidden')[0].src = url;\n                this.updateActiveButton();\n            } else {\n                this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n                this.updateActiveButton();\n            }\n        },\n\n        addBackground: function () {\n            if (this.$('.btn-add').hasClass('non-active'))\n                return;\n            let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n            dfd.done((img) => {\n                if (img) {\n                    this.model.save('background', {type: this.type, image: img});\n                }\n                else {\n                    this.model.save('background', {type: 'default'});\n                }\n                xabber.body.updateBackground();\n                this.close();\n            });\n            if ($active_screen.attr('data-screen') == 'library') {\n                image = $active_screen.find('div.active').attr('data-src');\n                dfd.resolve(image);\n            } else {\n                image = $active_screen.find('img:not(.hidden)')[0].src;\n                if ($active_screen.attr('data-screen') == 'web-address') {\n                    let request = {\n                        type: \"GET\",\n                        url: image,\n                        headers: {\"Access-Control-Allow-Origin\": \"*\"},\n                        dataType: 'blob',\n                        success: function (data) {\n                            image = data;\n                            dfd.resolve(image);\n                        },\n                        error: () => {\n                            dfd.resolve(image);\n                        }\n                    };\n                    $.ajax(request);\n                } else\n                    dfd.resolve(image);\n            }\n        },\n\n        close: function () {\n            xabber.settings_view.updateBackgroundSetting();\n            this.$el.closeModal({ complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        }\n    });\n\n    xabber.AboutView = xabber.BasicView.extend({\n        className: 'settings-panel about-panel',\n        template: templates.about,\n        ps_selector: '.panel-content',\n\n        _initialize: function () {\n            this.$('.xabber-info-wrap .version').text(this.model.get('version_number'));\n        },\n\n        render: function () {\n        }\n    });\n\n    xabber.DragManager = Backbone.Model.extend({\n        initialize: function () {\n            window.document.onmousedown = this.onMouseDown.bind(this);\n            window.document.onmousemove = this.onMouseMove.bind(this);\n            window.document.onmouseup = this.onMouseUp.bind(this);\n        },\n\n        onMouseDown: function (ev) {\n            if (ev.which != 1) {\n                return;\n            }\n            let draghandle_elem = ev.target.closest('.drag-handle'),\n                elem = draghandle_elem && draghandle_elem.closest('.draggable');\n            if (!elem) {\n                return this.resetElem();\n            }\n            this.set({\n                elem: elem,\n                draghandle_elem: draghandle_elem,\n                downX: ev.pageX,\n                downY: ev.pageY\n            });\n        },\n\n        onMouseMove: function (ev) {\n            if (!this.get('elem')) {\n                return;\n            }\n            let avatar = this.get('avatar');\n            if (!avatar) {\n                if (    Math.abs(ev.pageX - this.get('downX')) < 3 &&\n                        Math.abs(ev.pageY - this.get('downY')) < 3) {\n                    return;\n                }\n                avatar = this.createAvatar(ev);\n                if (!avatar) {\n                    return this.resetElem();\n                }\n                this.set('avatar', avatar);\n                let coords = this.getCoords(avatar);\n                this.set({\n                    shiftX: this.get('downX') - coords.left,\n                    shiftY: this.get('downY') - coords.top\n                });\n                this.startDrag(ev);\n            }\n            avatar.style.left = ev.pageX - this.get('shiftX') + 'px';\n            avatar.style.top = ev.pageY - this.get('shiftY') + 'px';\n            let drop_elem = this.findDropElem(ev);\n            this.updateDropElem(drop_elem);\n            return;\n        },\n\n        onMouseUp: function (ev) {\n            let selector = document.querySelector('.recording');\n            if (selector) {\n                $(selector).removeClass('recording');\n                return;\n            }\n            this.get('avatar') && this.finishDrag(ev);\n            this.resetElem();\n        },\n\n        resetElem: function () {\n            this.set({elem: null, draghandle_elem: null, avatar: null});\n        },\n\n        getCoords: function (elem) {\n            let box = elem.getBoundingClientRect();\n            return {\n                top: box.top + window.pageYOffset,\n                left: box.left + window.pageXOffset\n            };\n        },\n\n        createAvatar: function () {\n            let avatar = this.get('elem'),\n                $avatar = $(avatar),\n                draghandle_elem = this.get('draghandle_elem');\n            let old = {\n                parent: avatar.parentNode,\n                nextSibling: avatar.nextSibling,\n                position: avatar.position || '',\n                left: avatar.left || '',\n                top: avatar.top || '',\n                zIndex: avatar.zIndex || '',\n                avatar_cursor: avatar.style.cursor || '',\n                draghandle_elem_cursor: draghandle_elem.style.cursor || ''\n            };\n\n            $avatar.addClass('dragging');\n            avatar.style.cursor = '-webkit-grabbing';\n            draghandle_elem.style.cursor = '-webkit-grabbing';\n\n            avatar.rollback = function () {\n                old.parent.insertBefore(avatar, old.nextSibling);\n                $avatar.removeClass('dragging');\n                avatar.style.position = old.position;\n                avatar.style.left = old.left;\n                avatar.style.top = old.top;\n                avatar.style.zIndex = old.zIndex;\n                avatar.style.cursor = old.avatar_cursor;\n                draghandle_elem.style.cursor = old.draghandle_elem_cursor;\n            };\n\n            return avatar;\n        },\n\n        startDrag: function (ev) {\n            let avatar = this.get('avatar');\n            window.document.body.appendChild(avatar);\n            avatar.style.zIndex = 9999;\n            avatar.style.position = 'absolute';\n        },\n\n        finishDrag: function (ev) {\n            let elem = this.get('elem'),\n                avatar = this.get('avatar'),\n                drop_elem = this.findDropElem(ev);\n            avatar.rollback();\n            this.updateDropElem(null);\n            if (elem && drop_elem) {\n                $(elem).trigger('drag_to', drop_elem);\n                $(drop_elem).trigger('drag_from', elem);\n            }\n        },\n\n        findDropElem: function (ev) {\n            let avatar = this.get('avatar');\n            avatar.hidden = true;\n            let elem = window.document.elementFromPoint(ev.clientX, ev.clientY);\n            avatar.hidden = false;\n            if (!elem) {\n                return null;\n            }\n            return elem.closest('.droppable');\n        },\n\n        updateDropElem: function (drop_elem) {\n            let old_drop_elem = this.get('drop_elem');\n            this.set('drop_elem', drop_elem);\n            old_drop_elem && $(old_drop_elem).removeClass('drag-on');\n            drop_elem && $(drop_elem).addClass('drag-on');\n        }\n    });\n\n    _.extend(xabber, {\n        modal_settings: {\n            open: {\n                in_duration: 50,\n                out_duration: 100,\n                opacity: 0.4\n            },\n            close: {out_duration: 100}\n        },\n\n        ps_settings: {\n            minScrollbarLength: 40,\n            suppressScrollX: true,\n            wheelSpeed: 0.5\n        },\n\n        startBlinkingFavicon: function () {\n            if (this._blink_interval)\n                return;\n            this._blink_interval = setInterval(() => {\n                let $icon = $(\"link[rel='shortcut icon']\"), url;\n                if ($icon.attr('href').indexOf(this.cache.favicon) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT) > -1)\n                    url = this.cache.favicon_message || constants.FAVICON_MESSAGE;\n                else\n                    url = this.cache.favicon || constants.FAVICON_DEFAULT;\n                $icon.attr('href', url);\n            }, 1000);\n        },\n\n        stopBlinkingFavicon: function () {\n            if (this._blink_interval) {\n                clearInterval(this._blink_interval);\n                this._blink_interval = null;\n                let url = this.cache.favicon || constants.FAVICON_DEFAULT;\n                $(\"link[rel='shortcut icon']\").attr(\"href\", url);\n            }\n        },\n\n        onChangedAllMessageCounter: function () {\n            if (this.get('all_msg_counter')) {\n                this.startBlinkingFavicon();\n                window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n            } else {\n                this.stopBlinkingFavicon();\n                window.document.title = constants.CLIENT_NAME;\n            }\n        },\n\n        setAllMessageCounter: function () {\n            let count_msg = 0;\n            xabber.accounts.each((account) => {\n                account.chats.each((chat) => {\n                    if (chat.contact && !chat.isMuted())\n                        count_msg += chat.get('unread') + chat.get('const_unread');\n                });\n            });\n            return count_msg;\n        },\n\n        recountAllMessageCounter: function () {\n            this.set('all_msg_counter', this.setAllMessageCounter());\n        },\n\n        resetMessageCounter: function () {\n            this.set('all_msg_counter', 0);\n        },\n\n        onChangedFocusState: function () {\n            if (this.get('focused')) {\n                this.resetMessageCounter();\n            }\n        },\n\n        openWindow: function (url) {\n            utils.openWindow(url, () => {\n                utils.dialogs.error(xabber.getString(\"notifications__error__text_could_not_open_new_tab\"));\n            });\n        },\n\n        popupNotification: function (params) {\n            let notification = new window.Notification(params.title, {\n                body: params.text,\n                icon: params.icon\n            });\n            setTimeout(notification.close.bind(notification), 5000);\n            return notification;\n        },\n\n        playAudio: function (name, loop, volume) {\n            if (!((volume || volume === 0) && !isNaN(volume)))\n                volume = 1;\n            loop = loop || false;\n            let filename = constants.SOUNDS[name];\n            if (filename) {\n                let audio = new window.Audio(filename);\n                audio.loop = loop;\n                audio.volume = volume;\n                audio.play();\n                return audio;\n            }\n            return;\n        },\n\n        stopAudio: function (audio) {\n            if (audio) {\n                audio.pause();\n                audio.remove();\n            }\n        },\n\n        registerDOMEvents: function () {\n            let self = this;\n\n            $(window).on(\"blur focus\", function (ev) {\n                self.set('focused', ev.type === 'focus');\n            });\n\n            $(window).on(\"resize\", function (ev) {\n                self.set({\n                    width: window.innerWidth,\n                    height: window.innerHeight\n                });\n                self.trigger('update_layout', {size_changed: true});\n            });\n\n            window.document.body.ondragover = (ev) => {\n                ev.preventDefault();\n            };\n\n            window.document.body.ondrop = (ev) => {\n                ev.preventDefault();\n            };\n        }\n    });\n\n    xabber.once(\"start\", function () {\n        this.set('all_msg_counter', 0);\n        this.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n        this.on(\"change:focused\", this.onChangedFocusState, this);\n        this.set({\n            focused: window.document.hasFocus(),\n            width: window.innerWidth,\n            height: window.innerHeight\n        });\n        this.registerDOMEvents();\n        Materialize.modalSettings = this.modal_settings;\n\n        this.drag_manager = new this.DragManager();\n\n        this.body = new this.Body({model: this});\n\n        this.login_page = this.body.addChild('login', this.NodeView, {\n            classlist: 'login-page-wrap', el: $(document).find('.login-container')[0]});\n\n        this.toolbar_view = this.body.addChild('toolbar', this.ToolbarView);\n        this.settings.appearance.color && this.toolbar_view.updateColor(this.settings.appearance.color);\n\n        this.blur_overlay = this.body.addChild('blur_overlay', this.NodeView, {\n            classlist: 'blur-overlay'});\n\n        this.main_panel = this.body.addChild('main', this.NodeView, {\n            classlist: 'main-wrap'});\n        this.body.updateBlur(this.settings.appearance.blur);\n        this.left_panel = this.main_panel.addChild(\n            'left', this.NodeView, {classlist: 'panel-wrap left-panel-wrap'});\n        this.right_panel = this.main_panel.addChild(\n            'right', this.NodeView, {classlist: 'panel-wrap right-panel-wrap'});\n        this.right_contact_panel = this.main_panel.addChild(\n            'right_contact', this.NodeView, {classlist: 'panel-wrap right-contact-panel-wrap'});\n        this.wide_panel = this.main_panel.addChild(\n            'wide', this.NodeView, {classlist: 'panel-wrap wide-panel-wrap'});\n        this.placeholders_wrap = this.main_panel.addChild('placeholders', this.NodeView, {classlist: 'wide-placeholders-wrap'});\n        this.settings_view = this.wide_panel.addChild(\n            'settings', this.SettingsView, {model: this._settings});\n    }, xabber);\n\n    return xabber;\n  };\n});\n","define(\"xabber\", [\n    \"xabber-core\",\n    \"xabber-views\",\n    \"xabber-api-service\",\n    \"xabber-strophe\",\n    \"xabber-vcard\",\n    \"xabber-accounts\",\n    \"xabber-discovery\",\n    \"xabber-contacts\",\n    \"xabber-chats\",\n    \"xabber-searching\",\n    \"xabber-mentions\",\n    \"xabber-ui\",\n    \"xabber-omemo\"\n], function (xabber, views, api_service, strophe, vcard,\n             accounts, discovery, contacts, chats, searching, mentions, ui, omemo) {\n    xabber.extendWith(views, api_service, strophe, vcard,\n        accounts, discovery, contacts, chats, searching, mentions, ui, omemo)\n    global.xabber = xabber;\n    return xabber;\n});\n","var map = {\n\t\"./accounts/add_account.html\": 24109,\n\t\"./accounts/audio_file_waveform.html\": 56949,\n\t\"./accounts/avatars_gallery.html\": 47837,\n\t\"./accounts/change_password.html\": 34999,\n\t\"./accounts/change_status.html\": 33999,\n\t\"./accounts/current_token_item.html\": 86348,\n\t\"./accounts/emoji_panel.html\": 90231,\n\t\"./accounts/emoji_picker.html\": 25482,\n\t\"./accounts/emoji_picker_tabs.html\": 20458,\n\t\"./accounts/existing_groupchat_item.html\": 4870,\n\t\"./accounts/global_settings_item.html\": 98078,\n\t\"./accounts/media_gallery_account.html\": 1161,\n\t\"./accounts/media_gallery_account_file.html\": 39440,\n\t\"./accounts/resource.html\": 75216,\n\t\"./accounts/resource_right.html\": 255,\n\t\"./accounts/settings_left.html\": 35626,\n\t\"./accounts/settings_right.html\": 34987,\n\t\"./accounts/token_item.html\": 52509,\n\t\"./accounts/toolbar_item.html\": 54810,\n\t\"./accounts/webcam_panel.html\": 92797,\n\t\"./accounts/xmpp_login.html\": 64630,\n\t\"./api_service/add_xabber_account.html\": 64805,\n\t\"./api_service/linked_email_item.html\": 5398,\n\t\"./api_service/sync_settings.html\": 48881,\n\t\"./api_service/sync_settings_account_item.html\": 28522,\n\t\"./api_service/xabber_account.html\": 29674,\n\t\"./api_service/xabber_login.html\": 48755,\n\t\"./api_service/xabber_login_by_email.html\": 24864,\n\t\"./base/about.html\": 99288,\n\t\"./base/backgrounds_gallery.html\": 77428,\n\t\"./base/color_picker.html\": 51462,\n\t\"./base/color_scheme.html\": 83430,\n\t\"./base/dialog.html\": 62985,\n\t\"./base/fingerprint_item.html\": 75551,\n\t\"./base/fingerprints.html\": 5822,\n\t\"./base/input_widget.html\": 58355,\n\t\"./base/jingle_message_calling.html\": 62077,\n\t\"./base/omemo_enable.html\": 17661,\n\t\"./base/plyr_player_popup.html\": 14197,\n\t\"./base/settings.html\": 15887,\n\t\"./base/toolbar.html\": 45459,\n\t\"./chats/add_chat_account_item.html\": 56468,\n\t\"./chats/chat_bottom.html\": 74335,\n\t\"./chats/chat_content.html\": 10224,\n\t\"./chats/chat_content_contact.html\": 9031,\n\t\"./chats/chat_head.html\": 29317,\n\t\"./chats/chat_item.html\": 95370,\n\t\"./chats/chat_placeholder.html\": 5696,\n\t\"./chats/chats_panel.html\": 80026,\n\t\"./chats/checkbox.html\": 40433,\n\t\"./chats/content_encryption_warning.html\": 96249,\n\t\"./chats/encryption_warning.html\": 53318,\n\t\"./chats/forward_panel.html\": 83176,\n\t\"./chats/group_chats/add_group_chat.html\": 23118,\n\t\"./chats/group_chats/invitation_panel_view.html\": 1015,\n\t\"./chats/group_chats/mention_item.html\": 79011,\n\t\"./chats/group_chats/pinned_message_panel.html\": 68096,\n\t\"./chats/location_popup.html\": 21732,\n\t\"./chats/message_item.html\": 59170,\n\t\"./chats/messages/attached_file.html\": 97042,\n\t\"./chats/messages/audio_file.html\": 94382,\n\t\"./chats/messages/audio_file_waveform.html\": 74211,\n\t\"./chats/messages/auth_request.html\": 63576,\n\t\"./chats/messages/file.html\": 89256,\n\t\"./chats/messages/file_loading.html\": 83034,\n\t\"./chats/messages/file_upload.html\": 46311,\n\t\"./chats/messages/forwarded.html\": 19038,\n\t\"./chats/messages/group_request.html\": 29794,\n\t\"./chats/messages/hidden-template-for-2.html\": 15867,\n\t\"./chats/messages/hidden-template-for-3.html\": 87486,\n\t\"./chats/messages/hidden-template-for-4.html\": 19761,\n\t\"./chats/messages/hidden-template-for-5.html\": 20365,\n\t\"./chats/messages/hidden-template-for-6.html\": 57344,\n\t\"./chats/messages/images_details.html\": 13786,\n\t\"./chats/messages/link_reference.html\": 59840,\n\t\"./chats/messages/link_reference_chat.html\": 39475,\n\t\"./chats/messages/loading_circle.html\": 54301,\n\t\"./chats/messages/location.html\": 55127,\n\t\"./chats/messages/main.html\": 76510,\n\t\"./chats/messages/saved_main.html\": 18479,\n\t\"./chats/messages/searched.html\": 83228,\n\t\"./chats/messages/system.html\": 85046,\n\t\"./chats/messages/template-for-2.html\": 2861,\n\t\"./chats/messages/template-for-3.html\": 70423,\n\t\"./chats/messages/template-for-4.html\": 90719,\n\t\"./chats/messages/template-for-5.html\": 39125,\n\t\"./chats/messages/template-for-6.html\": 20129,\n\t\"./chats/messages/video.html\": 87795,\n\t\"./chats/messages/voice_message.html\": 43795,\n\t\"./chats/saved_chat_head.html\": 21385,\n\t\"./chats/send_media.html\": 34054,\n\t\"./chats/subscription_buttons.html\": 47725,\n\t\"./contacts/account_roster_left.html\": 69006,\n\t\"./contacts/account_roster_right.html\": 23643,\n\t\"./contacts/add_contact.html\": 24718,\n\t\"./contacts/add_contact_account_item.html\": 31238,\n\t\"./contacts/audio_file_waveform.html\": 49820,\n\t\"./contacts/contact_blocked_item.html\": 73253,\n\t\"./contacts/contact_details.html\": 62859,\n\t\"./contacts/contact_details_right.html\": 38624,\n\t\"./contacts/contact_left_item.html\": 24958,\n\t\"./contacts/contact_placeholder.html\": 19768,\n\t\"./contacts/contact_right_item.html\": 72055,\n\t\"./contacts/edit_contact.html\": 45078,\n\t\"./contacts/edit_group.html\": 4679,\n\t\"./contacts/group_chats/add_blocked_participant_form.html\": 37639,\n\t\"./contacts/group_chats/badge_edit_view.html\": 11868,\n\t\"./contacts/group_chats/default_restrictions.html\": 87004,\n\t\"./contacts/group_chats/default_restrictions_right.html\": 59115,\n\t\"./contacts/group_chats/description_input_widget.html\": 49080,\n\t\"./contacts/group_chats/file_item.html\": 79481,\n\t\"./contacts/group_chats/group_chat_details.html\": 69426,\n\t\"./contacts/group_chats/group_chat_details_right.html\": 18939,\n\t\"./contacts/group_chats/group_chat_properties.html\": 15159,\n\t\"./contacts/group_chats/group_chat_properties_edit.html\": 20904,\n\t\"./contacts/group_chats/group_chat_properties_right.html\": 69849,\n\t\"./contacts/group_chats/group_member_item.html\": 38114,\n\t\"./contacts/group_chats/group_member_item_right.html\": 53119,\n\t\"./contacts/group_chats/group_name_input_widget.html\": 82703,\n\t\"./contacts/group_chats/group_status.html\": 70569,\n\t\"./contacts/group_chats/group_status_right.html\": 27157,\n\t\"./contacts/group_chats/invitation.html\": 53464,\n\t\"./contacts/group_chats/invited_member_item.html\": 87824,\n\t\"./contacts/group_chats/participant_badge_input_widget.html\": 84939,\n\t\"./contacts/group_chats/participant_details_item.html\": 66493,\n\t\"./contacts/group_chats/participant_details_item_right.html\": 83326,\n\t\"./contacts/group_chats/participant_details_right.html\": 1593,\n\t\"./contacts/group_chats/participant_rights.html\": 76252,\n\t\"./contacts/group_chats/participants.html\": 93172,\n\t\"./contacts/group_chats/participants_right_panel.html\": 19295,\n\t\"./contacts/group_chats/pinned_message.html\": 54630,\n\t\"./contacts/group_chats/private_participant_details.html\": 15369,\n\t\"./contacts/group_chats/private_participant_details_item_right.html\": 79983,\n\t\"./contacts/group_chats/restriction_item.html\": 87050,\n\t\"./contacts/group_chats/right_expire_variants.html\": 54338,\n\t\"./contacts/group_chats/set_status.html\": 67065,\n\t\"./contacts/group_chats/status_item.html\": 27893,\n\t\"./contacts/group_left.html\": 57973,\n\t\"./contacts/group_right.html\": 95561,\n\t\"./contacts/group_settings.html\": 21612,\n\t\"./contacts/groups.html\": 62605,\n\t\"./contacts/groups_checkbox_list.html\": 54515,\n\t\"./contacts/groups_checkbox_list_contact.html\": 52661,\n\t\"./contacts/groups_list.html\": 58114,\n\t\"./contacts/groups_new_group.html\": 57713,\n\t\"./contacts/media_item.html\": 17905,\n\t\"./contacts/media_items_empty.html\": 23546,\n\t\"./contacts/preloader.html\": 4142,\n\t\"./contacts/roster_left.html\": 50869,\n\t\"./contacts/roster_right.html\": 22136,\n\t\"./contacts/roster_settings.html\": 54186,\n\t\"./mentions/mention_item.html\": 19253,\n\t\"./mentions/mentions_panel.html\": 50291,\n\t\"./mentions/mentions_placeholder.html\": 20103,\n\t\"./searching/existing_groupchat_details_view.html\": 31897,\n\t\"./searching/existing_groupchat_item.html\": 71655,\n\t\"./searching/searching_account_item.html\": 3103,\n\t\"./searching/searching_wide.html\": 43143,\n\t\"./svg/account-outline.html\": 20865,\n\t\"./svg/address-outline.html\": 66656,\n\t\"./svg/bell-off.html\": 14759,\n\t\"./svg/bell-sleep.html\": 11713,\n\t\"./svg/bell.html\": 55155,\n\t\"./svg/birthday-outline.html\": 23977,\n\t\"./svg/blocked-add.html\": 89768,\n\t\"./svg/blocked.html\": 33574,\n\t\"./svg/bot-variant.html\": 94862,\n\t\"./svg/bot.html\": 29568,\n\t\"./svg/call-outline.html\": 16938,\n\t\"./svg/call.html\": 9530,\n\t\"./svg/camera-retake.html\": 25430,\n\t\"./svg/cancel.html\": 80595,\n\t\"./svg/channel.html\": 40203,\n\t\"./svg/chevron-down.html\": 79353,\n\t\"./svg/chevron-left-variant.html\": 32011,\n\t\"./svg/chevron-right-variant.html\": 19297,\n\t\"./svg/circles.html\": 61265,\n\t\"./svg/clock-outline.html\": 93813,\n\t\"./svg/close.html\": 70874,\n\t\"./svg/crosshairs-gps.html\": 57197,\n\t\"./svg/crosshairs-question.html\": 40765,\n\t\"./svg/crosshairs.html\": 82823,\n\t\"./svg/description-outline.html\": 23373,\n\t\"./svg/devices.html\": 50832,\n\t\"./svg/edit-outline.html\": 96840,\n\t\"./svg/edit.html\": 22845,\n\t\"./svg/email-outline.html\": 66206,\n\t\"./svg/file-audio.html\": 3643,\n\t\"./svg/file-document.html\": 88700,\n\t\"./svg/file-pdf.html\": 3468,\n\t\"./svg/file-presentation.html\": 34417,\n\t\"./svg/file-video.html\": 98587,\n\t\"./svg/file-zip.html\": 89193,\n\t\"./svg/file.html\": 34058,\n\t\"./svg/fullname-outline.html\": 16109,\n\t\"./svg/fullname.html\": 12784,\n\t\"./svg/group-incognito.html\": 49703,\n\t\"./svg/group-invite.html\": 89411,\n\t\"./svg/group-private.html\": 81044,\n\t\"./svg/group-public.html\": 56403,\n\t\"./svg/history.html\": 35726,\n\t\"./svg/ic-at.html\": 81363,\n\t\"./svg/ic-jabber.html\": 9140,\n\t\"./svg/ic-searching.html\": 46476,\n\t\"./svg/id-outline.html\": 19324,\n\t\"./svg/image.html\": 90226,\n\t\"./svg/index.html\": 2612,\n\t\"./svg/information-outline.html\": 52973,\n\t\"./svg/invite-outline.html\": 34289,\n\t\"./svg/job-outline.html\": 31802,\n\t\"./svg/link.html\": 16205,\n\t\"./svg/map-marker-outline.html\": 83740,\n\t\"./svg/map-marker.html\": 70776,\n\t\"./svg/membership-outline.html\": 8872,\n\t\"./svg/message-bookmark-outline.html\": 6278,\n\t\"./svg/message-group.html\": 35529,\n\t\"./svg/minus.html\": 79092,\n\t\"./svg/mobile.html\": 33767,\n\t\"./svg/palette.html\": 43710,\n\t\"./svg/pause.html\": 58080,\n\t\"./svg/picture-in-picture-bottom-right.html\": 91421,\n\t\"./svg/picture-in-picture-minimize.html\": 42173,\n\t\"./svg/picture-in-picture-top-right.html\": 74578,\n\t\"./svg/pinned-circle-small.html\": 54052,\n\t\"./svg/pinned.html\": 9443,\n\t\"./svg/play.html\": 43069,\n\t\"./svg/player-float.html\": 30030,\n\t\"./svg/player-full.html\": 60259,\n\t\"./svg/player-mini-variant.html\": 70099,\n\t\"./svg/player-mini.html\": 77531,\n\t\"./svg/plus.html\": 85123,\n\t\"./svg/plyr.html\": 10410,\n\t\"./svg/qrcode.html\": 17943,\n\t\"./svg/restrictions-outline.html\": 89701,\n\t\"./svg/rss-variant.html\": 89657,\n\t\"./svg/rss.html\": 15645,\n\t\"./svg/saved-messages.html\": 11797,\n\t\"./svg/search.html\": 11146,\n\t\"./svg/server.html\": 71188,\n\t\"./svg/status-outline.html\": 52555,\n\t\"./svg/subscription-from.html\": 5414,\n\t\"./svg/subscription-to.html\": 8020,\n\t\"./svg/task.html\": 41835,\n\t\"./svg/translate.html\": 98431,\n\t\"./svg/video.html\": 98070,\n\t\"./svg/volume-high.html\": 87658,\n\t\"./svg/volume-off-variant.html\": 7962,\n\t\"./svg/volume-off.html\": 14032,\n\t\"./svg/xabber-offline.html\": 50033,\n\t\"./svg/xabber-online.html\": 74922,\n\t\"./svg/xmpp.html\": 92052,\n\t\"./vcard/vcard.html\": 73889,\n\t\"./vcard/vcard_edit.html\": 11803,\n\t\"./vcard/vcard_right.html\": 93047\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 89293;","var map = {\n\t\"./accounts/emojis.txt\": 13034\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 62037;","let client_translation_progress = {\"en\":100,\"ar\":27,\"az\":2,\"be\":13,\"bg\":65,\"bs\":0,\"ca\":25,\"cs\":99,\"cy\":0,\"da\":0,\"de\":49,\"el\":29,\"es-ES\":34,\"es-latin\":7,\"et\":0,\"fa\":4,\"fi\":9,\"fil\":14,\"fr\":35,\"ga-IE\":0,\"he\":21,\"hi\":0,\"hr\":0,\"hu\":14,\"hy-AM\":8,\"id\":67,\"is\":0,\"it\":72,\"ja\":20,\"ka\":0,\"kmr\":0,\"ko\":1,\"ku\":2,\"ky\":5,\"la-LA\":0,\"lb\":0,\"lt\":4,\"me\":0,\"mk\":0,\"mn\":0,\"mr\":0,\"ms\":6,\"nb\":21,\"ne-NP\":0,\"nl\":20,\"no\":0,\"oc\":13,\"pa-IN\":0,\"pl\":66,\"pt-BR\":71,\"pt-PT\":15,\"qya-AA\":0,\"ro\":16,\"ru\":69,\"sat\":1,\"sco\":0,\"si-LK\":37,\"sk\":20,\"sl\":28,\"sq\":3,\"sr\":13,\"sr-Cyrl-ME\":0,\"sv-SE\":38,\"sw\":1,\"ta\":1,\"te\":0,\"tg\":0,\"tk\":0,\"tlh-AA\":0,\"tr\":66,\"uk\":27,\"uz\":0,\"vi\":13,\"yo\":0,\"zh-CN\":38,\"zh-TW\":11,\"zu\":0}; typeof define === \"function\" && define(() => { return client_translation_progress;});","var map = {\n\t\"./ar-rSA.js\": [\n\t\t53591,\n\t\t5629\n\t],\n\t\"./az-rAZ.js\": [\n\t\t81101,\n\t\t1101\n\t],\n\t\"./be-rBY.js\": [\n\t\t86953,\n\t\t6953\n\t],\n\t\"./bg-rBG.js\": [\n\t\t41428,\n\t\t1428\n\t],\n\t\"./bs-rBA.js\": [\n\t\t76101,\n\t\t6101\n\t],\n\t\"./ca-rES.js\": [\n\t\t80049,\n\t\t49\n\t],\n\t\"./cs-rCZ.js\": [\n\t\t30011,\n\t\t11\n\t],\n\t\"./cy-rGB.js\": [\n\t\t98146,\n\t\t8146\n\t],\n\t\"./da-rDK.js\": [\n\t\t22348,\n\t\t2348\n\t],\n\t\"./de-rDE.js\": [\n\t\t78961,\n\t\t8961\n\t],\n\t\"./el-rGR.js\": [\n\t\t292,\n\t\t292\n\t],\n\t\"./en.js\": [\n\t\t53832,\n\t\t3832\n\t],\n\t\"./es-rES.js\": [\n\t\t85895,\n\t\t5895\n\t],\n\t\"./es419.js\": [\n\t\t93575,\n\t\t3575\n\t],\n\t\"./et-rEE.js\": [\n\t\t14103,\n\t\t4103\n\t],\n\t\"./fa-rIR.js\": [\n\t\t15729,\n\t\t5729\n\t],\n\t\"./fi-rFI.js\": [\n\t\t35069,\n\t\t5069\n\t],\n\t\"./fil-rPH.js\": [\n\t\t43250,\n\t\t3250\n\t],\n\t\"./fr-rFR.js\": [\n\t\t52716,\n\t\t2716\n\t],\n\t\"./ga-rIE.js\": [\n\t\t17872,\n\t\t7872\n\t],\n\t\"./hi-rIN.js\": [\n\t\t11361,\n\t\t1361\n\t],\n\t\"./hr-rHR.js\": [\n\t\t42324,\n\t\t2324\n\t],\n\t\"./hu-rHU.js\": [\n\t\t70833,\n\t\t833\n\t],\n\t\"./hy-rAM.js\": [\n\t\t63000,\n\t\t3000\n\t],\n\t\"./in-rID.js\": [\n\t\t31879,\n\t\t1879\n\t],\n\t\"./is-rIS.js\": [\n\t\t55298,\n\t\t5298\n\t],\n\t\"./it-rIT.js\": [\n\t\t8182,\n\t\t8182\n\t],\n\t\"./iw-rIL.js\": [\n\t\t5945,\n\t\t5945\n\t],\n\t\"./ja-rJP.js\": [\n\t\t91587,\n\t\t1587\n\t],\n\t\"./ka-rGE.js\": [\n\t\t21337,\n\t\t1337\n\t],\n\t\"./kmr-rTR.js\": [\n\t\t57057,\n\t\t7057\n\t],\n\t\"./ko-rKR.js\": [\n\t\t88756,\n\t\t8756\n\t],\n\t\"./ku-rTR.js\": [\n\t\t33678,\n\t\t3678\n\t],\n\t\"./ky-rKG.js\": [\n\t\t28404,\n\t\t8404\n\t],\n\t\"./la-rLA.js\": [\n\t\t27089,\n\t\t7089\n\t],\n\t\"./lb-rLU.js\": [\n\t\t85752,\n\t\t5752\n\t],\n\t\"./lt-rLT.js\": [\n\t\t23097,\n\t\t3097\n\t],\n\t\"./me-rME.js\": [\n\t\t59023,\n\t\t9023\n\t],\n\t\"./mk-rMK.js\": [\n\t\t52499,\n\t\t2499\n\t],\n\t\"./mn-rMN.js\": [\n\t\t68721,\n\t\t8721\n\t],\n\t\"./mr-rIN.js\": [\n\t\t33591,\n\t\t3591\n\t],\n\t\"./ms-rMY.js\": [\n\t\t10922,\n\t\t922\n\t],\n\t\"./nb-rNO.js\": [\n\t\t54778,\n\t\t4778\n\t],\n\t\"./ne-rNP.js\": [\n\t\t4463,\n\t\t4463\n\t],\n\t\"./nl-rNL.js\": [\n\t\t36447,\n\t\t6447\n\t],\n\t\"./no-rNO.js\": [\n\t\t16813,\n\t\t6813\n\t],\n\t\"./oc-rFR.js\": [\n\t\t76102,\n\t\t6102\n\t],\n\t\"./pa-rIN.js\": [\n\t\t49081,\n\t\t9081\n\t],\n\t\"./pl-rPL.js\": [\n\t\t60419,\n\t\t419\n\t],\n\t\"./pt-rBR.js\": [\n\t\t9226,\n\t\t9226\n\t],\n\t\"./pt-rPT.js\": [\n\t\t10201,\n\t\t201\n\t],\n\t\"./qya-rAA.js\": [\n\t\t39460,\n\t\t9460\n\t],\n\t\"./ro-rRO.js\": [\n\t\t16292,\n\t\t6292\n\t],\n\t\"./ru-rRU.js\": [\n\t\t74391,\n\t\t4391\n\t],\n\t\"./sat-rIN.js\": [\n\t\t1905,\n\t\t1905\n\t],\n\t\"./sco-rGB.js\": [\n\t\t52323,\n\t\t2323\n\t],\n\t\"./si-rLK.js\": [\n\t\t79773,\n\t\t9773\n\t],\n\t\"./sk-rSK.js\": [\n\t\t51874,\n\t\t1874\n\t],\n\t\"./sl-rSI.js\": [\n\t\t97658,\n\t\t7658\n\t],\n\t\"./sq-rAL.js\": [\n\t\t80596,\n\t\t596\n\t],\n\t\"./sr-rCyrl-rME.js\": [\n\t\t33343,\n\t\t3343\n\t],\n\t\"./sr-rSP.js\": [\n\t\t75384,\n\t\t5384\n\t],\n\t\"./sv-rSE.js\": [\n\t\t50608,\n\t\t608\n\t],\n\t\"./sw-rKE.js\": [\n\t\t6802,\n\t\t6802\n\t],\n\t\"./ta-rIN.js\": [\n\t\t51796,\n\t\t1796\n\t],\n\t\"./te-rIN.js\": [\n\t\t49782,\n\t\t9782\n\t],\n\t\"./tg-rTJ.js\": [\n\t\t33689,\n\t\t3689\n\t],\n\t\"./tk-rTM.js\": [\n\t\t60130,\n\t\t130\n\t],\n\t\"./tlh-rAA.js\": [\n\t\t73739,\n\t\t3739\n\t],\n\t\"./tr-rTR.js\": [\n\t\t4961,\n\t\t4961\n\t],\n\t\"./translation_progress.js\": [\n\t\t23297\n\t],\n\t\"./uk-rUA.js\": [\n\t\t88109,\n\t\t8109\n\t],\n\t\"./uz-rUZ.js\": [\n\t\t96886,\n\t\t6886\n\t],\n\t\"./vi-rVN.js\": [\n\t\t37216,\n\t\t7216\n\t],\n\t\"./yo-rNG.js\": [\n\t\t97045,\n\t\t7045\n\t],\n\t\"./zh-rCN.js\": [\n\t\t16806,\n\t\t6806\n\t],\n\t\"./zh-rTW.js\": [\n\t\t58545,\n\t\t8545\n\t],\n\t\"./zu-rZA.js\": [\n\t\t58810,\n\t\t8810\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8946;\nmodule.exports = webpackAsyncContext;","define(function () { return JSON.parse(\n'{\"version_number\":\"2.3.2.200\",\"version_description\":\"changed how presence and sync are sent, removed from attr from output stanzas, added result iq sending function\"}'\n)});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"xabber.\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkxabber_web\"] = self[\"webpackChunkxabber_web\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [1216], () => (__webpack_require__(15489)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","xabber","env","constants","templates","accounts","utils","$","$iq","$pres","Strophe","_","moment","Images","images","pretty_datetime","timestamp","settings","language","get","Account","Backbone","Model","extend","idAttribute","defaults","enabled","auth_type","status","status_message","priority","auto_login_xa","groupchat_servers_list","initialize","_attrs","options","this","retraction_version","is_new","auth_view","is_invalid","on","onDestroy","last_msg_timestamp","account_settings_list","jid","create","now","to_sync","api_account","clone","attributes","color","collection","getDefaultColor","order","getLastOrder","save","deleteAccount","attrs","name","image","getDefaultAvatar","cached_image","getCachedImage","vcard","getBlank","photo_hash","session","connected","reconnected","conn_retries","conn_feedback","getString","_waiting_code","code_requests","gallery_code_requests","xabber_auth","onChangedConnected","CONNECTION_URL","websocket_connection_url","conn_manager","ConnectionManager","connection","x_token","counter","hotp_counter","_added_pres_handlers","_pending_stanzas","_pending_messages","dfd_presence","Deferred","resources","AccountResources","account","password_view","ChangePasswordView","model","vcard_edit","VCardEditView","updateColorScheme","getVCard","each","_init_plugins","plugin","call","xmlInput","xml","info","xmlOutput","once","start","result","trigger","isOnline","connect","getPassword","atou","e","isConnected","sendMsg","stanza","callback","res","authenticated","disconnecting","send","console","log","is_msg","push","sendMsgFast","getConnectionForIQ","fast_connection","sendIQFast","sendIQ","apply","arguments","sendFast","errback","nodeTree","first","is","pubAvatar","removeAvatar","dfd","done","data","http_avatar","avatar_hash","hash","sha1","base64","iq_pub_metadata","type","c","xmlns","NS","PUBSUB","node","PUBSUB_AVATAR_METADATA","id","bytes","size","url","file","thumbnails","forEach","thumbnail","PUBSUB_AVATAR_METADATA_THUMBNAIL","width","height","up","data_error","iq_pub_data","PUBSUB_AVATAR_DATA","t","uploaded","resolve","generated","uploadAvatar","length","getAvatar","avatar","iq_request_avatar","to","iq","pubsub_avatar","find","text","elem","tree","getAttribute","lang","setAttribute","MAM","is_iq","parseDataForm","$dataform","attr","title","children","instructions","fields","data_form","idx","field","$field","field_var","field_type","field_label","field_value","field_options","i","value","option","$option","val","lbl","label","var","values","addDataFormToStanza","$stanza","DATAFORM","field_attrs","sendPres","verifyXabberAccount","code","request","API_SERVICE_URL","contentType","dataType","JSON","stringify","success","textStatus","jqXHR","token","ajax","createFastConnection","password","Number","expire","undefined","login","token_invalidated","show","fast_conn_manager","disconnect","x_token_auth","onFastConnected","bind","set","reconnecting","auth_failed","restoreStatus","connectionCallback","reconnect","is_fast","timeout","RECONNECTION_TIMEOUTS","setTimeout","connFeedback","reset","reconnectionCallback","condition","CONN_STATUSES","loginCallback","conn_status","conn_condition","Status","ERROR","onConnectionConflict","CONNECTED","nickname","setVCard","dialogs","error","AUTHFAIL","onTokenRevoked","onAuthFailed","DISCONNECTED","flush","connectXabberAccount","iq_private_storage","PRIVATE_STORAGE","authXabberAccount","requestPassword","api_jid","request_id","verifying_code","verifying_mess","idx_verifying_code","indexOf","splice","iq_send_auth_mark","login_by_token","msg_attrs","from_jid","message","is_archived","createMessageFromIQ","connect_callback","max_retries","max_connection_retries","registerCallback","error_text","REGISTER","register","username","getNodeFromJid","url_params","rkey","key","submit","REGISTERED","$nickname_input","CONFLICT","errorRegistrationFeedback","NOTACCEPTABLE","REGIFAIL","changePasswordCallback","settings_right","account_password_view","successFeedback","errorFeedback","old_password","change_password_connection","$password_input","trim","change_password_connection_manager","CONNECTING","stepped_auth","resetAuthStepper","authStepperStart","endAuth","contains","BAD_CONN_STATUSES","stepper_auth_error","CONNFAIL","CONNTIMEOUT","authStepperError","destroy","no_reconnect","old_device_token","pass","getAllXTokens","tokens_list","domain","AUTH_DEVICES","tokens","$token","client","device","description","token_uid","last_auth","ip_address","ip","x_tokens_list","updateXTokens","on_token_revoked","onReconnected","onConnected","onDisconnected","resource","getResourceFromJid","getDomainFromJid","afterConnected","_after_connected_plugins","_after_fast_connected_plugins","_after_reconnected_plugins","sendPendingStanzas","sendPendingMessages","registerPresenceHandler","enableCarbons","getAllMessageRetractions","encrypted","query_options","REWRITE","version","omemo","getRetractVersion","retractions_query","item","Builder","msg_iq","msg","messages","unique_id","append","DELIVERY","disconnected_timestamp","last_stanza_timestamp","deactivate","CARBONS","is_callback","isFunction","vcard_updated","first_name","last_name","fullname","AVATAR_PRIORITIES","VCARD_AVATAR","photo","avatar_priority","vcardPhotoUpdated","getStatusMessage","setStatus","status_updated","status_prev","sendPresence","activate","getAvatarHash","from_avatar","decoded_raw","atob","bin","Uint8Array","from","Array","prototype","map","x","charCodeAt","VCARD_UPDATE","cnode","caps","createCapsNode","showSettings","right","block_name","has_settings_right","isUndefined","settings_left","AccountSettingsLeftView","AccountSettingsRightView","body","setScreen","addChild","BlockListView","el","ChangeAccountPasswordView","$el","revokeXToken","token_num","revokeAllXTokens","show_settings","show_settings_after_delete","right_contact","_registering","cached_sync_conversations","clearDataBase","registerIQHandler","deleteHandler","_stanza_handler","addHandler","onGetIQ","registerSyncedIQHandler","_synced_stanza_handler","onSyncedIQ","SYNCHRONIZATION","_pres_handler","presence","onPresence","onSetIQResult","roster","syncConversations","request_code","$incoming_iq","$confirm","HTTP_AUTH","$session_availability","JINGLE_MSG","onAuthCode","$session_availability_response","session_id","current_voip_call","updateStatus","testGalleryTokenExpire","currentTime","Date","tokenExpireTime","server_features","initGalleryAuth","gallery_feature","response","handleCommonGalleryErrors","confirm_code","expires","prepareFiles","files","reader","FileReader","onloadend","b64","split","binary_file","testFile","readAsDataURL","getStorageStats","params","headers","uploadFile","formData","FormData","duration","voice","processData","deleteFile","file_id","getOpenGraphData","site","ogp","closest","image_height","image_width","video_url","contact","contacts","mergeContact","chats","getChat","$presence","bare_jid","getBareJidFromJid","handler","isNaN","$vcard_update","VCAD_UPDATE","resource_obj","$device","addInitPlugin","func","addConnPlugin","conn","reconn","addFastConnPlugin","Accounts","CollectionWithStorage","comparator","acc1","acc2","_initialize","models","settings_list","getEnabledList","getConnectedList","onAdd","onUpdatedOrder","onListChanged","onAccountDisconnected","onQuit","onQuitAccounts","onSettingsAdded","revoke_token","closeModal","modals","clear_queue","filter","chats_view","showAllChats","toolbar_view","recountAllMessageCounter","sort","last","used_colors","colors","MATERIAL_COLORS","moveBefore","index2","prev_order","at","_updateOrder","moveToBottom","acc","index","order_timestamp","synchronize_order_settings","AccountToolbarItemView","BasicView","className","template","toolbar_item","avatar_size","AVATAR_SIZES","TOOLBAR_ACCOUNT_ITEM","events","updateConnected","updateAuthState","updateAvatar","setActive","switchClass","hideIf","showIf","setAvatar","scroll_top","getScrollTop","scrollTo","filterChats","ev","stopPropagation","showChatsByAccount","removeClass","addClass","ToolbarAccountsBlockView","updateList","updateOneInList","onAccountRemoved","view","detach","child","parent","updateScrollBar","prepend","eq","after","removeChild","Resource","ResourceView","update","ResourceRightView","resource_right","Resources","Collection","r1","r2","p1","p2","requestInfo","disco","$identity","attention_supported","isFeatureSupported","ATTENTION","ns","is_supported","ResourcesView","renderByInit","onResourceAdded","onResourceRemoved","onReset","onPriorityChanged","updatePosition","AccountResourcesView","removeChildren","AccountVCardView","VCardView","__initialize","updateButtons","showEditView","AccountMediaGalleryView","media_gallery_account","html","ps_container","onScroll","onUpdateAvatars","render","updateStorage","dropdown","inDuration","outDuration","constrainWidth","hover","alignment","hasClass","scrollTop","scrollHeight","offsetHeight","loading_files","current_page","total_pages","current_options","page","getFiles","after_deletion","after_avatar_update","used_storage","pretty_size","total","used","quota","videos","voices","css","toFixed","remove","tabs","click","filterType","file_type","sorting","order_by","getAvatars","onTabClick","target","sortFiles","$target","sort_type","onClickFile","$elem","f_url","common","$audio_elem","voice_message","renderVoiceMessage","prev_audio_message","pause","play","element","file_url","not_expanded_msg","innerHTML","$msg_element","audio_file_waveform","waveform_id","aud","createAudio","Math","round","getDuration","pretty_duration","unAll","callback_popup_message","timerId","setInterval","cur_time","getCurrentTime","isPlaying","clearInterval","onchange","setVolume","audio","WaveSurfer","container","scrollParent","barWidth","barHeight","cursorColor","autoCenter","normalize","hideScrollBar","progressColor","load","Object","assign","obj_per_page","current_rendered_type","preloader","appendTo","renderFiles","total_objects","tab","items","$gallery_file","media_gallery_account_file","svg_icon","file_type_icon_svg","media_type","filesize","magnificPopup","closeOnContentClick","fixedContentPos","mainClass","verticalFit","titleSrc","zoom","err","deleteAvatar","deleteFilesFiltered","days","date","setDate","getDate","toISOString","date_lte","onFileInputChanged","openStoragePanel","ACCOUNT_SETTINGS_LEFT","status_field","StatusMessageWidget","updateName","updateBlocks","updateGallery","updateCSS","updateNameCSS","isVisible","$name","removeAttr","wrap_width","font_size","chooseAvatar","SetAvatarView","openEmojiPanel","EmojiProfileImageView","open","openWebcamPanel","WebcamProfileImageView","changeAvatar","MAX_AVATAR_FILE_SIZE","startsWith","getAvatarFromFile","openChangeStatus","change_status_view","ChangeStatusView","jumpToBlock","$tab","gallery_view","dialog_options","checked","ask","ok_button_text","delete_settings","_call_method","ps_selector","vcard_view","updateView","showConnectionStatus","updateSynchronizationBlock","updateReconnectButton","updateSyncOption","updateDelSettingsButton","updateSyncState","updateEnabled","updateEnabledOmemo","updateEncryptedChatstates","prop","dropdown_settings","belowOrigin","scrollToChild","perfectScrollbar","ps_settings","showResources","resource_id","hideResources","renderAllXTokens","sortBy","pretty_token","findWhere","toJSON","$cur_token_html","current_token_item","$token_html","token_item","state","SYNCED_STATUS_DATA","tip","mdiclass","icon","$sync_icon","has_keys","keys","Omemo","storage_name","getStorageName","fetch","omemo_enable_view","close","setEnabled","setEnabledOmemo","initOmemo","destroyOmemo","setTypingNotification","openDevicesWindow","omemo_devices","Fingerprints","purgeKeys","device_id","bundle","preKeys","own_devices","ik","fingerprint","removeItemFromNode","OMEMO","showPasswordView","changeSyncSetting","update_timestamp","synchronize_main_settings","deleteSettings","delete_account","changeColor","update_settings","openBlockWindow","ask_enter_value","modal_class","input_placeholder_value","block","blockContact","unblockSelected","blocklist","deselectBlocked","InputWidget","field_name","placeholder","bindModelEvents","updateValue","getValue","setValue","AccountSettingsItemView","global_settings_item","SETTINGS_ACCOUNT_ITEM","onDragTo","onMoveAccount","drop_elem","SettingsAccountsBlockView","onMoveAccountToBottom","before","updateHtml","change_status","highlightStatus","restoreStatusMessageInput","siblings","changeStatus","do_change","clearStatusMessageInput","verbose_status","keyUp","keyCode","KEY_ENTER","apply_to_all","changeApplyToAll","openModal","ready","onRender","complete","Materialize","updateTextFields","onHide","hide","avatars_gallery","theme","onpaste","onPaste","createLibrary","draggable","ondragenter","preventDefault","ondragover","ondragleave","relatedTarget","ondrop","dataTransfer","isImageType","addFile","clipboardData","getData","onload","updateActiveButton","src","updateActiveMenu","screen_name","updateScreen","scrollToTop","$active_screen","non_active","current_items","img","setActiveImage","image_prev","Image","current_file","onInputChanged","KEY_CTRL","KEY_SHIFT","KEY_ARROW_UP","KEY_ARROW_DOWN","KEY_ARROW_RIGHT","KEY_ARROW_LEFT","addAvatar","img_from_gallery","createFileFromURL","then","async","blob","File","webcam_panel","registration","registration_view","streaming","video","canvas","startbutton","startupStream","srcObject","getTracks","track","stop","navigator","mediaDevices","getUserMedia","stream","catch","addEventListener","takePicture","clearPhoto","context","getContext","fillStyle","fillRect","toDataURL","drawImage","globalCompositeOperation","beginPath","arc","PI","closePath","fill","saveAvatar","getBlobImage","replace","member_details_avatar_size","emoji_panel","emoji_panel_view","EmojiPickerView","openEmojiPicker","_settings","emoji_picker","readEmojisJSON","emojis","parse","emoji_picker_tabs","offset","pickEmojiTab","pickEmoji","emoji","change_password","is_login","use_queue","authFeedback","focus","getActionName","cancel","setPassword","utoa","authentication","$old_password_input","$password_confirm_input","password_confirm","connect_change_password","AuthView","$jid_input","updateOptions","REGISTRATION_CUSTOM_DOMAIN","REGISTRATION_DOMAINS","LOGIN_CUSTOM_DOMAIN","LOGIN_DOMAINS","at_idx","toLowerCase","registerFeedback","registration_success","authStepperShow","getWebsocketURL","DISABLE_LOOKUP_WS","window","location","protocol","socket_url","socialAuth","origin","href","provider","XABBER_ACCOUNT_URL","XmppLoginPanel","xmpp_login","$domain_input","handleRegistrationStep","stepped_auth_complete","updateDomains","updateAuthDomains","REGISTRATION_BUTTON","anchor","openButtonsMenu","keyUpNickname","openNextStep","keyUpJid","clearTimeout","_check_user_timeout","includes","setCustomDomainRegistration","regexp_local_part","regexp_domain","test","_registration_username","_registration_domain","auth_connection","_connection","_addSysHandler","handleRegisterStanza","uuid","auth_conn_manager","connect_check_user","checkUserCallback","keyUpPassword","keyUpDomain","keyUpLogin","focusoutDomain","query","username_taken","getElementsByTagName","_changeConnectStatus","childNodes","tagName","getText","_supports_check_user","class","insertBefore","user_success","_check_user_connection_timeout","_no_response","openPreviousStep","step","checkFeaturesStepper","successRegistrationFeedback","registerWithoutAvatar","logoutAndRegister","openRegisterForm","openLoginForm","all_servers","substr","setCustomDomainAuth","$property_value","changePropertyValueRegistration","$property_item","changePropertyValueAuth","timeout_timer","HTTP_UPLOAD","RECOMMENDED_DOMAIN","TRUSTED_DOMAINS","first_features_received","auth_error","AddAccountView","add_account","logout","xmpp_login_panel","login_page","account_settings","wide_panel","NodeView","classlist","acc_settings_left","Container","acc_settings_right","settings_view","add_account_view","reject","onbeforeunload","patchTree","login_screen","DEFAULT_LOGIN_SCREEN","xabber_login","api_service","AccountSettings","synced","deleted","request_data","omit","AccountSettingsList","create_from_server","settings_item","AccountsOrderTimestamp","ModelWithStorage","APIAccount","sync_all","list","sync_request","fcm_subscribe","fcm_unsubscribe","from_token","action","get_settings","social_auth","social_login","method","errorThrown","onAPIError","add_source","source","CLIENT_NAME","account_status","onUserData","onSettings","onSettingsFailed","where","settings_data","order_data","fetch_from_server","deleted_list","order_list","order_map","max_order","order_item","responseJSON","detail","reason","ok_button","cancel_button","_login","credentials","onLogin","onLoginFailed","onLoginByToken","onLoginByTokenFailed","onSocialLogin","onSocialLoginFailed","storage","clear","xmpp_binding_jid","xmpp_binding","full_id","linked_email_list","email_list","linked_social","social_bindings","sync_settings_view","SyncSettingsView","delete_accounts","endpoint_key","cache","APIAccountAuthView","$username_input","onChangeAuthenticationState","onChangeConnected","off","email_auth_view","XabberLoginByEmailPanel","xabber_login_by_email","opacity","auth","XabberLoginPanel","changeLoginType","openXmppLoginPanel","AddAPIAccountView","add_xabber_account","empty","renderAccountItem","bindAccount","replaceWith","$item","add_contact_account_item","selectAccount","loginXabberAccount","sync_settings","SYNCHRONIZE_ACCOUNT_ITEM","to_sync_map","accounts_map","deleted_map","settings_map","deleted_item","obj","sync_way","has","sync_choose","max","addAccountHtml","updateSyncOptions","$account_el","sync_settings_account_item","updateAccountHtml","account_wrap","$account_wrap","account_item","SYNC_WAY_DATA","changeSyncAll","changeSyncOne","changeSyncWay","syncSettings","do_sync","isScreen","APIAccountView","xabber_account","XABBER_ACCOUNT","updateForConnectedStatus","default_color","updateLastSyncInfo","updateSocialBindings","updateSyncButton","updateExpanded","changeExpanded","expanded","linked_emails","$social_item","email","email_id","email_address","is_verified","verified","linked_email_item","social","social_provider","social_name","linkSocial","mail","mail_data","openAccount","verifyEmail","resend_button_text","resend_to","unlinkSocial","$social_html","deleted_mail_index","social_list","deleted_social_index","sync","last_sync","time_delta","fromNow","synchronize","add_api_account_view","onPasswordResetFailed","verified_email","notify","openWindow","ENABLE_XABBER_ACCOUNT","xabber_login_panel","$msg","Emoji","pretty_date","Message","msgid","MSG_PENDING","time","format","isSenderMe","updateUniqueId","forwarded_message","getState","MSG_STATE","getVerboseState","MSG_VERBOSE_STATE","MessagesBase","SearchedMessages","collections","updateInCollections","addCollection","event","Messages","createInvitationFromStanza","$message","is_private_invitation","full_jid","$delay","delay","markable","archive_id","origin_id","stanza_id","$group_info","GROUP_CHAT","group_info_attributes","carbon_copied","is_forwarded","contact_stanza_id","synced_msg","synced_invitation_from_server","group_chat","chat","privacy","searchable","parent_chat","prev_group_info","createSystemMessage","auth_request","invite","private_invite","is_accepted","silent","createFromStanza","replaced","conversation","SYNCHRONIZATION_OLD_OMEMO","forwarded","receiveChatMessage","sid","m","context_message","searched_message","pinned_message","participant_message","echo_msg","is_searched","original_message","mentions","blockquotes","markups","mutable_content","locations","link_references","hasOwnProperty","is_trusted","REFERENCE","reference","$reference","begin","parseInt","end","MARKUP","$mention","is_gc","markup","child_ref","MARKUP_TAGS","uri","$geolocation","GEOLOC","loc_attrs","lat","lon","OGP","$ogp","link_reference_attrs","original_text","$file_sharing","FILES","VOICE_MESSAGE","$file","file_attrs","sources","HASH","fromBase64toArrayBuffer","slice","has_encrypted_files","getFileType","x_elem","$user","user_id","user_jid","user_info","role","avatar_url","badge","groupchat_jid","is_sender","participants_version","WEBCHAT","addresses","ADDRESS","address","$address","slice_pretty_body","removeEmoji","only_emoji","MSG_SENT","synced_from_server","missed_history","missed_msg","MSG_DELIVERED","MSG_ARCHIVED","pinned_messages","participant_messages","searched_in_contact_messages","searched_messages","context_messages","msg_contact","all_searched_messages","is_unread","decryptFile","Promise","r","filereader","arrayBuffer","exportedMasterKey","HMACData","AES","decrypt","enc_file","readAsArrayBuffer","getFilename","url_media","lastIndexOf","full_type","end_idx","MSG_DISPLAYED","JingleMessage","contact_full_jid","volume_on","video_in","video_screen","video_live","registerIqHandler","audio_notifiation","playAudio","call_initiator","sound_on_call","sound_on_dialtone","modal_view","JingleMessageView","RTCPeerConnection","iceServers","urls","concat","TURN_SERVERS_LIST","sdpSemantics","$remote_video_el","$remote_audio_el","$local_video","current_timer","onconnectionstatechange","onChangeConnectionState","onChangedMediaType","ontrack","remote_stream","streams","_waiting_timeout","JINGLE_WAITING_TIME","onicecandidate","onIceCandidate","oniceconnectionstatechange","onChangeIceConnectionState","setEnabledAudioTrack","onChangedVideoValue","setEnabledVideoTrack","setEnabledScreenShareVideoTrack","onChangedRemoteVideo","onChangedVolume","iq_handler","onIQ","updateStatusText","updateTimer","startTimer","call_timer","stopAudio","peer_conn","conn_state","connectionState","pretty_name","_timeout_failed","restartIce","ice","candidate","sendCandidate","iceConnectionState","incoming_video","muted","local_stream","getAudioTracks","default_video","getSenders","sender","default","screen","createVideoStream","getVideoTracks","stopTracks","createScreenShareVideoStream","video_state","sendVideoStreamState","getDisplayMedia","media_stream","addTrack","kind","replaceTrack","$iq_video","$jingle_initiate","$jingle_accept","$jingle_info","$jingle_video","$result_iq","offer_sdp","JINGLE_RTP","setRemoteDescription","RTCSessionDescription","sdp","acceptSession","answer_sdp","addIceCandidate","RTCIceCandidate","sdpMLineIndex","sdpMid","startCall","createAudioStream","propose","video_track","initVideoTrack","removeTrack","$propose_msg","media","HINTS","CHAT_MARKERS","accept","$accept_msg","sound_on_connection","$reject_msg","call_attrs","initiator","document","createElement","ctx","p","getImageData","requestAnimationFrame","draw","putImageData","captureStream","initSession","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","setLocalDescription","$iq_offer_sdp","JINGLE","creator","JINGLE_SECURITY_STUB","$iq_candidate","JINGLE_TRANSPORTS_ICE","createAnswer","answer","$iq_answer_sdp","Chat","opened","active","display","displayed_sent","last_displayed_id","last_delivered_id","unread","const_unread","sync_created","hash_id","onContactDestroyed","onChangedContact","messages_unread","item_view","ChatItemView","plyr_players","onChangedTimestamp","cacheChat","isMuted","last_message","outerHTML","cached_chats","putChat","changed","recountUnread","resetUnread","searchMessages","messages_view","SearchedMessagesView","query_text","messagesRequest","sendDataForm","variable","setStanzaId","content","updateMessage","getCallingAvailability","sendReject","msg_to","initIncomingCall","endCall","receiveMessage","from_bare_jid","$marker","$receipt_request","RECEIPTS","$receipt_response","$jingle_msg_propose","$jingle_msg_accept","$jingle_msg_reject","iq_to","JINGLE_MSG_ACCEPT","jingle_start","msg_text","reject_contact_stanza_id","busy_audio","$stanza_id","$contact_stanza_id","marker_tag","is_mam","sendMarker","receiveMarker","receiveCarbonsMarker","sendDeliveryReceipt","receiveDeliveryReceipt","ChatContentView","chat_item","receiveNoTextMessage","group_jid","do_synchronization","BLOCKING","last_blocking_timestamp","current_timestamp","has_blocking","item_jid","blocking_timestamp","getMessageContext","mention","MessageContextView","mention_context","stanza_id_context","add","right_contact_save","$delivery_msg","msg_id","by","tag","$displayed","$received","marked_msg_id","marked_stanza_id","msg_state","MSG_ERROR","delivered_time","setMessagesDelivered","setMessagesDisplayed","enc_chat","undelivered_messages","msg_idx","unread_msg","delivered_origin_id","delivered_stanza_id","onRosterPush","retractMessages","msgs","symmetric","msgs_responses","count","num","iq_retraction","removeMessage","retractMessagesByUser","user_msgs","retractAllMessages","is_group_chat","retract_attrs","iq_response","all_messages","showBlockedRequestMessage","muteChat","muted_seconds","muted_value","conversation_options","mute","getConversationType","SYNCHRONIZATION_OMEMO","SYNCHRONIZATION_REGULAR_CHAT","deleteFromSynchronization","removeFromCachedConversations","CHAT_ITEM","message_counter","updateCounter","updateMutedState","updatePinned","updateArchivedState","updateGroupChats","updateIcon","updateEncrypted","updateChatError","updateActiveStatus","onClosed","updateChatCard","onMessageRemoved","onChangedMessageState","updateIncomingSubscription","onBlocked","updateAcceptedStatus","removeInvite","updateEncryptedColor","svg","new_message","updateLastMessage","updateTextClipping","error_msgs","indicators_count","is_pinned","updateChatPosition","ic_name","getIcon","archived","deletePlayersFromMessage","players","current_plyr_player","is_popup","player_index","stopTime","plyr_player_popup","closePopup","updateEmptyChat","msg_time","is_empty","italics","pretty_short_datetime_recent_chat","updateEncryptedChat","msg_from","msg_files","msg_images","msg_locations","getQuantityString","msg_user_info","my_info","$colored_span","f","is_audio","total_size","first_forwarded_msg","fwd_msg_files","fwd_msg_images","fwd_msg_locations","fwd_msg_txt","charAt","toUpperCase","emojify","emoji_size","hyperlinkify","decode_uri","openByClick","clear_search","openChat","bottom","click_counter","setDefaultPlaceholder","invitation","onChatRemoved","soft","MessagesView","chat_content","wheelPropagation","CHAT_MESSAGE","$search_form","loading_history","history_loaded","first_msg_id","last_msg_id","_scrolltop","wheel_ev","defineMouseWheelEvent","onMouseWheel","backToBottom","onwheel","onmousewheel","keyupSearch","KEY_ESCAPE","head","renderSearchPanel","isScrolledToBottom","onClickMessage","onClickLink","onClickLocationLink","onClickLocation","onHoverLocation","_prev_scrolltop","getPercentScrolled","scrollToBottom","emptyChat","addMessageHTML","last_index","scrolled_from_top","scrolled_from_bottom","getScrollBottom","prependTo","insertAfter","$next_message","nextAll","updateMessageInChat","initPopup","$history_feedback","addMessage","onUpdatePlyr","originalEvent","deltaY","first_history_loaded","last_history_loaded","_scrollbottom","showHistoryFeedback","hideHistoryFeedback","queryid","mam_messages_limit","MAMRequest","rsm","buildMessageHtml","findLastIndex","player_item","message_unique_id","message_id","slideToggle","ContactSearchedMessagesView","chat_content_contact","timer","hideSearch","clearSearch","loading_timestamp","loaded_messages","message_count","showMessageAuthor","ParticipantMessagesView","participant","member_jid","member_id","member_nickname","onScrollY","SubscriptionButtonsView","subscription_buttons","subscription","in_request","in_roster","out_request","hideElement","declineSubscription","declineSubscribe","allowSubscription","acceptRequest","addContact","pushInRoster","sendAndAskSubscription","askRequest","blockRequest","current_day_indicator","_pending_avatars","SavedChatHeadView","ChatHeadView","ChatBottomView","$pinned_message","updateContentColorScheme","onMessage","onChangedReadState","onChangedActiveStatus","loadLastHistory","requestMissedMessages","onChangedMessageTimestamp","onTrustedChanged","updateBlockedState","onSubscriptionChange","updateGroupChat","updateMyInfo","cancelSearch","updateContactStatus","updateWaveforms","updatePinnedMessage","getPeer","fingerprints","updateMyName","updateMyStatus","updateMyAvatar","trusted","_loading_history","loadPreviousHistory","seconds","new_status","pretty_last_seen","drawBuffer","renderPinnedMessage","onChangedVisibility","readMessages","sendChatState","sendPresent","sendNotPresent","showChatNotification","blocked","unread_messages","showDayIndicator","indicator_idx","opacity_value","$chatday_indicator","$messages","indicator","offsetTop","fast","is_saved","is_groupchat","ARCHIVE","opt_var","RSM","toXML","onStartedMAMRequest","connected_deferred","callb","onCompletedMAMRequest","$fin","errb","Boolean","pending_deferred","connected_pending_deferred","_pending_time","_interval","getMessageArchive","previous_history","_load_history_timeout","getMyInfo","getLastSeen","last_history","last_msg","load_history","last_archive_id","mam_messages_limit_start","is_error","_load_history_feedback_timeout","showPinnedMessage","unpinMessage","pinned_msg_modal","ExpandedMessagePanel","imageOnload","$image_container","$copy_link_icon","videoOnload","initPlyrEmbedPlayer","locationOnload","$copy_location_div","$chat_state","CHATSTATES","$subtype","showChatState","mime_type","_chatstate_show_timeout","_current_composing_msg","pretty_file_type_with_article","CHATSTATE_TIMEOUT_PAUSED_AUDIO","CHATSTATE_TIMEOUT_PAUSED","pretty_short_datetime","updateMentions","mention_target","match","me","is_scrolled_to_bottom","participants","startGalleryUploadFile","startUploadFile","notifyMessage","archiveChat","attentionMessage","GroupchatInvitationView","_pending_my_info","decryptImages","force","fwd_msg","fwd_images","fwd_unique_id","$one_image","$collage_image","initMagnificPopup","initZoomGallery","getImagesInformation","servers","server","URL","hostname","Set","self","delegate","closeBtnInside","gallery","opener","$new_message","render_data_form","short_datetime","datetime","new_title","startOf","isSame","$message_in_chat","content_view","removeMessageFromDOM","next","prev","manageSelectedMessages","_clearing_history","clearHistory","dialog_message","fontcolor","other","player","createImageGrid","template_for_images","tpl_name","hidden_images","load_media","is_video","is_image","is_location","is_file","avatar_id","from_id","audio_player_list","xmlescape","verbose_state","short_time","pretty_time","classes","markup_body","markupBodyMessage","matching_markup","RegExp","exec","substring","saved_main","join","searched","file_upload","main","$img_html","createImage","img_content","createImageContainer","video_content","createVideoContainer","video_el","createVideo","template_for_file_content","copied_attrs","mdi_icon_class","file_type_icon","mdi_icon","audio_file","audio_player","author","contact_avatar","a","b","file_","upload_id","createObjectURL","Blob","loading_circle","maxHeight","maxWidth","main_panel","imgHeight","imgWidth","file_loading","template_for_location_content","location_attrs","random","toString","mapping_service","template_for_link_reference_content","link_references_attrs","youtube_url_regexp","vimeo_url_regexp","link","getDomainFromUrl","site_name","link_reference_chat","$img_html_forward","is_image_forward","images_forward","is_forward_video","is_forward_file","is_forward_location","fwd_markup_body","$f_message","pretty_short_month_date","is_fwd_voice_message","fwd_messages_count","fwd_messages_link","img_content_forward","selector","embed_video","tag_name","getDateIndicator","day_date","msg_players","existing_player","video_src","hideMessageAuthor","$avatar","chat_settings","getHashAvatar","getB64Avatar","pending_avatar","data_avatar","updateCachedAvatars","hideFwdMessageAuthor","showFwdMessageAuthor","$fwd_message","msg_elem","$prev_msg","prevAll","fwd_msg_item","is_system","is_same_sender","is_same_date","$fwd_msg_item","$prev_fwd_message","notifications","notifications_private","notifications_group","notification_text","message_preview_group","message_preview_private","popupNotification","onclick","group_sound","sound","sound_on_auth_request","sound_on_group_message","notifications_volume","private_sound","sound_on_private_message","sound_on_attention","sendMessage","legacy_body","legacy_fwd_msg","escape","unescape","createTextMessage","idx_begin","fwd","idx_end","stamp","mention_attrs","blockquote","all_files","start_idx","created","u","ArrayBuffertoBase64","link_reference","property","chat_hash_id","STANZA_MAX_SIZE","SCE","CLIENT","repeat","floor","encrypt","msg_sending_timestamp","msgCallback","was_reconnecting","ping","initJingleMessage","JINGLE_MSG_PROPOSE","saveForwardedMessage","forwarded_messages","onSubmit","fwd_messages","markup_references","attached_files","submitted_here","_dfd_info","new_fwd_messages","upload_service","updateScreenAllChats","addFileMessage","is_voice","new_files","file_counter","http_upload_service","deferred_all","addFileSnippets","compressImage","encrypted_file","encryptFile","keydata","new_file","payload","files_count","$slot","get_url","put_url","onFileNotUploaded","xhr","XMLHttpRequest","abort","onabort","upload","onprogress","percentage","loaded","onerror","onFileUploaded","responseText","cancelled_files_count","xhr_requests","msg_files_count","is_errored","arrayIndex","one","is_uploading","setEditedMessageAttachments","setRedactedUploadMessage","is_cancelled","created_at","setRequestHeader","response_text","statusText","files_","file_new_format","isVideoType","imgContent","error_type","unbind","deleteFilesFromMessages","_chatstate_timeout","_chatstate_send_timeout","chat_state","EXTENDED_CHATSTATES","typing_notifications","$next_msg","$old_prev_msg","is_synced","onTouchMessage","which","parents","getSelection","clearSelection","files_links","copyTextToClipboard","location_links","object","showParticipantProperties","participant_id","participantsRequest","showDetailsRight","details_view_right","participant_properties_panel","getBlockedParticipants","present","Participant","download","$plyr","showNewVideo","PlyrPlayerPopupView","no_select_message","expanded_fwd_message","quill","caret_position","participant_attrs","position","insertMention","showDetails","blur","decodeURI","img_information","inverted_buttons","img_details","images_details","$imgs","processClick","$prev_selected","shiftctrl_pressed","shift_pressed","$all_msgs","is_selected","nextUntil","location_name","popup_coordinates","ChatLocationView","json","display_name","retrySendMessage","removeFileErrorMessage","group_chats","pinned_message_panel","onClickPinnedMessage","onClickExpandedMessageLocation","expandFwdMessage","ChatsBase","Chats","registerQuillEmbeddedsTags","Inline","Quill","import","Mention","static","paramValue","super","is_me","classList","blotName","optimize","QuillEmoji","style","domNode","OpenedChats","item1","item2","t1","t2","ClosedChats","AccountChats","mam_requests","deferred_mam_requests","openMention","getSavedChat","identifier","registerMessageHandler","_msg_handler","runMAMRequests","mam_requests_limit","shift","parsePubSubNode","is_member_id","receivePubsubMessage","photo_id","photo_url","member_node","new_avatar","b64_avatar","groupchat_settings","updateParticipant","PUBSUB_AVATAR","updateCachedInfo","avatar_attrs","$mam","receiveHeadlineMessage","receiveErrorMessage","$stanza_received","$echo_msg","origin_msg_id","pending_message","$token_revoke","token_idx","participant_version","call_attention","attention","msg_item","active_right_screen","participant_msg_item","is_encrypted","$retracted_msg","retracted_msg_id","retract_version","cacheRetractVersion","retracted_user_id","receiveStanzaId","GROUP_CHAT_INVITE_HTTP","GROUP_CHAT_INVITE","$forwarded","to_jid","to_bare_jid","to_resource","stanza_ids","$carbons","carbon_direction","forwarded_msgs","FORWARD","forwarded_msg","$forwarded_msg","$forwarded_message","$forwarded_delay","warn","contact_jid","not_encrypted","details_view","MSG_BLOCKED","AddGroupChatView","SearchView","add_group_chat","ACCOUNT_ITEM","setDefaultSettings","public","incognito","showPlaceholder","$global_wrap","default_global_value","$membership_wrap","default_membership_value","setCustomDomain","add_chat_account_item","changePropertyValue","updateGroupJid","slug","lower","textarea_is_empty","fixJid","createGroupChat","chat_jid","pres","iq_set_blocking","addGroupChat","xmpp_server","input_value","search","group_chats_support","DISCO_INFO","ChatsView","SearchPanelView","main_container","chats_panel","active_chat","onChatAdded","onChangedReadStatus","updateLeftIndicator","readAllMessages","onUpdatedScreen","onWindowResized","updateSearch","active_toolbar","hideChatsFeedback","_load_chats_timeout","previous_chat","replaceChatItem","pinned_chats","$chat_item","onEnterPressed","selection","scrolled_top","right_contact_panel_saveable","right_saved","showGroupChats","group_chats_pinned","showChats","private_chats","private_chats_pinned","account_chats","account_chats_pinned","showArchiveChats","all_chats","all_chats_pinned","MessageItemView","message_item","cid","ForwardPanelView","forward_panel","saved_chat","$cloned_item","promise","onClickItem","is_match","has_matches_chats","has_matches_contacts","chat_id","contact_list_item","contacts_view","onEmptyQuery","forwardTo","setForwardedMessages","InvitationPanelView","invitation_panel_view","registerClickEvents","selected_contacts","clearPanel","group_node","list_item","toggleContacts","selectAllGroup","addSelectedUsers","selected_users_count","_dfd_invitations","invitations_count","toast_text","sendInvite","addUser","toggleClass","itemIdx","sendInviteMessage","onInviteError","err_text","jid_to","hide_clone","is_visible","group_roster","selected_counter","saved_chat_head","_update_oneliner_interval","updateOneLiner","closeChat","updatePlyrControls","updatePlyrTitle","updatePlyrTime","updateJingleButton","tooltip","rand_idx","getOneLiners","one_liner","deleteChat","rewrite_support","pinSavedChat","pinned","pinned_value","visible_view","playPausePlyr","playPause","togglePlay","stopPlyr","popupPlyr","minimizePopup","nextPlyr","next_item","previousPlyr","prev_item","poster","playing","$title_elem","config","isOverflownWidth","voip_status","openJingleMessage","collapse","chat_head","CHAT_HEAD","resources_view","ContactResourcesRightView","updateNotifications","updateArchived","pinChat","onContactChanged","onChangedBlocked","updateGroupChatHead","updateMenu","updateStatusMsg","showContactDetails","showContactDetailsRight","showContactResources","showMembersDetails","mute_type","unmuteChat","callAttention","updateArchiveChatsList","no_iq","is_archived_status","sendJingleMessage","SetGroupchatStatusView","getActiveScreen","active_screen","showArchive","inviteUsers","invite_panel","opened_chats","leaveGroupChat","removeFromRoster","deleteContact","deleteWithDialog","blockWithDialog","unblockContact","unblockWithDialog","exportHistory","showFingerprints","startEncryptedChat","openEncryptedChat","openRegularChat","SendMediaView","send_media","addMedia","filename","resolved_file","metadata","pop","location_popup","sendLocation","closeLocationName","initializeScrollbar","destroyScrollbar","chat_bottom","CHAT_BOTTOM","mention_avatar_size","MENTION_ITEM","rich_textarea_wrap","bindings","enter","range","hotkeys","insertText","arrow_up","active_item","$prev_elem","arrow_down","$next_elem","clientHeight","arrow_left","arrow_right","modules","keyboard","toolbar","formats","scrollingContainer","firstChild","edit_message","stopped_loading_link_reference","link_reference_exempted","currently_loaded_link_references","loading_link_reference","onChangedText","onBlockedUpdate","updateInfoInBottom","replyMessages","forwardMessages","copyMessages","deleteMessages","showEditPanel","pinMessage","resetSelectedMessages","$rich_textarea","rich_textarea","$rich_textarea_wrap","$placeholder","oncut","onCut","_timeout","$insert_emoticon","$emoji_panel_wrap","$emoji_panel","onloaded_sprites","all_sprites","all","emoji_list","$emoji_list_wrap","EMOJI_LIST_NAME","sprite","window_onclick","removeEventListener","mousedown","button","$target_emoji","typeEmoticon","renderLastEmoticons","http_upload","messages_arr","focusOnInput","chat_body","updateHeight","setButtonsWidth","widths","clientWidth","checkOwnFingerprints","is_scrolled_bottom","encryption_warning","checkContactFingerprints","is_contact_trusted","content_encryption_warning","is_blocked","onClickBottom","setOneLiner","disable","enable","moveCursorToEnd","createRange","sel","root","selectNodeContents","removeAllRanges","addRange","keyDown","KEY_BACKSPACE","KEY_DELETE","send_on_enter","shiftKey","ctrlKey","getTextFromRichTextarea","displayMicrophone","displaySend","updateMarkupPanel","$ic_markup","updatePlaceholder","changeEncryption","getParticipantsList","current_height","bottom_height","scrolled_to_bottom","_timeout_textchange","updateOpenGraphReference","updateMentionsList","mention_text","searchByParticipants","mention_item","bold","mention_all","onMentionButtonClick","getLength","setSelection","members_num","inputMention","$participant_item","lastRange","to_caret_text","replaceEmoji","mentions_at","matchAll","mentions_plus","at_position","plus_position","mention_position","deleteText","insertEmbed","pasteHTML","showAccountSettings","my_rights","edit_msg","setEditedMessage","flushRichTextarea","KEY_SPACE","mention_at_regexp","mention_plus_regexp","getLeaf","unsetForwardedMessages","removeLinkReferenceByUrl","removeFileSnippetById","updateRichTextarea","clipboard_data","image_from_clipboard","getAsFile","arr_text","execCommand","difference","request_count","link_reference_request_timestamp","request_timestamp","removeAttachments","removeAllFileSnippets","removeAllLinkReferences","stopLoadingLinkReference","removeLinkReference","uid","attached_file","typeicon","filetype","pretty_file_type","removeFileSnippet","is_upload","showLocationPopup","showMediaPopup","stopWritingVoiceMessage","$bottom_panel","writeVoiceMessage","initAudio","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","constraints","channelCount","chunks","$mic","onSuccess","start_time","end_time","mediaRecorder","MediaRecorder","mic_hover","onstart","CHATSTATE_INTERVAL_COMPOSING_AUDIO","$timer_elem","$status_msg","$voice_visualizer","VOICE_MSG_TIME","flag","timerIdDot","onstop","audio_name","audio_type","ondataavailable","onError","caret_idx","savedRange","getFormat","formatText","cached_last_emoji","getLastEmoji","$last_emoticons","getByIndex","updateLastEmoji","emoji_item","innerText","content_concat","getContents","content_attrs","insert","mention_idx","ins","quote_start_idx","quote_end_idx","marker","QUOTE_MARKER","markup_ref","start_length","trimStart","delta","markup_reference","trimEnd","editMessage","placeCaretAtEnd","emoji_node","setText","msg_author","image_preview","$img_html_preview","fwd_files","fwd_locations","createPreviewImage","onShowMarkupPanel","$clicked_icon","is_panel_opened","$selected_msgs","$input_panel","$message_actions","my_msg","$msgs","dataset","uniqueid","pushMessagesToClipboard","text_markups","original_body","forwarded_body","mutable_refs","groupchat_ref","forward_ref","$build","gc_length","xmlunescape","decrypted_msg","cached_messages","putMessage","my_msgs","symmetric_deletion","isArray","copied_messages","fwd_msg_indicator","text_message","current_date","msg_sender","ref","is_colored","ChatHeadContainer","ChatBodyContainer","current_bottom","NotificationsPlaceholder","requestNotifications","Notification","requestPermission","permission","_cache","notifications_placeholder","placeholders_wrap","ChatBottomContainer","ChatPlaceholderView","chat_placeholder","ChatSettings","last_emoji","cached_avatars","group_chat_members_lists","last_emoji_icons","updateMutedList","muted_list","archived_list","updateGroupChatsList","group_chat_list","avatar_list","member","avatar_b64","getAvatarInfoById","CachedChats","ModelWithDataBase","database","put","response_value","getAllChats","get_all","removeChat","clear_database","objStoreName","primKey","deleteTimedHandler","_get_msg_handler","addTimedHandler","handlers","h","syncFromServer","omemo_enable_placeholder","OMEMOEnablePlaceholder","onselectstart","metaKey","closed_chats","left_panel","right_panel","add_group_chat_view","STORAGE_NAME","STORAGE_VERSION","FAVICON_DEFAULT","FAVICON_MESSAGE","BACKGROUND_IMAGE","WIDTH_MEDIUM","WIDTH_NARROW","WIDTH_TINY","LOG_LEVEL_NONE","LOG_LEVEL_ERROR","LOG_LEVEL_WARN","LOG_LEVEL_INFO","LOG_LEVEL_DEBUG","LOG_LEVEL","KEY_TAB","KEY_FORWARD_SLASH","KEY_AT","PASSWORD_DOT","String","fromCharCode","PREKEYS_COUNT","MIN_PREKEYS_COUNT","AES_KEY_LENGTH","AES_TAG_LENGTH","AES_EXTRACTABLE","STATUS_WEIGHTS","online","away","xa","dnd","offline","unavailable","PRESENT_INTERVAL","CHATSTATE_TIMEOUT_STOPPED","SYNCHRONIZATION_RSM_MAX","credential","JINGLE_MSG_REJECT","MSG_SAVED","RSM_ATTRIBUTES","MAM_ATTRIBUTES","GENERAL_GROUP_ID","NON_ROSTER_GROUP_ID","EMAIL_FOR_JOIN_TRANSLATION","ACCOUNT_VCARD_EDIT","ROSTER_RIGHT_ACCOUNT_ITEM","ROSTER_LEFT_ACCOUNT_ITEM","PARTICIPANT_DETAILS_ITEM","CONTACT_RIGHT_ITEM","GROUPCHAT_MEMBER_ITEM","CONTACT_LEFT_ITEM","CONTACT_BLOCKED_ITEM","CONTACT_DETAILS","GROUP_SETTINGS","XABBER_VOICE_CALL_VIEW","OMEMO_ENABLE_SETTING","SOUNDS","beep_up","tiny_noize","retro_game","pixel_beep","beep_positive","good_chime","cellular_click","bleep","mono_u","plop","ether","computer_chime","beep_a","connecting","busy","no","from_server","to_server","delete","off_local","off_remote","yes","BLANK_VIDEO","OGG","MP4","WEBM","MIME_TYPES","pdf","table","archive","presentation","languages","languages_another_locales","PERSONAL_AREA_URL","USE_SOCIAL_AUTH","REGISTER_XMPP_ACCOUNT","REGISTER_XMPP_ACCOUNT_URL","CHECK_VERSION","GCM_SENDER_ID","GCM_API_KEY","MESSAGE_ARCHIVE_DB_NAME","pow","BLUR_VALUE","VIGNETTING_VALUE","TRANSPARENCY_VALUE","MAIN_COLOR","SHORT_CLIENT_NAME","SHORT_CLIENT_DESCRIPTION","CLIENT_LOGO","TOOLBAR_LOGO","SCREEN_ABOUT","CLIENT_URL","DEVELOPER_URL","CLIENT_GITHUB_URL","PROJECT_CROWDIN_URL","CLIENT_LICENSE_GITHUB_URL","JINGLE_MSG_STATE","Contact","subscription_request_in","subscription_request_out","groups","onChangedGroupchat","roster_name","isBlocked","b64_sha1","ContactResources","status_text","online_members_num","getSubscriptionStatuses","subscription_preapproved","status_description","status_out_color","status_in_color","status_out_text","status_in_text","status_out","status_in","cached_roster","getFromRoster","cached_info","group_info","roster_info","putInRoster","updateCounters","Participants","LAST","last_seen","getLastSeenStatus","properties","cached_avatar","message_time","ROSTER","group","declineRequest","SUBSCRIPTION_PREAPPROVAL","is_group","header","optional_buttons","localpart","delete_history","buttons","optional_button","unblock","_sending_present_interval","handlePresence","$group_chat_info","GroupChatDetailsView","group_chat_info","parseGroupInfo","$status_message","_reset_status_timeout","$group_chat","$model","status_msg","$index","$description","prev_pinned_message","private_chat","$online_members_num","pinned_msg_elem","getMessageByStanzaId","parsePinnedMessage","getAllRights","iq_get_rights","iq_all_rights","all_permissions","all_restrictions","all_rights","permissions","restrictions","filter_image","filter_video","filter_voice","filter_files","getFilesFromStanza","references","fwd_message","fwd_msg_author","is_scrolled","pinned_msg","fwd_author","pinned_msg_html","height_pinned_msg","resetStatus","participants_list","ContactDetailsView","scrolled_top_chats_view","scrolled_top_chat","GroupChatDetailsViewRight","ContactDetailsViewRight","details_view_right_encrypted","contact_searched_messages_view","showSearchMessages","set_status","getStatuses","updateIcons","iq_get_properties","renderStatuses","$status_item","status_item","iq_set_status","ContactItemView","interval_last","selectView","lastSeenUpdated","ContactItemRightView","contact_right_item","showJid","hideJid","clickOnItem","ContactItemLeftView","contact_left_item","updateDisplayStatus","onResourceUpdated","ContactResourcesView","ContactVCardView","ContactRightVCardView","VCardRightView","showVCard","right_contact_panel","hideVCard","contact_details","name_field","ContactNameWidget","edit_groups_view","ContactEditGroupsView","updateJingleButtons","refresh","updateSubscriptions","is_server","showQRCode","qrcode","VanillaQR","noBorder","escape_button","domElement","bottom_text","cancel_button_text","$label_outcoming","$label_incoming","onChangedSubscription","voiceCall","initCall","changeNotifications","add_contact_view","requestAuthorization","contact_details_right","contact_edit_view","ContactEditView","updateChilds","updateIndicator","keydownHandler","hideEdit","instance","isOpen","scrollToTopSmooth","animate","bottom_block_scroll","getBoundingClientRect","top","showEdit","changeList","list_name","scrollLeft","left","addList","_render","constructor_func","MediaImagesView","MediaVideosView","MediaFilesView","MediaVoiceView","group_chat_details","member_avatar_size","ParticipantsView","group_chat_properties","GroupChatPropertiesView","group_chat_status","GroupChatStatusView","group_chat_properties_edit","GroupChatPropertiesEditView","default_restrictions_edit","DefaultRestrictionsView","is_owner","change_group","editProperties","editDefaultRestrictions","inviteUser","BlockedView","InvitationsView","getInvitations","deleteGroup","group_chat_details_right","ParticipantsViewRight","GroupEditView","GroupChatPropertiesViewRight","GroupChatStatusViewRight","default_restrictions_edit_right","DefaultRestrictionsRightView","hideRestrictions","showRestrictions","edit_view","group_status","group_status_right","onClickIcon","$target_info","$target_value","copied_text","value_text","label_name","group_chat_properties_right","hideMoreDescription","all_fixed","saveChanges","has_changes","checked_inp","text_inp","textarea","new_value","field_idx","$result","updateSaveButton","$error","updateInvitations","user","$item_view","invited_member_item","showInviteButton","revokeInvitation","$member_item","updateRemoveParticipantButton","revokeInvitationByElement","MediaBaseView","temporary_items","all_messages_loaded","messagesFileRequest","updateMedia","last_rsm_message","loading_messages","loadMoreFiles","updateForParticipant","delegateEvents","filter_type","filterEncryptedFiles","encryptedFilesHandler","updateEncryptedMedia","is_loaded","reverse","true_voice","media_item","media_items_empty","messages_count","msg_items","fail","saveScrollBarOffset","updateBlockedParticipants","showBlockButton","unblockUser","unblockUserByElement","blockId","onParticipantsUpdated","updateParticipantsList","ParticipantPropertiesView","updateParticipants","resetParticipantsList","resetParticipants","setParticipantsListVersion","updateVersion","renderParticipants","renderMemberItem","blockParticipant","kickParticipant","kick","pretty_present","isValid","group_member_item","updateMemberAvatar","participant_item","keyUpSearch","searchParticipant","$this","participants_right_panel","onParticipantsChanged","ParticipantPropertiesViewRight","kickParticipantDialog","ask_extended","optional_button_text","group_member_item_right","showParticipantPropertiesEdit","showNamePanel","changeBackButton","participant_rights","onBadgeUpdated","$member_info_view","is_myself","is_blocked_contact","incognito_chat","private_participant_details","participant_details_item","actual_rights","setActualRights","new_nickname","updateNickname","updateRightsView","getMessages","changeTimerValue","$input_item","updateBadge","$member_item_nickname","editNickname","editBadge","edit_badge_panel","EditBadgeView","checkKeydown","activeElement","checkKeyup","retractUserMessages","restriction_expire","restriction_item","right_expire_variants","right_name","expire_options","getPrivateChat","participant_jid","participant_in_roster","private_chat_jid","changeRights","$right_item","saveRights","$btn","$participant_avatar","nickname_value","changed_avatar","rights_changed","iq_changes","right_item","right_expire","iq_rights_changes","participant_details_right","private_participant_details_item_right","participant_details_item_right","participant_name_field","ParticipantNameRightWidget","participant_badge_field","ParticipantBadgeRightWidget","hidePanel","resetPanel","changeName","changeBadge","clickAvatarInput","setVisibility","$current_restriction","new_badge","badge_edit_view","saveNewBadge","pasteHtmlAtCaret","checkKey","default_restrictions","actual_default_restrictions","showDefaultRestrictions","restriction_name","restriction_expires","restriction","changeRestriction","keyUpInput","iq_change_default_rights","has_new_default_restrictions","changeExpiresTime","expire_time_item","new_expire_time","$restriction_item","default_restrictions_right","getBase64Avatar","getParticipantsListVersion","getCachedParticipants","mergeParticipant","getRights","rights","pretty_rights","issued_time","expires_time","$response","removeParticipantFromList","GroupChatSettings","participants_lists","all_participants_lists","participants_list_idx","participant_info","chat_participants","participant_idx","setParticipantsList","updated_participants_list","blockInvitation","iq_get_blocking","iq_unblocking","iq_blocking_items","model_field","getDefaultName","showInput","$input","ContactNameRightWidget","group_name_input_widget","$value","GroupNameRightWidget","changeValue","input_mode","force_reset","GroupDescriptionRightWidget","description_input_widget","changeDescription","onUpdate","all_groups","notSpecial","groups_checkbox_list","groups_list","groups_new_group","on_add","_update_template","removeGroup","group_name","removeLastGroup","editGroup","_hide_timeout","checkNewGroup","keyupAddNewGroup","addNewGroup","keydownAddNewGroup","focusinAddNewGroup","focusoutAddNewGroup","edit_contact","updateStatuses","statuses","status_out_class","status_in_class","requestSubscription","cancelSubscriptionRequest","handleSubscriptionRequest","cancelSubscriptionOut","cancelSubscriptionIn","edit_group","group_name_field","group_description_field","restrictions_count","showMembershipProperty","showIndexProperty","showDescriptionProperty","hideProperty","invitations","actionSelectedParticipants","deselectParticipants","selectParticipant","showPanel","original_data_form_values","data_form_index","findIndex","changeMembership","membership_text","membership","changeIndex","index_text","ContactsBase","GroupContacts","contact1","contact2","s1","s2","sw1","sw2","sw1_offline","name1","name2","Group","groups_settings","GroupSettingsView","onContactRemoved","_roster_settings","onChangedRosterSettings","isSpecial","isNumber","renameGroup","new_name","removeContact","GroupView","updateGroupIcon","updateMembersCounter","onContactAdded","updateContactItem","onChangedOfflineSetting","onChangedSortingSetting","show_offline","roster_settings","group_settings","is_default_show_offline","is_offline","showSettingsIcon","showGroupSettings","GroupRightView","group_right","toggle","GroupLeftView","group_left","setOffline","validateName","applySettings","name_error","Groups","onGroupAdded","acc_view","AccountGroupView","Contacts","removeAllContacts","BlockList","registerHandler","onBlockingIQ","getFromServer","Roster","roster_version","addContactToGroup","known_changed","in_roster_changed","groups_changed","groups_to_remove","getGroup","general_group_name","non_roster_group_name","onRosterIQ","synchronization_with_stamp","is_first_sync","request_attrs","onSyncIQ","last_version_sync","syncCachedConversations","conv_list","request_with_stamp","syncConversation","parseXML","saved","$sync_metadata","$group_metadata","is_incognito","is_private","current_call","$unread_messages","chat_timestamp","trunc","last_read_msg","last_delivered_msg","last_displayed_msg","unread_msgs_count","is_invite","msg_retraction_version","putInCachedConversations","account_conversation_type","$jingle_message","is_last_sync","sync_timestamp","sync_rsm_after","last_chat_msg_id","encrypted_retract_version","conversations_loaded","last_sync_timestamp","is_cached","getRoster","getAllFromCachedConversations","synced_conversations","toArray","request_ver","getAllFromRoster","roster_items","ver","new_roster_version","onRosterItem","known","AccountRosterView","$info","onGroupRenamed","onGroupRemoved","updateGroupPosition","group_view","old_name","AccountRosterRightView","account_roster_right","updateGlobalCounter","AccountRosterLeftView","account_roster_left","hashes","searchAll","hideTabs","selectUnblock","updateUnblockButton","unblockContactByJid","tab_name","hideEmptyContainers","tmp","contact_blocked_item","$domain_wrap","$desc","blocked_list","reg","blocked_contacts_desc","blocked_domains_desc","RosterView","updateOneRosterView","updateRosterViews","removeRosterView","account_roster_view","RosterRightView","roster_right","updateTheme","updateBlur","updateTransparency","updateLayout","side_panel","transparency","expand","collaps","roster_state_changed","reduce","RosterLeftView","roster_left","getContactForItem","account_jid","roster_view","selectItem","arrow","clearSearchSelection","$selection","selection_id","RosterSettingsView","setOfflineSetting","setSortingSetting","$parent_el","ContactPlaceholderView","contact_placeholder","AddContactView","add_contact","group_data","updateGroups","renderGroupsForAccount","stepForward","selected","groups_checkbox_list_contact","focusoutInputField","checkJid","GroupSettings","custom_notifications","message_preview","GroupsSettings","clearStorage","RosterSettings","CachedRoster","getFromCachedConversations","CachedServerFeatures","putInCachedFeatures","getFromCachedFeatures","getAllFromCachedFeatures","removeFromCachedFeatures","cached_server_features","roster_item","roster_settings_view","contact_container","details_container","xabber_i18next","xabber_i18next_sprintf","bc","BroadcastChannel","onmessage","disabled_client","postMessage","Xabber","version_number","actual_version_number","client_id","client_name","fetchURLParams","cleanUpStorage","initDefaultLanguage","detectMediaDevices","ondevicechange","Settings","host","pathname","cacheFavicons","extendFunction","check_config","throwNewVersion","_version_interval","readActualVersion","client_translation_progress","loadTranslations","default_translation","translation","setLocale","translations","default_lang","_translations","use","init","lng","debug","pluralSeparator","changeLanguage","locale","getFixedT","exists","postProcess","sprintf","services","pluralResolver","getRule","_count","compatibilityJSON","suffix","getSuffix","subtract","calendar","rawFile","onreadystatechange","readyState","version_description","indexedDB","databases","db","deleteDatabase","full_storage_name","localStorage","removeItem","getMediaDevices","media_devices","enumerateDevices","devices","reload","background","appearance","vignetting","main_color","avatar_shape","ping_interval","reconnect_interval","configure","pick","log_level","PRIVACY_LOAD_MEDIA","PRIVACY_TYPING_NOTIFICATIONS","PRIVACY_MAPPING_SERVICE","isObject","isMobile","any","ios_msg","android_msg","any_mobile_msg","iOS","Android","useLocalStorage","ignore_localstorage_warning","warning","ignore","granted","splitted_url","splitted_url_anchor","param","history","pushState","STORAGE_NAME_ENDING","ignore_notifications_warning","extendWith","module","factory","sha256","i18next","i18next_sprintf","plyr","libsignal","ol","Plyr","ClientFeature","FeatureView","supports","ClientFeatures","addIdentity","addFeature","VCARD","PING","namespace","verbose_name","feature","ServerFeature","ServerFeatures","onFeatureAdded","onInfo","onItems","addItem","form_type_val","URLDISCO","media_gallery_url","MEDIAGALLERY","_var","client_feature","client_features","_last_stanza_handler","_pong_handler","addPingHandler","pong","_ping_handler","downtime","last_fast_stanza_timestamp","_last_fast_stanza_handler","_fast_pong_handler","_fast_ping_handler","_onDiscoInfo","_onDiscoItems","DISCO_ITEMS","deps","MentionItemView","onMessageUpdated","MentionsBase","AccountMentions","onMentionAdded","Mentions","MentionsView","mentions_panel","active_mention","keyup_timeout","onMentionRemoved","updateMentionPosition","replaceMentionItem","$prev_el","$next_el","readAllMentions","unread_mentions","contact_archive_id","previous_mention","updateContactName","contact_name","default_avatar","MentionsPlaceholderView","mentions_placeholder","mentions_view","base","KeyHelper","SignalProtocolAddress","SessionBuilder","SessionCipher","Peer","store","updateDevices","d","removeSession","getDevice","getDevicesNode","_pending_devices","_dfd_devices","cb","parseUserDevices","enc_promises","aes","deviceId","ciphertext","preKey","Device","Peers","is_own_devices","renderOwnDevices","renderDevices","updateFingerprints","updateOwnFingerprint","getMyDevices","editLabel","saveLabel","onblur","onkeydown","publishDevice","devices_count","$container","f_count","generateFingerprint","fing","old_fingerprint","addRow","getBundleInfo","getBundle","pk","spk","getIdentityKeyPair","pubKey","byteLength","padStart","trustDevice","is_session_initiated","ignoreDevice","trust","delete_button","edit_setting","fingerprint_item","deleteDevice","Bundle","getIdentity","generateIdentity","getPreKeys","publishBundle","generateIdentityKeyPair","generateRegistrationId","identityKey","registrationId","cacheIdentity","privKey","generatePreKeys","preKeysPromises","generatePreKey","generateSignedPreKey","getSignedPreKey","keyPair","signature","keyId","prekeys","getAll","prekey","priv_pk","key_pair","storePreKey","getUsedPreKeys","storeSignedPreKey","own_used_prekeys","identity","signedPreKey","cacheSignedPreKey","converted_spk","Prekeys","closeSession","sendOptOut","_pending_bundle","_dfd_bundle","$bundle","$spk","$pk","getRandomPreKey","cipherText","plainText","sessionCipher","decryptPreKeyWhisperMessage","hasSession","getCachedSession","storeSession","decryptWhisperMessage","getPreKey","used_prekeys","getSession","getDeviceId","cached_pk","isTrusted","processPreKey","publicKey","preKeyBundle","sessions","onDeviceIdUpdated","onOmemoDestroyed","peers","generateDeviceId","SignalProtocolStore","onOwnDevicesUpdated","removePreKey","cacheSession","storeSessions","deleteOwnDevice","DecryptedMessages","addDevice","_pending_own_devices","_dfd_own_devices","contact_fingerprints","getOS","getBrowser","dev_id","rand","peer","plaintext","serialize","encryptedMessage","encryptedElement","myKeys","rid","kex","btoa","hasChanges","o1","o2","obj1","obj2","has_devices","device_ik","cached_msg","getMessage","getTrusted","decryption_retry","own_trusted","contact_trusted","parseEncrypted","$encrypted","$payload","$header","keyElement","$m","encryptedData","ownPreKey","exportedKey","toBase64","publish","pks","conn_omemo","configNode","spks","removed_pk","missing_keys","last_id","rec","createBundleNode","contact_messages","Direction","SENDING","RECEIVING","getLocalRegistrationId","Error","defaultValue","isTrustedIdentity","direction","ArrayBuffer","util","loadIdentityKey","saveIdentity","fromString","existing","getName","loadPreKey","loadSignedPreKey","removeSignedPreKey","loadSession","record","getAllSessions","removeAllSessions","omemo_enable","onOmemoChange","enableOmemo","closeOmemoPlaceholder","searching","DiscoveringView","searching_wide","colorUpdated","toggleProperties","endDiscovering","isPropertiesVisible","discover","searchExistingGroupChats","setColor","getGroupchatService","onDiscoveringError","getGroupchatFeatures","getServerInfo","getChatsFromSever","$chat_item_html","existing_groupchat_item","searching_account_item","getChatProperties","request_iq","$iq_response","chat_properties","more_info_view","MoreInfoView","existing_groupchat_details_view","joinChat","Searching","getSearchingFields","iq_get","INDEX","parseSearchingFields","iq_result","$fields","XDATA","supported_fields","LocalSearchingView","GlobalSearchingView","indexed_chats","iq_search","anywhere","onSearched","$chat","$property","property_name","property_value","discovering","LogLevel","WARN","addConnectionPlugin","addNamespace","addNode","registered","connect_cb","_connect_cb","req","raw","_check_user","_register_cb_check_user","processed_features","_connect_cb_data","_register_cb","Connection","rawInput","auth_old","authenticate","matched","authzid","authcid","wait","hold","route","registerSASLMechanisms","SASLAnonymous","SASLExternal","SASLMD5","SASLPlain","SASLSHA1","_callback","bodyWrap","_proto","_reqToData","nodeName","strip","mechanisms","_no_auth_received","_get_register_cb","_submit_cb","SASLHOTP","SASLMechanism","onChallenge","str","out","len","utf16to8","hotp_pass","registerSASLMechanism","_sasl_data","generateHOTP","SASLXOAuth2","_attemptSASLAuth","sortMechanismsByPriority","mechanism_found","_sasl_success_handler","_sasl_success_cb","_sasl_failure_handler","_sasl_failure_cb","_sasl_challenge_handler","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","SASL","mechanism","isClientFirst","_sasl_auth1_cb","features","do_bind","do_session","namespaceURI","getXToken","expires_at","_send_auth_bind","_sasl_bind_cb","BIND","old_token","uniq_id","iqtype","Websocket","_onIdle","_conn","_data","paused","rawStanza","_buildStream","rawOutput","socket","reg_exp","testRegexp","replaceRegexp","templateSettings","evaluate","interpolate","insertSvg","$html","svg_name","_addTemplate","path","tpl","is_svg","addTemplate","addSvgTemplate","addJSONTemplate","updateRosterLayout","is_wide","is_narrow","roster_width","panel_width","left_panel_width","right_panel_width","right_contact_panel_width","chat_bottom_panel_width","right_contact_panel_styles","panel_gap","right_gap","setCustomCss","addScreen","blur_overlay","wide","placeholders","about","path_acc_settings_left","ViewPath","path_acc_settings_right","path_acc_vcard_edit","path_chat_head","path_chat_body","path_chat_bottom","path_group_invitation","path_enable_view","path_contact_details","path_contact_details_right","path_contact_details_right_encrypted","path_participant_messages","path_details_participants","discovering_main","details","details_content","omemo_item","raw_data","y","getEmoji","lead","trail","emoji_data","emoji_regexp","emoji_code","fn","hasher","SHA1","_image_cache","COLORS","b64toBlob","b64Data","sliceSize","byteCharacters","byteArrays","byteNumbers","byteArray","CachedImage","isString","getAccountColor","_name","color_index","getImageSize","max_size","image_el","img_size","$image_el","backgroundImage","backgroundSize","backgroundColor","setCss","font","first_letter","second_letter","splitted_name","rect","textAlign","textBaseline","fillText","image_obj","b64_image","naturalWidth","naturalHeight","new_size","revokeObjectURL","toBlob","getCachedBackground","file_name","lastModified","modal_queue","Modal","modal_constructor","$modal","Function","closed","throw","clickHandler","modal_options","is_default_complete","complete_data","_openModal","_closeModal","modal","dialog","blob_image_from_clipboard","appendChild","$options","user_value_input","user_value","ok_text","cancel_text","resend_button","createTextRange","textRange","moveToElementText","select","getRangeAt","rangeCount","deleteContents","lastNode","frag","createDocumentFragment","insertNode","cloneRange","setStartAfter","$div","klass","getHyperLink","prot","escaped_url","encodeURI","$obj","html_concat","url_regexp","$node","replaceAll","encodeURIComponent","decodeURIComponent","day","year","getKeyByValue","slice_string","pretty_body","mention_tag","start_tags","end_tags","mark_up_style","quote","child_idx","platform","os","scrollWidth","isOverflownHeight","$data_form","$fixed_field","callback_msg","errback_msg","clipboard","writeText","info_msg","$body","$popup_msg","win","getCookie","matches","cookie","userAgent","BlackBerry","Opera","Windows","b64_string","buffer","generateHOTPKey","secret","Crypto","crypto","subtle","counterArray","padCounter","importKey","sign","bView","DataView","bCounter","byte","byteValue","setUint8","DT","HS","truncate","uKey","Sbits","hmacSha256","stringToArrayBuffer","string","ALGO_NAME","decoder","TextDecoder","encoder","TextEncoder","masterKey","masterObj","hkdfCtrParams","salt","deriveBits","encryptionKey","authenticationKey","iv","generatedHMAC","decryptedBuffer","decode","getRandomValues","generateAESencryptedMessage","encryptOptions","encodedPlaintext","encode","arrayBufferConcat","joined","generateAESKey","algo","generateKey","userAgentString","chromeAgent","IExplorerAgent","firefoxAgent","safariAgent","operaAgent","xmlToObject","$vcard","middle_name","birthday","job_title","jabber_id","org","phone","anonymous","$org","unit","$photo","number","work","home","mobile","pobox","extadd","street","locality","region","pcode","country","objectToXml","updateRefreshButton","$addr_info","show_addr_block","addr","vcard_right","pickadate","selectMonths","selectYears","autoOk","min","allowKeyboardControl","today","onClose","weekday_display","date_display","navPrev","navNext","buttonClear","buttonClose","evt","setData","changePlaceholder","nickname_placeholder","applyTo","View","vname","visible","size_changed","windowResized","onShow","constructor","view_id","styles","removeCustomCss","$child","sum","isScrolledToTop","new_view","keyUpOnSearch","ids","getSelectedItem","selectNextItem","selectPreviousItem","_update_search_timeout","keyUpOnSearchWithQuery","updateSearchWithMessages","search_messages","_loading_messages","_messages_loaded","query_id","first_message","searched_msgs_loaded","$message_item_view","message_from_stanza","getSelectedItemWithQuery","selectNextItemWithQuery","selectPreviousItemWithQuery","selectItemWithQuery","query_chats","searched_by","item_list","input_widget","onChangedInputMode","Body","screen_map","onScreenMapChanged","updateBackground","updateMainColor","updateAvatarShape","shape","background_settings","updateBoxShadow","new_attrs","uniqueId","screen_changed","ToolbarView","removeAttribute","onChangedAllMessageCounter","onChangedGroupMessageCounter","onChangedMentionsCounter","onChangedMessageCounter","msg_counter","group_msg_counter","all_msg_counter","mentions_counter","updateColor","is_active","showSearch","showContacts","showMentions","showAddContactView","showAddAccountView","showAddIncognitoGroupChatView","showAddPublicGroupChatView","showAbout","about_view","AboutView","setAllMessageCounter","count_msg","count_all_msg","count_group_msg","incoming_subscriptions","all_msgs","group_msgs","jingle_message_calling","updateCallingStatus","updateCollapsedWindow","updateAccountJid","dismissible","pos1","pos2","pos3","pos4","clientX","clientY","didDrag","onmouseup","onmousemove","setFullScreen","local_video","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullScreen","cancelFullScreen","exitFullscreen","fullscreenElement","mozCancelFullScreen","mozFullScreenElement","webkitExitFullscreen","webkitCurrentFullScreenElement","msExitFullscreen","msFullscreenElement","shareScreen","isFullScreen","webkitFullscreenElement","clickOnWindow","toggleMicrophone","videoCall","toggleVolume","onVisibilityChange","controls","youtube","disablekb","iv_load_policy","modestbranding","rel","showinfo","$minimize_element_float","$minimize_element_full","$show_message_element_full","visibility_state","hidePopup","floatPopup","fullPopup","openMessage","toggleMute","SettingsView","sound_private_value","sound_group_value","updateDescription","updateBackgroundSetting","updateSidePanelSetting","blur_switched","vignetting_switched","material_color","ColorPicker","materialColors","variations","v","hex","tone","weight","side_panel_settings","transparency_switched","setNotifications","setPrivateNotifications","setGroupNotifications","setPrivateMessagePreview","setGroupMessagePreview","setCallAttention","setLoadMedia","setTypingNotifications","setMappingService","setPrivateSound","current_sound","setGroupSound","setCallSound","setDialtoneSound","setAttentionSound","setBackground","SetBackgroundView","setSidePanelTheme","setSidePanelBlur","changeBackgroundImage","openColorPicker","colorPicker","openMainColorPicker","mainColorPicker","changeBlur","switchTransparency","is_switched","changeNotificationsVolume","volume","changeTransparency","changeVignetting","switchVignetting","switchBlur","setHotkeys","setAvatarShape","deleteAllAccounts","progress","progress_text","platform_text","color_scheme","color_picker","$color_hex","updateInputField","selectColor","color_name","backgrounds_gallery","loadMoreImages","getImagesFromXML","patterns_library","img_library","onGetPatternsCallback","onGetImagesCallback","$img","fs_img","current_count","img_sources","addBackground","DragManager","onmousedown","onMouseDown","onMouseMove","onMouseUp","draghandle_elem","resetElem","downX","pageX","downY","pageY","abs","createAvatar","coords","getCoords","shiftX","shiftY","startDrag","findDropElem","updateDropElem","querySelector","finishDrag","box","pageYOffset","pageXOffset","old","parentNode","nextSibling","zIndex","avatar_cursor","cursor","draghandle_elem_cursor","rollback","hidden","elementFromPoint","old_drop_elem","modal_settings","in_duration","out_duration","minScrollbarLength","suppressScrollX","wheelSpeed","startBlinkingFavicon","_blink_interval","$icon","favicon","favicon_message","stopBlinkingFavicon","resetMessageCounter","onChangedFocusState","notification","loop","Audio","registerDOMEvents","innerWidth","innerHeight","focused","hasFocus","modalSettings","drag_manager","views","strophe","discovery","ui","g","webpackContext","webpackContextResolve","__webpack_require__","o","exports","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","amdO","O","chunkIds","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","getPrototypeOf","mode","def","current","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","promises","globalThis","l","script","needAttach","scripts","s","charset","nc","onScriptComplete","doneFns","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}