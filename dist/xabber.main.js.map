{"version":3,"file":"xabber.main.js","mappings":"UAAIA,ECCAC,EADAC,ECAAC,EACAC,E,8DCDJ,kq2C,6DCAA,muZ,6DCAA,oR,6DCAA,25D,6DCAA,wsE,6DCAA,igC,6DCAA,kqE,4DCAA,moB,6DCAA,uxH,6DCAA,2jF,6DCAA,iT,6DCAA,kuB,4DCAA,iY,6DCAA,ulB,6DCAA,gyK,6DCAA,w4F,6DCAA,k6B,2DCAA,o2B,6DCAA,s9uC,6DCAA,yP,6DCAA,m7B,6DCAA,6iB,6DCAA,45E,6DCAA,0sC,6DCAA,m7lB,6DCAA,8qJ,6DCAA,62D,6DCAA,i2C,6DCAA,gwI,6DCAA,y5C,6DCAA,q9E,6DCAA,0pE,4DCAA,w9B,6DCAA,ue,6DCAA,4a,6DCAA,g6E,6DCAA,we,6DCAA,quC,6DCAA,8a,6DCAA,8S,6DCAA,2K,6DCAA,47pD,6DCAA,qp6C,6DCAA,s1I,6DCAA,uS,6DCAA,g7M,6DCAA,u6C,4DCAA,6hD,6DCAA,8H,6DCAA,qvM,6DCAA,06D,4DCAA,yF,6DCAA,oxD,6DCAA,8K,6DCAA,6S,6DCAA,kT,6DCAA,24B,6DCAA,ijM,4DCAA,y5C,6DCAA,8T,6DCAA,iE,6DCAA,sgB,6DCAA,6V,6DCAA,ivC,6DCAA,mkB,6DCAA,oR,6DCAA,mwB,6DCAA,of,6DCAA,oZ,6DCAA,28E,6DCAA,muC,6DCAA,2xB,6DCAA,+Z,6DCAA,kpB,6DCAA,20B,6DCAA,6jC,6DCAA,2jD,6DCAA,w8B,6DCAA,u/C,6DCAA,0qE,6DCAA,6e,6DCAA,0J,6DCAA,wtH,6DCAA,4hB,6DCAA,uhC,6DCAA,oY,4DCAA,yjB,6DCAA,y3B,6DCAA,+nC,6DCAA,87C,6DCAA,slE,6DCAA,woB,6DCAA,iE,6DCAA,qzG,6DCAA,ghE,6DCAA,8hB,6DCAA,8H,6DCAA,myB,6DCAA,6yB,6DCAA,q1E,6DCAA,yS,6DCAA,8U,6DCAA,iR,6DCAA,0/I,6DCAA,2R,6DCAA,4F,6DCAA,oS,6DCAA,y3H,4DCAA,w3V,6DCAA,kX,6DCAA,6zB,6DCAA,yrB,6DCAA,g3C,6DCAA,0Q,6DCAA,0C,6DCAA,qjK,6DCAA,o0L,6DCAA,q4F,6DCAA,qoG,6DCAA,+tK,6DCAA,oxD,6DCAA,0xE,6DCAA,wmB,6DCAA,ga,6DCAA,6pB,6DCAA,y2B,6DCAA,0kB,6DCAA,8iB,6DCAA,q1I,6DCAA,8kO,4DCAA,62G,6DCAA,wH,6DCAA,ulD,6DCAA,06C,6DCAA,u9B,6DCAA,4uD,6DCAA,mvE,6DCAA,iY,6DCAA,8jB,6DCAA,i0B,6DCAA,yL,6DCAA,qV,6DCAA,6R,6DCAA,q6E,6DCAA,0T,6DCAA,2d,6DCAA,46B,6DCAA,4X,6DCAA,+e,6DCAA,gsD,6DCAA,oQ,4DCAA,4Z,6DCAA,ygD,6DCAA,4mB,6DCAA,u6D,6DCAA,slB,6DCAA,sgD,6DCAA,2F,6DCAA,+hE,6DCAA,kX,4DCAA,kH,6DCAA,ouG,6DCAA,+mC,6DCAA,g7B,6DCAA,u0B,6DCAA,ggC,6DCAA,+3B,6DCAA,iuC,6DCAA,o3B,6DCAA,ogC,6DCAA,88B,6DCAA,g3B,6DCAA,soC,6DCAA,ytC,6DCAA,0pC,6DCAA,k8B,6DCAA,qpC,6DCAA,qnD,6DCAA,qiC,6DCAA,m9B,4DCAA,s6B,6DCAA,koC,6DCAA,s7B,6DCAA,ioC,6DCAA,o3B,6DCAA,qrB,6DCAA,uoB,6DCAA,2hB,6DCAA,2iB,6DCAA,2nB,6DCAA,yjB,6DCAA,6sB,6DCAA,qsB,6DCAA,uuB,6DCAA,utB,6DCAA,8vB,6DCAA,ovB,6DCAA,ixB,6DCAA,2vB,6DCAA,gwC,6DCAA,i8B,6DCAA,w0B,4DCAA,izB,6DCAA,o3B,6DCAA,klB,6DCAA,0uB,6DCAA,yxB,6DCAA,k+B,6DCAA,6lC,6DCAA,01B,6DCAA,6tC,6DCAA,wyB,6DCAA,2uB,6DCAA,isB,6DCAA,mqB,6DCAA,q/B,4DCAA,ktB,6DCAA,6pB,6DCAA,8/B,6DCAA,84B,6DCAA,mjB,6DCAA,ovB,6DCAA,woB,6DCAA,iqB,6DCAA,kpB,6DCAA,k0B,4DCAA,ynB,6DCAA,4sB,4DCAA,wwC,6DCAA,22B,6DCAA,gwB,6DCAA,ixB,6DCAA,knB,6DCAA,wiC,6DCAA,igC,6DCAA,kiD,6DCAA,+xB,6DCAA,64E,6DCAA,0hC,6DCAA,+3B,6DCAA,s8B,4DCAA,w0F,6DCAA,0gB,6DCAA,+8B,6DCAA,myB,6DCAA,kqB,4DCAA,krD,6DCAA,s2B,6DCAA,8uB,6DCAA,+oC,6DCAA,0zB,6DCAA,y5B,6DCAA,wtB,6DCAA,w2B,6DCAA,yzB,6DCAA,i2B,6DCAA,m3B,6DCAA,u7B,4DCAA,wgC,4DCAA,24B,6DCAA,+9C,4DCAA,y+B,6DCAA,mgC,6DCAA,k4B,4DCAA,i4C,4DCAA,8rB,6DCAA,svB,6DCAA,ogB,6DCAA,yoB,6DCAA,61C,6DCAA,6hB,6DCAA,qvB,6DCAA,07B,6DCAA,gvB,6DCAA,i8B,4DCAA,k6B,6DCAA,2f,6DCAA,+4B,6DCAA,ikC,6DCAA,qpB,6DCAA,wuB,6DCAA,gmB,6DCAA,6xL,6DCAA,68B,6DCAA,o8C,6DCAA,o4B,6DCAA,wtC,6DCAA,ktC,6DCAA,y9B,6DCAA,2oB,6DCAA,uwB,4DCAA,2kC,6DCAA,m6B,2DCAA,0uB,4DCAA,inC,4DCAA,q7B,6DCAA,2tB,6DCAA,k5B,6DCAA,0nB,6DCAA,6qB,6DCAA,4uB,4DCAA,4hB,6DCAA,u6B,6DCAA,g3D,4DCAA,6mD,6DCAA,y4C,6DCAA,6lC,6DCAA,8wB,6DCAA,86Q,6DCAA,07V,6DCAA,uN,6DCAA,2hf,YCAAC,EAAOC,QAAU,CAAC,oBAAoB,CAAC,MAAQ,CAAC,CAAC,UAAY,CAAC,6GAA6G,mBAAmB,CAAC,6HAA6H,CAAC,UAAY,CAAC,0GAA0G,mBAAmB,CAAC,wHAAwH,CAAC,UAAY,CAAC,wHAAwH,mBAAmB,CAAC,sIAAsI,CAAC,UAAY,CAAC,gIAAgI,mBAAmB,CAAC,oJAAoJ,CAAC,UAAY,CAAC,4HAA4H,mBAAmB,CAAC,0IAA0I,CAAC,UAAY,CAAC,8GAA8G,mBAAmB,CAAC,sIAAsI,CAAC,UAAY,CAAC,mHAAmH,mBAAmB,CAAC,iIAAiI,CAAC,UAAY,CAAC,6GAA6G,mBAAmB,CAAC,2HAA2H,CAAC,UAAY,CAAC,6HAA6H,mBAAmB,CAAC,2IAA2I,CAAC,UAAY,CAAC,uGAAuG,mBAAmB,CAAC,qHAAqH,CAAC,UAAY,CAAC,2GAA2G,mBAAmB,CAAC,yHAAyH,CA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C,OAAQ,YAAa,SAAU,SAAU,OAAQ,SAE/DC,YAAa,CACTC,IAAK,kwUACLC,IAAK,s6JACLC,KAAM,wyOAGVC,WAAY,CACRC,MAAO,CACH,YACA,aACA,cACA,YACA,gBACA,aACA,2BACA,qBACA,cAEJC,MAAO,CACH,cACA,YACA,YACA,YACA,aACA,YACA,yBACA,+BACA,eACA,iBACA,iBACA,yBACA,iBACA,aACA,eAEJC,MAAO,CACH,aACA,YACA,YACA,kBACA,aACA,iBACA,cACA,aACA,eAEJC,SAAU,CACN,WACA,WACA,WACA,YACA,6BACA,aACA,WACA,WACA,gBACA,sCACA,kBACA,0CACA,8CACA,sBAEJC,IAAK,CACD,mBAEJC,MAAO,CACH,iDACA,4BAEJC,QAAS,CACL,kBACA,mBACA,+BACA,oBACA,+BAEJC,aAAc,CACV,gCACA,oDAIRC,UAAW,CACP,GAAM,UACN,QAAS,UACT,QAAS,eACT,QAAS,aACT,QAAS,YACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,UACT,QAAS,QACT,QAAS,UACT,QAAS,WACT,MAAS,wBACT,QAAS,UACT,QAAS,QACT,QAAS,QACT,QAAS,QACT,SAAU,WACV,QAAS,WACT,QAAS,UACT,GAAM,QACN,QAAS,SACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,mBACT,QAAS,WACT,QAAS,WACT,QAAS,MACT,QAAS,UACT,SAAU,mBACV,QAAS,MACT,QAAS,QACT,QAAS,WACT,QAAS,SACT,QAAS,gBACT,QAAS,WACT,QAAS,aACT,QAAS,SACT,QAAS,QACT,QAAS,gBACT,QAAS,iBACT,QAAS,SACT,QAAS,aACT,QAAS,kBACT,QAAS,UACT,QAAS,mBACT,QAAS,SACT,QAAS,wBACT,QAAS,YACT,SAAU,SACV,QAAS,SACT,QAAS,UACT,SAAU,QACV,QAAS,QACT,QAAS,aACT,QAAS,cACT,QAAS,QACT,aAAc,yBACd,QAAS,kBACT,QAAS,UACT,QAAS,YACT,QAAS,QACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,SAAU,UACV,QAAS,SACT,QAA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CjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAC5+I,iBAAoB,CAAC,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,MAAOgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,MAAOgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IACtkF,mBAAsB,CAAC,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,MAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IACzzF,gBAAmB,CAAC,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,C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GC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAA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QgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAA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CjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,MAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,IAAI,CAA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AAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,MAAOgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,MAAOgR,EAAE,GAAGC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,MAAOgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,KAAOgR,EAAE,EAAEC,EAAE,IAAI,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,GAAGC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,EAAE,GAAG,CAACjR,KAAK,OAAQgR,EAAE,EAAEC,E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ED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,KAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,KACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,oBAAqB,CACpB,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,KACA,MAED,4BAA6B,CAC5B,OAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,OAGF,SAAS+yJ,EAAoB7yJ,GAC5B,IAAIG,EAAoBC,EAAEN,EAAKE,GAC9B,OAAOomB,QAAQ1lB,UAAUorB,MAAK,KAC7B,IAAIzrB,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,CAAC,IAIT,IAAI4iC,EAAMnjC,EAAIE,GAAMC,EAAKgjC,EAAI,GAC7B,OAAO7c,QAAQ1T,IAAIuwB,EAAIxvB,MAAM,GAAG3T,IAAIK,EAAoBE,IAAIyrB,MAAK,IACzD3rB,EAAoBw2B,EAAE12B,EAAI,KAEnC,CACA4yJ,EAAoBryJ,KAAO,IAAOC,OAAOD,KAAKV,GAC9C+yJ,EAAoB5yJ,GAAK,KACzBL,EAAOC,QAAUgzJ,C,kBCzUjB,WAEE,KAFF,aAAqB,OAAO76H,KAAKC,MACjC,0MACE,+B,02rBCDE66H,EAA2B,CAAC,EAGhC,SAAS3yJ,EAAoB4yJ,GAE5B,IAAIC,EAAeF,EAAyBC,GAC5C,QAAqBlmI,IAAjBmmI,EACH,OAAOA,EAAanzJ,QAGrB,IAAID,EAASkzJ,EAAyBC,GAAY,CACjD9yJ,GAAI8yJ,EACJl3B,QAAQ,EACRh8H,QAAS,CAAC,GAUX,OANAozJ,EAAoBF,GAAUt7F,KAAK73D,EAAOC,QAASD,EAAQA,EAAOC,QAASM,GAG3EP,EAAOi8H,QAAS,EAGTj8H,EAAOC,OACf,CAGAM,EAAoBmoB,EAAI2qI,EC5BxB9yJ,EAAoB+yJ,KAAO,CAAC,EhWAxB3zJ,EAAW,GACfY,EAAoBgzJ,EAAI,CAAC76I,EAAQ86I,EAAUh+I,EAAIsgD,KAC9C,IAAG09F,EAAH,CAMA,IAAIC,EAAeC,IACnB,IAAS1/I,EAAI,EAAGA,EAAIrU,EAASkT,OAAQmB,IAAK,CAGzC,IAFA,IAAKw/I,EAAUh+I,EAAIsgD,GAAYn2D,EAASqU,GACpC2/I,GAAY,EACPC,EAAI,EAAGA,EAAIJ,EAAS3gJ,OAAQ+gJ,MACpB,EAAX99F,GAAsB29F,GAAgB39F,IAAaj1D,OAAOD,KAAKL,EAAoBgzJ,GAAGM,OAAO1rI,GAAS5nB,EAAoBgzJ,EAAEprI,GAAKqrI,EAASI,MAC9IJ,EAAS71E,OAAOi2E,IAAK,IAErBD,GAAY,EACT79F,EAAW29F,IAAcA,EAAe39F,IAG7C,GAAG69F,EAAW,CACbh0J,EAASg+E,OAAO3pE,IAAK,GACrB,IAAI6Q,EAAIrP,SACEyX,IAANpI,IAAiBnM,EAASmM,EAC/B,CACD,CACA,OAAOnM,CAnBP,CAJCo9C,EAAWA,GAAY,EACvB,IAAI,IAAI9hD,EAAIrU,EAASkT,OAAQmB,EAAI,GAAKrU,EAASqU,EAAI,GAAG,GAAK8hD,EAAU9hD,IAAKrU,EAASqU,GAAKrU,EAASqU,EAAI,GACrGrU,EAASqU,GAAK,CAACw/I,EAAUh+I,EAAIsgD,EAqBjB,EiWzBdv1D,EAAoBuzJ,EAAK9zJ,IACxB,IAAI+zJ,EAAS/zJ,GAAUA,EAAOg0J,WAC7B,IAAOh0J,EAAiB,QACxB,IAAM,EAEP,OADAO,EAAoBsmJ,EAAEkN,EAAQ,CAAEltI,EAAGktI,IAC5BA,CAAM,EhWNVl0J,EAAWgB,OAAOozJ,eAAkBvwI,GAAS7iB,OAAOozJ,eAAevwI,GAASA,GAASA,EAAa,UAQtGnjB,EAAoBw2B,EAAI,SAASvqB,EAAO0nJ,GAEvC,GADU,EAAPA,IAAU1nJ,EAAQkD,KAAKlD,IAChB,EAAP0nJ,EAAU,OAAO1nJ,EACpB,GAAoB,iBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAP0nJ,GAAa1nJ,EAAMwnJ,WAAY,OAAOxnJ,EAC1C,GAAW,GAAP0nJ,GAAoC,mBAAf1nJ,EAAM0f,KAAqB,OAAO1f,CAC5D,CACA,IAAI88D,EAAKzoE,OAAOkuD,OAAO,MACvBxuD,EAAoBskB,EAAEykD,GACtB,IAAI6qF,EAAM,CAAC,EACXv0J,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAIu0J,EAAiB,EAAPF,GAAY1nJ,EAAyB,iBAAX4nJ,KAAyBx0J,EAAegV,QAAQw/I,GAAUA,EAAUv0J,EAASu0J,GACxHvzJ,OAAOwzJ,oBAAoBD,GAAS/jJ,SAAS8X,GAASgsI,EAAIhsI,GAAO,IAAO3b,EAAM2b,KAI/E,OAFAgsI,EAAa,QAAI,IAAM,EACvB5zJ,EAAoBsmJ,EAAEv9E,EAAI6qF,GACnB7qF,CACR,EiWxBA/oE,EAAoBsmJ,EAAI,CAAC5mJ,EAASq0J,KACjC,IAAI,IAAInsI,KAAOmsI,EACX/zJ,EAAoBC,EAAE8zJ,EAAYnsI,KAAS5nB,EAAoBC,EAAEP,EAASkoB,IAC5EtnB,OAAO0zJ,eAAet0J,EAASkoB,EAAK,CAAEqsI,YAAY,EAAMzhJ,IAAKuhJ,EAAWnsI,IAE1E,ECND5nB,EAAoBusF,EAAI,CAAC,EAGzBvsF,EAAoBE,EAAKg0J,GACjBjuI,QAAQ1T,IAAIjS,OAAOD,KAAKL,EAAoBusF,GAAG5tD,QAAO,CAACw1H,EAAUvsI,KACvE5nB,EAAoBusF,EAAE3kE,GAAKssI,EAASC,GAC7BA,IACL,KCNJn0J,EAAoBi5H,EAAKi7B,GAEjB,UAAYA,EAAU,MCF9Bl0J,EAAoBo0J,SAAYF,IAEf,ECHjBl0J,EAAoByyJ,EAAI,WACvB,GAA0B,iBAAf4B,WAAyB,OAAOA,WAC3C,IACC,OAAOllJ,MAAQ,IAAIsK,SAAS,cAAb,EAGhB,CAFE,MAAOvZ,GACR,GAAsB,iBAAX8T,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBhU,EAAoBs0J,IAAO70J,KAC1BA,EAASa,OAAOkuD,OAAO/uD,IACX0/B,WAAU1/B,EAAO0/B,SAAW,IACxC7+B,OAAO0zJ,eAAev0J,EAAQ,UAAW,CACxCw0J,YAAY,EACZ3iI,IAAK,KACJ,MAAM,IAAInxB,MAAM,0FAA4FV,EAAOK,GAAG,IAGjHL,GCTRO,EAAoBC,EAAI,CAACkjB,EAAK7I,IAAUha,OAAOuR,UAAU+0F,eAAetvC,KAAKn0C,EAAK7I,GtWA9E/a,EAAa,CAAC,EACdC,EAAoB,cAExBQ,EAAoBu0J,EAAI,CAACroJ,EAAKytB,EAAM/R,EAAKssI,KACxC,GAAG30J,EAAW2M,GAAQ3M,EAAW2M,GAAKiE,KAAKwpB,OAA3C,CACA,IAAI66H,EAAQC,EACZ,QAAW/nI,IAAR9E,EAEF,IADA,IAAI8sI,EAAUlrJ,SAAS2hD,qBAAqB,UACpC13C,EAAI,EAAGA,EAAIihJ,EAAQpiJ,OAAQmB,IAAK,CACvC,IAAIkhJ,EAAID,EAAQjhJ,GAChB,GAAGkhJ,EAAEjpH,aAAa,QAAUx/B,GAAOyoJ,EAAEjpH,aAAa,iBAAmBlsC,EAAoBooB,EAAK,CAAE4sI,EAASG,EAAG,KAAO,CACpH,CAEGH,IACHC,GAAa,GACbD,EAAShrJ,SAAS6M,cAAc,WAEzBu+I,QAAU,QACjBJ,EAAOz5F,QAAU,IACb/6D,EAAoB60J,IACvBL,EAAO/oH,aAAa,QAASzrC,EAAoB60J,IAElDL,EAAO/oH,aAAa,eAAgBjsC,EAAoBooB,GACxD4sI,EAAOn9I,IAAMnL,GAEd3M,EAAW2M,GAAO,CAACytB,GACnB,IAAIm7H,EAAmB,CAACxlE,EAAM98D,KAE7BgiI,EAAOh8I,QAAUg8I,EAAOj9I,OAAS,KACjCwuB,aAAag1B,GACb,IAAIg6F,EAAUx1J,EAAW2M,GAIzB,UAHO3M,EAAW2M,GAClBsoJ,EAAOtyG,YAAcsyG,EAAOtyG,WAAWthB,YAAY4zH,GACnDO,GAAWA,EAAQjlJ,SAASmF,GAAQA,EAAGud,KACpC88D,EAAM,OAAOA,EAAK98D,EAAM,EAExBuoC,EAAU5gD,WAAW26I,EAAiBx8I,KAAK,UAAMoU,EAAW,CAAE5Y,KAAM,UAAW6J,OAAQ62I,IAAW,MACtGA,EAAOh8I,QAAUs8I,EAAiBx8I,KAAK,KAAMk8I,EAAOh8I,SACpDg8I,EAAOj9I,OAASu9I,EAAiBx8I,KAAK,KAAMk8I,EAAOj9I,QACnDk9I,GAAcjrJ,SAAS6nF,KAAKj0E,YAAYo3I,EAnCkB,CAmCX,EuWtChDx0J,EAAoBskB,EAAK5kB,IACH,oBAAXs1J,QAA0BA,OAAOC,aAC1C30J,OAAO0zJ,eAAet0J,EAASs1J,OAAOC,YAAa,CAAEhpJ,MAAO,WAE7D3L,OAAO0zJ,eAAet0J,EAAS,aAAc,CAAEuM,OAAO,GAAO,ECL9DjM,EAAoBk1J,IAAOz1J,IAC1BA,EAAO01J,MAAQ,GACV11J,EAAO0/B,WAAU1/B,EAAO0/B,SAAW,IACjC1/B,G,MCHR,IAAI21J,EACAp1J,EAAoByyJ,EAAE4C,gBAAeD,EAAYp1J,EAAoByyJ,EAAEv+H,SAAW,IACtF,IAAI1qB,EAAWxJ,EAAoByyJ,EAAEjpJ,SACrC,IAAK4rJ,GAAa5rJ,IACbA,EAAS8rJ,gBACZF,EAAY5rJ,EAAS8rJ,cAAcj+I,MAC/B+9I,GAAW,CACf,IAAIV,EAAUlrJ,EAAS2hD,qBAAqB,UACzCupG,EAAQpiJ,SAAQ8iJ,EAAYV,EAAQA,EAAQpiJ,OAAS,GAAG+E,IAC5D,CAID,IAAK+9I,EAAW,MAAM,IAAIj1J,MAAM,yDAChCi1J,EAAYA,EAAUnjJ,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFjS,EAAoBo7G,EAAIg6C,C,WCfxBp1J,EAAoBk5C,EAAI1vC,SAAS+rJ,SAAW54H,KAAKzI,SAAS1N,KAK1D,IAAIgvI,EAAkB,CACrB,IAAK,GAGNx1J,EAAoBusF,EAAE8mE,EAAI,CAACa,EAASC,KAElC,IAAIsB,EAAqBz1J,EAAoBC,EAAEu1J,EAAiBtB,GAAWsB,EAAgBtB,QAAWxnI,EACtG,GAA0B,IAAvB+oI,EAGF,GAAGA,EACFtB,EAAShkJ,KAAKslJ,EAAmB,QAC3B,CAGL,IAAIh9I,EAAU,IAAIwN,SAAQ,CAAC1lB,EAAS2lB,IAAYuvI,EAAqBD,EAAgBtB,GAAW,CAAC3zJ,EAAS2lB,KAC1GiuI,EAAShkJ,KAAKslJ,EAAmB,GAAKh9I,GAGtC,IAAIvM,EAAMlM,EAAoBo7G,EAAIp7G,EAAoBi5H,EAAEi7B,GAEpDj2I,EAAQ,IAAI9d,MAgBhBH,EAAoBu0J,EAAEroJ,GAfFsmB,IACnB,GAAGxyB,EAAoBC,EAAEu1J,EAAiBtB,KAEf,KAD1BuB,EAAqBD,EAAgBtB,MACRsB,EAAgBtB,QAAWxnI,GACrD+oI,GAAoB,CACtB,IAAIC,EAAYljI,IAAyB,SAAfA,EAAM1e,KAAkB,UAAY0e,EAAM1e,MAChE6hJ,EAAUnjI,GAASA,EAAM7U,QAAU6U,EAAM7U,OAAOtG,IACpD4G,EAAMwK,QAAU,iBAAmByrI,EAAU,cAAgBwB,EAAY,KAAOC,EAAU,IAC1F13I,EAAMjS,KAAO,iBACbiS,EAAMnK,KAAO4hJ,EACbz3I,EAAM2hC,QAAU+1G,EAChBF,EAAmB,GAAGx3I,EACvB,CACD,GAEwC,SAAWi2I,EAASA,EAE/D,CACD,EAWFl0J,EAAoBgzJ,EAAEK,EAAKa,GAA0C,IAA7BsB,EAAgBtB,GAGxD,IAAI0B,EAAuB,CAACC,EAA4BhnJ,KACvD,IAGI+jJ,EAAUsB,GAHTjB,EAAU6C,EAAaC,GAAWlnJ,EAGhB4E,EAAI,EAC3B,GAAGw/I,EAAS+C,MAAMl2J,GAAgC,IAAxB01J,EAAgB11J,KAAa,CACtD,IAAI8yJ,KAAYkD,EACZ91J,EAAoBC,EAAE61J,EAAalD,KACrC5yJ,EAAoBmoB,EAAEyqI,GAAYkD,EAAYlD,IAGhD,GAAGmD,EAAS,IAAI59I,EAAS49I,EAAQ/1J,EAClC,CAEA,IADG61J,GAA4BA,EAA2BhnJ,GACrD4E,EAAIw/I,EAAS3gJ,OAAQmB,IACzBygJ,EAAUjB,EAASx/I,GAChBzT,EAAoBC,EAAEu1J,EAAiBtB,IAAYsB,EAAgBtB,IACrEsB,EAAgBtB,GAAS,KAE1BsB,EAAgBtB,GAAW,EAE5B,OAAOl0J,EAAoBgzJ,EAAE76I,EAAO,EAGjC89I,EAAqBt5H,KAA6B,uBAAIA,KAA6B,wBAAK,GAC5Fs5H,EAAmBnmJ,QAAQ8lJ,EAAqBt9I,KAAK,KAAM,IAC3D29I,EAAmB9lJ,KAAOylJ,EAAqBt9I,KAAK,KAAM29I,EAAmB9lJ,KAAKmI,KAAK29I,G,KClFvF,IAAIC,EAAsBl2J,EAAoBgzJ,OAAEtmI,EAAW,CAAC,OAAO,IAAO1sB,EAAoB,SAC9Fk2J,EAAsBl2J,EAAoBgzJ,EAAEkD,E","sources":["webpack://xabber.web/webpack/runtime/chunk loaded","webpack://xabber.web/webpack/runtime/create fake namespace object","webpack://xabber.web/webpack/runtime/load script","webpack://xabber.web/./templates/accounts/account_settings_modal.html","webpack://xabber.web/./templates/accounts/add_account.html","webpack://xabber.web/./templates/accounts/audio_file_waveform.html","webpack://xabber.web/./templates/accounts/avatars_gallery.html","webpack://xabber.web/./templates/accounts/change_account_password.html","webpack://xabber.web/./templates/accounts/change_password.html","webpack://xabber.web/./templates/accounts/change_status.html","webpack://xabber.web/./templates/accounts/current_token_item_modal.html","webpack://xabber.web/./templates/accounts/delete_files_media_gallery.html","webpack://xabber.web/./templates/accounts/emoji_panel.html","webpack://xabber.web/./templates/accounts/emoji_picker.html","webpack://xabber.web/./templates/accounts/emoji_picker_tabs.html","webpack://xabber.web/./templates/accounts/existing_groupchat_item.html","webpack://xabber.web/./templates/accounts/global_settings_item_modal.html","webpack://xabber.web/./templates/accounts/media_gallery_account.html","webpack://xabber.web/./templates/accounts/media_gallery_account_file.html","webpack://xabber.web/./templates/accounts/resource.html","webpack://xabber.web/./templates/accounts/resource_right.html","webpack://xabber.web/./templates/accounts/single_account_settings_modal.html","webpack://xabber.web/./templates/accounts/status_message_input_widget.html","webpack://xabber.web/./templates/accounts/token_item_modal.html","webpack://xabber.web/./templates/accounts/toolbar_item.html","webpack://xabber.web/./templates/accounts/unregister_account.html","webpack://xabber.web/./templates/accounts/webcam_panel.html","webpack://xabber.web/./templates/accounts/xmpp_login.html","webpack://xabber.web/./templates/base/about.html","webpack://xabber.web/./templates/base/backgrounds_gallery.html","webpack://xabber.web/./templates/base/color_picker.html","webpack://xabber.web/./templates/base/color_scheme.html","webpack://xabber.web/./templates/base/dialog.html","webpack://xabber.web/./templates/base/fingerprint_devices_item.html","webpack://xabber.web/./templates/base/fingerprint_item.html","webpack://xabber.web/./templates/base/fingerprints.html","webpack://xabber.web/./templates/base/fingerprints_devices.html","webpack://xabber.web/./templates/base/input_widget.html","webpack://xabber.web/./templates/base/jingle_message_calling.html","webpack://xabber.web/./templates/base/omemo_enable.html","webpack://xabber.web/./templates/base/plyr_player_popup.html","webpack://xabber.web/./templates/base/setting_emoji_font_radio_input.html","webpack://xabber.web/./templates/base/setting_language_radio_input.html","webpack://xabber.web/./templates/base/setting_radio_input.html","webpack://xabber.web/./templates/base/settings.html","webpack://xabber.web/./templates/base/settings_modal.html","webpack://xabber.web/./templates/base/toolbar.html","webpack://xabber.web/./templates/chats/add_chat_account_item.html","webpack://xabber.web/./templates/chats/chat_bottom.html","webpack://xabber.web/./templates/chats/chat_content.html","webpack://xabber.web/./templates/chats/chat_content_contact.html","webpack://xabber.web/./templates/chats/chat_content_placeholder.html","webpack://xabber.web/./templates/chats/chat_head.html","webpack://xabber.web/./templates/chats/chat_item.html","webpack://xabber.web/./templates/chats/chat_placeholder.html","webpack://xabber.web/./templates/chats/chats_panel.html","webpack://xabber.web/./templates/chats/checkbox.html","webpack://xabber.web/./templates/chats/content_encryption_warning.html","webpack://xabber.web/./templates/chats/encryption_warning.html","webpack://xabber.web/./templates/chats/forward_panel.html","webpack://xabber.web/./templates/chats/group_chats/add_group_chat.html","webpack://xabber.web/./templates/chats/group_chats/invitation_panel_view.html","webpack://xabber.web/./templates/chats/group_chats/mention_item.html","webpack://xabber.web/./templates/chats/group_chats/pinned_message_panel.html","webpack://xabber.web/./templates/chats/location_popup.html","webpack://xabber.web/./templates/chats/message_item.html","webpack://xabber.web/./templates/chats/messages/attached_file.html","webpack://xabber.web/./templates/chats/messages/audio_file.html","webpack://xabber.web/./templates/chats/messages/audio_file_waveform.html","webpack://xabber.web/./templates/chats/messages/auth_request.html","webpack://xabber.web/./templates/chats/messages/file.html","webpack://xabber.web/./templates/chats/messages/file_loading.html","webpack://xabber.web/./templates/chats/messages/file_upload.html","webpack://xabber.web/./templates/chats/messages/forwarded.html","webpack://xabber.web/./templates/chats/messages/group_request.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-2.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-3.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-4.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-5.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-6.html","webpack://xabber.web/./templates/chats/messages/images_details.html","webpack://xabber.web/./templates/chats/messages/link_reference.html","webpack://xabber.web/./templates/chats/messages/link_reference_chat.html","webpack://xabber.web/./templates/chats/messages/loading_circle.html","webpack://xabber.web/./templates/chats/messages/location.html","webpack://xabber.web/./templates/chats/messages/main.html","webpack://xabber.web/./templates/chats/messages/saved_main.html","webpack://xabber.web/./templates/chats/messages/searched.html","webpack://xabber.web/./templates/chats/messages/system.html","webpack://xabber.web/./templates/chats/messages/template-for-2.html","webpack://xabber.web/./templates/chats/messages/template-for-3.html","webpack://xabber.web/./templates/chats/messages/template-for-4.html","webpack://xabber.web/./templates/chats/messages/template-for-5.html","webpack://xabber.web/./templates/chats/messages/template-for-6.html","webpack://xabber.web/./templates/chats/messages/video.html","webpack://xabber.web/./templates/chats/messages/voice_message.html","webpack://xabber.web/./templates/chats/saved_chat_head.html","webpack://xabber.web/./templates/chats/send_media.html","webpack://xabber.web/./templates/chats/subscription_buttons.html","webpack://xabber.web/./templates/chats/unread_marker.html","webpack://xabber.web/./templates/contacts/account_roster_left.html","webpack://xabber.web/./templates/contacts/account_roster_right.html","webpack://xabber.web/./templates/contacts/add_contact.html","webpack://xabber.web/./templates/contacts/add_contact_account_item.html","webpack://xabber.web/./templates/contacts/audio_file_waveform.html","webpack://xabber.web/./templates/contacts/contact_blocked_item.html","webpack://xabber.web/./templates/contacts/contact_details_right.html","webpack://xabber.web/./templates/contacts/contact_left_item.html","webpack://xabber.web/./templates/contacts/contact_placeholder.html","webpack://xabber.web/./templates/contacts/contact_right_item.html","webpack://xabber.web/./templates/contacts/edit_contact.html","webpack://xabber.web/./templates/contacts/edit_group.html","webpack://xabber.web/./templates/contacts/group_chats/add_blocked_participant_form.html","webpack://xabber.web/./templates/contacts/group_chats/badge_edit_view.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions_right.html","webpack://xabber.web/./templates/contacts/group_chats/description_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/file_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_edit.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_name_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/group_status.html","webpack://xabber.web/./templates/contacts/group_chats/group_status_right.html","webpack://xabber.web/./templates/contacts/group_chats/invitation.html","webpack://xabber.web/./templates/contacts/group_chats/invited_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_badge_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_rights.html","webpack://xabber.web/./templates/contacts/group_chats/participants.html","webpack://xabber.web/./templates/contacts/group_chats/participants_right_panel.html","webpack://xabber.web/./templates/contacts/group_chats/pinned_message.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/restriction_item.html","webpack://xabber.web/./templates/contacts/group_chats/right_expire_variants.html","webpack://xabber.web/./templates/contacts/group_chats/set_status.html","webpack://xabber.web/./templates/contacts/group_chats/status_item.html","webpack://xabber.web/./templates/contacts/group_left.html","webpack://xabber.web/./templates/contacts/group_right.html","webpack://xabber.web/./templates/contacts/group_settings.html","webpack://xabber.web/./templates/contacts/groups.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list_contact.html","webpack://xabber.web/./templates/contacts/groups_list.html","webpack://xabber.web/./templates/contacts/groups_new_group.html","webpack://xabber.web/./templates/contacts/media_item.html","webpack://xabber.web/./templates/contacts/media_items_empty.html","webpack://xabber.web/./templates/contacts/preloader.html","webpack://xabber.web/./templates/contacts/roster_left.html","webpack://xabber.web/./templates/contacts/roster_right.html","webpack://xabber.web/./templates/contacts/roster_settings.html","webpack://xabber.web/./templates/mentions/mention_item.html","webpack://xabber.web/./templates/mentions/mentions_panel.html","webpack://xabber.web/./templates/mentions/mentions_placeholder.html","webpack://xabber.web/./templates/searching/existing_groupchat_details_view.html","webpack://xabber.web/./templates/searching/existing_groupchat_item.html","webpack://xabber.web/./templates/searching/searching_account_item.html","webpack://xabber.web/./templates/searching/searching_wide.html","webpack://xabber.web/./templates/svg/account-cancel.html","webpack://xabber.web/./templates/svg/account-outline.html","webpack://xabber.web/./templates/svg/account.html","webpack://xabber.web/./templates/svg/address-outline.html","webpack://xabber.web/./templates/svg/address.html","webpack://xabber.web/./templates/svg/alarm-bell.html","webpack://xabber.web/./templates/svg/alert-circle.html","webpack://xabber.web/./templates/svg/bell-off.html","webpack://xabber.web/./templates/svg/bell-sleep.html","webpack://xabber.web/./templates/svg/bell.html","webpack://xabber.web/./templates/svg/birthday-outline.html","webpack://xabber.web/./templates/svg/birthday.html","webpack://xabber.web/./templates/svg/blocked-add.html","webpack://xabber.web/./templates/svg/blocked.html","webpack://xabber.web/./templates/svg/bot-variant.html","webpack://xabber.web/./templates/svg/bot.html","webpack://xabber.web/./templates/svg/bug.html","webpack://xabber.web/./templates/svg/call-outline.html","webpack://xabber.web/./templates/svg/call.html","webpack://xabber.web/./templates/svg/camera-retake.html","webpack://xabber.web/./templates/svg/camera.html","webpack://xabber.web/./templates/svg/cancel.html","webpack://xabber.web/./templates/svg/channel.html","webpack://xabber.web/./templates/svg/chat.html","webpack://xabber.web/./templates/svg/check-circle.html","webpack://xabber.web/./templates/svg/check.html","webpack://xabber.web/./templates/svg/chevron-down.html","webpack://xabber.web/./templates/svg/chevron-left-variant.html","webpack://xabber.web/./templates/svg/chevron-right-variant.html","webpack://xabber.web/./templates/svg/circle-slice-1.html","webpack://xabber.web/./templates/svg/circle-slice-2.html","webpack://xabber.web/./templates/svg/circle-slice-3.html","webpack://xabber.web/./templates/svg/circle-slice-4.html","webpack://xabber.web/./templates/svg/circle-slice-5.html","webpack://xabber.web/./templates/svg/circle-slice-6.html","webpack://xabber.web/./templates/svg/circle-slice-7.html","webpack://xabber.web/./templates/svg/circle-slice-8.html","webpack://xabber.web/./templates/svg/circles-outline.html","webpack://xabber.web/./templates/svg/circles.html","webpack://xabber.web/./templates/svg/client-outline.html","webpack://xabber.web/./templates/svg/client.html","webpack://xabber.web/./templates/svg/clock-outline.html","webpack://xabber.web/./templates/svg/close.html","webpack://xabber.web/./templates/svg/cloud.html","webpack://xabber.web/./templates/svg/contact-add.html","webpack://xabber.web/./templates/svg/crosshairs-gps.html","webpack://xabber.web/./templates/svg/crosshairs-question.html","webpack://xabber.web/./templates/svg/crosshairs.html","webpack://xabber.web/./templates/svg/database-lock.html","webpack://xabber.web/./templates/svg/database.html","webpack://xabber.web/./templates/svg/description-outline.html","webpack://xabber.web/./templates/svg/description.html","webpack://xabber.web/./templates/svg/device-cellphone.html","webpack://xabber.web/./templates/svg/device-console.html","webpack://xabber.web/./templates/svg/device-desktop.html","webpack://xabber.web/./templates/svg/device-tablet.html","webpack://xabber.web/./templates/svg/device-web.html","webpack://xabber.web/./templates/svg/devices.html","webpack://xabber.web/./templates/svg/download.html","webpack://xabber.web/./templates/svg/edit-outline.html","webpack://xabber.web/./templates/svg/edit.html","webpack://xabber.web/./templates/svg/email-outline.html","webpack://xabber.web/./templates/svg/email.html","webpack://xabber.web/./templates/svg/expires.html","webpack://xabber.web/./templates/svg/file-audio.html","webpack://xabber.web/./templates/svg/file-document.html","webpack://xabber.web/./templates/svg/file-pdf.html","webpack://xabber.web/./templates/svg/file-presentation.html","webpack://xabber.web/./templates/svg/file-video.html","webpack://xabber.web/./templates/svg/file-zip.html","webpack://xabber.web/./templates/svg/file.html","webpack://xabber.web/./templates/svg/fullname-outline.html","webpack://xabber.web/./templates/svg/fullname.html","webpack://xabber.web/./templates/svg/group-incognito.html","webpack://xabber.web/./templates/svg/group-invite.html","webpack://xabber.web/./templates/svg/group-private.html","webpack://xabber.web/./templates/svg/group-public.html","webpack://xabber.web/./templates/svg/history.html","webpack://xabber.web/./templates/svg/ic-at.html","webpack://xabber.web/./templates/svg/ic-jabber.html","webpack://xabber.web/./templates/svg/ic-searching.html","webpack://xabber.web/./templates/svg/id-outline.html","webpack://xabber.web/./templates/svg/id.html","webpack://xabber.web/./templates/svg/image.html","webpack://xabber.web/./templates/svg/index.html","webpack://xabber.web/./templates/svg/information-outline.html","webpack://xabber.web/./templates/svg/information.html","webpack://xabber.web/./templates/svg/invite-outline.html","webpack://xabber.web/./templates/svg/invite.html","webpack://xabber.web/./templates/svg/job-outline.html","webpack://xabber.web/./templates/svg/job.html","webpack://xabber.web/./templates/svg/key-variant.html","webpack://xabber.web/./templates/svg/key.html","webpack://xabber.web/./templates/svg/link.html","webpack://xabber.web/./templates/svg/lock-alert.html","webpack://xabber.web/./templates/svg/lock-check.html","webpack://xabber.web/./templates/svg/lock-cross.html","webpack://xabber.web/./templates/svg/lock-open.html","webpack://xabber.web/./templates/svg/lock-question.html","webpack://xabber.web/./templates/svg/lock.html","webpack://xabber.web/./templates/svg/map-marker-outline.html","webpack://xabber.web/./templates/svg/map-marker.html","webpack://xabber.web/./templates/svg/membership-outline.html","webpack://xabber.web/./templates/svg/message-bookmark-outline.html","webpack://xabber.web/./templates/svg/message-group.html","webpack://xabber.web/./templates/svg/minus.html","webpack://xabber.web/./templates/svg/mobile.html","webpack://xabber.web/./templates/svg/palette.html","webpack://xabber.web/./templates/svg/pause.html","webpack://xabber.web/./templates/svg/picture-in-picture-bottom-right.html","webpack://xabber.web/./templates/svg/picture-in-picture-minimize.html","webpack://xabber.web/./templates/svg/picture-in-picture-top-right.html","webpack://xabber.web/./templates/svg/pinned-circle-small.html","webpack://xabber.web/./templates/svg/pinned.html","webpack://xabber.web/./templates/svg/play.html","webpack://xabber.web/./templates/svg/player-float.html","webpack://xabber.web/./templates/svg/player-full.html","webpack://xabber.web/./templates/svg/player-mini-variant.html","webpack://xabber.web/./templates/svg/player-mini.html","webpack://xabber.web/./templates/svg/plus.html","webpack://xabber.web/./templates/svg/plyr.html","webpack://xabber.web/./templates/svg/qrcode.html","webpack://xabber.web/./templates/svg/restrictions-outline.html","webpack://xabber.web/./templates/svg/rss-variant.html","webpack://xabber.web/./templates/svg/rss.html","webpack://xabber.web/./templates/svg/saved-messages.html","webpack://xabber.web/./templates/svg/search.html","webpack://xabber.web/./templates/svg/security.html","webpack://xabber.web/./templates/svg/server.html","webpack://xabber.web/./templates/svg/star-face.html","webpack://xabber.web/./templates/svg/status-outline.html","webpack://xabber.web/./templates/svg/status.html","webpack://xabber.web/./templates/svg/subscription-from.html","webpack://xabber.web/./templates/svg/subscription-to.html","webpack://xabber.web/./templates/svg/task.html","webpack://xabber.web/./templates/svg/translate.html","webpack://xabber.web/./templates/svg/trash.html","webpack://xabber.web/./templates/svg/video.html","webpack://xabber.web/./templates/svg/volume-high.html","webpack://xabber.web/./templates/svg/volume-off-variant.html","webpack://xabber.web/./templates/svg/volume-off.html","webpack://xabber.web/./templates/svg/web-cancel.html","webpack://xabber.web/./templates/svg/web.html","webpack://xabber.web/./templates/svg/xabber-offline.html","webpack://xabber.web/./templates/svg/xabber-online.html","webpack://xabber.web/./templates/svg/xmpp.html","webpack://xabber.web/./templates/vcard/vcard.html","webpack://xabber.web/./templates/vcard/vcard_edit_modal.html","webpack://xabber.web/./templates/vcard/vcard_modal.html","webpack://xabber.web/./templates/vcard/vcard_right.html","webpack://xabber.web/./xmls/background-images.xml","webpack://xabber.web/./xmls/background-patterns.xml","webpack://xabber.web/./sounds/attention/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/dialtones/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/notifications/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/ringtones/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/system/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./src/constants.js","webpack://xabber.web/./src/dependencies.js","webpack://xabber.web/./src/templates.js","webpack://xabber.web/./src/sounds.js","webpack://xabber.web/./src/utils/emoji.js","webpack://xabber.web/./src/utils/images.js","webpack://xabber.web/./src/utils/modals.js","webpack://xabber.web/./src/utils/textarea.js","webpack://xabber.web/./src/utils/utils.js","webpack://xabber.web/./src/environment.js","webpack://xabber.web/./src/core.js","webpack://xabber.web/./src/views.js","webpack://xabber.web/./src/api-service.js","webpack://xabber.web/./src/strophe.js","webpack://xabber.web/./src/vcard.js","webpack://xabber.web/./src/accounts.js","webpack://xabber.web/./src/discovery.js","webpack://xabber.web/./src/contacts.js","webpack://xabber.web/./src/chats.js","webpack://xabber.web/./src/searching.js","webpack://xabber.web/./src/mentions.js","webpack://xabber.web/./src/ui.js","webpack://xabber.web/./src/omemo.js","webpack://xabber.web/./src/xabber.js","webpack://xabber.web/./templates/ sync ^\\.\\/.*\\.json$","webpack://xabber.web/ ^\\.\\/.*\\.html$","webpack://xabber.web/./translations/translation_progress.js","webpack://xabber.web/./translations/ lazy ^\\.\\/.*\\.js$ namespace object","webpack://xabber.web/./version.js","webpack://xabber.web/webpack/bootstrap","webpack://xabber.web/webpack/runtime/amd options","webpack://xabber.web/webpack/runtime/compat get default export","webpack://xabber.web/webpack/runtime/define property getters","webpack://xabber.web/webpack/runtime/ensure chunk","webpack://xabber.web/webpack/runtime/get javascript chunk filename","webpack://xabber.web/webpack/runtime/get mini-css chunk filename","webpack://xabber.web/webpack/runtime/global","webpack://xabber.web/webpack/runtime/harmony module decorator","webpack://xabber.web/webpack/runtime/hasOwnProperty shorthand","webpack://xabber.web/webpack/runtime/make namespace object","webpack://xabber.web/webpack/runtime/node module decorator","webpack://xabber.web/webpack/runtime/publicPath","webpack://xabber.web/webpack/runtime/jsonp chunk loading","webpack://xabber.web/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"xabber.web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","export default \"<div class=\\\"background-overlay\\\"></div>\\n<div class=\\\"settings-panel\\\">\\n    <div class=\\\"settings-transition-wrap\\\">\\n        <div class=\\\"left-column settings-column noselect\\\">\\n            <div class=\\\"settings-account-head\\\">\\n                <i class=\\\"btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <div class=\\\"name one-line\\\"></div>\\n                <svg class=\\\"btn-color-picker dropdown-button mdi mdi-24px mdi-svg-template\\\" data-activates=\\\"color-picker-dropdown\\\" data-svgname=\\\"palette\\\"></svg>\\n                <ul id=\\\"color-picker-dropdown\\\" class=\\\"dropdown-content color-picker-dropdown bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"red\\\">\\n                        <span class=\\\"one-line text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"pink\\\">\\n                        <span class=\\\"one-line text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"purple\\\">\\n                        <span class=\\\"one-line text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-purple\\\">\\n                        <span class=\\\"one-line text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"indigo\\\">\\n                        <span class=\\\"one-line text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue\\\">\\n                        <span class=\\\"one-line text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-blue\\\">\\n                        <span class=\\\"one-line text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"cyan\\\">\\n                        <span class=\\\"one-line text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"teal\\\">\\n                        <span class=\\\"one-line text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"green\\\">\\n                        <span class=\\\"one-line text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-green\\\">\\n                        <span class=\\\"one-line text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"lime\\\">\\n                        <span class=\\\"one-line text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"amber\\\">\\n                        <span class=\\\"one-line text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"orange\\\">\\n                        <span class=\\\"one-line text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-orange\\\">\\n                        <span class=\\\"one-line text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"brown\\\">\\n                        <span class=\\\"one-line text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue-grey\\\">\\n                        <span class=\\\"one-line text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <svg class=\\\"btn-qr-code mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n                <div class=\\\"field clickable-field enabled-state switch normal\\\">\\n                    <label class=\\\"field-value\\\">\\n                        <input type=\\\"checkbox\\\">\\n                        <span class=\\\"lever\\\"></span>\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n                <div class=\\\"picture-wrap\\\">\\n                    <div class=\\\"avatar-wrap\\\">\\n                        <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                            <img/>\\n                            <input type=\\\"file\\\"/>\\n                            <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                                <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                                </div>\\n                                <div class=\\\"btn-selfie property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                                </div>\\n                                <div class=\\\"btn-choose-image property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                                </div>\\n                            </ul>\\n                            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                            </svg>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"name one-line\\\"></div>\\n                <div class=\\\"jid one-line\\\"></div>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap\\\">\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"profile\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__profile_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cloud\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"encryption\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}</div>\\n                    <div class=\\\"settings-block-label hidden label-encryption-enabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_enabled_label\\\"))]}</div>\\n                    <div class=\\\"settings-block-label label-encryption-disabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_disabled_label\\\"))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"devices-wrap hidden\\\">\\n                <div class=\\\"device-encryption-warning hidden\\\" data-not-trusted-count=\\\"0\\\">\\n                    <svg class=\\\"device-encryption-icon mdi mdi-40px mdi-svg-template\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n                    <div class=\\\"device-encryption-warning-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_warning_header\\\"))]}</div>\\n                    <div class=\\\"device-encryption-warning-label\\\"></div>\\n                </div>\\n                <div class=\\\"tokens-wrap\\\">\\n                    <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n                    <div class=\\\"current-token-wrap\\\">\\n                        <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                        <div class=\\\"btn-revoke-all-tokens settings-button-devices\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg>\\n                            <div class=\\\"settings-button-devices-label\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-panel-label active-sessions-label\\\">{[print(xabber.getString(\\\"settings_account__label_active_sessions\\\"))]}</div>\\n                    <div class=\\\"all-sessions-wrap\\\">\\n                        <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                    </div>\\n                    <div class=\\\"orphaned-fingerprints hidden\\\">\\n                        <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                        <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap\\\">\\n                <div class=\\\"settings-tab settings-deletion-button delete-account\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                    </div>\\n                    <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__button_quit_account\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"right-column settings-column noselect\\\">\\n            <div class=\\\"settings-panel-head\\\">\\n                <i class=\\\"btn-back-settings mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <i class=\\\"btn-back-subsettings-account mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n                <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n                <i class=\\\"btn-sorting dropdown-button mdi mdi-24px mdi-sort hidden\\\" data-activates=\\\"storage-file-sorting\\\"></i>\\n                <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <div class=\\\"btn-more media-gallery-button dropdown-button hidden\\\" data-activates=\\\"storage-actions\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                </div>\\n                <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant btn-select-files hidden\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_select_files\\\"))]}</span>\\n                    </div>\\n                </ul>\\n            </div>\\n\\n            <div class=\\\"panel-content-wrap\\\">\\n                <div class=\\\"panel-content details-panel\\\">\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap profile\\\">\\n                        <div class=\\\"settings-tabs-wrap\\\">\\n                            <div class=\\\"settings-tab settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"status\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"vcard-tab\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"password\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"blocklist\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"block_list\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"circles-groups\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"capabitilies\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab unregister-account settings-deletion-button settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"delete-account\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name settings-block-name-single one-line\\\">{[print(xabber.getString(\\\"settings_account__delete_account_subheader\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}' class=\\\"settings-block-wrap status\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"status-wrap setting\\\"></div>\\n                            <div class=\\\"status\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}' class=\\\"settings-block-wrap vcard-tab\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"vcard\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"block-list-view-wrap\\\">\\n                        <div data-header='{[print(xabber.getString(\\\"block_list\\\"))]}' data-parent-block=\\\"profile\\\" class=\\\"settings-block-wrap blocklist\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tabs-wrap\\\">\\n                                <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-contacts\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-cancel\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                                <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-domains\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web-cancel\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                                <div class=\\\"settings-tab hidden\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-invitations\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}' data-block-name=\\\"blocklist-contacts\\\" class=\\\"settings-block-wrap blocklist-contacts\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                            <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                        </div>\\n                                        <div class=\\\"blocked-items\\\">\\n                                            <div class=\\\"blocked-contacts-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                                            <div class=\\\"blocked-items-container blocked-contacts-wrap\\\" data-tab-name=\\\"contacts-item\\\">\\n                                                <div class=\\\"blocked-contacts blocked-list\\\"></div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}' data-block-name=\\\"blocklist-domains\\\" class=\\\"settings-block-wrap blocklist-domains\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                            <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                        </div>\\n                                        <div class=\\\"blocked-items\\\">\\n                                            <div class=\\\"blocked-domains-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_domains_empty\\\"))]}</div></div>\\n                                        <div class=\\\"blocked-items-container blocked-domains-wrap\\\" data-tab-name=\\\"domains-item\\\">\\n                                            <div class=\\\"blocked-domains blocked-list\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}' data-block-name=\\\"blocklist-invitations\\\" class=\\\"settings-block-wrap blocklist-invitations\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"blocklist-info\\\">\\n                                <div class=\\\"blocklist-wrap\\\">\\n                                    <div class=\\\"buttons-wrap\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                        <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                        <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                    </div>\\n                                    <div class=\\\"blocked-items\\\">\\n                                        <div class=\\\"blocked-invitations-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_invitations_empty\\\"))]}</div>\\n                                        <div class=\\\"blocked-items-container blocked-invitations-wrap\\\" data-tab-name=\\\"invitations-item\\\">\\n                                            <div class=\\\"blocked-invitations blocked-list\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap circles-groups\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"groups-info\\\">\\n                                <div class=\\\"groups-wrap\\\">\\n                                    <div class=\\\"groups\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}' class=\\\"settings-block-wrap capabitilies\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"server-info\\\">\\n                                <div class=\\\"capabilities-wrap\\\">\\n                                    <div class=\\\"capabilities\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                        <div class=\\\"color-scheme-wrap\\\">\\n                            <div class=\\\"account-color\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                            <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                            <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                            <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                            <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                            <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                            <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                            <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                            <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                            <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                            <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                            <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                            <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                            <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                            <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                            <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                            <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                            <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}' class=\\\"settings-block-wrap encryption\\\">\\n                        <div class=\\\"btn-more device-more-button dropdown-button\\\" data-activates=\\\"device-omemo-actions\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                        </div>\\n                        <ul id=\\\"device-omemo-actions\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                            <div class=\\\"property-variant btn-manage-devices\\\">\\n                                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"property-variant btn-purge-keys\\\">\\n                                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</span>\\n                            </div>\\n                        </ul>\\n                        <div class=\\\"omemo-settings-wrap\\\">\\n                            <div class=\\\"settings\\\">\\n                                <div class=\\\"setting-wrap omemo-enable\\\">\\n                                    <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                                    <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                        <label class=\\\"field-value\\\">\\n                                            <input type=\\\"checkbox\\\">\\n                                            <span class=\\\"lever\\\"></span>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"setting-wrap send-chat-states\\\">\\n                                    <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                                    <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                        <label class=\\\"field-value\\\">\\n                                            <input type=\\\"checkbox\\\">\\n                                            <span class=\\\"lever\\\"></span>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}' class=\\\"settings-block-wrap device-information hidden\\\">\\n                        <div class=\\\"device-information-trust-text-wrap\\\">\\n                            <div class=\\\"device-information-trust-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-wrap\\\">\\n                            <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}</div>\\n                            <div class=\\\"device-information-items-wrap device-information-basic\\\">\\n                                <div class=\\\"device-information-item device-information-status\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-last-seen\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label_last_seen\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-client\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"id\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__client__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-ip\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__ip__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-expires\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"expires\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__expire__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-panel-label device-information-security-label\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>\\n                            <div class=\\\"device-information-items-wrap device-information-encryption\\\">\\n                                <div class=\\\"device-information-item device-information-device-id\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"settings_account__device_information_device_id\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-fingerprint hidden\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"lock\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text device-information-fingerprint-text\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab device-information-trust settings-deletion-button\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-alert\\\" data-svgname=\\\"lock-alert\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-check\\\" data-svgname=\\\"lock-check\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-cross\\\" data-svgname=\\\"lock-cross\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-question\\\" data-svgname=\\\"lock-question\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__identity_verification\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab btn-revoke-token settings-deletion-button\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"device__info__terminate_session__button\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_add\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid\\\">\\n                        <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                        <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                            <div class=\\\"select-auth-xmpp-server\\\">\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                                <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                    <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"sign_in_domain\\\">\\n                                </div>\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                                </div>\\n                            </div>\\n                            <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                                <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"input-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-error login-password-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-description\\\"></div>\\n                <div class=\\\"login-step-wrap hidden\\\">\\n                    <div class=\\\"login-step connecting-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                    <div class=\\\"login-step credentials-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"login-form-server-features hidden\\\">\\n            <div class=\\\"register-form-step-wrap\\\">\\n                <div class=\\\"register-form-step-header\\\"></div>\\n            </div>\\n            <div class=\\\"login-server-features-wrap\\\">\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"server-features-error\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main one-line hidden btn-finish-log-in\\\"></button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span class=\\\"original-state\\\">{[print(xabber.getString(\\\"button_change_pass\\\"))]}</span>\\n        <span class=\\\"success-state hidden\\\">{[print(xabber.getString(\\\"password_changed_success\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content original-state\\\">\\n        <div class=\\\"change-password-fields\\\">\\n            <div class=\\\"block-subheader\\\">\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"hint_old_pass\\\"))]}</span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_old_pass\\\"))]}' id=\\\"old_password\\\" type=\\\"password\\\" name=\\\"old_password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"block-subheader\\\">\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"hint_new_pass\\\"))]}</span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key-variant\\\"></svg>\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_new_pass\\\"))]}' id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_confirm_pass\\\"))]}' id=\\\"password_confirm\\\" type=\\\"password\\\" name=\\\"password_confirm\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-change btn-flat btn-main original-state\\\" disabled>{[print(xabber.getString(\\\"button_change_pass\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel btn-finish-change success-state hidden\\\">{[print(xabber.getString(\\\"ok\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel original-state\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__dialog_change_password__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row login-form-field\\\">\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"jid\\\" type=\\\"text\\\" class=\\\"input-glow\\\" name=\\\"jid\\\" disabled readonly>\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"input-glow\\\" placeholder=\\\"{[print(xabber.getString('account_password'))]}\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-change\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"status_editor\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <li data-value=\\\"chat\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"chat\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"chat\\\"></span>\\n        </li>\\n        <li data-value=\\\"online\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"online\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"online\\\"></span>\\n        </li>\\n        <li data-value=\\\"away\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"away\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"away\\\"></span>\\n        </li>\\n        <li data-value=\\\"xa\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"xa\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"xa\\\"></span>\\n        </li>\\n        <li data-value=\\\"dnd\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"dnd\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"dnd\\\"></span>\\n        </li>\\n        <li data-value=\\\"offline\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"unavailable\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"offline\\\"></span>\\n        </li>\\n    </ul>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field status-message-wrap\\\">\\n                <span class=\\\"static-label\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_custom_status\\\"))]}</span>\\n                <input type=\\\"text\\\" class=\\\"status-message input-glow\\\">\\n                <i class=\\\"clear-input mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n            <div class=\\\"input-field checkbox-field no-padding\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in apply-to-all\\\" id=\\\"{{view.cid}}_apply_to_all\\\"/>\\n                <label for=\\\"{{view.cid}}_apply_to_all\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_apply_to_all\\\"))]}</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap settings-tab\\\" data-subblock-parent-name=\\\"devices\\\" data-block-name=\\\"device-information\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-icon-wrap\\\">\\n        <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-web\\\"></svg>\\n    </div>\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n        <div class=\\\"ip-address\\\">{{ip}}</div>\\n    </div>\\n    {[if (is_omemo) {]}\\n    <div class=\\\"device-encryption one-line active is-own\\\">\\n        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"security\\\"></svg>\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"media_gallery_delete_files_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"deletion-variants no-select\\\">\\n            <div class=\\\"delete-files-text-info\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_info_text\\\"))]}</div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"15\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-1\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_15_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"25\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-2\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_25_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"50\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-4\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_50_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"100\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-8\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_100_percent\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"media-gallery-delete-items-wrap hidden\\\">\\n            <div class=\\\"delete-files-preview-wrap media-gallery-items-wrap\\\">\\n                <div class=\\\"delete-files-text no-select\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_preview_text\\\"))]}</div>\\n                <div data-value=\\\"image\\\" class=\\\"setting-name header-setting no-select delete-files-images\\\">\\n                    {[print(xabber.getString(\\\"images\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-image hidden grid delete-files-images delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"video\\\" class=\\\"setting-name header-setting no-select delete-files-videos\\\">\\n                    {[print(xabber.getString(\\\"videos\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-video hidden grid delete-files-videos delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"voice\\\" class=\\\"setting-name header-setting no-select delete-files-voices\\\">\\n                    {[print(xabber.getString(\\\"vcard_type_voice\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-file hidden voice delete-files-voices delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"file\\\" class=\\\"setting-name header-setting no-select delete-files-files\\\">\\n                    {[print(xabber.getString(\\\"files\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-voice hidden file delete-files-files delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"no-files hidden\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-confirm btn-flat btn-main\\\">{[print(xabber.getString(\\\"delete\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{[print(xabber.getString(\\\"account_emoji_profile_image_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"emoji-profile-image\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar ground-color-green-100\\\" data-value=\\\"green\\\">\\n                <div class=\\\"chosen-emoji\\\" data-value=\\\"🐈\\\">🐈</div>\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"emoji-profile-colors\\\">\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-green-500 outline-color-green-500 chosen-background-color\\\" data-value=\\\"green\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-save\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n        <i class=\\\"close-modal mdi mdi-close mdi-24px\\\"></i>\\n    </div>\\n    <div class=\\\"emoji-picker-wrap no-select\\\">\\n\\n    </div>\\n</div>\\n\";","export default \"\\n{[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-tab{[if (i === 0){]} chosen-emoji-tab{[} else {]} hidden{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {[ for (var y = 0; y < tab.emojis.length; y++) { var emoji = tab.emojis[y] ]}\\n            <div class=\\\"emoji-picker-emoji\\\" data-value=\\\"{{emoji[0]}}\\\">\\n                <div>{{emoji[0]}}</div>\\n            </div>\\n        {[ } ]}\\n    </div>\\n{[ } ]}\\n<div class=\\\"emoji-picker-tabs\\\">\\n    {[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-bottom-tab-selector{[if (i === 0){]} chosen-emoji-selector{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {{tab.emojis[0][0]}}\\n    </div>\\n    {[ } ]}\\n</div>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n    <button class=\\\"btn-join-existing-chat btn-flat btn-dark btn-main\\\">join</button>\\n</div>\";","export default \"<div class=\\\"account-info-wrap\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <!--<div class=\\\"status\\\"></div>-->\\n    <div class=\\\"text-info-wrap\\\">\\n        <div class=\\\"nickname-wrap\\\">\\n            <div class=\\\"nickname one-line\\\"></div>\\n        </div>\\n        <div class=\\\"jid-wrap\\\">\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"field clickable-field enabled-state switch normal\\\">\\n    <label class=\\\"field-value\\\">\\n        <input type=\\\"checkbox\\\">\\n        <span class=\\\"lever\\\"></span>\\n    </label>\\n</div>\\n\";","export default \"<div class=\\\"gallery-wrap\\\">\\n    <!--<svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>-->\\n    <div class=\\\"gallery-storage-wrap\\\">\\n        <div class=\\\"storage-usage\\\"></div>\\n        <div class=\\\"storage-progress-bar\\\">\\n            <div class=\\\"storage-progress-images\\\"></div>\\n            <div class=\\\"storage-progress-videos\\\"></div>\\n            <div class=\\\"storage-progress-voices\\\"></div>\\n            <div class=\\\"storage-progress-files\\\"></div>\\n        </div>\\n        <div class=\\\"storage-labels\\\">\\n            <div class=\\\"storage-label storage-label-images\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"images\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-videos\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-voices\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-files\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"files\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"storage-usages\\\">\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-images hidden\\\" data-media-type=\\\"image\\\" data-header-text='{[print(xabber.getString(\\\"images\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"image\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_images_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-videos hidden\\\" data-media-type=\\\"video\\\" data-header-text='{[print(xabber.getString(\\\"videos\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file-video\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_videos_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-voices hidden\\\" data-media-type=\\\"voice\\\" data-header-text='{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file-audio\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_voice_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-files hidden\\\" data-media-type=\\\"file\\\" data-header-text='{[print(xabber.getString(\\\"files\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"files\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_files_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-avatars\\\" data-media-type=\\\"avatars\\\" data-header-text='{[print(xabber.getString(\\\"avatars\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_avatars_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab show-deletion settings-deletion-button\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"media-gallery-items-wrap hidden\\\">\\n    <div class=\\\"gallery-sticky-buttons\\\">\\n        <i class=\\\"btn-back-gallery sticky-item mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <i class=\\\"btn-close-selection sticky-item mdi mdi-24px mdi-close\\\"></i>\\n        <div class=\\\"sticky-item gallery-selection-head\\\"></div>\\n        <i class=\\\"btn-delete-selection sticky-item mdi mdi-24px mdi-delete\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-files zoom-gallery\\\">\\n    </div>\\n</div>\\n\\n\";","export default \"<div class=\\\"gallery-file{[if (file.is_avatar === 'True'){]} gallery-avatar{[}]}\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-file=\\\"{{file.file}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || file.media_type.includes('video'))){]}\\n        <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\" data-mfp-src=\\\"{{file.file}}\\\" src=\\\"{{file.thumbnail}}\\\" {[if (file.media_type && file.media_type.includes('image')){]}onerror=\\\"this.src = '{{file.file}}'; this.onerror = null;\\\" {[}]}>\\n    {[} else {]}\\n        {[if (svg_icon == 'file-audio' && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n                <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n            </div>\\n            <div class=\\\"gallery-file-audio-container\\\">\\n            </div>\\n        {[} else {]}\\n            <div class=\\\"gallery-file-placeholder-background\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n                <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n            </div>\\n        {[}]}\\n        <div class=\\\"gallery-file-title one-line\\\">\\n            {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span> <span class=\\\"gallery-file-date\\\">{{created_at}}</span>\\n        </div>\\n        {[if (duration && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-voice-file-duration\\\">\\n                0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n            </div>\\n        {[}]}\\n    {[}]}\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\"/>\\n        <label></label>\\n    </div>\\n    {[if (download_only){]}\\n        <div class=\\\"btn-download btn-more\\\">\\n            <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n                <i class=\\\"mdi mdi-24px mdi-download\\\"></i>\\n            </a>\\n        </div>\\n    {[} else {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{file.id}}-more\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul id=\\\"{{file.id}}-more\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n            <div class=\\\"property-variant btn-download\\\">\\n                {[print(xabber.getString(\\\"action_download\\\"))]}\\n            </div>\\n        </a>\\n        <div class=\\\"property-variant btn-delete\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete\\\"))]}</span>\\n        </div>\\n    </ul>\\n    {[}]}\\n</div>\";","export default \"<svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"ic-jabber\\\"></svg>\\n<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message one-line\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"\\n<div class=\\\"left-column settings-column noselect\\\">\\n    <div class=\\\"settings-account-head\\\">\\n        <svg class=\\\"btn-add-account mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"contact-add\\\"></svg>\\n        <div class=\\\"name one-line\\\"></div>\\n        <svg class=\\\"btn-color-picker dropdown-button mdi mdi-24px mdi-svg-template\\\" data-activates=\\\"color-picker-dropdown\\\" data-svgname=\\\"palette\\\"></svg>\\n        <ul id=\\\"color-picker-dropdown\\\" class=\\\"dropdown-content color-picker-dropdown bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"red\\\">\\n                <span class=\\\"one-line text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"pink\\\">\\n                <span class=\\\"one-line text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"purple\\\">\\n                <span class=\\\"one-line text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-purple\\\">\\n                <span class=\\\"one-line text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"indigo\\\">\\n                <span class=\\\"one-line text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue\\\">\\n                <span class=\\\"one-line text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-blue\\\">\\n                <span class=\\\"one-line text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"cyan\\\">\\n                <span class=\\\"one-line text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"teal\\\">\\n                <span class=\\\"one-line text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"green\\\">\\n                <span class=\\\"one-line text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-green\\\">\\n                <span class=\\\"one-line text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"lime\\\">\\n                <span class=\\\"one-line text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"amber\\\">\\n                <span class=\\\"one-line text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"orange\\\">\\n                <span class=\\\"one-line text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-orange\\\">\\n                <span class=\\\"one-line text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"brown\\\">\\n                <span class=\\\"one-line text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue-grey\\\">\\n                <span class=\\\"one-line text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n        </ul>\\n        <svg class=\\\"btn-qr-code mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        <div class=\\\"field clickable-field enabled-state switch normal\\\">\\n            <label class=\\\"field-value\\\">\\n                <input type=\\\"checkbox\\\">\\n                <span class=\\\"lever\\\"></span>\\n            </label>\\n        </div>\\n    </div>\\n    <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <img/>\\n                    <input type=\\\"file\\\"/>\\n                    <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                        <div class=\\\"btn-emoji-panel property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                        </div>\\n                        <div class=\\\"btn-selfie property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                        </div>\\n                        <div class=\\\"btn-choose-image property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                        </div>\\n                    </ul>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"name one-line\\\"></div>\\n        <div class=\\\"jid one-line\\\"></div>\\n    </div>\\n    <div class=\\\"settings-tabs-wrap\\\">\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"profile\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__profile_label\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cloud\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"encryption\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}</div>\\n            <div class=\\\"settings-block-label hidden label-encryption-enabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_enabled_label\\\"))]}</div>\\n            <div class=\\\"settings-block-label label-encryption-disabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_disabled_label\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"devices\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"devices\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__devices_subheader\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"right-column settings-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <i class=\\\"btn-back-settings mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <i class=\\\"btn-back-subsettings-account mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n        <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n        <i class=\\\"btn-sorting dropdown-button mdi mdi-24px mdi-sort hidden\\\" data-activates=\\\"storage-file-sorting\\\"></i>\\n        <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n            </div>\\n        </ul>\\n        <div class=\\\"btn-more media-gallery-button dropdown-button hidden\\\" data-activates=\\\"storage-actions\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n            <div class=\\\"property-variant btn-select-files hidden\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_select_files\\\"))]}</span>\\n            </div>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content details-panel\\\">\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__devices_subheader\\\"))]}' class=\\\"settings-block-wrap devices\\\">\\n                <div class=\\\"devices-wrap hidden\\\">\\n                    <div class=\\\"device-encryption-warning hidden\\\" data-not-trusted-count=\\\"0\\\">\\n                        <svg class=\\\"device-encryption-icon mdi mdi-40px mdi-svg-template\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n                        <div class=\\\"device-encryption-warning-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_warning_header\\\"))]}</div>\\n                        <div class=\\\"device-encryption-warning-label\\\"></div>\\n                    </div>\\n                    <div class=\\\"tokens-wrap\\\">\\n                        <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n                        <div class=\\\"current-token-wrap\\\">\\n                            <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                            <div class=\\\"btn-revoke-all-tokens settings-button-devices\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg>\\n                                <div class=\\\"settings-button-devices-label\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-panel-label active-sessions-label\\\">{[print(xabber.getString(\\\"settings_account__label_active_sessions\\\"))]}</div>\\n                        <div class=\\\"all-sessions-wrap\\\">\\n                            <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"orphaned-fingerprints hidden\\\">\\n                            <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                            <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap profile\\\">\\n                <div class=\\\"settings-tabs-wrap\\\">\\n                    <div class=\\\"settings-tab settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"status\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"vcard-tab\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"password\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"blocklist\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"block_list\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"circles-groups\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"capabitilies\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab unregister-account settings-deletion-button settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"delete-account\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name settings-block-name-single one-line\\\">{[print(xabber.getString(\\\"settings_account__delete_account_subheader\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}' class=\\\"settings-block-wrap status\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"status-wrap setting\\\"></div>\\n                    <div class=\\\"status\\\"></div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}' class=\\\"settings-block-wrap vcard-tab\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"vcard\\\">\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"block-list-view-wrap\\\">\\n                <div data-header='{[print(xabber.getString(\\\"block_list\\\"))]}' data-parent-block=\\\"profile\\\" class=\\\"settings-block-wrap blocklist\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-tabs-wrap\\\">\\n                        <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-contacts\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-cancel\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                        <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-domains\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web-cancel\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                        <div class=\\\"settings-tab hidden\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-invitations\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}' data-block-name=\\\"blocklist-contacts\\\" class=\\\"settings-block-wrap blocklist-contacts\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                    <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                    <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                </div>\\n                                <div class=\\\"blocked-items\\\">\\n                                    <div class=\\\"blocked-contacts-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                                    <div class=\\\"blocked-items-container blocked-contacts-wrap\\\" data-tab-name=\\\"contacts-item\\\">\\n                                        <div class=\\\"blocked-contacts blocked-list\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}' data-block-name=\\\"blocklist-domains\\\" class=\\\"settings-block-wrap blocklist-domains\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                    <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                    <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                </div>\\n                                <div class=\\\"blocked-items\\\">\\n                                    <div class=\\\"blocked-domains-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_domains_empty\\\"))]}</div></div>\\n                                <div class=\\\"blocked-items-container blocked-domains-wrap\\\" data-tab-name=\\\"domains-item\\\">\\n                                    <div class=\\\"blocked-domains blocked-list\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}' data-block-name=\\\"blocklist-invitations\\\" class=\\\"settings-block-wrap blocklist-invitations\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"blocklist-info\\\">\\n                        <div class=\\\"blocklist-wrap\\\">\\n                            <div class=\\\"buttons-wrap\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                            </div>\\n                            <div class=\\\"blocked-items\\\">\\n                                <div class=\\\"blocked-invitations-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_invitations_empty\\\"))]}</div>\\n                                <div class=\\\"blocked-items-container blocked-invitations-wrap\\\" data-tab-name=\\\"invitations-item\\\">\\n                                    <div class=\\\"blocked-invitations blocked-list\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap circles-groups\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"groups-info\\\">\\n                        <div class=\\\"groups-wrap\\\">\\n                            <div class=\\\"groups\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}' class=\\\"settings-block-wrap capabitilies\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"server-info\\\">\\n                        <div class=\\\"capabilities-wrap\\\">\\n                            <div class=\\\"capabilities\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                <div class=\\\"color-scheme-wrap\\\">\\n                    <div class=\\\"account-color\\\">\\n                        <div class=\\\"field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                    <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                    <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                    <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                    <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                    <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                    <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                    <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                    <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                    <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                    <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                    <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                    <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                    <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                    <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                    <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                    <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                    <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}' class=\\\"settings-block-wrap encryption\\\">\\n                <div class=\\\"btn-more device-more-button dropdown-button\\\" data-activates=\\\"device-omemo-actions\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                </div>\\n                <ul id=\\\"device-omemo-actions\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant btn-manage-devices\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant btn-purge-keys\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <div class=\\\"omemo-settings-wrap\\\">\\n                    <div class=\\\"settings\\\">\\n                        <div class=\\\"setting-wrap omemo-enable\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                            <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap send-chat-states\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                            <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}' class=\\\"settings-block-wrap device-information hidden\\\">\\n                <div class=\\\"device-information-trust-text-wrap\\\">\\n                    <div class=\\\"device-information-trust-text\\\"></div>\\n                </div>\\n                <div class=\\\"device-information-wrap\\\">\\n                    <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}</div>\\n                    <div class=\\\"device-information-items-wrap device-information-basic\\\">\\n                        <div class=\\\"device-information-item device-information-status\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-last-seen\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label_last_seen\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-client\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"id\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__client__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-ip\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__ip__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-expires\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"expires\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__expire__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-panel-label device-information-security-label\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>\\n                    <div class=\\\"device-information-items-wrap device-information-encryption\\\">\\n                        <div class=\\\"device-information-item device-information-device-id\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"settings_account__device_information_device_id\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-fingerprint hidden\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"lock\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}</div>\\n                            <div class=\\\"device-information-text device-information-fingerprint-text\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-tab device-information-trust settings-deletion-button\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-alert\\\" data-svgname=\\\"lock-alert\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-check\\\" data-svgname=\\\"lock-check\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-cross\\\" data-svgname=\\\"lock-cross\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-question\\\" data-svgname=\\\"lock-question\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__identity_verification\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab btn-revoke-token settings-deletion-button\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"device__info__terminate_session__button\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input input-glow field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap settings-tab\\\" data-subblock-parent-name=\\\"devices\\\" data-block-name=\\\"device-information\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-icon-wrap\\\">\\n        {[if (device && (device.indexOf('Android') > -1 || device.indexOf('iOS') > -1)){]}\\n            <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-cellphone\\\"></svg>\\n        {[} else {]}\\n            <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-web\\\"></svg>\\n        {[}]}\\n    </div>\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n        <div class=\\\"ip-address\\\">{{ip}} • {[ if (resource_obj) {]}{[print(xabber.getString(\\\"account_state_connected\\\"))]}{[} else {]}{{last_auth}}{[}]}</div>\\n    </div>\\n    <div class=\\\"device-encryption one-line\\\">\\n        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"security\\\"></svg>\\n    </div>\\n</div>\";","export default \"<div class=\\\"border ground-color-500\\\"></div>\\n<div class=\\\"account-item-avatar-wrap\\\">\\n    <div class=\\\"circle-avatar-wrap\\\">\\n        <div class=\\\"dropdown-button circle-avatar border-color noselect\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"status\\\"></div>\\n<i class=\\\"auth-failed mdi mdi-16px mdi-close\\\"></i>\\n<div class=\\\"account-actions-panel\\\">\\n    <div class=\\\"filter-chats\\\">\\n        <i class=\\\"mdi mdi-filter mdi-20px\\\"></i>\\n        <div class=\\\"text\\\">{[print(xabber.getString(\\\"account__toolbar_item__button_filter_chats\\\"))]}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header no-select\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__delete_account_modal_title\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n        <div class=\\\"modal-description-text no-select\\\">{[print(xabber.getString(\\\"settings_account__delete_account_modal_text\\\"))]}</div>\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field checkbox-field\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"confirm_unregister_1\\\"/>\\n                        <label for=\\\"confirm_unregister_1\\\">{[print(xabber.getString(\\\"settings_account__checkbox_confirm_unregister_text_1\\\"))]}</label>\\n                    </div>\\n                    <div class=\\\"input-field checkbox-field\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"confirm_unregister_2\\\"/>\\n                        <label for=\\\"confirm_unregister_2\\\">{[print(xabber.getString(\\\"settings_account__checkbox_confirm_unregister_text_2\\\"))]}</label>\\n                    </div>\\n                    <div class=\\\"input-field password-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"settings_account__delete_account_modal_password_placeholder_text\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                        <div class=\\\"login-form-step-error login-password-error\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"login-confirm-form-step-wrap hidden\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid input-field-jid-borders\\\">\\n                        <input id=\\\"jid\\\" type=\\\"text\\\" name=\\\"jid\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"account_delete\\\"))]}</button>\\n        <button disabled class=\\\"btn-flat btn-main btn-submit-unregister hidden\\\">{[print(xabber.getString(\\\"account_delete\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"take_photo\\\"))]}</span>\\n    </div>\\n    <div class=\\\"webcam-profile-image-wrap\\\">\\n        <div class=\\\"camera\\\">\\n            <video class=\\\"webcam-video\\\">Video stream not available.</video>\\n        </div>\\n        <canvas id=\\\"canvas\\\" style=\\\"display: none;\\\">\\n        </canvas>\\n        <div class=\\\"output hidden\\\">\\n            <div class=\\\"webcam-photo-wrap\\\">\\n                <img class=\\\"webcam-photo\\\" alt=\\\"The screen capture will appear in this box.\\\">\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera-retake\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-take-photo\\\">{[print(xabber.getString(\\\"capture\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-save hidden\\\">{[print(xabber.getString(\\\"account_webcam_profile_image_btn_save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-intro\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n        <span class=\\\"client-description\\\">{{SHORT_CLIENT_DESCRIPTION}}</span>\\n    </div>\\n    <div class=\\\"login-buttons\\\">\\n        <div class=\\\"btn-flat btn-main btn-register-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</div>\\n        <div class=\\\"btn-flat btn-main btn-login-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_in\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-form xmpp-login-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back-menu mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-jid\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"dialog_jingle_message__message_connect\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field input-field-jid\\\">\\n                    <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                    <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                        <div class=\\\"select-auth-xmpp-server\\\">\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                            <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' value=\\\"111111\\\" name=\\\"sign_in_domain\\\">\\n                            </div>\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                            <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-error login-jid-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-error login-password-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-description\\\"></div>\\n            <div class=\\\"login-step-wrap hidden\\\">\\n                <div class=\\\"login-step connecting-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n                <div class=\\\"login-step credentials-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"login-form-server-features hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\"></div>\\n        </div>\\n        <div class=\\\"login-server-features-wrap\\\">\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"server-features-error\\\"></div>\\n    </div>\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-sign-up-instead\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-finish-log-in\\\"></button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n<div class=\\\"login-panel-form register-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_register_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-skip hidden\\\">{[print(xabber.getString(\\\"skip\\\"))]}</div>\\n    <div class=\\\"register-form-nickname\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_nickname\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_nickname\\\" placeholder='{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}' type=\\\"text\\\" name=\\\"register_nickname\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_nickname\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-jid hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_jid\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_jid\\\" placeholder='{[print(xabber.getString(\\\"hint_username\\\"))]}' type=\\\"text\\\" name=\\\"register_jid\\\">\\n                </div>\\n                <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                    <div class=\\\"select-xmpp-server\\\">\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                        <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                            <input id=\\\"new_account_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"register_domain\\\">\\n                        </div>\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                            <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                            <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                        <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_jid\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-password hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_password\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"register_password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_password\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-picture hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_avatar\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"avatar-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <div class=\\\"circle-avatar\\\">\\n                        <input id=\\\"register_picture\\\"  title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"circle-icon\\\">\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    {[if (xabber.url_params && xabber.url_params.rkey){]}\\n        <div class=\\\"login-form-url\\\">\\n            <i class=\\\"mdi login-form-url-icon mdi-link-variant\\\"></i>\\n            <div class=\\\"login-form-url-text\\\">\\n                {[print(xabber.getString(\\\"xmpp_login__registration_via_link\\\"))]}\\n            </div>\\n        </div>\\n    {[}]}\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-next\\\">{[print(xabber.getString(\\\"xaccount_next\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main btn-skip\\\">{[print(xabber.getString(\\\"xmpp_login__registration_skip\\\"))]}</button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\";","export default \"<div class=\\\"left-column noselect\\\">\\n    <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n        </div>\\n        <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n        <div class=\\\"version\\\"></div>\\n    </div>\\n</div>\\n</div>\\n\\n<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span>{[print(xabber.getString(\\\"category_about\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content\\\">\\n            <div class=\\\"settings-block-wrap about\\\">\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_1\\\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_2\\\", [`<a href=\\\"${CLIENT_URL}\\\" target=\\\"_blank\\\">${CLIENT_URL}</a>`]))]}</div>\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__text\\\"))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__text\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_name\\\")}</a>`, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_2\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_3\\\"))]}</div>\\n                <div class=\\\"block-content flex-content\\\">\\n                    <img class=\\\"logo\\\" src=\\\"images/redsolution-logo.png\\\"/>\\n                    <a href=\\\"https://twitter.com/Xabber_XMPP\\\" target=\\\"_blank\\\"><div class=\\\"btn-social twitter-color\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div></a>\\n                    <a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\"><img class=\\\"btn-social github-logo\\\" src=\\\"images/ic_github.png\\\"/></a>\\n                </div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_1\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_2\\\", [`<a href=\\\"${PROJECT_CROWDIN_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_4__text_2__link__text\\\", [constants.SHORT_CLIENT_NAME])}</a>`]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_1__link__text\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_2\\\"))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_3\\\", [constants.SHORT_CLIENT_NAME, xabber.getString(\\\"client_developer_company_name\\\"), `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_full_name\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_4\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_LICENSE_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_4__link__text\\\")}</a>`]))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n<div class=\\\"material-color-picker-wrap\\\">\\n    <div class=\\\"material-color-picker\\\">\\n        {[materialColors.forEach(function (color) {]}\\n        <div data-color-name=\\\"{{color.color}}\\\" class=\\\"color-palette-wrapper\\\">\\n            {[var default_color = color.variations.find(v => v.weight == 500);]}\\n            <div data-weight=\\\"500\\\" data-hex=\\\"{{default_color.hex}}\\\" style=\\\"background-color: {{default_color.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[color.variations.forEach(function (variation) {]}\\n            <div data-weight=\\\"{{variation.weight}}\\\" data-hex=\\\"{{variation.hex}}\\\" style=\\\"background-color: {{variation.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[})]}\\n        </div>\\n        {[})]}\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"hidden selected-color-wrap\\\">\\n        <div class=\\\"selected-color-item\\\"></div>\\n        <div class=\\\"selected-color-info\\\">\\n            <div class=\\\"selected-color-name\\\"></div>\\n            <div class=\\\"selected-color-hex\\\"></div>\\n            <input class=\\\"selected-color-hex-input hidden\\\"/>\\n        </div>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-set\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<ul class=\\\"color-values noselect\\\">\\n    <li class=\\\"color-value\\\" data-value=\\\"red\\\">\\n        <div class=\\\"color-name text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-red-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"pink\\\">\\n        <div class=\\\"color-name text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-pink-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"purple\\\">\\n        <div class=\\\"color-name text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-purple\\\">\\n        <div class=\\\"color-name text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"indigo\\\">\\n        <div class=\\\"color-name text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-indigo-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue\\\">\\n        <div class=\\\"color-name text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-blue\\\">\\n        <div class=\\\"color-name text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"cyan\\\">\\n        <div class=\\\"color-name text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-cyan-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"teal\\\">\\n        <div class=\\\"color-name text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-teal-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"green\\\">\\n        <div class=\\\"color-name text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-green\\\">\\n        <div class=\\\"color-name text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"lime\\\">\\n        <div class=\\\"color-name text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-lime-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"amber\\\">\\n        <div class=\\\"color-name text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-amber-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"orange\\\">\\n        <div class=\\\"color-name text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-orange\\\">\\n        <div class=\\\"color-name text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"brown\\\">\\n        <div class=\\\"color-name text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-brown-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue-grey\\\">\\n        <div class=\\\"color-name text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-grey-700\\\"></div>\\n    </li>\\n</ul>\";","export default \"<div class=\\\"modal dialog-modal {{modal_class}}\\\">\\n    <div class=\\\"modal-header\\\">\\n        <div class=\\\"panel-header black-text\\\">{{header}}</div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{{text}}</div>\\n        <div class=\\\"dialog-options-wrap\\\">\\n        {[ for (var idx in dialog_options) { var option = dialog_options[idx]; ]}\\n            <div class=\\\"dialog-option\\\" data-name=\\\"{{option.name}}\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"dialog_option_{{option.name}}\\\" {[ if (option.checked) { ]}checked=\\\"checked\\\"{[ } ]}/>\\n                <label for=\\\"dialog_option_{{option.name}}\\\">{{option.text}}</label>\\n            </div>\\n        {[ } ]}\\n        </div>\\n        <div class=\\\"container-for-img hidden\\\"><img class=\\\"img-from-clipboard\\\"></div>\\n    </div>\\n    <div class=\\\"modal-footer {{flag}}\\\">\\n        {[ for (var idx in optional_buttons) { var button = optional_buttons[idx]; ]}\\n        <button class=\\\"optional-button btn-flat btn-main\\\" data-option=\\\"{{button.value}}\\\">{{button.name}}</button>\\n        {[ } ]}\\n        {[ if (ok_button) { ]}\\n        <button class=\\\"ok-button btn-flat btn-main\\\" data-option=true>{{ok_button.text}}</button>\\n        {[ } ]}\\n        {[ if (cancel_button) { ]}\\n        <button class=\\\"cancel-button btn-flat btn-main btn-dark btn-cancel\\\" data-option=false>{{cancel_button.text}}</button>\\n        {[ } ]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"fingerprint-content\\\">\\n    {[if (svg_icon){]}\\n        <div class=\\\"fingerprint-device-icon\\\">\\n            <svg class=\\\"mdi mdi-72px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        </div>\\n    {[}]}\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"fingerprint-label\\\">\\n            <div class=\\\"value\\\">{{label}}</div>\\n        </div>\\n    </div>\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"device-id\\\">\\n            <div class=\\\"value\\\">{{id}}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint device-fingerprints-part\\\">\\n            <div class=\\\"label\\\">\\n                {[if (!edit_setting) {]}\\n                    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__other_fingerprint_label\\\"))]}\\n                {[} else {]}\\n                <span class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</span> {[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}\\n                {[}]}</div>\\n            <div class=\\\"value\\\">{{fingerprint}}</div>\\n        </div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n</div>\\n<div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n    {[if (trust !== null && !error) {]}\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n        <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n            <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_verify_device`))]}</div>\\n        </div>\\n    </div>\\n    <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content bootstrap-dropdown noselect fingerprint-dropdown\\\">\\n        <div data-value=\\\"ignore\\\" class=\\\"property-variant btn-ignore\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n        <div data-value=\\\"trust\\\" class=\\\"property-variant btn-trust\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"row\\\">\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap\\\">\\n        {[if (edit_setting) {]}\\n        <input class=\\\"hidden set-label one-line\\\" {[if (label) {]}value=\\\"{{label}}\\\"{[}]}>{[}]}\\n        {[if (label) {]}<div class=\\\"one-line label\\\">{{label}}</div>{[}]}\\n        <div class=\\\"device-id one-line\\\">{{id}}</div>\\n        {[if (!label) {]}<div class=\\\"device-id-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_device_id\\\"))]}</div>{[}]}\\n        {[if (edit_setting) {]}<div class=\\\"set-label-label hidden\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_set_label\\\"))]}</div>{[}]}\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint\\\">{{fingerprint}}</div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n    <div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n        {[if (trust !== null && !error) {]}\\n        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n            <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n                <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_${trust}`))]}</div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content noselect fingerprint-dropdown\\\">\\n            <div data-value=\\\"ignore\\\" class=\\\"btn-main text-color-grey-500 btn-ignore btn-flat\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n            <div data-value=\\\"trust\\\" class=\\\"btn-main btn-flat btn-trust text-color-green-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n            {[if (delete_button){]}\\n            <div class=\\\"btn-main btn-flat btn-delete text-color-red-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_delete\\\"))]}</div>\\n            {[}]}\\n        </div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"additional-info\\\"></div>\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"this-device-wrap\\\">\\n        <div class=\\\"this-device-header-wrap\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"this-device-header\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</div>\\n        </div>\\n        <div class=\\\"this-device-content\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprints-description-wrap\\\">\\n        <div class=\\\"fingerprints-description\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_description\\\"))]}</div>\\n        <div class=\\\"link-about-encryption\\\"><a href=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__link_learn_more'))]}\\\" target=\\\"_blank\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_learn_more\\\"))]}</a></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__device_verification_label\\\"))]}\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n    <div class=\\\"other-device-content\\\">\\n\\n    </div>\\n    <div class=\\\"this-device-content\\\">\\n\\n    </div>\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"fingerprints-help-text\\\">\\n        {[print(xabber.getString(\\\"omemo__dialog_fingerprints__bottom_help_text\\\"))]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}} field-text one-line\\\"></div>\\n    <div class=\\\"btn-rename\\\">\\n        <span>{[print(xabber.getString(\\\"input_widget__button_rename\\\"))]}</span>\\n    </div>\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input field-input hidden\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"collapsed-movable\\\"></div>\\n<i class=\\\"mdi mdi-phone btn-collapse\\\"></i>\\n<div class=\\\"call-header\\\">\\n    {[print(xabber.getString(\\\"dialog_jingle_message__header\\\", [SHORT_CLIENT_NAME]))]}\\n    <div class=\\\"calling-status\\\"></div>\\n</div>\\n<div class=\\\"blur-background\\\"></div>\\n<div class=\\\"contact-info\\\">\\n    <div class=\\\"name one-line\\\"></div>\\n    <div class=\\\"calling-status\\\"></div>\\n</div>\\n<div class=\\\"video-wrap\\\">\\n    <video autoplay loop class=\\\"blank-video hidden\\\">\\n        <source src=\\\"{{BLANK_VIDEO.MP4}}\\\">\\n        <source src=\\\"{{BLANK_VIDEO.OGG}}\\\" type=\\\"video/ogg\\\">\\n        <source src=\\\"{{BLANK_VIDEO.WEBM}}\\\" type=\\\"video/webm\\\">\\n    </video>\\n    <audio autoplay class=\\\"webrtc-remote-audio hidden\\\"></audio>\\n    <video autoplay muted class=\\\"webrtc-local-video collapsed hidden\\\"></video>\\n    <div class=\\\"default-screen\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"name one-line\\\"></div>\\n    </div>\\n</>\\n<div class=\\\"buttons-panel\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"btn-wrap\\\" title=\\\"Collapse window\\\"><svg class=\\\"btn-collapse mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M19.5,3.09L15,7.59V4H13V11H20V9H16.41L20.91,4.5L19.5,3.09M4,13V15H7.59L3.09,19.5L4.5,20.91L9,16.41V20H11V13H4Z\\\"></path>\\n        </svg></div>\\n        <div class=\\\"btn-wrap\\\" title=\\\"Fullscreen mode\\\"><svg class=\\\"btn-full-screen mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M11,21H3V13H5V17.59L17.59,5H13V3H21V11H19V6.41L6.41,19H11V21Z\\\" />\\n        </svg></div>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute_microphone__tooltip\\\"))]}' class=\\\"btn-microphone mdi mdi-24px mdi-microphone\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_switch_video__tooltip\\\"))]}' class=\\\"btn-video mdi mdi-24px mdi-video\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute__tooltip\\\"))]}' class=\\\"btn-volume mdi mdi-24px mdi-volume-high\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_share_screen__tooltip\\\"))]}' class=\\\"btn-share-screen mdi mdi-24px mdi-monitor\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_accept_call__tooltip\\\"))]}' class=\\\"btn-accept mdi mdi-24px mdi-phone\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_decline_call__tooltip\\\"))]}' class=\\\"btn-cancel mdi mdi-24px mdi-phone-hangup\\\"></i>\\n    </div>\\n</div>\";","export default \"<div class=\\\"msg-text ground-color-300\\\">\\n    <span title=\\\"{[print(xabber.getString('omemo__alert_enable__tooltip'))]}\\\" class=\\\"btn-enable\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</span> {[print(xabber.getString(\\\"omemo__alert_enable__text\\\", [jid]))]}</div>\\n<i class=\\\"mdi mdi-22px mdi-close btn-escape\\\"></i>\\n<button class=\\\"btn-enable btn-flat hover-ground-color-500 btn-dark btn-main\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</button>\";","export default \"<div class=\\\"plyr-player-popup-container\\\">\\n    <div class=\\\"plyr-player-popup-draggable\\\">\\n        <video class=\\\"plyr-player-popup\\\"></video>\\n        <div class=\\\"plyr-player-min-controls-tab\\\">\\n            <div class=\\\"plyr-player-min-controls-buttons\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-minimize-full mdi-svg-template\\\" data-svgname=\\\"player-full\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-play mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-pause mdi-svg-template\\\" data-svgname=\\\"pause\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-mute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-off\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-unmute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-high\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"plyr-player-control-tab\\\">\\n    <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n    <svg class=\\\"mdi mdi-24px mdi-plyr-toolbar-item mdi-plyr-hide mdi-svg-template\\\" data-svgname=\\\"player-mini\\\"></svg>\\n</div>\";","export default \"<div class=\\\"emoji-font-field\\\">\\n    <input class=\\\"with-gap\\\" name=\\\"{{input_name}}\\\" value=\\\"{{value}}\\\" type=\\\"radio\\\" id=\\\"{{input_id}}\\\" />\\n    <label class=\\\"one-line\\\" for=\\\"{{input_id}}\\\">{{label}}</label>\\n    {[ if (hint) {]}<div class=\\\"emoji-hint\\\">{{hint}}</div>{[}]}\\n    {[ if (value === 'system') {]}<div class=\\\"emoji-hint\\\">{[print(xabber.getString(\\\"settings__menu_item__emoji_font_system_label\\\"))]}</div>{[}]}\\n</div>\";","export default \"<div class=\\\"language-item\\\">\\n    <input class=\\\"with-gap\\\" name=\\\"{{input_name}}\\\" value=\\\"{{value}}\\\" type=\\\"radio\\\" id=\\\"{{input_id}}\\\" />\\n    <label for=\\\"{{input_id}}\\\">{{label}}</label>\\n    {[ if (progress && progress.text) {]}<div class=\\\"translation-progress\\\">{{progress.text}}</div>{[}]}\\n</div>\";","export default \"<p>\\n    <input class=\\\"with-gap\\\" name=\\\"{{input_name}}\\\" value=\\\"{{value}}\\\" type=\\\"radio\\\" id=\\\"{{input_id}}\\\" />\\n    <label for=\\\"{{input_id}}\\\">{{label}}</label>\\n</p>\";","export default \"    <div class=\\\"left-column noselect\\\">\\n        <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n            <div class=\\\"picture-wrap\\\">\\n                <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n            </div>\\n            <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n            <div class=\\\"version\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            {[if (ENABLE_XABBER_ACCOUNT) {]}\\n            <div class=\\\"settings-tab xabber-account-tab offline\\\" data-block-name=\\\"xabber-account\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-offline-icon\\\" data-svgname=\\\"xabber-offline\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-online-icon\\\" data-svgname=\\\"xabber-online\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</div>\\n            </div>\\n            {[}]}\\n            <div class=\\\"settings-tab active\\\" data-block-name=\\\"xmpp-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-lightbulb\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                <i class=\\\"mdi mdi-24px mdi-incognito\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n            </div>\\n            {[if (PERSONAL_AREA_URL && Object.keys(PERSONAL_AREA_URL).length) {]}\\n            <a href=\\\"{{PERSONAL_AREA_URL.url}}\\\" target=\\\"_blank\\\"><div class=\\\"link-button settings-tab\\\" data-block-name=\\\"{{PERSONAL_AREA_URL.label}}\\\">\\n                <i class=\\\"mdi mdi-24px mdi-{{PERSONAL_AREA_URL.icon_name}}\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{{PERSONAL_AREA_URL.label}}</div>\\n            </div>\\n            </a>\\n            {[}]}\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap settings-tabs-wrap\\\">\\n            <div class=\\\"settings-tab delete-all-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n            <button class=\\\"btn-add-account btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</button>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content\\\">\\n                {[if (ENABLE_XABBER_ACCOUNT) {]}\\n                <div data-block-name=\\\"\\\" class=\\\"settings-block-wrap xabber-account\\\">\\n                    <div class=\\\"block-header\\\">\\n                        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</span>\\n                    </div>\\n                </div>\\n                {[}]}\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}' class=\\\"settings-block-wrap xmpp-accounts\\\">\\n                    <div class=\\\"setting xmpp-account-list\\\">\\n                        <div class=\\\"accounts-head-wrap\\\">\\n                            <div class=\\\"accounts-head xmppid-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_xmpp_id\\\"))]}</div>\\n                            <div class=\\\"accounts-head sync-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_sync\\\"))]}</div>\\n                            <div class=\\\"accounts-head enabled-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_enabled\\\"))]}</div>\\n                        </div>\\n                        <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n                        <div class=\\\"move-account-to-bottom droppable\\\"></div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__palette\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                <div class=\\\"current-main-color-wrap\\\">\\n                                    <div class=\\\"current-main-color ground-color-500\\\"></div>\\n                                    <div class=\\\"color-name\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"toolbar-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-color-setting field-wrap\\\">\\n                                <div class=\\\"selected-color-wrap\\\">\\n                                    <div class=\\\"selected-color-item\\\"></div>\\n                                    <div class=\\\"selected-color-info\\\">\\n                                        <div class=\\\"selected-color-name\\\"></div>\\n                                        <div class=\\\"selected-color-hex\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"account_settings_background\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"background-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</div>\\n                            <div class=\\\"setting background radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                                <div class=\\\"current-background-wrap\\\">\\n                                    <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                    <div class=\\\"current-background\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"blur-setting-wrap\\\">\\n                                <div class=\\\"setting blur-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                        <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"vignetting-setting-wrap\\\">\\n                                <div class=\\\"setting vignetting-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                        <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                        <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                        <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_contact_list\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"circle-avatar noselect\\\"></div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                        <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                        <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                        <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                        <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                        <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}'  class=\\\"settings-block-wrap notifications hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting idling field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"idling\\\"/>\\n                                <label for=\\\"idling\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_idling\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                        <div class=\\\"setting volume-setting\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-volume-low\\\"></i>\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"disabled hidden\\\"></div>\\n                                <p class=\\\"range-field\\\">\\n                                    <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                </p>\\n                            </form>\\n                            <i class=\\\"mdi mdi-24px mdi-volume-high\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting private-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"private-notifications\\\"/>\\n                                <label for=\\\"private-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview private-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting group-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"group-notifications\\\"/>\\n                                <label for=\\\"group-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview group-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-call\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-call\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-connecting\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-connecting\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting call-attention field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"call_attention\\\"/>\\n                                <label for=\\\"call_attention\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_call_attention\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                    <div class=\\\"setting load-media field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                            <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting typing-notifications field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                            <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting mapping-service field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                            <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                    <div class=\\\"setting interface-language-setting\\\">\\n                        <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default\\\" />\\n                                    <label for=\\\"{{view.cid}}-default\\\">{[print(xabber.getString(\\\"settings__languages_list___item_default\\\", [languages[xabber.get(\\\"default_language\\\") || 'en']]))]}</label>\\n                                </div>\\n                                {[if (window.navigator.language.indexOf(xabber.get(\\\"default_language\\\")) < 0) {]}\\n                                {[}]}\\n                                {[for (let lang in constants.languages) { if (!lang || lang == xabber.get(\\\"default_language\\\")) continue;]}\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"{{lang}}\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-{{lang}}\\\" />\\n                                    <label for=\\\"{{view.cid}}-{{lang}}\\\">{[print(constants.languages[lang]);]}</label>\\n                                    {[let locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));]}\\n                                    {[if (locale) { let progress = client_translation_progress[locale];]}<div class=\\\"translation-progress\\\">{[print((progress == 100) ? xabber.getString(\\\"settings__section_interface_language__translation_progress_fully\\\") : xabber.getString(\\\"settings__section_interface_language__translation_progress\\\", [`${progress}%`]))]}</div>{[}]}\\n                                </div>\\n                                {[}]}\\n                            </form>\\n                        </div>\\n                        <div class=\\\"description\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"background-overlay\\\"></div>\\n<div class=\\\"settings-panel\\\">\\n    <div class=\\\"settings-transition-wrap\\\">\\n        <div class=\\\"left-column main-left-column settings-column noselect\\\">\\n            <svg class=\\\"btn-add-account mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"contact-add\\\"></svg>\\n            <div class=\\\"single-account-info-wrap account-settings-panel\\\">\\n                <div class=\\\"single-account-info\\\"></div>\\n            </div>\\n            <div class=\\\"accounts-info-wrap\\\">\\n                <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n                <div class=\\\"settings-divider\\\"></div>\\n                <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"preferences\\\"))]}</div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__background_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"client\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"data_storage\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"database\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__data_storage\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__data_storage_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"group-private\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"connection\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__connection\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__connection_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"debug\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bug\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__debug\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__debug_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                </div>\\n                <div class=\\\"settings-tab settings-deletion-button delete-all-accounts\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                    </div>\\n                    <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings__button_quit\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"right-column main-right-column settings-column hidden noselect\\\">\\n            <div class=\\\"settings-panel-head\\\">\\n                <i class=\\\"btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <i class=\\\"btn-back-subsettings mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n                <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n                <div class=\\\"description\\\"></div>\\n            </div>\\n\\n            <div class=\\\"panel-content-wrap\\\">\\n                <div class=\\\"panel-content\\\">\\n\\n                    <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background\\\">\\n                        <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"appearance\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__appearance_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"chats\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chat\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__chats_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"avatars\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"star-face\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"emoji_font\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"star-face\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__emoji_font_header\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}' class=\\\"settings-block-wrap appearance\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                                <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                    <div class=\\\"client-main-color-picker\\\">\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-deep-purple-500 outline-color-deep-purple-500\\\" data-value=\\\"deep-purple\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-indigo-500 outline-color-indigo-500\\\" data-value=\\\"indigo\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-cyan-500 outline-color-cyan-500\\\" data-value=\\\"cyan\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-amber-500 outline-color-amber-500\\\" data-value=\\\"amber\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-teal-500 outline-color-teal-500\\\" data-value=\\\"teal\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-brown-500 outline-color-brown-500\\\" data-value=\\\"brown\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-blue-grey-500 outline-color-blue-grey-500\\\" data-value=\\\"blue-grey\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-light-green-500 outline-color-light-green-500\\\" data-value=\\\"light-green\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-green-500 outline-color-green-500\\\" data-value=\\\"green\\\">\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"toolbar-color-setting-wrap\\\">\\n                                <div class=\\\"setting settings-color-padding toolbar-color-setting field-wrap\\\">\\n                                    <div class=\\\"selected-color-wrap\\\">\\n                                        <div class=\\\"selected-color-item\\\"></div>\\n                                        <div class=\\\"selected-color-info\\\">\\n                                            <div class=\\\"selected-color-name\\\"></div>\\n                                            <div class=\\\"selected-color-hex\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"background-setting-wrap\\\">\\n                                <div class=\\\"setting background radio-button field-wrap\\\">\\n                                    <div class=\\\"field radio-field clickable-field\\\">\\n                                        <form action=\\\"#\\\">\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                            </p>\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                            </p>\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                    <div class=\\\"current-background-wrap\\\">\\n                                        <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                        <div class=\\\"current-background\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background_effects\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"background-setting-wrap\\\">\\n                                <div class=\\\"blur-setting-wrap\\\">\\n                                    <div class=\\\"setting blur-setting checkbox-setting field-wrap\\\">\\n                                        <div class=\\\"input-field checkbox-field\\\">\\n                                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                            <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                        </div>\\n                                        <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                            <div class=\\\"disabled hidden\\\"></div>\\n                                            <p class=\\\"range-field range-field-design\\\">\\n                                                <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                                <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"vignetting-setting-wrap\\\">\\n                                    <div class=\\\"setting vignetting-setting checkbox-setting field-wrap\\\">\\n                                        <div class=\\\"input-field checkbox-field\\\">\\n                                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                            <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                        </div>\\n                                        <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                            <div class=\\\"disabled hidden\\\"></div>\\n                                            <p class=\\\"range-field range-field-design\\\">\\n                                                <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                                <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"chat_viewer\\\"))]}' class=\\\"settings-block-wrap chats\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                            <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                            <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__idle_timeout\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"setting idling checkbox-setting field-wrap\\\">\\n                                <div class=\\\"input-field  checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"idling\\\"/>\\n                                    <label for=\\\"idling\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_idling\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting idling-time field-wrap\\\">\\n                                <div class=\\\"idling-time-input\\\">\\n                                    <p class=\\\"range-field range-field-design\\\">\\n                                        <input class=\\\"materialize-timer\\\" placeholder='{[print(constants.IDLING_DEFAULT_TIMEOUT)]}' id=\\\"idle_timeout\\\" min=\\\"{[print(constants.IDLING_MINIMAL_TIMEOUT)]}\\\" max=\\\"{[print(constants.IDLING_MAXIMUM_TIMEOUT)]}\\\" value=\\\"{[print(xabber._settings.get('idling_time'))]}\\\" type=\\\"range\\\" name=\\\"idle_timeout\\\">\\n                                        <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                    </p>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-clue\\\">{[print(xabber.getString(\\\"settings__menu_item__idle_timeout_clue\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"avatars\\\"))]}' class=\\\"settings-block-wrap avatars\\\">\\n                        <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                            <div class=\\\"circle-avatar noselect\\\"></div>\\n                            <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                            <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                            <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                            <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                            <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__emoji_font_header\\\"))]}' class=\\\"settings-block-wrap emoji_font hidden\\\">\\n                        <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                            <div class=\\\"setting emoji-font radio-button\\\">\\n                                <div class=\\\"emoji-fonts-list field radio-field clickable-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"emoji-font-information-wrap\\\">\\n                            <div class=\\\"emojis-preview no-select\\\">\\n                                <div class=\\\"emoji-preview\\\">😀</div>\\n                                <div class=\\\"emoji-preview\\\">😁</div>\\n                                <div class=\\\"emoji-preview\\\">😂</div>\\n                                <div class=\\\"emoji-preview\\\">😋</div>\\n                                <div class=\\\"emoji-preview\\\">😎</div>\\n                                <div class=\\\"emoji-preview\\\">😃</div>\\n                                <div class=\\\"emoji-preview\\\">😄</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🐱</div>\\n                                <div class=\\\"emoji-preview\\\">🐭</div>\\n                                <div class=\\\"emoji-preview\\\">🐛</div>\\n                                <div class=\\\"emoji-preview\\\">🕸</div>\\n                                <div class=\\\"emoji-preview\\\">🕷</div>\\n                                <div class=\\\"emoji-preview\\\">🐢</div>\\n                                <div class=\\\"emoji-preview\\\">🐑</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🍏</div>\\n                                <div class=\\\"emoji-preview\\\">🍜</div>\\n                                <div class=\\\"emoji-preview\\\">🍈</div>\\n                                <div class=\\\"emoji-preview\\\">🍕</div>\\n                                <div class=\\\"emoji-preview\\\">🥢</div>\\n                                <div class=\\\"emoji-preview\\\">🍰</div>\\n                                <div class=\\\"emoji-preview\\\">☕️</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🏋️‍♂️</div>\\n                                <div class=\\\"emoji-preview\\\">🏏</div>\\n                                <div class=\\\"emoji-preview\\\">🏉</div>\\n                                <div class=\\\"emoji-preview\\\">🥇</div>\\n                                <div class=\\\"emoji-preview\\\">🎬</div>\\n                                <div class=\\\"emoji-preview\\\">⚽️</div>\\n                                <div class=\\\"emoji-preview\\\">🎸</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🚗</div>\\n                                <div class=\\\"emoji-preview\\\">🏎</div>\\n                                <div class=\\\"emoji-preview\\\">🎡</div>\\n                                <div class=\\\"emoji-preview\\\">⛴</div>\\n                                <div class=\\\"emoji-preview\\\">🏛</div>\\n                                <div class=\\\"emoji-preview\\\">🏝</div>\\n                                <div class=\\\"emoji-preview\\\">🗿</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🖱</div>\\n                                <div class=\\\"emoji-preview\\\">📡</div>\\n                                <div class=\\\"emoji-preview\\\">🎁</div>\\n                                <div class=\\\"emoji-preview\\\">📬</div>\\n                                <div class=\\\"emoji-preview\\\">⏰</div>\\n                                <div class=\\\"emoji-preview\\\">📹</div>\\n                                <div class=\\\"emoji-preview\\\">📱</div>\\n                            </div>\\n                            <div class=\\\"preloader-wrap hidden\\\">\\n                                <div class=\\\"preloader-wrapper preloader-20px active \\\">\\n                                    <div class=\\\"spinner-layer\\\">\\n                                        <div class=\\\"circle-clipper left\\\">\\n                                            <div class=\\\"circle\\\"></div>\\n                                        </div>\\n                                        <div class=\\\"gap-patch\\\">\\n                                            <div class=\\\"circle\\\"></div>\\n                                        </div>\\n                                        <div class=\\\"circle-clipper right\\\">\\n                                            <div class=\\\"circle\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"emoji-font-attribution-text hidden\\\"></div>\\n                            <div class=\\\"emoji-font-external-url-text hidden\\\">{[print(xabber.getString(\\\"settings__menu_item__emoji_font_external_url_text\\\"))]}</div>\\n                            <div class=\\\"emoji-font-download-text hidden\\\">{[print(xabber.getString(\\\"settings__menu_item__emoji_font_downloading_text\\\"))]}</div>\\n                            <div class=\\\"emoji-font-button-background emoji-font-external-url-button hidden\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"download\\\"></svg>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}' class=\\\"settings-block-wrap notifications\\\">\\n                        <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"web-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"client\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications_label\\\"))]}</div>\\n                                <div class=\\\"field notifications-lever clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"chats-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chat\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field private-notifications clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab settings-tab-big-icon\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"groupchats-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"group-public\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field group-notifications clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"calls-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls_label\\\"))]}</div>\\n                                <div class=\\\"field jingle-calls clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"attention-calls\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"alarm-bell\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field call-attention clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}' class=\\\"settings-block-wrap web-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting notifications checkbox-setting field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                    <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name volume-setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                            <!--<div class=\\\"setting volume-enable checkbox-setting field-wrap\\\">-->\\n                                <!--<div class=\\\"input-field checkbox-field\\\">-->\\n                                    <!--<input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications_volume_enable\\\"/>-->\\n                                    <!--<label for=\\\"notifications_volume_enable\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume_enable\\\"))]}</label>-->\\n                                <!--</div>-->\\n                            <!--</div>-->\\n                            <div class=\\\"setting volume-setting\\\">\\n                                <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                    <div class=\\\"disabled hidden\\\"></div>\\n                                    <p class=\\\"range-field range-field-design\\\">\\n                                        <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        <span style=\\\"display: none\\\" class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}' class=\\\"settings-block-wrap chats-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting message-preview checkbox-setting private-preview field-wrap\\\">\\n                                <div class=\\\"input-field notifications-dependant checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                    <div class=\\\"desktop-notifications-clue-wrap\\\">\\n                                        {[print(xabber.getString(\\\"settings__section_notifications__desktop_notifications_clue\\\"))]}\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field notification-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}' class=\\\"settings-block-wrap groupchats-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting message-preview checkbox-setting group-preview field-wrap\\\">\\n                                <div class=\\\"input-field notifications-dependant checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                    <div class=\\\"desktop-notifications-clue-wrap\\\">\\n                                        {[print(xabber.getString(\\\"settings__section_notifications__desktop_notifications_clue\\\"))]}\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field notification-field group-notification-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}' class=\\\"settings-block-wrap calls-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field ringtone-field\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field dialtone-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}' class=\\\"settings-block-wrap attention-calls\\\">\\n                        <div class=\\\"settings-subblock-wrap \\\">\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field attention-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                        <div class=\\\"setting load-media checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                                <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting typing-notifications checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                                <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting mapping-service checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                                <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                        <div class=\\\"setting radio-button interface-language-setting\\\">\\n                            <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"toolbar-top\\\">\\n    <div class=\\\"toolbar-item toolbar-logo\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <img class=\\\"logo\\\" src=\\\"{{TOOLBAR_LOGO}}\\\">\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-middle\\\">\\n    <div class=\\\"toolbar-item all-chats active\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-message-text\\\"></i>\\n        <span class=\\\"all-msg-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item jingle-calls\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__jingle_calls\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item mentions\\\" title='{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"bell\\\"></svg>\\n        <span class=\\\"mentions-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item contacts\\\" title='{[print(xabber.getString(\\\"category_title_contacts\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n    </div>\\n\\n    <div class=\\\"toolbar-item geolocation-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__geolocation_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-compass\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item archive-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__archive_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-archive\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item saved-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__saved_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-bookmark\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"add-something-wrap\\\">\\n        <div class=\\\"toolbar-item dropdown-button add-something\\\" data-activates=\\\"{{view.cid}}-add\\\" title='{[print(xabber.getString(\\\"toolbar__button_add_tooltip\\\"))]}'>\\n            <i class=\\\"toolbar-icon mdi mdi-24px mdi-plus\\\"></i>\\n        </div>\\n\\n        <div id=\\\"{{view.cid}}-add\\\" class=\\\"add-variants dropdown-content noselect\\\">\\n            <div class=\\\"add-variant contact\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"add_contact\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant public-groupchat\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-multiple-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant incognito-groupchat\\\">\\n                <svg class=\\\"mdi mdi-20px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13 11A3 3 0 1 0 10 8A3 3 0 0 0 13 11M13 7A1 1 0 1 1 12 8A1 1 0 0 1 13 7M17.11 10.86A5 5 0 0 0 17.11 5.14A2.91 2.91 0 0 1 18 5A3 3 0 0 1 18 11A2.91 2.91 0 0 1 17.11 10.86M13 13C7 13 7 17 7 17V19H19V17S19 13 13 13M9 17C9 16.71 9.32 15 13 15C16.5 15 16.94 16.56 17 17M24 17V19H21V17A5.6 5.6 0 0 0 19.2 13.06C24 13.55 24 17 24 17M8 12H5V15H3V12H0V10H3V7H5V10H8Z\\\" />\\n                </svg>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_incognito_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant account\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-circle\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-bottom\\\">\\n    <div class=\\\"accounts-wrap\\\">\\n        <div class=\\\"accounts\\\">\\n            <div class=\\\"toolbar-item settings-modal hidden\\\" title='{[print(xabber.getString(\\\"settings\\\"))]}'>\\n                <div class=\\\"border\\\"></div>\\n                <i class=\\\"toolbar-icon mdi mdi-24px mdi-settings\\\"></i>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"    <div class=\\\"message-input-panel noselect\\\">\\n        <div class=\\\"my-avatar circle-avatar circle-image-fix\\\"></div>\\n        <div class=\\\"message-form\\\">\\n            <div class=\\\"fwd-messages-preview noselect hidden\\\">\\n                <div class=\\\"msg-border ground-color-700\\\">\\n                </div>\\n                <div class=\\\"msg-content\\\">\\n                    <p class=\\\"msg-author text-color-700 one-line\\\"></p>\\n                    <p class=\\\"msg-text one-line\\\"></p>\\n                </div>\\n                <div class=\\\"close-forward\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"message-reference-preview hidden\\\">\\n                <div class=\\\"message-reference-preview-container\\\">\\n                </div>\\n                <div class=\\\"close-attachments\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"input-field input-message\\\">\\n                <div class=\\\"mentions-list\\\"></div>\\n                <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                </div>\\n                <div class=\\\"scrollbar-cover\\\"></div>\\n                <div class=\\\"insert-emoticon\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n                </div>\\n                <div class=\\\"preview-preloader-container hidden\\\" title='{[print(xabber.getString(\\\"chat_bottom__preview_preloader_cancel\\\"))]}'>\\n                    <svg class=\\\"preview-cancel-preloader mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"link\\\"></svg>\\n                </div>\\n                <div class=\\\"emoticons-panel-wrap\\\">\\n                    <div class=\\\"emoticons-panel\\\"></div>\\n                    <div class=\\\"emoji-menu\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"input-voice-message\\\">\\n                <div class=\\\"voice-visualizer\\\"></div>\\n                <div class=\\\"timer\\\">0:00</div>\\n                <div class=\\\"voice-msg-status\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__cancel_write_voice\\\"))]}</div>\\n            </div>\\n            <div class=\\\"input-toolbar\\\">\\n                <div class=\\\"attach attach-file\\\">\\n                    <input type=\\\"file\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_file\\\"))]}' multiple>\\n                    <i class=\\\"mdi mdi-24px mdi-paperclip\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-media\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_media\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-file-image\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-location\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <input type=\\\"text\\\" hidden title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-map-marker\\\"></i>\\n                </div>\\n                <div title=\\\"Format text\\\" class=\\\"format-text\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-format-text\\\"></i>\\n                </div>\\n                <div class=\\\"last-emoticons\\\">\\n                </div>\\n                <div class=\\\"account-info-wrap\\\">\\n                    <div class=\\\"account-jid text-color-700\\\"></div>\\n                    <div class=\\\"account-nickname text-color-700\\\"></div>\\n                    <div class=\\\"account-badge\\\"></div>\\n                    <div class=\\\"account-role ground-color-700\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"send-area\\\">\\n            <i class=\\\"send-message mdi mdi-32px mdi-send text-color-700 hover-text-color-500 hidden\\\"></i>\\n            <i class=\\\"mdi mdi-32px mdi-microphone attach-voice-message text-color-700 hover-text-color-500\\\"></i>\\n        </div>\\n    </div>\\n    <div class=\\\"blocked-msg hidden\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__blocked\\\"))]}</div>\\n    <div class=\\\"message-actions-panel noselect hidden\\\">\\n        <div class=\\\"button-wrap reply-message-wrap\\\">\\n            <i class=\\\"action-button reply-message mdi ground-color-700 mdi-reply mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_reply\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_reply\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap forward-message-wrap\\\">\\n            <i class=\\\"action-button forward-message mdi ground-color-700 mdi-forward mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_froward\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_froward\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap copy-message-wrap\\\">\\n            <i class=\\\"action-button copy-message mdi ground-color-700 mdi-content-copy mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_copy\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_copy\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap delete-message-wrap\\\">\\n            <i class=\\\"action-button delete-message mdi ground-color-700 mdi-delete mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"delete\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"delete\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap edit-message-wrap\\\">\\n            <i class=\\\"action-button edit-message mdi ground-color-700 mdi-pencil mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_edit\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_edit\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap pin-message-wrap\\\">\\n            <svg class=\\\"action-button pin-message ground-color-700\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path fill=\\\"#FFF\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"></path>\\n            </svg>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_pin\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_pin\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap cancel-message-wrap\\\">\\n            <i class=\\\"action-button close-message-panel mdi mdi-close mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n        </div>\\n    </div>\\n\";","export default \"  <div class=\\\"search-form-header\\\">\\n    <div class=\\\"messages-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n    </div>\\n    <div class=\\\"text-color-700 btn-cancel-searching\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n</div>\\n<div class=\\\"pinned-message\\\"></div>\\n<div class=\\\"elements-in-top\\\">\\n    <div class=\\\"subscription-buttons-wrap hidden\\\"></div>\\n    <div class=\\\"chat-day-indicator fixed-day-indicator-wrap hidden\\\"><div class=\\\"fixed-day-indicator\\\"></div></div>\\n</div>\\n<div class=\\\"load-history-feedback hidden\\\"></div>\\n<div class=\\\"participant-messages-header hidden\\\"><div class=\\\"messages-by-header\\\">{[print(xabber.getString(\\\"chat__placeholder_participant_messages__messages_by\\\"))]} <div class=\\\"participant-nickname text-color-700\\\"></div></div><div class=\\\"btn-cancel-selection\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div><div class=\\\"text-color-700 btn-retract-messages\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</div></div>\\n<div class=\\\"chat-content\\\">\\n</div>\\n<div class=\\\"chat-notification hidden one-line\\\"></div>\\n<i class=\\\"mdi mdi-36px back-to-unread hidden mdi-chevron-down\\\"><div class=\\\"back-to-unread-counter\\\"></div></i>\\n<i class=\\\"mdi mdi-36px back-to-bottom mdi-chevron-down\\\"></i>\\n\";","export default \"<div class=\\\"search-wrap\\\">\\n    <div class=\\\"search-content\\\">\\n        <div class=\\\"search-form-header block-header\\\">\\n            <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n            <div class=\\\"messages-search-form search-form \\\">\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n            </div>\\n            <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"search-messages-content-wrap\\\">\\n            <div class=\\\"search-results\\\">\\n                {[print(xabber.getString(\\\"nothing_was_searched\\\"))]}\\n            </div>\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"messages-count\\\">\\n            </div>\\n            <div class=\\\"chat-content\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-body-content-placeholder-text no-select\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n\";","export default \"<div class=\\\"chat-head-details\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"contact-status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <div class=\\\"contact-name-wrap\\\">\\n            <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n            <p class=\\\"contact-name one-line\\\"></p>\\n        </div>\\n        <p class=\\\"contact-status-message one-line\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"></div>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-show-fingerprints\\\">\\n            <i class=\\\"mdi mdi-lock mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <!--<div class=\\\"chat-tool btn-set-status\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\">\\n                    <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"/>\\n                    <path d=\\\"M20,4 C21.1045695,4 22,4.8954305 22,6 L22,16 C22,17.1045695 21.1045695,18 20,18 L16,18 L12,22 L8,18 L4,18 C2.8954305,18 2,17.1045695 2,16 L2,6 C2,4.8954305 2.8954305,4 4,4 L20,4 Z M16,12 L6,12 L6,14 L16,14 L16,12 Z M18,8 L6,8 L6,10 L18,10 L18,8 Z\\\" id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </div>-->\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-chat-pin\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-archive-chat\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-notifications active-hover\\\" data-activates=\\\"{{view.cid}}-mute-more\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-call-attention\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"call_attention\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-invite-users\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-start-encryption\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_start_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-encrypted-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-regular-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_regular_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"delete_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-clear-history\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </li>\\n        </ul>\\n        <ul id=\\\"{{view.cid}}-mute-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <i class=\\\"mdi muted-icon mdi-14px mdi-bell-off\\\"></i>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n<div class=\\\"chat-states\\\">\\n    <div class=\\\"chat-item-notifications-wrap\\\">\\n        <span class=\\\"msg-chat-error hidden\\\">!</span>\\n        <span class=\\\"msg-incoming-subscription hidden\\\">\\n            <svg class=\\\"mdi mdi-12px mdi-svg-template\\\" data-svgname=\\\"plus\\\"></svg>\\n        </span>\\n        <span class=\\\"msg-counter hidden\\\"></span>\\n        <i class=\\\"msg-delivering-state mdi mdi-16px hidden\\\"></i>\\n        <i class=\\\"pinned-icon\\\">\\n            <svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n                <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                    <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n                    <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"chat_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"recent-chats-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"load-chats-feedback hidden\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n    </div>\\n    <div class=\\\"read-all-button hidden\\\">{[print(xabber.getString(\\\"mark_all_as_read_button\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"field clickable-field {{className}} switch normal\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{id}}\\\">\\n    <label for=\\\"{{id}}\\\"></label>\\n</div>\";","export default \"<div>\\n    <i class=\\\"mdi mdi-36px mdi-alert-circle\\\"></i>\\n</div>\\n<div class=\\\"warning-message\\\">{{message}}</div>\\n<button class=\\\"btn-manage-devices btn-flat btn-main btn-dark hover-ground-color-amber-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\";","export default \"<div class=\\\"warning-wrap\\\">\\n    <p class=\\\"warning-message\\\">{{message}}</p>\\n    <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-{{color}}-100 hover-ground-color-{{color}}-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"dialog_forward_message__header\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"contact-list forward-chats-list\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <span>{[print(xabber.getString(\\\"create_groupchat\\\"))]}</span>\\n    <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-creating-groupchat\\\">\\n        <div class=\\\"dropdown-button\\\">\\n            <div class=\\\"account-item-wrap\\\">\\n                <div class=\\\"circle-avatar noselect\\\">\\n                    <img>\\n                </div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-account-for-creating-groupchat\\\" class=\\\"dropdown-content noselect\\\">\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"row name-field\\\">\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <label for=\\\"new_chat_name\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</label>\\n            <input id=\\\"new_chat_name\\\" type=\\\"text\\\" name=\\\"chat_name\\\" placeholder='{[print(xabber.getString(\\\"group_is_empty\\\"))]}' required>\\n        </div>\\n    </div>\\n    <div class=\\\"row jid-field\\\">\\n        <label for=\\\"new_chat_jid\\\">{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}</label>\\n        <div class=\\\"input-field input-group-chat-jid\\\">\\n            <input id=\\\"new_chat_jid\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}' name=\\\"chat_jid\\\">\\n            <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                <div class=\\\"select-xmpp-server\\\">\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                    <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                        <input id=\\\"new_chat_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"chat_domain\\\">\\n                    </div>\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                        <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                        <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                    </div>\\n                </div>\\n                <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <span class=\\\"errors\\\"></span>\\n    </div>\\n    <div class=\\\"row incognito-field hidden\\\">\\n        <i class=\\\"field-icon mdi mdi-24px mdi-incognito\\\"></i>\\n        <div class=\\\"property-field incognito-dropdown-wrap\\\">\\n           <div class=\\\"public-item-wrap property-wrap\\\"><div data-value=\\\"public\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_public\\\"))]}</div></div>\\n           <div class=\\\"incognito-item-wrap property-wrap\\\"><div data-value=\\\"incognito\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"row group-radio-fields\\\">\\n        <div class=\\\"property-radio-field membership-dropdown-wrap\\\">\\n            <div class=\\\"membership-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"membership_open\\\" data-value=\\\"open\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"membership_member_only\\\" data-value=\\\"member-only\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_member_only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"property-radio-field global-dropdown-wrap\\\">\\n            <div class=\\\"global-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"index_none\\\" data-value=\\\"none\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_local\\\" data-value=\\\"local\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_global\\\" data-value=\\\"global\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row description-field\\\">\\n        <div class=\\\"input-field input-message\\\">\\n            <label class=\\\"description-label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</label>\\n            <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                <div class=\\\"rich-textarea\\\" tabindex=\\\"2\\\" contenteditable=\\\"\\\"></div>\\n                <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"create\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"groupchat_invite_users\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"contacts-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"invitation-reason-wrap hidden\\\">\\n        <textarea class=\\\"text-field textarea-glow input-glow account-glow\\\" type=\\\"text\\\" cols=\\\"10\\\" rows=\\\"5\\\" placeholder='{[print(xabber.getString(\\\"invitation_text_placeholder\\\"))]}' id=\\\"invitation_text\\\" name=\\\"invitation_text\\\"></textarea>\\n    </div>\\n    <button class=\\\"btn-flat btn-main btn-invitation-reason\\\">{[print(xabber.getString(\\\"Invitation_reason_button_text\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-add\\\"><span class=\\\"counter hidden\\\"></span>{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-dark btn-main btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"list-item mention-item\\\" data-jid=\\\"{{jid}}\\\" data-id=\\\"{{id}}\\\" data-nickname=\\\"{{nickname}}\\\">\\n    <div class=\\\"circle-avatar\\\"></div>\\n    <div class=\\\"participant-info\\\">\\n        <span class=\\\"one-line nickname\\\">{{nickname}}</span>\\n        <span class=\\\"one-line jid\\\">{{jid}}</span>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content full-pinned-message\\\"></div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div id=\\\"map\\\" class=\\\"text-color-700\\\" style=\\\"width:800px; height:490px;\\\" data-type='map'></div>\\n        <div class=\\\"form-group\\\">\\n                <textarea id=\\\"output\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lat\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lon\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n\";","export default \"{[ if (blob) {]}\\n<div class=\\\"attached-image-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-size one-line\\\">{{filesize}}</div>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (blob) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{blob}}\\\" src=\\\"{{blob}}\\\">\\n    {[}]}\\n</div>\\n{[} else {]}\\n<div class=\\\"attached-file-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-text\\\">\\n        <div class=\\\"attached-file-name one-line\\\">{{file.name}}</div>\\n        <div class=\\\"attached-file-size one-line\\\">{{filetype}}, {{filesize}}</div>\\n    </div>\\n    <i class=\\\"mdi attached-file-icon {{typeicon}}\\\"></i>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n</div>\\n{[}]}\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi mdi-play no-uploaded\\\"></i>\\n    <i class=\\\"mdi mdi-pause\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n        <a class=\\\"voice-message-play\\\">Play</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"><img></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<span class=\\\"accept-request\\\">Accept</span><span class=\\\"decline-request\\\">Decline</span><span class=\\\"block-request\\\">Block</span></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi {{mdi_icon}}\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (is_audio && duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"one-file-wrap link-file unuploaded-file\\\" data-upload-file-id=\\\"{{upload_id}}\\\">\\n    <div class=\\\"file-loading-container\\\"></div>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>, <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <div class=\\\"circle-percent-text\\\">0%</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-message main {{classlist}} file-upload noselect\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content chat-main-upload-media\\\">\\n        </div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 repeat-upload\\\">{[print(xabber.getString(\\\"resend\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 edit-upload\\\">{[print(xabber.getString(\\\"edit\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-delete-message\\\">{[print(xabber.getString(\\\"delete\\\"))]}</div>\\n        </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"fwd-message\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-from-id=\\\"{{from_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"fwd-msg-author-wrap\\\">\\n            <div class=\\\"fwd-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if ((role)&&(role != 'Member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n            <div class=\\\"msg-time selectable-text one-line\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<div><span class=\\\"accept-request-group\\\">Accept</span><span class=\\\"decline-request-group\\\">Decline</span><span class=\\\"block-request-group\\\">Block</span></div></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\"><img title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\"><img title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"images-details\\\">\\n    <div class=\\\"images-details-header\\\">\\n        {[print(xabber.getString(\\\"privacy_risk_images_header\\\"))]}\\n    </div>\\n    {[img_information.images.forEach((image) => {]}\\n        <div class=\\\"image-details\\\">\\n            {{image.name}} <span>{{image.pretty_size}}, {{image.height}}x{{image.width}}</span>\\n        </div>\\n    {[})]}\\n</div>\\n<div class=\\\"image-servers-details\\\">\\n    {[if (img_information.servers.length === 1) {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_server_header\\\", [img_information.servers[0]]))]}\\n        </div>\\n    {[} else {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_servers_header\\\"))]}\\n        </div>\\n        {[img_information.servers.forEach((server) => {]}\\n            <div class=\\\"server-details\\\">\\n                {{server}}\\n            </div>\\n        {[})]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"link-message-reference message-reference-preview-attached message-reference-preview-item {[ if (item.image && item.video_url) {]}link-message-reference-video{[}]}\\\" data-original-url=\\\"{{item.original_text}}\\\">\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (item.image && item.video_url) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-site-name one-line\\\">{{item.site}}</div>\\n    {[} else if (item.image) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 25) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 25) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 29) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 29) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[}]}\\n</div>\";","export default \"{[ if (is_video) {]}\\n        <div class=\\\"link-message-reference message-reference-preview-item message-reference-preview-item-big-image\\\">\\n            <div class=\\\"embed-video\\\">\\n                <div class=\\\"plyr-video-container\\\" data-provider=\\\"{{provider}}\\\" data-src=\\\"{{video_url}}\\\">\\n                    <div class=\\\"plyr-video-play\\\">\\n                        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                    </div>\\n                    <div class=\\\"plyr-video-playing\\\">\\n                        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n                        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n                    </div>\\n                    {[ if (image) {]}\\n                    <img class=\\\"plyr-video-poster\\\" src=\\\"{{image}}\\\" onerror=\\\"this.style.display='none'\\\">\\n                    {[}]}\\n                </div>\\n            </div>\\n            <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n                <div class=\\\"attached-text-block\\\">\\n                    <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                    <div class=\\\"link-site-title\\\">{{title}}</div>\\n                    <div class=\\\"link-description\\\">{{description}}</div>\\n                </div>\\n            </a>\\n        </div>\\n{[} else {]}\\n    <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n        <div class=\\\"link-message-reference message-reference-preview-item{[if (image_width && image_width >= 590 || image_height && image_height < 80 || (1.5 * image_height) < image_width) {]} message-reference-preview-item-big-image{[}]}\\\">\\n            {[ if (image) {]}\\n            <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{image}}\\\" data-width=\\\"{{image_width}}\\\" data-height=\\\"{{image_height}}\\\" src=\\\"{{image}}\\\">\\n            {[}]}\\n            <div class=\\\"attached-text-block\\\">\\n                <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                <div class=\\\"link-site-title\\\">{{title}}</div>\\n                <div class=\\\"link-description\\\">{{description}}</div>\\n            </div>\\n        </div>\\n    </a>\\n{[}]}\";","export default \"<div class=\\\"circle-wrap\\\">\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"preloader-circular\\\" viewBox=\\\"27 27 54 54\\\">\\n        <circle class=\\\"preloader-path-new\\\" cx=\\\"54\\\" cy=\\\"54\\\" r=\\\"24\\\" fill=\\\"none\\\" stroke-miterlimit=\\\"10\\\"></circle>\\n    </svg>\\n    <div class=\\\"inside-circle\\\">\\n        <i class=\\\"mdi mdi-center-loading-indicator mdi-close mdi-20px\\\"></i>\\n        <i class=\\\"mdi mdi-alert-circle mdi-32px hidden\\\"></i>\\n    </div>\\n    <div class=\\\"circle-percent-text\\\">0%</div>\\n</div>\";","export default \"<div id=\\\"{{id}}\\\" class=\\\"text-color-700\\\" style=\\\"width:350px; height:300px;pointer-events: none;\\\" data-type='map'><img id=\\\"img_{{ id }}\\\" ></div>\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"\\n     {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]}\\n     {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]}\\n     data-time=\\\"{{timestamp}}\\\"\\n     data-uniqueid=\\\"{{unique_id}}\\\"\\n     {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]}\\n     data-from=\\\"{{from_jid}}\\\"\\n     {[if (device_id) {]} data-device-id=\\\"{{device_id}}\\\" {[}]}\\n>\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}{[ if (device_id) {]}&#013;{[print(xabber.getString('omemo__dialog_fingerprints__label_device_id'))]}: {{device_id}}{[}]}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n            <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n            <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n                <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-retry-send-message\\\">{[print(xabber.getString(\\\"chat_screen__message__button_retry_send\\\"))]}</div>\\n            </div>\\n        {[ } ]}\\n        <div class=\\\"not-decrypted-icon mdi-14px\\\" title=\\\"{[print(xabber.getString('omemo__not_verified_message_title'))]}\\\" {[ if (not_verified_device) { ]}data-device-id=\\\"{{not_verified_device}}\\\" {[ } ]} data-activates=\\\"not-verified-tooltip-{{msgid}}\\\">\\n            <svg class=\\\"mdi mdi-14px mdi-svg-template not-verified-icon-svg\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n            <svg class=\\\"mdi mdi-14px mdi-svg-template not-decrypted-icon-svg\\\" data-svgname=\\\"information\\\"></svg>\\n        </div>\\n        <div id=\\\"not-verified-tooltip-{{msgid}}\\\" class=\\\"dropdown-content not-decrypted-tooltip noselect\\\">\\n            <div class=\\\"not-existing-device-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_existing_device_message_tooltip\\\"))]}</div>\\n            <div class=\\\"not-decrypted-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_decrypted_message_tooltip\\\"))]}</div>\\n            <div class=\\\"not-verified-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_verified_message_tooltip\\\"))]}</div>\\n            <button class=\\\"btn-manage-devices btn-flat btn-main text-color-700\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n            <div class=\\\"not-verified-previously-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_verified_previously_message_tooltip\\\"))]}</div>\\n        </div>\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message saved-main main {{classlist}}\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-msgs-block\\\"></div>\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{msg_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system\\\"  data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\" data-upload-file-id=\\\"{{images[5].upload_id}}\\\"><img src=\\\"{{images[5].sources[0]}}\\\" title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\" data-upload-file-id=\\\"{{images[i].upload_id}}\\\"><img src=\\\"{{images[i].sources[0]}}\\\" title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"plyr-video-container\\\"  data-provider=\\\"html5\\\" data-msg-video-id=\\\"{{video_id}}\\\" data-src=\\\"{{video_src}}\\\">\\n    <div class=\\\"plyr-video-play\\\">\\n        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n    </div>\\n    <div class=\\\"plyr-video-playing\\\">\\n        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n    </div>\\n    {[ if (thumbnail) {]}\\n        <img class=\\\"plyr-video-poster\\\" src=\\\"{{thumbnail}}\\\" onerror=\\\"this.style.display='none'\\\">\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"chat-message\\\"> {[alert({file_url})]} </div>\";","export default \"<div class=\\\"circle-avatar ground-color-700\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <p class=\\\"contact-name one-line\\\">{[print(xabber.getString(\\\"saved_messages__header\\\"))]}</p>\\n        <p class=\\\"one-liner\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"></div>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-chat-pin\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"></path>\\n                </svg>\\n            </svg>\\n        </div>\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"image\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n        <div data-screen-name=\\\"video\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"image\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"video\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"chat_bottom__drag_and_drop__text_drop_files_here\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"send_media__btn_upload\\\"))]}</button>\\n                <input type=\\\"file\\\" multiple>\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"add\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"subscription-buttons\\\">\\n    <div class=\\\"subscription-info\\\"></div>\\n    <div class=\\\"button text-color-500 btn-add\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</div>\\n    <div class=\\\"button btn-block\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-allow\\\">{[print(xabber.getString(\\\"chat_allow\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-subscribe\\\">{[print(xabber.getString(\\\"chat_subscribe\\\"))]}</div>\\n    <i class=\\\"mdi-close btn-decline mdi mdi-24px\\\"></i>\\n</div>\";","export default \"<div class=\\\"unread-marker\\\">\\n    <div class=\\\"unread-marker-content no-select\\\">\\n        {{text}}\\n    </div>\\n</div>\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info ground-color-100\\\">\\n        <div class=\\\"account-indicator ground-color-700\\\"></div>\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-900 one-line\\\"></p>\\n            <p class=\\\"jid one-line\\\"></p>\\n        </div>\\n        <div class=\\\"button-divider\\\"></div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer2 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info\\\">\\n        <div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n            <div class=\\\"circle-avatar border-color ground-color-700 noselect\\\"></div>\\n        </div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-700 one-line\\\"></p>\\n            <p class=\\\"status-message text-color-700 one-line\\\"></p>\\n            <div class=\\\"roster-info\\\">\\n                <i class=\\\"mdi mdi-account-multiple-outline\\\"></i>\\n                <span class=\\\"counter\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1\\\"></div>\\n    <div class=\\\"roster-account-shrank-footer2\\\"></div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_add_contact__header\\\"))]}</span>\\n        <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n            <div class=\\\"dropdown-button\\\">\\n                <div class=\\\"account-item-wrap\\\">\\n                    <div class=\\\"circle-avatar noselect\\\">\\n                        <img>\\n                    </div>\\n                </div>\\n            </div>\\n            <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"add-contact-jid-step\\\">\\n            <div class=\\\"row name-field\\\">\\n                <div class=\\\"input-field\\\">\\n                    <!--<label for=\\\"new_contact_username\\\">{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}</label>-->\\n                    <input id=\\\"new_contact_username\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}' name=\\\"username\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n        </div>\\n        <!--<div class=\\\"add-contact-contact-step\\\">-->\\n            <!--<div class=\\\"row name-field\\\">-->\\n                <!--<div class=\\\"input-field\\\">-->\\n                    <!--<label for=\\\"new_contact_name\\\">{[print(xabber.getString(\\\"contact_user\\\"))]}</label>-->\\n                    <!--<input id=\\\"new_contact_name\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"contact_user\\\"))]}' name=\\\"contact_name\\\" required>-->\\n                <!--</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"row groups-field\\\">-->\\n                <!--<div class=\\\"field-header\\\">{[print(xabber.getString(\\\"contact_circle\\\"))]}</div>-->\\n                <!--<div class=\\\"groups checkbox-list\\\">-->\\n                <!--</div>-->\\n            <!--</div>-->\\n        <!--</div>-->\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-add\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_add\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <div class=\\\"audio-control-time\\\">\\n        <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n        <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    </div>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div data-jid=\\\"{{jid}}\\\" class=\\\"blocked-contact\\\">\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blocked-jid-switch-{{jid}}\\\"/>\\n        <label for=\\\"blocked-jid-switch-{{jid}}\\\">{{jid}}</label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"header-buttons\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <div class=\\\"btn-qr-code\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        </div>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap contact-details-name-wrap one-line\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n            <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-search-messages\\\">\\n            <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-mute-wrap\\\">\\n            <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n            <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                <li class=\\\"btn-unmute-dropdown\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"button-wrap btn-block-wrap\\\">\\n            <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"block-wrap vcard\\\">\\n        </div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n    </div>\\n    <ul class=\\\"tabs bottom-block-tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"bottom-block\\\">\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <div class=\\\"name-wrap\\\">\\n        <p class=\\\"name one-line\\\"></p>\\n    </div>\\n    <p class=\\\"jid one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"contact_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <p class=\\\"name one-line\\\"></p>\\n    <p class=\\\"jid one-line hidden\\\"></p>\\n    <p class=\\\"status-message one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</span>\\n    </div>\\n    <div class=\\\"edit-contact\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"name-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"subscription-statuses\\\">\\n        <div class=\\\"status-out subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-out\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-to\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-out\\\" class=\\\"status-out-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-out property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscribe\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-in subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-in\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-from\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-in\\\" class=\\\"status-in-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-allow property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-allow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"decline\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-preapproved property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_disallow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-in property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscription\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-description subscription-status-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-delete\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text \\\">\\n                <span class=\\\"text-color-500 dotted-underline text-decoration-color-300 one-line\\\">{[print(xabber.getString(\\\"contact_delete_full\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n        <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-header main-edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-group vcard\\\">\\n        <div class=\\\"info-wrap description-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info description\\\">\\n                    <div class=\\\"edit-group-name value\\\"></div>\\n                    <div class=\\\"edit-group-description value\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"description-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header description-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_properties\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-group-image\\\">\\n                    <input class=\\\"hidden\\\" title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div id=\\\"{{view.cid}}-group-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                    <div class=\\\"btn-emoji-panel property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-selfie property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-choose-image property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-group\\\">\\n            <div class=\\\"edit-group-name-wrap\\\"></div>\\n            <div class=\\\"edit-group-description-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-properties\\\">\\n        <div class=\\\"group-property membership-property\\\">\\n            <div class=\\\"details-icon-wrap\\\" ><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"membership-outline\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_membership\\\"))]}\\n                <span></span>\\n            </div>\\n        </div>\\n        <div class=\\\"group-property index-property\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_index\\\"))]}\\n                <span></span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-default-restrictions\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n                <span class=\\\"edit-button-value\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"membership-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap membership-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"open\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"member-only\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"member-only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_membership_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"index-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap index-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"none\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"local\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"global\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_index_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"bottom-block edit-bottom-block\\\">\\n        <div class=\\\"edit-pictured-buttons\\\">\\n            <div data-value=\\\"invitations\\\" class=\\\"list-variant invitations-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite-outline\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}<span class=\\\"counted\\\"></span></div>\\n            </div>\\n            <div data-value=\\\"blocked\\\" class=\\\"list-variant blocked-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}<span class=\\\"counted\\\"></span></div>\\n            </div>\\n        </div>\\n        <i class=\\\"details-icon participants-edit-back btn-back-panel mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name-panel\\\"></span>\\n        <span class=\\\"block-name-panel second-text fade-out\\\">{[print(xabber.getString(\\\"groupchat_selected\\\"))]} <span></span></span>\\n        <div class=\\\"btn-add-block\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n        </div>\\n        <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n        <button class=\\\"btn-remove-selected btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}</button>\\n        <div class=\\\"block-wrap participants-edit-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-clear-history-chat\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-delete-group\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"text-color-500 one-line text-decoration-color-300 dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-form\\\">\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"blocking_id\\\" class=\\\"rich-textarea field-input\\\" placeholder=\\\"{[print(xabber.getString('vcard_jabber_id'))]}\\\" type=\\\"text\\\" name=\\\"title\\\">\\n    </div>\\n    <button class=\\\"btn-block-id btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"textarea-header\\\">{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}</div>\\n    <div class=\\\"rich-textarea badge-text\\\" tabindex=\\\"1\\\" contenteditable></div>\\n    <div class=\\\"error\\\"></div>\\n</div>\\n<div class=\\\"panel-footer noselect\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n        <button class=\\\"btn-save btn-flat btn-main\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</div></div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n    <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions__placeholder\\\"))]}</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-default-restrictions-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-default-restrictions-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"restrictions-wrap\\\">\\n    <div class=\\\"restrictions-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n        <span class=\\\"block-name second-text fade-out\\\"></span>\\n        <button class=\\\"btn-default-restrictions-save text-color-500 btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"restrictions-content edit-default-restrictions\\\">\\n        <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n        <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions_right__placeholder\\\"))]}</p>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <textarea class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\"></textarea>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"media-item\\\">\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                </svg>\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-edit-settings\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_settings\\\"))]}</span></li>\\n            <li class=\\\"btn-default-restrictions\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span></li>\\n            <li class=\\\"btn-delete-group\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"btn-leave\\\"><svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n                </div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"head-block\\\">\\n            <div class=\\\"left-column\\\">\\n                <div class=\\\"block-wrap group-chat-properties-wrap\\\"></div>\\n            </div>\\n            <div class=\\\"right-column\\\">\\n                <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n                <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"invitations\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}</a></li>\\n                <li data-value=\\\"blocked\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"header-buttons\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_group\\\"))]}</span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <div class=\\\"btn-qr-code\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        </div>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg>\\n        </div>\\n        <div class=\\\"group-edit-preloader\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        <div class=\\\"button-wrap btn-invite-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-search-messages\\\">\\n            <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-mute-wrap\\\">\\n            <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n            <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"button-wrap btn-leave-wrap\\\">\\n            <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                <svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n            </div>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"block-wrap group-chat-properties-wrap vcard\\\"></div>\\n        <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap restrictions-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap participant-view-wrap\\\"></div>\\n    </div>\\n    <ul class=\\\"tabs not-edit bottom-block-tabs\\\">\\n        <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"bottom-block\\\">\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon-wrap\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        </div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap searchable-info-wrap\\\">\\n        <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n        </svg>\\n        <div class=\\\"info searchable\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[if (privacy) { print(xabber.getString(\\\"incognito_group_settings__header\\\"))} else { print(xabber.getString(\\\"public_group_settings__header\\\"))}]}</div></div>\\n<div class=\\\"modal-content group-chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"property-wrap jid-info-wrap\\\">\\n        <div class=\\\"property-header\\\">{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}</div>\\n        <div class=\\\"jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n        </div>\\n        <p id=\\\"anonymous-public\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_public\\\"))]}</p>\\n        <p id=\\\"anonymous-incognito\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_incognito\\\"))]}</p>\\n    </div>\\n    {[fields.forEach(function (field) { if (field.type === 'hidden' || field.type === 'jid-multi') return;]}\\n    <div class=\\\"property-wrap {{field.var}}-field\\\">\\n        {[if (!(field.type == 'fixed' && field.values[0] === \\\"\\\")) {]}\\n        <div class=\\\"property-header\\\">{{field.label}}</div>\\n        {[}]}\\n        {[if (field.type === 'text-single') {]}\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <input value=\\\"{{field.values[0]}}\\\" id=\\\"new_{{field.var}}_value\\\" type=\\\"text\\\" name=\\\"{{field.var}}\\\" placeholder='{[print(xabber.getString(\\\"group_settings_edit__setting_name__hint\\\"))]}' class=\\\"text-field\\\">\\n        </div>\\n        {[} else if (field.type === 'text-multi') {]}\\n        <textarea placeholder='{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}' id=\\\"{{field.var}}\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea rich-textarea\\\">{{field.values[0]}}</textarea>\\n        {[} else if (field.type === 'list-single') { field.options.forEach(function (option) {]}\\n        <div class=\\\"property-radio\\\">\\n            <input {[if (option.value === field.values[0]){]}checked{[}]} id=\\\"{{option.value}}\\\" name=\\\"{{field.var}}\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n            <label class=\\\"{{option.value}}-label\\\" for=\\\"{{option.value}}\\\">{{option.label}}</label>\\n        </div>\\n        {[});} else  if (field.type === 'fixed' && field.values[0] !== \\\"\\\") {]}\\n        <div class=\\\"fixed-field{[if (field.var === 'description'){]} description{[}]}\\\">\\n            <div class=\\\"value\\\">{{field.values[0]}}</div>\\n        </div>\\n        {[}]}\\n        {[if (field.var === 'index'){]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_index__text\\\"))]}</p>\\n        {[} else if (field.var === 'membership') {]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_membership__text\\\"))]}</p>\\n        {[}]}\\n    </div>\\n    {[})]}\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (!all_fixed){]}\\n        <button class=\\\"btn-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        {[}]}\\n        <button class=\\\"btn-cancel btn-flat btn-dark btn-main\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info description short\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"></div>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap name-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\">\\n                    <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap searchable-info-wrap\\\">\\n                <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n                </svg>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info searchable\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap model-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info model\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\"><div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>{[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}</div>\\n            {[if (jid) {]}<p class=\\\"jid one-line\\\">{{jid}}</p>{[}]}\\n            </div>\\n        </div>\\n    </td>\\n    <td class=\\\"last-seen\\\">{[if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}</td>\\n    <td class=\\\"role\\\">{[if (role !== 'member') {]}{{role}}{[}]}</td>\\n    <td>\\n        {[if (is_me) {]}\\n        <span style=\\\"font-size:12px\\\" class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</span>\\n        {[} else {]}\\n        <div class=\\\"buttons-wrap\\\">\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n            </div>\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick_and_block\\\"))]}' class=\\\"btn-block\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path fill=\\\"#9e9e9e\\\" d=\\\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12C4,13.85 4.63,15.55 5.68,16.91L16.91,5.68C15.55,4.63 13.85,4 12,4M12,20A8,8 0 0,0 20,12C20,10.15 19.37,8.45 18.32,7.09L7.09,18.32C8.45,19.37 10.15,20 12,20Z\\\" />\\n                </svg>\\n            </div>\\n        </div>\\n        {[}]}\\n    </td>\\n</tr>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\">\\n                <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n                {[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}\\n            </div>\\n                <div class=\\\"bottom-line\\\">\\n                    {[ if (is_me) {]}\\n                    <div class=\\\"online-status text-color-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                    {[}else if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}\\n                </div>\\n            </div>\\n            {[if (role === 'owner' || role === 'admin') {]}\\n            <div class=\\\"participant-buttons-wrap\\\">\\n                <div class=\\\"participant-role\\\">\\n                    {[if (role === 'owner') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star\\\"></i>\\n                    {[}else if (role === 'admin') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star-outline\\\"></i>\\n                    {[}]}\\n                </div>\\n            </div>\\n            {[} else if (!is_me) {]}\\n                <div class=\\\"buttons-wrap\\\">\\n                    <div title='{[print(xabber.getString(\\\"groupchat_edit_member\\\"))]}' class=\\\"btn-edit-member\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n                    </div>\\n                    <!--<div title='{[print(xabber.getString(\\\"mute_chat\\\"))]}' class=\\\"btn-mute\\\">-->\\n                        <!--<i class=\\\"mdi mdi-24px mdi-microphone-off\\\"></i>-->\\n                    <!--</div>-->\\n                    <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n                    </div>\\n                </div>\\n            {[}]}\\n        </div>\\n    </td>\\n</tr>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"insert-emoticon\\\">\\n                <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n            </div>\\n            <div class=\\\"emoticons-panel-wrap\\\">\\n                <div class=\\\"emoticons-panel\\\"></div>\\n                <div class=\\\"emoji-menu\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-status\\\">\\n    <div class=\\\"status-wrap\\\">\\n        <div class=\\\"status status-bulb\\\"></div>\\n        <div class=\\\"status-message\\\"></div>\\n    </div>\\n    <div class=\\\"btn-edit-status\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"group-chat-status-wrap\\\" title=\\\"{[print(xabber.getString('group_settings__properties__tooltip_click_to_set_status'))]}\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status-outline\\\"></svg></div>\\n    <div class=\\\"group-chat-status-border\\\">\\n        <div class=\\\"group-chat-status\\\">\\n            <div class=\\\"status-wrap\\\">\\n                <div class=\\\"status-message dotted-underline\\\"></div>\\n                <div class=\\\"status status-bulb\\\"></div>\\n            </div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap one-line\\\"></div>\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"msg-wrap\\\"><p class=\\\"msg-text\\\"></p></div>\\n        <div class=\\\"panel-footer noselect\\\">\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-join btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n                <button class=\\\"btn-decline btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_decline\\\"))]}</button>\\n                <button class=\\\"btn-block btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"list-item {{status}}-user\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"member-item\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <p title=\\\"{{jid}}\\\" class=\\\"one-line\\\">{{jid}}</p>\\n        {[if (status == 'invitations') {]}\\n        <div title='{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}' class=\\\"revoke-invitation\\\">\\n            {[}else{]}\\n            <div title='{[print(xabber.getString(\\\"groupchat_unblock\\\"))]}' class=\\\"unblock-user\\\">\\n                {[}]}\\n                <i class=\\\"mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"rich-textarea field-input badge-text\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}' contenteditable></div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    {[if (subscription !== null) {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{id}}-buttons-wrap\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n        <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n    </ul>\\n    {[}]}\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n            </svg>\\n            <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>{[}]}\\n            <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n            <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            {[if (jid) {]}<p title=\\\"{{jid}}\\\" class=\\\"jid selectable-text one-line\\\">{{jid}}</p>{[}]}\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n            {[ if (is_blocked_contact) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"action_contact_blocked\\\"))]}</div>\\n            {[}]}\\n            {[if (subscription === null) {]}<p class=\\\"role selectable-text one-line\\\">{[if (blocked) { print(xabber.getString(\\\"groupchat_blocked\\\")); }else{print(xabber.getString(\\\"settings_group_member__placeholder_not_a_member\\\"));}]}</p>{[}]}\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-incognito btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-set-badge-wrap\\\">\\n            <svg class=\\\"btn-set-badge\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M17,3H14V6H10V3H7A2,2 0 0,0 5,5V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V5A2,2 0 0,0 17,3M12,8A2,2 0 0,1 14,10A2,2 0 0,1 12,12A2,2 0 0,1 10,10A2,2 0 0,1 12,8M16,16H8V15C8,13.67 10.67,13 12,13C13.33,13 16,13.67 16,15V16M13,5H11V1H13V5M16,19H8V18H16V19M12,21H8V20H12V21Z\\\" />\\n            </svg>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_badge\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-remove btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n            <div class=\\\"participant-edit-badge hidden\\\"></div>\\n            <div class=\\\"participant-info-text\\\">\\n                <div class=\\\"nickname\\\">\\n                    {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n                </div>\\n                {[ if (is_myself) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                {[}]}\\n                {[ if (subscription === null && blocked) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_blocked\\\"))]}</div>\\n                {[} else if (subscription === null) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_kicked\\\"))]}</div>\\n                {[}]}\\n\\n            </div>\\n        </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-incognito btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-message-text btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap non-active btn-set-visibility-wrap\\\">\\n            <i title=\\\"Feature not yet implemented\\\" class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-eye btn-set-visibility\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_visibility_visible\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi contact-btn mdi-24px mdi-account-remove text-color-500 btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"vcard-wrap vcard\\\">\\n        {[if (jid) {]}\\n        <div class=\\\"info-wrap jid-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">{{jid}}</div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        {[if (role === 'owner' || role === 'admin') {]}\\n        <div class=\\\"info-wrap role-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                {[if (role === 'owner') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star\\\"></i>\\n                {[}else if (role === 'admin') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star-outline\\\"></i>\\n                {[}]}\\n            </div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (role === 'owner') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_owner\\\"))]}\\n                            {[}else if (role === 'admin') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_admin\\\"))]}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_role\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"info-wrap present-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" {[if (!present) {]}data-svgname=\\\"status-outline\\\"{[} else {]}data-svgname=\\\"clock-outline\\\"{[}]}></svg></div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (!present) {]}\\n                                {[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}\\n                            {[} else {]}\\n                            {{pretty_present}}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[if (!present) {]}{[print(xabber.getString(\\\"groupchat_status\\\"))]}{[} else {]}{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}{[}]}</div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-wrap\\\">\\n    <div class=\\\"participant-details-info-wrap\\\">\\n    </div>\\n    <ul class=\\\"tabs participant-tabs bottom-block-tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"bottom-block participant-bottom-block\\\">\\n        <div class=\\\"block-wrap participants-details-media-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"participant-details-edit-wrap edit-wrap\\\">\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-participant-image\\\">\\n                    <input class=\\\"hidden\\\" title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div id=\\\"{{view.cid}}-participant-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                    <div class=\\\"btn-emoji-panel property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-selfie property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-choose-image property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"participant-details-edit-inputs\\\">\\n            <div class=\\\"edit-participant-name-wrap\\\">\\n            </div>\\n            <div class=\\\"edit-participant-badge-wrap\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"rights-wrap\\\">\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"header\\\">\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"rights-wrap\\\">\\n    </div>\\n</div>\\n\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n        <th>{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}</th>\\n        <th>{[print(xabber.getString(\\\"groupchat_role\\\"))]}</th>\\n        <th></th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<svg class=\\\"pin\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#757575\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\" />\\n</svg>\\n<div class=\\\"msg-wrap\\\">\\n    <div class=\\\"chat-msg-author-wrap\\\">\\n        <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{author}}</div>{[if (fwd_author){]}<svg class=\\\"fwd-chevron\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"#9E9E9E\\\" d=\\\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\\\"></path></svg><div class=\\\"chat-msg-author text-color-700 one-line\\\">{{fwd_author}}</div>{[}]}\\n        <div class=\\\"msg-time\\\">{{time}}</div>\\n    </div>\\n    <div class=\\\"chat-msg-content chat-text-content one-line\\\">\\n        {{message}}\\n    </div>\\n</div>\\n<svg title='{[print(xabber.getString(\\\"group_chat__pinned_message__tooltip_unpin\\\"))]}' class=\\\"close\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path class=\\\"close\\\" fill=\\\"#9E9E9E\\\" d=\\\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\\\" />\\n</svg>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        {[ if (is_myself) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n        {[}]}\\n        {[ if (is_myself) {]}\\n        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n        </svg>\\n        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        </div>\\n        {[}]}\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[ if (is_myself) {]}\\n        <div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>\\n        {[}]}\\n        <div title=\\\"{{nickname}}\\\" class=\\\"{{is_myself && 'is-myself'}} nickname one-line\\\">{{nickname}}</div>\\n        <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n        {[ if (is_myself) {]}\\n        <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        <div class=\\\"preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n        <div class=\\\"participant-edit-badge hidden\\\"></div>\\n        <div class=\\\"participant-info-text\\\">\\n            <div class=\\\"nickname\\\">\\n                {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            </div>\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"right-item restriction restriction-{{name}}\\\">\\n    <div class=\\\"right-name\\\">{{pretty_name}}</div>\\n    <div class=\\\"field clickable-field restriction-{{name}}-state switch normal\\\">\\n        <input type=\\\"checkbox\\\" {[if (type === 'fixed') {]} onclick=\\\"return false;\\\" {[}]} class=\\\"filled-in\\\" id=\\\"{{name}}\\\">\\n        <label for=\\\"{{name}}\\\"></label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"select-timer\\\">\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-timer-{{right_name}}\\\">\\n        <div class=\\\"timer-item-wrap\\\"><div data-value=\\\"0\\\" class=\\\"default-value property-value\\\">{[print(xabber.getString(\\\"dialog_rights__button_set_timer\\\"))]}</div></div>\\n    </div>\\n    <div id=\\\"select-timer-{{right_name}}\\\" class=\\\"dropdown-content noselect\\\">\\n        {[expire_options.forEach(function (option) {]}\\n        <div data-value=\\\"{{option.value}}\\\" class=\\\"property-variant\\\">{{option.label}}</div>\\n        {[}.bind(this));]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_set_status__header\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <div class=\\\"loading-status\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </ul>\\n</div>\\n\";","export default \"<li data-value=\\\"{{status.value}}\\\">\\n    <span class=\\\"status-value one-line\\\">{{status.label}}</span>\\n    <span class=\\\"status-bulb\\\" data-status=\\\"{{status.show}}\\\"></span>\\n</li>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_circle_settings__header\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"modal-content\\\">\\n            <div class=\\\"field-wrap group-name\\\">\\n                <div class=\\\"input-field\\\">\\n                    <label for=\\\"{{view.cid}}-group-name\\\">{[print(xabber.getString(\\\"circle_name\\\"))]}</label>\\n                    <input id=\\\"{{view.cid}}-group-name\\\" type=\\\"text\\\" name=\\\"group_name\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"category_offline_contacts\\\"))]}</div>\\n            <div class=\\\"setting-wrap\\\">\\n                <div class=\\\"setting offline radio-button field-wrap\\\">\\n                    <div class=\\\"field radio-field clickable-field\\\">\\n                        <form action=\\\"#\\\">\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                                <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"show_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                                <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"hide_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show-offline-default\\\" />\\n                                <label for=\\\"{{view.cid}}-show-offline-default\\\">{[print(xabber.getString(\\\"dialog_circle_settings__label_common_settings\\\"))]}</label>\\n                            </p>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-dark btn-delete left\\\">{[print(xabber.getString(\\\"circle_remove\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-apply\\\">{[print(xabber.getString(\\\"dialog_circle_settings__button_apply\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"groups-list-wrap\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg></div>\\n    <div class=\\\"groups\\\">\\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"groups-wrap\\\">\\n    <div class=\\\"checkbox-list\\\">\\n    </div>\\n</div>\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (!checked) {]}\\n        <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n            <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n        </div>\\n    {[}]}\\n{[ } ]}\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n        <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n    </div>\\n{[ } ]}\\n    <div class=\\\"new-group-field-wrap\\\">\\n        <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n            <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n            <label for=\\\"new_group_checkbox\\\"></label>\\n        </div>\\n        <div class=\\\"input-field new-group-name\\\">\\n            <input class=\\\"rich-textarea xabber-input\\\" id=\\\"new-group-name\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n        </div>\\n    </div>\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (checked) {]}\\n        <div data-groupname=\\\"{{name}}\\\" title=\\\"{[print(xabber.getString('contact_tooltip_remove_by_click'))]}\\\" class=\\\"group ground-color-50\\\">\\n            <div>{{name}}</div>\\n        </div>\\n    {[}]}\\n\\n{[ } ]}\\n\";","export default \"<div class=\\\"new-group-field-wrap\\\">\\n    <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n        <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n        <label for=\\\"new_group_checkbox\\\"></label>\\n    </div>\\n    <div class=\\\"input-field new-group-name\\\">\\n        <input class=\\\"xabber-input\\\" id=\\\"new-group-name\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n    </div>\\n</div>\";","export default \"<div class=\\\"gallery-file\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-uniqueid=\\\"{{file.uniqueid}}\\\"  data-file=\\\"{{file.sources[0]}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files && !is_encrypted))){]}\\n    <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\"\\n         data-mfp-src=\\\"{{file.sources[0]}}\\\"\\n         src=\\\"{[if (file.thumbnail){]}{{file.thumbnail}}{[} else {]}{{file.sources[0]}}{[}]}\\\"\\n         onError=\\\"this.parentElement.className = this.parentElement.className + ' hidden';\\\"\\n    >\\n    {[} else {]}\\n    {[if (svg_icon == 'file-audio' && file.true_voice){]}\\n    <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n        <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-file-audio-container\\\">\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"gallery-file-placeholder-background\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n    </div>\\n    {[}]}\\n    <div class=\\\"gallery-file-title one-line\\\">\\n        {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span>\\n    </div>\\n    {[if (duration && file.true_voice){]}\\n    <div class=\\\"gallery-voice-file-duration\\\">\\n        0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n    </div>\\n    {[}]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"gallery-empty\\\">\\n    <div class=\\\"gallery-empty-icon-wrap\\\">\\n        <i class=\\\"gallery-empty-icon mdi mdi-24px mdi-package-variant\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-empty-text\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"contacts-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n\\n    <div class=\\\"contact-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"contact-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"collapsed-wrap\\\">\\n        <i class=\\\"collapsed-contacts-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n        <div class=\\\"all-contacts-counter\\\"></div>\\n    </div>\\n    <div class=\\\"expanded-wrap\\\">\\n        <div class=\\\"roster-head panel-head\\\">\\n            <div class=\\\"contacts-header\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n            <div class=\\\"roster-button btn-pin\\\"></div>\\n        </div>\\n\\n        <div class=\\\"contact-list-wrap\\\">\\n            <div class=\\\"contact-list\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_offline_contacts\\\"))]}</div>\\n    <div class=\\\"setting offline-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                    <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_show\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                    <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_hide\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_sorting\\\"))]}</div>\\n    <div class=\\\"setting sorting-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"online-first\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-online-first\\\" />\\n                    <label for=\\\"{{view.cid}}-online-first\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_online_first\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"by-alphabet\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-by-alphabet\\\" />\\n                    <label for=\\\"{{view.cid}}-by-alphabet\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_alphabet\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"group-chat-title-wrap hidden\\\">\\n    <div class=\\\"account-indicator ground-color-700\\\"></div>\\n    <div class=\\\"contact-icon\\\">\\n    </div>\\n    <div class=\\\"group-chat-name one-line\\\"></div>\\n</div>\\n<div class=\\\"mention-info-wrap\\\">\\n<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"mention-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n    <span class=\\\"msg-counter hidden\\\"></span>\\n</div>\\n</div>\";","export default \"<div class=\\\"mentions-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"mentions-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"mentions-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"mentions_list__placeholder\\\"))]}</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"searching__chat_properties__header\\\"))]}</span>\\n</div>\\n<div class=\\\"chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\">{{name}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value one-line\\\">{{description}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap anonymous-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-comment-question-outline\\\"></i>\\n        <div class=\\\"info anonymous\\\">\\n            <div class=\\\"value one-line\\\">{{privacy}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-lock-open-outline\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\">{{membership}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n<button class=\\\"btn-join-chat btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-indicator ground-color-{{color}}-500\\\"></div>\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-item-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"name one-line\\\">{{jid}}</div>\\n</div>\";","export default \"<div class=\\\"searching-panel\\\">\\n    <div class=\\\"search-wide search-form\\\">\\n        <div class=\\\"account-indicator ground-color-500\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"searching__placeholder_search_by_domain\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"searching-properties-field\\\">\\n        <div class=\\\"dropdown-button\\\" data-visible=\\\"false\\\">\\n            <i class=\\\"mdi mdi-24px mdi-chevron-down arrow\\\"></i>\\n        </div>\\n    </div>\\n    <ul id=\\\"select-searching-properties\\\" class=\\\"selectable-text\\\">\\n        <div class=\\\"account-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_account\\\"))]}</p>\\n            <div class=\\\"account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-searching\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-searching\\\" class=\\\"dropdown-content\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"title-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_title\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_title\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"sorting-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_sort_by\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <button class=\\\"btn-search btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"search\\\"))]}</button>\\n    </ul>\\n</div>\\n<div class=\\\"searching-result-wrap\\\">\\n    <div class=\\\"chats-list-wrap\\\">\\n        <div class=\\\"result-string\\\"></div>\\n        <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div></div>\\n        <div class=\\\"chats-list\\\"></div></div>\\n    <div class=\\\"searching-more\\\"></div>\\n</div>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account-cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,4 C7.790861,4 6,5.790861 6,8 C6,10.209139 7.790861,12 10,12 C12.209139,12 14,10.209139 14,8 C14,5.790861 12.209139,4 10,4 M17.5,13 C15,13 13,15 13,17.5 C13,20 15,22 17.5,22 C20,22 22,20 22,17.5 C22,15 20,13 17.5,13 M10,14 C5.58,14 2,15.79 2,18 L2,20 L11.5,20 C11.169935,19.2078439 11,18.3581691 11,17.5 C11.004284,16.3143165 11.3328048,15.1523902 11.95,14.14 C11.32,14.06 10.68,14 10,14 M17.5,14.5 C19.16,14.5 20.5,15.84 20.5,17.5 C20.5,18.06 20.35,18.58 20.08,19 L16,14.92 C16.42,14.65 16.94,14.5 17.5,14.5 M14.92,16 L19,20.08 C18.58,20.35 18.06,20.5 17.5,20.5 C15.84,20.5 14.5,19.16 14.5,17.5 C14.5,16.94 14.65,16.42 14.92,16 Z\\\" id=\\\"mdi:account-cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,19 L5,19 L5,5 L19,5 M19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 M16.5,16.25 C16.5,14.75 13.5,14 12,14 C10.5,14 7.5,14.75 7.5,16.25 L7.5,17 L16.5,17 M12,12.25 C13.2426407,12.25 14.25,11.2426407 14.25,10 C14.25,8.75735931 13.2426407,7.75 12,7.75 C10.7573593,7.75 9.75,8.75735931 9.75,10 C9.75,11.2426407 10.7573593,12.25 12,12.25 Z\\\" id=\\\"mdi:account-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6,17 C6,15 10,13.9 12,13.9 C14,13.9 18,15 18,17 L18,18 L6,18 M15,9 C15,10.6568542 13.6568542,12 12,12 C10.3431458,12 9,10.6568542 9,9 C9,7.34314575 10.3431458,6 12,6 C13.6568542,6 15,7.34314575 15,9 M3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.8954305 20.1045695,3 19,3 L5,3 C3.89,3 3,3.9 3,5 Z\\\" id=\\\"mdi:account-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/address-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/address\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/alarm-bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M15,18.66 L15,22 L5,22 L5,18.66 C8.09301265,20.4500491 11.9069873,20.4500491 15,18.66 M22,4 C22,2.8954305 21.1045695,2 20,2 C19.69,2 19.39,2.07 19.12,2.21 C18.82,2.36 18.56,2.58 18.36,2.85 C17.9280885,3.46077217 17.873744,4.26171236 18.219194,4.92522914 C18.564644,5.58874591 19.2519508,6.00355658 20,6 L20.24,6 C21.97,10.43 20.66,15.46 17,18.5 C16.68,18.75 16.35,19 16,19.22 L16,21 L17,21 L17,19.74 C20.14,17.5 22,13.86 22,10 C22,8.5 21.72,7 21.17,5.62 C21.69,5.24 22,4.64 22,4 M18,10 C18,12.1217319 17.1571453,14.1565632 15.6568542,15.6568542 C14.1565632,17.1571453 12.1217319,18 10,18 C5.581722,18 2,14.418278 2,10 C2,5.581722 5.581722,2 10,2 C12.1217319,2 14.1565632,2.84285472 15.6568542,4.34314575 C17.1571453,5.84343678 18,7.87826808 18,10 L18,10 Z\\\" id=\\\"mdi:alarm-bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/alert-circle\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,13 L11,13 L11,7 L13,7 M13,17 L11,17 L11,15 L13,15 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C14.6521649,22 17.195704,20.9464316 19.0710678,19.0710678 C20.9464316,17.195704 22,14.6521649 22,12 C22,9.3478351 20.9464316,6.80429597 19.0710678,4.92893219 C17.195704,3.0535684 14.6521649,2 12,2 Z\\\" id=\\\"mdi:alert-circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.84,22.73 L18.11,20 L3,20 L3,19 L5,17 L5,11 C5.00430327,9.85524651 5.28929416,8.72901748 5.83,7.72 L1.11,3 L2.39,1.73 L22.11,21.46 L20.84,22.73 Z M19.0000002,15.8 L19.0000002,11 C19.0007944,7.90366232 16.9672665,5.17466784 14,4.29 C14.0049007,4.19339544 14.0049007,4.09660456 14,4 C14,2.8954305 13.1045695,2 12,2 C10.8954305,2 10,2.8954305 10,4 C9.99507868,4.09660403 9.99507868,4.19339597 10,4.29 C9.385,4.474 8.8,4.743 8.26,5.09 L19.0000002,15.8 Z M12,23 C13.1045695,23 14,22.1045695 14,21 L10,21 C10,22.1045695 10.8954305,23 12,23 Z\\\" id=\\\"mdi:bell-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell-sleep\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,21 L14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 Z M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M15,9 L9,9 L9,11 L12.24,11 L9,13.7 L9,16 L15,16 L15,14 L11.76,14 L15,11.3 L15,9 Z\\\" id=\\\"mdi:bell-sleep\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 L14,21 Z\\\" id=\\\"mdi:bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/birthday-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6 C13.1045695,6 14,5.1045695 14,4 C14,3.62 13.9,3.27 13.71,2.97 L12,0 L10.29,2.97 C10.1,3.27 10,3.62 10,4 C10,5.1 10.9,6 12,6 M18,9 L13,9 L13,7 L11,7 L11,9 L6,9 C4.34,9 3,10.34 3,12 L3,21 C3,21.55 3.45,22 4,22 L20,22 C20.55,22 21,21.55 21,21 L21,12 C21,10.34 19.66,9 18,9 M19,20 L5,20 L5,17 C5.9,17 6.76,16.63 7.4,16 L8.5,14.92 L9.56,16 C10.87,17.3 13.15,17.29 14.45,16 L15.53,14.92 L16.6,16 C17.24,16.63 18.1,17 19,17 L19,20 M19,15.5 C18.5,15.5 18,15.3 17.65,14.93 L15.5,12.8 L13.38,14.93 C12.64,15.67 11.35,15.67 10.61,14.93 L8.5,12.8 L6.34,14.93 C6,15.29 5.5,15.5 5,15.5 L5,12 C5,11.45 5.45,11 6,11 L18,11 C18.55,11 19,11.45 19,12 L19,15.5 Z\\\" id=\\\"mdi:cake-variant-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/birthday\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,7 C13.11,7 14,6.1 14,5 C14,4.62 13.9,4.27 13.71,3.97 L12,1 L10.29,3.97 C10.1,4.27 10,4.62 10,5 C10,6.1045695 10.8954305,7 12,7 M16.6,17 L15.53,15.92 L14.45,17 C13.15,18.29 10.87,18.3 9.56,17 L8.5,15.92 L7.4,17 C6.75,17.64 5.88,18 4.96,18 C4.23,18 3.56,17.77 3,17.39 L3,22 C3,22.5522847 3.44771525,23 4,23 L20,23 C20.5522847,23 21,22.5522847 21,22 L21,17.39 C20.44,17.77 19.77,18 19.04,18 C18.12,18 17.25,17.64 16.6,17 M18,10 L13,10 L13,8 L11,8 L11,10 L6,10 C4.34314575,10 3,11.3431458 3,13 L3,14.54 C3,15.62 3.88,16.5 4.96,16.5 C5.5,16.5 6,16.3 6.34,15.93 L8.5,13.8 L10.61,15.93 C11.35,16.67 12.64,16.67 13.38,15.93 L15.5,13.8 L17.65,15.93 C18,16.3 18.5,16.5 19.03,16.5 C20.11,16.5 21,15.62 21,14.54 L21,13 C21,11.3431458 19.6568542,10 18,10 Z\\\" id=\\\"mdi:cake-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/blocked-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15 L20,18 L23,18 L23,20 L20,20 L20,23 L18,23 L18,20 L15,20 L15,18 L18,18 L18,15 L20,15 Z M12,2 C17.5,2 22,6.5 22,12 C22,12.5859564 21.9489239,13.1605626 21.851004,13.7195862 C21.2621133,13.4007388 20.6141835,13.1778427 19.9277796,13.0712956 C19.9754227,12.7216453 20,12.3635535 20,12 C20,10.1 19.4,8.4 18.3,7.1 L7.1,18.3 C8.5,19.3 10.2,20 12,20 C12.3635535,20 12.7216453,19.9754227 13.0726961,19.9278476 C13.1778427,20.6141835 13.4007388,21.2621133 13.719191,21.8507762 C13.1605626,21.9489239 12.5859564,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 Z M12,4 C7.6,4 4,7.6 4,12 C4,13.7882353 4.53148789,15.399308 5.51109302,16.6664767 L5.7,16.9 L16.9,5.7 C15.6,4.6 13.9,4 12,4 Z\\\" id=\\\"xabber:block-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/blocked\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M12.3574649,4.64359326 L4.64359326,12.3574649 C5.57228864,13.073866 6.73637986,13.5 8,13.5 C11.0375661,13.5 13.5,11.0375661 13.5,8 C13.5,6.73637986 13.073866,5.57228864 12.3574649,4.64359326 Z M8,2.5 C4.96243388,2.5 2.5,4.96243388 2.5,8 C2.5,9.26408031 2.92644441,10.4285592 3.64331784,11.3574212 L11.3574212,3.64331784 C10.4285592,2.92644441 9.26408031,2.5 8,2.5 Z\\\" id=\\\"blocked\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/bot-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,3.5 C9.93299662,3.5 11.5,5.06700338 11.5,7 L11.5,9.5 C11.5,11.1568542 9.93299662,12.5 8,12.5 C6.06700338,12.5 4.5,11.1568542 4.5,9.5 L4.5,7 L4.50517886,6.8079648 C4.60487355,4.9642776 6.1314366,3.5 8,3.5 Z M8,5 C6.9456382,5 6.08183488,5.81587779 6.00548574,6.85073766 L6,7 L6,8 C6,8.82842712 6.8954305,9.5 8,9.5 C9.1045695,9.5 10,8.82842712 10,8 L10,7 C10,5.8954305 9.1045695,5 8,5 Z M3.5,6 C3.77614237,6 4,6.22385763 4,6.5 L4,9.5 C4,9.77614237 3.77614237,10 3.5,10 C3.22385763,10 3,9.77614237 3,9.5 L3,6.5 C3,6.22385763 3.22385763,6 3.5,6 Z M12.5,6 C12.7761424,6 13,6.22385763 13,6.5 L13,9.5 C13,9.77614237 12.7761424,10 12.5,10 C12.2238576,10 12,9.77614237 12,9.5 L12,6.5 C12,6.22385763 12.2238576,6 12.5,6 Z\\\" id=\\\"Bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/bot\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8.5,2.9 C8.83137085,2.9 9.1,3.16862915 9.1,3.5 C9.1,3.6775201 9.02290618,3.83703397 8.9003726,3.94688754 L8.899,4.999 L11,5 C11.5522847,5 12,5.44771525 12,6 L12,7 C12.2761424,7 12.5,7.22385763 12.5,7.5 L12.5,8.5 C12.5,8.77614237 12.2761424,9 12,9 L12,11 C12,11.5522847 11.5522847,12 11,12 L5,12 C4.44771525,12 4,11.5522847 4,11 L4,9 C3.72385763,9 3.5,8.77614237 3.5,8.5 L3.5,7.5 C3.5,7.22385763 3.72385763,7 4,7 L4,6 C4,5.44771525 4.44771525,5 5,5 L8.1,4.999 L8.0996274,3.94688754 C7.97709382,3.83703397 7.9,3.6775201 7.9,3.5 C7.9,3.16862915 8.16862915,2.9 8.5,2.9 Z M9.5,10 L6.5,10 C6.22385763,10 6,10.2238576 6,10.5 C6,10.7761424 6.22385763,11 6.5,11 L9.5,11 C9.77614237,11 10,10.7761424 10,10.5 C10,10.2238576 9.77614237,10 9.5,10 Z M6.5,6 C6.22385763,6 6,6.22385763 6,6.5 L6,7 L5.5,7 C5.22385763,7 5,7.22385763 5,7.5 C5,7.77614237 5.22385763,8 5.5,8 L6,8 L6,8.5 C6,8.77614237 6.22385763,9 6.5,9 C6.77614237,9 7,8.77614237 7,8.5 L7,8 L7.5,8 C7.77614237,8 8,7.77614237 8,7.5 C8,7.22385763 7.77614237,7 7.5,7 L7,7 L7,6.5 C7,6.22385763 6.77614237,6 6.5,6 Z M9.5,7 C9.22385763,7 9,7.22385763 9,7.5 C9,7.77614237 9.22385763,8 9.5,8 C9.77614237,8 10,7.77614237 10,7.5 C10,7.22385763 9.77614237,7 9.5,7 Z\\\" id=\\\"bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bug\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,12 L10,12 L10,10 L14,10 M14,16 L10,16 L10,14 L14,14 M20,8 L17.19,8 C16.7389578,7.21773668 16.1167554,6.54767256 15.37,6.04 L17,4.41 L15.59,3 L13.42,5.17 C12.4901518,4.94442551 11.5198482,4.94442551 10.59,5.17 L8.41,3 L7,4.41 L8.62,6.04 C7.88,6.55 7.26,7.22 6.81,8 L4,8 L4,10 L6.09,10 C6.04,10.33 6,10.66 6,11 L6,12 L4,12 L4,14 L6,14 L6,15 C6,15.34 6.04,15.67 6.09,16 L4,16 L4,18 L6.81,18 C7.85,19.79 9.78,21 12,21 C14.22,21 16.15,19.79 17.19,18 L20,18 L20,16 L17.91,16 C17.96,15.67 18,15.34 18,15 L18,14 L20,14 L20,12 L18,12 L18,11 C18,10.66 17.96,10.33 17.91,10 L20,10 L20,8 Z\\\" id=\\\"mdi:bug\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/call-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15.5 C18.8,15.5 17.5,15.3 16.4,14.9 C16.3,14.9 16.2,14.9 16.1,14.9 C15.8,14.9 15.6,15 15.4,15.2 L13.2,17.4 C10.4,15.9 8,13.6 6.6,10.8 L8.8,8.6 C9.1,8.3 9.2,7.9 9,7.6 C8.7,6.5 8.5,5.2 8.5,4 C8.5,3.5 8,3 7.5,3 L4,3 C3.5,3 3,3.5 3,4 C3,13.4 10.6,21 20,21 C20.5,21 21,20.5 21,20 L21,16.5 C21,16 20.5,15.5 20,15.5 L20,15.5 Z M5,5 L6.5,5 C6.6,5.9 6.8,6.8 7,7.6 L5.8,8.8 C5.4,7.6 5.1,6.3 5,5 L5,5 Z M19,19 C17.7,18.9 16.4,18.6 15.2,18.2 L16.4,17 C17.2,17.2 18.1,17.4 19,17.4 L19,19 Z\\\" id=\\\"mdi:phone-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/call\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6.62,10.79 C8.06,13.62 10.38,15.94 13.21,17.38 L15.41,15.18 C15.69,14.9 16.08,14.82 16.43,14.93 C17.55,15.3 18.75,15.5 20,15.5 C20.5522847,15.5 21,15.9477153 21,16.5 L21,20 C21,20.5522847 20.5522847,21 20,21 C10.6111593,21 3,13.3888407 3,4 C3,3.73478351 3.10535684,3.4804296 3.29289322,3.29289322 C3.4804296,3.10535684 3.73478351,3 4,3 L7.5,3 C8.05228475,3 8.5,3.44771525 8.5,4 C8.5,5.25 8.7,6.45 9.07,7.57 C9.18,7.92 9.1,8.31 8.82,8.59 L6.62,10.79 Z\\\" id=\\\"mdi:phone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/camera-retake\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,5 L17,5 L15,3 L9,3 L7,5 L4,5 C2.8954305,5 2,5.8954305 2,7 L2,19 C2,20.1045695 2.8954305,21 4,21 L20,21 C21.1045695,21 22,20.1045695 22,19 L22,7 C22,5.8954305 21.1045695,5 20,5 M12,18.0000026 C10.92,18.0000026 9.86,17.65 9,17 L10.44,15.56 C10.91,15.85 11.45,16 12,16 C13.6568542,16 15,14.6568542 15,13 C15,11.3431458 13.6568542,10 12,10 C10.74,10 9.6,10.8 9.18,12 L11,12 L8,15 L5,12 L7.1,12 C7.36424064,10.6999079 8.13463224,9.5582575 9.24136868,8.82668596 C10.3481051,8.09511441 11.7003328,7.83367752 13,8.1 C15.5173928,8.61117175 17.2378687,10.9467344 16.9797109,13.5024961 C16.7215532,16.0582577 14.5687655,18.0025816 12,18.0000026 L12,18.0000026 Z\\\" id=\\\"mdi:camera-retake\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/camera\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M4,5 L7,5 L9,3 L15,3 L17,5 L20,5 C21.1045695,5 22,5.8954305 22,7 L22,19 C22,20.1045695 21.1045695,21 20,21 L4,21 C2.8954305,21 2,20.1045695 2,19 L2,7 C2,5.8954305 2.8954305,5 4,5 M12,8 C9.23857625,8 7,10.2385763 7,13 C7,15.7614237 9.23857625,18 12,18 C14.7614237,18 17,15.7614237 17,13 C17,10.2385763 14.7614237,8 12,8 M12,10 C13.6568542,10 15,11.3431458 15,13 C15,14.6568542 13.6568542,16 12,16 C10.3431458,16 9,14.6568542 9,13 C9,11.3431458 10.3431458,10 12,10 Z\\\" id=\\\"mdi:camera\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C9.3478351,22 6.80429597,20.9464316 4.92893219,19.0710678 C3.0535684,17.195704 2,14.6521649 2,12 C2,9.3478351 3.0535684,6.80429597 4.92893219,4.92893219 C6.80429597,3.0535684 9.3478351,2 12,2 M12,3.99999926 C7.581722,3.99999926 4,7.581722 4,11.9999993 C4,13.85 4.63,15.55 5.68,16.91 L16.91,5.68 C15.505295,4.59031127 13.7778124,3.99923779 12,3.99999926 M12,20.0000007 C16.418278,20.0000007 20,16.418278 20,12 C20,10.15 19.37,8.45 18.32,7.09 L7.09,18.32 C8.49470497,19.4096887 10.2221876,20.0007622 12,20.0000007 L12,20.0000007 Z\\\" id=\\\"mdi:cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/channel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M6.5,12.5 C6.5,12.7761424 6.27614237,13 6,13 L5,13 C4.72385763,13 4.5,12.7761424 4.5,12.5 L4.5,9.997 L4.02563513,9.99796942 C3.49695533,9.99796942 3.06170233,9.63379568 3.00601829,9.10979782 L3,8.99514074 L3,7 C3,6.44278422 3.50172034,6 4.02563513,6 L8,6 L11,4 L11,12 L8,9.99796942 L6.5,9.997 L6.5,12.5 Z M12,6 C12.7835446,6.37375602 13.2808221,7.14951331 13.2820439,8 C13.2882682,8.85255761 12.7887168,9.63186239 12,10 L12,6 Z\\\" id=\\\"Horn\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chat\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.8954305,2 2,2.8954305 2,4 L2,22 L6,18 L20,18 C21.1045695,18 22,17.1045695 22,16 L22,4 C22,2.8954305 21.1045695,2 20,2 M6,9 L18,9 L18,11 L6,11 M14,14 L6,14 L6,12 L14,12 M18,8 L6,8 L6,6 L18,6\\\" id=\\\"mdi:message-text\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/check-circle\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.5,2 2,6.5 2,12 C2,17.5 6.5,22 12,22 C17.5,22 22,17.5 22,12 C22,6.5 17.5,2 12,2 M10,17 L5,12 L6.41,10.59 L10,14.17 L17.59,6.58 L19,8 L10,17 Z\\\" id=\\\"mdi:check-circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/check\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"check\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"21 7 9 19 3.5 13.5 4.91 12.09 9 16.17 19.59 5.59\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-down\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:chevron-down\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"7.41 8.58 12 13.17 16.59 8.58 18 10 12 16 6 10\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-left-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" transform=\\\"translate(11.5, 12) scale(-1, 1) translate(-11.5, -12)\\\" points=\\\"7 18.5 13.5 12 7 5.5 8.25 4.25 16 12 8.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-right-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 18.5 14.5 12 8 5.5 9.25 4.25 17 12 9.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C13.93,5 15.68,5.78 16.95,7.05 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-1\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-2\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-2\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-3\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,13.93 18.22,15.68 16.95,16.95 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-3\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-4\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 L12,5 Z\\\" id=\\\"mdi:circle-slice-4\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-5\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C10.07,19 8.32,18.22 7.05,16.95 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-5\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-6\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-6\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-7\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 C5,10.07 5.78,8.32 7.05,7.05 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-7\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-8\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 C5,8.13 8.13,5 12,5 M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 Z\\\" id=\\\"mdi:circle-slice-8\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circles-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61510772,4.31938417 C8.28417501,5.13922603 8.07752033,6.02134442 8.01792471,6.94352205 L7.91776678,6.99321105 C5.73983381,8.11301495 4.25,10.3825228 4.25,13 C4.25,16.7279221 7.27207794,19.75 11,19.75 C13.6571359,19.75 15.9556781,18.2146777 17.0568945,15.9827652 C17.9787775,15.9224511 18.8608306,15.7158021 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.85508685 4.80197429,5.36460986 8.61510772,4.31938417 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z M16.5,3 C14.0147186,3 12,5.01471863 12,7.5 C12,9.98528137 14.0147186,12 16.5,12 C18.9852814,12 21,9.98528137 21,7.5 C21,5.01471863 18.9852814,3 16.5,3 Z\\\" id=\\\"xabber:circles-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61467749,4.32037814 C8.21824496,5.30257332 8,6.37579974 8,7.5 C8,12.1944204 11.8055796,16 16.5,16 C17.6242003,16 18.6974267,15.781755 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.91703774 4.71884223,5.46909511 8.44481526,4.36788353 L8.61467749,4.32037814 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z\\\" id=\\\"xabber:circles\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/client-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,4.5 C23,6.43 21.43,8 19.5,8 C17.57,8 16,6.43 16,4.5 C16,2.57 17.57,1 19.5,1 C21.43,1 23,2.57 23,4.5 M19.5,10 L19,10 L19,19 L5,19 L5,5 L14.03,5 C14,4.84 14,4.67 14,4.5 C14,4 14.08,3.5 14.21,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,9.79 C20.5,9.92 20,10 19.5,10 Z\\\" id=\\\"mdi:checkbox-blank-badge-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/client\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,4.5 C23,6.43 21.43,8 19.5,8 C17.57,8 16,6.43 16,4.5 C16,2.57 17.57,1 19.5,1 C21.43,1 23,2.57 23,4.5 M19.5,10 C16.4647165,9.9944963 14.0055037,7.53528349 14,4.5 C14,4 14.08,3.5 14.21,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,9.79 C20.5,9.92 20,10 19.5,10 Z\\\" id=\\\"mdi:checkout-blank-badge\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/clock-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C6.47,22 2,17.5 2,12 C2,6.4771525 6.4771525,2 12,2 M12.5,7 L12.5,12.25 L17,14.92 L16.25,16.15 L11,13 L11,7 L12.5,7 Z\\\" id=\\\"mdi:clock-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/close\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:close\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/cloud\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.35,10.03 C18.67,6.59 15.64,4 12,4 C9.11,4 6.6,5.64 5.35,8.03 C2.34,8.36 0,10.9 0,14 C0,17.3137085 2.6862915,20 6,20 L19,20 C20.3260824,20 21.597852,19.4732158 22.5355339,18.5355339 C23.4732158,17.597852 24,16.3260824 24,15 C24,12.36 21.95,10.22 19.35,10.03 Z\\\" id=\\\"mdi:cloud\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/contact-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M15,14 C12.33,14 7,15.33 7,18 L7,20 L23,20 L23,18 C23,15.33 17.67,14 15,14 M6,10 L6,7.5 L4,7.5 L4,10 L1.5,10 L1.5,12 L4,12 L4,14.5 L6,14.5 L6,12 L8.5,12 L8.5,10 M15,12 C17.209139,12 19,10.209139 19,8 C19,5.790861 17.209139,4 15,4 C12.790861,4 11,5.790861 11,8 C11,10.209139 12.790861,12 15,12 Z\\\" id=\\\"xabber:contact-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs-gps\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs-gps\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\\\" id=\\\"mdi:crosshairs-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/database-lock\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,3 C15.42,3 19,4.79 19,7 C19,9.21 15.42,11 11,11 C6.58,11 3,9.21 3,7 C3,4.79 6.58,3 11,3 M19,12.03 C17.11,12.24 15.57,13.62 15.13,15.43 C13.92,15.79 12.5,16 11,16 C6.58,16 3,14.21 3,12 L3,9 C3,11.21 6.58,13 11,13 C15.42,13 19,11.21 19,9 L19,12.03 M14,17.71 L14,20.71 C13.07,20.9 12.06,21 11,21 C6.58,21 3,19.21 3,17 L3,14 C3,16.21 6.58,18 11,18 C12.06,18 13.07,17.9 14,17.71 M19.5,14 C20.8807119,14 22,15.1192881 22,16.5 L22,17 C22.5522847,17 23,17.4477153 23,18 L23,22 C23,22.5522847 22.5522847,23 22,23 L17,23 C16.4477153,23 16,22.5522847 16,22 L16,18 C16,17.4477153 16.4477153,17 17,17 L17,16.5 C17,15.1192881 18.1192881,14 19.5,14 M19.5,15 C18.6715729,15 18,15.6715729 18,16.5 L18,17 L21,17 L21,16.5 C21,15.6715729 20.3284271,15 19.5,15 Z\\\" id=\\\"mdi:database-lock\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/database\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C7.58,3 4,4.79 4,7 C4,9.21 7.58,11 12,11 C16.42,11 20,9.21 20,7 C20,4.79 16.42,3 12,3 M4,9 L4,12 C4,14.21 7.58,16 12,16 C16.42,16 20,14.21 20,12 L20,9 C20,11.21 16.42,13 12,13 C7.58,13 4,11.21 4,9 M4,14 L4,17 C4,19.21 7.58,21 12,21 C16.42,21 20,19.21 20,17 L20,14 C20,16.21 16.42,18 12,18 C7.58,18 4,16.21 4,14 Z\\\" id=\\\"mdi:database\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/description-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.11 3.89,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,5 C21,3.89 20.11,3 19,3 L5,3 M5,5 L19,5 L19,19 L5,19 L5,5 M7,7 L7,9 L17,9 L17,7 L7,7 M7,11 L7,13 L17,13 L17,11 L7,11 M7,15 L7,17 L14,17 L14,15 L7,15 Z\\\" id=\\\"mdi:text-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/description\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L7,17 L7,15 L14,15 M17,13 L7,13 L7,11 L17,11 M17,9 L7,9 L7,7 L17,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:text-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-cellphone\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,20 L7,20 L7,4 L17,4 M17,1 L7,1 C5.89,1 5,1.89 5,3 L5,21 C5,22.1045695 5.8954305,23 7,23 L17,23 C18.1045695,23 19,22.1045695 19,21 L19,3 C19,1.8954305 18.1045695,1 17,1 Z\\\" id=\\\"xabber:cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-console\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M18,12 L18,14 L13,14 L13,12 L18,12 Z M8.4,6 L11.7,9.3 C12.09,9.69 12.09,10.33 11.7,10.72 L8.42,14 L5.59,14 L9.58,10 L5.57,6 L8.4,6 Z\\\" id=\\\"xabber.monitor-console\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-desktop\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,16 L3,16 L3,4 L21,4 M21,2 L3,2 C1.89,2 1,2.89 1,4 L1,16 C1,17.1045695 1.8954305,18 3,18 L10,18 L10,20 L8,20 L8,22 L16,22 L16,20 L14,20 L14,18 L21,18 C22.1045695,18 23,17.1045695 23,16 L23,4 C23,2.8954305 22.1045695,2 21,2 Z\\\" id=\\\"mdi:monitor\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-tablet\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,18 L4,18 L4,6 L20,6 M21,4 L3,4 C1.89,4 1,4.89 1,6 L1,18 C1,19.1045695 1.8954305,20 3,20 L21,20 C22.1045695,20 23,19.1045695 23,18 L23,6 C23,4.8954305 22.1045695,4 21,4 Z\\\" id=\\\"xabber:tablet\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-web\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M9.59,6.41 L10.5,7.5 L8,10 L10.5,12.5 L9.59,13.5 L6,10 L9.59,6.41 Z M14.5,6.50152764 L18,10 L14.5,13.5 L13.5,12.5 L16,10 L13.5,7.5 L14.5,6.50152764 Z\\\" id=\\\"xabber.monitor-tag\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/devices\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,11 L18,11 C17.4477153,11 17,11.4477153 17,12 L17,21 C17,21.5522847 17.4477153,22 18,22 L23,22 C23.5522847,22 24,21.5522847 24,21 L24,12 C24,11.4477153 23.5522847,11 23,11 M23,20 L18,20 L18,13 L23,13 L23,20 M20,2 L2,2 C0.89,2 0,2.89 0,4 L0,16 C0,17.1045695 0.8954305,18 2,18 L9,18 L9,20 L7,20 L7,22 L15,22 L15,20 L13,20 L13,18 L15,18 L15,16 L2,16 L2,4 L20,4 L20,9 L22,9 L22,4 C22,2.8954305 21.1045695,2 20,2 Z\\\" id=\\\"mdi:monitor-cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/download\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,20 L19,20 L19,18 L5,18 M19,9 L15,9 L15,3 L9,3 L9,9 L5,9 L12,16 L19,9 Z\\\" id=\\\"mdi:download\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/edit-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.06,9 L15,9.94 L5.92,19 L5,19 L5,18.08 L14.06,9 M17.66,3 C17.41,3 17.15,3.1 16.96,3.29 L15.13,5.12 L18.88,8.87 L20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18.17,3.09 17.92,3 17.66,3 M14.06,6.19 L3,17.25 L3,21 L6.75,21 L17.81,9.94 L14.06,6.19 Z\\\" id=\\\"mdi:pencil-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/edit\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18,2.9 17.35,2.9 16.96,3.29 L15.12,5.12 L18.87,8.87 M3,17.25 L3,21 L6.75,21 L17.81,9.93 L14.06,6.18 L3,17.25 Z\\\" id=\\\"mdi:pencil\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/email-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,6 C22,4.9 21.1,4 20,4 L4,4 C2.9,4 2,4.9 2,6 L2,18 C2,19.1 2.9,20 4,20 L20,20 C21.1,20 22,19.1 22,18 L22,6 M20,6 L12,11 L4,6 L20,6 M20,18 L4,18 L4,8 L12,13 L20,8 L20,18 Z\\\" id=\\\"mdi:email-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/email\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,8 L12,13 L4,8 L4,6 L12,11 L20,6 M20,4 L4,4 C2.89,4 2,4.89 2,6 L2,18 C2,19.1045695 2.8954305,20 4,20 L20,20 C21.1045695,20 22,19.1045695 22,18 L22,6 C22,4.89 21.1,4 20,4 Z\\\" id=\\\"mdi:email\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/expires\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.03,7.39 L20.45,5.97 C20.0000001,5.46 19.55,5 19.04,4.56 L17.62,6 C16.07,4.74 14.12,4 12.0000001,4 C7.0294373,4 3.00000013,8.0294373 3.00000013,13 C3.00000013,17.9705627 7.0294373,22 12.0000001,22 C17.0000001,22 21.0000001,17.97 21.0000001,13 C21.0000001,10.88 20.26,8.93 19.03,7.39 M13,14 L11,14 L11,7 L13,7 L13,14 M15,1 L9,1 L9,3 L15,3 L15,1 Z\\\" id=\\\"mdi:timer\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-audio\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 L12,13.55 C11.41,13.21 10.73,13 10,13 C7.79,13 6,14.79 6,17 C6,19.21 7.79,21 10,21 C12.21,21 14,19.21 14,17 L14,7 L18,7 L18,3 L12,3 Z\\\" id=\\\"mdi:music-note\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-document\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L18.5,9 L13,3.5 L13,9 M6,2 L14,2 L20,8 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,4 C4,2.89 4.89,2 6,2 M15,18 L15,16 L6,16 L6,18 L15,18 M18,14 L18,12 L6,12 L6,14 L18,14 Z\\\" id=\\\"mdi:file-document\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-pdf\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,3 C20.1045695,3 21,3.8954305 21,5 L21,19 C21,20.1045695 20.1045695,21 19,21 L5,21 C3.89,21 3,20.1 3,19 L3,5 C3,3.89 3.89,3 5,3 L19,3 M10.59,10.08 C10.57,10.13 10.3,11.84 8.5,14.77 C8.5,14.77 5,16.58 5.83,17.94 C6.5,19 8.15,17.9 9.56,15.27 C9.56,15.27 11.38,14.63 13.79,14.45 C13.79,14.45 17.65,16.19 18.17,14.34 C18.69,12.5 15.12,12.9 14.5,13.09 C14.5,13.09 12.46,11.75 12,9.89 C12,9.89 13.13,5.95 11.38,6 C9.63,6.05 10.29,9.12 10.59,10.08 M11.4,11.13 C11.43,11.13 11.87,12.33 13.29,13.58 C13.29,13.58 10.96,14.04 9.9,14.5 C9.9,14.5 10.9,12.75 11.4,11.13 M15.32,13.84 C15.9,13.69 17.64,14 17.58,14.32 C17.5,14.65 15.32,13.84 15.32,13.84 M8.26,15.7 C7.73,16.91 6.83,17.68 6.6,17.67 C6.37,17.66 7.3,16.07 8.26,15.7 M11.4,8.76 C11.39,8.71 11.03,6.57 11.4,6.61 C11.94,6.67 11.4,8.71 11.4,8.76 Z\\\" id=\\\"mdi:file-pdf-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-presentation\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,2 L13,2 L13,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,16 C21,17.1045695 20.1045695,18 19,18 L13,18 L13,21 L17,21 L17,23 L7,23 L7,21 L11,21 L11,18 L5,18 C3.8954305,18 3,17.1045695 3,16 L3,5 C3,3.8954305 3.8954305,3 5,3 L11,3 L11,2 Z M19,5 L5,5 L5,16 L19,16 L19,5 Z M9,9 L9,14 L7,14 L7,9 L9,9 Z M13,7 L13,14 L11,14 L11,7 L13,7 Z M17,11 L17,14 L15,14 L15,11 L17,11 Z\\\" id=\\\"xabber:presentation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,9 L16,9 L16,7 L18,7 M18,13 L16,13 L16,11 L18,11 M18,17 L16,17 L16,15 L18,15 M8,9 L6,9 L6,7 L8,7 M8,13 L6,13 L6,11 L8,11 M8,17 L6,17 L6,15 L8,15 M18,3 L18,5 L16,5 L16,3 L8,3 L8,5 L6,5 L6,3 L4,3 L4,21 L6,21 L6,19 L8,19 L8,21 L16,21 L16,19 L18,19 L18,21 L20,21 L20,3 L18,3 Z\\\" id=\\\"mdi:filmstrip\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-zip\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L12,17 L12,15 L10,15 L10,13 L12,13 L12,15 L14,15 M14,9 L12,9 L12,11 L14,11 L14,13 L12,13 L12,11 L10,11 L10,9 L12,9 L12,7 L10,7 L10,5 L12,5 L12,7 L14,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:zip-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L13,3.5 L18.5,9 M6,2 C4.89,2 4,2.89 4,4 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,8 L14,2 L6,2 Z\\\" id=\\\"mdi:file\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/fullname-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,8 L14,8 L14,10 L20,10 L20,8 M20,12 L14,12 L14,14 L20,14 L20,12 M20,16 L14,16 L14,18 L20,18 L20,16 M22,4 L14,4 L14,6 L22,6 L22,20 L2,20 L2,6 L10,6 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/fullname\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,4 L14,4 L14,7 L10,7 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,18 L14,18 L14,16 L20,16 L20,18 M20,14 L14,14 L14,12 L20,12 L20,14 M20,10 L14,10 L14,8 L20,8 L20,10 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-incognito\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,8.00704958 C10.9597902,8.00704958 12.8474987,8.64533875 12.9912872,9.91524601 L13,10.0706662 L13,11.0070496 L10.7492023,11.0070496 L10.75,9.875 C10.75,9.10242267 10.3751421,8.46914598 9.75414509,8.01828756 L9.88054216,8.01011295 L10,8.00704958 Z M7,8 C8.71428571,8 10,8.75 10,9.875 L10,11 L4,11 L4,9.875 C4,8.75 5.28571429,8 7,8 Z M7,8.75 C5.68529006,8.75 4.83790401,9.22876096 4.75645218,9.78636102 L4.75,9.875 L4.75,10.25 L9.25,10.25 L9.25,9.875 C9.25,9.31020891 8.46834945,8.80320839 7.20365867,8.75392032 L7,8.75 Z M10.5,4 C11.3284271,4 12,4.67157288 12,5.5 C12,6.32842712 11.3284271,7 10.5,7 C10.0309641,7 9.61220865,6.78472342 9.33715065,6.44758714 C9.59948544,6.02690214 9.75,5.53102835 9.75,5 C9.75,4.7455993 9.71545544,4.49926692 9.65080116,4.2654377 C9.89064982,4.09777196 10.183907,4 10.5,4 Z M7,3 C8.1045695,3 9,3.8954305 9,5 C9,6.1045695 8.1045695,7 7,7 C5.8954305,7 5,6.1045695 5,5 C5,3.8954305 5.8954305,3 7,3 Z M7,3.75 C6.30964406,3.75 5.75,4.30964406 5.75,5 C5.75,5.69035594 6.30964406,6.25 7,6.25 C7.69035594,6.25 8.25,5.69035594 8.25,5 C8.25,4.30964406 7.69035594,3.75 7,3.75 Z\\\" id=\\\"incognito\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.8,5 L11.2,5 C11.64,5 12,5.33981818 12,5.76363636 L12,10.2363636 C12,10.6581084 11.6418278,11 11.2,11 L4.8,11 C4.3581722,11 4,10.6581084 4,10.2363636 L4,5.76363636 C4,5.33981818 4.356,5 4.8,5 Z M4.57142857,5.81818182 L4.57142857,6.90909091 L8,9.09090909 L11.4285714,6.90909091 L11.4285714,5.81818182 L8,8 L4.57142857,5.81818182 Z\\\" id=\\\"invitation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-private\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5.54386908,9.00001406 C4.74833179,9.00015914 4.03626356,9.50273575 3.75677818,10.2613541 C3.4772928,11.0199725 3.68898239,11.8755937 4.28805949,12.4087226 C4.88713659,12.9418515 5.74800895,13.0407214 6.44860686,12.6568582 C7.14920477,12.272995 7.54265288,11.4868729 7.43605089,10.683913 C7.61005089,10.6450242 7.79823271,10.6139132 7.99841453,10.6144687 C8.19859635,10.6155798 8.38677817,10.6450242 8.56077817,10.683913 C8.45417618,11.4868729 8.84762429,12.272995 9.5482222,12.6568582 C10.2488201,13.0407214 11.1096925,12.9418515 11.7087696,12.4087226 C12.3078467,11.8755937 12.5195363,11.0199725 12.2400509,10.2613541 C11.9605655,9.50273575 11.2484973,9.00015914 10.45296,9.00001406 C9.6733377,8.99699984 8.97079939,9.47872777 8.68023271,10.2155808 C8.45968538,10.1448214 8.22964016,10.109582 7.99841453,10.1111366 C7.69841453,10.1111366 7.49059635,10.1616921 7.31659635,10.2155808 C7.02602967,9.47872777 6.32349136,8.99699984 5.54386908,9.00001406 L5.54386908,9.00001406 Z M5.54386908,9.55558244 C6.29698464,9.55558244 6.90750544,10.1774076 6.90750544,10.9444679 C6.90750544,11.7115282 6.29698464,12.3333534 5.54386908,12.3333534 C4.79075351,12.3333534 4.18023271,11.7115282 4.18023271,10.9444679 C4.18023271,10.1774076 4.79075351,9.55558244 5.54386908,9.55558244 Z M10.45296,9.55558244 C11.2060756,9.55558244 11.8165963,10.1774076 11.8165963,10.9444679 C11.8165963,11.7115282 11.2060756,12.3333534 10.45296,12.3333534 C9.69984442,12.3333534 9.08932362,11.7115282 9.08932362,10.9444679 C9.08932362,10.1774076 9.69984442,9.55558244 10.45296,9.55558244 Z M8,7 C6.512,7 4.39345455,7.268 4.25,7.297 C3.78243762,7.41026088 3.32163107,7.54577794 2.86945455,7.703 C2.31418182,7.877 2,8 2,8 L14,8 C14,8 13.6858182,7.877 13.1305455,7.703 C12.6727414,7.54549536 12.2062901,7.40997808 11.7330909,7.297 C11.7330909,7.297 9.54036364,7 8,7 Z M8,3 C6.53163636,3.0015 5.49418182,3.6095 5.49418182,3.6095 L4.72727273,6 L11.2727273,6 L10.5058182,3.6095 C10.5058182,3.6095 9.46836364,3.001 8,3 Z\\\" id=\\\"private\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-public\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.500501,8 C11.3287776,8 11.995,7.328 11.995,6.5 C11.995,5.672 11.3287776,5 10.500501,5 C9.67222445,5 9,5.672 9,6.5 C9,7.328 9.67222445,8 10.500501,8 Z M6.5,7 C7.33,7 7.995,6.33 7.995,5.5 C7.995,4.67 7.33,4 6.5,4 C5.67,4 5,4.67 5,5.5 C5,6.33 5.67,7 6.5,7 Z M10.5,9 C9.66818182,9 8,9.46 8,10.375 L8,10.9989178 L13,10.9989178 L13,10.375 C13,9.46 11.3318182,9 10.5,9 Z M6.50474946,7.99186821 C4.77490105,7.99186821 3,8.585 3,9.75 L3,11 L7,11 L7,10 C7,9.24841871 7.73828683,8.72461975 8.70884076,8.35916117 C8.08932051,8.04219075 6.85693708,7.99186821 6.50474946,7.99186821 Z\\\" id=\\\"xabber:group-public\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/history\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.5,8 L12,8 L12,13 L16.28,15.54 L17,14.33 L13.5,12.25 L13.5,8 M13,3 C8.02943725,3 4,7.02943725 4,12 L1,12 L4.96,16.03 L9,12 L6,12 C6,8.13400675 9.13400675,5 13,5 C16.8659932,5 20,8.13400675 20,12 C20,15.8659932 16.8659932,19 13,19 C11.07,19 9.32,18.21 8.06,16.94 L6.64,18.36 C8.31963558,20.0581063 10.6115589,21.0094707 13,21.00007 C17.9705627,21.00007 22,16.9705627 22,12 C22,7.02943725 17.9705627,3 13,3\\\" id=\\\"mdi:history\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\\\" />\";","export default \"<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path5\\\"\\n     d=\\\"m 5.2462478,6.4309194 c 0,0 0.2534497,0.5323027 1.6195791,-0.2126538 C 9.2126105,5.0708821 11.67437,4.0095 14.785441,5.5382202 17.009904,6.7924 17.27733,10.360371 13.864368,13.369134 c -1.679464,1.609494 -1.887868,4.226006 -1.825254,4.993295 -0.128246,1.561168 0.259655,1.837265 0.594912,1.938246 0.335257,0.100981 1.461445,-0.04379 1.305934,-1.000087 -0.193265,-1.461227 -0.06192,-2.413209 0.855267,-4.044829 0.758763,-1.162942 2.123721,-1.871086 3.273016,-4.211889 C 18.840748,9.1444158 18.891207,6.503336 17.479328,4.894053 16.152845,3.3821059 14.670099,2.4131656 12.422552,2.4210559 9.8716741,2.446853 8.13424,2.8374168 6.751418,3.5206351 4.5012489,4.730324 4.2973099,4.8714754 5.2462478,6.4309194 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cccccscccsccc\\\" />\\n<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path7\\\"\\n     d=\\\"M 10.393116,10.546893 C 10.179036,9.8582024 9.6418168,9.5037588 9.1268128,9.5037588 c -0.686671,0 -1.6386388,0.1373222 -1.6546508,1.5832442 0,0 0.5308711,2.944458 1.5235151,2.93234 0.364542,-0.004 0.7403587,-0.28287 0.017892,-1.856769 0,0 -0.4395592,-0.974022 -0.1380497,-1.193301 0.5440269,-0.394487 0.5911749,0.418754 0.9156116,1.069105 0.674692,0.328471 1.06244,-0.702948 1.201092,-0.722298 1.026124,-0.142524 -0.130551,1.372622 -0.2386,1.539241 -0.467844,0.515308 -1.3020963,1.251877 -0.614252,1.612091 0.864686,0.205725 1.292561,-0.492065 1.464229,-0.658684 0.2663,-0.37565 0.549622,-0.820112 0.721289,-1.133153 0.877971,-1.468145 0.834305,-2.8722146 -0.558429,-2.9011876 -0.515004,0 -0.814918,0.2302366 -1.373344,0.7725056 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cscccccccccccc\\\" />\\n<path\\n     sodipodi:nodetypes=\\\"cssccsccccssccssc\\\"\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path9\\\"\\n     d=\\\"m 6.8360046,14.735541 c -0.2526865,-0.134842 -0.341246,-0.148685 -0.556785,-0.125105 -0.4758127,0.05205 -0.712045,0.475393 -0.6165306,0.901178 0.2727696,1.215955 1.0359093,1.641989 2.25985,2.132257 1.2530682,0.41756 2.475738,0.396638 3.398493,-0.0757 0.298412,-0.05064 0.287556,-0.683612 0.292618,-1.034981 0.006,-0.414484 -0.327129,-0.528727 -0.651454,-0.493243 -0.82369,0.222079 -0.891361,0.338578 -1.882259,0.248554 -1.1996954,-0.369888 -1.6284239,-0.589257 -2.2439324,-1.55296 z m -0.596727,2.884244 c -0.1641271,-0.121 -0.2921232,-0.08347 -0.442594,-0.06701 -0.3893935,0.0426 -0.727761,0.382603 -0.6463412,0.81143 0.2795655,1.472433 3.2776659,2.179707 4.6014193,2.113323 1.0831623,-0.05044 1.6865703,-0.273231 1.7646093,-1.16247 -0.03364,-0.366114 -0.266964,-0.659232 -0.720411,-0.609623 -0.432095,0.04727 -0.373883,0.118182 -1.0438868,0.191485 C 8.563559,19.026954 7.5842504,18.723225 6.2392776,17.619785 z\\\"\\n     clip-rule=\\\"evenodd\\\" />\\n\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\" />\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/id-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C15.8659932,2 19,5.13400675 19,9 C19,11.38 17.81,13.47 16,14.74 L16,17 C16,17.5522847 15.5522847,18 15,18 L9,18 C8.44771525,18 8,17.5522847 8,17 L8,14.74 C6.19,13.47 5,11.38 5,9 C5,5.13400675 8.13400675,2 12,2 M9,21 L9,20 L15,20 L15,21 C15,21.5522847 14.5522847,22 14,22 L10,22 C9.44771525,22 9,21.5522847 9,21 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,11.05 8.23,12.81 10,13.58 L10,16 L14,16 L14,13.58 C15.77,12.81 17,11.05 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:lightbulb-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/id\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C8.13400675,2 5,5.13400675 5,9 C5,11.38 6.19,13.47 8,14.74 L8,17 C8,17.5522847 8.44771525,18 9,18 L15,18 C15.5522847,18 16,17.5522847 16,17 L16,14.74 C17.81,13.47 19,11.38 19,9 C19,5.13400675 15.8659932,2 12,2 M9,21 C9,21.5522847 9.44771525,22 10,22 L14,22 C14.5522847,22 15,21.5522847 15,21 L15,20 L9,20 L9,21 Z\\\" id=\\\"mdi:lightbulb\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/image\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.5,13.5 L11,16.5 L14.5,12 L19,18 L5,18 M21,19 L21,5 C21,3.89 20.1,3 19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 Z\\\" id=\\\"mdi:image\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/index\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C7.581722,2 4,5.581722 4,10 C4,14.03 7,17.42 11,17.93 L11,19 L10,19 C9.44771525,19 9,19.4477153 9,20 L2,20 L2,22 L9,22 C9,22.5522847 9.44771525,23 10,23 L14,23 C14.5522847,23 15,22.5522847 15,22 L22,22 L22,20 L15,20 C15,19.4477153 14.5522847,19 14,19 L13,19 L13,17.93 C17,17.43 20,14.03 20,10 C20,5.581722 16.418278,2 12,2 M12,4 C12,4 12.74,5.28 13.26,7 L10.74,7 C11.26,5.28 12,4 12,4 M9.77,4.43 C9.5,4.93 9.09,5.84 8.74,7 L6.81,7 C7.5,5.84 8.5,4.93 9.77,4.43 M14.23,4.44 C15.5,4.94 16.5,5.84 17.19,7 L15.26,7 C14.91,5.84 14.5,4.93 14.23,4.44 M6.09,9 L8.32,9 C8.28,9.33 8.25,9.66 8.25,10 C8.25,10.34 8.28,10.67 8.32,11 L6.09,11 C5.96891098,10.3388318 5.96891098,9.66116821 6.09,9 M10.32,9 L13.68,9 C13.72,9.33 13.75,9.66 13.75,10 C13.75,10.34 13.72,10.67 13.68,11 L10.32,11 C10.28,10.67 10.25,10.34 10.25,10 C10.25,9.66 10.28,9.33 10.32,9 M15.68,9 L17.91,9 C18.031089,9.66116821 18.031089,10.3388318 17.91,11 L15.68,11 C15.72,10.67 15.75,10.34 15.75,10 C15.75,9.66 15.72,9.33 15.68,9 M6.81,13 L8.74,13 C9.09,14.16 9.5,15.07 9.77,15.56 C8.5,15.06 7.5,14.16 6.81,13 M10.74,13 L13.26,13 C12.74,14.72 12,16 12,16 C12,16 11.26,14.72 10.74,13 M15.26,13 L17.19,13 C16.5,14.16 15.5,15.07 14.23,15.57 C14.5,15.07 14.91,14.16 15.26,13 Z\\\" id=\\\"mdi:wan\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/information-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,9 L13,9 L13,7 L11,7 M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M11,17 L13,17 L13,11 L11,11 L11,17 Z\\\" id=\\\"mdi:information-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/information\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L11,9 L11,7 L13,7 M13,17 L11,17 L11,11 L13,11 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 Z\\\" id=\\\"mdi:information\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/invite-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 L15.77,4.36 L19,4.36 L19,6.36 L21.03,7.65 C21.5653846,7.97307692 21.9388757,8.53473373 21.993168,9.19339554 L22,9.36 L22,19.36 C22,20.4195455 21.1890702,21.2786364 20.1499371,21.3545464 L20,21.36 L4,21.36 C2.9456382,21.36 2.08183488,20.5441222 2.00548574,19.5092623 L2,19.36 L2,9.36 C2,8.68615385 2.33230769,8.09751479 2.83961766,7.73565772 L5,6.36 L5,4.36 L8.23,4.36 L12,2 Z M20,11.36 L12,16.36 L4,11.36 L4,19.36 L20,19.36 L20,11.36 Z M17,6.36 L7,6.36 L7,11.24 L12,14.36 L17,11.24 L17,6.36 Z M16,9.86 L16,11.36 L8,11.36 L8,9.86 L16,9.86 Z M19,8.74 L19,9.99 L20,9.36 L19,8.74 Z M5,8.74 L4,9.36 L5,9.99 L5,8.74 Z M16,7.36 L16,8.86 L8,8.86 L8,7.36 L16,7.36 Z\\\" id=\\\"xabber:invite-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,0.64 L8.23,3 L5,3 L5,5 L2.97,6.29 C2.39,6.64 2,7.27 2,8 L2,18 C2,19.1045695 2.8954305,20 4,20 L20,20 C21.11,20 22,19.11 22,18 L22,8 C22,7.27 21.61,6.64 21.03,6.29 L19,5 L19,3 L15.77,3 M7,5 L17,5 L17,9.88 L12,13 L7,9.88 M8,6 L8,7.5 L16,7.5 L16,6 M5,7.38 L5,8.63 L4,8 M19,7.38 L20,8 L19,8.63 M8,8.5 L8,10 L16,10 L16,8.5 L8,8.5 Z\\\" id=\\\"mdi:email-newsletter\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/job-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,6 C20.58,6 21.05,6.2 21.42,6.59 C21.8,7 22,7.45 22,8 L22,19 C22,19.55 21.8,20 21.42,20.41 C21.05,20.8 20.58,21 20,21 L4,21 C3.42,21 2.95,20.8 2.58,20.41 C2.2,20 2,19.55 2,19 L2,8 C2,7.45 2.2,7 2.58,6.59 C2.95,6.2 3.42,6 4,6 L8,6 L8,4 C8,3.42 8.2,2.95 8.58,2.58 C8.95,2.2 9.42,2 10,2 L14,2 C14.58,2 15.05,2.2 15.42,2.58 C15.8,2.95 16,3.42 16,4 L16,6 L20,6 M4,8 L4,19 L20,19 L20,8 L4,8 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/job\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,2 L14,2 C15.1045695,2 16,2.8954305 16,4 L16,6 L20,6 C21.1045695,6 22,6.8954305 22,8 L22,19 C22,20.1045695 21.1045695,21 20,21 L4,21 C2.89,21 2,20.1 2,19 L2,8 C2,6.89 2.89,6 4,6 L8,6 L8,4 C8,2.89 8.89,2 10,2 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/key-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M7,14 C5.8954305,14 5,13.1045695 5,12 C5,10.8954305 5.8954305,10 7,10 C8.1045695,10 9,10.8954305 9,12 C9,13.1045695 8.1045695,14 7,14 M12.65,10 C11.8057828,7.60319579 9.54113618,6 7,6 C3.6862915,6 1,8.6862915 1,12 C1,15.3137085 3.6862915,18 7,18 C9.54113618,18 11.8057828,16.3968042 12.65,14 L15,14 L15,18 L18,18 L18,14 L19,14 L19,18 L22,18 L22,14 L23,14 L23,10 L12.65,10 Z\\\" id=\\\"xabber:key-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/key\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M7,14 C5.8954305,14 5,13.1045695 5,12 C5,10.8954305 5.8954305,10 7,10 C8.1045695,10 9,10.8954305 9,12 C9,13.1045695 8.1045695,14 7,14 M12.65,10 C11.8057828,7.60319579 9.54113618,6 7,6 C3.6862915,6 1,8.6862915 1,12 C1,15.3137085 3.6862915,18 7,18 C9.54113618,18 11.8057828,16.3968042 12.65,14 L17,14 L17,18 L21,18 L21,14 L23,14 L23,10 L12.65,10 Z\\\" id=\\\"mdi:key\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/link\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.9,12 C3.9,10.29 5.29,8.9 7,8.9 L11,8.9 L11,7 L7,7 C4.23857625,7 2,9.23857625 2,12 C2,14.7614237 4.23857625,17 7,17 L11,17 L11,15.1 L7,15.1 C5.29,15.1 3.9,13.71 3.9,12 M8,13 L16,13 L16,11 L8,11 L8,13 M17,7 L13,7 L13,8.9 L17,8.9 C18.71,8.9 20.1,10.29 20.1,12 C20.1,13.71 18.71,15.1 17,15.1 L13,15.1 L13,17 L17,17 C19.7614237,17 22,14.7614237 22,12 C22,9.23857625 19.7614237,7 17,7 Z\\\" id=\\\"mdi:link\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-alert\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,17 C11.1,17 12,16.1 12,15 C12,13.9 11.1,13 10,13 C8.9,13 8,13.9 8,15 C8,16.1 8.9,17 10,17 M16,8 C17.1,8 18,8.9 18,10 L18,20 C18,21.1 17.1,22 16,22 L4,22 C2.9,22 2,21.1 2,20 L2,10 C2,8.9 2.9,8 4,8 L5,8 L5,6 C5,3.2 7.2,1 10,1 C12.8,1 15,3.2 15,6 L15,8 L16,8 M10,3 C8.3,3 7,4.3 7,6 L7,8 L13,8 L13,6 C13,4.3 11.7,3 10,3 M22,13 L20,13 L20,7 L22,7 L22,13 M22,17 L20,17 L20,15 L22,15 L22,17 Z\\\" id=\\\"mdi:lock-alert\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-check\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M15.6,11 L10.47,16.18 L8.4,14.09 L7,15.5 L10.47,19 L17,12.41 L15.6,11 Z M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock-check\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-cross\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M14.12,11.47 L12,13.59 L9.88,11.47 L8.5,12.86 L10.61,15 L8.5,17.11 L9.91,18.53 L12.03,16.41 L14.12,18.5 L15.5,17.11 L13.43,15 L15.55,12.9 L14.12,11.47 Z M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock-cross\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-open\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,1 C15.24,1 13,3.24 13,6 L13,8 L4,8 C2.8954305,8 2,8.8954305 2,10 L2,20 C2,21.1045695 2.8954305,22 4,22 L16,22 C17.11,22 18,21.11 18,20 L18,10 C18,8.8954305 17.1045695,8 16,8 L15,8 L15,6 C15,4.34 16.34,3 18,3 C19.66,3 21,4.34 21,6 L21,8 L23,8 L23,6 C23,3.24 20.76,1 18,1 M10,13 C11.1045695,13 12,13.8954305 12,15 C12,16.11 11.11,17 10,17 C8.8954305,17 8,16.1045695 8,15 C8,13.8954305 8.8954305,13 10,13 Z\\\" id=\\\"mdi:lock-open-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C9.23857625,1 7,3.23857625 7,6 L7,8 L6,8 C4.8954305,8 4,8.8954305 4,10 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,10 C20,8.8954305 19.1045695,8 18,8 L17,8 L17,6 C17,4.67391755 16.4732158,3.40214799 15.5355339,2.46446609 C14.597852,1.5267842 13.3260824,1 12,1 M12,2.9 C13.71,2.9 15.1,4.29 15.1,6 L15.1,8 L8.9,8 L8.9,6 C8.9,4.29 10.29,2.9 12,2.9 M12.19,10.5 C13.13,10.5 13.88,10.71 14.42,11.12 C14.96,11.54 15.23,12.1 15.23,12.8 C15.23,13.24 15.08,13.63 14.79,14 C14.5,14.36 14.12,14.64 13.66,14.85 C13.4,15 13.23,15.15 13.14,15.32 C13.05,15.5 13,15.72 13,16 L11,16 C11,15.5 11.1,15.16 11.29,14.92 C11.5,14.68 11.84,14.4 12.36,14.08 C12.62,13.94 12.83,13.76 13,13.54 C13.14,13.33 13.22,13.08 13.22,12.8 C13.22,12.5 13.13,12.28 12.95,12.11 C12.77,11.93 12.5,11.85 12.19,11.85 C11.92,11.85 11.7,11.92 11.5,12.06 C11.34,12.2 11.24,12.41 11.24,12.69 L9.27,12.69 C9.22,12 9.5,11.4 10.05,11.04 C10.59,10.68 11.3,10.5 12.19,10.5 M11,17 L13,17 L13,19 L11,19 L11,17 Z\\\" id=\\\"mdi:lock-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,17 C13.1045695,17 14,16.1045695 14,15 C14,13.89 13.1,13 12,13 C10.8954305,13 10,13.8954305 10,15 C10,16.1045695 10.8954305,17 12,17 M18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/map-marker-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/map-marker\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/membership-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M7.07,18.28 C7.5,17.38 10.12,16.5 12,16.5 C13.88,16.5 16.5,17.38 16.93,18.28 C15.5293835,19.3960251 13.7908746,20.0025637 12,20 C10.14,20 8.43,19.36 7.07,18.28 M18.36,16.83 C16.93,15.09 13.46,14.5 11.9999999,14.5 C10.54,14.5 7.07,15.09 5.64,16.83 C4.57618516,15.4446232 3.99966563,13.7467029 3.99999985,12 C3.99999985,7.59 7.59,4 11.9999999,4 C16.41,4 19.9999999,7.59 19.9999999,12 C19.9999999,13.82 19.38,15.5 18.36,16.83 M12,6 C10.06,6 8.5,7.56 8.5,9.5 C8.5,11.44 10.06,13 12,13 C13.94,13 15.5,11.44 15.5,9.5 C15.5,7.56 13.94,6 12,6 M12,11 C11.1715729,11 10.5,10.3284271 10.5,9.5 C10.5,8.67157288 11.1715729,8 12,8 C12.8284271,8 13.5,8.67157288 13.5,9.5 C13.5,10.3284271 12.8284271,11 12,11 Z\\\" id=\\\"mdi:account-circle-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/message-bookmark-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.9,2 2,2.9 2,4 L2,22 L6,18 L20,18 C21.1,18 22,17.1 22,16 L22,4 C22,2.9 21.1,2 20,2 M20,16 L5.2,16 L4,17.2 L4,4 L20,4 L20,16 M18,14 L18,6 L13,6 L13,14 L15.5,12.5 L18,14\\\" id=\\\"mdi:message-bookmark-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"message-group-variant2\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M14.2526206,6 L21.4947588,6 C22.3260806,6 23,6.6752491 23,7.49824524 L23,24 L19,20 L8.50524116,20 C7.67391942,20 7,19.3247509 7,18.5017548 L7,17 L17.0005775,17 C18.6556493,17 20,15.6542582 20,13.9942017 L20,6 L14.2526206,6 Z\\\" id=\\\"Message2\\\"></path>\\n        <path d=\\\"M1,2.49824524 C1,1.67078724 1.66642015,1 2.50863659,1 L16.4913634,1 C17.3245604,1 18,1.6752491 18,2.49824524 L18,13.5017548 C18,14.3292128 17.3335799,15 16.4913634,15 L5,15 L1,19 L1,2.49824524 Z M4,10 L4,12 L12,12 L12,10 L4,10 Z M4,7 L4,9 L15,9 L15,7 L4,7 Z M4,4 L4,6 L15,6 L15,4 L4,4 Z\\\" id=\\\"Combined-Shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/minus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:minus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 13 5 13 5 11 19 11\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/mobile\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,1 C11.1045695,1 12,1.8954305 12,3 L12,12 C12,13.1045695 11.1045695,14 10,14 L6,14 C4.8954305,14 4,13.1045695 4,12 L4,3 C4,1.8954305 4.8954305,1 6,1 L10,1 Z M10,4 L6,4 L6,10 L10,10 L10,4 Z\\\" id=\\\"Mobile\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/palette\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.5,12 C16.6715729,12 16,11.3284271 16,10.5 C16,9.67157288 16.6715729,9 17.5,9 C18.3284271,9 19,9.67157288 19,10.5 C19,11.3284271 18.3284271,12 17.5,12 M14.5,8 C13.6715729,8 13,7.32842712 13,6.5 C13,5.67157288 13.6715729,5 14.5,5 C15.3284271,5 16,5.67157288 16,6.5 C16,7.32842712 15.3284271,8 14.5,8 M9.5,8 C8.67157288,8 8,7.32842712 8,6.5 C8,5.67157288 8.67157288,5 9.5,5 C10.3284271,5 11,5.67157288 11,6.5 C11,7.32842712 10.3284271,8 9.5,8 M6.5,12 C5.67157288,12 5,11.3284271 5,10.5 C5,9.67157288 5.67157288,9 6.5,9 C7.32842712,9 8,9.67157288 8,10.5 C8,11.3284271 7.32842712,12 6.5,12 M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C12.8284271,21 13.5,20.3284271 13.5,19.5 C13.5,19.11 13.35,18.76 13.11,18.5 C12.88,18.23 12.73,17.88 12.73,17.5 C12.73,16.6715729 13.4015729,16 14.23,16 L16,16 C18.7614237,16 21,13.7614237 21,11 C21,6.58 16.97,3 12,3 L12,3 Z\\\" id=\\\"mdi:palette\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pause\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,19 L18,19 L18,5 L14,5 M6,19 L10,19 L10,5 L6,5 L6,19 Z\\\" id=\\\"mdi:pause\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-bottom-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,11 L11,11 L11,17 L19,17 L19,11 M23,19 L23,5 C23,3.88 22.1,3 21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 M21,19 L3,19 L3,4.97 L21,4.97 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-bottom-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-minimize\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,3 C22.1,3 23,3.88 23,5 L23.0008195,11.8103588 C22.4253055,11.2578757 21.7483079,10.8103075 21.000576,10.4984036 L21,4.97 L3,4.97 L3,19 L12.4984036,19.000576 C12.8103075,19.7483079 13.2578757,20.4253055 13.8103588,21.0008195 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L21,3 Z M21,13 L21,14.5 L17.5,14.5 L22,19 L21,20 L16.5,15.5 L16.5,19 L15,19 L15,13 L21,13 Z M13,7 L13,13 L5,13 L5,7 L13,7 Z\\\" id=\\\"xabber:picture-in-picture-minimize\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-top-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,7 L11,7 L11,13 L19,13 L19,7 M21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 L23,5 C23,3.8954305 22.1045695,3 21,3 M21,19 L3,19 L3,5 L21,5 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-top-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pinned\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5228475,2 22,6.4771525 22,12 C22,17.5228475 17.5228475,22 12,22 C6.4771525,22 2,17.5228475 2,12 C2,6.4771525 6.4771525,2 12,2 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M14.5,6 L18,9.5 L17,10.5 L16.5,10 L14.5,13 L15.5,14.5 L14,16 L11.5,13.5 L8.5,16.5 L7.5,16.5 L7.5,15.5 L10.5,12.5 L8,10 L9.5,8.5 L11,9.5 L14,7.5 L13.5,7 L14.5,6 Z\\\" id=\\\"xabber:pinned\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/play\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:play\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 5 8 19 19 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-float\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,3 L13,5 L3,5 L3,19 L20,19 L20,11 L22,11 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L13,3 Z M13,9 L13,15 L11.5,15 L11.5,11.5 L6.5,16.5 L5.5,15.5 L10.5,10.5 L7,10.5 L7,9 L13,9 Z M22,2 C23.1045695,2 24,2.8954305 24,4 L24,7 C24,8.1045695 23.1045695,9 22,9 L17,9 C15.8954305,9 15,8.1045695 15,7 L15,4 C15,2.8954305 15.8954305,2 17,2 L22,2 Z\\\" id=\\\"xabber:player-float\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-full\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.8101336,2.99941507 C14.2575941,3.5750451 13.8100058,4.25218587 13.4981326,5.00007375 L3,5 L3,19 L20,19 L20.000332,13.9810299 C20.7043777,13.9274362 21.3770687,13.7616821 22.000576,13.5015964 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L14.8101336,2.99941507 Z M12,10 C13.1045695,10 14,10.8954305 14,12 L14,15 C14,16.1045695 13.1045695,17 12,17 L7,17 C5.8954305,17 5,16.1045695 5,15 L5,12 C5,10.8954305 5.8954305,10 7,10 L12,10 Z M22,4 L23,5 L18.5,9.5 L22,9.5 L22,11 L16,11 L16,5 L17.5,5 L17.5,8.5 L22,4 Z\\\" id=\\\"xabber:picture-in-picture-full\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-mini-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini-variant\\\" fill=\\\"#000000\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-mini\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,8 L17,9.5 L13.5,9.5 L18,14 L17,15 L12.5,10.5 L12.5,14 L11,14 L11,8 L17,8 Z M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/plus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:plus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 12.998 13 12.998 13 18.998 11 18.998 11 12.998 5 12.998 5 10.998 11 10.998 11 4.998 13 4.998 13 10.998 19 10.998\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <symbol id=\\\"plyr-airplay\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16 1H2a1 1 0 00-1 1v10a1 1 0 001 1h3v-2H3V3h12v8h-2v2h3a1 1 0 001-1V2a1 1 0 00-1-1z\\\"></path><path d=\\\"M4 17h10l-5-6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-off\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\" fill-opacity=\\\".5\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-on\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\"></path></symbol>\\n    <symbol id=\\\"plyr-download\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9 13c.3 0 .5-.1.7-.3L15.4 7 14 5.6l-4 4V1H8v8.6l-4-4L2.6 7l5.7 5.7c.2.2.4.3.7.3zm-7 2h14v2H2z\\\"></path></symbol><symbol id=\\\"plyr-enter-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10 3h3.6l-4 4L11 8.4l4-4V8h2V1h-7zM7 9.6l-4 4V10H1v7h7v-2H4.4l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-exit-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 12h3.6l-4 4L2 17.4l4-4V17h2v-7H1zM16 .6l-4 4V1h-2v7h7V6h-3.6l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-fast-forward\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M7.875 7.171L0 1v16l7.875-6.171V17L18 9 7.875 1z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-vimeo\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M17 5.3c-.1 1.6-1.2 3.7-3.3 6.4-2.2 2.8-4 4.2-5.5 4.2-.9 0-1.7-.9-2.4-2.6C5 10.9 4.4 6 3 6c-.1 0-.5.3-1.2.8l-.8-1c.8-.7 3.5-3.4 4.7-3.5 1.2-.1 2 .7 2.3 2.5.3 2 .8 6.1 1.8 6.1.9 0 2.5-3.4 2.6-4 .1-.9-.3-1.9-2.3-1.1.8-2.6 2.3-3.8 4.5-3.8 1.7.1 2.5 1.2 2.4 3.3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-youtube\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.8 5.8c-.2-1.3-.8-2.2-2.2-2.4C12.4 3 9 3 9 3s-3.4 0-5.6.4C2 3.6 1.3 4.5 1.2 5.8 1 7.1 1 9 1 9s0 1.9.2 3.2c.2 1.3.8 2.2 2.2 2.4C5.6 15 9 15 9 15s3.4 0 5.6-.4c1.4-.3 2-1.1 2.2-2.4.2-1.3.2-3.2.2-3.2s0-1.9-.2-3.2zM7 12V6l5 3-5 3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-muted\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M12.4 12.5l2.1-2.1 2.1 2.1 1.4-1.4L15.9 9 18 6.9l-1.4-1.4-2.1 2.1-2.1-2.1L11 6.9 13.1 9 11 11.1zM3.786 6.008H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pause\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M6 1H3c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zm6 0c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1h-3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pip\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M13.293 3.293L7.022 9.564l1.414 1.414 6.271-6.271L17 7V1h-6z\\\"></path><path d=\\\"M13 15H3V5h5V3H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1v-6h-2v5z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-play\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.562 8.1L3.87.225c-.818-.562-1.87 0-1.87.9v15.75c0 .9 1.052 1.462 1.87.9L15.563 9.9c.584-.45.584-1.35 0-1.8z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-restart\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9.7 1.2l.7 6.4 2.1-2.1c1.9 1.9 1.9 5.1 0 7-.9 1-2.2 1.5-3.5 1.5-1.3 0-2.6-.5-3.5-1.5-1.9-1.9-1.9-5.1 0-7 .6-.6 1.4-1.1 2.3-1.3l-.6-1.9C6 2.6 4.9 3.2 4 4.1 1.3 6.8 1.3 11.2 4 14c1.3 1.3 3.1 2 4.9 2 1.9 0 3.6-.7 4.9-2 2.7-2.7 2.7-7.1 0-9.9L16 1.9l-6.3-.7z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-rewind\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10.125 1L0 9l10.125 8v-6.171L18 17V1l-7.875 6.171z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-settings\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.135 7.784a2 2 0 01-1.23-2.969c.322-.536.225-.998-.094-1.316l-.31-.31c-.318-.318-.78-.415-1.316-.094a2 2 0 01-2.969-1.23C10.065 1.258 9.669 1 9.219 1h-.438c-.45 0-.845.258-.997.865a2 2 0 01-2.969 1.23c-.536-.322-.999-.225-1.317.093l-.31.31c-.318.318-.415.781-.093 1.317a2 2 0 01-1.23 2.969C1.26 7.935 1 8.33 1 8.781v.438c0 .45.258.845.865.997a2 2 0 011.23 2.969c-.322.536-.225.998.094 1.316l.31.31c.319.319.782.415 1.316.094a2 2 0 012.969 1.23c.151.607.547.865.997.865h.438c.45 0 .845-.258.997-.865a2 2 0 012.969-1.23c.535.321.997.225 1.316-.094l.31-.31c.318-.318.415-.781.094-1.316a2 2 0 011.23-2.969c.607-.151.865-.547.865-.997v-.438c0-.451-.26-.846-.865-.997zM9 12a3 3 0 110-6 3 3 0 010 6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-volume\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.6 3.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4C15.4 5.9 16 7.4 16 9c0 1.6-.6 3.1-1.8 4.3-.4.4-.4 1 0 1.4.2.2.5.3.7.3.3 0 .5-.1.7-.3C17.1 13.2 18 11.2 18 9s-.9-4.2-2.4-5.7z\\\"></path><path d=\\\"M11.282 5.282a.909.909 0 000 1.316c.735.735.995 1.458.995 2.402 0 .936-.425 1.917-.995 2.487a.909.909 0 000 1.316c.145.145.636.262 1.018.156a.725.725 0 00.298-.156C13.773 11.733 14.13 10.16 14.13 9c0-.17-.002-.34-.011-.51-.053-.992-.319-2.005-1.522-3.208a.909.909 0 00-1.316 0zm-7.496.726H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/qrcode\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3,11 L5,11 L5,13 L3,13 L3,11 M11,5 L13,5 L13,9 L11,9 L11,5 M9,11 L13,11 L13,15 L11,15 L11,13 L9,13 L9,11 M15,11 L17,11 L17,13 L19,13 L19,11 L21,11 L21,13 L19,13 L19,15 L21,15 L21,19 L19,19 L19,21 L17,21 L17,19 L13,19 L13,21 L11,21 L11,17 L15,17 L15,15 L17,15 L17,13 L15,13 L15,11 M19,19 L19,15 L17,15 L17,19 L19,19 M15,3 L21,3 L21,9 L15,9 L15,3 M17,5 L17,7 L19,7 L19,5 L17,5 M3,3 L9,3 L9,9 L3,9 L3,3 M5,5 L5,7 L7,7 L7,5 L5,5 M3,15 L9,15 L9,21 L3,21 L3,15 M5,17 L5,19 L7,19 L7,17 L5,17 Z\\\" id=\\\"mdi:qrcode\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/restrictions-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18.5,8 C18.33,8 18.16,8 18,8.05 L18,4.5 C18,3.11928813 16.8807119,2 15.5,2 C15.31,2 15.13,2 14.96,2.06 C14.7461874,0.868716938 13.7103179,0.0012815407 12.5,0 C11.44,0 10.54,0.66 10.17,1.59 C9.41693202,1.38051444 8.60922719,1.53531349 7.98697307,2.00838366 C7.36471894,2.48145383 6.99954575,3.21833807 7,4 L7,4.55 C6.84,4.5 6.67,4.5 6.5,4.5 C5.11928813,4.5 4,5.61928813 4,7 L4,15.5 C4,20.19 7.81,24 12.5,24 C17.19,24 21,20.19 21,15.5 L21,10.5 C21,9.11928813 19.8807119,8 18.5,8 M19,15.5 C19,19.0898509 16.0898509,22 12.5,22 C8.91014913,22 6,19.0898509 6,15.5 L6,7 C6,6.72 6.22,6.5 6.5,6.5 C6.78,6.5 7,6.72 7,7 L7,12 L9,12 L9,4 C9,3.72 9.22,3.5 9.5,3.5 C9.78,3.5 10,3.72 10,4 L10,11 L12,11 L12,2.5 C12,2.22 12.22,2 12.5,2 C12.78,2 13,2.22 13,2.5 L13,11 L15,11 L15,4.5 C15,4.22 15.22,4 15.5,4 C15.78,4 16,4.22 16,4.5 L16,13.42 C14.23,14.19 13,15.95 13,18 L15,18 C15,16.34 16.34,15 18,15 L18,10.5 C18,10.22 18.22,10 18.5,10 C18.78,10 19,10.22 19,10.5 L19,15.5 Z\\\" id=\\\"mdi:hand-front-right-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/rss-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5,10 C5.55228475,10 6,10.4477153 6,11 C6,11.5412844 5.55045872,12 5,12 C4.4587156,12 4,11.5412844 4,11 C4,10.4477153 4.44771525,10 5,10 M4,4 C8.418278,4 12,7.581722 12,12 L10.5449871,12 C10.5449871,8.38530341 7.61469659,5.45501285 4,5.45501285 L4,4 M4,7 C6.76142375,7 9,9.23857625 9,12 L7.57070707,12 C7.57070707,11.0529896 7.19450866,10.1447663 6.52487118,9.47512882 C5.85523371,8.80549134 4.9470104,8.42929293 4,8.42929293 L4,7 Z\\\" id=\\\"rss-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/rss\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.75,10 C5.44035594,10 6,10.5596441 6,11.25 C6,11.9403559 5.44035594,12.5 4.75,12.5 C4.05964406,12.5 3.5,11.9403559 3.5,11.25 C3.5,10.5596441 4.05964406,10 4.75,10 Z M5.11116669,7.54639605 C6.82660407,7.80940186 8.1830606,9.16218778 8.45158391,10.8758014 L7.23152342,11.1795044 C7.08441894,9.91212418 6.07561709,8.9075227 4.80628203,8.7668642 L5.11116669,7.54639605 Z M5.72009926,5.11432766 C8.32885675,5.60976503 10.3855062,7.6642481 10.8841422,10.2718714 L9.66858256,10.5739265 C9.28406621,8.41337145 7.57799724,6.7100586 5.41602734,6.32963962 L5.72009926,5.11432766 Z M6.32787101,2.68573625 C9.83044069,3.40831848 12.5892971,6.16611302 13.3134345,9.66811414 L12.0989255,9.96960741 C11.4871421,6.91510726 9.07973668,4.50930363 6.02438684,3.89987406 L6.32787101,2.68573625 Z\\\" id=\\\"Channel-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/saved-messages\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.1666667,1 C17.9487847,1 18.6165365,1.26855469 19.1699219,1.80566406 C19.7233073,2.34277344 20,2.99088542 20,3.75 L20,21.625 C20,21.9973958 19.8634983,22.3196615 19.5904948,22.5917969 C19.3174913,22.8639323 18.9817708,23 18.5833333,23 L12,18.1875 L5.41666667,23 C5.01822917,23 4.68250868,22.8639323 4.40950521,22.5917969 C4.13650174,22.3196615 4,21.9973958 4,21.625 L4,3.75 C4,2.99088542 4.27669271,2.34277344 4.83007812,1.80566406 C5.38346354,1.26855469 6.05121528,1 6.83333333,1 L17.1666667,1 Z M12.0016667,4.4375 L10.2972396,8.1328125 L6.335,8.6484375 L9.256875,11.4199219 L8.50427083,15.4375 L12.0016667,13.4609375 L15.4990625,15.4375 L14.7464583,11.4199219 L17.6683333,8.6484375 L13.7060938,8.1328125 L12.0016667,4.4375 Z\\\" id=\\\"xabber:saved-messages\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <defs>\\n        <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n    </defs>\\n    <g id=\\\"icon/material/search\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <mask id=\\\"mask-2\\\" fill=\\\"white\\\">\\n            <use xlink:href=\\\"#path-1\\\"></use>\\n        </mask>\\n        <use id=\\\"mdi:search\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" xlink:href=\\\"#path-1\\\"></use>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/security\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,12 L19,12 C18.47,16.11 15.72,19.78 12,20.92 L12,12 L5,12 L5,6.3 L12,3.19 M12,1 L3,5 L3,11 C3,16.55 6.84,21.73 12,23 C17.16,21.73 21,16.55 21,11 L21,5 L12,1 Z\\\" id=\\\"mdi:security\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/server\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.1428571,13 L5.85714286,13 C5.38571429,13 5,12.625 5,12.1666667 L5,3.83333333 C5,3.375 5.38571429,3 5.85714286,3 L10.1428571,3 C10.6142857,3 11,3.375 11,3.83333333 L11,12.1666667 C11,12.625 10.6142857,13 10.1428571,13 Z M10,5 L6,5 L6,6 L10,6 L10,5 Z M10,7 L6,7 L6,8 L10,8 L10,7 Z M10,11 L9,11 L9,12 L10,12 L10,11 Z\\\" id=\\\"Server\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/star-face\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2.5 L8.42,8.06 L2,9.74 L6.2,14.88 L5.82,21.5 L12,19.09 L18.18,21.5 L17.8,14.88 L22,9.74 L15.58,8.06 L12,2.5 M9.38,10.5 C10,10.5 10.5,11 10.5,11.63 C10.5,11.9270425 10.3820003,12.2119189 10.1719596,12.4219596 C9.96191885,12.6320003 9.67704247,12.75 9.38,12.75 C8.75,12.75 8.25,12.25 8.25,11.63 C8.25,11 8.75,10.5 9.38,10.5 M14.63,10.5 C15.25,10.5 15.75,11 15.75,11.63 C15.75,12.2485589 15.2485589,12.75 14.63,12.75 C14,12.75 13.5,12.25 13.5,11.63 C13.5,11 14,10.5 14.63,10.5 M9,15 L15,15 C14.4960889,16.2119097 13.3124982,17.0016023 12,17.0016023 C10.6875018,17.0016023 9.50391113,16.2119097 9,15 L9,15 Z\\\" id=\\\"mdi:star-face\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/status-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M15,4.81 L12,6.05 L9,4.81 L7.79,7.79 L4.81,9 L6.05,12 L4.81,15 L7.79,16.21 L9,19.19 L12,17.95 L15,19.19 L16.21,16.21 L19.19,15 L17.95,12 L19.19,9 L16.21,7.79 L15,4.81 Z M13.5,7 L12,11 L15,11 L11.5,17 L10.5,17 L12,13 L9,13 L12.5,7 L13.5,7 Z\\\" id=\\\"xabber:status-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/status\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M13.5,7 L12.5,7 L9,13 L12,13 L10.5,17 L11.5,17 L15,11 L12,11 L13.5,7 Z\\\" id=\\\"xabber:status\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/subscription-from\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,8 C17.3137085,8 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.6862915,20 8,17.3137085 8,14 C8,13.462632 8.07064283,12.9417636 8.20314833,12.4461748 L9.67168223,13.9143229 C9.77459988,14.0172246 9.8859413,14.1065666 10.0034864,14.1823489 L10.0048953,14.1996403 C10.1089211,16.3160315 11.8578046,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.851413 16.3059677,10.0984884 14.180685,10.0040081 C14.1065666,9.8859413 14.0172246,9.77459988 13.9143229,9.67168223 L12.4461748,8.20314833 C12.9417636,8.07064283 13.462632,8 14,8 Z M11,4 L11,6 L7.415,6 L12.5,11.0857864 L11.0857864,12.5 L6,7.415 L6,11 L4,11 L4,4 L11,4 Z\\\" id=\\\"xabber:subscribe-from\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/subscription-to\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.9994979,8.00000002 C17.3137085,8.00000002 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.7616031,20 8.12242824,17.4344251 8.00413847,14.2249383 L8,13.999 L10,14 L10,14 C10,16.209139 11.790861,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.8578046 16.3160315,10.1089211 14.1996403,10.0048953 L13.999,10 L13.9994979,8.00000002 Z M4.91421356,3.5 L10,8.585 L10,5 L12,5 L12,12 L5,12 L5,10 L8.585,10 L3.5,4.91421356 L4.91421356,3.5 Z\\\" id=\\\"xabber:subscribe-to\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/circle/task\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <circle id=\\\"Circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" cx=\\\"8\\\" cy=\\\"8\\\" r=\\\"7\\\"></circle>\\n        <g id=\\\"icon16/bot-variant\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n            <polygon id=\\\"Path\\\" fill=\\\"#FFFFFF\\\" fill-rule=\\\"nonzero\\\" points=\\\"7 12.5 2.75 8.25 4 7 7 10 12 5 13.25 6.25\\\"></polygon>\\n        </g>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/translate\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12.87,15.07 L10.33,12.56 L10.36,12.53 C12.0541502,10.6471017 13.3198948,8.41925464 14.07,6 L17,6 L17,4 L10,4 L10,2 L8,2 L8,4 L1,4 L1,6 L12.17,6 C11.5,7.92 10.44,9.75 9,11.35 C8.07,10.32 7.3,9.19 6.69,8 L4.69,8 C5.42,9.63 6.42,11.17 7.67,12.56 L2.58,17.58 L4,19 L9,14 L12.11,17.11 L12.87,15.07 M18.5,10 L16.5,10 L12,22 L14,22 L15.12,19 L19.87,19 L21,22 L23,22 L18.5,10 M15.88,17 L17.5,12.67 L19.12,17 L15.88,17 L15.88,17 Z\\\" id=\\\"mdi:translate\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/trash\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,4 L15.5,4 L14.5,3 L9.5,3 L8.5,4 L5,4 L5,6 L19,6 M6,19 C6,20.1045695 6.8954305,21 8,21 L16,21 C17.1045695,21 18,20.1045695 18,19 L18,7 L6,7 L6,19 Z\\\" id=\\\"mdi:trash\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,10.5 L17,7 C17,6.44771525 16.5522847,6 16,6 L4,6 C3.44771525,6 3,6.44771525 3,7 L3,17 C3,17.5522847 3.44771525,18 4,18 L16,18 C16.5522847,18 17,17.5522847 17,17 L17,13.5 L21,17.5 L21,6.5 L17,10.5 Z\\\" id=\\\"mdi:video\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/volume-high\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 C19,15.17 16.89,17.84 14,18.7 L14,20.77 C18,19.86 21,16.28 21,12 C21,7.72 18,4.14 14,3.23 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,16 C15.5,15.29 16.5,13.76 16.5,12 M3,9 L3,15 L7,15 L12,20 L12,4 L7,9 L3,9 Z\\\" id=\\\"mdi:volume-high\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Mobile-Portrait\\\" transform=\\\"translate(-41.000000, -4.000000)\\\">\\n        <g id=\\\"volume-off-variant\\\" transform=\\\"translate(34.000000, 0.000000)\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n            <polygon id=\\\"Path-2\\\" points=\\\"7 9 7 15 11 15 16 20 16 16.5 8.5 9\\\"></polygon>\\n            <polygon id=\\\"Path-3\\\" points=\\\"7 6 18.5 17.5 19.5 16.5 16 13 16 4 11.5 8.5 8 5\\\"></polygon>\\n        </g>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/volume-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,4 L9.91,6.09 L12,8.18 M4.27,3 L3,4.27 L7.73,9 L3,9 L3,15 L7,15 L12,20 L12,13.27 L16.25,17.53 C15.58,18.04 14.83,18.46 14,18.7 L14,20.77 C15.38,20.45 16.63,19.82 17.68,18.96 L19.73,21 L21,19.73 L12,10.73 M19,12 C19,12.94 18.8,13.82 18.46,14.64 L19.97,16.15 C20.62,14.91 21,13.5 21,12 C21,7.72 18,4.14 14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,10.18 L16.45,12.63 C16.5,12.43 16.5,12.21 16.5,12 Z\\\" id=\\\"mdi:volume-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/web-cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.82,14 L9.66,14 C9.56,13.34 9.5,12.68 9.5,12 C9.5,11.32 9.56,10.65 9.66,10 L14.34,10 C14.43,10.65 14.5,11.32 14.5,12 C14.5,12.5 14.46,13 14.4,13.46 C15,12.96 15.72,12.57 16.5,12.32 L16.5,12 C16.5,11.32 16.44,10.66 16.36,10 L19.74,10 C19.9,10.64 20,11.31 20,12 L20,12.18 C20.7,12.35 21.35,12.63 21.95,13 C22,12.68 22,12.34 22,12 C22,6.5 17.5,2 12,2 C6.47,2 2,6.5 2,12 C2,17.5 6.5,22 12,22 C12.34,22 12.68,22 13,21.95 C12.59,21.29 12.29,20.55 12.13,19.75 C12.09,19.82 12.05,19.89 12,19.96 C11.17,18.76 10.5,17.43 10.09,16 L12.5,16 C12.81,15.25 13.26,14.58 13.82,14 M18.92,8 L15.97,8 C15.6570216,6.76145777 15.1935734,5.56589587 14.59,4.44 C16.43,5.07 17.96,6.34 18.92,8 M12,4.03 C12.83,5.23 13.5,6.57 13.91,8 L10.09,8 C10.5,6.57 11.17,5.23 12,4.03 M4.26,14 C4.1,13.36 4,12.69 4,12 C4,11.31 4.1,10.64 4.26,10 L7.64,10 C7.56,10.66 7.5,11.32 7.5,12 C7.5,12.68 7.56,13.34 7.64,14 L4.26,14 M5.08,16 L8,16 C8.35,17.25 8.8,18.45 9.4,19.56 C7.57862399,18.9316655 6.0448462,17.667719 5.08,16 M8,8 L5.08,8 C6.03885577,6.32721463 7.57479586,5.06148622 9.4,4.44 C8.8,5.55 8.35,6.75 8,8 M18.5,14 C16,14 14,16 14,18.5 C14,21 16,23 18.5,23 C21,23 23,21 23,18.5 C23,16 21,14 18.5,14 M18.5,21.5 C16.84,21.5 15.5,20.16 15.5,18.5 C15.5,17.94 15.65,17.42 15.92,17 L20,21.08 C19.58,21.35 19.06,21.5 18.5,21.5 M21.08,20 L17,15.92 C17.42,15.65 17.94,15.5 18.5,15.5 C20.16,15.5 21.5,16.84 21.5,18.5 C21.5,19.06 21.35,19.58 21.08,20 Z\\\" id=\\\"mdi:web-cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/web\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.36,14 C16.44,13.34 16.5,12.68 16.5,12 C16.5,11.32 16.44,10.66 16.36,10 L19.74,10 C19.9,10.64 20,11.31 20,12 C20,12.69 19.9,13.36 19.74,14 M14.59,19.56 C15.19,18.45 15.65,17.25 15.97,16 L18.92,16 C17.96,17.65 16.43,18.93 14.59,19.56 M14.34,14 L9.66,14 C9.56,13.34 9.5,12.68 9.5,12 C9.5,11.32 9.56,10.65 9.66,10 L14.34,10 C14.43,10.65 14.5,11.32 14.5,12 C14.5,12.68 14.43,13.34 14.34,14 M12,19.96 C11.17,18.76 10.5,17.43 10.09,16 L13.91,16 C13.5,17.43 12.83,18.76 12,19.96 M8,8 L5.08,8 C6.03,6.34 7.57,5.06 9.4,4.44 C8.8,5.55 8.35,6.75 8,8 M5.08,16 L8,16 C8.35,17.25 8.8,18.45 9.4,19.56 C7.57,18.93 6.03,17.65 5.08,16 M4.26,14 C4.1,13.36 4,12.69 4,12 C4,11.31 4.1,10.64 4.26,10 L7.64,10 C7.56,10.66 7.5,11.32 7.5,12 C7.5,12.68 7.56,13.34 7.64,14 M12,4.03 C12.83,5.23 13.5,6.57 13.91,8 L10.09,8 C10.5,6.57 11.17,5.23 12,4.03 M18.92,8 L15.97,8 C15.65,6.75 15.19,5.55 14.59,4.44 C16.43,5.07 17.96,6.34 18.92,8 M12,2 C6.47,2 2,6.5 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,9.3478351 20.9464316,6.80429597 19.0710678,4.92893219 C17.195704,3.0535684 14.6521649,2 12,2 Z\\\" id=\\\"mdi:web\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Offline\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8015103 C17.1966102,15.1049344 17.0013821,15.5296633 17,16 C17,16.5522847 16.5443356,17 16.0046024,17 L7.99539757,17 C7.44565467,17 7,16.5561352 6.99998649,16 C6.99861167,15.5296664 6.80338616,15.10494 6.49000549,14.8015163 L6.49000549,14.8000192 C4.95622884,13.3424727 4,11.282906 4,9 C4,4.581722 7.581722,1 12,1 C16.418278,1 20,4.581722 20,9 C20,11.282906 19.0437712,13.3424727 17.5099945,14.8000192 L17.5099945,14.8015103 Z M8.86088543,15 L15.1391084,15 C15.3021338,14.4253123 15.6014858,13.895093 16,13.472213 C17.2274987,12.3735719 18,10.7769996 18,9 C18,5.6862915 15.3137085,3 12,3 C8.6862915,3 6,5.6862915 6,9 C6,10.7769996 6.77250128,12.3735719 8,13.472213 C8.39851111,13.8950917 8.69786083,14.4253152 8.86088543,15 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Online\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8000192 C19.0437712,13.3424727 20,11.282906 20,9 C20,4.581722 16.418278,1 12,1 C7.581722,1 4,4.581722 4,9 C4,11.282906 4.95622884,13.3424727 6.49000549,14.8000192 L6.49000549,14.8015163 C6.80338616,15.10494 6.99861167,15.5296664 6.99998649,16 C7,16.5561352 7.44565467,17 7.99539757,17 L16.0046024,17 C16.5443356,17 17,16.5522847 17,16 C17.0013821,15.5296633 17.1966102,15.1049344 17.5099945,14.8015103 L17.5099945,14.8015103 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/xmpp\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,16.4 C9.75,14.09 8,10.54 8,7 C2,5 8,7 2,5 C2,10.65 6.33,15.11 10.55,17.66 C9.38,18.5 8.15,19 7,19 C7,20 7,19 7,20 C8.2,20 10.03,19.46 12,18.46 C13.97,19.46 15.8,20 17,20 C17,19 17,20 17,19 C15.85,19 14.62,18.5 13.45,17.66 C17.66,15.11 22,10.65 22,5 C16,7 22,5 16,7 C16,10.54 14.25,14.09 12,16.4 Z\\\" id=\\\"mdi:xmpp\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg></div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info first-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info middle-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info last-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info fullname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info nickname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info birthday\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap job-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n        <div class=\\\"info org-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info job-title\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info org-unit\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info role\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info url\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap phone-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <div class=\\\"info phone-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-mobile\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap email-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n        <div class=\\\"info email-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap address-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n        <div class=\\\"info address-home\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-work\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-default\\\">\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n        </div>\\n    </div>\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"<div class=\\\"buttons-wrap\\\">\\n    <button class=\\\"btn-vcard-save btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_save\\\"))]}</button>\\n</div>\\n<div class=\\\"vcard-edit-wrap\\\">\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n    <div class=\\\"info-wrap personal-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field first-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-first-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_given_name'))]}\\\" type=\\\"text\\\" name=\\\"first_name\\\">\\n        </div>\\n        <div class=\\\"input-field middle-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-middle-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_middle_name'))]}\\\" type=\\\"text\\\" name=\\\"middle_name\\\">\\n        </div>\\n        <div class=\\\"input-field last-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-last-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_family_name'))]}\\\" type=\\\"text\\\" name=\\\"last_name\\\">\\n        </div>\\n        <div class=\\\"input-field fullname\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-fullname\\\" placeholder=\\\"{[print(xabber.getString('vcard_full_name'))]}\\\" type=\\\"text\\\" name=\\\"fullname\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n    <div class=\\\"info-wrap nickname-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field nickname\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-nickname\\\" placeholder=\\\"{[print(xabber.getString('vcard_nick_name'))]}\\\" type=\\\"text\\\" name=\\\"nickname\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n    <div class=\\\"info-wrap birthday-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field birthday\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-birthday\\\" placeholder=\\\"{[print(xabber.getString('vcard_birth_date_placeholder'))]}\\\" type=\\\"text\\\" class=\\\"datepicker\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_job\\\"))]}</div>\\n    <div class=\\\"info-wrap job-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field org-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-org-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization'))]}\\\" type=\\\"text\\\" name=\\\"org_name\\\">\\n        </div>\\n        <div class=\\\"input-field job-title\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-job-title\\\" placeholder=\\\"{[print(xabber.getString('vcard_title'))]}\\\" type=\\\"text\\\" name=\\\"job_title\\\">\\n        </div>\\n        <div class=\\\"input-field org-unit\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-org-unit\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization_unit'))]}\\\" type=\\\"text\\\" name=\\\"org_unit\\\">\\n        </div>\\n        <div class=\\\"input-field role\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-role\\\" placeholder=\\\"{[print(xabber.getString('vcard_role'))]}\\\" type=\\\"text\\\" name=\\\"role\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n    <div class=\\\"info-wrap site-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field url\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-url\\\" placeholder=\\\"{[print(xabber.getString('vcard_url_placeholder'))]}\\\" type=\\\"text\\\" name=\\\"url\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field description\\\">\\n            <textarea id=\\\"{{view.cid}}-description\\\" placeholder=\\\"{[print(xabber.getString('vcard_decsription_placeholder'))]}\\\" type=\\\"text\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field textarea-glow input-glow account-glow\\\" name=\\\"description\\\"></textarea>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n    <div class=\\\"info-wrap phone-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field phone-work\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"phone_work\\\">\\n        </div>\\n        <div class=\\\"input-field phone-home\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_home'))]}\\\" type=\\\"text\\\" name=\\\"phone_home\\\">\\n        </div>\\n        <div class=\\\"input-field phone-mobile\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-mobile\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_mobile'))]}\\\" type=\\\"text\\\" name=\\\"phone_mobile\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n    <div class=\\\"info-wrap email-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field email-work\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-email-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"email_work\\\">\\n        </div>\\n        <div class=\\\"input-field email-home\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-email-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_personal'))]}\\\" type=\\\"text\\\" name=\\\"email_home\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_home_address\\\"))]}</div>\\n    <div class=\\\"info-wrap address-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"address\\\"></svg>\\n        </div>\\n        <div class=\\\"input-wrap address-wrap address-home-wrap\\\">\\n            <div class=\\\"input-field pobox\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-po-home-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_home_box\\\">\\n            </div>\\n            <div class=\\\"input-field extadd\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_extadd\\\">\\n            </div>\\n            <div class=\\\"input-field street\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_street\\\">\\n            </div>\\n            <div class=\\\"input-field locality\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_locality\\\">\\n            </div>\\n            <div class=\\\"input-field region\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_region\\\">\\n            </div>\\n            <div class=\\\"input-field pcode\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_pcode\\\">\\n            </div>\\n            <div class=\\\"input-field country\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_country\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_work_address\\\"))]}</div>\\n    <div class=\\\"info-wrap address-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"address\\\"></svg>\\n        </div>\\n        <div class=\\\"input-wrap address-wrap address-work-wrap\\\">\\n            <div class=\\\"input-field pobox\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-po-work-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_work_box\\\">\\n            </div>\\n            <div class=\\\"input-field extadd\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_extadd\\\">\\n            </div>\\n            <div class=\\\"input-field street\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_street\\\">\\n            </div>\\n            <div class=\\\"input-field locality\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_locality\\\">\\n            </div>\\n            <div class=\\\"input-field region\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_region\\\">\\n            </div>\\n            <div class=\\\"input-field pcode\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_pcode\\\">\\n            </div>\\n            <div class=\\\"input-field country\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_country\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"vcard-wrap\\\">\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info nickname\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info first-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info last-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info birthday\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info url\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap more\\\">\\n        <div class=\\\"show-vcard\\\">\\n            {[print(xabber.getString(\\\"contact_vcard_more\\\"))]}\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"></div>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info nickname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info first-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info middle-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info last-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info fullname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info birthday\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap job-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info job-title\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-unit\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info role\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info url\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap phone-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-mobile\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap email-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap address-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-home\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-work\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-default\\\">\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"resources-block-wrap hidden\\\">\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","module.exports = {\"background-images\":{\"image\":[{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0293+he.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-A0tXm8gjfMU/U08VDMRGtuI/AAAAAAAAvrI/IQEscTGZyJY/s1920-w1920-h1080-c/IMG_0293%2Bhe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0660.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wkrGBuk0DoA/Us9JnUoXnTI/AAAAAAAAkTA/yDQexzLKhKY/s1920-w1920-h1080-c/DSC_0660.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071227-4144-PtLomaReef.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1xZqgaRDIec/Tg1dMJq1vBI/AAAAAAAAALc/7m0Tpv2htVc/s1920-w1920-h1080-c/071227-4144-PtLomaReef.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/976865336_a+view+of+queenstown.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-36YdSRh6q9w/TgtZEChvrkI/AAAAAAAJA0M/zVvIUAdwQ3Q/s1920-w1920-h1080-c/976865336_a%2Bview%2Bof%2Bqueenstown.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-MarshallBeach-lightSky.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--L7AhWZit78/TysVss3ThoI/AAAAAAAARho/n2ToQ-2Kw7g/s1920-w1920-h1080-c/GGB-MarshallBeach-lightSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01079+(1).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-ePzy0PYNkjY/ToE9F9iPxKI/AAAAAAAAsWg/o7LkkqWEs2o/s1920-w1920-h1080-c/DSC01079%2B%25281%2529.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8492_HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-pnosgcd6G2c/UbheNBeniVI/AAAAAAAAWp0/hSEX3IwAgyI/s1920-w1920-h1080-c/DSC_8492_HDR-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/02202012-04.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-El8tXEJMqm4/UOD9tk8_rkI/AAAAAAAAkM0/sZP34rwkVsQ/s1920-w1920-h1080-c/02202012-04.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100530_120257_0273-Edit-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EpsKJMBxb6I/TBpXudG4_PI/AAAAAAABEHk/_knVZZOptTY/s1920-w1920-h1080-c/20100530_120257_0273-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lines.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Ot1wFdQdaqw/UBSl7ewGOkI/AAAAAAAAPd4/3tUkrKTWDgM/s1920-w1920-h1080-c/Lines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DunesEdge.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-WbNq4f1kE7Y/Tu9tVtXGCYI/AAAAAAABFWY/N9NL1MKUt4A/s1920-w1920-h1080-c/DunesEdge.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2857.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YPiBdTDD5Vo/UpExbztAgWI/AAAAAAAAFg8/8n5CyP4w8Ps/s1920-w1920-h1080-c/DSC_2857.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0513-edited.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-CY6T5q8rqmA/UZWyvmYhLYI/AAAAAAAAAw4/Pi0Uy3nq19I/s1920-w1920-h1080-c/DSC_0513-edited.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/stuck_04.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-fc8aRqsAEzk/U0MjlhykUtI/AAAAAAAJF1s/nRoV1Yk1z2E/s1920-w1920-h1080-c/stuck_04.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Dandelion_.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ExqBtlpobeE/T-aKZZzVcKI/AAAAAAABhl4/jrErtktlcuA/s1920-w1920-h1080-c/Dandelion_.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8670434759_91e92fd1ee_k.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3nqLFWiEm3E/UXXCrC5RBeI/AAAAAAAANoY/8_ktEhLdCLs/s1920-w1920-h1080-c/8670434759_91e92fd1ee_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2049233526_19f97ff57f_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gJmej39yU_c/TgtZECWgTtI/AAAAAAAJFFY/Y0nVr5_Tchg/s1920-w1920-h1080-c/2049233526_19f97ff57f_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoBeach-firespinning-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-teMxOetSsy0/TwNDboHbM0I/AAAAAAABFao/F9yQHylkRdo/s1920-w1920-h1080-c/RodeoBeach-firespinning-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-rF8zodn1xAI/U_yjoZyDgcI/AAAAAAAB-38/U62D7hi4-NU/s1920-w1920-h1080-c/20140204_Iceland_0234_5_6_32bit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6887-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KiRwrTTHEWk/UdFoWqh2bFI/AAAAAAAAXhA/6PIDVYH9nFY/s1920-w1920-h1080-c/DSC_6887-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SealRocks-sunset-beach-rock.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-6_QxmRRnJO8/TwjqsB2kshI/AAAAAAABFZw/__-irT00R2k/s1920-w1920-h1080-c/SealRocks-sunset-beach-rock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_7112.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-HWAadtEQKQE/UtTyRxs2u4I/AAAAAAAAOhk/Y3jT0QJtdhQ/s1920-w1920-h1080-c/DSC_7112.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Invitation.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5NKrifl_xpo/UUxwAqoj7nI/AAAAAAAAwGk/82Dkiz_sEaw/s1920-w1920-h1080-c/Invitation.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_7114-Edit-Recovered.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-W5qc4LH_lpo/U_yjzHjSpzI/AAAAAAAB-7E/8MQAw4fsEJc/s1920-w1920-h1080-c/_DX_7114-Edit-Recovered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8993.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sy3wa9ofb38/UQtPlF6YOQI/AAAAAAAAfXc/9uYpeM68vOc/s1920-w1920-h1080-c/IMGP8993.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/dsc_4194.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-cFySK9YoOOI/SwTDSXWTa2I/AAAAAAABNnY/1VFL3dYXkgA/s1920-w1920-h1080-c/dsc_4194.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/panthercreek_7509-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-JoKkOqJLegk/T7KQORntaBI/AAAAAAABjLg/FbmDYu5k3DY/s1920-w1920-h1080-c/panthercreek_7509-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6464.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-RYt_J-BlGJs/UmBWyVrQZII/AAAAAAAAFAA/9Y9zqjdXQeU/s1920-w1920-h1080-c/DSC_6464.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080820-5209-MakenaLL.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-6IrulujJPwU/Tg1d_n1nptI/AAAAAAAAAMc/O4OAV6udX8Y/s1920-w1920-h1080-c/080820-5209-MakenaLL.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_5300.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-cn-CS-vxFn4/UtTvqLzjmrI/AAAAAAAAX3Y/OdfK9XhRGeE/s1920-w1920-h1080-c/DSC_5300.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080327-4706-JoshuaTreeOasis.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-mwobIYTjtko/Tg1dd90GDjI/AAAAAAAAAL0/M_NjYSMqoG0/s1920-w1920-h1080-c/080327-4706-JoshuaTreeOasis.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/217440037_8ca190627e_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-EjnJBBcvhrU/TgtZEIVpLlI/AAAAAAAJJ5s/CQK74NolX7E/s1920-w1920-h1080-c/217440037_8ca190627e_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MSU_1184.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-lM1sKRbIu7A/T_mdon8mP-I/AAAAAAAAAwc/SJMO-kWHQLY/s1920-w1920-h1080-c/MSU_1184.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0537-Edit-Edit-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-HfCYnCbpqww/Us1HNtNz00I/AAAAAAAAkFE/UJChD7bbmm0/s1920-w1920-h1080-c/DSC_0537-Edit-Edit-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TetonShwabacher.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-gi8-azW5hAQ/UGdSQqk9G_I/AAAAAAAAJto/inIHRwOCy3c/s1920-w1920-h1080-c/TetonShwabacher.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/PVK_5178.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-zAuJ1AZC34Y/TrsJH22VV5I/AAAAAAAAEvc/EzBqDb6tQRE/s1920-w1920-h1080-c/PVK_5178.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3824+pe.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-QgFnhS9tfuI/U0tzKPZox-I/AAAAAAAAvhg/EjRaa8ETaYM/s1920-w1920-h1080-c/IMG_3824%2Bpe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/101016-4858-GrayWhaleGran1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-gb7vG0Z6jrU/Tg1gas5e87I/AAAAAAAAAPY/4zsNQt6LotI/s1920-w1920-h1080-c/101016-4858-GrayWhaleGran1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+Queenstown+Aurora+Australis.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-F1T9flY075Y/U0Mgnwr2AJI/AAAAAAAJBJY/eeooel6-ZXY/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BQueenstown%2BAurora%2BAustralis.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4393.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-RtJjOCkuYL8/UtTvDO3sraI/AAAAAAAAX3c/VVVtMV1yPW0/s1920-w1920-h1080-c/DSC_4393.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-road-to-paradise.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-2Lhxkz2EBz4/U0MlX7aExHI/AAAAAAAJXMc/Lh1kPpcrBi8/s1920-w1920-h1080-c/trey-ratcliff-road-to-paradise.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sunrise+in+Sangam.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7X44UiG6ohw/Ua2Qmj06zkI/AAAAAAAAfYA/owBHOfu6u_I/s1280-w1280-c-h720-k-no/Sunrise%2Bin%2BSangam\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061012-1109-PigeonPEve.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-r3D0LQrT3K4/Tg1bQhpX5hI/AAAAAAAAAIs/ONg4BWnADUM/s1920-w1920-h1080-c/061012-1109-PigeonPEve.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Motion.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-eYFfx8sHLZY/UBSl8KkdpRI/AAAAAAAAPeA/5sJreKxzLYc/s1920-w1920-h1080-c/Motion.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGate+Dawn+from+Slacker+Hill.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-GYfXywevB-4/UtTtugxGWlI/AAAAAAAAXpw/e5tyHYdIIK0/s1920-w1920-h1080-c/GGate%2BDawn%2Bfrom%2BSlacker%2BHill.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7006-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iqs_ihvxlzM/Ur0B20OjdgI/AAAAAAAAF7Y/yJ1rAuyEQjQ/s1920-w1920-h1080-c/IMG_7006-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MoraineLake.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-YNlHO0F-y_U/UoazYeYqMvI/AAAAAAAAVqg/h8tLY6Zwktw/s1920-w1920-h1080-c/MoraineLake.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/12-11-12-original.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-qdhLu3VPZU8/Uqjrkz-1dzI/AAAAAAAAYTY/Is8QaEy3rZo/s1920-w1920-h1080-c/12-11-12-original.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20090411_132734_.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-0EQ-4alz8RY/S9aXij2EEzI/AAAAAAABDQ8/SUAUmq9rm60/s1920-w1920-h1080-c/20090411_132734_.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seattle_BrianMatiash.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-BK4o8MjAzHY/T6vkuyTuQ7I/AAAAAAAIovQ/rWAnhK0bJqQ/s1920-w1920-h1080-c/Seattle_BrianMatiash.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Infinity+of+Tokyo.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-vCWMbf5t3RI/U0MbNIFWMsI/AAAAAAAJA-w/hbek0tN8Oqk/s1920-w1920-h1080-c/The%2BInfinity%2Bof%2BTokyo.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/PatriciaLake.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oMSn89uorIA/UktkPI4oEVI/AAAAAAAAVqo/d_0ZasIPfnc/s1920-w1920-h1080-c/PatriciaLake.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/02212012-08.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_ApXZ5TKn2Y/UOD9xbbz3OI/AAAAAAAAkNY/p6fXkvjZNY8/s1920-w1920-h1080-c/02212012-08.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnds-le-sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-aqN5sgbqggQ/T3sLvuIoTmI/AAAAAAABFlQ/jxR2IgWbFM4/s1920-w1920-h1080-c/LandsEnds-le-sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Approaching+Yosemite.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bEYj5hwZ1G8/U0MSbgTqo4I/AAAAAAAJF9c/ijCLJ4jvSuU/s1920-w1920-h1080-c/Approaching%2BYosemite.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Rust.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-B7_iA_X9u6k/UBSl-nRhkxI/AAAAAAAAPeg/QCRwYky8OXM/s1920-w1920-h1080-c/Rust.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3054580997_b9c89c7d9f_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KilhfjagQZw/TgtZGB0uBJI/AAAAAAAJXZc/rjj3xvxSkso/s1920-w1920-h1080-c/3054580997_b9c89c7d9f_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0853-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3dXv-q-kMJg/Ute8DoCJgSI/AAAAAAAAlHI/A3PJNXvm8g4/s1920-w1920-h1080-c/DSC_0853-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Across+the+Alaskan+Fjords.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-h782AeqXwL4/U0MTcwzNuyI/AAAAAAAJBlg/B0ICHy6uj-I/s1920-w1920-h1080-c/Across%2Bthe%2BAlaskan%2BFjords.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0592.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rOuBbaxoNAU/T-zOq9MmziI/AAAAAAAABdU/y24M7n3oj70/s1920-w1920-h1080-c/IMGP0592.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071121-3891-MontcitoMorn.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-X5n9ak4dE1s/Tg1c8c9xvWI/AAAAAAAAALE/M9bf_hSgUHI/s1920-w1920-h1080-c/071121-3891-MontcitoMorn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8551.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-0QWWEWkAEkA/UTmo6qnkIgI/AAAAAAAAWsU/VIzT5UsUyh8/s1920-w1920-h1080-c/DSC_8551.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_20130330_120430-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-f1YF98XfEmY/UVmHsvQBxvI/AAAAAAAAT9g/0Uk7XjxUFCw/s1920-w1920-h1080-c/IMG_20130330_120430-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-surf-burn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-zcGhuTDGZ7Q/TvI44kbopOI/AAAAAAABFaY/677iL2Z8O8s/s1920-w1920-h1080-c/SutroSunset-surf-burn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Beach.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lMCO5r3MLUQ/UZURZdDoWWI/AAAAAAAAPOU/FayJm6cQrN4/s1920-w1920-h1080-c/The%2BBeach.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Take+It+or+Leave+It.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-jrCbEVo5pok/UTUniMfAPQI/AAAAAAAAMlc/taFKyOwN7ro/s1920-w1920-h1080-c/Take%2BIt%2Bor%2BLeave%2BIt.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ENS-+Macro+Snow-.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-JMRLCkgYWUI/UR0He_hKbyI/AAAAAAAAOyM/Fjml1QshbrU/s1920-w1920-h1080-c/ENS-%2BMacro%2BSnow-.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1351.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-DHg264B2vlg/Ul9y7zxl9iI/AAAAAAAAE6A/KNGHpq_cH1M/s1920-w1920-h1080-c/DSC_1351.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7939+he.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-lA8lfuSjpBY/U0tzavr8B0I/AAAAAAAAvh8/YNJ4VVT6axk/s1920-w1920-h1080-c/IMG_7939%2Bhe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071124-3917-BigSurSky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vQXExn8x3Wo/Tg1dCJ3WSJI/AAAAAAAAALM/j6v5p4iMLDc/s1920-w1920-h1080-c/071124-3917-BigSurSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3189889363_6357f5f645_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mA6_1F0fM7U/TgtZGJt2oII/AAAAAAAJKTg/te1m0BOVycg/s1920-w1920-h1080-c/3189889363_6357f5f645_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01070+Mosaic.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-nCN9lgyjKd0/UpBNC_yRLBI/AAAAAAAAD_s/xH5Pb5wEGH4/s1920-w1920-h1080-c/DSC01070%2BMosaic.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1182.CR2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-2y17u99oVV8/TwyPAbOBPqI/AAAAAAAAF9w/EQOhIwGaHiA/s1920-w1920-h1080-c/IMG_1182.CR2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Grassy+Roof.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Y_Bp6GUWfSE/U0Maxnb6OyI/AAAAAAAJA4U/a05iPi39_7c/s1920-w1920-h1080-c/The%2BGrassy%2BRoof.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seal+Rocks-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rQdS7R8LdHM/T1Jy2z5kZcI/AAAAAAABFZY/Cqb-Q9aWw2Q/s1920-w1920-h1080-c/Seal%2BRocks-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MountainSplendor.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-f6OToCJWRrg/UUsOySkJXoI/AAAAAAAATgk/DWwubrzxFPY/s1920-w1920-h1080-c/MountainSplendor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4460.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GQv4Q_NZKH8/UDZ1v6AEcSI/AAAAAAAA6ik/i90ZeH2jexc/s1920-w1920-h1080-c/IMG_4460.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled+(101+of+207).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-tw3AkYSVojM/U0MlwltSINI/AAAAAAAJBMA/7_5x_BUOOww/s1920-w1920-h1080-c/untitled%2B%2528101%2Bof%2B207%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6674-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-X3k5JeDbKW4/UZtfuMrJ49I/AAAAAAAAVpI/Qy3yA3weGXM/s1920-w1920-h1080-c/DSC_6674-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-07-13-hodgeman-ks-lightning-supercell.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-NE7B7ZtjC9M/UknSexY2-_I/AAAAAAAAN6g/od62b4KTS9U/s1920-w1920-h1080-c/5-07-13-hodgeman-ks-lightning-supercell.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Thamserku.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gvCvkN6ll9Y/UtRUq4mYc8I/AAAAAAAAGpo/RecztlhW01k/s1920-w1920-h1080-c/Thamserku.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ohau-cliff-hawaii-trey-ratcliff.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-lKPOvxP_3hQ/U0MjW1IS8QI/AAAAAAAJBP4/qTn4pFXZq_8/s1920-w1920-h1080-c/ohau-cliff-hawaii-trey-ratcliff.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/7439storm2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-PBAhFhrSEPM/Ugj3wyodrvI/AAAAAAAAIOs/Fo7lNmwWNu0/s1920-w1920-h1080-c/7439storm2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/bondi_sml.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-OuaQJ-ktrms/TmH7HMco5NI/AAAAAAAADYk/CvmoywXR_ck/s1920-w1920-h1080-c/bondi_sml.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+China+2011+-+A+Great+Wall+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Bm8YwGRxgzI/U0MfR72bkDI/AAAAAAAJKHE/TKs1mWF8US4/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BChina%2B2011%2B-%2BA%2BGreat%2BWall%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TwilightRocks_SanMateoCoast-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-WiGnP1yACq0/T2-Ib08jHdI/AAAAAAABFaw/uRs4YlY_qss/s1920-w1920-h1080-c/TwilightRocks_SanMateoCoast-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Farm+of+Eden.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-To5JBx7eAO4/U0MaTRPOM4I/AAAAAAAJEWM/8Bgvm9uL6Do/s1920-w1920-h1080-c/The%2BFarm%2Bof%2BEden.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8031438226_5713c1a86c_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-VeCrM9fKDYw/UkPR39wFICI/AAAAAAAALrQ/1VmRr7zq_N4/s1920-w1920-h1080-c/8031438226_5713c1a86c_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061012-1078-PelicanCove.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hn2QgYPEDxo/Tg1bUgAlTfI/AAAAAAAAAI0/R33ZpN3IaJ8/s1920-w1920-h1080-c/061012-1078-PelicanCove.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC03916+Green+Leaf+Texture.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Lpppujp4Qb4/UpBTNYFdx7I/AAAAAAAAD_4/SCgq46wEvcU/s1920-w1920-h1080-c/DSC03916%2BGreen%2BLeaf%2BTexture.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Fickle+Mistress.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Z9mJn5vva2U/T6sVZGdrvgI/AAAAAAAAdAo/rdpy_ia2NS8/s1920-w1920-h1080-c/The%2BFickle%2BMistress.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090227-0384-McCluresPoint.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-K7DKKrLhMec/Tg1eUKdLbXI/AAAAAAAAAM4/BaH6ytbEX4U/s1920-w1920-h1080-c/090227-0384-McCluresPoint.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080816-4952-WaianSands.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-tCgHZWwSulc/Tg1dtfmRPHI/AAAAAAAAAMI/ol6-WLOo7WU/s1920-w1920-h1080-c/080816-4952-WaianSands.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0684.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-xOVjmeJjM3o/TqtYP_buAoI/AAAAAAAAFlA/xUHqJSkr-MU/s1920-w1920-h1080-c/IMG_0684.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071229-4276-LaJollaFalls.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-e6TcvHbkNxo/Tg1dYGAJKTI/AAAAAAAAALw/_t-M3-wmbeg/s1920-w1920-h1080-c/071229-4276-LaJollaFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090911-2088-AngelIslandSky2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-n76GULHmI8U/Tg1fNmGyDbI/AAAAAAAAAOA/pNieTMoo0ro/s1920-w1920-h1080-c/090911-2088-AngelIslandSky2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1134103121_gateway+to+the+temple+of+heaven.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-08NVs0omPPw/TgtZEFlihuI/AAAAAAAJBBo/KKdqrpOP5Z0/s1920-w1920-h1080-c/1134103121_gateway%2Bto%2Bthe%2Btemple%2Bof%2Bheaven.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DolphinWalk.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-WHdVljxASJk/UOue-BcvLNI/AAAAAAAAwoo/ENRQQBJtKsA/s1920-w1920-h1080-c/DolphinWalk.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Red+paint+on+rock!.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-1OMPOm50As0/Ua2didd-IjI/AAAAAAAAfX4/afXkw0vQ4Nc/s1280-w1280-c-h720-k-no/Red%2Bpaint%2Bon%2Brock%2521\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-20-11-sunset-clouds365-kdelay.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-sVsjQwFKpM0/UFN9mKAiexI/AAAAAAAASuM/qpOQevOJY8k/s1920-w1920-h1080-c/5-20-11-sunset-clouds365-kdelay.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/maui-13.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-A5xnIm26hoM/UQ6xWBcP60I/AAAAAAAAFZI/xCilpfxW-3Y/s1920-w1920-h1080-c/maui-13.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sloat-SunsetBeachFoam.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-2oWY5eMxbnY/TwJ1W3DnAII/AAAAAAABFbs/V9UTfZKkOnM/s1920-w1920-h1080-c/Sloat-SunsetBeachFoam.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6436.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hjg_1FAJV7k/T8miVTXavMI/AAAAAAAAIgo/Ksveh_v5Pws/s1920-w1920-h1080-c/DSC_6436.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090501-0963-CycloneOfLt.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-duWLWrx3RtU/Tg1erB-vvtI/AAAAAAAAANU/3iD8-ATfJsw/s1920-w1920-h1080-c/090501-0963-CycloneOfLt.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1189866210_spanish+sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-zAb56uSfuX0/TgtZEG6yqnI/AAAAAAAJBDQ/5prXR1sSzyU/s1920-w1920-h1080-c/1189866210_spanish%2Bsunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5433.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-dN576MDlyEM/TiRJgIjUtZI/AAAAAAAD6lY/sbNK1sQOiow/s1920-w1920-h1080-c/IMG_5433.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A4957.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-7EJI2_bMWrg/U0_6WXfnu0I/AAAAAAAA2IA/qnv2qDY374E/s1920-w1920-h1080-c/388A4957.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Olmsted-Sunset-1.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_X4BN2gmOh4/TqTdEJ8Q95I/AAAAAAAAEx4/4HIX-pD4OuI/s1920-w1920-h1080-c/Olmsted-Sunset-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/new-england-4.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-z9s9Br2P5fo/UKZedhD_eYI/AAAAAAAACfk/2-qRWoFQDcs/s1920-w1920-h1080-c/new-england-4.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20101103_TorresDelPaine_Cuernos_Horns_6215_blended-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-9VBXTbvWld0/U_yjmbN6zVI/AAAAAAAB-3c/rSgR3kL3uTQ/s1920-w1920-h1080-c/20101103_TorresDelPaine_Cuernos_Horns_6215_blended-Edit-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/bodie-11.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NFuPWEa3vrE/UFs2mhJrWQI/AAAAAAAAST4/QAg74w1fZpI/s1920-w1920-h1080-c/bodie-11.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8003.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-xjlOWCsBOHg/UL2Bg7-fWJI/AAAAAAAAEQM/_Af3LToQDmg/s1920-w1920-h1080-c/IMGP8003.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20110710-160024.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GN97YhnT3Qo/Tj1SVC1wv-I/AAAAAAAADi0/upwFGIqVhPQ/s1920-w1920-h1080-c/20110710-160024.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/River+and+Mount.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-mdbG7ZFFzKQ/U0MX5tKa1vI/AAAAAAAJCBM/XGhf_-p25Ys/s1920-w1920-h1080-c/River%2Band%2BMount.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060607-0405-PillarsPast.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-USkNl2UVpk8/Tg1a6ynrEKI/AAAAAAAAc0c/fcUJz1E5SKw/s1920-w1920-h1080-c/060607-0405-PillarsPast.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8949932059_416d4806ab_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rU4h5IKilhs/UbC8PJyZCII/AAAAAAAABBo/tPQZAwV8nxA/s1920-w1920-h1080-c/8949932059_416d4806ab_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-5.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-iXtTEIicPCE/Thz5P1Y-mFI/AAAAAAACqmA/QwzDzmHWk94/s1920-w1920-h1080-c/untitled-5.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140105-untitled+shoot-2908_HDR_HDR.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-kM5nzgAtWSI/Us2ewqEBtFI/AAAAAAAABiM/iwvLzC2OMEk/s1920-w1920-h1080-c/20140105-untitled%2Bshoot-2908_HDR_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100731-4524-HapunaLight1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EF8NaWPwjTM/Tg1gLGBR_9I/AAAAAAAAAPE/3DlU_Kv1HHQ/s1920-w1920-h1080-c/100731-4524-HapunaLight1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TetonSnakeOverlook.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-RCFt3utBaXk/UE5kxyUxo6I/AAAAAAAAJWQ/jtgzKjcGfuU/s1920-w1920-h1080-c/TetonSnakeOverlook.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20120212-IMG_4250.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-5FV5VQzT0WQ/Tzy0dNznpGI/AAAAAAAAEwc/5uIfwjNBMhc/s1920-w1920-h1080-c/20120212-IMG_4250.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100312-3521-MonolithicLight1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KKZmrbmQdYM/Tg1fx0f9EaI/AAAAAAAAAOs/zg07LmkK2eg/s1920-w1920-h1080-c/100312-3521-MonolithicLight1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8156803630_fcb67dbe98_k.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-p3T0Z0zLK5E/UJhoD6_Ac1I/AAAAAAAAgMQ/fqQxNGKpL-c/s1920-w1920-h1080-c/8156803630_fcb67dbe98_k.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4088949046_5d094cb2e2_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-yX9BOjrswig/TgtZEPKtS_I/AAAAAAAJEmo/jrnHGoDlpHw/s1920-w1920-h1080-c/4088949046_5d094cb2e2_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8621-2-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-4eLicoBRkAQ/Uc7OMQqqKMI/AAAAAAAAXbw/eMQHZ3fhXGA/s1920-w1920-h1080-c/DSC_8621-2-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1171692863_the+eiffel+from+beneath.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PQQBBUfBmNs/TgtZENaPpRI/AAAAAAAJA1Y/mfOoa5PJw4g/s1920-w1920-h1080-c/1171692863_the%2Beiffel%2Bfrom%2Bbeneath.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Sunset+on+a+Texas+Farm.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9-6Sd41GxEQ/U0MR8Gvqf4I/AAAAAAAJRB0/9fYITnA4fQk/s1920-w1920-h1080-c/A%2BSunset%2Bon%2Ba%2BTexas%2BFarm.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/300928932_3bf6d408df_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DfDrf9tZth0/TgtZGBjmXqI/AAAAAAAJA_A/e6jq_VQrXaY/s1920-w1920-h1080-c/300928932_3bf6d408df_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ReflectingMoonlight.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-B7gaJXyGoIs/UHOmYB8GzPI/AAAAAAAAwHA/MGpwJlaw7Yw/s1920-w1920-h1080-c/Reflecting%25252520Moonlight.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Solar+Flower.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-zuD-bqjkRMs/U0MdYYTiWJI/AAAAAAAJJLE/xEEn0-D32-Q/s1920-w1920-h1080-c/The%2BSolar%2BFlower.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061119-1290-HaenaSurf.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DtOOMCEQEzs/Tg1baI_IkFI/AAAAAAAAc0g/4HYnmK0I21k/s1920-w1920-h1080-c/061119-1290-HaenaSurf.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3425202839_7a6b829432_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Mo0DARoQ5pg/TgtZGObV66I/AAAAAAAJA4A/x3NBiBZ1T08/s1920-w1920-h1080-c/3425202839_7a6b829432_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3302.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EGI_DF6_jjM/U0_6WeYaAcI/AAAAAAAA2IA/onrkX5wYXC0/s1920-w1920-h1080-c/388A3302.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2388+e.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-uWYftkrNY7Y/U08nbhRFXEI/AAAAAAAAvt8/Jvqvy9ZX7Rw/s1920-w1920-h1080-c/IMG_2388%2Be.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060506-0094-Farscape.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mB0CsB02334/Tg1a0rca9TI/AAAAAAAAc0M/poMn2aae0XU/s1920-w1920-h1080-c/060506-0094-Farscape.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090102-0143-SeaAndStorm.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-rqPXOCN3Sf4/Tg1eJr7jzJI/AAAAAAAAAMs/neSQj8_NJbQ/s1920-w1920-h1080-c/090102-0143-SeaAndStorm.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-Wave_mono-square.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-_9KsThqIDII/TsKQNHpnMcI/AAAAAAABFcM/myl4tBgFSMs/s1920-w1920-h1080-c/GGB-Wave_mono-square.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2817.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KTagpsQRiZw/Tk84FHT3wvI/AAAAAAABMJE/lGUSRehuqK0/s1920-w1920-h1080-c/DSC_2817.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Morning+at+the+Secret+Lak2e.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-r9JZ23uiJdw/U0MRzWVvfDI/AAAAAAAJA5Q/4xCghAQGdp8/s1920-w1920-h1080-c/A%2BMorning%2Bat%2Bthe%2BSecret%2BLak2e.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0817.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-s8Arhr77hCs/UqTF_xWLYVI/AAAAAAAAXK8/uRcPFpV7CPM/s1920-w1920-h1080-c/C21T0817.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/091009-2169-LibOfAges3.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-VeOuV8_xtzQ/Tg1fcY4BfBI/AAAAAAAAAOQ/y0D10NZbTOw/s1920-w1920-h1080-c/091009-2169-LibOfAges3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SFBay-Sunrise-Hank-n-Pilings-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NZ_Ll43savw/TzCKeTsXQHI/AAAAAAAASAc/n4AJeYm6ehA/s1920-w1920-h1080-c/SFBay-Sunrise-Hank-n-Pilings-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Adventure+in+Argentina-7283-March+31,+2009-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-q7WJKw9Oqog/U0MSH9OpjdI/AAAAAAAJGxU/FDOzRfCcMro/s1920-w1920-h1080-c/Adventure%2Bin%2BArgentina-7283-March%2B31%252C%2B2009-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SunetReflection_16x9-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--s1xvTZu_8s/TvEFum2qOkI/AAAAAAABFiQ/RVtjU4CacrI/s1920-w1920-h1080-c/SunetReflection_16x9-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1221.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-id9Mf91TyIg/UQmGXFzYiAI/AAAAAAAAlfo/n2RM1udWSeM/s1920-w1920-h1080-c/IMG_1221.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-Ratcliff-New-Zealand+(362+of+696).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-4-wMlkvbnxI/U0MiMX47iJI/AAAAAAAJJJ8/lstLqeHqMOM/s1920-w1920-h1080-c/Trey-Ratcliff-New-Zealand%2B%2528362%2Bof%2B696%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Rocks+of+Iceland.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-7EENXFBPvH8/U0Mc5Ty31YI/AAAAAAAJBIY/d9kb4PcgsXc/s1920-w1920-h1080-c/The%2BRocks%2Bof%2BIceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2012-Favorites-3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_TPUkTQ0foE/UOu3R1Fih9I/AAAAAAAAUwU/n2BcAi9lFAI/s1920-w1920-h1080-c/2012-Favorites-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Exclamation-4.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-p2S6pYJG8TY/UkLZ-2heppI/AAAAAAAAdAo/UEwJsuYTGXM/s1920-w1920-h1080-c/Exclamation-4.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01099+Plant.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-AM_AYNzr-a0/UpBNRCa9JbI/AAAAAAAAD_w/gATI2Qr7EHw/s1920-w1920-h1080-c/DSC01099%2BPlant.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1-24-13.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-k85UvBDxqso/UbdXjw35hhI/AAAAAAAAFh4/E7cP1B2hXgg/s1920-w1920-h1080-c/1-24-13.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LowerAntelope1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Hy-GW9jdRmM/UOOY4T51IhI/AAAAAAAAKiI/dj3WLyRqMJE/s1920-w1920-h1080-c/LowerAntelope1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DelicateArch.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lTCOr1mGi98/T0m262j2RnI/AAAAAAAAGbs/4Ab-Mhv-4_A/s1920-w1920-h1080-c/DelicateArch.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_3091-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-dzQdFd1d2cg/UpExTYfIJ6I/AAAAAAAAFgo/jW1vrNByXqg/s1920-w1920-h1080-c/DSC_3091-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lorne+Road.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-SPVIRuebjx0/U0MWpwm-GJI/AAAAAAAJJKQ/b1X__UQq1K8/s1920-w1920-h1080-c/Lorne%2BRoad.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/110429-7971-Faultlines.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-9evAJAwXovk/Tg1aR0viDRI/AAAAAAAAc0I/TecuJZTaV44/s1920-w1920-h1080-c/110429-7971-Faultlines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+NEX+7-+Sunset+2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-2Q98cG0kiX8/U0MgMcXhJgI/AAAAAAAJKoU/iqJaKYOi6J0/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BNEX%2B7-%2BSunset%2B2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8556-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ree1zkofuLM/UPBTkiEo3pI/AAAAAAAAfWU/t0UKepl53qw/s1920-w1920-h1080-c/IMGP8556-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Most+Beautiful+Road+in+the+World.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Cp1EGSOiT7o/U0MbuGaep5I/AAAAAAAJIA0/Hi4dBFthsQE/s1920-w1920-h1080-c/The%2BMost%2BBeautiful%2BRoad%2Bin%2Bthe%2BWorld.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chicago.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KxjcNjAfrow/U0MTi1JasjI/AAAAAAAJKS4/JcqmHStMKgE/s1920-w1920-h1080-c/Chicago.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070211-2329-GarrapataSurf1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-p8gu7w4UaB0/Tg1cD-zJRXI/AAAAAAAAAJw/xKPs4AJ8WTU/s1920-w1920-h1080-c/070211-2329-GarrapataSurf1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Day+Break+G+.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KwGZ0753oAA/T_SUbhKUrmI/AAAAAAAAhqg/aN2q0nhUYNA/s1920-w1920-h1080-c/Day%2BBreak%2BG%252B.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070902-3129-BowlingBall1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EIrEuHD0skg/Tg1cUtz3htI/AAAAAAAAc00/ykp5Z4-BtGg/s1920-w1920-h1080-c/070902-3129-BowlingBall1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+OTW+to+Glen.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ggjaMcHz6Fw/U0Mgf-CsIDI/AAAAAAAJFdQ/iyuO6PIuUdg/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BOTW%2Bto%2BGlen.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/136.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DZDQ-Jc4VPA/TSjtGSyY5lI/AAAAAAAAkNQ/r8BTRHGP7qI/s1920-w1920-h1080-c/136.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1311-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-smKqSEXvptA/UpZ3FAZqrSI/AAAAAAAAf5w/iIG6Dg0XSKs/s1920-w1920-h1080-c/DSC_1311-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/In+a+Foreign+Land+-+West+Fjords,+Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5vOp8Qd9Cr0/UZURZbC6EvI/AAAAAAAAgTY/jZBHwF9W4VU/s1920-w1920-h1080-c/In%2Ba%2BForeign%2BLand%2B-%2BWest%2BFjords%252C%2BIceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Hell's+Gate+Bridge-6.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sZXaqdy-xcA/UKzgVo7pqnI/AAAAAAAAIaA/tvF7kHoKH2I/s1920-w1920-h1080-c/Hell%2527s%2BGate%2BBridge-6.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/End+Game+.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-vYrcLbr_syE/UO0CdVlLb_I/AAAAAAAAgOE/-NoOWCD3-LY/s1920-w1920-h1080-c/End%2BGame%252B.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+China+2011+-+The+Egg+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-fSZtzjxYoBk/U0MfcOvbsrI/AAAAAAAJBP8/prm689xvgE4/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BChina%2B2011%2B-%2BThe%2BEgg%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8642.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-IFmqkzp2Z74/SlgjPMN0INI/AAAAAAAAJlI/cVrfkqJwBj4/s1920-w1920-h1080-c/IMG_8642.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3234.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-81O00JEe7GY/U0_6WV9qs6I/AAAAAAAA2IA/xSYNSA5zuIo/s1920-w1920-h1080-c/388A3234.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A4648-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Xb-0VhFJErE/U0_6WZpo_5I/AAAAAAAA2IA/3wWOfPmtuno/s1920-w1920-h1080-c/388A4648-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_2238-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-0gRcRJvCyq8/UYWMMwK-xyI/AAAAAAAAgOg/YAmwDINMMW4/s1920-w1920-h1080-c/MOL_2238-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Kona-Hawaii-Stormy-Sky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EgToYDexIWA/TugFtw6MbOI/AAAAAAAAJ_E/AFdXppomBHM/s1920-w1920-h1080-c/Kona-Hawaii-Stormy-Sky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BakerBeach-SunsetColor.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-AGyN05vOAVg/Trv455hOvXI/AAAAAAABFag/ruA7zfHRDik/s1920-w1920-h1080-c/BakerBeach-SunsetColor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/red+bridge+in+late+afternoon.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-voPn3r8W5cQ/TgtZEGX9FFI/AAAAAAAJG7g/wotb_OlghAE/s1920-w1920-h1080-c/red%2Bbridge%2Bin%2Blate%2Bafternoon.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnd-sunset-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-i1rPphMhUYQ/T1l7sJNRR5I/AAAAAAABFaA/ISCx26OdOHM/s1920-w1920-h1080-c/LandsEnd-sunset-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20130915-7372-34873c91-2048.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3d-tkshy_0Y/Um32gHQ1usI/AAAAAAAACGA/O4ZCsNcd1-M/s1920-w1920-h1080-c/20130915-7372-34873c91-2048.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Ocean+Sigh.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KKLEMMadjkQ/UO8V4We8BYI/AAAAAAAAwHI/245vkVmGU8w/s1920-w1920-h1080-c/Ocean%2BSigh.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoCove-SmallSunset-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-cFtlqrFqSy0/Tpr3ij-CA7I/AAAAAAABC7g/PhNSHOv9-dw/s1920-w1920-h1080-c/RodeoCove-SmallSunset-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1556-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-01ZxJyYSOq4/UtTs57pjoXI/AAAAAAAAOYg/L4SWL7LqweM/s1920-w1920-h1080-c/DSC_1556-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Road+to+Lindis+Pass.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wBaT-XTU5lw/U0McsiS2QGI/AAAAAAAJG6g/emxVwa5ILwo/s1920-w1920-h1080-c/The%2BRoad%2Bto%2BLindis%2BPass.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Life+in+the+greenhouse-3.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-t4GuDMvJgtk/TPK0WgSeLBI/AAAAAAADI4c/zYc1x7I-S9k/s1920-w1920-h1080-c/Life%2Bin%2Bthe%2Bgreenhouse-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/7995122298_d4743a46ce_k.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-dVPjiuCL-og/UNi-6EF0QjI/AAAAAAAAK5E/33w0ipRlzuc/s1920-w1920-h1080-c/7995122298_d4743a46ce_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/McWay+Milky+Way.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-4J2fjwHlZpk/UtTyvD-FnJI/AAAAAAAAX1k/TuYoeLc-Ku8/s1920-w1920-h1080-c/McWay%2BMilky%2BWay.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-queenstown-nz-nikon-d800.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uxsx0IEs6eA/U0MlLb1IerI/AAAAAAAJP20/dPosYR9XVxw/s1920-w1920-h1080-c/trey-ratcliff-queenstown-nz-nikon-d800.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chef+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YB4kZ5ge9Cc/U0MTgZTfmZI/AAAAAAAJQpw/V9nAX7xkgF0/s1920-w1920-h1080-c/Chef%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ConvictLakeSunrise.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FAIPD0L_XLs/UBctAcHLwcI/AAAAAAAAJAo/fsicVZWEcT8/s1920-w1920-h1080-c/ConvictLakeSunrise.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01009+(1).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-k1Op3rHp90U/ToFAGEMaH4I/AAAAAAAAraU/f_xZikhzlCY/s1920-w1920-h1080-c/DSC01009%2B%25281%2529.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0444_5_6-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-UHWxgek6Ei0/T58Hpp9zkeI/AAAAAAAANzY/M8D4GtsE6cY/s1920-w1920-h1080-c/DSC_0444_5_6-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090424-0690-CrystCvBreakers.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9FMwjMIo6MU/Tg1efx1FWSI/AAAAAAAAANE/NuC3xJSPApo/s1920-w1920-h1080-c/090424-0690-CrystCvBreakers.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Sky+Forever.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-rYUyEz24110/U0MddxVVpKI/AAAAAAAJI0g/Yo2Aeee9akk/s1920-w1920-h1080-c/The%2BSky%2BForever.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140310_Iceland_1392-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bjac3OgFBG8/U_yjp004PtI/AAAAAAAB-4U/jq6sA93FbVI/s1920-w1920-h1080-c/20140310_Iceland_1392-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3410783929_310572ed16_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1oYAqn8Hi9o/TgtZEE_8tKI/AAAAAAAJJKI/8CbtKab2l0U/s1920-w1920-h1080-c/3410783929_310572ed16_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/G+.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-udPQ4zAGUYg/UZURZTfLDhI/AAAAAAAAPSc/ptIJgEKd2LQ/s1920-w1920-h1080-c/G%252B.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0861.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-v6_xr8m1Nh4/UqTF_6FhNQI/AAAAAAAATJY/VWbCHgg5quc/s1920-w1920-h1080-c/C21T0861.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3505475407_d776e4d589_o-1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-TVzStzhfexU/S_5S8_zMy5I/AAAAAAADFE0/fN7-JZzP46I/s1920-w1920-h1080-c/3505475407_d776e4d589_o-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seattle.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-DteiBArt5UI/U0MYH6zthEI/AAAAAAAJFtY/UU1t1FU6uX4/s1920-w1920-h1080-c/Seattle.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100409-3657-PinnacleRock3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-eOzWq5Yn-SY/Tg1f10Dgx4I/AAAAAAAAAOw/PiXj6h2JAio/s1920-w1920-h1080-c/100409-3657-PinnacleRock3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-Ratcliff-Milford-Sound-100.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PwjNo1puYPI/U0MiQaw-PxI/AAAAAAAJF3M/gyTiKomggGc/s1920-w1920-h1080-c/Trey-Ratcliff-Milford-Sound-100.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061125-1635-Maelstrom3.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5E0jD9xU4kU/Tg1brt6WipI/AAAAAAAAc0s/2YRKYYKsEkM/s1920-w1920-h1080-c/061125-1635-Maelstrom3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A1865_HDR.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-zrMZyIFb_wM/U0_6WbX2k0I/AAAAAAAA2IA/EM_Lt3L7XOg/s1920-w1920-h1080-c/388A1865_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2337.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uxwr24FdX3I/TwZMCaKx4XI/AAAAAAAAQnE/DcLxR0jnfqE/s1920-w1920-h1080-c/IMG_2337.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1531.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EIEk1-tv81w/TGD0hHBXZEI/AAAAAAAAav0/MfGEerqGlfk/s1920-w1920-h1080-c/IMG_1531.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FI4C4577.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KN7d8PlNOxU/UA7HP8WNpTI/AAAAAAAASLc/esv8pSYjYmQ/s1920-w1920-h1080-c/FI4C4577.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RaceTrack-tilted.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-TiuUGmgrIJo/T2fhWrPoAtI/AAAAAAAAX-0/KhLFCt5muZ0/s1920-w1920-h1080-c/RaceTrack-tilted.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tempest+(1)-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-aN5bGPX4Rig/UW_esdzHpZI/AAAAAAAAUYo/lhx3gIuY2Tc/s1920-w1920-h1080-c/tempest%2B%25281%2529-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+lonely+grass+house.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-BqdD6DbXnso/TgtZGH_h6AI/AAAAAAAJA0Q/VNpKkFnn1eg/s1920-w1920-h1080-c/the%2Blonely%2Bgrass%2Bhouse.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BeanHollow-sunset-surf.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-bhHK29YjgVc/T3CquVOc6hI/AAAAAAABFZI/Z-FfTyBzwLI/s1920-w1920-h1080-c/BeanHollow-sunset-surf.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140328_Hawaii_2209-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-JOT24t6ZLx4/U_yjrKLK2zI/AAAAAAAB-4o/KC0ZWVXh110/s1920-w1920-h1080-c/20140328_Hawaii_2209-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_402.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-a860A9miaZQ/ThtTuOdNWNI/AAAAAAABSE0/tjO54r6kego/s1920-w1920-h1080-c/RHeaRy_402.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MorningBlue-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-w_It3dmq8_Q/Tr26ZtIDRNI/AAAAAAAAGVg/qOM8lD2pCpU/s1920-w1920-h1080-c/MorningBlue-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071118-3765-LvrsPtMorn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-3l1ZJxwb6rI/Tg1czp-9MFI/AAAAAAAAAK0/rdFg0gGfCqg/s1920-w1920-h1080-c/071118-3765-LvrsPtMorn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/forest+fog+v2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-f3E6blFBDVk/Tg0tjUx3BJI/AAAAAAAAgMY/f8tnlRGQisU/s1920-w1920-h1080-c/forest%2Bfog%2Bv2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/oil3.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-cQXP45_tLq0/T0m27oIexHI/AAAAAAAAGb8/keNzP_2lN60/s1920-w1920-h1080-c/oil3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FoggySunrise-HawkHill-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-nwpgAk2m0O8/ToM1yp5NLQI/AAAAAAABC64/ExPWPjc-oLE/s1920-w1920-h1080-c/FoggySunrise-HawkHill-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-SlackersRidge-Sunrise-fog-headlights-wide.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-s-CrcrZfoEY/TzlsdNVcPpI/AAAAAAAAS2I/vgewR4SWII0/s1920-w1920-h1080-c/GGB-SlackersRidge-Sunrise-fog-headlights-wide.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4+horses.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PFORpB2nRWU/TgtZEBZXStI/AAAAAAAJG78/sg8P1h1FTu4/s1920-w1920-h1080-c/4%2Bhorses.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1-02-12-part2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-LuTnYJ-_AcA/UbdXj-v1fMI/AAAAAAAAFhg/emAw_2y06Ak/s1920-w1920-h1080-c/1-02-12-part2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1071616194_the+farm+of+eden.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-mWoPAMsZ8qM/TgtZECWsZDI/AAAAAAAJGYQ/mGJ5umfc76I/s1920-w1920-h1080-c/1071616194_the%2Bfarm%2Bof%2Beden.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_2155.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ll7ATwQQOnE/UkPP_YH9WKI/AAAAAAAALoA/_9E2BHedhG4/s1920-w1920-h1080-c/MWF_2155.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_465.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-hDuDewqWJhc/ThYuDF3m4II/AAAAAAABSc8/OMs4oB1Xj6U/s1920-w1920-h1080-c/RHeaRy_465.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/101027-4887-TestOfTime.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lOZvJ3yPdfc/Tg1gbgvj2bI/AAAAAAAAAPc/bgWip6MWRVI/s1920-w1920-h1080-c/101027-4887-TestOfTime.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1272-Edit-Edit-2-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Ov6cnpCqcKo/Ue52zucefaI/AAAAAAAAZuc/Ya8H97MGDxo/s1920-w1920-h1080-c/DSC_1272-Edit-Edit-2-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MarshallBeachSunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-BjCgH3F-OtM/ToojnEsMoHI/AAAAAAAAFNw/RMun2UfSHvI/s1920-w1920-h1080-c/MarshallBeachSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/by+Chris+Chabot.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5L66J8m3eOc/US-gTtMRQbI/AAAAAAAAX5c/kyQnx5QiiKw/s1920-w1920-h1080-c/by%2BChris%2BChabot.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chasing+the+Sunset.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-oeJbNPb-T-M/UZURZeo6N9I/AAAAAAAAPQU/py94YP9ogqg/s1920-w1920-h1080-c/Chasing%2Bthe%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1428.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KK0a8yX7hUc/TnemEmslOEI/AAAAAAAAG4I/qj90bfgIkqs/s1920-w1920-h1080-c/IMG_1428.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6160-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Fz5s5Sq3uSc/UqXO06_DNPI/AAAAAAAAhPw/UNBDEnOdEhs/s1920-w1920-h1080-c/DSC_6160-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20130805_mit_and_river_00001-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GGY-AaDQgJc/UgG4BcMHLWI/AAAAAAAAVgA/pUfLz3uxV-w/s1920-w1920-h1080-c/20130805_mit_and_river_00001-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tree+in+the+park.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-OIKJTN2YWhU/TgtZGPb42zI/AAAAAAAJA5c/IY3N83zJARw/s1920-w1920-h1080-c/tree%2Bin%2Bthe%2Bpark.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MG_1449.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-qLopnv-fFT0/TxYB5_vxoEI/AAAAAAABFlo/0zpzDJeTYYk/s1920-w1920-h1080-c/_MG_1449.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3K9C4807.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-4x17JQmbu1s/Ur0CrKBRTzI/AAAAAAAAGH4/t-G8zEmm1jU/s1920-w1920-h1080-c/3K9C4807.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP4090-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hhp_SMvb6a0/UOSjNI1cZnI/AAAAAAAAGjU/0XLFokAU-bw/s1920-w1920-h1080-c/IMGP4090-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8703.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ZVK5-96bzpA/UtTypXkQUHI/AAAAAAAARwI/_iTqNhaMZ6c/s1920-w1920-h1080-c/DSC_8703.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-milford11.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ISfFDxxtu-s/U0MkxpnU1rI/AAAAAAAJBQQ/gmuXSo3KcFQ/s1920-w1920-h1080-c/trey-ratcliff-milford11.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/by+Joel++Tjintjelaar.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sVAg7ixe6zM/US-gUOy49yI/AAAAAAAAXrM/6iXuvw5XdBw/s1920-w1920-h1080-c/by%2BJoel%2B%2BTjintjelaar.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3857-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-V4KqnGwqPtA/Ur0CJf-GmTI/AAAAAAAAGBA/LO0uFjb-Erc/s1920-w1920-h1080-c/IMG_3857-Edit-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1311.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-9n3C3hJmGGc/UQmHUE2y6RI/AAAAAAAAlfs/6JKtNnI29Uk/s1920-w1920-h1080-c/IMG_1311.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6743-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NZsqwlPxJ08/Ulff-DU9xQI/AAAAAAAAdbg/pJkMnw8uLCk/s1920-w1920-h1080-c/DSC_6743-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB_DarkMorningWindyFog.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-qiK0GrZEcpQ/TtZtCl10xrI/AAAAAAAAHow/WGJu8GP6dmA/s1920-w1920-h1080-c/GGB_DarkMorningWindyFog.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-ratcliff-toronto-Recovered.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-HiLp9PsqEEg/U0MiTxSu0yI/AAAAAAAJP3w/ZWMfpXVaQVI/s1920-w1920-h1080-c/Trey-ratcliff-toronto-Recovered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070319-2657-PathToLight.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-VGh9JQ9DCzM/Tg1cKU7qBRI/AAAAAAAAAJ4/Dyi6MrlgffU/s1920-w1920-h1080-c/070319-2657-PathToLight.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_6244-7.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-UBxJsB_kCVU/UettpK1i2BI/AAAAAAAAK3s/siEVsMTSHIg/s1920-w1920-h1080-c/MWF_6244-7.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3363.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Fje9gDslRI0/U0_6WU_6rMI/AAAAAAAA2IA/m4PXkm_hAvI/s1920-w1920-h1080-c/388A3363.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8520.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-sTiWMAC13YQ/UTmo6ED7v9I/AAAAAAAAWsQ/PfI4WYswhJw/s1920-w1920-h1080-c/DSC_8520.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/700_1870.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YOIwgQ1uXcM/SRGZJ-A3yvI/AAAAAAAADMI/6qvORkHqWS4/s1920-w1920-h1080-c/700_1870.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Dream+Catcher+-+Palouse,WA.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-skB9ljKV58M/UXp3kiaG3DI/AAAAAAAAgRM/hZ3rTbu1XwU/s1920-w1920-h1080-c/The%2BDream%2BCatcher%2B-%2BPalouse%252CWA.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Farewell+India.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-H8NDmFzpF_A/TgtZEOagTaI/AAAAAAAIPp0/eTfdvWDBvt4/s1920-w1920-h1080-c/Farewell%2BIndia.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SonomaCoast-Arch-surf-longexp.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-x0qCPDjYL9w/T2Z8tuYaHII/AAAAAAABFXc/empnlAhR_eY/s1920-w1920-h1080-c/SonomaCoast-Arch-surf-longexp.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2398605326_bf7dde0cf7_o.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-bXrGY2Cafa0/TgtZGEzbZDI/AAAAAAAJA5g/JWbeuWkbTLc/s1920-w1920-h1080-c/2398605326_bf7dde0cf7_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+View+from+the+Ranch+in+Argentina.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-txUs9Q95dM8/U0MR9lvvDNI/AAAAAAAJIA8/vY9TD4TiPzw/s1920-w1920-h1080-c/A%2BView%2Bfrom%2Bthe%2BRanch%2Bin%2BArgentina.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/inverness-to-istanbul-00077.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5uz5EzVcvNU/UEpN7gJg2nI/AAAAAAAAI7s/-Xwxg57SCn0/s1920-w1920-h1080-c/inverness-to-istanbul-00077.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SanGregorioCliffReflection.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-465XgZS4LQo/UOuDAiDRcrI/AAAAAAAAKng/4m7maZotsgg/s1920-w1920-h1080-c/SanGregorioCliffReflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/santa-cruz-trey-ratcliff.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-U0yjKIXF2fs/U0MjfTbjf1I/AAAAAAAJEbY/MkqCoe1DfG4/s1920-w1920-h1080-c/santa-cruz-trey-ratcliff.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061122-1421-LtAtEndOfPier.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-7Zi62qJ-NNg/Tg1bfusNzfI/AAAAAAAAAJA/P4bDaf-68Ys/s1920-w1920-h1080-c/061122-1421-LtAtEndOfPier.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_SUE4322.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vA0vdrM3_ro/UnDyzCqXFaI/AAAAAAAAGxw/GAtvLCwZbAM/s1920-w1920-h1080-c/_SUE4322.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Bamboo+Forest.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bkNEhcz00Z8/U0MZQ3MdO3I/AAAAAAAJGy4/S-coTfmsQfE/s1920-w1920-h1080-c/The%2BBamboo%2BForest.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC02146+Red+Plant.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-tyOlTzJRvmw/UpBQXuuK_JI/AAAAAAAAD_0/PL7enPiYUT8/s1920-w1920-h1080-c/DSC02146%2BRed%2BPlant.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/01_MG_3677.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YHEf8jl_LDg/Tgxgtdub2iI/AAAAAAAAAMQ/zmkWf0WkFTI/s1920-w1920-h1080-c/01_MG_3677.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RedTide.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-feW_gVKW6j8/UI5fg6xQBXI/AAAAAAAAWQY/DIOuGTieAMM/s1920-w1920-h1080-c/RedTide.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/091220-2536-TheCurl.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-lR3vG062kEk/Tg1fjlh053I/AAAAAAAAAOc/Sv1zKPXPkPQ/s1920-w1920-h1080-c/091220-2536-TheCurl.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-close-to-tepako-new-zealand.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Q1AA5A9uiYU/U0MkdTp90YI/AAAAAAAJJIw/SuamKxYgwts/s1920-w1920-h1080-c/trey-ratcliff-close-to-tepako-new-zealand.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6837_CropBrightContrast.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Hqmu2H_l2XY/SwIysuFOIiI/AAAAAAABLWk/W9rX5qlmk4c/s1920-w1920-h1080-c/DSC_6837_CropBrightContrast.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061121-1389-UndPierHanalei.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-VZ8vGJ6Qfvc/Tg1bgCMJ1HI/AAAAAAAAAJE/QMa5LYy7phM/s1920-w1920-h1080-c/061121-1389-UndPierHanalei.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100924-IMG_5794-HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-eCSjsP08EcA/T_0K5wVePeI/AAAAAAAARxk/I-Qx3ciOzUE/s1920-w1920-h1080-c/20100924-IMG_5794-HDR-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Farewell+San+Francisco.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-N7h4Iit041g/U0MUZ6H8WdI/AAAAAAAJKok/V-IfPQ_XXK4/s1920-w1920-h1080-c/Farewell%2BSan%2BFrancisco.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/stream.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-GCr_cZIif7g/Tnarp7XhOMI/AAAAAAAABPU/WNrHyAJOLNA/s1920-w1920-h1080-c/stream.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071110-3579-HvnsGate.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-0DC0pkVJw5g/Tg1cjeX4YpI/AAAAAAAAAKc/bNEDQtv0J4A/s1920-w1920-h1080-c/071110-3579-HvnsGate.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100726-4239-LightAtAhalanui.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-m-0LmCqZxSo/Tg1gLoaJJKI/AAAAAAAAAPI/KNkzyqLgUa0/s1920-w1920-h1080-c/100726-4239-LightAtAhalanui.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_380.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-4026KDnYCqc/ThYb2MMKRLI/AAAAAAABSEs/3N3nOtyl_lI/s1920-w1920-h1080-c/RHeaRy_380.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CrissyField-SaltMarsh-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-OwU2batkg6A/TrbvnMATI7I/AAAAAAAAF3w/q_7_jgF0ngE/s1920-w1920-h1080-c/CrissyField-SaltMarsh-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tekapo-new-zealand-trey-ratcliff-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mGgW1ovI2PE/U0Mjzq2YJuI/AAAAAAAJA0o/aLuxOVgUjlY/s1920-w1920-h1080-c/tekapo-new-zealand-trey-ratcliff-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/p1000284.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-patMHu2oyfs/RJBWFz5TABI/AAAAAAACnSo/ZP9KYfCSFM8/s1920-w1920-h1080-c/p1000284.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2617.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-_p1iKjPzjGc/TIW63f_px1I/AAAAAAAAOck/NCDLhcVRam8/s1920-w1920-h1080-c/IMG_2617.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8280686512_7820f388dc_k.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-NeMzsWIU6RU/UZURZR7U_aI/AAAAAAAAgSY/-AtSrt0ig5Q/s1920-w1920-h1080-c/8280686512_7820f388dc_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC02700.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9Nj6ilPU0NI/Ts9Gk0pfW_I/AAAAAAAAD4I/GWbtz0c91tE/s1920-w1920-h1080-c/DSC02700.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A6457.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-jTQjx2iGz84/U0_6WWCDwxI/AAAAAAAA2IA/FmHhYqwC0Y8/s1920-w1920-h1080-c/388A6457.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TufaSunset-1-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uk4W-F3OXbM/Tqwm9e_vuJI/AAAAAAABFcE/zPYFePKqTxs/s1920-w1920-h1080-c/TufaSunset-1-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/P1142336.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7ZuJOGpJ5-0/UHRHfwcGEUI/AAAAAAAAKsU/s31OrXjVZ9A/s1920-w1920-h1080-c/P1142336.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Glacier+Point+Milky+Way+Panorama.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YxXTf0j_MTQ/UtTwF4t9yEI/AAAAAAAAW8g/dYsGmWzs81Y/s1920-w1920-h1080-c/Glacier%2BPoint%2BMilky%2BWay%2BPanorama.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_6908_09_10_11_32bit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-gBb9HtLb3zw/U_yjyTFvcAI/AAAAAAAB-64/G_Jt5mnm-mU/s1920-w1920-h1080-c/_DX_6908_09_10_11_32bit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/inverness-to-istanbul-00177.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-yCO0vebn5x0/UFBrOZtDNZI/AAAAAAAAJO8/jX4MgPfHQbE/s1920-w1920-h1080-c/inverness-to-istanbul-00177.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0554.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-59MYsAxhB_I/UtTzqg1a7VI/AAAAAAAAWds/BLWELYZHUWE/s1920-w1920-h1080-c/DSC_0554.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Blue.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-p4V1WVO8Dhw/UBSl6P5W35I/AAAAAAAAPdg/UFIS4M1KDBE/s1920-w1920-h1080-c/Blue.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BayBridge-night-mono.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5IpprOs0T78/T3PwhE-VJ9I/AAAAAAAAYzA/-2X-oY9C3N0/s1920-w1920-h1080-c/BayBridge-night-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_9645-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-utp4ouvAO10/Ud6okYh24yI/AAAAAAAAYrg/fRr-tnaqxBI/s1920-w1920-h1080-c/DSC_9645-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_X7A8818-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-bCmJvz5jD9s/U_yj0wk6KLI/AAAAAAAB-7s/t7dIu3T7nvw/s1920-w1920-h1080-c/_X7A8818-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FI4C6008.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Pg1HXtyXBZ0/UGHWhKaSrhI/AAAAAAAASZE/q3omNbvxCJU/s1920-w1920-h1080-c/FI4C6008.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/10-13-12highres.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-boXHwu7eW_g/UjjGBMhSzwI/AAAAAAAANJE/9w555NqrJws/s1920-w1920-h1080-c/10-13-12highres.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/P1080441.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gKcKe_o5slw/RapYX1Oyx0I/AAAAAAAAa9Q/P9rYqEPs7dc/s1920-w1920-h1080-c/P1080441.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seal_Rocks-centered.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PtAU0On5OII/Tr8FOZ3yVuI/AAAAAAAAGY4/IYyAYzHZzo0/s1920-w1920-h1080-c/Seal_Rocks-centered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3144-3.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-129Q91osfKU/UKsTjV0_Q0I/AAAAAAACKD0/ejMXCx6_w14/s1920-w1920-h1080-c/IMG_3144-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_X7A5208-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-7wj7ipdaCbI/U_yj0qysNgI/AAAAAAAB-7k/dl8d2M4N5vE/s1920-w1920-h1080-c/_X7A5208-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Red+by+Alistair+Nicol.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vK7sTdwps8g/UKPHFTynz-I/AAAAAAAARas/_RETAXGVU9g/s1920-w1920-h1080-c/Red%2Bby%2BAlistair%2BNicol.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Silver+Lake+StarTrails.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-rQ9SZ0dfJ_I/UtTzyqBufcI/AAAAAAAAOj4/zAOnrvu9aG8/s1920-w1920-h1080-c/Silver%2BLake%2BStarTrails.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP7962.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-fOXNAoVsl2E/UONnO-Zp2zI/AAAAAAAAyPo/kjEzrMZXylk/s1920-w1920-h1080-c/IMGP7962.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-19.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-q2yAJwhwIic/Th0QR-JaxiI/AAAAAAAABCo/YIGFyyYRXBI/s1920-w1920-h1080-c/untitled-19.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080229-4653-GraytonStream.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-cjUv9eE6oRE/Tg1dXWtEjRI/AAAAAAAAc1E/ScCXWwu6HbM/s1920-w1920-h1080-c/080229-4653-GraytonStream.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6902-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-x838dk0Z5UE/UaXxyeQ21gI/AAAAAAAAm-o/7OSZeQrHSO0/s1920-w1920-h1080-c/DSC_6902-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lupines.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-oWXc6hihoxM/UAQ2flp_ioI/AAAAAAAAgLE/wL2UgiGSdRk/s1920-w1920-h1080-c/Lupines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BayBridgeSunrise-LE.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-k1-SvxtkRaI/TzW2PE5LU_I/AAAAAAAA14A/JuGDMoDvbCQ/s1920-w1920-h1080-c/BayBridgeSunrise-LE.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-fJVeA8ZcZSU/UAbPQdXxfbI/AAAAAAAAgLI/tIVVrrPINVs/s1920-w1920-h1080-c/Iceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+trane+and+the+pharoah.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-B4s7SDef3U8/TwttGH3PVKI/AAAAAAAAR8k/Gp5uWnBs4JE/s1920-w1920-h1080-c/the%2Btrane%2Band%2Bthe%2Bpharoah.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6930-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-F44_mY6bA2c/UaiW3nWnsrI/AAAAAAAAWKk/pVPuQcy_ygQ/s1920-w1920-h1080-c/DSC_6930-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Funston-Sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-hs9pldJQseQ/Tw9Z3Mea0PI/AAAAAAABFTs/u8KBBQQ9At4/s1920-w1920-h1080-c/Funston-Sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0913.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ouB3hbNdnVY/Tzlw8hO_W7I/AAAAAAAAAVQ/GNAVkaDa0lw/s1920-w1920-h1080-c/IMGP0913.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP5017.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-YiCUO9G6Vfg/ULgv8pQPeGI/AAAAAAAAD-k/NGhYvPuu5bc/s1920-w1920-h1080-c/IMGP5017.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061228-2049-UTPScripps1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-JkxqJu_ZG6I/Tg1b6ZErN-I/AAAAAAAAAJk/sD_vHpTz-hU/s1920-w1920-h1080-c/061228-2049-UTPScripps1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071010-3287-SausMorn1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-o11hGOKretw/Tg1cW-5ZUOI/AAAAAAAAAKQ/bz8-ylAE0_A/s1920-w1920-h1080-c/071010-3287-SausMorn1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+New+York+-+Inception.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-uw6YFcXJKbo/U0MgUuctfgI/AAAAAAAJEXg/rLxRH7N4ths/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BNew%2BYork%2B-%2BInception.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnd-Sunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lEy_31bnK1A/TyYVYFaoUxI/AAAAAAAAPxc/_4v9O3EKy6c/s1920-w1920-h1080-c/LandsEnd-Sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Spires-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-MjADvnIjxV0/U0MdmA5ytOI/AAAAAAAJKn4/0ZUjaXODMKA/s1920-w1920-h1080-c/The%2BSpires-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/32+Hours++Counting.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-xbmT1vIDvZc/UZURZTZzmhI/AAAAAAAAgSo/f1msNjQ2YSw/s1920-w1920-h1080-c/32%2BHours%2B%2526%2BCounting.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2018-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-IPbUv2dc9E4/Ugotamqb0xI/AAAAAAAAbME/zTVKgdkCdRY/s1920-w1920-h1080-c/DSC_2018-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MSU_9976.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-tFk1NsophJc/UqWc4p6NF9I/AAAAAAAAHws/4zvvKSi-qRk/s1920-w1920-h1080-c/MSU_9976.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Reef-mono.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5-bmm_yEw8Q/ToaN8JLAR1I/AAAAAAABC7I/eMpXTtyj67Y/s1920-w1920-h1080-c/Reef-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Dreams.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wWAxuHAMqWo/UZURZU59sUI/AAAAAAAAPOY/bxIdsdlg4DE/s1920-w1920-h1080-c/Dreams.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2705.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-D-a8TeEMxVU/T0u5OcN_KcI/AAAAAAAAQ3A/buaoFgy2i-Y/s1920-w1920-h1080-c/IMG_2705.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-WaterfallRock.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-F3PyWBuTa9A/Txo6n6KVzRI/AAAAAAABFQ4/bhv0lJobcUE/s1920-w1920-h1080-c/SutroSunset-WaterfallRock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060820-0818-ThePhotogs.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-m6gJXedR5K0/Tg1bJIJrdDI/AAAAAAAAAIk/luzGf-NHcC0/s1920-w1920-h1080-c/060820-0818-ThePhotogs.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Portofino2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-F33Ezsq01cw/TgkRlUvin5I/AAAAAAAI6wA/g434OYIBJiA/s1920-w1920-h1080-c/Portofino2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/110521-8046-PacificaLt2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QOLm5NyrBAg/Tg1hGjt7CQI/AAAAAAAAc2A/oW-ErAUPpKY/s1920-w1920-h1080-c/110521-8046-PacificaLt2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_3511_2_3_4_5_32bit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-QVbxD_ZZCa0/U_yjxBJn4WI/AAAAAAAB-6k/fAnDqFKCfh4/s1920-w1920-h1080-c/_DX_3511_2_3_4_5_32bit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0880.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uNim7D5ywdM/UqTGRcbr78I/AAAAAAAAXKY/2Fv7yLI2kZc/s1920-w1920-h1080-c/C21T0880.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Pescadero.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FNrstx8M7hY/TyH51o60WuI/AAAAAAAAGTY/3nRvYRuPjEU/s1920-w1920-h1080-c/Pescadero.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Temple+Over+Kyoto.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-I7qT8fiUqZU/TgkSotvmFkI/AAAAAAAI6h0/ASyt4FPWAso/s1920-w1920-h1080-c/Temple%2BOver%2BKyoto.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4154b.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7FTPwrBoDBs/Ufb1a1gM-UI/AAAAAAAADK0/NrOPNAfCG7I/s1920-w1920-h1080-c/DSC_4154b.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0663-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-JLMulqzQsQQ/UqBrOg83JWI/AAAAAAAAgsY/vzUeMdvC-h0/s1920-w1920-h1080-c/DSC_0663-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB_130628_MCu_1-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-IevMmNQigxY/Uc3F-z0I5qI/AAAAAAAAItw/eRKlk6yr6TY/s1920-w1920-h1080-c/GGB_130628_MCu_1-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090810-1930-NeedleAndHaystack.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-SUKN-r5lw5A/Tg1fNM6yIEI/AAAAAAAAAN8/PULlaJpHBkI/s1920-w1920-h1080-c/090810-1930-NeedleAndHaystack.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2012.+purple+is+my+favorite+color.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-vtVHPLJKT3w/T9KLSzUhuOI/AAAAAAAABiY/3a5M4phhFs0/s1920-w1920-h1080-c/2012.%2Bpurple%2Bis%2Bmy%2Bfavorite%2Bcolor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SealRocks-sunset-reflection.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-55UeILqE2s0/T0PDELei3HI/AAAAAAABFbU/4_nqVtef2m8/s1920-w1920-h1080-c/SealRocks-sunset-reflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/New+York+-+NEX7+-+Trey+Ratcliff+(8+of+21).png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-XxP1oir93Fg/U0MW6gL3miI/AAAAAAAJA0U/hP0D1e9JC-w/s1920-w1920-h1080-c/New%2BYork%2B-%2BNEX7%2B-%2BTrey%2BRatcliff%2B%25288%2Bof%2B21%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Patience.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Gp7BKH79U6k/T_rPHeEUv4I/AAAAAAAAPL8/LSoFOwB9QNU/s1920-w1920-h1080-c/Patience.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8828.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-RZKOyMbLobw/UONnVGAE9tI/AAAAAAAAyPM/60as7LUVuHI/s1920-w1920-h1080-c/IMGP8828.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-01-13-spider-crawler-lightning-road-albany-tx.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oYOr7AcS0F4/UZUYFMNixiI/AAAAAAAAGL0/6fp4ZSWjH90/s1920-w1920-h1080-c/5-01-13-spider-crawler-lightning-road-albany-tx.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Blue+City.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-4wJlrgKnUsI/U0MZbQCL-5I/AAAAAAAJOwE/yL0yy2OMWtI/s1920-w1920-h1080-c/The%2BBlue%2BCity.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/06152012-12.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-_OVIBu35BFs/UOD9ybxkzmI/AAAAAAAAkNo/YyQXlMNgeEk/s1920-w1920-h1080-c/06152012-12.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/D30_0895.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-onm54VnIRFQ/SBnwVTP3Y4I/AAAAAAAAvJc/jJxlxmTu5t8/s1920-w1920-h1080-c/D30_0895.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Metal-1.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-TKsDKeRS95U/Tkrw6TiAyPI/AAAAAAAC4HY/bygELaJa5-s/s1920-w1920-h1080-c/Metal-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0300.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-b_ZyO6A8eec/UNcwXdvdtMI/AAAAAAAAR4k/YcThGSa1EHE/s1920-w1920-h1080-c/DSC_0300.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6868.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Mc32ZHV--b0/SwIy9sStc0I/AAAAAAABLXg/AB-YvtyK-wk/s1920-w1920-h1080-c/DSC_6868.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/class3_05.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-EUrlRFim4uQ/Uo5D2fBJduI/AAAAAAAABZU/73PLVw3Xxk0/s1920-w1920-h1080-c/class3_05.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MarshalBeach-sunset-rocks-.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-_SFDsIPPKzI/TxhNwgko__I/AAAAAAABFhY/uz_fTrjtNFg/s1920-w1920-h1080-c/MarshalBeach-sunset-rocks-.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_O9V5569_HDR.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-WrzPVL3SMFs/Uq-D3XLVHUI/AAAAAAAAPBY/JQpQw38ggyM/s1920-w1920-h1080-c/_O9V5569_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-road-to-mountain-forever.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-n8kCRwIAl3I/U0MlTxDHALI/AAAAAAAJEL0/VwbBzYmP0nQ/s1920-w1920-h1080-c/trey-ratcliff-road-to-mountain-forever.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoBeach-sunset-16x9.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-grccgI_cL8k/TwH0-_dHIvI/AAAAAAABFbM/sqNxtA-Gi30/s1920-w1920-h1080-c/RodeoBeach-sunset-16x9.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sky+Painting.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-XZGw1LIoIQk/Ua2ANshiwmI/AAAAAAAAfX8/PIcgUJRHb3M/s1280-w1280-c-h720-k-no/Sky%2BPainting\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0816-Edit-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-dKrL8_a8MmE/UrWktdbZX_I/AAAAAAAAilY/2Ce0qzN9r3s/s1920-w1920-h1080-c/DSC_0816-Edit-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1204.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NvzWYFZm9b0/UQmFrRIGaDI/AAAAAAAAlew/em5aqVHnV3M/s1920-w1920-h1080-c/IMG_1204.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MSU8463.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9SBIVQE_N98/UnDyKXBM-VI/AAAAAAAAGw8/JRqWBIObFek/s1920-w1920-h1080-c/_MSU8463.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4067.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oVqvzpNBaE8/UlmYCAD6pNI/AAAAAAAAQPQ/xDn8iGotkyo/s1920-w1920-h1080-c/DSC_4067.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_D3_0763-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-SzwsBTne5SM/U_yjvpyvA6I/AAAAAAAB-6A/q0imuvbf0Yw/s1920-w1920-h1080-c/_D3_0763-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4772+p4.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uXesNMoRpN8/U08k4CCBTsI/AAAAAAAAvr0/7ZtIaGpNfHU/s1920-w1920-h1080-c/IMG_4772%2Bp4.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-rocks-misty.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-sSh1MI_KB_c/TwXF_f9Tr4I/AAAAAAAAL-g/ivbuKnmkfLI/s1920-w1920-h1080-c/SutroSunset-rocks-misty.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+docs.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-djAiXa_L7EU/TgtZGJZPcFI/AAAAAAAJBA0/Ih2FgNUBZYE/s1920-w1920-h1080-c/the%2Bdocs.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/AtAnchor.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-25-BIcSpaLU/UX-tEB0seYI/AAAAAAAAU2Y/SX0W4AL4YQM/s1920-w1920-h1080-c/AtAnchor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Razor+to+the+Sky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-WUT3n130gGw/U0MR8lh-SbI/AAAAAAAIpgw/VO52olLVJN8/s1920-w1920-h1080-c/A%2BRazor%2Bto%2Bthe%2BSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4070581709_a1c668a779_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--ETG9eU1_Xw/Tgt5l8cyMwI/AAAAAAAIWTg/nWSbj2O5c6w/s1920-w1920-h1080-c/4070581709_a1c668a779_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6165.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-PAZT1pXjMM8/UrM5S_Ht1cI/AAAAAAAACVE/adGv8TflzYc/s1920-w1920-h1080-c/IMG_6165.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CliffHouseSunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-aIBq7YhM6-M/TxMQytFssDI/AAAAAAAANXs/9RurRnKmOOw/s1920-w1920-h1080-c/CliffHouseSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01034.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/--Km5pB3lBaM/Ua3DdDBGtcI/AAAAAAAAPV4/p_BFy_Ps50w/s2560/DSC01034\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Big-Sur-Coastal-Seascape-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-LVkYomDgo1g/TwoREmpuoLI/AAAAAAAAMiE/duaVKfg5Blg/s1920-w1920-h1080-c/Big-Sur-Coastal-Seascape-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100804-4696-PololuMorn1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-hXPVBw1iPyc/Tg1gUs9WABI/AAAAAAAAAPU/J-g25o_00Gk/s1920-w1920-h1080-c/100804-4696-PololuMorn1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1600.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GwSLzDzfyGA/UWoqCg-pk2I/AAAAAAAAMh0/JeyhZ3UqFys/s1920-w1920-h1080-c/MOL_1600.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0652_3_4_tonemapped.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Sm0TD1_vzFo/ULrHwJOPf3I/AAAAAAAAEMY/NGUYdwUEtGY/s1920-w1920-h1080-c/IMGP0652_3_4_tonemapped.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CGPier-storm-mono.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gE1QbuQR45Q/TqiD0bdOG7I/AAAAAAAAE8w/fawdaKhXGu4/s1920-w1920-h1080-c/CGPier-storm-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Night+Falls+on+Crater+Lake+-+Crater+Lake,+OR1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-8h4vm06cRYo/UZURZQG4KwI/AAAAAAAAPOE/GltqdZojKKE/s1920-w1920-h1080-c/Night%2BFalls%2Bon%2BCrater%2BLake%2B-%2BCrater%2BLake%252C%2BOR1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0213.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uaGTbkMBysI/R7qYVHTGv6I/AAAAAAAABiQ/IU0yK7OgvYc/s1920-w1920-h1080-c/IMG_0213.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP1985_stitch.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-14sNcCfmulY/UOj-YBSQ8oI/AAAAAAAALsk/v-C7ZmZ-UIk/s1920-w1920-h1080-c/IMGP1985_stitch.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Reflection.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-qd290nJU0FM/UZYXTBbrzeI/AAAAAAAAVhI/gNH2tEzLT80/s1920-w1920-h1080-c/Reflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ibiza+dock.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QyxGZeaBON4/TgtZEYemvZI/AAAAAAAAgVE/_VepyvNFiTE/s1920-w1920-h1080-c/ibiza%2Bdock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trippin'-3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-b4ZiJXUmZLg/TUCPhc_z2pI/AAAAAAAAAgM/uY37UMRjGsw/s1920-w1920-h1080-c/Trippin%2527-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1612.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-2A31P4WBC8s/UtT1BndamcI/AAAAAAAAO1E/Qj5CF7S1UeU/s1920-w1920-h1080-c/DSC_1612.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/YosemiteFalls.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1dANL8dJDT0/T6h0JShpn-I/AAAAAAAAIDk/l_dKhWvFXUs/s1920-w1920-h1080-c/YosemiteFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/07_20090416.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-8kQQYYzz_l8/UZSathUsJGI/AAAAAAAAsUM/3Z4WK9CG8wE/s1920-w1920-h1080-c/07_20090416.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_7222-Edit-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-yYJUfqBHHXw/UoffDIFgJOI/AAAAAAAARpQ/M7Nskp7pTDg/s1920-w1920-h1080-c/DSC_7222-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_9581.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-gcU_icksx-A/TnuyXEh2MeI/AAAAAAAAFhE/sjZHDkU_Vlg/s1920-w1920-h1080-c/IMG_9581.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100525-IMG_6788-HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--y_TRuOOPTA/T_0KxukaPeI/AAAAAAAARw0/VTeenM1J2xI/s1920-w1920-h1080-c/20100525-IMG_6788-HDR-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MagicBallContest.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-6nBwDVfR-BE/UXrL2u6iqII/AAAAAAAAUro/CL47d2nXDzE/s1920-w1920-h1080-c/MagicBallContest.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3857-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-eDbulGr2hu8/Ur0CIxLk-FI/AAAAAAAAGA4/R7oAYMeXRws/s1920-w1920-h1080-c/IMG_3857-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP9268.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-K258GmbSDxM/T_TBV0i4kLI/AAAAAAAABro/rW_nlHdct7U/s1920-w1920-h1080-c/IMGP9268.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Hooded+Lady+of+the+Valley.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-31H2j9KKMi0/UTpeMK5JrEI/AAAAAAAAPHo/4QOl-12J750/s1920-w1920-h1080-c/Hooded%2BLady%2Bof%2Bthe%2BValley.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MG_4776.CR2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-MxVUPW7j-L0/UCFpW985f5I/AAAAAAAAJI8/HQfELZDoN7I/s1920-w1920-h1080-c/_MG_4776.CR2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-3-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1cz2zcbiz-4/Th0QVgyAMBI/AAAAAAAABC4/gVc-Bp_mFGs/s1920-w1920-h1080-c/untitled-3-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/sky_leaves.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1o-jUyycpcE/UIdjwEWDS3I/AAAAAAAAED4/7Mj-xSqdO5E/s1920-w1920-h1080-c/sky_leaves.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TunnelViewWinter.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GGVPhdUiKwY/UOOZDe9JFQI/AAAAAAAAKiY/Noq6gsZlXxk/s1920-w1920-h1080-c/TunnelViewWinter.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3674678524_f49854f3b1_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ZGfUihferj8/TgtZGKAJjOI/AAAAAAAAdd8/e-EXjm51hhA/s1920-w1920-h1080-c/3674678524_f49854f3b1_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/I+Cover+the+Waterfront+-+Alki+Beach,+WA.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Zj8Aex6oXYo/UW6x5FfAtjI/AAAAAAAANiY/lukbqNiI2go/s1920-w1920-h1080-c/I%2BCover%2Bthe%2BWaterfront%2B-%2BAlki%2BBeach%252C%2BWA.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/morning+with+coffee+in+yellowstone.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-HdhuOcwGEcs/TgtZEZtITGI/AAAAAAAAVmw/nPx5UAR0qic/s1920-w1920-h1080-c/morning%2Bwith%2Bcoffee%2Bin%2Byellowstone.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Bristlecone_Stars.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-xu-TTAEZtQo/UbtDr65unqI/AAAAAAAABKo/-2asqRlMolw/s1920-w1920-h1080-c/Bristlecone_Stars.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/StillStanding.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Bz1rXnbAy1s/UQNThZKgMRI/AAAAAAAAScM/eUItE7glPn0/s1920-w1920-h1080-c/StillStanding.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Salt_Point.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FDe6_2rxtEs/UkBgjq9ZJmI/AAAAAAAAELo/zT29ZhT2NAA/s1920-w1920-h1080-c/Salt_Point.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untouched.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KPCupfttZeg/UYEMyuiN84I/AAAAAAAAU5k/74L4iR6gMDk/s1920-w1920-h1080-c/untouched.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TacomaChiluly--10.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--LqjPK05as8/TsSfH1cu69I/AAAAAAAATUE/JyMyDxcW1Ms/s1920-w1920-h1080-c/TacomaChiluly--10.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_5165-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5ntl45J8Lxg/UiHZG2mJ1nI/AAAAAAAAb8s/f10TxWDh2zA/s1920-w1920-h1080-c/DSC_5165-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Group+TWO.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-HbF8zRNZt-o/UMPHYkBuCMI/AAAAAAAAKUQ/GYFSC7-LVqs/s1920-w1920-h1080-c/Group%2BTWO.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CrackedIsSometimesGood.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5lm5qxI06OU/TqkYjHdt_lI/AAAAAAAAKOc/Eqb40U2Jsiw/s1920-w1920-h1080-c/CrackedIsSometimesGood.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0472.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ot6zDqm0p1s/UM-oZwFOYBI/AAAAAAAAImc/_9QNnbQXa5Y/s1920-w1920-h1080-c/IMG_0472.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_2167.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-HW1I0DVsq6A/UlmXtm9TvGI/AAAAAAAAQOM/MBQeGBzVB2M/s1920-w1920-h1080-c/MOL_2167.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/T3_IMG_3936.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-r3jKfQruwv4/Uc6B8fRsKmI/AAAAAAAAIAg/VCLgE4EqjtY/s1920-w1920-h1080-c/T3_IMG_3936.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8941Autumn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-TFEx1ptMuoc/UpN7a9C-YlI/AAAAAAAAKUI/A3KeBF2vSnE/s1920-w1920-h1080-c/8941Autumn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6682.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-l9peRQpmVRQ/T54s3ZTfGBI/AAAAAAAAJQk/-_8lDImWzwE/s1920-w1920-h1080-c/IMG_6682.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5908.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-nFgpOv4T3M0/TWLTD6xOiJI/AAAAAAAAPFs/PSfnLjBIrVU/s1920-w1920-h1080-c/IMG_5908.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0935.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-acdH1dPsUdk/ToQNXK7HgDI/AAAAAAAATyM/95rFxKIy_Dw/s1920-w1920-h1080-c/IMG_0935.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/11-17-12-India+Trip-Kanheri+Caves+(JPEGs)-20.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-ko4QbKawOzs/UMrlGpBHGtI/AAAAAAAAMbA/TVYDrsxchf4/s1920-w1920-h1080-c/11-17-12-India%2BTrip-Kanheri%2BCaves%2B%2528JPEGs%2529-20.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MSU3203.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-E5h_DjLkO9g/UJGAP4Q_1jI/AAAAAAAABI0/xb_a1wwuddA/s1920-w1920-h1080-c/_MSU3203.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5328.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-3vJ7YydpvVU/T3Fad0DfOvI/AAAAAAAAIIg/rJ5piFMcgKg/s1920-w1920-h1080-c/IMG_5328.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5974.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-qwOaqE4cYCg/Ur0CAf2nO5I/AAAAAAAAF-I/b2vYQp-TxW4/s1920-w1920-h1080-c/IMG_5974.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1755.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-nVpMVoplcjA/UlmXtr57GiI/AAAAAAAAQOo/YPNo51GXyLU/s1920-w1920-h1080-c/MOL_1755.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2828.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-RM253k65h0g/RuWXqF2PN3I/AAAAAAAAASw/bWQAJ47AvxQ/s1920-w1920-h1080-c/IMG_2828.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_T3_0788.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-JhsS5Efemfw/UAUNCf1J1aI/AAAAAAAACno/1178JtnVPVQ/s1920-w1920-h1080-c/IMG_T3_0788.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0471-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-IOB7UYjdfKk/UWxRNQruJpI/AAAAAAAAqYo/ZYOTEFEaUUQ/s1920-w1920-h1080-c/DSC_0471-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8176.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-97kOELXyRw0/UpKzpdSGLsI/AAAAAAAACU8/t7toymdF9ys/s1920-w1920-h1080-c/IMG_8176.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSCF0155-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-v5W9oXSutcs/UjX_nq7Q1DI/AAAAAAAAPVE/A201XC4J5qs/s1920-w1920-h1080-c/DSCF0155-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1017.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-OvptEVwUDuA/UE_P875OPoI/AAAAAAAAPWM/ocqkejUt5AQ/s1920-w1920-h1080-c/IMG_1017.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4701.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-SCc_19Vl5Ng/SuoniirQlZI/AAAAAAAAGOo/UsRZ0o6GJeI/s1920-w1920-h1080-c/IMG_4701.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6000.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-GMJoozxAcgE/Tk7h8aldhrI/AAAAAAAAFZ8/SnFiv5CZcYE/s1920-w1920-h1080-c/IMG_6000.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/austin+2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-G4bChH6K3mY/ULdpTli69GI/AAAAAAAAJIg/cfku63jtnY4/s1920-w1920-h1080-c/austin%2B2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2526-3b.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-11t9DgvNYhY/UG3HjpR9T9I/AAAAAAAAIO4/FSkNbPYzUMA/s1920-w1920-h1080-c/IMG_2526-3b.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6451.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YtE41zDzZZM/UBCa4Ui2cuI/AAAAAAAAOMg/Uzs03aPfWak/s1920-w1920-h1080-c/IMG_6451.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4369+-+Large.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-mPicgJz8Yes/USOzc3Ki2TI/AAAAAAAADVA/QzQqtctMISI/s1920-w1920-h1080-c/IMG_4369%2B-%2BLarge.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0109.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1n2blvh-lkQ/TX_WqEAkKAI/AAAAAAAAAI4/xlaLPLcp6nI/s1920-w1920-h1080-c/DSC_0109.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20120128-20120128-ENS_3119_20_21_tonemapped-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-HBDE39Hgv9M/TyXGMvNUzjI/AAAAAAAAA_A/nBMmnHMcT0o/s1920-w1920-h1080-c/20120128-20120128-ENS_3119_20_21_tonemapped-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6499.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iTxENBfrZfY/T5ZLrTvoeCI/AAAAAAAAJD8/ik0c31ZcTOw/s1920-w1920-h1080-c/IMG_6499.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MorningGlory.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-8K8X3n7zPKE/UOOZGSlNvjI/AAAAAAAAKig/yTCbEVh-lCw/s1920-w1920-h1080-c/MorningGlory.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1984.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-MXAy1Q1e8pw/TtPRnPCM4AI/AAAAAAAAQc0/Vvc74HYL35s/s1920-w1920-h1080-c/IMG_1984.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1841.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-LQXZpNUUdw8/UWoqJONj7-I/AAAAAAAAMh0/7m100XOFcEo/s1920-w1920-h1080-c/MOL_1841.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/9082667654_c7919ec6ed_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iVr5r1Yycbs/UkPSMp_2CZI/AAAAAAAALrA/ME5aBtr5fdM/s1920-w1920-h1080-c/9082667654_c7919ec6ed_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Wyoming-5.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-jwJEWGscrls/T-dsvGIbyRI/AAAAAAAABp4/Pgn_t5V2LNs/s1920-w1920-h1080-c/Wyoming-5.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8981.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FeRCoqwVOB4/Tkgq-geJE3I/AAAAAAAAFYo/xdj-91ytvg8/s1920-w1920-h1080-c/IMG_8981.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/04_20080526.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ENSOsH-5iPQ/UZSar_1xTLI/AAAAAAAAsTo/CjPKgR3jXAs/s1920-w1920-h1080-c/04_20080526.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0432.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-jmMSVP61kaQ/TqtX5OPLfZI/AAAAAAAAFkk/8dE_CxpTiHM/s1920-w1920-h1080-c/IMG_0432.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tah+prohm+ruins.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-N-jkCCpnvmM/Tg0t85f5-dI/AAAAAAAABj8/otdYcgGq4ZU/s1920-w1920-h1080-c/tah%2Bprohm%2Bruins.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0642.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Lk6txIIotmM/ToZuJ99slYI/AAAAAAAAQIg/y0jvaiYTIHA/s1920-w1920-h1080-c/IMG_0642.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MC2_8779.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QpB1YMuAXEA/TikI95S2KmI/AAAAAAAAPSw/kJPeHft92m4/s1920-w1920-h1080-c/MC2_8779.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0366.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-E57LJIzkkd8/UM-oHjiKHJI/AAAAAAAAIjY/QKAP7QTXBNY/s1920-w1920-h1080-c/IMG_0366.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1818.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--qL9ddvO4gs/UWoqHffdewI/AAAAAAAAMh0/uf5mp_xqsHI/s1920-w1920-h1080-c/MOL_1818.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3027.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Xdz2ceNVzdw/Tm5L7A9tdYI/AAAAAAAAFsg/k4Tjwbi73Cw/s1920-w1920-h1080-c/IMG_3027.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0242.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ejLi6Bg7IUI/TonR_AZLYLI/AAAAAAAAQWk/A1bVgL3p2A4/s1920-w1920-h1080-c/IMG_0242.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0423-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-iNpCGNJTrRo/Ugbk1ZMLczI/AAAAAAAAOE0/FZWVWqXGdT8/s1920-w1920-h1080-c/DSC_0423-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/WahclelaFalls.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-q9gWC1ZIAvg/UbZrg9lIcAI/AAAAAAAAL4I/xzSlyLfAGrQ/s1920-w1920-h1080-c/WahclelaFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_9166.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-CaqC7SHp_2w/SF8sHokHjwI/AAAAAAAACyw/gC4j26zZen8/s1920-w1920-h1080-c/DSC_9166.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7449.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Bo0_R3Hshio/UOUefGb4bpI/AAAAAAAARno/EBZGWRhWwzk/s1920-w1920-h1080-c/IMG_7449.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/path_of_leaves.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-y9mHkm6F9NI/UJH6oUvIN3I/AAAAAAAADqU/ueLAmjtceMI/s1920-w1920-h1080-c/path_of_leaves.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/700_1905.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-nEEPZA887gc/SRGbDPl6jgI/AAAAAAAADOc/LH5WYu-Vc1k/s1920-w1920-h1080-c/700_1905.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2079-1.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ps4uT_pEdCE/RpKjlC16MuI/AAAAAAAAAt0/n09gNExGMl0/s1920-w1920-h1080-c/DSC_2079-1.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_6457-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-M6BRAUZHPyo/UfbbKobVOKI/AAAAAAAAK_M/4WIHtFv7Idk/s1920-w1920-h1080-c/MWF_6457-2.jpg\"]}]}}","module.exports = {\"background-patterns\":{\"image\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern1.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern2.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern3.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern4.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern5.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern6.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern7.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-1667135_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2069198_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2425614_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2790359_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2863542_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-3288642_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-geometric-pattern-background_1319-242.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/animals-16908_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/autumn-1801896_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/backdrop-3346304_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/background-1141891_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/background-1141892_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/basket-2023197_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo45.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo55.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo63.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan20.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan56.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo102.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo106.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo135.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo75.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo76.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo80.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan11.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan15.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan17.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan21.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan30.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan46.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan50.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan56.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/blue-1545368_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/blue-3368023_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/braiding-2697075_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-2191647_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-3324067_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-3334141_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/camouflage-145980_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/camouflage-33708_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor05.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor125.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor126.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor129.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor131.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor139.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor15.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor44.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/christmas-1091551_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circle-2696910_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circles-1005197_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circles-1005321_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cube-402231_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cute-3047767_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/decor-763806_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/decorative-1781458_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/design-3289984_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/diamonds-1524471_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/dreamcatcher-3334128_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-1299131_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-1788412_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-4655084_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-pattern-1603073_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil09.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil14.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk07.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk09.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor81.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor84.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geometric-patterns-1978688_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/goltum10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/gothic-756211_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/green-753533_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/green-763804_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart05.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart34.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart39.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart51.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart53.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/hexagon-1312786_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-1bjZ4CEqGLSGiWI.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-3PniNaR4EM.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-6oQV3ly2I1vFY5Je.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-9fPsO9xLXxzONha.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-AJ5CKq0awy4d9EF.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-Elrl20LiRFHXr.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-Fu9UMDonFXB4mIqU.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-HxkaMXBjzP.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-UwawezoPZ9I.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-VFpI9G4V62V.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-VcTxveu7iXkz.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-ka9dtT7zZFsY.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-nJw0PAz0l03dSZY.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-ybmMVJ4cYA.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-z9Xwv2KKSbgW2b.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga16.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga17.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga25.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga31.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga37.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan03.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan07.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow110.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow24.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow84.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/magnolia-732331_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha18.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha23.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/mesh-2697072_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic18.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic28.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic59.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic83.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic87.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic88.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/mosaic-2790339_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/music57.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/music58.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-1008150_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-3289978_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-403769_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-5415668_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-728509_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/purple-755266_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/purple-756209_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rail-2721626_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast11.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast22.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast38.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast43.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast46.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast59.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast60.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast68.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast69.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast79.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast83.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/roses-5095521_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/roses-5100472_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor12.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor26.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor27.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor35.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor67.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sand89.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1320742_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1781493_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1837442_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-3289975_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1085294_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1085297_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086306_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086309_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086311_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1089796_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1089797_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1822610_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-5095737_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-757848_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sersv01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sersv32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seruzor06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seruzor47.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz101.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz37.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star-2721633_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star49.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/stars-1005267_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tile-1892631_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tree-5970709_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tree-5970776_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/triangle-753534_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/vector-1603109_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/violet10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/wave-2697053_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/wave-2721632_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-2484120_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148806274.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148810246.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148810353.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/zolot31.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/zolot47.png\"]}}","var map = {\n\t\"./attention/attention.mp3\": 17533\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 10253;","var map = {\n\t\"./marching-band-dave-girtsman/marching-band-dave-girtsman.mp3\": 65705\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 81089;","var map = {\n\t\"./beep_positive/beep_positive.mp3\": 66391,\n\t\"./beep_up/beep_up.mp3\": 51922,\n\t\"./bleep/bleep.mp3\": 83113,\n\t\"./cellular_click/cellular_click.mp3\": 70180,\n\t\"./computer_chime/computer_chime.mp3\": 14528,\n\t\"./ether/ether.mp3\": 86123,\n\t\"./good_chime/good_chime.mp3\": 11691,\n\t\"./mono_u/mono_u.mp3\": 63414,\n\t\"./pixel_beep/pixel_beep.mp3\": 66488,\n\t\"./plop/plop.mp3\": 88711,\n\t\"./pop/pop.mp3\": 730,\n\t\"./retro_game/retro_game.mp3\": 76496,\n\t\"./tiny_noize/tiny_noize.mp3\": 28288\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 60255;","var map = {\n\t\"./future-synth/future-synth.mp3\": 66849,\n\t\"./marching-band-dave-girtsman/marching-band-dave-girtsman.mp3\": 36445,\n\t\"./retro-chiptune/retro-chiptune.mp3\": 15737\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 90683;","var map = {\n\t\"./_auth_request/_auth_request.mp3\": 48710,\n\t\"./_call_connecting/_call_connecting.mp3\": 2301,\n\t\"./_phone_busy/_phone_busy.mp3\": 33246\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 60623;","var constants = {\n\n    ASSETS_URL_PREFIX: './',\n    STORAGE_NAME: 'xabber-storage',\n    STORAGE_VERSION: 'v8',\n\n    CONTAINER_ELEMENT: \"#xabber-container\",\n\n    FAVICON_DEFAULT: \"assets/images/favicon.png\",\n    FAVICON_DEFAULT_GREY: \"assets/images/favicon-grey.png\",\n    FAVICON_MESSAGE: \"assets/images/favicon-message.png\",\n    BACKGROUND_IMAGE: \"assets/images/background.png\",\n\n    WIDTH_MEDIUM: 1650,\n    WIDTH_NARROW: 1280,\n    WIDTH_TINY: 1152,\n\n    LOG_LEVEL_NONE: -1,\n    LOG_LEVEL_ERROR: 1,\n    LOG_LEVEL_WARN: 2,\n    LOG_LEVEL_INFO: 3,\n    LOG_LEVEL_DEBUG: 4,\n\n    LOG_LEVEL: 'ERROR',\n\n    KEY_BACKSPACE: 8,\n    KEY_TAB: 9,\n    KEY_ENTER: 13,\n    KEY_SHIFT: 16,\n    KEY_CTRL: 17,\n    KEY_ESCAPE: 27,\n    KEY_SPACE: 32,\n    KEY_ARROW_LEFT: 37,\n    KEY_ARROW_UP: 38,\n    KEY_ARROW_RIGHT: 39,\n    KEY_ARROW_DOWN: 40,\n    KEY_DELETE: 46,\n    KEY_FORWARD_SLASH: 47,\n    KEY_AT: 50,\n\n    VOICE_MSG_TIME: 120,\n\n    PASSWORD_DOT: String.fromCharCode(0x2022),\n\n    CONNECTION_URL: null,\n\n    CONN_STATUSES: {\n        0: 'ERROR',\n        1: 'CONNECTING',\n        2: 'CONNFAIL',\n        3: 'AUTHENTICATING',\n        4: 'AUTHFAIL',\n        5: 'CONNECTED',\n        6: 'DISCONNECTED',\n        7: 'DISCONNECTING',\n        8: 'ATTACHED',\n        9: 'REDIRECT',\n        10: 'CONNTIMEOUT'\n    },\n\n    PREKEYS_COUNT: 100,\n    MIN_PREKEYS_COUNT: 80,\n\n    AES_KEY_LENGTH: 128,\n    AES_TAG_LENGTH: 128,\n    AES_EXTRACTABLE: true,\n\n    BAD_CONN_STATUSES: [0, 2, 4, 6, 10],\n\n    RECONNECTION_TIMEOUTS: [5000, 10000, 15000],\n    DOWNTIME_RECONNECTION_TIMEOUT: 15,\n    PING_SENDING_INTERVAL: 10,\n\n    IDLING_MINIMAL_TIMEOUT: 10,\n    IDLING_MAXIMUM_TIMEOUT: 90,\n    IDLING_DEFAULT_TIMEOUT: 30,\n\n    STATUS_WEIGHTS: {\n        chat: 1,\n        online: 2,\n        away: 3,\n        xa: 4,\n        dnd: 5,\n        offline: 6,\n        unavailable: 7\n    },\n\n    PRESENT_INTERVAL: 900000,\n    CHATSTATE_INTERVAL_COMPOSING_AUDIO: 5000,\n    CHATSTATE_TIMEOUT_PAUSED: 15000,\n    CHATSTATE_TIMEOUT_STOPPED: 5000,\n    CHATSTATE_TIMEOUT_PAUSED_AUDIO: 10000,\n\n    JINGLE_WAITING_TIME: 60,\n\n    SYNCHRONIZATION_RSM_MAX: 25,\n\n    REGISTRATION_DOMAINS: [],\n    LOGIN_DOMAINS: [],\n    TRUSTED_DOMAINS: [],\n    RECOMMENDED_DOMAIN: '',\n    REGISTRATION_BUTTON: true,\n    REGISTRATION_CUSTOM_DOMAIN: true,\n    LOGIN_CUSTOM_DOMAIN: true,\n\n    TURN_SERVERS_LIST: [\n        {\n            urls: 'turn:numb.viagenie.ca',\n            credential: 'muazkh',\n            username: 'webrtc@live.com'\n        },\n        {\n            urls: \"turn:turn.editcompany.org:5439\",\n            username: \"test\",\n            credential: \"1111\"\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=udp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=tcp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        }\n    ],\n\n    JINGLE_MSG_PROPOSE: 0,\n    JINGLE_MSG_REJECT: 1,\n    JINGLE_MSG_ACCEPT: 2,\n\n    MSG_BLOCKED: -2,\n    MSG_ERROR: -1,\n    MSG_PENDING: 0,\n    MSG_SENT: 1,\n    MSG_DELIVERED: 2,\n    MSG_DISPLAYED: 3,\n    MSG_ARCHIVED: 4,\n    MSG_SAVED: 5,\n\n    RSM_ATTRIBUTES: ['max', 'first', 'last', 'after', 'before', 'index', 'count'],\n    MAM_ATTRIBUTES: ['with', 'start', 'end'],\n\n    GENERAL_GROUP_ID: 1,\n    NON_ROSTER_GROUP_ID: 2,\n\n    MATERIAL_COLORS: [\n        \"red\", \"green\", \"blue\", \"deep-purple\", \"orange\", \"lime\",\n        \"pink\", \"purple\", \"indigo\", \"light-blue\", \"cyan\", \"teal\",\n        \"light-green\", \"amber\", \"deep-orange\", \"brown\", \"blue-grey\"\n    ],\n\n    MAX_AVATAR_FILE_SIZE: 64000,\n\n    AVATAR_PRIORITIES: {\n        VCARD_AVATAR: 0,\n        PUBSUB_AVATAR: 1\n    },\n\n    EMAIL_FOR_JOIN_TRANSLATION: \"info@xabber.com\",\n\n    AVATAR_SIZES: {\n        TOOLBAR_ACCOUNT_ITEM: 32,\n        SETTINGS_ACCOUNT_ITEM: 32,\n        XABBER_ACCOUNT: 32,\n        SYNCHRONIZE_ACCOUNT_ITEM: 36,\n        MENTION_ITEM: 36,\n        ACCOUNT_SETTINGS_LEFT: 96,\n        ACCOUNT_VCARD_EDIT: 80,\n        ROSTER_RIGHT_ACCOUNT_ITEM: 38,\n        ROSTER_LEFT_ACCOUNT_ITEM: 40,\n        PARTICIPANT_DETAILS_ITEM: 48,\n        CONTACT_RIGHT_ITEM: 32,\n        GROUPCHAT_MEMBER_ITEM: 32,\n        CONTACT_LEFT_ITEM: 32,\n        CONTACT_BLOCKED_ITEM: 32,\n        CONTACT_DETAILS: 192,\n        GROUP_SETTINGS: 96,\n        CHAT_ITEM: 40,\n        CHAT_HEAD: 40,\n        CHAT_MESSAGE: 32,\n        CHAT_BOTTOM: 48,\n        XABBER_VOICE_CALL_VIEW: 128,\n        OMEMO_ENABLE_SETTING: 182\n    },\n\n\n    SYNC_WAY_DATA: {\n        no: {\n            tip: 'xabber_account__sync__settings_already_synced',\n            icon: 'mdi-cloud-check'\n        },\n        from_server: {\n            tip: 'xabber_account__sync__settings_will_be_downloaded',\n            icon: 'mdi-cloud-download'\n        },\n        to_server: {\n            tip: 'xabber_account__sync__settings_will_be_uploaded',\n            icon: 'mdi-cloud-upload'\n        },\n        delete: {\n            tip: 'xabber_account__sync__acc_will_be_deleted',\n            icon: 'mdi-delete'\n        },\n        off_local: {\n            tip: 'xabber_account__sync__local_acc',\n            icon: 'mdi-cloud-outline-off'\n        },\n        off_remote: {\n            tip: 'xabber_account__sync__remote_acc',\n            icon: 'mdi-cloud-outline-off'\n        }\n    },\n\n    SYNCED_STATUS_DATA: {\n        off: {\n            tip: 'xabber_account__sync_status__disabled',\n            icon: 'mdi-cloud-outline-off'\n        },\n        yes: {\n            tip: 'xabber_account__sync_status__synced',\n            icon: 'mdi-cloud-check'\n        },\n        no: {\n            tip: 'xabber_account__sync_status__not_synced',\n            icon: 'mdi-cloud'\n        }\n    },\n\n    EMOJI_LIST_NAME: function (emoji_list) {\n        return {\n            \"smiles_and_people\": 'emoji_list__catelory_name__smiles_and_people',\n            \"body_and_clothes\": 'emoji_list__catelory_name__body_and_clothes',\n            \"animals_and_nature\": 'emoji_list__catelory_name__animals_and_nature',\n            \"food_and_drinks\": 'emoji_list__catelory_name__food_and_drinks',\n            \"travel_and_places\": 'emoji_list__catelory_name__travel_and_places',\n            \"events\": 'emoji_list__catelory_name__events',\n            \"objects\": 'emoji_list__catelory_name__objects',\n            \"signs\": 'emoji_list__catelory_name__signs'\n        }[emoji_list]\n    },\n\n    QUOTE_MARKER: '&gt;',\n    MARKUP_TAGS: ['bold', 'underline', 'italic', 'strike', 'link', 'quote'],\n\n    BLANK_VIDEO: {\n        OGG: 'data:video/ogg;base64, T2dnUwACAAAAAAAAAAAjaKehAAAAAEAjsCsBKoB0aGVvcmEDAgEACwAJAACwAACQAAAAAAAZAAAAAQAAAQAAAQADDUAA2E9nZ1MAAgAAAAAAAAAAlksvwgAAAABKGTdzAR4Bdm9yYmlzAAAAAAKAuwAAAAAAAIC1AQAAAAAAuAFPZ2dTAAAAAAAAAAAAACNop6EBAAAAPZIZjg41////////////////kIF0aGVvcmENAAAATGF2ZjU1LjMzLjEwMAEAAAAVAAAAZW5jb2Rlcj1MYXZmNTUuMzMuMTAwgnRoZW9yYb7NKPe5zWsYtalJShBznOYxjFKUpCEIMYxiEIQhCEAAAAAAAAAAAAARba5TZ5LI/FYS/Hg5W2zmKvVoq1QoEykkWhD+eTmbjWZTCXiyVSmTiSSCGQh8PB2OBqNBgLxWKhQJBGIhCHw8HAyGAsFAiDgVFtrlNnksj8VhL8eDlbbOYq9WirVCgTKSRaEP55OZuNZlMJeLJVKZOJJIIZCHw8HY4Go0GAvFYqFAkEYiEIfDwcDIYCwUCIOBQLDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8MDA8SFBQVDQ0OERIVFRQODg8SFBUVFQ4QERMUFRUVEBEUFRUVFRUSExQVFRUVFRQVFRUVFRUVFRUVFRUVFRUQDAsQFBkbHA0NDhIVHBwbDg0QFBkcHBwOEBMWGx0dHBETGRwcHh4dFBgbHB0eHh0bHB0dHh4eHh0dHR0eHh4dEAsKEBgoMz0MDA4TGjo8Nw4NEBgoOUU4DhEWHTNXUD4SFiU6RG1nTRgjN0BRaHFcMUBOV2d5eGVIXF9icGRnYxMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMSEhUZGhoaGhIUFhoaGhoaFRYZGhoaGhoZGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaERIWHyQkJCQSFBgiJCQkJBYYISQkJCQkHyIkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJBESGC9jY2NjEhUaQmNjY2MYGjhjY2NjYy9CY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2MVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVEhISFRcYGRsSEhUXGBkbHBIVFxgZGxwdFRcYGRscHR0XGBkbHB0dHRgZGxwdHR0eGRscHR0dHh4bHB0dHR4eHhERERQXGhwgEREUFxocICIRFBcaHCAiJRQXGhwgIiUlFxocICIlJSUaHCAiJSUlKRwgIiUlJSkqICIlJSUpKioQEBAUGBwgKBAQFBgcICgwEBQYHCAoMEAUGBwgKDBAQBgcICgwQEBAHCAoMEBAQGAgKDBAQEBggCgwQEBAYICAB8Xlx0fV7c7D8vrrAaZid8hRvB1RN7csxFuo43wH7lEkS9wbGS+tVSNMyuxdiECcjB7R1Ml85htasNjKpSvPt3D8k7iGmZXYuxBC+RR4arUGxkvH5y7mJXR7R5Jwn3VUhBiuap91VIrsaCM5TSg9o867khwMrWY2+cP4rwvBLzt/wnHaYe0edSRMYC6tZmU1BrvhktIUf2gXoU8bHMuyNA7lB7R51ym213sFcFKowIviT/i0Wscg+4RDubX+4haRsMxZWgN05K5FD3bzqS9VSVCPM4TpWs2C43ihFdgaSByeKHu3Xf/2TG8tgpB7PAtOs7jixWYw+Ayo5GjUTSybX/1KW52RxYfB8nBNLJtHgt4DPq6BZWBFpjyZX/1KW5Ca0evOwG1EX/A9j5fQm5hOz6W2CtcCaWTXTFAeZO71VIgCTX69y9TiaXag3Os2ES1DcLKw0/xR5HfnCqkpQF0Z1kxKNfhZWLycml2keduHMQh3HubB/pbUUoCK5wxetZRZWPJF/bdyE21H2YjMOhP/pkthqKUCOEWVm68+1J5n7ahES5sOhaZPdOC5j4kc91FVIsrF8ofe+A2on/16Z4RiKQZcMU3NouO9N4YAvrWaiA6h4bfLqhTitbnnJ2iPSVRNJH+aZGE+YXzq7Ah/OncW2K59AKamlocOUYTSvaJPNcjDfMGrmG9pOV2MbgI9v3B3ECZ7RLJ51UpzMn0C1huA87Ngom9lkiaw3t5yvFZmDl1HpkuP+PiqlawgD69jAT5Nxr2i6cwiytcwHhK2KJvZI9C1m/4VUil8RvO/ydxmgsFdzdgGpMbUeyyRNOi1k5hMb6hVSMuTrOE/xuDhGExQ219l07sV2kG5fOEnkWHwgqUkbvC0P2KTytY4nHLqJDc3DMGlDbX2aXK/4UuJxizaIkZITS7a3HN5374PrVlYKIcP9xl1BUKqQ7aAml2k1o5uGcN8A+tPz1HF1YVnmE7cyx4FIiUA2ml1k0hX9HB7l4tMO+R9YrMWcf5Anub1BZXUp3Ce4jBM21l0kyhcF/vg6FGeHa345MYv4BVSciTJhj5AbuD2K0dfIXc4jKAbazaS53rv1lYqpIVr2fcgcPox4u/WVnRfJ25GGING2s2cqjKIVUtwGbRtrljLd9CQOHhewUTfiKxWk7Olr2dHyIKlLgejEbasmmdGF/dhuhVrU9xGi6Hksgm/+5Bw813T3mJyRNqIYGdYspVZFzQ6dhNLJ7H+fYWh8Q+cMbzLc/O0evM4srXGjpECaXaT2jApqM4LRavgPnH7ecDRQSErabX3zC4EcXfOVZZUpYs3UIfMsKVR+6hgFzHhvWWWl4EqZtrJpHnyeO0T2icPrqVRyyDRKmbayexv7wdolGfh1hwtsK4G5jDOIHz/lTULUM47PaBmNJm2ssmTq+ssXeHBjgij3G5P+u5QVFIGQ21TNM5aGOHbqKssQ/HiM9kvcWjdCtF6gZNMzbXFhNP2gV2FNQi+OpOR+S+3RvOBVSOr+E5hjyPrQho7/QDNEG2qRNLpHl6WVl3m4p3POFvwEWUN0ByvCQTSttdM48H7tjQWVk73qoUvhiSDbVK0mzyohbuHXofmEaK/xXYJ+Vq7tBUN6lMAdrouC3p96IS8kMzbVK0myY4f+HKdRGsrG9SlDwEfQkXsGLIbapmmcv/sA5TrqC36t4sRdjylU4JC9KwG2plM0zxuT2iFFzAPXyj9ZWRu+tx5UpFv0jn0gQrKyMF5MyaZsDbXG7/qIdp0tHG4jOQumLzBliaZttaLfZFUBSOu7FaUn/+IXETfwUj2E0o6gJ2HB/l8N7jFnzWWBESErabWPvy9bUKqS4y78CME0rbXSTNFRf8H7r1wwxQbltish5nFVIRkhKaTNtc6L3LHAh8+B2yi/tHvXG4nusVwAKMb/0/MCmoWrvASDM0mbay5YRI+7CtC96OPtxudDEyTGmbbWVRgkvR8qaiA8+rLCft7cW8H8UI3E8nzmJVSQIT3+0srHfUbgKA21ZNM8WEy+W7wbj9OuBpm21MKGWN80kaA5PZfoSqkRPLa1h31wIEjiUhcnX/e5VSWVkQnPhtqoYXrjLFpn7M8tjB17xSqfWgoA21StJpM48eSG+5A/dsGUQn8sV7impA4dQjxPyrsBfHd8tUGBIJWkxtrnljE3eu/xTUO/nVsA9I4uVlZ5uQvy9IwYjbWUmaZ5XE9HAWVkXUKmoI3y4vDKZpnKNtccJHK2iA83ej+fvgI3KR9P6qpG/kBCUdxHFisLkq8aZttTCZlj/b0G8XoLX/3fHhZWCVcMsWmZtqmYXz0cpOiBHCqpKUZu76iICRxYVuSULpmF/421MsWmfyhbP4ew1FVKAjFlY437JXImUTm2r/4ZYtMy61hf16RPJIRA8tU1BDc5/JzAkEzTM21lyx7sK9wojRX/OHXoOv05IDbUymaZyscL7qlMA8c/CiK3csceqzuOEU1EPpbz4QEahIShpm21MJmWN924f98WKyf51EEYBli0zNtUzC+6X9P9ysrU1CHyA3RJFFr1w67HpyULT+YMsWmZtquYXz97oKil44sI1bpL8hRSDeMkhiIBwOgxwZ5Fs6+5M+NdH+3Kjv0sreSqqRvGSQxEA4HQY4M8i2dfcmfGuj/blR36WVvJVVI3jJIYiAcDoMcGeRbOvuTPjXR/tyo79LK3kqqkVUnCfqAES8EzTM21lykY4Q+LKxby+9F3ZHR/uC2OGpS9cv6BZXAebhckMGIymaZm2st8/B38i6A/n58pVLKwfURet4UBwSF6UaZttSZljhd2jW9BZWcrX0/hG4Sdt/SBCdH6UMJmWK80zba3URKaik8iB9PR2459CuyOAbi0/GWLTMmYXm2t0vUkNQhRPVldKpAN5HgHyZfdOtGuj/YxwZ5S8u3CjqMgQoyQJRdawvJlE530/+sVg21c8GWLTPf3yJVSVUoCMWVjjfslciZRObav/hli0zLrWF/XpE8khT2dnUwAAAAAAAAAAAACWSy/CAQAAAB7oAsQRNv///////////////////wcDdm9yYmlzDQAAAExhdmY1NS4zMy4xMDABAAAAFQAAAGVuY29kZXI9TGF2ZjU1LjMzLjEwMAEFdm9yYmlzJUJDVgEAQAAAJHMYKkalcxaEEBpCUBnjHELOa+wZQkwRghwyTFvLJXOQIaSgQohbKIHQkFUAAEAAAIdBeBSEikEIIYQlPViSgyc9CCGEiDl4FIRpQQghhBBCCCGEEEIIIYRFOWiSgydBCB2E4zA4DIPlOPgchEU5WBCDJ0HoIIQPQriag6w5CCGEJDVIUIMGOegchMIsKIqCxDC4FoQENSiMguQwyNSDC0KImoNJNfgahGdBeBaEaUEIIYQkQUiQgwZByBiERkFYkoMGObgUhMtBqBqEKjkIH4QgNGQVAJAAAKCiKIqiKAoQGrIKAMgAABBAURTHcRzJkRzJsRwLCA1ZBQAAAQAIAACgSIqkSI7kSJIkWZIlWZIlWZLmiaosy7Isy7IsyzIQGrIKAEgAAFBRDEVxFAcIDVkFAGQAAAigOIqlWIqlaIrniI4IhIasAgCAAAAEAAAQNENTPEeURM9UVde2bdu2bdu2bdu2bdu2bVuWZRkIDVkFAEAAABDSaWapBogwAxkGQkNWAQAIAACAEYowxIDQkFUAAEAAAIAYSg6iCa0535zjoFkOmkqxOR2cSLV5kpuKuTnnnHPOyeacMc4555yinFkMmgmtOeecxKBZCpoJrTnnnCexedCaKq0555xxzulgnBHGOeecJq15kJqNtTnnnAWtaY6aS7E555xIuXlSm0u1Oeecc84555xzzjnnnOrF6RycE84555yovbmWm9DFOeecT8bp3pwQzjnnnHPOOeecc84555wgNGQVAAAEAEAQho1h3CkI0udoIEYRYhoy6UH36DAJGoOcQurR6GiklDoIJZVxUkonCA1ZBQAAAgBACCGFFFJIIYUUUkghhRRiiCGGGHLKKaeggkoqqaiijDLLLLPMMssss8w67KyzDjsMMcQQQyutxFJTbTXWWGvuOeeag7RWWmuttVJKKaWUUgpCQ1YBACAAAARCBhlkkFFIIYUUYogpp5xyCiqogNCQVQAAIACAAAAAAE/yHNERHdERHdERHdERHdHxHM8RJVESJVESLdMyNdNTRVV1ZdeWdVm3fVvYhV33fd33fd34dWFYlmVZlmVZlmVZlmVZlmVZliA0ZBUAAAIAACCEEEJIIYUUUkgpxhhzzDnoJJQQCA1ZBQAAAgAIAAAAcBRHcRzJkRxJsiRL0iTN0ixP8zRPEz1RFEXTNFXRFV1RN21RNmXTNV1TNl1VVm1Xlm1btnXbl2Xb933f933f933f933f931dB0JDVgEAEgAAOpIjKZIiKZLjOI4kSUBoyCoAQAYAQAAAiuIojuM4kiRJkiVpkmd5lqiZmumZniqqQGjIKgAAEABAAAAAAAAAiqZ4iql4iqh4juiIkmiZlqipmivKpuy6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6rguEhqwCACQAAHQkR3IkR1IkRVIkR3KA0JBVAIAMAIAAABzDMSRFcizL0jRP8zRPEz3REz3TU0VXdIHQkFUAACAAgAAAAAAAAAzJsBTL0RxNEiXVUi1VUy3VUkXVU1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVU3TNE0TCA1ZCQCQAQCQEFMtLcaaCYskYtJqq6BjDFLspbFIKme1t8oxhRi1XhqHlFEQe6kkY4pBzC2k0CkmrdZUQoUUpJhjKhVSDlIgNGSFABCaAeBwHECyLECyLAAAAAAAAACQNA3QPA+wNA8AAAAAAAAAJE0DLE8DNM8DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDSNEDzPEDzPAAAAAAAAADQPA/wPBHwRBEAAAAAAAAALM8DNNEDPFEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDSNEDzPEDzPAAAAAAAAACwPA/whFBqyIgCIEwBwSBIkCZIEzQNIlgVNg6bBNAGSZUHToGkwTQAAAAAAAAAAAAAkTYOmQdMgigBJ06Bp0DSIIgAAAAAAAAAAAACSpkHToGkQRYCkadA0aBpEEQAAAAAAAAAAAADPNCGKEEWYJsAzTYgiRBGmCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAYcAAACDChDBQasiIAiBMAcDiKZQEAgOM4lgUAAI7jWBYAAFiWJYoAAGBZmigCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAABhwAAAIMKEMFBqyEgCIAgBwKIplAcexLOA4lgUkybIAlgXQPICmAUQRAAgAAChwAAAIsEFTYnGAQkNWAgBRAAAGxbEsTRNFkqRpmieKJEnTPE8UaZrneZ5pwvM8zzQhiqJomhBFUTRNmKZpqiowTVUVAABQ4AAAEGCDpsTiAIWGrAQAQgIAHIpiWZrmeZ4niqapmiRJ0zxPFEXRNE1TVUmSpnmeKIqiaZqmqrIsTfM8URRF01RVVYWmeZ4oiqJpqqrqwvM8TxRF0TRV1XXheZ4niqJomqrquhBFUTRN01RNVXVdIIqmaZqqqqquC0RPFE1TVV3XdYHniaJpqqqrui4QTdNUVVV1XVkGmKZpqqrryjJAVVXVdV1XlgGqqqqu67qyDFBV13VdWZZlAK7rurIsywIAAA4cAAACjKCTjCqLsNGECw9AoSErAoAoAADAGKYUU8owJiGkEBrGJIQUQiYlpdJSqiCkUlIpFYRUSiolo5RSailVEFIpqZQKQiollVIAANiBAwDYgYVQaMhKACAPAIAwRinGGHNOIqQUY845JxFSijHnnJNKMeacc85JKRlzzDnnpJTOOeecc1JK5pxzzjkppXPOOeeclFJK55xzTkopJYTOQSellNI555wTAABU4AAAEGCjyOYEI0GFhqwEAFIBAAyOY1ma5nmiaJqWJGma53meKJqmJkma5nmeJ4qqyfM8TxRF0TRVled5niiKommqKtcVRdM0TVVVXbIsiqZpmqrqujBN01RV13VdmKZpqqrrui5sW1VV1XVlGbatqqrqurIMXNd1ZdmWgSy7ruzasgAA8AQHAKACG1ZHOCkaCyw0ZCUAkAEAQBiDkEIIIWUQQgohhJRSCAkAABhwAAAIMKEMFBqyEgBIBQAAjLHWWmuttdZAZ6211lprrYDMWmuttdZaa6211lprrbXWUmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaay2llFJKKaWUUkoppZRSSimllFJKBQD6VTgA+D/YsDrCSdFYYKEhKwGAcAAAwBilGHMMQimlVAgx5px0VFqLsUKIMeckpNRabMVzzkEoIZXWYiyecw5CKSnFVmNRKYRSUkottliLSqGjklJKrdVYjDGppNZai63GYoxJKbTUWosxFiNsTam12GqrsRhjayottBhjjMUIX2RsLabaag3GCCNbLC3VWmswxhjdW4ultpqLMT742lIsMdZcAAB3gwMARIKNM6wknRWOBhcashIACAkAIBBSijHGGHPOOeekUow55pxzDkIIoVSKMcaccw5CCCGUjDHmnHMQQgghhFJKxpxzEEIIIYSQUuqccxBCCCGEEEopnXMOQgghhBBCKaWDEEIIIYQQSiilpBRCCCGEEEIIqaSUQgghhFJCKCGVlFIIIYQQQiklpJRSCiGEUkIIoYSUUkophRBCCKWUklJKKaUSSgklhBJSKSmlFEoIIZRSSkoppVRKCaGEEkopJaWUUkohhBBKKQUAABw4AAAEGEEnGVUWYaMJFx6AQkNWAgBkAACQopRSKS1FgiKlGKQYS0YVc1BaiqhyDFLNqVLOIOYklogxhJSTVDLmFEIMQuocdUwpBi2VGELGGKTYckuhcw4AAABBAICAkAAAAwQFMwDA4ADhcxB0AgRHGwCAIERmiETDQnB4UAkQEVMBQGKCQi4AVFhcpF1cQJcBLujirgMhBCEIQSwOoIAEHJxwwxNveMINTtApKnUgAAAAAAAMAPAAAJBcABER0cxhZGhscHR4fICEiIyQCAAAAAAAFwB8AAAkJUBERDRzGBkaGxwdHh8gISIjJAEAgAACAAAAACCAAAQEBAAAAAAAAgAAAAQET2dnUwAAQAAAAAAAAAAjaKehAgAAAEhTii0BRjLV6A+997733vvfe+997733vvfG+8fePvH3j7x94+8fePvH3j7x94+8fePvH3j7x94+8fePvH3gAAAAAAAAAAXm5PqUgABPZ2dTAABLAAAAAAAAACNop6EDAAAAIOuvQAsAAAAAAAAAAAAAAE9nZ1MAAEADAAAAAAAAI2inoQQAAAB/G0m4ATg/8A+997733vvfe+997733vvfK+8B94D7wAB94AAAAD8Kl94D7wH3gAD7wAAAAH4VABem0+pSAAE9nZ1MAAEsDAAAAAAAAI2inoQUAAABc3zKaCwAAAAAAAAAAAAAAT2dnUwAEQAYAAAAAAAAjaKehBgAAAOytEQUBOD/wD733vvfe+997733vvfe+98r7wH3gPvAAH3gAAAAPwqX3gPvAfeAAPvAAAAAfhUAF6bT6lIAAT2dnUwAAQL4AAAAAAACWSy/CAgAAAHsqKaIxAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQAKDg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg5PZ2dTAAQAxAAAAAAAAJZLL8IDAAAABLWpWwIBAQ4O',\n        MP4: 'data:video/mp4;base64, AAAAHGZ0eXBNNFYgAAACAGlzb21pc28yYXZjMQAAAAhmcmVlAAAGF21kYXTeBAAAbGliZmFhYyAxLjI4AABCAJMgBDIARwAAArEGBf//rdxF6b3m2Ui3lizYINkj7u94MjY0IC0gY29yZSAxNDIgcjIgOTU2YzhkOCAtIEguMjY0L01QRUctNCBBVkMgY29kZWMgLSBDb3B5bGVmdCAyMDAzLTIwMTQgLSBodHRwOi8vd3d3LnZpZGVvbGFuLm9yZy94MjY0Lmh0bWwgLSBvcHRpb25zOiBjYWJhYz0wIHJlZj0zIGRlYmxvY2s9MTowOjAgYW5hbHlzZT0weDE6MHgxMTEgbWU9aGV4IHN1Ym1lPTcgcHN5PTEgcHN5X3JkPTEuMDA6MC4wMCBtaXhlZF9yZWY9MSBtZV9yYW5nZT0xNiBjaHJvbWFfbWU9MSB0cmVsbGlzPTEgOHg4ZGN0PTAgY3FtPTAgZGVhZHpvbmU9MjEsMTEgZmFzdF9wc2tpcD0xIGNocm9tYV9xcF9vZmZzZXQ9LTIgdGhyZWFkcz02IGxvb2thaGVhZF90aHJlYWRzPTEgc2xpY2VkX3RocmVhZHM9MCBucj0wIGRlY2ltYXRlPTEgaW50ZXJsYWNlZD0wIGJsdXJheV9jb21wYXQ9MCBjb25zdHJhaW5lZF9pbnRyYT0wIGJmcmFtZXM9MCB3ZWlnaHRwPTAga2V5aW50PTI1MCBrZXlpbnRfbWluPTI1IHNjZW5lY3V0PTQwIGludHJhX3JlZnJlc2g9MCByY19sb29rYWhlYWQ9NDAgcmM9Y3JmIG1idHJlZT0xIGNyZj0yMy4wIHFjb21wPTAuNjAgcXBtaW49MCBxcG1heD02OSBxcHN0ZXA9NCB2YnZfbWF4cmF0ZT03NjggdmJ2X2J1ZnNpemU9MzAwMCBjcmZfbWF4PTAuMCBuYWxfaHJkPW5vbmUgZmlsbGVyPTAgaXBfcmF0aW89MS40MCBhcT0xOjEuMDAAgAAAAFZliIQL8mKAAKvMnJycnJycnJycnXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXiEASZACGQAjgCEASZACGQAjgAAAAAdBmjgX4GSAIQBJkAIZACOAAAAAB0GaVAX4GSAhAEmQAhkAI4AhAEmQAhkAI4AAAAAGQZpgL8DJIQBJkAIZACOAIQBJkAIZACOAAAAABkGagC/AySEASZACGQAjgAAAAAZBmqAvwMkhAEmQAhkAI4AhAEmQAhkAI4AAAAAGQZrAL8DJIQBJkAIZACOAAAAABkGa4C/AySEASZACGQAjgCEASZACGQAjgAAAAAZBmwAvwMkhAEmQAhkAI4AAAAAGQZsgL8DJIQBJkAIZACOAIQBJkAIZACOAAAAABkGbQC/AySEASZACGQAjgCEASZACGQAjgAAAAAZBm2AvwMkhAEmQAhkAI4AAAAAGQZuAL8DJIQBJkAIZACOAIQBJkAIZACOAAAAABkGboC/AySEASZACGQAjgAAAAAZBm8AvwMkhAEmQAhkAI4AhAEmQAhkAI4AAAAAGQZvgL8DJIQBJkAIZACOAAAAABkGaAC/AySEASZACGQAjgCEASZACGQAjgAAAAAZBmiAvwMkhAEmQAhkAI4AhAEmQAhkAI4AAAAAGQZpAL8DJIQBJkAIZACOAAAAABkGaYC/AySEASZACGQAjgCEASZACGQAjgAAAAAZBmoAvwMkhAEmQAhkAI4AAAAAGQZqgL8DJIQBJkAIZACOAIQBJkAIZACOAAAAABkGawC/AySEASZACGQAjgAAAAAZBmuAvwMkhAEmQAhkAI4AhAEmQAhkAI4AAAAAGQZsAL8DJIQBJkAIZACOAAAAABkGbIC/AySEASZACGQAjgCEASZACGQAjgAAAAAZBm0AvwMkhAEmQAhkAI4AhAEmQAhkAI4AAAAAGQZtgL8DJIQBJkAIZACOAAAAABkGbgCvAySEASZACGQAjgCEASZACGQAjgAAAAAZBm6AnwMkhAEmQAhkAI4AhAEmQAhkAI4AhAEmQAhkAI4AhAEmQAhkAI4AAAAhubW9vdgAAAGxtdmhkAAAAAAAAAAAAAAAAAAAD6AAABDcAAQAAAQAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAzB0cmFrAAAAXHRraGQAAAADAAAAAAAAAAAAAAABAAAAAAAAA+kAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAAALAAAACQAAAAAAAkZWR0cwAAABxlbHN0AAAAAAAAAAEAAAPpAAAAAAABAAAAAAKobWRpYQAAACBtZGhkAAAAAAAAAAAAAAAAAAB1MAAAdU5VxAAAAAAALWhkbHIAAAAAAAAAAHZpZGUAAAAAAAAAAAAAAABWaWRlb0hhbmRsZXIAAAACU21pbmYAAAAUdm1oZAAAAAEAAAAAAAAAAAAAACRkaW5mAAAAHGRyZWYAAAAAAAAAAQAAAAx1cmwgAAAAAQAAAhNzdGJsAAAAr3N0c2QAAAAAAAAAAQAAAJ9hdmMxAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAALAAkABIAAAASAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGP//AAAALWF2Y0MBQsAN/+EAFWdCwA3ZAsTsBEAAAPpAADqYA8UKkgEABWjLg8sgAAAAHHV1aWRraEDyXyRPxbo5pRvPAyPzAAAAAAAAABhzdHRzAAAAAAAAAAEAAAAeAAAD6QAAABRzdHNzAAAAAAAAAAEAAAABAAAAHHN0c2MAAAAAAAAAAQAAAAEAAAABAAAAAQAAAIxzdHN6AAAAAAAAAAAAAAAeAAADDwAAAAsAAAALAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAAiHN0Y28AAAAAAAAAHgAAAEYAAANnAAADewAAA5gAAAO0AAADxwAAA+MAAAP2AAAEEgAABCUAAARBAAAEXQAABHAAAASMAAAEnwAABLsAAATOAAAE6gAABQYAAAUZAAAFNQAABUgAAAVkAAAFdwAABZMAAAWmAAAFwgAABd4AAAXxAAAGDQAABGh0cmFrAAAAXHRraGQAAAADAAAAAAAAAAAAAAACAAAAAAAABDcAAAAAAAAAAAAAAAEBAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAkZWR0cwAAABxlbHN0AAAAAAAAAAEAAAQkAAADcAABAAAAAAPgbWRpYQAAACBtZGhkAAAAAAAAAAAAAAAAAAC7gAAAykBVxAAAAAAALWhkbHIAAAAAAAAAAHNvdW4AAAAAAAAAAAAAAABTb3VuZEhhbmRsZXIAAAADi21pbmYAAAAQc21oZAAAAAAAAAAAAAAAJGRpbmYAAAAcZHJlZgAAAAAAAAABAAAADHVybCAAAAABAAADT3N0YmwAAABnc3RzZAAAAAAAAAABAAAAV21wNGEAAAAAAAAAAQAAAAAAAAAAAAIAEAAAAAC7gAAAAAAAM2VzZHMAAAAAA4CAgCIAAgAEgICAFEAVBbjYAAu4AAAADcoFgICAAhGQBoCAgAECAAAAIHN0dHMAAAAAAAAAAgAAADIAAAQAAAAAAQAAAkAAAAFUc3RzYwAAAAAAAAAbAAAAAQAAAAEAAAABAAAAAgAAAAIAAAABAAAAAwAAAAEAAAABAAAABAAAAAIAAAABAAAABgAAAAEAAAABAAAABwAAAAIAAAABAAAACAAAAAEAAAABAAAACQAAAAIAAAABAAAACgAAAAEAAAABAAAACwAAAAIAAAABAAAADQAAAAEAAAABAAAADgAAAAIAAAABAAAADwAAAAEAAAABAAAAEAAAAAIAAAABAAAAEQAAAAEAAAABAAAAEgAAAAIAAAABAAAAFAAAAAEAAAABAAAAFQAAAAIAAAABAAAAFgAAAAEAAAABAAAAFwAAAAIAAAABAAAAGAAAAAEAAAABAAAAGQAAAAIAAAABAAAAGgAAAAEAAAABAAAAGwAAAAIAAAABAAAAHQAAAAEAAAABAAAAHgAAAAIAAAABAAAAHwAAAAQAAAABAAAA4HN0c3oAAAAAAAAAAAAAADMAAAAaAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAACMc3RjbwAAAAAAAAAfAAAALAAAA1UAAANyAAADhgAAA6IAAAO+AAAD0QAAA+0AAAQAAAAEHAAABC8AAARLAAAEZwAABHoAAASWAAAEqQAABMUAAATYAAAE9AAABRAAAAUjAAAFPwAABVIAAAVuAAAFgQAABZ0AAAWwAAAFzAAABegAAAX7AAAGFwAAAGJ1ZHRhAAAAWm1ldGEAAAAAAAAAIWhkbHIAAAAAAAAAAG1kaXJhcHBsAAAAAAAAAAAAAAAALWlsc3QAAAAlqXRvbwAAAB1kYXRhAAAAAQAAAABMYXZmNTUuMzMuMTAw',\n        WEBM: 'data:video/webm;base64, GkXfowEAAAAAAAAfQoaBAUL3gQFC8oEEQvOBCEKChHdlYm1Ch4EEQoWBAhhTgGcBAAAAAAAVkhFNm3RALE27i1OrhBVJqWZTrIHfTbuMU6uEFlSua1OsggEwTbuMU6uEHFO7a1OsghV17AEAAAAAAACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVSalmAQAAAAAAAEUq17GDD0JATYCNTGF2ZjU1LjMzLjEwMFdBjUxhdmY1NS4zMy4xMDBzpJBlrrXf3DCDVB8KcgbMpcr+RImIQJBgAAAAAAAWVK5rAQAAAAAAD++uAQAAAAAAADLXgQFzxYEBnIEAIrWcg3VuZIaFVl9WUDiDgQEj44OEAmJaAOABAAAAAAAABrCBsLqBkK4BAAAAAAAPq9eBAnPFgQKcgQAitZyDdW5khohBX1ZPUkJJU4OBAuEBAAAAAAAAEZ+BArWIQOdwAAAAAABiZIEgY6JPbwIeVgF2b3JiaXMAAAAAAoC7AAAAAAAAgLUBAAAAAAC4AQN2b3JiaXMtAAAAWGlwaC5PcmcgbGliVm9yYmlzIEkgMjAxMDExMDEgKFNjaGF1ZmVudWdnZXQpAQAAABUAAABlbmNvZGVyPUxhdmM1NS41Mi4xMDIBBXZvcmJpcyVCQ1YBAEAAACRzGCpGpXMWhBAaQlAZ4xxCzmvsGUJMEYIcMkxbyyVzkCGkoEKIWyiB0JBVAABAAACHQXgUhIpBCCGEJT1YkoMnPQghhIg5eBSEaUEIIYQQQgghhBBCCCGERTlokoMnQQgdhOMwOAyD5Tj4HIRFOVgQgydB6CCED0K4moOsOQghhCQ1SFCDBjnoHITCLCiKgsQwuBaEBDUojILkMMjUgwtCiJqDSTX4GoRnQXgWhGlBCCGEJEFIkIMGQcgYhEZBWJKDBjm4FITLQagahCo5CB+EIDRkFQCQAACgoiiKoigKEBqyCgDIAAAQQFEUx3EcyZEcybEcCwgNWQUAAAEACAAAoEiKpEiO5EiSJFmSJVmSJVmS5omqLMuyLMuyLMsyEBqyCgBIAABQUQxFcRQHCA1ZBQBkAAAIoDiKpViKpWiK54iOCISGrAIAgAAABAAAEDRDUzxHlETPVFXXtm3btm3btm3btm3btm1blmUZCA1ZBQBAAAAQ0mlmqQaIMAMZBkJDVgEACAAAgBGKMMSA0JBVAABAAACAGEoOogmtOd+c46BZDppKsTkdnEi1eZKbirk555xzzsnmnDHOOeecopxZDJoJrTnnnMSgWQqaCa0555wnsXnQmiqtOeeccc7pYJwRxjnnnCateZCajbU555wFrWmOmkuxOeecSLl5UptLtTnnnHPOOeecc84555zqxekcnBPOOeecqL25lpvQxTnnnE/G6d6cEM4555xzzjnnnHPOOeecIDRkFQAABABAEIaNYdwpCNLnaCBGEWIaMulB9+gwCRqDnELq0ehopJQ6CCWVcVJKJwgNWQUAAAIAQAghhRRSSCGFFFJIIYUUYoghhhhyyimnoIJKKqmooowyyyyzzDLLLLPMOuyssw47DDHEEEMrrcRSU2011lhr7jnnmoO0VlprrbVSSimllFIKQkNWAQAgAAAEQgYZZJBRSCGFFGKIKaeccgoqqIDQkFUAACAAgAAAAABP8hzRER3RER3RER3RER3R8RzPESVREiVREi3TMjXTU0VVdWXXlnVZt31b2IVd933d933d+HVhWJZlWZZlWZZlWZZlWZZlWZYgNGQVAAACAAAghBBCSCGFFFJIKcYYc8w56CSUEAgNWQUAAAIACAAAAHAUR3EcyZEcSbIkS9IkzdIsT/M0TxM9URRF0zRV0RVdUTdtUTZl0zVdUzZdVVZtV5ZtW7Z125dl2/d93/d93/d93/d93/d9XQdCQ1YBABIAADqSIymSIimS4ziOJElAaMgqAEAGAEAAAIriKI7jOJIkSZIlaZJneZaomZrpmZ4qqkBoyCoAABAAQAAAAAAAAIqmeIqpeIqoeI7oiJJomZaoqZoryqbsuq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq4LhIasAgAkAAB0JEdyJEdSJEVSJEdygNCQVQCADACAAAAcwzEkRXIsy9I0T/M0TxM90RM901NFV3SB0JBVAAAgAIAAAAAAAAAMybAUy9EcTRIl1VItVVMt1VJF1VNVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVN0zRNEwgNWQkAkAEAkBBTLS3GmgmLJGLSaqugYwxS7KWxSCpntbfKMYUYtV4ah5RREHupJGOKQcwtpNApJq3WVEKFFKSYYyoVUg5SIDRkhQAQmgHgcBxAsixAsiwAAAAAAAAAkDQN0DwPsDQPAAAAAAAAACRNAyxPAzTPAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABA0jRA8zxA8zwAAAAAAAAA0DwP8DwR8EQRAAAAAAAAACzPAzTRAzxRBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABA0jRA8zxA8zwAAAAAAAAAsDwP8EQR0DwRAAAAAAAAACzPAzxRBDzRAwgIRQasiIAiBMAcEgSJAmSBM0DSJYFTYOmwTQBkmVB06BpME0AAAAAAAAAAAAAJE2DpkHTIIoASdOgadA0iCIAAAAAAAAAAAAAkqZB06BpEEWApGnQNGgaRBEAAAAAAAAAAAAAzzQhihBFmCbAM02IIkQRpgkAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAGHAAAAgwoQwUGrIiAIgTAHA4imUBAIDjOJYFAACO41gWAABYliWKAABgWZooAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAYcAAACDChDBQashIAiAIAcCiKZQHHsSzgOJYFJMmyAJYF0DyApgFEEQAIAAAocAAACLBBU2JxgEJDVgIAUQAABsWxLE0TRZKkaZoniiRJ0zxPFGma53meacLzPM80IYqiaJoQRVE0TZimaaoqME1VFQAAUOAAABBgg6bE4gCFhqwEAEICAByKYlma5nmeJ4qmqZokSdM8TxRF0TRNU1VJkqZ5niiKommapqqyLE3zPFEURdNUVVWFpnmeKIqiaaqq6sLzPE8URdE0VdV14XmeJ4qiaJqq6roQRVE0TdNUTVV1XSCKpmmaqqqqrgtETxRNU1Vd13WB54miaaqqq7ouEE3TVFVVdV1ZBpimaaqq68oyQFVV1XVdV5YBqqqqruu6sgxQVdd1XVmWZQCu67qyLMsCAAAOHAAAAoygk4wqi7DRhAsPQKEhKwKAKAAAwBimFFPKMCYhpBAaxiSEFEImJaXSUqogpFJSKRWEVEoqJaOUUmopVRBSKamUCkIqJZVSAADYgQMA2IGFUGjISgAgDwCAMEYpxhhzTiKkFGPOOScRUoox55yTSjHmnHPOSSkZc8w556SUzjnnnHNSSuacc845KaVzzjnnnJRSSuecc05KKSWEzkEnpZTSOeecEwAAVOAAABBgo8jmBCNBhYasBABSAQAMjmNZmuZ5omialiRpmud5niiapiZJmuZ5nieKqsnzPE8URdE0VZXneZ4oiqJpqirXFUXTNE1VVV2yLIqmaZqq6rowTdNUVdd1XZimaaqq67oubFtVVdV1ZRm2raqq6rqyDFzXdWXZloEsu67s2rIAAPAEBwCgAhtWRzgpGgssNGQlAJABAEAYg5BCCCFlEEIKIYSUUggJAAAYcAAACDChDBQashIASAUAAIyx1lprrbXWQGettdZaa62AzFprrbXWWmuttdZaa6211lJrrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmstpZRSSimllFJKKaWUUkoppZRSSgUA+lU4APg/2LA6wknRWGChISsBgHAAAMAYpRhzDEIppVQIMeacdFRai7FCiDHnJKTUWmzFc85BKCGV1mIsnnMOQikpxVZjUSmEUlJKLbZYi0qho5JSSq3VWIwxqaTWWoutxmKMSSm01FqLMRYjbE2ptdhqq7EYY2sqLbQYY4zFCF9kbC2m2moNxggjWywt1VprMMYY3VuLpbaaizE++NpSLDHWXAAAd4MDAESCjTOsJJ0VjgYXGrISAAgJACAQUooxxhhzzjnnpFKMOeaccw5CCKFUijHGnHMOQgghlIwx5pxzEEIIIYRSSsaccxBCCCGEkFLqnHMQQgghhBBKKZ1zDkIIIYQQQimlgxBCCCGEEEoopaQUQgghhBBCCKmklEIIIYRSQighlZRSCCGEEEIpJaSUUgohhFJCCKGElFJKKYUQQgillJJSSimlEkoJJYQSUikppRRKCCGUUkpKKaVUSgmhhBJKKSWllFJKIYQQSikFAAAcOAAABBhBJxlVFmGjCRcegEJDVgIAZAAAkKKUUiktRYIipRikGEtGFXNQWoqocgxSzalSziDmJJaIMYSUk1Qy5hRCDELqHHVMKQYtlRhCxhik2HJLoXMOAAAAQQCAgJAAAAMEBTMAwOAA4XMQdAIERxsAgCBEZohEw0JweFAJEBFTAUBigkIuAFRYXKRdXECXAS7o4q4DIQQhCEEsDqCABByccMMTb3jCDU7QKSp1IAAAAAAADADwAACQXAAREdHMYWRobHB0eHyAhIiMkAgAAAAAABcAfAAAJCVAREQ0cxgZGhscHR4fICEiIyQBAIAAAgAAAAAggAAEBAQAAAAAAAIAAAAEBB9DtnUBAAAAAAAEPueBAKOFggAAgACjzoEAA4BwBwCdASqwAJAAAEcIhYWIhYSIAgIABhwJ7kPfbJyHvtk5D32ych77ZOQ99snIe+2TkPfbJyHvtk5D32ych77ZOQ99YAD+/6tQgKOFggADgAqjhYIAD4AOo4WCACSADqOZgQArADECAAEQEAAYABhYL/QACIBDmAYAAKOFggA6gA6jhYIAT4AOo5mBAFMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAGSADqOFggB6gA6jmYEAewAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAj4AOo5mBAKMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAKSADqOFggC6gA6jmYEAywAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAz4AOo4WCAOSADqOZgQDzADECAAEQEAAYABhYL/QACIBDmAYAAKOFggD6gA6jhYIBD4AOo5iBARsAEQIAARAQFGAAYWC/0AAiAQ5gGACjhYIBJIAOo4WCATqADqOZgQFDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggFPgA6jhYIBZIAOo5mBAWsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAXqADqOFggGPgA6jmYEBkwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIBpIAOo4WCAbqADqOZgQG7ADECAAEQEAAYABhYL/QACIBDmAYAAKOFggHPgA6jmYEB4wAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIB5IAOo4WCAfqADqOZgQILADECAAEQEAAYABhYL/QACIBDmAYAAKOFggIPgA6jhYICJIAOo5mBAjMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAjqADqOFggJPgA6jmYECWwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYICZIAOo4WCAnqADqOZgQKDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggKPgA6jhYICpIAOo5mBAqsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCArqADqOFggLPgA6jmIEC0wARAgABEBAUYABhYL/QACIBDmAYAKOFggLkgA6jhYIC+oAOo5mBAvsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAw+ADqOZgQMjADECAAEQEAAYABhYL/QACIBDmAYAAKOFggMkgA6jhYIDOoAOo5mBA0sAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA0+ADqOFggNkgA6jmYEDcwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIDeoAOo4WCA4+ADqOZgQObADECAAEQEAAYABhYL/QACIBDmAYAAKOFggOkgA6jhYIDuoAOo5mBA8MAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA8+ADqOFggPkgA6jhYID+oAOo4WCBA+ADhxTu2sBAAAAAAAAEbuPs4EDt4r3gQHxghEr8IEK'\n    },\n\n    MIME_TYPES: {\n        image: [\n            'image/gif',\n            'image/jpeg',\n            'image/pjpeg',\n            'image/png',\n            'image/svg+xml',\n            'image/tiff',\n            'image/vnd.microsoft.icon',\n            'image/vnd.wap.wbmp',\n            'image/webp'\n        ],\n        audio: [\n            'audio/basic',\n            'audio/L24',\n            'audio/mp4',\n            'audio/aac',\n            'audio/mpeg',\n            'audio/ogg',\n            'audio/ogg; codecs=opus',\n            'audio/ogg; codecs=opus+voice',\n            'audio/vorbis',\n            'audio/x-ms-wma',\n            'audio/x-ms-wax',\n            'audio/vnd.rn-realaudio',\n            'audio/vnd.wave',\n            'audio/webm',\n            'audio/x-wav'\n        ],\n        video: [\n            'video/mpeg',\n            'video/mp4',\n            'video/ogg',\n            'video/quicktime',\n            'video/webm',\n            'video/x-ms-wmv',\n            'video/x-flv',\n            'video/3gpp',\n            'video/3gpp2'\n        ],\n        document: [\n            'text/cmd',\n            'text/css',\n            'text/csv',\n            'text/html',\n            'text/javascript (Obsolete)',\n            'text/plain',\n            'text/php',\n            'text/xml',\n            'text/markdown',\n            'text/cache-manifestapplication/json',\n            'application/xml',\n            'application/vnd.oasis.opendocument.text',\n            'application/vnd.oasis.opendocument.graphics',\n            'application/msword'\n        ],\n        pdf: [\n            'application/pdf'\n        ],\n        table: [\n            'application/vnd.oasis.opendocument.spreadsheet',\n            'application/vnd.ms-excel'\n        ],\n        archive: [\n            'application/zip',\n            'application/gzip',\n            'application/x-rar-compressed',\n            'application/x-tar',\n            'application/x-7z-compressed'\n        ],\n        presentation: [\n            'application/vnd.ms-powerpoint',\n            'application/vnd.oasis.opendocument.presentation'\n        ]\n    },\n\n    languages: {\n        \"en\": \"English\",\n        \"ar-SA\": \"العربية\",\n        \"az-AZ\": \"Azərbaycanca\",\n        \"be-BY\": \"Беларуская\",\n        \"bg-BG\": \"Български\",\n        \"bs-BA\": \"Bosanski\",\n        \"ca-ES\": \"Català\",\n        \"cs-CZ\": \"Čeština\",\n        \"cy-GB\": \"Cymraeg\",\n        \"da-DK\": \"Dansk\",\n        \"de-DE\": \"Deutsch\",\n        \"el-GR\": \"Ελληνικά\",\n        \"es419\": \"Spanish Latin America\",\n        \"es-ES\": \"Español\",\n        \"et-EE\": \"Eesti\",\n        \"fa-IR\": \"فارسی\",\n        \"fi-FI\": \"Suomi\",\n        \"fil-PH\": \"Pilipino\",\n        \"fr-FR\": \"Français\",\n        \"ga-IE\": \"Gaeilge\",\n        \"he\": \"עברית\",\n        \"hi-IN\": \"हिन्दी\",\n        \"hr-HR\": \"Hrvatski\",\n        \"hu-HU\": \"Magyar\",\n        \"hy-AM\": \"Հայերեն\",\n        \"in-ID\": \"Bahasa Indonesia\",\n        \"is-IS\": \"Íslenska\",\n        \"it-IT\": \"Italiano\",\n        \"ja-JP\": \"日本語\",\n        \"ka-GE\": \"ქართული\",\n        \"kmr-TR\": \"Kurmancî (Kurdî)\",\n        \"ko-KR\": \"한국어\",\n        \"ku-TR\": \"Kurdî\",\n        \"ky-KG\": \"Кыргызча\",\n        \"la-LA\": \"Latina\",\n        \"lb-LU\": \"Luxembourgish\",\n        \"lt-LT\": \"Lietuvių\",\n        \"mk-MK\": \"Македонски\",\n        \"mn-MN\": \"Монгол\",\n        \"mr-IN\": \"मराठी\",\n        \"ms-MY\": \"Bahasa Melayu\",\n        \"nb-NO\": \"Norsk (bokmål)\",\n        \"ne-NP\": \"Nepālī\",\n        \"nl-NL\": \"Nederlands\",\n        \"no-NO\": \"Norsk (nynorsk)\",\n        \"oc-FR\": \"Occitan\",\n        \"pa-IN\": \"ਪੰਜਾਬੀ (ਗੁਰਮੁਖੀ)\",\n        \"pl-PL\": \"Polski\",\n        \"pt-BR\": \"Português, brasileiro\",\n        \"pt-PT\": \"Português\",\n        \"qya-AA\": \"quenya\",\n        \"ro-RO\": \"Română\",\n        \"ru-RU\": \"Русский\",\n        \"sco-GB\": \"Scots\",\n        \"si-LK\": \"සිංහල\",\n        \"sk-SK\": \"Slovenčina\",\n        \"sl-SI\": \"Slovenščina\",\n        \"sq-AL\": \"Shqip\",\n        \"sr-Cyrl-ME\": \"Montenegrin (Cyrillic)\",\n        \"sr-SP\": \"Српски / Srpski\",\n        \"sv-SE\": \"Svenska\",\n        \"sw-KE\": \"Kiswahili\",\n        \"ta-IN\": \"தமிழ்\",\n        \"te-IN\": \"తెలుగు\",\n        \"tg-TJ\": \"Тоҷикӣ\",\n        \"tk-TM\": \"Türkmençe\",\n        \"tlh-AA\": \"Klingon\",\n        \"tr-TR\": \"Türkçe\",\n        \"uk-UA\": \"Українська\",\n        \"uz-UZ\": \"Oʻzbekcha / Ўзбекча\",\n        \"vi-VN\": \"Tiếng Việt\",\n        \"yo-NG\": \"Yorùbá\",\n        \"zh-CN\": \"简体中文\",\n        \"zh-TW\": \"中國傳統的\",\n        \"zu-ZA\": \"isiZulu\"\n    },\n\n    languages_another_locales: {\n        \"es419\": \"es-latin\",\n        \"in-ID\": \"id\"\n    },\n\n    PERSONAL_AREA_URL: {},\n\n    XABBER_ACCOUNT_URL: 'https://www.xabber.com/account',\n    USE_SOCIAL_AUTH: true,\n    REGISTER_XMPP_ACCOUNT: true,\n    REGISTER_XMPP_ACCOUNT_URL: 'https://www.xabber.com/account/auth/signup/',\n    CHECK_VERSION: true,\n    DEFAULT_LOGIN_SCREEN: 'xmpp',\n\n    GCM_SENDER_ID: '868637702480',\n    GCM_API_KEY: 'AIzaSyC1JCBB3LLf_4DG_vRWMEEe0I4X5msEU-M',\n    MESSAGE_ARCHIVE_DB_NAME: 'MessageArchive',\n    STANZA_MAX_SIZE: Math.pow(2, 16),\n\n    BLUR_VALUE: 25,\n    VIGNETTING_VALUE: 128,\n    TRANSPARENCY_VALUE: 50,\n\n    MAIN_COLOR: 'red',\n    CLIENT_NAME: 'Xabber for Web',\n    SHORT_CLIENT_NAME: 'Xabber',\n    SHORT_CLIENT_DESCRIPTION: 'World’s best XMPP experience',\n    CLIENT_LOGO: 'assets/images/xabber-logo-96.png',\n    TOOLBAR_LOGO: 'assets/images/xabber-logo.png',\n    ENABLE_XABBER_ACCOUNT: false,\n    SCREEN_ABOUT: true,\n    BACKGROUND_IMAGES_XML_URL: 'https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/background-images.xml',\n    BACKGROUND_PATTERNS_XML_URL: 'https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/background-patterns.xml',\n    DEVELOPER_URL: 'https://redsolution.com',\n    CLIENT_GITHUB_URL: 'https://github.com/redsolution/xabber-web',\n    PROJECT_CROWDIN_URL: 'https://crowdin.com/project/xabber',\n    CLIENT_LICENSE_GITHUB_URL: 'https://github.com/redsolution/xabber-web/blob/master/LICENSE',\n    DEFAULT_EMOJI_FONT: 'notoColor',\n\n    EMOJI_FONTS_LIST: {\n        notoColor: {\n            name: 'NotoColorEmoji',\n            value: 'notoColor',\n            url: '../assets/fonts/notocolor/NotoColorEmoji-Regular.ttf',\n            hint: 'Locally stored NotoColorEmoji font, size is 23MB',\n            attribution_text: 'Copyright 2021 Google Inc. All Rights Reserved.',\n            order: 0\n\n        },\n    },\n};\n\nconstants.JINGLE_MSG_STATE = {};\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_REJECT] = 'reject';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_PROPOSE] = 'propose';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_ACCEPT] = 'accept';\n\nconstants.MSG_STATE = {};\nconstants.MSG_STATE[constants.MSG_ERROR] = 'error';\nconstants.MSG_STATE[constants.MSG_PENDING] = 'pending';\nconstants.MSG_STATE[constants.MSG_SENT] = 'sent';\nconstants.MSG_STATE[constants.MSG_DELIVERED] = 'delivered';\nconstants.MSG_STATE[constants.MSG_DISPLAYED] = 'displayed';\nconstants.MSG_STATE[constants.MSG_ARCHIVED] = 'archived';\nconstants.MSG_STATE[constants.MSG_BLOCKED] = 'not-allowed';\nconstants.MSG_STATE[constants.MSG_SAVED] = 'saved';\n\nconstants.MSG_VERBOSE_STATE = {};\nconstants.MSG_VERBOSE_STATE[constants.MSG_ERROR] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_PENDING] = 'message__delivering_state__pending';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SENT] = 'message__delivering_state__sent';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DELIVERED] = 'message__delivering_state__delivered';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DISPLAYED] = 'message__delivering_state__displayed';\nconstants.MSG_VERBOSE_STATE[constants.MSG_ARCHIVED] = 'message__delivering_state__archived';\nconstants.MSG_VERBOSE_STATE[constants.MSG_BLOCKED] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SAVED] = 'message__delivering_state__saved';\n\nexport default constants;\n","// only external libs and plugins for them\n// import Backbone from \"backbone\";\nimport \"backbone\";\nimport _ from \"underscore\";\nimport $ from \"jquery\";\nimport moment from \"moment\";\nimport WaveSurfer from \"wavesurfer\";\nimport slug from \"slug\";\nimport sha256 from \"sha256\";\nimport magnificPopup from \"magnific-popup\";\nimport i18next from \"i18next\";\nimport i18next_sprintf from \"i18next-post\";\nimport Strophe from \"strophe\";\nimport plyr from \"Plyr\";\nimport Quill from \"Quill\";\nimport libsignal from \"libsignal-protocol\";\nimport sha1 from \"sha1_hasher\";\nimport Recorder from 'opus-recorder';\nimport encoderPath from 'opus-recorder/dist/encoderWorker.min.js';\nimport VanillaQR from \"VanillaQR\";\nimport idleJs from \"idle-js\";\nimport backgroundImagesXml from \"xml-loader!~/xmls/background-images.xml\";\nimport backgroundPatternsXml from \"xml-loader!~/xmls/background-patterns.xml\";\nimport \"~/css/color-scheme.css\";\nimport \"~/css/materialdesignicons.css\";\nimport \"~/css/materialize.css\";\nimport \"~/css/plyr.css\";\nimport \"~/css/quill.snow.css\";\nimport \"~/css/xabber.css\";\nimport \"~/node_modules/magnific-popup/dist/magnific-popup.css\";\nimport \"~/node_modules/perfect-scrollbar/dist/css/perfect-scrollbar.css\";\nimport \"strophe.disco\";\nimport \"strophe.ping\";\nimport \"strophe.rsm\";\nimport \"strophe.caps\";\nimport \"strophe.pubsub\";\nimport \"omemo\";\nimport \"backbone.localsync\";\nimport \"materialize\";\nimport \"perfectScrollbarJQuery\";\n\nexport default _.extend({\n    $: $,\n    _: _,\n    moment: moment,\n    WaveSurfer: WaveSurfer,\n    Plyr: plyr,\n    Quill: Quill,\n    libsignal: libsignal,\n    slug: slug,\n    sha1: sha1,\n    idleJs: idleJs,\n    opusRecorder: Recorder,\n    opusRecorderEncoderPath: encoderPath,\n    xabber_i18next: i18next,\n    xabber_i18next_sprintf: i18next_sprintf,\n    sha256: sha256,\n    VanillaQR: VanillaQR,\n    magnificPopup: magnificPopup,\n    backgroundImagesXml: backgroundImagesXml,\n    backgroundPatternsXml: backgroundPatternsXml,\n    Strophe: Strophe\n}, Strophe);\n","    import _ from \"underscore\";\n    import $ from \"jquery\";\n\n    _.templateSettings = {\n        evaluate : /\\{\\[([\\s\\S]+?)\\]\\}/g,\n        interpolate : /\\{\\{([\\s\\S]+?)\\}\\}/g\n    };\n\n    let templates = {};\n\n    let insertSvg = function (html) {\n        let $html = $('<div/>').html(html);\n        $html.find('.mdi-svg-template').each(function () {\n            let $el = $(this),\n                svg_name = $el.data('svgname');\n            $el.removeClass('mdi-svg-template').addClass('mdi-'+svg_name)\n                .attr('data-svgname', null);\n            $el.html(templates.svg[svg_name]());\n        });\n        return $html.html();\n    };\n\n    let _addTemplate = function (name, options) {\n        options || (options = {});\n        let path = name.split('.'),\n            tpl = _.template(require('raw-loader!~/templates/'+path.join('/')+'.html').default),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        if (options.is_svg) {\n            res[tpl_name] = tpl;\n        } else {\n            res[tpl_name] = function (data) {\n                return insertSvg(tpl(data));\n            };\n        }\n    };\n\n    let addJSONTemplate = function (name, ) {\n        let path = name.split('.'),\n            tpl = require('~/templates/'+path.join('/')+'.json'),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        res[tpl_name] = tpl;\n    };\n\n    let addTemplate = function (name) {\n        _addTemplate(name, {is_svg: false});\n    };\n\n    let addSvgTemplate = function (name) {\n        _addTemplate(name, {is_svg: true});\n    };\n\n\n    addTemplate('base.dialog');\n    addTemplate('base.fingerprints');\n    addTemplate('base.fingerprints_devices');\n    addTemplate('base.fingerprint_item');\n    addTemplate('base.fingerprint_devices_item');\n    addTemplate('base.jingle_message_calling');\n    addTemplate('base.plyr_player_popup');\n    addTemplate('base.input_widget');\n    addTemplate('base.toolbar');\n    addTemplate('base.settings');\n    addTemplate('base.settings_modal');\n    addTemplate('base.setting_radio_input');\n    addTemplate('base.setting_emoji_font_radio_input');\n    addTemplate('base.setting_language_radio_input');\n    addTemplate('base.about');\n    addTemplate('base.omemo_enable');\n    addTemplate('base.backgrounds_gallery');\n    addTemplate('base.color_picker');\n    addTemplate('base.color_scheme');\n\n    addTemplate('accounts.xmpp_login');\n    addTemplate('accounts.add_account');\n    addTemplate('accounts.unregister_account');\n    addTemplate('accounts.change_password');\n    addTemplate('accounts.change_account_password');\n    addTemplate('accounts.toolbar_item');\n    addTemplate('accounts.media_gallery_account_file');\n    addTemplate('accounts.media_gallery_account');\n    addTemplate('accounts.delete_files_media_gallery');\n    addTemplate('accounts.single_account_settings_modal');\n    addTemplate('accounts.account_settings_modal');\n    addTemplate('accounts.existing_groupchat_item');\n    addTemplate('accounts.resource');\n    addTemplate('accounts.resource_right');\n    addTemplate('accounts.webcam_panel');\n    addTemplate('accounts.emoji_panel');\n    addTemplate('accounts.emoji_picker');\n    addTemplate('accounts.emoji_picker_tabs');\n    addTemplate('accounts.global_settings_item_modal');\n    addTemplate('accounts.change_status');\n    addTemplate('accounts.token_item_modal');\n    addTemplate('accounts.current_token_item_modal');\n    addTemplate('accounts.audio_file_waveform');\n    addTemplate('accounts.avatars_gallery');\n    addTemplate('accounts.status_message_input_widget');\n\n    addTemplate('vcard.vcard');\n    addTemplate('vcard.vcard_modal');\n    addTemplate('vcard.vcard_edit_modal');\n    addTemplate('vcard.vcard_right');\n\n    addTemplate('searching.searching_wide');\n    addTemplate('searching.searching_account_item');\n    addTemplate('searching.existing_groupchat_item');\n    addTemplate('searching.existing_groupchat_details_view');\n\n    addTemplate('contacts.roster_right');\n    addTemplate('contacts.roster_left');\n    addTemplate('contacts.account_roster_right');\n    addTemplate('contacts.account_roster_left');\n    addTemplate('contacts.group_right');\n    addTemplate('contacts.group_left');\n    addTemplate('contacts.add_contact');\n    addTemplate('contacts.contact_right_item');\n    addTemplate('contacts.contact_left_item');\n    addTemplate('contacts.contact_blocked_item');\n    addTemplate('contacts.contact_details_right');\n    addTemplate('contacts.roster_settings');\n    addTemplate('contacts.group_settings');\n    addTemplate('contacts.groups_checkbox_list');\n    addTemplate('contacts.groups_checkbox_list_contact');\n    addTemplate('contacts.groups_new_group');\n    addTemplate('contacts.groups_list');\n    addTemplate('contacts.add_contact_account_item');\n    addTemplate('contacts.contact_placeholder');\n    addTemplate('contacts.groups');\n    addTemplate('contacts.edit_contact');\n    addTemplate('contacts.edit_group');\n    addTemplate('contacts.preloader');\n    addTemplate('contacts.media_item');\n    addTemplate('contacts.media_items_empty');\n    addTemplate('contacts.audio_file_waveform');\n    addTemplate('contacts.group_chats.group_chat_properties');\n    addTemplate('contacts.group_chats.group_chat_properties_right');\n    addTemplate('contacts.group_chats.group_chat_details');\n    addTemplate('contacts.group_chats.group_chat_details_right');\n    addTemplate('contacts.group_chats.invitation');\n    addTemplate('contacts.group_chats.group_chat_properties_edit');\n    addTemplate('contacts.group_chats.default_restrictions');\n    addTemplate('contacts.group_chats.default_restrictions_right');\n    addTemplate('contacts.group_chats.group_member_item');\n    addTemplate('contacts.group_chats.group_member_item_right');\n    addTemplate('contacts.group_chats.description_input_widget');\n    addTemplate('contacts.group_chats.group_name_input_widget');\n    addTemplate('contacts.group_chats.participant_badge_input_widget');\n    addTemplate('contacts.group_chats.invited_member_item');\n    addTemplate('contacts.group_chats.add_blocked_participant_form');\n    addTemplate('contacts.group_chats.participant_details_right');\n    addTemplate('contacts.group_chats.participant_rights');\n    addTemplate('contacts.group_chats.restriction_item');\n    addTemplate('contacts.group_chats.right_expire_variants');\n    addTemplate('contacts.group_chats.pinned_message');\n    addTemplate('contacts.group_chats.participant_details_item_right');\n    addTemplate('contacts.group_chats.participant_details_item');\n    addTemplate('contacts.group_chats.participants');\n    addTemplate('contacts.group_chats.participants_right_panel');\n    addTemplate('contacts.group_chats.badge_edit_view');\n    addTemplate('contacts.group_chats.private_participant_details');\n    addTemplate('contacts.group_chats.private_participant_details_item_right');\n    addTemplate('contacts.group_chats.set_status');\n    addTemplate('contacts.group_chats.status_item');\n    addTemplate('contacts.group_chats.group_status');\n    addTemplate('contacts.group_chats.group_status_right');\n    addTemplate('contacts.group_chats.file_item');\n\n    addTemplate('chats.chats_panel');\n    addTemplate('chats.add_chat_account_item');\n    addTemplate('chats.chat_item');\n    addTemplate('chats.chat_head');\n    addTemplate('chats.send_media');\n    addTemplate('chats.saved_chat_head');\n    addTemplate('chats.chat_content');\n    addTemplate('chats.chat_content_placeholder');\n    addTemplate('chats.chat_content_contact');\n    addTemplate('chats.chat_bottom');\n    addTemplate('chats.unread_marker');\n    addTemplate('chats.location_popup');\n    addTemplate('chats.subscription_buttons');\n    addTemplate('chats.forward_panel');\n    addTemplate('chats.chat_placeholder');\n    addTemplate('chats.message_item');\n    addTemplate('chats.messages.main');\n    addTemplate('chats.messages.searched');\n    addTemplate('chats.messages.forwarded');\n    addTemplate('chats.messages.system');\n    addTemplate('chats.messages.file_upload');\n    addTemplate('chats.messages.loading_circle');\n    addTemplate('chats.messages.file');\n    addTemplate('chats.messages.file_loading');\n    addTemplate('chats.messages.link_reference');\n    addTemplate('chats.messages.link_reference_chat');\n    addTemplate('chats.messages.attached_file');\n    addTemplate('chats.messages.video');\n    addTemplate('chats.messages.location');\n    addTemplate('chats.messages.audio_file');\n    addTemplate('chats.messages.audio_file_waveform');\n    addTemplate('chats.messages.auth_request');\n    addTemplate('chats.messages.group_request');\n    addTemplate('chats.messages.template-for-2');\n    addTemplate('chats.messages.template-for-3');\n    addTemplate('chats.messages.template-for-4');\n    addTemplate('chats.messages.template-for-5');\n    addTemplate('chats.messages.template-for-6');\n    addTemplate('chats.messages.hidden-template-for-2');\n    addTemplate('chats.messages.hidden-template-for-3');\n    addTemplate('chats.messages.hidden-template-for-4');\n    addTemplate('chats.messages.hidden-template-for-5');\n    addTemplate('chats.messages.hidden-template-for-6');\n    addTemplate('chats.messages.images_details');\n    addTemplate('chats.messages.saved_main');\n    addTemplate('chats.group_chats.pinned_message_panel');\n    addTemplate('chats.group_chats.add_group_chat');\n    addTemplate('chats.group_chats.invitation_panel_view');\n    addTemplate('chats.group_chats.mention_item');\n    addTemplate('chats.encryption_warning');\n    addTemplate('chats.content_encryption_warning');\n\n\n    addTemplate('mentions.mentions_panel');\n    addTemplate('mentions.mentions_placeholder');\n    addTemplate('mentions.mention_item');\n\n    addSvgTemplate('svg.ic-jabber');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.account-outline');\n    addSvgTemplate('svg.qrcode');\n    addSvgTemplate('svg.id-outline');\n    addSvgTemplate('svg.clock-outline');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.restrictions-outline');\n    addSvgTemplate('svg.history');\n    addSvgTemplate('svg.chevron-down');\n    addSvgTemplate('svg.camera');\n    addSvgTemplate('svg.camera-retake');\n    addSvgTemplate('svg.membership-outline');\n    addSvgTemplate('svg.invite');\n    addSvgTemplate('svg.invite-outline');\n    addSvgTemplate('svg.chevron-right-variant');\n    addSvgTemplate('svg.chevron-left-variant');\n    addSvgTemplate('svg.subscription-to');\n    addSvgTemplate('svg.subscription-from');\n    addSvgTemplate('svg.image');\n    addSvgTemplate('svg.file-audio');\n    addSvgTemplate('svg.file-video');\n    addSvgTemplate('svg.file-document');\n    addSvgTemplate('svg.file-presentation');\n    addSvgTemplate('svg.file-zip');\n    addSvgTemplate('svg.file');\n    addSvgTemplate('svg.file-pdf');\n    addSvgTemplate('svg.close');\n    addSvgTemplate('svg.link');\n    addSvgTemplate('svg.picture-in-picture-minimize');\n    addSvgTemplate('svg.picture-in-picture-bottom-right');\n    addSvgTemplate('svg.picture-in-picture-top-right');\n    addSvgTemplate('svg.pause');\n    addSvgTemplate('svg.volume-off');\n    addSvgTemplate('svg.volume-high');\n    addSvgTemplate('svg.plyr');\n    addSvgTemplate('svg.plus');\n    addSvgTemplate('svg.player-float');\n    addSvgTemplate('svg.player-full');\n    addSvgTemplate('svg.player-mini-variant');\n    addSvgTemplate('svg.player-mini');\n    addSvgTemplate('svg.message-bookmark-outline');\n    addSvgTemplate('svg.play');\n    addSvgTemplate('svg.video');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.status');\n    addSvgTemplate('svg.status-outline');\n    addSvgTemplate('svg.birthday');\n    addSvgTemplate('svg.birthday-outline');\n    addSvgTemplate('svg.web');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.job');\n    addSvgTemplate('svg.job-outline');\n    addSvgTemplate('svg.address');\n    addSvgTemplate('svg.address-outline');\n    addSvgTemplate('svg.email');\n    addSvgTemplate('svg.email-outline');\n    addSvgTemplate('svg.description');\n    addSvgTemplate('svg.description-outline');\n    addSvgTemplate('svg.contact-add');\n    addSvgTemplate('svg.check');\n    addSvgTemplate('svg.call-outline');\n    addSvgTemplate('svg.call');\n    addSvgTemplate('svg.search');\n    addSvgTemplate('svg.device-cellphone');\n    addSvgTemplate('svg.device-console');\n    addSvgTemplate('svg.device-desktop');\n    addSvgTemplate('svg.device-tablet');\n    addSvgTemplate('svg.device-web');\n    addSvgTemplate('svg.devices');\n    addSvgTemplate('svg.bell');\n    addSvgTemplate('svg.bell-sleep');\n    addSvgTemplate('svg.bell-off');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.trash');\n    addSvgTemplate('svg.client');\n    addSvgTemplate('svg.client-outline');\n    addSvgTemplate('svg.database-lock');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.bug');\n    addSvgTemplate('svg.cloud');\n    addSvgTemplate('svg.key');\n    addSvgTemplate('svg.key-variant');\n    addSvgTemplate('svg.account');\n    addSvgTemplate('svg.alert-circle');\n    addSvgTemplate('svg.security');\n    addSvgTemplate('svg.edit');\n    addSvgTemplate('svg.edit-outline');\n    addSvgTemplate('svg.check-circle');\n    addSvgTemplate('svg.blocked-add');\n    addSvgTemplate('svg.information-outline');\n    addSvgTemplate('svg.information');\n    addSvgTemplate('svg.fullname');\n    addSvgTemplate('svg.fullname-outline');\n    addSvgTemplate('svg.ic-at');\n    addSvgTemplate('svg.ic-searching');\n    addSvgTemplate('svg.blocked');\n    addSvgTemplate('svg.bot');\n    addSvgTemplate('svg.bot-variant');\n    addSvgTemplate('svg.group-incognito');\n    addSvgTemplate('svg.group-invite');\n    addSvgTemplate('svg.group-public');\n    addSvgTemplate('svg.task');\n    addSvgTemplate('svg.group-private');\n    addSvgTemplate('svg.channel');\n    addSvgTemplate('svg.rss');\n    addSvgTemplate('svg.rss-variant');\n    addSvgTemplate('svg.server');\n    addSvgTemplate('svg.volume-off-variant');\n    addSvgTemplate('svg.message-group');\n    addSvgTemplate('svg.xabber-offline');\n    addSvgTemplate('svg.xabber-online');\n    addSvgTemplate('svg.saved-messages');\n    addSvgTemplate('svg.account-cancel');\n    addSvgTemplate('svg.web-cancel');\n    addSvgTemplate('svg.palette');\n    addSvgTemplate('svg.chat');\n    addSvgTemplate('svg.star-face');\n    addSvgTemplate('svg.alarm-bell');\n    addSvgTemplate('svg.id');\n    addSvgTemplate('svg.expires');\n    addSvgTemplate('svg.database');\n    addSvgTemplate('svg.download');\n    addSvgTemplate('svg.lock');\n    addSvgTemplate('svg.lock-open');\n    addSvgTemplate('svg.lock-alert');\n    addSvgTemplate('svg.lock-check');\n    addSvgTemplate('svg.lock-cross');\n    addSvgTemplate('svg.lock-question');\n    addSvgTemplate('svg.circles');\n    addSvgTemplate('svg.circles-outline');\n    addSvgTemplate('svg.circle-slice-1');\n    addSvgTemplate('svg.circle-slice-2');\n    addSvgTemplate('svg.circle-slice-3');\n    addSvgTemplate('svg.circle-slice-4');\n    addSvgTemplate('svg.circle-slice-5');\n    addSvgTemplate('svg.circle-slice-6');\n    addSvgTemplate('svg.circle-slice-7');\n    addSvgTemplate('svg.circle-slice-8');\n    addSvgTemplate('svg.translate');\n    addSvgTemplate('svg.trash');\n    addSvgTemplate('svg.crosshairs-gps');\n    addSvgTemplate('svg.crosshairs-question');\n    addSvgTemplate('svg.crosshairs');\n    addSvgTemplate('svg.map-marker-outline');\n    addSvgTemplate('svg.map-marker');\n    addSvgTemplate('svg.minus');\n\n    addJSONTemplate('accounts.emojis');\n\n    export default templates;","\n    let sounds = {};\n\n    let attention_json = require('~/sounds/attention/attention.json'),\n        attention = [];\n\n\n    Object.keys(attention_json).forEach(item => {\n        let audio = require(`~/sounds/attention/${item}/${item}.mp3`),\n            attention_sound = {\n                file_name: item,\n                name: attention_json[item].name,\n                audio: audio,\n                not_selectable: attention_json[item].not_selectable,\n        };\n        attention.push(attention_sound);\n    });\n\n    let ringtones_json = require('~/sounds/ringtones/ringtones.json'),\n        ringtones = [];\n\n\n    Object.keys(ringtones_json).forEach(item => {\n        let audio = require(`~/sounds/ringtones/${item}/${item}.mp3`),\n            ringtone = {\n                file_name: item,\n                name: ringtones_json[item].name,\n                audio: audio,\n                not_selectable: ringtones_json[item].not_selectable,\n        };\n        ringtones.push(ringtone);\n    });\n\n    let dialtones_json = require('~/sounds/dialtones/dialtones.json'),\n        dialtones = [];\n\n\n    Object.keys(dialtones_json).forEach(item => {\n        let audio = require(`~/sounds/dialtones/${item}/${item}.mp3`),\n            dialtone = {\n                file_name: item,\n                name: dialtones_json[item].name,\n                audio: audio,\n                not_selectable: dialtones_json[item].not_selectable,\n        };\n        dialtones.push(dialtone);\n    });\n\n    let notifications_json = require('~/sounds/notifications/notifications.json'),\n        notifications = [];\n\n\n    Object.keys(notifications_json).forEach(item => {\n        let audio = require(`~/sounds/notifications/${item}/${item}.mp3`),\n            notification = {\n                file_name: item,\n                name: notifications_json[item].name,\n                audio: audio,\n                not_selectable: notifications_json[item].not_selectable,\n        };\n        notifications.push(notification);\n    });\n\n    let system_json = require('~/sounds/system/system.json'),\n        system_sound_list = [];\n\n\n    Object.keys(system_json).forEach(item => {\n        let audio = require(`~/sounds/system/${item}/${item}.mp3`),\n            system_item = {\n                file_name: item,\n                name: system_json[item].name,\n                audio: audio,\n                not_selectable: system_json[item].not_selectable,\n        };\n        system_sound_list.push(system_item);\n    });\n\n    sounds.attention = attention;\n    sounds.ringtones = ringtones;\n    sounds.dialtones = dialtones;\n    sounds.notifications = notifications;\n    sounds.system = system_sound_list;\n    sounds.all_sounds = attention.concat(ringtones).concat(dialtones).concat(notifications).concat(system_sound_list);\n\n    export default sounds;","import _ from \"underscore\";\nimport $ from \"jquery\";\nimport constants from \"xabber-constants\";\n\nvar raw_data = {\n    \"smiles_and_people\": [{code:0x1f600,x:9,y:3},{code:0x1f603,x:12,y:3},{code:0x1f604,x:13,y:3},{code:0x1f601,x:10,y:3},{code:0x1f606,x:1,y:4},{code:0x1f605,x:0,y:4},{code:0x1f923,x:6,y:10},{code:0x1f602,x:11,y:3},{code:0x1f642,x:5,y:8},{code:0x1f643,x:6,y:8},{code:0x1f609,x:4,y:4},{code:0x1f60a,x:5,y:4},{code:0x1f607,x:2,y:4},{code:0x1f60d,x:8,y:4},{code:0x1f929,x:12,y:10},{code:0x1f617,x:4,y:5},{code:0x263a,x:14,y:5},{code:0x1f61a,x:7,y:5},{code:0x1f619,x:6,y:5},{code:0x1f60b,x:6,y:4},{code:0x1f61b,x:8,y:5},{code:0x1f61c,x:9,y:5},{code:0x1f92a,x:13,y:10},{code:0x1f61d,x:10,y:5},{code:0x1f911,x:10,y:9},{code:0x1f917,x:2,y:10},{code:0x1f92d,x:2,y:11},{code:0x1f92b,x:0,y:11},{code:0x1f914,x:13,y:9},{code:0x1f910,x:9,y:9},{code:0x1f928,x:11,y:10},{code:0x1f610,x:11,y:4},{code:0x1f611,x:12,y:4},{code:0x1f636,x:7,y:7},{code:0x1f60f,x:10,y:4},{code:0x1f612,x:13,y:4},{code:0x1f644,x:7,y:8},{code:0x1f62c,x:11,y:6},{code:0x1f925,x:8,y:10},{code:0x1f60c,x:7,y:4},{code:0x1f614,x:1,y:5},{code:0x1f62a,x:9,y:6},{code:0x1f924,x:7,y:10},{code:0x1f634,x:5,y:7},{code:0x1f637,x:8,y:7},{code:0x1f912,x:11,y:9},{code:0x1f915,x:0,y:10},{code:0x1f922,x:5,y:10},{code:0x1f92e,x:3,y:11},{code:0x1f927,x:10,y:10},{code:0x1f975,x:7,y:12},{code:0x1f976,x:8,y:12},{code:0x1f974,x:6,y:12},{code:0x1f635,x:6,y:7},{code:0x1f92f,x:4,y:11},{code:0x1f920,x:3,y:10},{code:0x1f973,x:5,y:12},{code:0x1f60e,x:9,y:4},{code:0x1f913,x:12,y:9},{code:0x1f9d0,x:1,y:13},{code:0x1f615,x:2,y:5},{code:0x1f61f,x:12,y:5},{code:0x1f641,x:4,y:8},{code:0x2639,x:14,y:4},{code:0x1f62e,x:13,y:6},{code:0x1f62f,x:0,y:7},{code:0x1f632,x:3,y:7},{code:0x1f633,x:4,y:7},{code:0x1f97a,x:9,y:12},{code:0x1f626,x:5,y:6},{code:0x1f627,x:6,y:6},{code:0x1f628,x:7,y:6},{code:0x1f630,x:1,y:7},{code:0x1f625,x:4,y:6},{code:0x1f622,x:1,y:6},{code:0x1f62d,x:12,y:6},{code:0x1f631,x:2,y:7},{code:0x1f616,x:3,y:5},{code:0x1f623,x:2,y:6},{code:0x1f61e,x:11,y:5},{code:0x1f613,x:0,y:5},{code:0x1f629,x:8,y:6},{code:0x1f62b,x:10,y:6},{code:0x1f624,x:3,y:6},{code:0x1f621,x:0,y:6},{code:0x1f620,x:13,y:5},{code:0x1f92c,x:1,y:11},{code:0x1f608,x:3,y:4},{code:0x1f47f,x:9,y:2},{code:0x1f480,x:10,y:2},{code:0x2620,x:14,y:3},{code:0x1f4a9,x:4,y:3},{code:0x1f921,x:4,y:10},{code:0x1f479,x:3,y:2},{code:0x1f47a,x:4,y:2},{code:0x1f47b,x:5,y:2},{code:0x1f47d,x:7,y:2},{code:0x1f47e,x:8,y:2},{code:0x1f916,x:1,y:10},{code:0x1f63a,x:11,y:7},{code:0x1f638,x:9,y:7},{code:0x1f639,x:10,y:7},{code:0x1f63b,x:12,y:7},{code:0x1f63c,x:13,y:7},{code:0x1f63d,x:0,y:8},{code:0x1f640,x:3,y:8},{code:0x1f63f,x:2,y:8},{code:0x1f63e,x:1,y:8},{code:0x1f648,x:11,y:8},{code:0x1f649,x:12,y:8},{code:0x1f64a,x:13,y:8},{code:0x1f476,x:0,y:2},{code:0x1f9d2,x:3,y:13},{code:0x1f466,x:12,y:0},{code:0x1f467,x:13,y:0},{code:0x1f471,x:9,y:1},{code:0x1f9d4,x:5,y:13},{code:0x1f9d3,x:4,y:13},{code:0x1f474,x:12,y:1},{code:0x1f475,x:13,y:1},{code:0x1f64d,x:1,y:9},{code:0x1f64e,x:2,y:9},{code:0x1f645,x:8,y:8},{code:0x1f646,x:9,y:8},{code:0x1f481,x:11,y:2},{code:0x1f64b,x:0,y:9},{code:0x1f647,x:10,y:8},{code:0x1f926,x:9,y:10},{code:0x1f937,x:10,y:11},{code:0x1f46e,x:6,y:1},{code:0x1f575,x:6,y:3},{code:0x1f482,x:12,y:2},{code:0x1f477,x:1,y:2},{code:0x1f934,x:7,y:11},{code:0x1f478,x:2,y:2},{code:0x1f473,x:11,y:1},{code:0x1f472,x:10,y:1},{code:0x1f9d5,x:6,y:13},{code:0x1f935,x:8,y:11},{code:0x1f470,x:8,y:1},{code:0x1f930,x:5,y:11},{code:0x1f931,x:6,y:11},{code:0x1f47c,x:6,y:2},{code:0x1f385,x:0,y:0},{code:0x1f936,x:9,y:11},{code:0x1f9b8,x:10,y:12},{code:0x1f9b9,x:11,y:12},{code:0x1f9d9,x:10,y:13},{code:0x1f9da,x:11,y:13},{code:0x1f9db,x:12,y:13},{code:0x1f9dc,x:13,y:13},{code:0x1f9dd,x:14,y:0},{code:0x1f9de,x:14,y:1},{code:0x1f9df,x:14,y:2},{code:0x1f486,x:0,y:3},{code:0x1f487,x:1,y:3},{code:0x1f6b6,x:6,y:9},{code:0x1f3c3,x:2,y:0},{code:0x1f483,x:13,y:2},{code:0x1f57a,x:7,y:3},{code:0x1f574,x:5,y:3},{code:0x1f46f,x:7,y:1},{code:0x1f9d6,x:7,y:13},{code:0x1f9d7,x:8,y:13},{code:0x1f93a,x:13,y:11},{code:0x1f3c7,x:4,y:0},{code:0x26f7,x:14,y:6},{code:0x1f3c2,x:1,y:0},{code:0x1f3cc,x:7,y:0},{code:0x1f3c4,x:3,y:0},{code:0x1f6a3,x:3,y:9},{code:0x1f3ca,x:5,y:0},{code:0x26f9,x:14,y:7},{code:0x1f3cb,x:6,y:0},{code:0x1f6b4,x:4,y:9},{code:0x1f6b5,x:5,y:9},{code:0x1f938,x:11,y:11},{code:0x1f93c,x:0,y:12},{code:0x1f93d,x:1,y:12},{code:0x1f93e,x:2,y:12},{code:0x1f939,x:12,y:11},{code:0x1f9d8,x:9,y:13},{code:0x1f6c0,x:7,y:9},{code:0x1f6cc,x:8,y:9},{code:0x1f46d,x:5,y:1},{code:0x1f46b,x:3,y:1},{code:0x1f46c,x:4,y:1},{code:0x1f48f,x:2,y:3},{code:0x1f491,x:3,y:3},{code:0x1f46a,x:2,y:1},{code:0x1f5e3,x:8,y:3},{code:0x1f464,x:10,y:0},{code:0x1f465,x:11,y:0},{code:0x1f463,x:9,y:0}],\n    \"body_and_clothes\": [{code:0x1f44b,x:3,y:1},{code:0x1f91a,x:10,y:7},{code:0x1f590,x:7,y:6},{code:0x270b,x:9,y:10},{code:0x1f596,x:9,y:6},{code:0x1f44c,x:4,y:1},{code:0x270c,x:10,y:10},{code:0x1f91e,x:3,y:8},{code:0x1f91f,x:4,y:8},{code:0x1f918,x:8,y:7},{code:0x1f919,x:9,y:7},{code:0x1f448,x:0,y:1},{code:0x1f449,x:1,y:1},{code:0x1f446,x:9,y:0},{code:0x1f595,x:8,y:6},{code:0x1f447,x:10,y:0},{code:0x261d,x:6,y:10},{code:0x1f44d,x:5,y:1},{code:0x1f44e,x:6,y:1},{code:0x270a,x:8,y:10},{code:0x1f44a,x:2,y:1},{code:0x1f91b,x:0,y:8},{code:0x1f91c,x:1,y:8},{code:0x1f44f,x:7,y:1},{code:0x1f64c,x:2,y:7},{code:0x1f450,x:8,y:1},{code:0x1f932,x:5,y:8},{code:0x1f91d,x:2,y:8},{code:0x1f64f,x:3,y:7},{code:0x270d,x:11,y:0},{code:0x1f485,x:6,y:3},{code:0x1f933,x:6,y:8},{code:0x1f4aa,x:9,y:5},{code:0x1f9b5,x:2,y:9},{code:0x1f9b6,x:3,y:9},{code:0x1f442,x:5,y:0},{code:0x1f443,x:6,y:0},{code:0x1f9e0,x:6,y:9},{code:0x1f9b7,x:4,y:9},{code:0x1f9b4,x:1,y:9},{code:0x1f440,x:3,y:0},{code:0x1f445,x:8,y:0},{code:0x1f444,x:7,y:0},{code:0x1f48b,x:7,y:3},{code:0x1f48c,x:8,y:3},{code:0x1f498,x:5,y:4},{code:0x1f49d,x:10,y:4},{code:0x1f496,x:3,y:4},{code:0x1f497,x:4,y:4},{code:0x1f493,x:0,y:4},{code:0x1f49e,x:0,y:5},{code:0x1f495,x:2,y:4},{code:0x1f49f,x:1,y:5},{code:0x2763,x:11,y:1},{code:0x1f494,x:1,y:4},{code:0x2764,x:11,y:2},{code:0x1f9e1,x:7,y:9},{code:0x1f49b,x:8,y:4},{code:0x1f49a,x:7,y:4},{code:0x1f499,x:6,y:4},{code:0x1f49c,x:9,y:4},{code:0x1f5a4,x:10,y:6},{code:0x1f4af,x:3,y:6},{code:0x1f4a2,x:2,y:5},{code:0x1f4a5,x:5,y:5},{code:0x1f4ab,x:10,y:5},{code:0x1f4a6,x:6,y:5},{code:0x1f4a8,x:8,y:5},{code:0x1f573,x:5,y:6},{code:0x1f4a3,x:3,y:5},{code:0x1f4ac,x:0,y:6},{code:0x1f441,x:4,y:0},{code:0x1f5e8,x:0,y:7},{code:0x1f5ef,x:1,y:7},{code:0x1f4ad,x:1,y:6},{code:0x1f4a4,x:4,y:5},{code:0x1f453,x:0,y:2},{code:0x1f576,x:6,y:6},{code:0x1f97d,x:9,y:8},{code:0x1f97c,x:8,y:8},{code:0x1f454,x:1,y:2},{code:0x1f455,x:2,y:2},{code:0x1f456,x:3,y:2},{code:0x1f9e3,x:9,y:9},{code:0x1f9e4,x:10,y:9},{code:0x1f9e5,x:0,y:10},{code:0x1f9e6,x:1,y:10},{code:0x1f457,x:4,y:2},{code:0x1f458,x:5,y:2},{code:0x1f459,x:6,y:2},{code:0x1f45a,x:7,y:2},{code:0x1f45b,x:8,y:2},{code:0x1f45c,x:9,y:2},{code:0x1f45d,x:10,y:2},{code:0x1f6cd,x:4,y:7},{code:0x1f392,x:0,y:0},{code:0x1f45e,x:0,y:3},{code:0x1f45f,x:1,y:3},{code:0x1f97e,x:10,y:8},{code:0x1f97f,x:0,y:9},{code:0x1f460,x:2,y:3},{code:0x1f461,x:3,y:3},{code:0x1f462,x:4,y:3},{code:0x1f451,x:9,y:1},{code:0x1f452,x:10,y:1},{code:0x1f3a9,x:2,y:0},{code:0x1f393,x:1,y:0},{code:0x1f9e2,x:8,y:9},{code:0x26d1,x:7,y:10},{code:0x1f4ff,x:4,y:6},{code:0x1f484,x:5,y:3},{code:0x1f48d,x:9,y:3},{code:0x1f48e,x:10,y:3}],\n    \"animals_and_nature\": [{code:0x1f435,x:6,y:6},{code:0x1f412,x:4,y:3},{code:0x1f98d,x:2,y:9},{code:0x1f436,x:7,y:6},{code:0x1f415,x:7,y:3},{code:0x1f429,x:6,y:5},{code:0x1f43a,x:0,y:7},{code:0x1f98a,x:10,y:8},{code:0x1f99d,x:7,y:10},{code:0x1f408,x:5,y:2},{code:0x1f981,x:1,y:8},{code:0x1f42f,x:1,y:6},{code:0x1f405,x:2,y:2},{code:0x1f406,x:3,y:2},{code:0x1f434,x:5,y:6},{code:0x1f40e,x:0,y:3},{code:0x1f984,x:4,y:8},{code:0x1f993,x:8,y:9},{code:0x1f98c,x:1,y:9},{code:0x1f42e,x:0,y:6},{code:0x1f402,x:10,y:1},{code:0x1f403,x:0,y:2},{code:0x1f404,x:1,y:2},{code:0x1f437,x:8,y:6},{code:0x1f416,x:9,y:3},{code:0x1f417,x:10,y:3},{code:0x1f43d,x:3,y:7},{code:0x1f40f,x:1,y:3},{code:0x1f411,x:3,y:3},{code:0x1f410,x:2,y:3},{code:0x1f42a,x:7,y:5},{code:0x1f42b,x:8,y:5},{code:0x1f999,x:3,y:10},{code:0x1f992,x:7,y:9},{code:0x1f418,x:0,y:4},{code:0x1f98f,x:4,y:9},{code:0x1f99b,x:5,y:10},{code:0x1f42d,x:10,y:5},{code:0x1f401,x:9,y:1},{code:0x1f400,x:8,y:1},{code:0x1f439,x:10,y:6},{code:0x1f430,x:2,y:6},{code:0x1f407,x:4,y:2},{code:0x1f43f,x:5,y:7},{code:0x1f994,x:9,y:9},{code:0x1f987,x:7,y:8},{code:0x1f43b,x:1,y:7},{code:0x1f428,x:5,y:5},{code:0x1f43c,x:2,y:7},{code:0x1f998,x:2,y:10},{code:0x1f9a1,x:11,y:0},{code:0x1f43e,x:4,y:7},{code:0x1f983,x:3,y:8},{code:0x1f414,x:6,y:3},{code:0x1f413,x:5,y:3},{code:0x1f423,x:0,y:5},{code:0x1f424,x:1,y:5},{code:0x1f425,x:2,y:5},{code:0x1f426,x:3,y:5},{code:0x1f427,x:4,y:5},{code:0x1f54a,x:7,y:7},{code:0x1f985,x:5,y:8},{code:0x1f986,x:6,y:8},{code:0x1f9a2,x:11,y:1},{code:0x1f989,x:9,y:8},{code:0x1f99a,x:4,y:10},{code:0x1f99c,x:6,y:10},{code:0x1f438,x:9,y:6},{code:0x1f40a,x:7,y:2},{code:0x1f422,x:10,y:4},{code:0x1f98e,x:3,y:9},{code:0x1f40d,x:10,y:2},{code:0x1f432,x:3,y:6},{code:0x1f409,x:6,y:2},{code:0x1f995,x:10,y:9},{code:0x1f996,x:0,y:10},{code:0x1f433,x:4,y:6},{code:0x1f40b,x:8,y:2},{code:0x1f42c,x:9,y:5},{code:0x1f41f,x:7,y:4},{code:0x1f420,x:8,y:4},{code:0x1f421,x:9,y:4},{code:0x1f988,x:8,y:8},{code:0x1f419,x:1,y:4},{code:0x1f41a,x:2,y:4},{code:0x1f40c,x:9,y:2},{code:0x1f98b,x:0,y:9},{code:0x1f41b,x:3,y:4},{code:0x1f41c,x:4,y:4},{code:0x1f41d,x:5,y:4},{code:0x1f41e,x:6,y:4},{code:0x1f997,x:1,y:10},{code:0x1f577,x:8,y:7},{code:0x1f578,x:9,y:7},{code:0x1f982,x:2,y:8},{code:0x1f99f,x:9,y:10},{code:0x1f9a0,x:10,y:10},{code:0x1f490,x:6,y:7},{code:0x1f338,x:6,y:0},{code:0x1f3f5,x:7,y:1},{code:0x1f339,x:7,y:0},{code:0x1f940,x:10,y:7},{code:0x1f33a,x:8,y:0},{code:0x1f33b,x:9,y:0},{code:0x1f33c,x:10,y:0},{code:0x1f337,x:5,y:0},{code:0x1f331,x:0,y:0},{code:0x1f344,x:6,y:1},{code:0x1f332,x:1,y:0},{code:0x1f333,x:2,y:0},{code:0x1f334,x:3,y:0},{code:0x1f335,x:4,y:0},{code:0x1f33e,x:0,y:1},{code:0x1f33f,x:1,y:1},{code:0x2618,x:11,y:8},{code:0x1f340,x:2,y:1},{code:0x1f341,x:3,y:1},{code:0x1f342,x:4,y:1},{code:0x1f343,x:5,y:1},{code:0x1f980,x:0,y:8},{code:0x1f99e,x:8,y:10},{code:0x1f990,x:5,y:9},{code:0x1f991,x:6,y:9}],\n    \"food_and_drinks\": [{code:0x1f347,x:8,y:0},{code:0x1f348,x:9,y:0},{code:0x1f349,x:0,y:1},{code:0x1f34a,x:1,y:1},{code:0x1f34b,x:2,y:1},{code:0x1f34c,x:3,y:1},{code:0x1f34d,x:4,y:1},{code:0x1f96d,x:10,y:0},{code:0x1f34e,x:5,y:1},{code:0x1f34f,x:6,y:1},{code:0x1f350,x:7,y:1},{code:0x1f351,x:8,y:1},{code:0x1f352,x:9,y:1},{code:0x1f353,x:0,y:2},{code:0x1f95d,x:4,y:8},{code:0x1f345,x:6,y:0},{code:0x1f965,x:2,y:9},{code:0x1f951,x:2,y:7},{code:0x1f346,x:7,y:0},{code:0x1f954,x:5,y:7},{code:0x1f955,x:6,y:7},{code:0x1f33d,x:5,y:0},{code:0x1f336,x:4,y:0},{code:0x1f952,x:3,y:7},{code:0x1f96c,x:9,y:9},{code:0x1f966,x:3,y:9},{code:0x1f95c,x:3,y:8},{code:0x1f330,x:3,y:0},{code:0x1f35e,x:1,y:3},{code:0x1f950,x:1,y:7},{code:0x1f956,x:7,y:7},{code:0x1f968,x:5,y:9},{code:0x1f96f,x:10,y:2},{code:0x1f95e,x:5,y:8},{code:0x1f9c0,x:10,y:3},{code:0x1f356,x:3,y:2},{code:0x1f357,x:4,y:2},{code:0x1f969,x:6,y:9},{code:0x1f953,x:4,y:7},{code:0x1f354,x:1,y:2},{code:0x1f35f,x:2,y:3},{code:0x1f355,x:2,y:2},{code:0x1f32d,x:0,y:0},{code:0x1f96a,x:7,y:9},{code:0x1f32e,x:1,y:0},{code:0x1f32f,x:2,y:0},{code:0x1f959,x:0,y:8},{code:0x1f95a,x:1,y:8},{code:0x1f373,x:2,y:5},{code:0x1f958,x:9,y:7},{code:0x1f372,x:1,y:5},{code:0x1f963,x:0,y:9},{code:0x1f957,x:8,y:7},{code:0x1f37f,x:4,y:6},{code:0x1f9c2,x:10,y:5},{code:0x1f96b,x:8,y:9},{code:0x1f371,x:0,y:5},{code:0x1f358,x:5,y:2},{code:0x1f359,x:6,y:2},{code:0x1f35a,x:7,y:2},{code:0x1f35b,x:8,y:2},{code:0x1f35c,x:9,y:2},{code:0x1f35d,x:0,y:3},{code:0x1f360,x:3,y:3},{code:0x1f362,x:5,y:3},{code:0x1f363,x:6,y:3},{code:0x1f364,x:7,y:3},{code:0x1f365,x:8,y:3},{code:0x1f96e,x:10,y:1},{code:0x1f361,x:4,y:3},{code:0x1f95f,x:6,y:8},{code:0x1f960,x:7,y:8},{code:0x1f961,x:8,y:8},{code:0x1f366,x:9,y:3},{code:0x1f367,x:0,y:4},{code:0x1f368,x:1,y:4},{code:0x1f369,x:2,y:4},{code:0x1f36a,x:3,y:4},{code:0x1f382,x:5,y:6},{code:0x1f370,x:9,y:4},{code:0x1f9c1,x:10,y:4},{code:0x1f967,x:4,y:9},{code:0x1f36b,x:4,y:4},{code:0x1f36c,x:5,y:4},{code:0x1f36d,x:6,y:4},{code:0x1f36e,x:7,y:4},{code:0x1f36f,x:8,y:4},{code:0x1f37c,x:1,y:6},{code:0x1f95b,x:2,y:8},{code:0x2615,x:4,y:10},{code:0x1f375,x:4,y:5},{code:0x1f376,x:5,y:5},{code:0x1f37e,x:3,y:6},{code:0x1f377,x:6,y:5},{code:0x1f378,x:7,y:5},{code:0x1f379,x:8,y:5},{code:0x1f37a,x:9,y:5},{code:0x1f37b,x:0,y:6},{code:0x1f942,x:8,y:6},{code:0x1f943,x:9,y:6},{code:0x1f964,x:1,y:9},{code:0x1f962,x:9,y:8},{code:0x1f37d,x:2,y:6},{code:0x1f374,x:3,y:5},{code:0x1f944,x:0,y:7},{code:0x1f52a,x:7,y:6},{code:0x1f3fa,x:6,y:6}],\n    \"travel_and_places\": [{code:0x1f30d,x:13,y:0},{code:0x1f30e,x:0,y:1},{code:0x1f30f,x:1,y:1},{code:0x1f310,x:2,y:1},{code:0x1f5fa,x:0,y:8},{code:0x1f5fe,x:4,y:8},{code:0x1f9ed,x:12,y:12},{code:0x1f3d4,x:9,y:3},{code:0x26f0,x:14,y:8},{code:0x1f30b,x:11,y:0},{code:0x1f5fb,x:1,y:8},{code:0x1f3d5,x:10,y:3},{code:0x1f3d6,x:11,y:3},{code:0x1f3dc,x:3,y:4},{code:0x1f3dd,x:4,y:4},{code:0x1f3de,x:5,y:4},{code:0x1f3df,x:6,y:4},{code:0x1f3db,x:2,y:4},{code:0x1f3d7,x:12,y:3},{code:0x1f9f1,x:13,y:12},{code:0x1f3d8,x:13,y:3},{code:0x1f3da,x:1,y:4},{code:0x1f3e0,x:7,y:4},{code:0x1f3e1,x:8,y:4},{code:0x1f3e2,x:9,y:4},{code:0x1f3e3,x:10,y:4},{code:0x1f3e4,x:11,y:4},{code:0x1f3e5,x:12,y:4},{code:0x1f3e6,x:13,y:4},{code:0x1f3e8,x:0,y:5},{code:0x1f3e9,x:1,y:5},{code:0x1f3ea,x:2,y:5},{code:0x1f3eb,x:3,y:5},{code:0x1f3ec,x:4,y:5},{code:0x1f3ed,x:5,y:5},{code:0x1f3ef,x:6,y:5},{code:0x1f3f0,x:7,y:5},{code:0x1f492,x:9,y:5},{code:0x1f5fc,x:2,y:8},{code:0x1f5fd,x:3,y:8},{code:0x26ea,x:14,y:7},{code:0x1f54c,x:0,y:6},{code:0x1f54d,x:1,y:6},{code:0x26e9,x:14,y:6},{code:0x1f54b,x:13,y:5},{code:0x26f2,x:14,y:10},{code:0x26fa,x:0,y:14},{code:0x1f301,x:1,y:0},{code:0x1f303,x:3,y:0},{code:0x1f3d9,x:0,y:4},{code:0x1f304,x:4,y:0},{code:0x1f305,x:5,y:0},{code:0x1f306,x:6,y:0},{code:0x1f307,x:7,y:0},{code:0x1f309,x:9,y:0},{code:0x2668,x:14,y:0},{code:0x1f3a0,x:1,y:3},{code:0x1f3a1,x:2,y:3},{code:0x1f3a2,x:3,y:3},{code:0x1f488,x:8,y:5},{code:0x1f3aa,x:5,y:3},{code:0x1f682,x:8,y:8},{code:0x1f683,x:9,y:8},{code:0x1f684,x:10,y:8},{code:0x1f685,x:11,y:8},{code:0x1f686,x:12,y:8},{code:0x1f687,x:13,y:8},{code:0x1f688,x:0,y:9},{code:0x1f689,x:1,y:9},{code:0x1f68a,x:2,y:9},{code:0x1f69d,x:7,y:10},{code:0x1f69e,x:8,y:10},{code:0x1f68b,x:3,y:9},{code:0x1f68c,x:4,y:9},{code:0x1f68d,x:5,y:9},{code:0x1f68e,x:6,y:9},{code:0x1f690,x:8,y:9},{code:0x1f691,x:9,y:9},{code:0x1f692,x:10,y:9},{code:0x1f693,x:11,y:9},{code:0x1f694,x:12,y:9},{code:0x1f695,x:13,y:9},{code:0x1f696,x:0,y:10},{code:0x1f697,x:1,y:10},{code:0x1f698,x:2,y:10},{code:0x1f699,x:3,y:10},{code:0x1f69a,x:4,y:10},{code:0x1f69b,x:5,y:10},{code:0x1f69c,x:6,y:10},{code:0x1f3ce,x:8,y:3},{code:0x1f3cd,x:7,y:3},{code:0x1f6f5,x:4,y:12},{code:0x1f6b2,x:4,y:11},{code:0x1f6f4,x:3,y:12},{code:0x1f6f9,x:7,y:12},{code:0x1f68f,x:7,y:9},{code:0x1f6e3,x:9,y:11},{code:0x1f6e4,x:10,y:11},{code:0x1f6e2,x:8,y:11},{code:0x26fd,x:1,y:14},{code:0x1f6a8,x:3,y:11},{code:0x1f6a5,x:0,y:11},{code:0x1f6a6,x:1,y:11},{code:0x1f6d1,x:6,y:11},{code:0x1f6a7,x:2,y:11},{code:0x2693,x:14,y:1},{code:0x26f5,x:14,y:13},{code:0x1f6f6,x:5,y:12},{code:0x1f3a3,x:4,y:3},{code:0x1f6a4,x:13,y:10},{code:0x1f6f3,x:2,y:12},{code:0x26f4,x:14,y:12},{code:0x1f6e5,x:11,y:11},{code:0x1f6a2,x:12,y:10},{code:0x2708,x:2,y:14},{code:0x1f6e9,x:12,y:11},{code:0x1f6eb,x:13,y:11},{code:0x1f6ec,x:0,y:12},{code:0x1f4ba,x:11,y:5},{code:0x1f681,x:7,y:8},{code:0x1f69f,x:9,y:10},{code:0x1f6a0,x:10,y:10},{code:0x1f6a1,x:11,y:10},{code:0x1f6f0,x:1,y:12},{code:0x1f680,x:6,y:8},{code:0x1f6f8,x:6,y:12},{code:0x1f6ce,x:5,y:11},{code:0x1f9f3,x:0,y:13},{code:0x231b,x:3,y:13},{code:0x23f3,x:7,y:13},{code:0x231a,x:2,y:13},{code:0x23f0,x:4,y:13},{code:0x23f1,x:5,y:13},{code:0x23f2,x:6,y:13},{code:0x1f570,x:12,y:7},{code:0x1f55b,x:13,y:6},{code:0x1f567,x:11,y:7},{code:0x1f550,x:2,y:6},{code:0x1f55c,x:0,y:7},{code:0x1f551,x:3,y:6},{code:0x1f55d,x:1,y:7},{code:0x1f552,x:4,y:6},{code:0x1f55e,x:2,y:7},{code:0x1f553,x:5,y:6},{code:0x1f55f,x:3,y:7},{code:0x1f554,x:6,y:6},{code:0x1f560,x:4,y:7},{code:0x1f555,x:7,y:6},{code:0x1f561,x:5,y:7},{code:0x1f556,x:8,y:6},{code:0x1f562,x:6,y:7},{code:0x1f557,x:9,y:6},{code:0x1f563,x:7,y:7},{code:0x1f558,x:10,y:6},{code:0x1f564,x:8,y:7},{code:0x1f559,x:11,y:6},{code:0x1f565,x:9,y:7},{code:0x1f55a,x:12,y:6},{code:0x1f566,x:10,y:7},{code:0x1f311,x:3,y:1},{code:0x1f312,x:4,y:1},{code:0x1f313,x:5,y:1},{code:0x1f314,x:6,y:1},{code:0x1f315,x:7,y:1},{code:0x1f316,x:8,y:1},{code:0x1f317,x:9,y:1},{code:0x1f318,x:10,y:1},{code:0x1f319,x:11,y:1},{code:0x1f31a,x:12,y:1},{code:0x1f31b,x:13,y:1},{code:0x1f31c,x:0,y:2},{code:0x1f321,x:5,y:2},{code:0x2600,x:8,y:13},{code:0x1f31d,x:1,y:2},{code:0x1f31e,x:2,y:2},{code:0x2b50,x:4,y:14},{code:0x1f31f,x:3,y:2},{code:0x1f320,x:4,y:2},{code:0x1f30c,x:12,y:0},{code:0x2601,x:9,y:13},{code:0x26c5,x:14,y:4},{code:0x26c8,x:14,y:5},{code:0x1f324,x:6,y:2},{code:0x1f325,x:7,y:2},{code:0x1f326,x:8,y:2},{code:0x1f327,x:9,y:2},{code:0x1f328,x:10,y:2},{code:0x1f329,x:11,y:2},{code:0x1f32a,x:12,y:2},{code:0x1f32b,x:13,y:2},{code:0x1f32c,x:0,y:3},{code:0x1f300,x:0,y:0},{code:0x1f308,x:8,y:0},{code:0x1f302,x:2,y:0},{code:0x2602,x:10,y:13},{code:0x2614,x:13,y:13},{code:0x26f1,x:14,y:9},{code:0x26a1,x:14,y:2},{code:0x2744,x:3,y:14},{code:0x2603,x:11,y:13},{code:0x26c4,x:14,y:3},{code:0x2604,x:12,y:13},{code:0x1f525,x:12,y:5},{code:0x1f4a7,x:10,y:5},{code:0x1f30a,x:10,y:0}],\n    \"events\": [{code:0x1f383,x:4,y:0},{code:0x1f384,x:5,y:0},{code:0x1f386,x:6,y:0},{code:0x1f387,x:7,y:0},{code:0x1f9e8,x:5,y:6},{code:0x2728,x:9,y:3},{code:0x1f388,x:8,y:0},{code:0x1f389,x:0,y:1},{code:0x1f38a,x:1,y:1},{code:0x1f38b,x:2,y:1},{code:0x1f38d,x:3,y:1},{code:0x1f38e,x:4,y:1},{code:0x1f38f,x:5,y:1},{code:0x1f390,x:6,y:1},{code:0x1f391,x:7,y:1},{code:0x1f9e7,x:4,y:6},{code:0x1f380,x:2,y:0},{code:0x1f381,x:3,y:0},{code:0x1f397,x:0,y:2},{code:0x1f39f,x:1,y:2},{code:0x1f3ab,x:3,y:2},{code:0x1f396,x:8,y:1},{code:0x1f3c6,x:7,y:3},{code:0x1f3c5,x:6,y:3},{code:0x1f947,x:4,y:5},{code:0x1f948,x:5,y:5},{code:0x1f949,x:6,y:5},{code:0x26bd,x:8,y:8},{code:0x26be,x:9,y:0},{code:0x1f94e,x:2,y:6},{code:0x1f3c0,x:5,y:3},{code:0x1f3d0,x:2,y:4},{code:0x1f3c8,x:8,y:3},{code:0x1f3c9,x:0,y:4},{code:0x1f3be,x:3,y:3},{code:0x1f94f,x:3,y:6},{code:0x1f3b3,x:1,y:3},{code:0x1f3cf,x:1,y:4},{code:0x1f3d1,x:3,y:4},{code:0x1f3d2,x:4,y:4},{code:0x1f94d,x:1,y:6},{code:0x1f3d3,x:5,y:4},{code:0x1f3f8,x:6,y:4},{code:0x1f94a,x:7,y:5},{code:0x1f94b,x:8,y:5},{code:0x1f945,x:3,y:5},{code:0x26f3,x:9,y:1},{code:0x26f8,x:9,y:2},{code:0x1f3bd,x:2,y:3},{code:0x1f3bf,x:4,y:3},{code:0x1f6f7,x:2,y:5},{code:0x1f94c,x:0,y:6},{code:0x1f3af,x:6,y:2},{code:0x1f3b1,x:8,y:2},{code:0x1f52e,x:8,y:4},{code:0x1f9ff,x:1,y:7},{code:0x1f3ae,x:5,y:2},{code:0x1f579,x:0,y:5},{code:0x1f3b0,x:7,y:2},{code:0x1f3b2,x:0,y:3},{code:0x1f9e9,x:6,y:6},{code:0x1f9f8,x:0,y:7},{code:0x2660,x:4,y:8},{code:0x2665,x:6,y:8},{code:0x2666,x:7,y:8},{code:0x2663,x:5,y:8},{code:0x265f,x:3,y:8},{code:0x1f0cf,x:1,y:0},{code:0x1f004,x:0,y:0},{code:0x1f3ad,x:4,y:2},{code:0x1f5bc,x:1,y:5},{code:0x1f3a8,x:2,y:2},{code:0x1f9f5,x:7,y:6},{code:0x1f9f6,x:8,y:6}],\n    \"objects\": [{code:0x1f507,x:1,y:7},{code:0x1f508,x:2,y:7},{code:0x1f509,x:3,y:7},{code:0x1f50a,x:4,y:7},{code:0x1f4e2,x:3,y:5},{code:0x1f4e3,x:4,y:5},{code:0x1f4ef,x:3,y:6},{code:0x1f514,x:1,y:8},{code:0x1f515,x:2,y:8},{code:0x1f3bc,x:2,y:1},{code:0x1f3b5,x:8,y:0},{code:0x1f3b6,x:9,y:0},{code:0x1f399,x:0,y:0},{code:0x1f39a,x:1,y:0},{code:0x1f39b,x:2,y:0},{code:0x1f3a4,x:4,y:0},{code:0x1f3a7,x:6,y:0},{code:0x1f4fb,x:11,y:6},{code:0x1f3b7,x:10,y:0},{code:0x1f3b8,x:11,y:0},{code:0x1f3b9,x:12,y:0},{code:0x1f3ba,x:0,y:1},{code:0x1f3bb,x:1,y:1},{code:0x1f941,x:6,y:11},{code:0x1f4f1,x:5,y:6},{code:0x1f4f2,x:6,y:6},{code:0x260e,x:13,y:3},{code:0x1f4de,x:12,y:4},{code:0x1f4df,x:0,y:5},{code:0x1f4e0,x:1,y:5},{code:0x1f50b,x:5,y:7},{code:0x1f50c,x:6,y:7},{code:0x1f4bb,x:4,y:2},{code:0x1f5a5,x:5,y:9},{code:0x1f5a8,x:6,y:9},{code:0x2328,x:13,y:2},{code:0x1f5b1,x:7,y:9},{code:0x1f5b2,x:8,y:9},{code:0x1f4bd,x:6,y:2},{code:0x1f4be,x:7,y:2},{code:0x1f4bf,x:8,y:2},{code:0x1f4c0,x:9,y:2},{code:0x1f9ee,x:2,y:12},{code:0x1f3a5,x:5,y:0},{code:0x1f39e,x:3,y:0},{code:0x1f4fd,x:0,y:7},{code:0x1f3ac,x:7,y:0},{code:0x1f4fa,x:10,y:6},{code:0x1f4f7,x:7,y:6},{code:0x1f4f8,x:8,y:6},{code:0x1f4f9,x:9,y:6},{code:0x1f4fc,x:12,y:6},{code:0x1f50d,x:7,y:7},{code:0x1f50e,x:8,y:7},{code:0x1f56f,x:12,y:8},{code:0x1f4a1,x:8,y:1},{code:0x1f526,x:5,y:8},{code:0x1f3ee,x:3,y:1},{code:0x1f4d4,x:3,y:4},{code:0x1f4d5,x:4,y:4},{code:0x1f4d6,x:5,y:4},{code:0x1f4d7,x:6,y:4},{code:0x1f4d8,x:7,y:4},{code:0x1f4d9,x:8,y:4},{code:0x1f4da,x:9,y:4},{code:0x1f4d3,x:2,y:4},{code:0x1f4d2,x:1,y:4},{code:0x1f4c3,x:12,y:2},{code:0x1f4dc,x:10,y:4},{code:0x1f4c4,x:0,y:3},{code:0x1f4f0,x:4,y:6},{code:0x1f5de,x:4,y:10},{code:0x1f4d1,x:0,y:4},{code:0x1f516,x:3,y:8},{code:0x1f3f7,x:4,y:1},{code:0x1f4b0,x:9,y:1},{code:0x1f4b4,x:11,y:1},{code:0x1f4b5,x:12,y:1},{code:0x1f4b6,x:0,y:2},{code:0x1f4b7,x:1,y:2},{code:0x1f4b8,x:2,y:2},{code:0x1f4b3,x:10,y:1},{code:0x1f9fe,x:13,y:0},{code:0x1f4b9,x:3,y:2},{code:0x2709,x:1,y:13},{code:0x1f4e7,x:8,y:5},{code:0x1f4e8,x:9,y:5},{code:0x1f4e9,x:10,y:5},{code:0x1f4e4,x:5,y:5},{code:0x1f4e5,x:6,y:5},{code:0x1f4e6,x:7,y:5},{code:0x1f4eb,x:12,y:5},{code:0x1f4ea,x:11,y:5},{code:0x1f4ec,x:0,y:6},{code:0x1f4ed,x:1,y:6},{code:0x1f4ee,x:2,y:6},{code:0x1f5f3,x:6,y:10},{code:0x270f,x:2,y:13},{code:0x2712,x:3,y:13},{code:0x1f58b,x:2,y:9},{code:0x1f58a,x:1,y:9},{code:0x1f58c,x:3,y:9},{code:0x1f58d,x:4,y:9},{code:0x1f4dd,x:11,y:4},{code:0x1f4bc,x:5,y:2},{code:0x1f4c1,x:10,y:2},{code:0x1f4c2,x:11,y:2},{code:0x1f5c2,x:9,y:9},{code:0x1f4c5,x:1,y:3},{code:0x1f4c6,x:2,y:3},{code:0x1f5d2,x:0,y:10},{code:0x1f5d3,x:1,y:10},{code:0x1f4c7,x:3,y:3},{code:0x1f4c8,x:4,y:3},{code:0x1f4c9,x:5,y:3},{code:0x1f4ca,x:6,y:3},{code:0x1f4cb,x:7,y:3},{code:0x1f4cc,x:8,y:3},{code:0x1f4cd,x:9,y:3},{code:0x1f4ce,x:10,y:3},{code:0x1f587,x:0,y:9},{code:0x1f4cf,x:11,y:3},{code:0x1f4d0,x:12,y:3},{code:0x2702,x:0,y:13},{code:0x1f5c3,x:10,y:9},{code:0x1f5c4,x:11,y:9},{code:0x1f5d1,x:12,y:9},{code:0x1f512,x:12,y:7},{code:0x1f513,x:0,y:8},{code:0x1f50f,x:9,y:7},{code:0x1f510,x:10,y:7},{code:0x1f511,x:11,y:7},{code:0x1f5dd,x:3,y:10},{code:0x1f528,x:7,y:8},{code:0x26cf,x:13,y:11},{code:0x2692,x:13,y:4},{code:0x1f6e0,x:3,y:11},{code:0x1f5e1,x:5,y:10},{code:0x2694,x:13,y:5},{code:0x1f52b,x:9,y:8},{code:0x1f3f9,x:5,y:1},{code:0x1f6e1,x:4,y:11},{code:0x1f527,x:6,y:8},{code:0x1f529,x:8,y:8},{code:0x2699,x:13,y:8},{code:0x1f5dc,x:2,y:10},{code:0x2696,x:13,y:6},{code:0x1f517,x:4,y:8},{code:0x26d3,x:13,y:12},{code:0x1f9f0,x:4,y:12},{code:0x1f9f2,x:5,y:12},{code:0x2697,x:13,y:7},{code:0x1f9ea,x:12,y:11},{code:0x1f9eb,x:0,y:12},{code:0x1f9ec,x:1,y:12},{code:0x1f52c,x:10,y:8},{code:0x1f52d,x:11,y:8},{code:0x1f4e1,x:2,y:5},{code:0x1f489,x:6,y:1},{code:0x1f48a,x:7,y:1},{code:0x1f6aa,x:8,y:10},{code:0x1f6cf,x:1,y:11},{code:0x1f6cb,x:0,y:11},{code:0x1f6bd,x:10,y:10},{code:0x1f6bf,x:11,y:10},{code:0x1f6c1,x:12,y:10},{code:0x1f9f4,x:6,y:12},{code:0x1f9f7,x:7,y:12},{code:0x1f9f9,x:8,y:12},{code:0x1f9fa,x:9,y:12},{code:0x1f9fb,x:10,y:12},{code:0x1f9fc,x:11,y:12},{code:0x1f9fd,x:12,y:12},{code:0x1f9ef,x:3,y:12},{code:0x1f6d2,x:2,y:11},{code:0x1f6ac,x:9,y:10},{code:0x26b0,x:13,y:9},{code:0x26b1,x:13,y:10},{code:0x1f5ff,x:7,y:10}],\n    \"signs\": [{code:0x1f6ae,x:4,y:8},{code:0x1f6b0,x:6,y:8},{code:0x267f,x:3,y:13},{code:0x1f6b9,x:11,y:8},{code:0x1f6ba,x:12,y:8},{code:0x1f6bb,x:13,y:8},{code:0x1f6bc,x:14,y:8},{code:0x1f6be,x:0,y:9},{code:0x1f6c2,x:1,y:9},{code:0x1f6c3,x:2,y:9},{code:0x1f6c4,x:3,y:9},{code:0x1f6c5,x:4,y:9},{code:0x1f3e7,x:13,y:4},{code:0x26a0,x:7,y:13},{code:0x1f6b8,x:10,y:8},{code:0x26d4,x:11,y:13},{code:0x1f6ab,x:2,y:8},{code:0x1f6b3,x:8,y:8},{code:0x1f6ad,x:3,y:8},{code:0x1f6af,x:5,y:8},{code:0x1f6b1,x:7,y:8},{code:0x1f6b7,x:9,y:8},{code:0x1f4f5,x:7,y:5},{code:0x1f51e,x:7,y:6},{code:0x2622,x:10,y:11},{code:0x2623,x:11,y:11},{code:0x2b06,x:15,y:5},{code:0x2197,x:14,y:9},{code:0x27a1,x:14,y:14},{code:0x2198,x:0,y:10},{code:0x2b07,x:15,y:6},{code:0x2199,x:1,y:10},{code:0x2b05,x:15,y:4},{code:0x2196,x:13,y:9},{code:0x2195,x:12,y:9},{code:0x2194,x:11,y:9},{code:0x21a9,x:2,y:10},{code:0x21aa,x:3,y:10},{code:0x2934,x:15,y:2},{code:0x2935,x:15,y:3},{code:0x1f503,x:12,y:5},{code:0x1f504,x:13,y:5},{code:0x1f519,x:2,y:6},{code:0x1f51a,x:3,y:6},{code:0x1f51b,x:4,y:6},{code:0x1f51c,x:5,y:6},{code:0x1f51d,x:6,y:6},{code:0x1f6d0,x:5,y:9},{code:0x269b,x:5,y:13},{code:0x1f549,x:14,y:7},{code:0x2721,x:1,y:14},{code:0x2638,x:1,y:12},{code:0x262f,x:0,y:12},{code:0x271d,x:0,y:14},{code:0x2626,x:12,y:11},{code:0x262a,x:13,y:11},{code:0x262e,x:14,y:11},{code:0x1f54e,x:0,y:8},{code:0x1f52f,x:14,y:6},{code:0x2648,x:4,y:12},{code:0x2649,x:5,y:12},{code:0x264a,x:6,y:12},{code:0x264b,x:7,y:12},{code:0x264c,x:8,y:12},{code:0x264d,x:9,y:12},{code:0x264e,x:10,y:12},{code:0x264f,x:11,y:12},{code:0x2650,x:12,y:12},{code:0x2651,x:13,y:12},{code:0x2652,x:14,y:12},{code:0x2653,x:0,y:13},{code:0x26ce,x:10,y:13},{code:0x1f500,x:9,y:5},{code:0x1f501,x:10,y:5},{code:0x1f502,x:11,y:5},{code:0x25b6,x:3,y:11},{code:0x23e9,x:5,y:10},{code:0x23ed,x:9,y:10},{code:0x23ef,x:11,y:10},{code:0x25c0,x:4,y:11},{code:0x23ea,x:6,y:10},{code:0x23ee,x:10,y:10},{code:0x1f53c,x:12,y:7},{code:0x23eb,x:7,y:10},{code:0x1f53d,x:13,y:7},{code:0x23ec,x:8,y:10},{code:0x23f8,x:12,y:10},{code:0x23f9,x:13,y:10},{code:0x23fa,x:14,y:10},{code:0x23cf,x:4,y:10},{code:0x1f3a6,x:11,y:4},{code:0x1f505,x:14,y:5},{code:0x1f506,x:0,y:6},{code:0x1f4f6,x:8,y:5},{code:0x1f4f3,x:5,y:5},{code:0x1f4f4,x:6,y:5},{code:0x2640,x:2,y:12},{code:0x2642,x:3,y:12},{code:0x2716,x:14,y:13},{code:0x2795,x:11,y:14},{code:0x2796,x:12,y:14},{code:0x2797,x:13,y:14},{code:0x267e,x:2,y:13},{code:0x203c,x:6,y:9},{code:0x2049,x:7,y:9},{code:0x2753,x:7,y:14},{code:0x2754,x:8,y:14},{code:0x2755,x:9,y:14},{code:0x2757,x:10,y:14},{code:0x3030,x:15,y:10},{code:0x1f4b1,x:2,y:5},{code:0x1f4b2,x:3,y:5},{code:0x2695,x:4,y:13},{code:0x267b,x:1,y:13},{code:0x269c,x:6,y:13},{code:0x1f531,x:1,y:7},{code:0x1f4db,x:4,y:5},{code:0x1f530,x:0,y:7},{code:0x2b55,x:15,y:9},{code:0x2705,x:12,y:13},{code:0x2611,x:9,y:11},{code:0x2714,x:13,y:13},{code:0x274c,x:5,y:14},{code:0x274e,x:6,y:14},{code:0x27b0,x:15,y:0},{code:0x27bf,x:15,y:1},{code:0x303d,x:15,y:11},{code:0x2733,x:2,y:14},{code:0x2734,x:3,y:14},{code:0x2747,x:4,y:14},{code:0x00a9,x:12,y:0},{code:0x00ae,x:13,y:0},{code:0x2122,x:9,y:9},{code:0x1f520,x:9,y:6},{code:0x1f521,x:10,y:6},{code:0x1f522,x:11,y:6},{code:0x1f523,x:12,y:6},{code:0x1f524,x:13,y:6},{code:0x1f170,x:14,y:0},{code:0x1f18e,x:3,y:1},{code:0x1f171,x:0,y:1},{code:0x1f191,x:4,y:1},{code:0x1f192,x:5,y:1},{code:0x1f193,x:6,y:1},{code:0x2139,x:10,y:9},{code:0x1f194,x:7,y:1},{code:0x24c2,x:0,y:11},{code:0x1f195,x:8,y:1},{code:0x1f196,x:9,y:1},{code:0x1f17e,x:1,y:1},{code:0x1f197,x:10,y:1},{code:0x1f17f,x:2,y:1},{code:0x1f198,x:11,y:1},{code:0x1f199,x:12,y:1},{code:0x1f19a,x:13,y:1},{code:0x1f201,x:10,y:3},{code:0x1f202,x:11,y:3},{code:0x1f237,x:4,y:4},{code:0x1f236,x:3,y:4},{code:0x1f22f,x:13,y:3},{code:0x1f250,x:8,y:4},{code:0x1f239,x:6,y:4},{code:0x1f21a,x:12,y:3},{code:0x1f232,x:14,y:3},{code:0x1f251,x:9,y:4},{code:0x1f238,x:5,y:4},{code:0x1f234,x:1,y:4},{code:0x1f233,x:0,y:4},{code:0x3297,x:15,y:12},{code:0x3299,x:15,y:13},{code:0x1f23a,x:7,y:4},{code:0x1f235,x:2,y:4},{code:0x1f534,x:4,y:7},{code:0x1f535,x:5,y:7},{code:0x26ab,x:9,y:13},{code:0x26aa,x:8,y:13},{code:0x2b1c,x:15,y:8},{code:0x25fc,x:6,y:11},{code:0x25fb,x:5,y:11},{code:0x25fe,x:8,y:11},{code:0x25fd,x:7,y:11},{code:0x25aa,x:1,y:11},{code:0x25ab,x:2,y:11},{code:0x1f536,x:6,y:7},{code:0x1f537,x:7,y:7},{code:0x1f538,x:8,y:7},{code:0x1f539,x:9,y:7},{code:0x1f53a,x:10,y:7},{code:0x1f53b,x:11,y:7},{code:0x1f4a0,x:1,y:5},{code:0x1f518,x:1,y:6},{code:0x1f533,x:3,y:7},{code:0x1f532,x:2,y:7},{code:0x1f3c1,x:12,y:4},{code:0x1f6a9,x:1,y:8},{code:0x1f38c,x:10,y:4},{code:0x1f3f4,x:0,y:5},{code:0x1f3f3,x:14,y:4},{code:0x1f1e6,x:14,y:1},{code:0x1f1e7,x:0,y:2},{code:0x1f1e8,x:1,y:2},{code:0x1f1e9,x:2,y:2},{code:0x1f1ea,x:3,y:2},{code:0x1f1eb,x:4,y:2},{code:0x1f1ec,x:5,y:2},{code:0x1f1ed,x:6,y:2},{code:0x1f1ee,x:7,y:2},{code:0x1f1ef,x:8,y:2},{code:0x1f1f0,x:9,y:2},{code:0x1f1f1,x:10,y:2},{code:0x1f1f2,x:11,y:2},{code:0x1f1f3,x:12,y:2},{code:0x1f1f4,x:13,y:2},{code:0x1f1f5,x:14,y:2},{code:0x1f1f6,x:0,y:3},{code:0x1f1f7,x:1,y:3},{code:0x1f1f8,x:2,y:3},{code:0x1f1f9,x:3,y:3},{code:0x1f1fa,x:4,y:3},{code:0x1f1fb,x:5,y:3},{code:0x1f1fc,x:6,y:3},{code:0x1f1fd,x:7,y:3},{code:0x1f1fe,x:8,y:3},{code:0x1f1ff,x:9,y:3}]\n};\n\nvar getEmoji = function (code) {\n    if (code < 0x10000) {\n        return String.fromCharCode(code);\n    }\n    var offset = code - 0x10000,\n        lead = 0xd800 + (offset >> 10),\n        trail = 0xdc00 + (offset & 0x3ff);\n    return String.fromCharCode(lead)+String.fromCharCode(trail);\n};\n\nvar emoji_data = {}, all = {};\n\nvar getEmojiByIndex = function (idx) {\n    var emoji;\n    for (var emoji_list in raw_data) {\n       if (raw_data[emoji_list][idx]) {\n           emoji = raw_data[emoji_list][idx];\n           break;\n       }\n    }\n    return getEmoji(emoji.code);\n};\n\nfor (var emoji_list in raw_data) {\n    _.each(raw_data[emoji_list], function (item) {\n        var emoji = getEmoji(item.code);\n        emoji_data[emoji] = item;\n        !all[emoji_list] && (all[emoji_list] = []);\n        all[emoji_list].push(emoji);\n    });\n}\n\nvar emoji_regexp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/g;\n\nString.prototype.emojify = function (options) {\n    options || (options = {});\n    let emoji_size = options.emoji_size || 20,\n        title = options.title ? ` title=\"${options.title}\" ` :\"\";\n    return this.replace(emoji_regexp, function (emoji) {\n        return `<span ${title} class=\"emoji emoji-w${emoji_size}\" data-emoji=\"${emoji}\"><span class=\"positioned-emoji\">${emoji}</span></span>`;\n    });\n};\n\nString.prototype.removeEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \"\";\n        } else {\n            return emoji;\n        }\n    });\n};\n\nString.prototype.replaceEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \" \";\n        } else {\n            return emoji;\n        }\n    });\n};\n\n$.fn.emojify = function (selector, options) {\n    this.find(selector).each(function () {\n        var text = $(this).html();\n        if ($(`<div>${text}</div>`).find('.positioned-emoji').length)\n            return;\n        $(this).html(text.emojify(options));\n    });\n    return this;\n};\n\nexport default {\n    all: all,\n    get: getEmoji,\n    getByIndex: getEmojiByIndex\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$,\n    hasher = deps.SHA1.b64_sha1;\n\nvar _image_cache = {};\n\nvar COLORS = [\n    \"#1abc9c\", \"#16a085\", \"#f1c40f\", \"#f39c12\",\n    \"#2ecc71\", \"#27ae60\", \"#e67e22\", \"#d35400\",\n    \"#3498db\", \"#2980b9\", \"#e74c3c\", \"#c0392b\",\n    \"#9b59b6\", \"#8e44ad\", \"#bdc3c7\", \"#34495e\",\n    \"#2c3e50\", \"#95a5a6\", \"#7f8c8d\", \"#ec87bf\",\n    \"#d870ad\", \"#f69785\", \"#9ba37e\", \"#b49255\",\n    \"#a94136\"\n];\n\nvar MAX_SIZE = 200;\nvar MAX_IMG_SIZE = 1280;\n\nvar b64toBlob = function (b64Data, contentType, sliceSize) {\n    contentType = contentType || '';\n    sliceSize = sliceSize || 512;\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\n        var byteNumbers = new Array(slice.length);\n        for (var i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n        var byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n    var blob = new Blob(byteArrays, {type: contentType});\n    return blob;\n};\n\nvar CachedImage = function (image) {\n    this.url = window.URL.createObjectURL(b64toBlob(image));\n    _image_cache[image] = this;\n    return this;\n};\n\nvar getCachedImage = function (image) {\n    // save often used image and get blob url for it\n    if (image instanceof CachedImage) {\n        return image;\n    } else if (image && (_.isString(image) && image.indexOf('http') == 0 || _.isObject(image) && image.url && image.url.indexOf('http') == 0)) {\n        if (_.isString(image))\n            return {url: image};\n        else if (_.isObject(image))\n            return image;\n    }\n    return _image_cache[image] || new CachedImage(image);\n};\n\nvar getDefaultAvatar = function (name, color, font, width, height) {\n    // generate colored avatar with first letters of username\n    var canvas = document.createElement('canvas'),\n        ctx = canvas.getContext('2d'),\n        _name = name ? name.trim() : '',\n        first_name, last_name, splitted_name = _name.split(' ', 2),\n        first_letter, second_letter;\n        // color_index;\n    first_name = splitted_name[0];\n    last_name = (splitted_name.length > 1 ? splitted_name[1] : '');\n    first_letter = first_name[0] || '';\n    if (last_name) {\n        second_letter = last_name[0];\n    } else {\n        second_letter = (first_name.length > 1 ? first_name[1] : '');\n    }\n    // color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    canvas.width = width || 256;\n    canvas.height = height || 256;\n    ctx.rect(0, 0, width || 256, height || 256);\n    ctx.fillStyle = color || getAccountColor(name);//COLORS[color_index];\n    ctx.fill();\n    ctx.font = font || \"bold 100px sans-serif\";\n    ctx.fillStyle = font ? '#000' : \"#FFF\";\n    ctx.textAlign = \"center\";\n    if (font){\n        ctx.textBaseline = 'ideographic';\n        ctx.fillText(_name, width/2 || 128, (height/2 + height *0.33) || 160);\n    }\n    else\n        ctx.fillText(first_letter.toUpperCase()+second_letter.toUpperCase(), 128, 160);\n    var image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n    return image;\n};\n\nvar getAccountColor = function (name) {\n    var _name = name ? name.trim() : '',\n        color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    return COLORS[color_index];\n};\n\nvar getImageSize = function (size, max_size) {\n    if (max_size){\n        if (size.width > size.height) {\n            if (size.width > max_size) {\n                size.height *= max_size / size.width;\n                size.width = max_size;\n            }\n        } else {\n            if (size.height > max_size) {\n                size.width *= max_size / size.height;\n                size.height = max_size;\n            }\n        }\n    }\n    return size;\n};\n\nvar compressImage = function (file) {\n    var image_obj = new Image(),\n        src = window.URL.createObjectURL(file),\n        deferred = new $.Deferred();\n    image_obj.onload = function () {\n        image_obj.onload = null;\n        var canvas = document.createElement('canvas'),\n            ctx = canvas.getContext('2d'),\n            width = image_obj.naturalWidth,\n            height = image_obj.naturalHeight,\n            file_type = file.type,\n            file_name = file.name,\n            new_size = getImageSize({width: width, height: height}, MAX_IMG_SIZE);\n        if (file.type === 'image/svg+xml' || file.type.includes('image/gif') || (width < MAX_IMG_SIZE && height < MAX_IMG_SIZE)) {\n            file.width = width;\n            file.height = height;\n            deferred.resolve(file);\n        }\n        canvas.width = new_size.width;\n        canvas.height = new_size.height;\n        ctx.drawImage(image_obj, 0, 0, new_size.width, new_size.height);\n        canvas.toBlob((blob) => {\n            const file = new File([blob], file_name, {\n                type: file_type,\n                lastModified: Date.now()\n            });\n            deferred.resolve(file);\n        }, file_type, 0.8);\n        window.URL.revokeObjectURL(src);\n    };\n    image_obj.onerror = function() {\n        image_obj.onerror = null;\n        window.URL.revokeObjectURL(src);\n        deferred.resolve(false);\n    };\n    image_obj.src = src;\n    return deferred.promise();\n};\n\nvar setCss = function (image_el, cached_image, img_size) {\n    var $image_el = $(image_el),\n        css = {\n            backgroundImage: 'url(\"' + cached_image.url + '\")',\n            backgroundSize: 'cover',\n            backgroundColor: '#FFF'\n        };\n    $image_el.css(css);\n};\n\nvar getCachedBackground = function (base64) {\n    if (base64.indexOf('http') == 0)\n        return base64;\n    return getCachedImage(base64.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')).url;\n};\n\nvar getAvatarFromFile = function (file) {\n    var image_obj = new Image(),\n         src = window.URL.createObjectURL(file),\n         deferred = new $.Deferred();\n     image_obj.onload = function () {\n         image_obj.onload = null;\n         var canvas = document.createElement('canvas'),\n             ctx = canvas.getContext('2d'),\n             width = image_obj.naturalWidth,\n             height = image_obj.naturalHeight,\n             b64_image, hash,\n             new_size = getImageSize({width: width, height: height}, MAX_SIZE);\n         canvas.width = new_size.width;\n         canvas.height = new_size.height;\n         ctx.drawImage(image_obj, 0, 0, canvas.width, canvas.height);\n         b64_image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n         window.URL.revokeObjectURL(src);\n         canvas.toBlob((blob) => {\n             var reader = new FileReader();\n             reader.onload = function () {\n                 b64_image = reader.result.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n                 let binary_file = atob(b64_image),\n                    bytes = new Uint8Array(binary_file.length);\n\n                 for (let i = 0; i < binary_file.length; i++)\n                     bytes[i] = binary_file.charCodeAt(i);\n\n                 hash = sha1(bytes);\n                 deferred.resolve(b64_image, hash, binary_file.length);\n             }.bind(this);\n             reader.readAsDataURL(blob);\n         }, file.type, 0.8);\n     };\n     image_obj.onerror = function() {\n         image_obj.onerror = null;\n         window.URL.revokeObjectURL(src);\n         deferred.resolve(false, false, false);\n     };\n     image_obj.src = src;\n     return deferred.promise();\n};\n\n$.fn.setAvatar = function (image, size) {\n    var cached_image = getCachedImage(image);\n    setCss(this, cached_image, size);\n};\n\nexport default {\n    getCachedImage: getCachedImage,\n    getBlobImage: b64toBlob,\n    getDefaultAvatar: getDefaultAvatar,\n    getAvatarFromFile: getAvatarFromFile,\n    getDefaultColor: getAccountColor,\n    getCachedBackground: getCachedBackground,\n    compressImage: compressImage\n};\n","import deps from \"xabber-dependencies\"\nimport templates from \"xabber-templates\";\nimport constants from \"xabber-constants\";\n\nvar _ = deps._,\n    $ = deps.$;\n\nvar $modal_container = $('<div>').attr('id', 'modals').appendTo(constants.CONTAINER_ELEMENT);\nvar modal_queue = [];\n\nvar Modal = function (modal_constructor, options) {\n    if (modal_constructor instanceof Function) {\n        this.$modal = $(modal_constructor());\n    } else {\n        this.$modal = $(modal_constructor);\n    }\n    this.options = options || {};\n    this.closed = new $.Deferred();\n};\n\nlet getString = function (id, params) {\n    if (deps.xabber_i18next.exists(id)) {\n        return deps.xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else if (deps.xabber_i18next.default_lang) {\n        return deps.xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else\n        return \"\";\n};\n\n_.extend(Modal.prototype, {\n    open: function (options) {\n        if (this.options.use_queue) {\n            modal_queue.push(this);\n            (modal_queue.length === 1) && this.throw();\n        } else {\n            this.throw();\n        }\n        setTimeout(() => {\n            document.addEventListener(\"keyup\", this.clickHandler.bind(this));\n        }, 500);\n        return this.closed.promise();\n    },\n\n    throw: function () {\n        this.$modal.appendTo($('#modals')).prop('modal', this);\n        var modal_options = _.omit(this.options, ['use_queue']);\n        _.extend(modal_options, {\n            is_default_complete: true,\n            complete_data: null\n        });\n\n        if (this.options.use_queue) {\n            this.$modal.one('modal_close', function (ev, data) {\n                this.$modal.detach();\n                this.closed.resolve(data.value);\n                modal_queue.shift();\n                modal_queue.length && modal_queue[0].throw();\n            }.bind(this));\n        }\n\n        this.$modal._openModal(modal_options);\n    },\n\n    close: function (options) {\n        var modal_options = _.omit(options, ['use_queue', 'is_default_complete', 'complete_data']);\n        _.extend(modal_options, {\n            complete: function () {\n                if (this.options.use_queue) {\n                    var data = _.isUndefined(options.complete_data) ? null : options.complete_data;\n                    this.complete(data);\n                }\n                if (options.is_default_complete) {\n                    if (typeof(this.options.complete) === \"function\") {\n                        this.options.complete();\n                    }\n                } else {\n                    if (this.options.use_queue) {\n                        this.complete();\n                    }\n                    if (typeof(options.complete) === \"function\") {\n                        options.complete();\n                    }\n                }\n            }.bind(this)\n        });\n\n        this.$modal.prop('modal', null);\n        this.$modal._closeModal(modal_options);\n    },\n\n    complete: function (value) {\n        document.removeEventListener(\"keyup\", this.clickHandler);\n        this.$modal.trigger('modal_close', {value: value});\n    },\n\n    clickHandler: function (ev) {\n        if (ev.keyCode === 13) {\n            this.$modal.find('.modal-footer button.ok-button').click();\n            ev.preventDefault();\n        }\n    }\n});\n\n$.fn._openModal = $.fn.openModal;\n\n$.fn.openModal = function (options) {\n    var modal = new Modal(this, options);\n    return modal.open();\n};\n\n$.fn._closeModal = $.fn.closeModal;\n\n$.fn.closeModal = function (options) {\n    var modal = this.prop('modal');\n    if (modal) {\n        modal.close(options);\n    } else {\n        this._closeModal(options);\n    }\n};\n\nexport default {\n    Modal: Modal,\n\n    clear_queue: function () {\n        modal_queue = [];\n    },\n\n    dialogs: {\n        common: function (header, text, buttons, dialog_options, flag, modal_class) {\n            var dialog = new Modal(function () {\n                dialog_options || (dialog_options = []);\n                let options = dialog_options || [];\n                buttons || (buttons = {});\n                if (typeof(dialog_options) === \"object\" && !Array.isArray(dialog_options)){\n                    options = [];\n                }\n                var ok_button = buttons.ok_button,\n                    cancel_button = buttons.cancel_button,\n                    optional_buttons = (buttons.optional_buttons || []).reverse();\n                ok_button && (ok_button = {text: ok_button.text || getString(\"ok\")});\n                cancel_button && (cancel_button = {text: cancel_button.text || getString(\"cancel\")});\n                return templates.base.dialog({\n                    header: header,\n                    text: text,\n                    ok_button: ok_button,\n                    cancel_button: cancel_button,\n                    optional_buttons: optional_buttons,\n                    dialog_options: options,\n                    flag: flag || \"\",\n                    modal_class: modal_class || \"\"\n                });\n            }, {use_queue: true});\n\n            if (dialog_options.modal_class) {\n                dialog.$modal.addClass(dialog_options.modal_class)\n            }\n\n            if (dialog_options.no_dialog_options) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n            }\n\n            if (dialog_options.quoted_text) {\n                dialog.$modal.find('.modal-content').append(`<div class=\"dialog-quoted-text\">${dialog_options.quoted_text}</div>`);\n            }\n            if (dialog_options.cancel_button_main) {\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n            }\n            if (dialog_options.inverted_buttons) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n                dialog.$modal.find('.ok-button').addClass('btn-dark');\n                dialog.$modal.find('.modal-footer').addClass('inverted-buttons');\n            }\n\n            if (dialog_options.img_details) {\n                dialog.$modal.find('.modal-content').append('<div class=\"modal-images-details\"/>').append('<div class=\"modal-images-details-btn btn-flat btn-dark btn-main\"/>');\n                dialog.$modal.find('.modal-images-details-btn').text(xabber.getString(\"details\"));\n                dialog.$modal.find('.modal-images-details').append('<div class=\"image-details-container hidden\"/>');\n                dialog.$modal.find('.image-details-container').html(dialog_options.img_details);\n                dialog.$modal.find('.modal-images-details-btn').click(function () {\n                    dialog.$modal.find('.image-details-container').switchClass('hidden', !dialog.$modal.find('.image-details-container').hasClass('hidden'));\n                });\n            }\n\n            if (dialog_options.blob_image_from_clipboard) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.img-from-clipboard')[0].src = dialog_options.blob_image_from_clipboard;\n                dialog.$modal.find('.container-for-img').removeClass('hidden');\n            }\n\n            if (dialog_options.canvas) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.container-for-img').html(\"\").removeClass('hidden')[0].appendChild(dialog_options.canvas);\n                if (dialog_options.bottom_text)\n                    $('<div class=\"dialog-bottom-text\"/>').html(dialog_options.bottom_text).appendTo(dialog.$modal.find('.container-for-img'));\n            }\n\n            if (dialog_options.escape_button) {\n                dialog.$modal.find('.modal-header').append('<i class=\"close-modal mdi mdi-close mdi-24px\"></i>');\n            }\n\n            if (dialog_options.input_placeholder_value || dialog_options.input_value) {\n                dialog.$modal.find('.dialog-options-wrap').html($('<input type=\"text\" placeholder=\"' + dialog_options.input_placeholder_value + '\" id=\"user_value\"/>').val(dialog_options.input_value));\n            }\n\n            dialog.$modal.find('.modal-footer button').click(function (ev) {\n                var option = $(ev.target).data('option'),\n                    $options = dialog.$modal.find('.dialog-option'),\n                    user_value_input = dialog.$modal.find('#user_value');\n                if (option && $options.length) {\n                    var result = {};\n                    _.each($options, function (item) {\n                        var $item = $(item);\n                        result[$item.data('name')] = $item.find('input').prop('checked');\n                    });\n                    dialog.close({complete_data: result});\n                } else {\n                    if (user_value_input.length) {\n                        if ($(ev.target).hasClass('btn-cancel')) {\n                            dialog.close({complete_data: false});\n                        } else if ($(ev.target).hasClass('optional-button')) {\n                            dialog.close({complete_data: option});\n                        }\n                        else {\n                            var user_value = user_value_input.val();\n                            dialog.close({complete_data: user_value});\n                        }\n                    }\n                    else\n                        dialog.close({complete_data: option});\n                }\n            });\n\n            dialog.$modal.find('.modal-header .close-modal').click(function () {\n                    dialog.close({complete_data: false});\n            });\n\n            return dialog.open();\n        },\n\n        warning: function (text, dialog_options) {\n            return this.common(getString(\"warning\"), text, {ok_button: true}, dialog_options);\n        },\n\n        error: function (text, dialog_options, header) {\n            return this.common(header || getString(\"xabber_account__login__dialog_error__header\"), text, {ok_button: true}, dialog_options);\n        },\n\n        ask: function (header, text, dialog_options, buttons, flag) {\n            var ok_text, cancel_text;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}}, dialog_options, flag);\n        },\n\n        ask_extended: function (header, text, dialog_options, buttons) {\n            var ok_text, cancel_text, optional_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n                optional_button = (buttons.optional_button) ? [{value: buttons.optional_button, name: buttons.optional_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}, optional_buttons: optional_button}, dialog_options, 'extended');\n        },\n\n        ask_enter_value: function (header, text, dialog_options, buttons) {\n            var ok_text, resend_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                resend_button = (buttons.resend_button_text) ? [{value: buttons.resend_to, name: buttons.resend_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, optional_buttons: resend_button, cancel_button: true}, dialog_options);\n        },\n\n        notify: function (header, text) {\n            return this.common(header, text, {ok_button: true});\n        }\n    }\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$;\n\n$.fn.placeCaretAtEnd = function () {\n    if (!this.length) {\n        return this;\n    }\n    var el = this[0];\n    el.focus();\n    if (!_.isUndefined(window.getSelection) && !_.isUndefined(document.createRange)) {\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        range.collapse(false);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    } else if (!_.isUndefined(document.body.createTextRange)) {\n        var textRange = document.body.createTextRange();\n        textRange.moveToElementText(el);\n        textRange.collapse(false);\n        textRange.select();\n    }\n    return this;\n};\n\n$.fn.updateRichTextarea = function () {\n    var text = this.getTextFromRichTextarea();\n    if (!text) {\n        this.html('');\n    }\n    return this;\n};\n\n$.fn.flushRichTextarea = function () {\n    this.html('');\n    return this;\n};\n\n$.fn.pasteHtmlAtCaret = function (html) {\n    var sel, range;\n    this[0].focus();\n    if (window.getSelection) {\n        // IE9 and non-IE\n        sel = window.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n\n            // Range.createContextualFragment() would be useful here but is\n            // non-standard and not supported in all browsers (IE9, for one)\n            var el = document.createElement(\"div\");\n            el.innerHTML = html;\n            var frag = document.createDocumentFragment(), node, lastNode;\n            while ( (node = el.firstChild) ) {\n                lastNode = frag.appendChild(node);\n            }\n            range.insertNode(frag);\n\n            // Preserve the selection\n            if (lastNode) {\n                range = range.cloneRange();\n                range.setStartAfter(lastNode);\n                range.collapse(true);\n                sel.removeAllRanges();\n                sel.addRange(range);\n            }\n        }\n    } else if (document.selection && document.selection.type != \"Control\") {\n        // IE < 9\n        document.selection.createRange().pasteHTML(html);\n    }\n    return this;\n};\n\n$.fn.getTextFromRichTextarea = function () {\n    var $div = $('<div>').html(this.html());\n    $div.find('.emoji').each(function () {\n        $(this).replaceWith($(this).data('emoji'));\n    });\n    $div.find('p').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });\n    /*$div.find('blockquote').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });*/\n    $div.find('span').each(function () {\n        $(this).replaceWith($(this).html());\n    });\n    $div.find('div').each(function () {\n        var $this = $(this);\n        $this.find('br').remove();\n        var html = $this.html();\n        if ($this.hasClass('emoji'))\n            $this.replaceWith(html);\n        else\n            $this.replaceWith('\\n'+html);\n    });\n    /*$div.find('br').each(function () {\n        $(this).replaceWith('\\n');\n    });*/\n    return $div.text();\n};\n\nexport default null;\n","import deps from \"xabber-dependencies\";\nimport emoji from \"xabber-emoji-utils\";\nimport images from \"xabber-image-utils\";\nimport modals from \"xabber-modal-utils\";\nimport constants from \"xabber-constants\";\nimport textarea from \"xabber-textarea-utils\";\n\nvar $ = deps.$,\n    _ = deps._,\n    moment = deps.moment;\n\n// jQuery extensions\n$.fn.switchClass = function (klass, condition) {\n    if (arguments.length === 1) {\n        condition = !this.hasClass(klass);\n    }\n    if (condition) {\n        this.addClass(klass);\n    } else {\n        this.removeClass(klass);\n    }\n    return this;\n};\n\n$.fn.showIf = function (condition) {\n    return this.switchClass('hidden', !condition);\n};\n\n$.fn.hideIf = function (condition) {\n    return this.switchClass('hidden', condition);\n};\n\n$.fn.isVisibleInViewport = function() {\n    let elementTop = $(this).offset().top,\n        elementBottom = elementTop + $(this).outerHeight();\n\n    let viewportTop = $(window).scrollTop(),\n        viewportBottom = viewportTop + $(window).height();\n\n    return elementBottom > viewportTop && elementTop < viewportBottom;\n};\n\n$.fn.isVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        (eleTop >= containerTop && eleBottom <= containerBottom) ||\n        // Some part of the element is visible in the container\n        (eleTop < containerTop && containerTop < eleBottom) ||\n        (eleTop < containerBottom && containerBottom < eleBottom)\n    );\n};\n\n$.fn.isFullyVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleTop >= containerTop && eleBottom <= containerBottom\n    );\n};\n\n$.fn.isBottomVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleBottom <= containerBottom\n    );\n};\n\nvar getHyperLink = function (url) {\n    var prot = (url.indexOf('http://') === 0 ||  url.indexOf('https://') === 0) ? '' : 'http://',\n        escaped_url = \"\";\n    try {\n        escaped_url = encodeURI(decodeURI(url)).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\n    }\n    catch (e) {\n        escaped_url = url;\n    }\n    try {\n        url = decodeURI(url);\n    }\n    catch (e) {}\n    return \"<a target='_blank' class='msg-hyperlink' href='\"+prot+escaped_url + \"'>\"+url+\"</a>\";\n};\n\n$.fn.hyperlinkify = function (options) {\n    options || (options = {});\n    var $query = options.selector ? this.find(options.selector) : this;\n    $query.each(function (i, obj) {\n        var $obj = $(obj),\n            html_concat = \"\",\n            url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            // url_regexp = /((((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)|((\\b)((\\w+)([\\w#!:.?+=&%@!\\-\\/])(\\w+))?(\\.net|\\.edu|\\.cloud|\\.top|\\.vip|\\.cash|\\.im|\\.online|\\.chat|\\.com|\\.org|\\.ru|\\.travel|\\.info|\\.tv|\\.biz|\\.mobi|\\.tel|\\.ar|\\.al|\\.asia|\\.np|\\.ng|\\.io|\\.bb|\\.br|\\.ca|\\.tr|\\.co|\\.ec|\\.fr|\\.ht|\\.in|\\.eg|\\.ie|\\.et|\\.jo|\\.mr|\\.id|\\.iq|\\.nl|\\.ps|\\.ph|\\.sl|\\.si|\\.se|\\.af|\\.ag|\\.be|\\.bd|\\.bg|\\.cl|\\.cd|\\.my|\\.mz|\\.mx|\\.cz|\\.eu|\\.dz|\\.de|\\.hk|\\.it|\\.la|\\.no|\\.pl|\\.ro|\\.sg|\\.ke|\\.kr|\\.ch|\\.ug|\\.us|\\.ve|\\.vn|\\.at|\\.bo|\\.cm|\\.cn|\\.cg|\\.dk|\\.fi|\\.gr|\\.gh|\\.is|\\.ir|\\.jp|\\.lv|\\.ma|\\.me|\\.pk|\\.pe|\\.pt|\\.sa|\\.sk|\\.es|\\.tz|\\.tw|\\.ua|\\.uz|\\.ye)((\\/\\w+)|(\\S+)|\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/g;\n        $obj[0].childNodes.forEach(function (node) {\n            let $node = $(node),\n                x = node.outerHTML;\n            if (node.tagName === 'A') {\n                html_concat += x;\n                return;\n            }\n            else {\n                if (node.nodeName === '#text')\n                    x = _.escape($node.text());\n                let list = x && x.match(url_regexp);\n                list = Array.from(new Set(list));\n                if (!list) {\n                    html_concat += x;\n                    return;\n                }\n                if (list.length === 1 && list[0] === x) {\n                    html_concat += options.decode_uri ? decodeURI(x) : getHyperLink(x);\n                } else {\n                    for (i = 0; i < list.length; i++) {\n                        if (options.decode_uri)\n                            x = x.replace(list[i], decodeURI(list[i]));\n                        else\n                            x = x.replaceAll(new RegExp(`(\\\\s|^)(${list[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`,\"g\"), '$1' + getHyperLink(list[i]));\n                    }\n                    html_concat += x;\n                }\n            }\n        }.bind(this));\n        $obj.html(html_concat);\n    });\n    return this;\n};\n\nvar utils = {\n    uuid: function () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0,\n                v = c == 'x' ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n    },\n\n    utoa: function (str) {\n        return window.btoa(_.unescape(encodeURIComponent(str)));\n    },\n\n    atou: function (str) {\n        return decodeURIComponent(_.escape(window.atob(str)));\n    },\n\n    now: function () {\n        return Math.floor(moment.now() / 1000);\n    },\n\n    pretty_time: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format('HH:mm:ss');\n    },\n\n    pretty_date: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'dddd, MMMM D, YYYY');\n    },\n\n    pretty_datetime: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'MMMM D, YYYY HH:mm:ss');\n    },\n\n    pretty_short_datetime_recent_chat: function (timestamp) {\n        timestamp = Number(timestamp ? moment(timestamp) : moment());\n        if (moment(timestamp).startOf('day').isSame(moment().startOf('day')) || Number(moment().subtract(12, 'hours') < timestamp)) {\n            return moment(timestamp).format(\"HH:mm:ss\");\n        }\n        if (Number(moment().subtract(12, 'hours')) > timestamp && Number(moment().subtract(7, 'days')) <= timestamp) {\n            return moment(timestamp).format(\"ddd\");\n        }\n        if (Number(moment().subtract(7, 'days')) > timestamp && Number(moment().subtract(1, 'year')) <= timestamp) {\n            return moment(timestamp).format(\"MMM D\");\n        }\n        if (timestamp && Number(moment().subtract(1, 'year')) > timestamp) {\n            return moment(timestamp).format(\"D MMM YYYY\");\n        }\n    },\n\n    pretty_short_datetime: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day'),\n            year = moment(datetime).startOf('year');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else if (year.isSame(moment().startOf('year'))) {\n            return datetime.format('MMM D');\n        } else {\n            return datetime.format('DD/MM/gg');\n        }\n    },\n\n    pretty_short_month_date: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else {\n            return datetime.format('MMM D, YYYY HH:mm:ss');\n        }\n    },\n\n    isImageType: function(type) {\n        if (type.indexOf('image') > -1 && !(type.indexOf('application') > -1))\n            return true;\n        else\n            return false;\n    },\n\n    tryReadingFile: function(file) {\n        return new Promise((resolve, reject) => {\n            let r = new FileReader();\n            r.onload = (e) => {\n                resolve();\n            };\n            r.onerror = (e) => {\n                console.log(r.error);\n                reject(r.error);\n            };\n            r.readAsDataURL(file)\n        });\n    },\n\n    getDomainFromUrl: function(url) {\n        let a = document.createElement('a');\n        if (url && !/^https?:\\/\\//i.test(url))\n            url = 'http://' + url;\n        a.href = url;\n        return a.hostname;\n    },\n\n    isVideoType: function(type) {\n        if (type.indexOf('video') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    file_type_icon: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'mdi-image';\n        if (filetype === 'audio')\n            return 'mdi-music-note';\n        if (filetype === 'video')\n            return 'mdi-filmstrip';\n        if (filetype === 'document')\n            return 'mdi-file-document-box';\n        if (filetype === 'presentation')\n            return 'mdi-presentation';\n        if (filetype === 'archive')\n            return 'mdi-zip-box';\n        if (filetype === 'file')\n            return 'mdi-file';\n        if (filetype === 'pdf')\n            return 'mdi-file-pdf';\n        return 'mdi-file'\n    },\n\n    file_type_icon_svg: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'image';\n        if (filetype === 'audio')\n            return 'file-audio';\n        if (filetype === 'video')\n            return 'file-video';\n        if (filetype === 'document')\n            return 'file-document';\n        if (filetype === 'presentation')\n            return 'file-presentation';\n        if (filetype === 'archive')\n            return 'file-zip';\n        if (filetype === 'file')\n            return 'file';\n        if (filetype === 'pdf')\n            return 'file-pdf';\n        return 'file'\n    },\n\n    pretty_file_type: function (mime_type) {\n        if (constants.MIME_TYPES.image.includes(mime_type))\n            return 'image';\n        if (constants.MIME_TYPES.audio.includes(mime_type))\n            return 'audio';\n        if (constants.MIME_TYPES.video.includes(mime_type))\n            return 'video';\n        if (constants.MIME_TYPES.document.includes(mime_type))\n            return 'document';\n        if (constants.MIME_TYPES.pdf.includes(mime_type))\n            return 'pdf';\n        if (constants.MIME_TYPES.presentation.includes(mime_type))\n            return 'presentation';\n        if (constants.MIME_TYPES.archive.includes(mime_type))\n            return 'archive';\n        if (constants.MIME_TYPES.table.includes(mime_type))\n            return 'electronic table';\n        return 'file';\n    },\n\n    pretty_file_type_with_article: function (mime_type) {\n        let type = utils.pretty_file_type(mime_type),\n            vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n        (type === 'pdf') && (type = 'document');\n        if (vowels.includes(type[0]))\n            return 'an ' + type;\n        else\n            return 'a ' + type;\n    },\n\n    pretty_size: function (size) {\n        if (!size && size != 0)\n            return \"\";\n        if (_.isNaN(Number(size)))\n            return size;\n        if (size < 1024) {\n            return size+' B';\n        } else if (size < 1048576) {\n            return (size/1024).toFixed(2)+' KiB';\n        } else if (size < 1073741824) {\n            return (size/1048576).toFixed(2)+' MiB';\n        } else {\n            return (size/1073741824).toFixed(2)+' GiB';\n        }\n    },\n\n    pretty_duration: function (duration) {\n        if (_.isNaN(Number(duration)))\n            return duration;\n        if (_.isUndefined(duration) || duration === \"\")\n            return \"\";\n        if (duration < 10)\n            return (\"0:0\" + duration);\n        if (duration < 60)\n            return (\"0:\" + duration);\n        if (duration >= 60)\n            return (Math.trunc(duration/60) + \":\" + ((duration%60 < 10) ? (\"0\" + (duration%60)) : duration%60));\n    },\n\n    pretty_name: function (name) {\n        return name ? (name[0].toUpperCase() + name.replace(/-/,' ').substr(1).toLowerCase()) : \"\";\n    },\n\n    getKeyByValue: function (object, value) {\n        return Object.keys(object).find(key => object[key] === value);\n    },\n\n    slice_string: function (str, from, to) {\n        to = _.isNumber(to) ? to : [...str].length;\n        if (str.length === [...str].length)\n            return str.slice(from, to);\n        else\n            return Array.from(str).slice(from, to).join(\"\");\n    },\n\n    slice_pretty_body: function (body, mutable_refs) {\n        if (!mutable_refs || !mutable_refs.length)\n            return body;\n        body = body || \"\";\n        mutable_refs = mutable_refs.filter(m => m.type === 'groupchat' || m.type === 'forward');\n        let pretty_body = Array.from(deps.Strophe.xmlescape(body));\n        mutable_refs && mutable_refs.forEach(function (ref) {\n            for (let idx = ref.start; idx < ref.end; idx++)\n                pretty_body[idx] = \"\";\n        }.bind(this));\n        return deps.Strophe.xmlunescape(pretty_body.join(\"\").trim());\n    },\n\n    markupBodyMessage: function (message, mention_tag) {\n        let attrs = _.clone(message.attributes),\n            mentions = attrs.mentions || [],\n            markups = attrs.markups || [],\n            mutable_refs = attrs.mutable_content || [],\n            blockquotes = attrs.blockquotes || [],\n            markup_body = Array.from(deps.Strophe.xmlescape(attrs.original_message || attrs.message || \"\"));\n        !mention_tag && (mention_tag = 'span');\n\n        mutable_refs.forEach(function (muted) {\n            for (let idx = muted.start; idx < muted.end; idx++)\n                markup_body[idx] = \"\";\n        }.bind(this));\n\n        mentions.forEach(function (mention) {\n            let start_idx = mention.start,\n                end_idx = mention.end > (markup_body.length - 1) ? (markup_body.length - 1) : (mention.end - 1), target = mention.target;\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (mention.is_gc) {\n                let id = target.match(/\\?id=\\w*/),\n                    jid = target.match(/\\?jid=.*/);\n                if (id)\n                    target = id[0].slice(4);\n                else if (jid)\n                    target = jid[0].slice(5);\n                else {\n                    target = \"\";\n                    mention.me = true;\n                }\n            }\n            else\n                target = target.slice(5);\n            if (mention_tag === 'mention'){\n                markup_body[start_idx] = '<' + mention_tag + ' data-target=\"?jid=' + target + '\">' + markup_body[start_idx];\n                markup_body[end_idx] += '</' + mention_tag + '>';\n                return;\n            }\n            markup_body[start_idx] = '<' + mention_tag + ' data-target=\"' + target + '\" class=\"mention' + (mention.me ? ' ground-color-100' : '') + '\">' + markup_body[start_idx];\n            markup_body[end_idx] += '</' + mention_tag + '>';\n        }.bind(this));\n\n        markups.forEach(function (markup) {\n            let start_idx = markup.start,\n                end_idx = markup.end > (markup_body.length - 1) ? (markup_body.length - 1) : (markup.end - 1);\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (markup.markup.length) {\n                let start_tags = \"\",\n                    end_tags = \"\";\n                markup.markup.forEach(function (mark_up_style) {\n                    if (typeof(mark_up_style) === 'object') {\n                        start_tags = '<a target=\"_blank\" class=\"msg-hyperlink\" href=\"' + mark_up_style.uri + '\">' + start_tags;\n                        end_tags += '</a>';\n                    } else {\n                        start_tags = '<' + mark_up_style[0].toLowerCase() + '>' + start_tags;\n                        end_tags += '</' + mark_up_style[0].toLowerCase() + '>';\n                    }\n                }.bind(this));\n                markup_body[start_idx] = start_tags + markup_body[start_idx];\n                markup_body[end_idx] += end_tags;\n            }\n        }.bind(this));\n\n        blockquotes.forEach(function (quote) {\n            let end_idx = quote.end > (markup_body.length - 1) ? (markup_body.length - 1) : (quote.end - 1);\n            for (let idx = quote.start; idx < (quote.start + constants.QUOTE_MARKER.length); idx++) {\n                if (idx === end_idx)\n                    markup_body[idx] = '<br>';\n                else\n                    markup_body[idx] = \"\";\n\n            }\n            for (let idx = quote.start; idx < end_idx; idx++) {\n                if (markup_body[idx] === '\\n') {\n                    for (let child_idx = idx + 1; child_idx <= (idx + constants.QUOTE_MARKER.length); child_idx++)\n                        markup_body[child_idx] = \"\";\n                    idx+= constants.QUOTE_MARKER.length - 1;\n                }\n            }\n            if (mention_tag === 'mention'){\n                markup_body[quote.start] = '<blockquote>';\n                markup_body[end_idx] += '</blockquote>';\n                return;\n            }\n            markup_body[quote.start] = '<div class=\"quote\">';\n            markup_body[end_idx] += '</div>';\n        }.bind(this));\n\n        return markup_body.join(\"\").trim();\n    },\n\n    getOS: function() {\n        let platform = window.navigator.platform,\n            macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n            windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n            os = null;\n\n        if (macosPlatforms.indexOf(platform) !== -1) {\n            os = 'mac OS';\n        } else if (windowsPlatforms.indexOf(platform) !== -1) {\n            os = 'Windows';\n        } else if (!os && /Linux/.test(platform)) {\n            os = 'Linux';\n        }\n\n        return os;\n    },\n\n    isOverflownWidth: function(element) {\n        return element.scrollWidth > element.clientWidth;\n    },\n\n    isOverflownHeight: function(element) {\n        return element.scrollHeight > element.clientHeight;\n    },\n\n    render_data_form: function (data_form) {\n        let $data_form = $('<div class=\"data-form\"/>');\n        data_form.fields.forEach(function (field) {\n            if (field.type === 'hidden')\n                return;\n            if (field.type === 'fixed') {\n                let $fixed_field = $('<div class=\"data-form-field fixed-field\"/>');\n                field.label && $fixed_field.append($('<div class=\"label\"/>').text(field.label));\n                field.values.forEach(function (value) {\n                    let $input = $('<div class=\"value\"/>').text(value);\n                    $fixed_field.append($input);\n                }.bind(this));\n                $data_form.append($fixed_field);\n            }\n            if (field.type === 'boolean') {\n                let $input = $(`<button id=${field.var} class=\"data-form-field ground-color-100 btn-dark btn-flat btn-main boolean-field\"/>`).text(field.label);\n                $data_form.append($input);\n            }\n        }.bind(this));\n        return $data_form;\n    },\n\n    copyTextToClipboard: function(text, callback_msg, errback_msg) {\n        if (!window.navigator.clipboard) {\n            return;\n        }\n        window.navigator.clipboard.writeText(text).then(function() {\n            if (callback_msg) {\n                let info_msg = callback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this), function() {\n            if (errback_msg) {\n                let info_msg = errback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this));\n    },\n\n    callback_popup_message: function (info_msg, time) {\n        let $body = $(document.body),\n            $popup_msg = $('<div class=\"callback-popup-message\"/>').text(info_msg);\n        time = time || 3000;\n        $body.find('.callback-popup-message').remove();\n        $body.append($popup_msg);\n        setTimeout( function() {\n            $popup_msg.remove();\n        }, time);\n    },\n\n    emoji_size: function (count) {\n        let size;\n        switch (count) {\n            case 1:\n                size = 56;\n                break;\n            case 2:\n                size = 44;\n                break;\n            case 3:\n                size = 32;\n                break;\n            case 4:\n                size = 24;\n                break;\n            case 5:\n                size = 22;\n                break;\n            default:\n                size = 20;\n                break;\n        }\n        return size;\n    },\n\n    openWindow: function (url, errback) {\n        let win = window.open(url, '_blank');\n        if (win) {\n            win.focus();\n        } else {\n            errback && errback();\n        }\n    },\n\n    clearSelection: function () {\n        var selection = window.getSelection();\n        if (selection.empty) {\n            selection.empty();\n        } else if (selection.removeAllRanges) {\n            selection.removeAllRanges();\n        }\n    },\n\n    getCookie: function (name) {\n        let matches = window.document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n    },\n\n    isMobile: {\n        Android: function () {\n            return navigator.userAgent.match(/Android/i);\n        },\n        BlackBerry: function () {\n            return navigator.userAgent.match(/BlackBerry/i);\n        },\n        iOS: function () {\n            return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n        },\n        Opera: function () {\n            return navigator.userAgent.match(/Opera Mini/i);\n        },\n        Windows: function () {\n            return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);\n        },\n        any: function () {\n            return (this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows());\n        }\n    },\n\n    fromBase64toArrayBuffer: function (b64_string) {\n        return Uint8Array.from(atob(b64_string), c => c.charCodeAt(0)).buffer;\n    },\n\n    ArrayBuffertoBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    generateHOTPKey: async function(secret, counter) {\n        let Crypto = window.crypto.subtle;\n        let counterArray = this.padCounter(counter);\n\n        let key = await Crypto.importKey(\n            'raw',\n            secret,\n            { name: 'HMAC', hash: { name: 'SHA-1' } },\n            false,\n            ['sign']\n        );\n\n        let HS = await Crypto.sign('HMAC', key, counterArray);\n\n        return HS;\n    },\n\n    padCounter: function(counter) {\n        let buffer = new ArrayBuffer(8);\n        let bView = new DataView(buffer);\n\n        let byteString = '0'.repeat(64); // 8 bytes\n        let bCounter = (byteString + counter.toString(2)).slice(-64);\n\n        for (let byte = 0; byte < 64; byte += 8) {\n            let byteValue = parseInt(bCounter.slice(byte, byte + 8), 2);\n            bView.setUint8(byte / 8, byteValue);\n        }\n\n        return buffer;\n    },\n\n    DT: function(HS) {\n        let offset = HS[19] & 0b1111;\n        let P = ((HS[offset] & 0x7f) << 24) | (HS[offset + 1] << 16) | (HS[offset + 2] << 8) | HS[offset + 3]\n        let pString = P.toString(2);\n\n        return pString;\n    },\n\n    truncate: function(uKey) {\n        let Sbits = this.DT(uKey);\n        let Snum = parseInt(Sbits, 2);\n\n        return Snum;\n    },\n\n    generateHOTP: async function(secret, counter) {\n        let key = await this.generateHOTPKey(secret, counter);\n        let uKey = new Uint8Array(key);\n\n        let Snum = this.truncate(uKey);\n        let padded = ('000000' + (Snum % (10 ** 8))).slice(-8);\n\n        return padded;\n    },\n\n    hmacSha256: async function(key, message) {\n\n        let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n        let hashBuffer = await crypto.subtle.sign(\n            algorithm.name,\n            key,\n            message\n        );\n\n        return hashBuffer;\n    },\n\n    stringToArrayBuffer: function (string) {\n        let { length } = string;\n        let buffer = new Uint8Array(length);\n\n        for (let i = 0; i < length; i++) {\n            buffer[i] = string.charCodeAt(i);\n        }\n\n        return buffer;\n    },\n\n    AES: {\n        ALGO_NAME: 'AES-GCM',\n\n        decoder: new window.TextDecoder('utf-8'),\n        encoder: new window.TextEncoder('utf-8'),\n\n        decrypt: async function (masterKey, HMACData, payload) {\n            let masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let generatedHMAC = await utils.hmacSha256(authenticationKey, payload);\n\n            generatedHMAC = generatedHMAC.slice(0, generatedHMAC.byteLength - 16);\n\n            if (!(utils.ArrayBuffertoBase64(HMACData) === utils.ArrayBuffertoBase64(generatedHMAC)))\n                return;\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['decrypt'])\n\n\n            let decryptedBuffer = await window.crypto.subtle.decrypt({\n                name: 'AES-CBC',\n                iv,\n            }, encryptionKey, payload);\n\n            return utils.AES.decoder.decode(decryptedBuffer);\n        },\n\n        encrypt: async function (plaintext) {\n            let masterKey = window.crypto.getRandomValues(new Uint8Array(32)),\n                masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['encrypt']);\n\n            let encrypted = await utils.AES.generateAESencryptedMessage(iv, encryptionKey, plaintext);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let payload = await utils.hmacSha256(authenticationKey, encrypted);\n\n            payload = payload.slice(0, payload.byteLength - 16);\n\n            let keydata = new Uint8Array([...masterKey, ...new Uint8Array(payload)]);\n\n            return {\n                keydata: keydata.buffer,\n                payload: encrypted,\n            }\n        },\n\n        generateAESencryptedMessage: async function (iv, key, plaintext) {\n            let encryptOptions = {\n                name: 'AES-CBC',\n                iv,\n            };\n            let encodedPlaintext = utils.AES.encoder.encode(plaintext),\n                encrypted = await window.crypto.subtle.encrypt(encryptOptions, key, encodedPlaintext);\n\n            return encrypted;\n        },\n\n        arrayBufferConcat: function () {\n            let length = 0,\n                buffer = null;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                length += buffer.byteLength;\n            }\n\n            let joined = new Uint8Array(length),\n                offset = 0;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                joined.set(new Uint8Array(buffer), offset);\n                offset += buffer.byteLength;\n            }\n\n            return joined.buffer\n        },\n\n        generateAESKey: async function () {\n            let algo = {\n                name: utils.AES.ALGO_NAME,\n                length: constants.AES_KEY_LENGTH,\n            };\n            let keyUsage = ['encrypt', 'decrypt'],\n                key = await window.crypto.subtle.generateKey(algo, constants.AES_EXTRACTABLE, keyUsage);\n\n            return key;\n        }\n    },\n\n    getBrowser: function () {\n        // Get the user-agent string\n        let userAgentString =\n            navigator.userAgent;\n\n        // Detect Chrome\n        let chromeAgent =\n            userAgentString.indexOf(\"Chrome\") > -1;\n\n        // Detect Internet Explorer\n        let IExplorerAgent =\n            userAgentString.indexOf(\"MSIE\") > -1 ||\n            userAgentString.indexOf(\"Windows NT:\") > -1;\n\n        // Detect Firefox\n        let firefoxAgent =\n            userAgentString.indexOf(\"Firefox\") > -1;\n\n        // Detect Safari\n        let safariAgent =\n            userAgentString.indexOf(\"Safari\") > -1;\n\n        // Discard Safari since it also matches Chrome\n        if ((chromeAgent) && (safariAgent))\n            safariAgent = false;\n\n        // Detect Opera\n        let operaAgent =\n            userAgentString.indexOf(\"OP\") > -1;\n\n        // Discard Chrome since it also matches Opera\n        if ((chromeAgent) && (operaAgent))\n            chromeAgent = false;\n\n        if (safariAgent)\n            return 'Safari';\n        if (chromeAgent)\n            return 'Chrome';\n        if (IExplorerAgent)\n            return 'IE';\n        if (operaAgent)\n            return 'Opera';\n        if (firefoxAgent)\n            return 'Firefox';\n        return 'Unknown browser';\n    },\n\n    emoji: emoji,\n    images: images,\n    modals: modals,\n    dialogs: modals.dialogs\n};\n\n    export default utils;\n","// expands dependencies with internal xabber modules\nimport deps from \"xabber-dependencies\";\nimport constants from \"xabber-constants\";\nimport templates from \"xabber-templates\";\nimport sounds from \"xabber-sounds\";\nimport utils from \"xabber-utils\";\nimport client_translation_progress from \"xabber-translations-info\";\nimport version from \"xabber-version\";\nimport _ from \"underscore\";\n\nexport default _.extend({\n    constants: constants,\n    templates: templates,\n    sounds: sounds,\n    client_translation_progress: client_translation_progress,\n    utils: utils,\n    uuid: utils.uuid\n}, version, deps);","import env from \"xabber-environment\";\n\nlet constants = env.constants,\n    _ = env._,\n    $ = env.$,\n    moment = env.moment,\n    client_translation_progress = env.client_translation_progress,\n    xabber_i18next = env.xabber_i18next,\n    xabber_i18next_sprintf = env.xabber_i18next_sprintf,\n    uuid = env.uuid,\n    utils = env.utils,\n    bc = new BroadcastChannel(\"xabber-web\");\n\nbc.onmessage = (event) => {\n    if (event.data === `1` && !bc.disabled_client) {\n        bc.postMessage(`2`);\n    }\n    if (event.data === `2`) {\n        bc.disabled_client = true\n    }\n};\n\nbc.postMessage(`1`);\n\nlet Xabber = Backbone.Model.extend({\n    defaults: {\n        version_number: env.version_number,\n        actual_version_number: env.version_number,\n        audio: false,\n        video: false,\n        client_id: uuid().substring(0, 8),\n        client_name: 'Xabber for Web'\n    },\n\n    initialize: function () {\n        this.env = env;\n        this.fetchURLParams();\n        this.cleanUpStorage();\n        this.initDefaultLanguage();\n        this.detectMediaDevices();\n        window.navigator.mediaDevices && (window.navigator.mediaDevices.ondevicechange = this.detectMediaDevices.bind(this));\n        this.check_config = new $.Deferred();\n        this._settings = new this.Settings({id: 'settings'},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.settings = this._settings.attributes;\n        let url = window.location.host + window.location.pathname.replace(/\\//g, \"-\");\n        if (url[url.length - 1] == \"-\")\n            url.slice(0, url.length - 1);\n        this._cache = new Backbone.ModelWithStorage({id: `cache-${url}`},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.cache = this._cache.attributes;\n        this.cache.client_id && (this.set('client_id', this.cache.client_id));\n        this._cache.save('client_id', this.get('client_id'));\n        this.extendFunction();\n        this.plyr_players = [];\n        this.current_plyr_player = null;\n        this.on(\"change:actual_version_number\", this.throwNewVersion, this);\n        this.on(\"quit\", this.onQuit, this);\n        this._version_interval = setInterval(this.readActualVersion.bind(this), 600000);\n\n        window.ononline = () => {\n            this.disconnectWhenConnecting();\n        };\n    },\n\n    initDefaultLanguage: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        if (progress != 100)\n            lang = 'en';\n        this.set(\"default_language\", lang);\n    },\n\n    loadTranslations: async function (lang) {\n        return new Promise((resolve, reject) => {\n            let language = {};\n            language.lang = lang;\n            !language.lang && (language.lang = this.settings.language);\n            if (language.lang == 'default' && this.default_translation) {\n                language.lang = this.get(\"default_language\");\n                language.translation  = this.default_translation;\n                resolve(language);\n                return;\n            }\n            import(`~/translations/${language.lang.replace(/-/g, \"-r\")}.js`).then(translation => {\n                language.translation  = translation;\n                resolve(language)\n            });\n        });\n    },\n\n    setLocale: function (lang, translations) {\n        let default_lang = this.get(\"default_language\"),\n            _translations = {\n                [default_lang]: {\n                    translation: this.default_translation\n                }\n            };\n        lang && (_translations[lang] = {translation: translations});\n        xabber_i18next.use(xabber_i18next_sprintf);\n        xabber_i18next.init({\n            lng: default_lang,\n            debug: false,\n            pluralSeparator: '-',\n            resources: _translations\n        });\n        if (lang) {\n            xabber_i18next.changeLanguage(lang);\n            moment.locale(lang);\n        }\n        xabber_i18next.default_lang = xabber_i18next.getFixedT(default_lang);\n    },\n    getOneLiners: function () {\n        if (xabber_i18next.exists(\"motivating_oneliner\")) {\n            return xabber_i18next.t(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else\n            return [];\n    },\n    getString: function (id, params) {\n        if (xabber_i18next.exists(id)) {\n            return xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else\n            return \"\";\n    },\n\n    getQuantityString: function (id, count, params) {\n        let lang = xabber_i18next.language,\n            plurals = xabber_i18next.services.pluralResolver.getRule(lang);\n        if (!plurals)\n            return this.getString(`${id}_plural_0`, (params || [count]));\n        let _count = parseInt(count, 10);\n        xabber_i18next.services.pluralResolver.options.compatibilityJSON = 'v0';\n        let suffix = xabber_i18next.services.pluralResolver.getSuffix(lang, _count);\n        suffix = suffix.replace(/-/g, \"_\");\n        if (xabber_i18next.language == 'en' || !xabber_i18next.exists(`${id}_plural${suffix}`)) {\n            suffix = xabber_i18next.services.pluralResolver.getSuffix(\"en\", _count);\n            if (!suffix || suffix && !suffix.length)\n                suffix = '_0';\n            else\n                suffix = '_1';\n        }\n        return this.getString(`${id}_plural${suffix}`, (params || [count]));\n    },\n\n    error: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR) {\n            console.error(msg);\n        }\n    },\n\n    warn: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN) {\n            console.warn(msg);\n        }\n    },\n\n    info: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_INFO) {\n            console.log(msg);\n        }\n    },\n\n    debug: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_DEBUG) {\n            console.log(msg);\n        }\n    },\n\n    pretty_last_seen: function (seconds) {\n        if (seconds >= 0 && seconds <= 120)\n            return this.getString(\"last_seen_now\");\n        if (seconds > 120 && seconds < 3600)\n            return this.getString(\"last_seen_minutes\", [Math.trunc(seconds/60)]);\n        if (seconds >= 3600 && seconds < 7200)\n            return this.getString(\"last_seen_hours\");\n        if (seconds >= 3600*48*2)\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').format('LL')]);\n        else\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').calendar().toLowerCase()]);\n    },\n\n    readActualVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        // get version.js file from server and parse it\n        let rawFile = new XMLHttpRequest();\n        rawFile.open(\"GET\", \"version.js?\"+uuid(), true);\n        rawFile.onreadystatechange = () => {\n            if (rawFile.readyState === 4 && rawFile.status === 200) {\n                let text, json;\n                rawFile.onreadystatechange = null;\n                try {\n                    text = rawFile.responseText;\n                    json = JSON.parse(text.split('\\n')[1].slice(1, -1));\n                } catch (e) {\n                    return;\n                }\n                this.set({\n                    actual_version_number: json.version_number,\n                    version_description: json.version_description\n                });\n            }\n        };\n        rawFile.send();\n    },\n\n    extendFunction: function () {\n        if (!String.prototype.trimStart) {\n            String.prototype.trimStart = function () {\n                return this.replace(/^\\s+/, '');\n            }\n        }\n        if (!String.prototype.trimEnd) {\n            String.prototype.trimEnd = function () {\n                return Array.from(Array.from(this).reverse().join(\"\").trimStart(/\\s$/, '')).reverse().join(\"\");\n            }\n        }\n    },\n\n    onQuit: function () {\n        if (window.indexedDB.databases) {\n            window.indexedDB.databases().then((a) => {\n                a.forEach((db) => {\n                    window.indexedDB.deleteDatabase(db.name)\n                });\n            });\n        } else {\n            this.accounts.forEach((acc) => {\n                indexedDB.deleteDatabase(acc.cached_roster.database.name);\n                indexedDB.deleteDatabase(acc.cached_sync_conversations.database.name);\n                indexedDB.deleteDatabase(acc.cached_server_features.database.name);\n            });\n        }\n        let full_storage_name = this.getStorageName();\n        for (let key in window.localStorage) {\n            if (key.startsWith(full_storage_name) || key.startsWith(constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION + '-' + this.cache.id)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    cacheFavicons: async function () {\n        this._cache.save('favicon', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT).then(r => r.blob())));\n        this._cache.save('favicon_gray', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT_GREY).then(r => r.blob())));\n        this._cache.save('favicon_message', URL.createObjectURL(await fetch(constants.FAVICON_MESSAGE).then(r => r.blob())));\n    },\n\n    detectMediaDevices: function () {\n        this.getMediaDevices((media_devices) => {\n            this.set(media_devices);\n        });\n    },\n\n    getMediaDevices: function (callback, errback) {\n        if (window.navigator && window.navigator.mediaDevices) {\n            window.navigator.mediaDevices.enumerateDevices()\n                .then((devices) => {\n                    let media_devices = {audio: false, video: false};\n                    (devices.find(device => device.kind === 'audioinput')) && (media_devices.audio = true);\n                    (devices.find(device => device.kind === 'videoinput')) && (media_devices.video = true);\n                    callback && callback(media_devices);\n                })\n                .catch((err) => {\n                    errback && errback(err);\n                });\n        }\n    },\n\n    throwNewVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        let version_number = this.get('actual_version_number'),\n            version_description = this.get('version_description');\n        utils.dialogs.common(this.getString(\"dialog_version_update__header\", [constants.CLIENT_NAME]), `${this.getString(\"dialog_version_update__confirm_text__new_version\", [version_number])}<div class=\"new-version-description client-text-color-500\">${version_description}</div>${this.getString(\"dialog_version_update__confirm_text__question_reload_page\")}`,\n            {ok_button: {text: this.getString(\"dialog_version_update__button_reload\")}, cancel_button: {text: this.getString(\"dialog_version_update__option_not_now\")}}\n        ).done((result) => {\n            if (result) {\n                window.location.reload(true);\n            }\n        });\n    },\n\n    Settings: Backbone.ModelWithStorage.extend({\n        defaults: {\n            max_connection_retries: -1,\n            idling: true,\n            idling_time: 'default',\n            notifications: true,\n            notifications_private: true,\n            notifications_group: true,\n            jingle_calls: true,\n            notifications_volume_enabled: true,\n            notifications_volume: 0.50,\n            message_preview_private: false,\n            message_preview_group: false,\n            private_sound: true,\n            group_sound: true,\n            background: {type: 'default'},\n            side_panel: {theme: 'dark', blur: false, transparency: 50},\n            appearance: {blur: 0, vignetting: 0, color: '#E0E0E0'},\n            main_color: 'default',\n            emoji_font: 'default',\n            sound_on_private_message: 'beep_up',\n            sound_on_group_message: 'beep_up',\n            call_attention: true,\n            load_media: 'default',\n            typing_notifications: 'default',\n            mapping_service: 'default',\n            sound_on_call: 'marching-band-dave-girtsman',\n            sound_on_dialtone: 'marching-band-dave-girtsman',\n            sound_on_connection: '_call_connecting',\n            sound_on_attention: 'attention',\n            sound_on_auth_request: '_auth_request',\n            sound_on_call_busy: '_phone_busy',\n            hotkeys: 'enter',\n            avatar_shape: 'circle',\n            language: 'default',\n            load_history: true,\n            mam_requests_limit: 200,\n            mam_messages_limit_start: 1,\n            mam_messages_limit: 20,\n        }\n    }),\n\n    start: function () {\n        this.check_config.done((result) => {\n            this.cacheFavicons();\n            this.check_config = undefined;\n            result && this.trigger('start');\n        });\n    },\n\n    configure: function (config) {\n        this.loadTranslations(this.get('default_language')).then((language) => {\n            this.default_translation = language.translation ;\n            return this.loadTranslations();}).then((language) => {\n                this.setLocale(language.lang, language.translation);\n            _.extend(constants, _.pick(config, [\n                'CONNECTION_URL',\n                'PERSONAL_AREA_URL',\n                'LOG_LEVEL',\n                'SYNCHRONIZATION_RSM_MAX',\n                'ASSETS_URL_PREFIX',\n                'CONTAINER_ELEMENT',\n                'XABBER_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT',\n                'REGISTER_XMPP_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT_TEXT',\n                'USE_SOCIAL_AUTH',\n                'CONTAINER',\n                'CHECK_VERSION',\n                'DEFAULT_LOGIN_SCREEN',\n                'STORAGE_NAME_ENDING',\n                'CLIENT_NAME',\n                'SHORT_CLIENT_NAME',\n                'CLIENT_LOGO',\n                'TOOLBAR_LOGO',\n                'ENABLE_XABBER_ACCOUNT',\n                'SCREEN_ABOUT',\n                'DISABLE_LOOKUP_WS',\n                'PRIVACY_LOAD_MEDIA',\n                'PRIVACY_TYPING_NOTIFICATIONS',\n                'PRIVACY_MAPPING_SERVICE',\n            ]));\n\n            let log_level = constants['LOG_LEVEL_'+constants.LOG_LEVEL];\n            constants.LOG_LEVEL = log_level || constants.LOG_LEVEL_ERROR;\n            constants.MATERIAL_COLORS.includes(config.MAIN_COLOR) && (constants.MAIN_COLOR = config.MAIN_COLOR);\n            (this._settings.get(\"main_color\") == 'default') && this._settings.set(\"main_color\", constants.MAIN_COLOR);\n            this.trigger(\"update_main_color\");\n            if (this._settings.get(\"load_media\") === 'default' && config.PRIVACY_LOAD_MEDIA != null)\n                this._settings.set(\"load_media\", config.PRIVACY_LOAD_MEDIA);\n            else if (this._settings.get(\"load_media\") === 'default')\n                this._settings.set(\"load_media\", true);\n            if (this._settings.get(\"typing_notifications\") === 'default' && config.PRIVACY_TYPING_NOTIFICATIONS != null)\n                this._settings.set(\"typing_notifications\", config.PRIVACY_TYPING_NOTIFICATIONS);\n            else if (this._settings.get(\"typing_notifications\") === 'default')\n                this._settings.set(\"typing_notifications\", true);\n            if (this._settings.get(\"mapping_service\") === 'default' && config.PRIVACY_MAPPING_SERVICE != null)\n                this._settings.set(\"mapping_service\", config.PRIVACY_MAPPING_SERVICE);\n            else if (this._settings.get(\"mapping_service\") === 'default')\n                this._settings.set(\"mapping_service\", true);\n            if (this._settings.get(\"idling_time\") === 'default' && config.IDLING_DEFAULT_TIMEOUT != null)\n                this._settings.set(\"idling_time\", config.IDLING_DEFAULT_TIMEOUT);\n            else if (this._settings.get(\"idling_time\") === 'default')\n                this._settings.set(\"idling_time\", constants.IDLING_DEFAULT_TIMEOUT);\n\n            window.xabber = this;\n            _.extend(window, env);\n            if (config.SYNCHRONIZATION_RSM_MAX)\n                constants.SYNCHRONIZATION_RSM_MAX = config.SYNCHRONIZATION_RSM_MAX;\n            if (config.ASSETS_URL_PREFIX) {\n                constants.ASSETS_URL_PREFIX = config.ASSETS_URL_PREFIX;\n            }\n            if (config.BACKGROUND_IMAGES_XML_URL)\n                constants.BACKGROUND_IMAGES_XML_URL = config.BACKGROUND_IMAGES_XML_URL;\n            if (config.BACKGROUND_PATTERNS_XML_URL)\n                constants.BACKGROUND_PATTERNS_XML_URL = config.BACKGROUND_PATTERNS_XML_URL;\n            if (config.CONTAINER_ELEMENT)\n                constants.CONTAINER_ELEMENT = config.CONTAINER_ELEMENT;\n            if (config.REGISTRATION_DOMAINS)\n                constants.REGISTRATION_DOMAINS = config.REGISTRATION_DOMAINS;\n            if (config.LOGIN_DOMAINS)\n                constants.LOGIN_DOMAINS = config.LOGIN_DOMAINS;\n            if (config.TRUSTED_DOMAINS)\n                constants.TRUSTED_DOMAINS = config.TRUSTED_DOMAINS;\n            if (config.RECOMMENDED_DOMAIN)\n                constants.RECOMMENDED_DOMAIN = config.RECOMMENDED_DOMAIN;\n            if (config.DOWNTIME_RECONNECTION_TIMEOUT)\n                constants.DOWNTIME_RECONNECTION_TIMEOUT = config.DOWNTIME_RECONNECTION_TIMEOUT;\n            if (config.IDLING_MINIMAL_TIMEOUT)\n                constants.IDLING_MINIMAL_TIMEOUT = config.IDLING_MINIMAL_TIMEOUT;\n            if (config.IDLING_MAXIMUM_TIMEOUT)\n                constants.IDLING_MAXIMUM_TIMEOUT = config.IDLING_MAXIMUM_TIMEOUT;\n            if (config.PING_SENDING_INTERVAL)\n                constants.PING_SENDING_INTERVAL = config.PING_SENDING_INTERVAL;\n            if (config.REGISTRATION_BUTTON != null)\n                constants.REGISTRATION_BUTTON = config.REGISTRATION_BUTTON;\n            if (config.REGISTRATION_CUSTOM_DOMAIN != null)\n                constants.REGISTRATION_CUSTOM_DOMAIN = config.REGISTRATION_CUSTOM_DOMAIN;\n            if (config.LOGIN_CUSTOM_DOMAIN != null)\n                constants.LOGIN_CUSTOM_DOMAIN = config.LOGIN_CUSTOM_DOMAIN;\n            if (config.SHORT_CLIENT_DESCRIPTION)\n                constants.SHORT_CLIENT_DESCRIPTION = config.SHORT_CLIENT_DESCRIPTION;\n            if (config.DEFAULT_EMOJI_FONT)\n                constants.DEFAULT_EMOJI_FONT = config.DEFAULT_EMOJI_FONT;\n            if (config.EMOJI_FONTS_LIST && _.isObject(config.EMOJI_FONTS_LIST))\n                constants.EMOJI_FONTS_LIST = config.EMOJI_FONTS_LIST;\n            (this._settings.get(\"emoji_font\") == 'default') && this._settings.set(\"emoji_font\", constants.DEFAULT_EMOJI_FONT);\n\n            if (config.CLIENT_NAME && !config.SHORT_CLIENT_NAME)\n                constants.SHORT_CLIENT_NAME = config.CLIENT_NAME;\n            else if (!config.CLIENT_NAME && config.SHORT_CLIENT_NAME)\n                constants.CLIENT_NAME = config.SHORT_CLIENT_NAME;\n\n            if (config.TURN_SERVERS_LIST) {\n                if (_.isArray(config.TURN_SERVERS_LIST))\n                    _.extend(constants, {TURN_SERVERS_LIST: config.TURN_SERVERS_LIST});\n                else if (_.isObject(config.TURN_SERVERS_LIST) && Object.keys(config.TURN_SERVERS_LIST).length)\n                    _.extend(constants, {TURN_SERVERS_LIST: [config.TURN_SERVERS_LIST]});\n            }\n\n            constants.FAVICON_DEFAULT = constants.ASSETS_URL_PREFIX + constants.FAVICON_DEFAULT;\n            constants.FAVICON_DEFAULT_GREY = constants.ASSETS_URL_PREFIX + constants.FAVICON_DEFAULT_GREY;\n            constants.FAVICON_MESSAGE = constants.ASSETS_URL_PREFIX + constants.FAVICON_MESSAGE;\n            constants.BACKGROUND_IMAGE = constants.ASSETS_URL_PREFIX + constants.BACKGROUND_IMAGE;\n\n\n            constants.CLIENT_LOGO = constants.ASSETS_URL_PREFIX + constants.CLIENT_LOGO;\n            constants.TOOLBAR_LOGO = constants.ASSETS_URL_PREFIX + constants.TOOLBAR_LOGO;\n\n            if (!constants.CONNECTION_URL) {\n                utils.dialogs.error(this.getString(\"client_error__missing_connection_url\"));\n                this.check_config.resolve(false);\n                return;\n            }\n            if (bc.disabled_client){\n                utils.dialogs.error(this.getString(\"client_error__another_tab_active\"));\n                this.check_config.resolve(false);\n                return;\n            }\n\n            let self = this;\n            if (!Backbone.useLocalStorage && !this.cache.ignore_localstorage_warning) {\n                utils.dialogs.warning(this.getString(\"client_warning__no_local_storage\"),\n                    [{name: this.getString(\"ignore\"), text: this.getString(\"client_error__option_show_msg_again\")}]\n                ).done(function (res) {\n                    res && res.ignore && self._cache.save('ignore_localstorage_warning', true);\n                });\n            }\n\n            this.requestNotifications().done(function (granted) {\n                let emoji_dfd = new $.Deferred();\n                emoji_dfd.done(() => {\n                    self._cache.save('notifications', granted);\n                    self._cache.save('endpoint_key', undefined);\n                    self.check_config.resolve(true);\n                })\n                if (self._settings.get(\"emoji_font\") === 'system' || !Object.keys(constants.EMOJI_FONTS_LIST).length)\n                    emoji_dfd.resolve();\n                else {\n                    let emoji_obj = constants.EMOJI_FONTS_LIST[self._settings.get(\"emoji_font\")],\n                        emoji_url;\n                    if (emoji_obj && emoji_obj.url) {\n                        emoji_url = emoji_obj.url;\n                        self.loadEmojiFont(emoji_url, emoji_dfd);\n                    }\n                    else {\n                        emoji_dfd.resolve();\n                    }\n                }\n            });\n        });\n    },\n\n    fetchURLParams: function () {\n        let splitted_url = window.location.href.split(/[?#]/),\n            splitted_url_anchor = window.location.href.split('#');\n        this.url_params = {};\n        if (splitted_url.length > 1) {\n            let idx, param, params = splitted_url[1].split('&');\n            for (idx = 0; idx < params.length; idx++) {\n                param = params[idx].split('=');\n                if (param.length === 1) {\n                    this.url_params[param[0]] = null;\n                } else {\n                    this.url_params[param[0]] = param[1];\n                }\n            }\n        }\n        if (splitted_url_anchor.length > 1) {\n            this.url_params['anchor'] = splitted_url[1];\n        }\n        window.history.pushState(null, null, window.location.pathname);\n    },\n\n    getStorageName: function () {\n        let name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        if (constants.STORAGE_NAME_ENDING) {\n            name = name + '-' + constants.STORAGE_NAME_ENDING;\n        }\n        return name;\n    },\n\n    cleanUpStorage: function () {\n        let full_storage_name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        for (let key in window.localStorage) {\n            if (key.startsWith('xabber') &&\n                    !key.startsWith(full_storage_name)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    requestNotifications: function () {\n        let result = new $.Deferred(),\n            self = this;\n        if (!window.Notification) {\n            result.resolve(null);\n        } else if (window.Notification.permission === 'granted') {\n            result.resolve(true);\n        } else {\n            if (!self.cache.ignore_notifications_warning)\n                self.notifications_placeholder = new self.NotificationsPlaceholder();\n            result.resolve(false);\n        }\n        return result.promise();\n    },\n\n    updateFaviconConnected: function () {\n        let is_disconnected = false;\n        this.accounts.each((account) => {\n            if (account.get('enabled') && (!account.isConnected() || (account.session && account.session.get('auth_failed')))){\n                is_disconnected = true;\n                return;\n            }\n        });\n        this.updateAllMessageCounterOnDisconnect(is_disconnected);\n    },\n\n    disconnectWhenConnecting: function (is_fast) {\n        this.accounts.each((account) => {\n            if (account.session && account.connection && account.get('enabled') && !account.session.get('reconnecting') && !account.session.get('connected')){\n                account.activate();\n            }\n        });\n    },\n\n    extendWith: function () {\n        return _.reduce(arguments, function (instance, module) {\n            return instance;\n        }, this);\n    }\n});\n\nexport default new Xabber();\n","import xabber from \"xabber-core\";\nimport { transliterate as query_transliterate } from 'transliteration';\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.base,\n    utils = env.utils,\n    uuid = env.uuid,\n    $ = env.$,\n    _ = env._;\n\nxabber.ViewPath = function (str) {\n    this.path = str.split('.');\n    this.applyTo = function (obj) {\n        let result = obj;\n        for (let idx = 0; idx < this.path.length; idx++) {\n            if (!(result = _.result(result, this.path[idx]))) {\n                return null;\n            }\n        }\n        return result;\n    };\n};\n\nxabber.BasicView = Backbone.View.extend({\n    template: function () {\n        return '';\n    },\n\n    initialize: function (options) {\n        options || (options = {});\n        this.parent = options.parent;\n        this.vname = options.vname;\n        this.children = {};\n        this.$el.addClass(options.classlist);\n        if (!options.el) {\n            this.$el.html(this.template(_.extend({view: this}, constants)));\n        }\n        if (!_.isUndefined(this.ps_selector)) {\n            this.ps_container = this.$(this.ps_selector);\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        this.data = new Backbone.Model({visible: false});\n        this.data.on(\"change:visible\", this.onChangedVisibility, this);\n        xabber.on(\"update_css\", function (options) {\n            this.updateCSS && this.updateCSS();\n            (options && options.size_changed && this.windowResized) && this.windowResized();\n        }, this);\n        this._initialize && this._initialize(options);\n        this.__initialize && this.__initialize(options);\n    },\n\n    isVisible: function () {\n        return this.data.get('visible');\n    },\n\n    onChangedVisibility: function () {},\n\n    show: function () {\n        this.onShow.apply(this, arguments);\n        this.data.set('visible', true);\n        this.trigger('after_show', this);\n        this.updateScrollBar();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    onShow: function () {\n        this.render.apply(this, arguments);\n        _.each(this.children, function (view) {\n            view.render.apply(view, arguments);\n        });\n    },\n\n    onHide: function () {\n        _.each(this.children, function (view) {\n            view.onHide.apply(view, arguments);\n        });\n    },\n\n    detach: function () {\n        this.$el.detach();\n    },\n\n    child: function (name) {\n        return this.children[name];\n    },\n\n    addChild: function (name, constructor, options) {\n        let view;\n        if (constructor instanceof Backbone.View) {\n            view = constructor;\n            view.parent = this;\n        } else {\n            view = new constructor(_.extend({\n                parent: this,\n                vname: name\n            }, options));\n        }\n        this.children[name] = view;\n        return view;\n    },\n\n    removeChild: function (name, options) {\n        options || (options = {});\n        let view = this.children[name];\n        if (view) {\n            delete this.children[name];\n            options.soft ? view.detach() : (view.trigger(\"remove\") && view.remove());\n        }\n    },\n\n    removeChildren: function () {\n        _.each(_.keys(this.children), (view_id) => {\n            this.removeChild(view_id);\n        });\n    },\n\n    setCustomCss: function (styles) {\n        this.$el.css(styles);\n    },\n\n    removeCustomCss: function () {\n        this.$el.removeAttr('style');\n    },\n\n    saveScrollBarOffset: function () {\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.data.set('scroll_top', this.getScrollTop());\n            }\n        }\n    },\n\n    updateScrollBar: function () {\n        // let start_scrolled_bottom = this.getScrollBottom();\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.ps_container.perfectScrollbar('update');\n            } else {\n                this.data.set('scroll_top', undefined);\n                this.scrollTo(scroll_top);\n            }\n        }\n        // this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - start_scrolled_bottom);\n        return this;\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container[0].scrollTop = offset;\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    scrollToBottom: function () {\n        let scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        this.scrollTo(scrollHeight - offsetHeight);\n    },\n\n    scrollToChild: function ($child) {\n        let scrollTop = _.reduce($child.prevAll(), function (sum, el) {\n            return sum + el.offsetHeight + 2;\n        }, 0);\n        this.scrollTo(scrollTop);\n    },\n\n    getScrollTop: function () {\n        return this.ps_container[0].scrollTop;\n    },\n\n    getScrollBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight - (scrollTop + offsetHeight);\n    },\n\n    getPercentScrolled: function () {\n        if (this.isScrolledToTop()) {\n            return 0;\n        }\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollTop / (scrollHeight - offsetHeight);\n    },\n\n    isScrolledToTop: function () {\n        return this.getScrollTop() === 0;\n    },\n\n    isScrolledToBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return (scrollHeight - (scrollTop + offsetHeight)) < 10;\n    }\n});\n\nxabber.NodeView = xabber.BasicView.extend({\n    onShow: function (options, tree) {\n        if ((xabber.body.data.get('contact_details_view') && (this.vname === 'right_contact'))){\n            xabber.body.data.get('contact_details_view').scrollTo(xabber.body.data.get('contact_details_view').data.get('scroll_top'));\n            xabber.body.data.set('contact_details_view', null)\n            return;\n        }\n        if (options.close_settings && this.children.main_overlay){\n            this.children.main_overlay.hide();\n            this.children.main_overlay.$el.detach();\n            return;\n        }\n        if (!(tree && tree.main_overlay)){\n            _.each(this.children, function (view) {\n                view.hide();\n            });\n        }\n        if (!(tree && tree.main_overlay))\n            this.$el.children().detach();\n        tree = this.patchTree(tree, options) || tree;\n        _.each(this.children, (view, name) => {\n            if (tree.main_overlay && (name != 'main_overlay'))\n                return;\n            if (_.has(tree, name)) {\n                if (name !== 'login')\n                    this.$el.append(view.$el);\n                this.$el.switchClass('hidden', name === 'login');\n                view.show(options, tree[name]);\n            }\n        });\n        return this.render(options);\n    },\n\n    onHide: function (options) {\n        _.each(this.children, function (view) {\n            view.hide(options);\n        });\n    },\n\n    patchTree: function () {}\n});\n\nxabber.Container = xabber.BasicView.extend({\n    className: 'container',\n\n    render: function (options, path) {\n        if (_.isNull(path)){\n            this.$el.addClass('hidden');\n            return;\n        } else {\n            this.$el.removeClass('hidden');\n        }\n        let new_view = path.applyTo(options);\n        this.$el.children().detach();\n        if (this.view !== new_view) {\n            this.onHide(options);\n        }\n        this.view = new_view;\n        if (this.view) {\n            this.$el.append(this.view.$el);\n            this.view.show(options);\n        }\n        return this;\n    },\n\n    onHide: function (options) {\n        if (this.view) {\n            this.view.hide(options);\n        }\n        this.view = null;\n    }\n});\n\nxabber.SearchView = xabber.BasicView.extend({\n    events: {\n        \"keydown .search-input\": \"keyUpOnSearch\",\n        \"focusout .search-input\": \"clearSearchSelection\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .list-item\": \"onClickItem\"\n    },\n\n    keyUpOnSearch: function (ev) {\n        ev.stopPropagation();\n        this.ids = this.$('.list-item:not(.hidden)').map(function () {\n            return $(this).data('id');\n        }).toArray();\n        let $selection = this.getSelectedItem();\n        if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n            return this.selectNextItem();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            return this.selectPreviousItem();\n        }\n        if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n            ev.preventDefault();\n            return this.onEnterPressed($selection);\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            if ($(ev.target).val())\n                return this.clearSearch();\n            else\n                this.close();\n        }\n        this.updateSearch();\n    },\n\n    getSelectedItem: function () {\n        return this.$('.list-item[data-id=\"'+this.selection_id+'\"]');\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id)\n            return;\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop || $selection[0].clientHeight + $selection[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        if (arrow === 'up' && ($selection[0].offsetTop <= this.ps_container[0].scrollTop || $selection[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    selectNextItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n    },\n\n    selectPreviousItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n    },\n\n    updateSearch: function () {\n        if (!this._update_search_timeout) {\n            let query = this.$('.search-input').val();\n            this.$('.search-form').switchClass('active', query);\n            this.clearSearchSelection();\n            if (query)\n                this.search(query.toLowerCase());\n            else {\n                this.$('.list-item').removeClass('hidden');\n                this.onEmptyQuery();\n            }\n            this.updateScrollBar();\n            this.query = false;\n            this._update_search_timeout = setTimeout(() => {\n                this._update_search_timeout = null;\n                this.query && this.updateSearch();\n            }, 150);\n        } else {\n            this.query = true;\n        }\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.updateSearch();\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n    },\n\n    searchAll: function () {\n        this.$('.list-item').removeClass('hidden');\n    },\n\n    keyUpOnSearchWithQuery: function () {},\n\n    close: function () {},\n\n    search: function () {},\n\n    onEnterPressed: function () {},\n\n    onEmptyQuery: function () {},\n\n    onClickItem: function () {}\n});\n\n  xabber.SearchPanelView = xabber.SearchView.extend({\n      events: {\n          \"keydown .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\",\n          \"click .btn-search-messages\": \"updateSearchWithMessages\"\n      },\n\n      updateSearchWithMessages: function (ev) {\n          this.search_messages = true;\n          this.updateSearch();\n      },\n\n      keyUpOnSearch: function (ev) {\n          ev.stopPropagation();\n          if ($(ev.target).val()) {\n              this.keyUpOnSearchWithQuery(ev);\n              return;\n          }\n          this.ids = this.$('.list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItem();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItem();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItem();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      onScrollY: function (options) {\n          if (xabber.all_searched_messages && xabber.all_searched_messages.length && this.queryid && !this._loading_messages && !this._messages_loaded && this.isScrolledToBottom()) {\n              this._loading_messages = true;\n              options = options || {};\n              this.queryid = uuid();\n              options.query_id = this.queryid;\n              let accounts = xabber.accounts.connected;\n              accounts.forEach((account) => {\n                  let first_message = xabber.all_searched_messages.find(message => (message.account.get('jid') === account.get('jid')));\n                  if (!first_message || account.searched_msgs_loaded) {\n                      // this._loading_messages = false;\n                      return;\n                  }\n                  options.account = account;\n                  options.before = first_message.get('archive_id');\n                  this.MAMRequest(this.query_text, options, (messages) => {\n                      _.each(messages, (message) => {\n                          let message_from_stanza = account.chats.receiveChatMessage(message,\n                              _.extend({is_searched: true}, options)\n                              ),\n                              msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza),\n                              $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                          if (msg_idx === 0) {\n                              $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                          } else {\n                              $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                          }\n                      });\n                      this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                      this.updateScrollBar();\n                      this._loading_messages = false;\n                  });\n              });\n              (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n          }\n      },\n\n      onScroll: function () {},\n\n      keyUpOnSearchWithQuery: function (ev) {\n          ev.stopPropagation();\n          this.ids = this.$('.searched-lists-wrap .list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItemWithQuery();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          else if (ev.keyCode === constants.KEY_ENTER){\n              this.search_messages = true;\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      getSelectedItemWithQuery: function () {\n          return this.$('.searched-lists-wrap .list-item[data-id=\"'+this.selection_id+'\"]');\n      },\n\n      selectItemWithQuery: function (id, arrow) {\n          if (!id) {\n              if (this.isScrolledToBottom())\n                  this.onScrollY();\n              return;\n          }\n          this.clearSearchSelection();\n          let $selection = this.$('.searched-lists-wrap .list-item[data-id=\"'+id+'\"]');\n          if ($selection.length) {\n              this.selection_id = id;\n          } else {\n              this.ps_container[0].scrollTop = 0;\n              $selection = this.$('.searched-lists-wrap .list-item:visible').first();\n              this.selection_id = $selection.data('id');\n          }\n          if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n          || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop < this.ps_container[0].scrollTop))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          if (arrow === 'up' && ($selection[0].offsetTop + $selection.parent().parent()[0].offsetTop <= this.ps_container[0].scrollTop\n          || $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          $selection.addClass('selected');\n      },\n\n      selectNextItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n      },\n\n      selectPreviousItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n      },\n\n      search: function (query) {\n          this.$(this.main_container).addClass('hidden');\n          clearTimeout(this.keyup_timeout);\n          this.keyup_timeout = null;\n          this.query_text = query;\n          let query_transliterated = query_transliterate(query);\n          this.$('.contacts-list').html(\"\");\n          this.$('.chats-list').html(\"\");\n          xabber.accounts.connected.forEach((acc) => {\n              let saved_chat = acc.chats.getSavedChat();\n              saved_chat.set('opened', true);\n              saved_chat.item_view.updateLastMessage();\n          });\n          let query_chats = _.clone(xabber.chats);\n          query_chats.comparator = 'timestamp';\n          query_chats.sort('timestamp').forEach((chat) => {\n              let jid = chat.get('jid').toLowerCase(),\n                  name = chat.contact ? (chat.contact.get('roster_name') || chat.contact.get('name')) : chat.get('name');\n              name && (name = name.toLowerCase());\n              if (chat.get('timestamp') || chat.get('saved')) {\n                  if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                      || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1\n                      || (chat.get('saved') && query.includes('saved'))) {\n                      let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                          chat_item = xabber.chats_view.child(chat.get('id'));\n                      chat_item && (chat_item = chat_item.$el.clone().addClass(searched_by));\n                      if (chat_item) {\n                          this.$('.chats-list-wrap').removeClass('hidden');\n                          if (searched_by === 'by-name')\n                              this.$('.chats-list').prepend(chat_item);\n                          else if (this.$('.chats-list .by-jid').length)\n                              chat_item.insertBefore(this.$('.chats-list .by-jid').first());\n                          else\n                              this.$('.chats-list').append(chat_item);\n                          chat_item.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              xabber.chats_view.openChat(chat.item_view, {screen: xabber.body.screen.get('name')});\n                              chat_item.addClass('active');\n                          });\n                      }\n                  }\n              }\n          });\n          xabber.accounts.each((account) => {\n              account.contacts.each((contact) => {\n                  let jid = contact.get('jid').toLowerCase(),\n                      name = contact.get('roster_name') || contact.get('name'),\n                      chat = account.chats.get(contact.hash_id),\n                      chat_id = chat && chat.id;\n                  name && (name = name.toLowerCase());\n                  if (!chat_id || chat_id && !this.$('.chat-item[data-id=\"' + chat_id + '\"]').length)\n                      if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                          || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1) {\n                          let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                              item_list = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${account.get('jid')}\"] .list-item[data-jid=\"${jid}\"]`).first().clone().data('account-jid', account.get('jid'));\n                          item_list.attr({'data-color': account.settings.get('color'), 'data-account': account.get('jid')}).addClass(searched_by).prepend($('<div class=\"account-indicator ground-color-700\"/>'));\n                          if (searched_by === 'by-name')\n                              this.$('.contacts-list').prepend(item_list);\n                          else if (this.$('.contacts-list .by-jid').length)\n                              item_list.insertBefore(this.$('.contacts-list .by-jid').first());\n                          else\n                              this.$('.contacts-list').append(item_list);\n                          item_list.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              let chat = account.chats.getChat(contact);\n                              chat && xabber.chats_view.openChat(chat.item_view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                              item_list.addClass('active');\n                          });\n                      }\n              });\n          });\n          this.$('.chats-list-wrap').switchClass('hidden', !this.$('.chats-list').children().length);\n          this.$('.pinned-chat-list').switchClass('hidden', query);\n          this.$('.contacts-list-wrap').switchClass('hidden', !this.$('.contacts-list').children().length);\n          this.$('.messages-list-wrap').addClass('hidden').find('.messages-list').html(\"\");\n          if (query.length >= 2 && this.search_messages) {\n              this.search_messages = false;\n              this.queryid = uuid();\n              this.searchMessages(query, {query_id: this.queryid});\n          }\n          else if (query.length >= 2 && !this.search_messages){\n              this.$('.btn-search-messages').showIf(query);\n          }\n      },\n\n      searchMessages: function (query, options) {\n          this._loading_messages = true;\n          this._messages_loaded = false;\n          this.$('.messages-list-wrap').showIf(query);\n          this.$('.btn-search-messages').hideIf(query);\n          this.$('.messages-list-wrap .messages-list').html(env.templates.contacts.preloader());\n          options = options || {};\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.before && (options.before = \"\");\n          xabber.all_searched_messages = new xabber.SearchedMessages();\n          let accounts = xabber.accounts.connected;\n          accounts.forEach((account) => {\n              account.searched_msgs_loaded = false;\n              options.account = account;\n              this.MAMRequest(query, options, (messages) => {\n                  this.$('.messages-list-wrap .messages-list').html('');\n                  if (!this.query_text)\n                      return;\n                  _.each(messages, (message) => {\n                      if (!this.query_text)\n                          return;\n                      let message_from_stanza = account.chats.receiveChatMessage(message,\n                          _.extend({is_searched: true}, options)\n                          ),\n                          msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza), $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                      if (msg_idx === 0) {\n                          $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                      } else {\n                          $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                      }\n                  });\n                  this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                  this.updateScrollBar();\n                  this._loading_messages = false;\n              });\n          });\n          (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n      },\n\n      MAMRequest: function (query, options, callback, errback) {\n          let messages = [],\n              account = options.account,\n              queryid = uuid(),\n              iq = $iq({type: 'set'})\n                  .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                  .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                  .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                  .c('value').t(Strophe.NS.MAM).up().up()\n                  .c('field', {'var': 'withtext'})\n                  .c('value').t(query).up().up().up().cnode(new Strophe.RSM(options).toXML()),\n              handler = account.connection.addHandler((message) => {\n                  let $msg = $(message);\n                  if ($msg.find('result').attr('queryid') === queryid && options.query_id === this.queryid) {\n                      messages.push(message);\n                  }\n                  return true;\n              }, env.Strophe.NS.MAM);\n          account.sendIQFast(iq,\n              function (res) {\n                  account.connection.deleteHandler(handler);\n                  let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                  if ($fin.length && $fin.attr('queryid') === queryid) {\n                      let rsm_complete = ($fin.attr('complete') === 'true') ? true : false;\n                      rsm_complete && (account.searched_msgs_loaded = true);\n                  }\n                  callback && callback(messages);\n              },\n              function () {\n                  account.connection.deleteHandler(handler);\n                  errback && errback();\n              }\n          );\n      },\n\n      clearSearch: function (ev) {\n          ev && ev.preventDefault();\n          this.$('.search-input').val('');\n          this.updateSearch();\n          this.onEmptyQuery();\n      },\n\n      onEmptyQuery: function () {\n          xabber.accounts.forEach(function (account) {\n              account.searched_msgs_loaded = false;\n          });\n          this.query_text = null;\n          this.queryid = null;\n          this._messages_loaded = false;\n          this._loading_messages = false;\n          this.$(this.main_container).removeClass('hidden');\n          this.$('.chats-list-wrap').addClass('hidden');\n          this.$('.pinned-chat-list').removeClass('hidden');\n          this.$('.contacts-list-wrap').addClass('hidden');\n          this.$('.messages-list-wrap').addClass('hidden');\n      }\n  });\n\n  xabber.InputWidget = Backbone.View.extend({\n    field_type: 'text',\n    template: templates.input_widget,\n\n    events: {\n        \"click .field-text\": \"showInput\",\n        \"click .btn-rename\": \"showInput\",\n        \"keydown .field-input\": \"keyDown\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    initialize: function () {\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n        this.data.on(\"change:input_mode\", this.onChangedInputMode, this);\n        this.bindModelEvents();\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:\"+this.model_field, this.updateValue, this);\n    },\n\n    showInput: function () {\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    onChangedInputMode: function () {\n        let input_mode = this.data.get('input_mode');\n        this.$value.hideIf(input_mode);\n        this.$btn.hideIf(input_mode);\n        this.$input.showIf(input_mode).focus();\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.changeValue();\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    keyUp: function (ev) {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        return this.model.get(this.model_field);\n    },\n\n    setValue: function (value) {\n        this.model.save(this.model_field, value);\n    },\n\n    changeValue: function () {\n        let value = this.getValue(),\n            new_value = this.$input.removeClass('changed').val();\n        new_value !== value && this.setValue(new_value);\n        this.data.set('input_mode', false);\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        this.$input.val(value);\n    }\n});\n\nxabber.Body = xabber.NodeView.extend({\n    className: 'client-body-wrap',\n\n    _initialize: function () {\n        this.vname = 'body';\n        this.data.set('visible', true);\n        this.screen = new Backbone.Model();\n        this.screen_map = new Backbone.Model();\n        this.screen.on(\"change\", this.update, this);\n        this.screen_map.on(\"change\", this.onScreenMapChanged, this);\n        $(constants.CONTAINER_ELEMENT).append(this.$el);\n        this.updateBackground();\n        this.updateMainColor();\n        this.updateAvatarShape();\n        $('#modals').insertAfter(this.$el);\n        xabber.on('update_main_color', this.updateMainColor, this);\n        xabber.on('update_avatar_shape', this.updateAvatarShape, this);\n    },\n\n    addScreen: function (name, attrs) {\n        this.screen_map.set(name, attrs);\n    },\n\n    updateMainColor: function () {\n        this.$el.attr('data-main-color', xabber.settings.main_color);\n        this.$el.siblings('#modals').attr('data-main-color', xabber.settings.main_color);\n        $(window.document).find('.login-container').attr('data-main-color', xabber.settings.main_color);\n    },\n\n    updateAvatarShape: function () {\n        let shape = xabber.settings.avatar_shape;\n        $(constants.CONTAINER_ELEMENT).switchClass('non-circle-avatars', shape != 'circle');\n        $(constants.CONTAINER_ELEMENT).switchClass('octagon-avatars', shape === 'octagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('hexagon-avatars', shape === 'hexagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('pentagon-avatars', shape === 'pentagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('rounded-avatars', shape === 'rounded');\n        $(constants.CONTAINER_ELEMENT).switchClass('star-avatars', shape === 'star');\n        $(constants.CONTAINER_ELEMENT).switchClass('squircle-avatars', shape === 'squircle');\n    },\n\n    updateBackground: function () {\n        let background_settings = xabber.settings.background || {};\n        if (background_settings.image) {\n            if (background_settings.type === 'repeating-pattern') {\n                this.$el.css({\n                    'background-repeat': 'repeat',\n                    'background-size': 'unset',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            } else if (background_settings.type === 'image') {\n                this.$el.css({\n                    'background-repeat': 'no-repeat',\n                    'background-size': 'cover',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            }\n        } else {\n            this.$el.css({\n                'background-repeat': 'repeat',\n                'background-size': 'unset',\n                'background-image': `url(\"${constants.BACKGROUND_IMAGE}\")`,\n                'box-shadow': 'none'\n            });\n        }\n        this.updateBoxShadow(xabber.settings.appearance.vignetting);\n    },\n\n    updateBoxShadow: function (value) {\n        value = Number(value);\n        if (!value)\n            this.$el.css({\n                'box-shadow': `unset`\n            });\n        else\n            this.$el.css({\n            'box-shadow': `${value}px 0 100px 1px rgba(0, 0, 0, 0.7) inset, -${value}px 0 100px -1px rgba(0, 0, 0, 0.7) inset`\n        });\n    },\n\n    updateBlur: function (value) {\n        value = Number(value);\n        xabber.blur_overlay.$el.css({\n            \"backdrop-filter\": `blur(${value}px)`,\n            \"-webkit-backdrop-filter\": `blur(${value}px)`\n        });\n    },\n\n    setScreen: function (name, attrs, options) {\n        xabber.error(name);\n        options = options || {};\n        $(window).unbind(\"keydown.contact_panel\");\n        xabber.notifications_placeholder && xabber.main_panel.$el.addClass('notifications-request');\n        $(constants.CONTAINER_ELEMENT).switchClass('xabber-login', name === 'login');\n        $(constants.CONTAINER_ELEMENT).switchClass('on-xabber-login', name !== 'login');\n        let new_attrs = {stamp: _.uniqueId()};\n        if (name && !this.isScreen(name)) {\n            new_attrs.name = name;\n        }\n        if (!attrs || !attrs.show_placeholder) {\n            new_attrs.show_placeholder = null;\n        }\n        if ((attrs && attrs.right && attrs.right === 'group_invitation') || options.right_force_close)\n            new_attrs.right_contact = null;\n        else {\n            new_attrs.right_contact = xabber.body.screen.get('right_contact');\n        }\n        if ((!attrs && xabber.body.screen.get('right'))\n            || (attrs && !attrs.right && attrs.right !== null && xabber.body.screen.get('right')))\n            new_attrs.right = xabber.body.screen.get('right');\n        new_attrs = _.extend(new_attrs, attrs);\n        let chat_item_view;\n        if (_.isUndefined(new_attrs.chat_item)){\n            chat_item_view = this.screen.get('chat_item');\n            if (chat_item_view && chat_item_view.content)\n                chat_item_view.content._prev_scrolltop = chat_item_view.content.getScrollTop() || chat_item_view.content._scrolltop;\n        }\n        if (name){\n            let tree = this.screen_map.get(name);\n            if (tree && tree.main_overlay){\n                if (!this.screen.get('previous_screen'))\n                    new_attrs.previous_screen = {...this.screen.attributes};\n            } else {\n                new_attrs.previous_screen = undefined;\n            }\n        }\n        this.screen.set(_.extend(new_attrs, attrs), options);\n    },\n\n    isScreen: function (name) {\n        return this.screen.get('name') === name;\n    },\n\n    onScreenMapChanged: function () {\n        let name = this.screen.get('name');\n        if (_.has(this.screen_map.changed, name)) {\n            this.update();\n        }\n    },\n\n    showChatPlaceholder: function () {\n        try {\n            xabber.right_panel.$el.children().detach();\n            xabber.right_panel.$el.append(xabber.chat_placeholder.$el);\n        } catch (e) {\n            console.log(e)\n        }\n    },\n\n    update: function () {\n        let options = this.screen.attributes,\n            tree = this.screen_map.get(options.name);\n        if (typeof tree !== \"undefined\") {\n            this.onShow(options, tree);\n            this.model.trigger('update_screen', this.screen.get('name'));\n            this.model.trigger('update_layout', {screen_changed: options.name});\n        }\n    }\n});\n\nxabber.ToolbarView = xabber.BasicView.extend({\n    className: \"toolbar noselect\",\n    ps_selector: '.accounts',\n    template: templates.toolbar,\n\n    events: {\n        \"click .toolbar-logo\":             \"clickAllChats\",\n        \"click .all-chats\":             \"showAllChats\",\n        \"click .contacts\":              \"showContacts\",\n        \"click .archive-chats\":         \"showArchive\",\n        \"click .saved-chats\":           \"showSavedChats\",\n        \"click .mentions\":              \"showNotifications\",\n        \"click .settings\":              \"showSettings\",\n        \"click .settings-modal\":              \"showSettingsModal\",\n        \"click .jingle-calls\":              \"showPlaceholder\",\n        \"click .geolocation-chats\":              \"showPlaceholder\",\n        \"click .add-variant.contact\":   \"showAddContactView\",\n        \"click .add-variant.account\":   \"showAddAccountView\",\n        \"click .add-variant.public-groupchat\": \"showAddPublicGroupChatView\",\n        \"click .add-variant.incognito-groupchat\": \"showAddIncognitoGroupChatView\",\n    },\n\n    _initialize: function () {\n        this.$('.add-something').on(\"change_state\", function (ev, state) {\n            $(this).switchClass('active', state).find('.mdi')\n                    .switchClass('mdi-close', state)\n                    .switchClass('mdi-plus', !state);\n            if (state) {\n                this.setAttribute('data-title',  this.getAttribute('title'));\n                this.setAttribute('title', \"\");\n            } else {\n                this.setAttribute('title', this.getAttribute('data-title'));\n                this.removeAttribute('data-title');\n            }\n        });\n\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.data.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n        this.data.on(\"change:group_msg_counter\", this.onChangedGroupMessageCounter, this);\n        this.data.on(\"change:mentions_counter\", this.onChangedMentionsCounter, this);\n        this.data.on(\"change:msg_counter\", this.onChangedMessageCounter, this);\n        this.data.set({msg_counter: 0});\n        this.data.set({group_msg_counter: 0});\n        this.data.set({all_msg_counter: 0});\n        this.data.set({mentions_counter: 0});\n    },\n\n    render: function () {\n        this.$('.add-something').dropdown({\n            inDuration: 50,\n            outDuration: 50,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.$('.add-variant.account').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n    },\n\n    updateColor: function (color) {\n    },\n\n    onUpdatedScreen: function (name) {\n        if (name === 'account_settings_modal' || name === 'settings-modal'){\n            return;\n        }\n        if ((name === 'all-chats') &&\n            (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active') ||\n                this.$('.toolbar-item:not(.toolbar-logo).chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active'))) {\n            return;\n        }\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        if (_.contains(['all-chats', 'contacts', 'mentions',\n                        'settings', 'settings-modal', 'search', 'jingle-calls', 'geolocation-chats', 'about'], name)) {\n            this.$('.toolbar-item:not(.toolbar-logo).'+name).addClass('active');\n        }\n    },\n\n    clickAllChats: function (ev) {\n        this.$('.all-chats').click();\n    },\n\n    showAllChats: function (ev, no_unread) {\n        let $el;\n        if (ev && ev.target)\n            $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        else\n            $el = this.$('.all-chats');\n        let is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.all-chats').addClass('active').switchClass('unread', is_active);\n        let options = {}\n        no_unread && (options.no_unread = no_unread);\n        xabber.body.setScreen('all-chats', options);\n        xabber.trigger('show_all_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showArchive: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.archive-chats').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_archive_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showSavedChats: function (ev, no_unread) {\n        if (xabber.accounts.enabled.length === 1){\n            let saved_chat = xabber.accounts.enabled[0].chats.getSavedChat();\n            saved_chat.item_view && saved_chat.item_view.open({right_contact_save: true, clear_search: false, scroll_to_chat: true});\n            this.$('.active').removeClass('active');\n            this.$('.saved-chats').addClass('active');\n            saved_chat.once(\"change:active\", () => {\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).'+xabber.body.screen.get('name')).addClass('active');\n            });\n        } else {\n            this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n                .filter('.saved-chats').addClass('active');\n            xabber.body.setScreen('all-chats',);\n            xabber.trigger('show_saved_chats', no_unread);\n            xabber.trigger('update_placeholder');\n        }\n    },\n\n    showNotifications: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.mentions').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_notification_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showChatsByAccount: function (account) {\n        if (this.data.get('account_filtering') === account.get('jid'))\n            this.data.set('account_filtering', null);\n        else\n            this.data.set('account_filtering', account.get('jid'));\n        if (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active')) {\n            this.showAllChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active')) {\n            this.showArchive(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')) {\n            this.showSavedChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')) {\n            this.showNotifications(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).jingle-calls').hasClass('active') ||\n            this.$('.toolbar-item:not(.toolbar-logo).geolocation-chats').hasClass('active')){\n            this.showAllChats(null, true);\n            return;\n        }\n    },\n\n    showContacts: function () {\n        xabber.body.setScreen('contacts', {right_contact: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showMentions: function () {\n        xabber.body.setScreen('mentions');\n        xabber.trigger('update_placeholder');\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showSettingsModal: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showPlaceholder: function (ev) {\n        if (xabber.chats_view && xabber.chats_view.active_chat){\n            xabber.chats_view.active_chat.model.trigger('hide_chat');\n            xabber.chats_view.active_chat = null;\n        }\n        let screen_name = this.$('.toolbar-item:not(.toolbar-logo).settings').hasClass('active') ? 'all-chats' : xabber.body.screen.get('name');\n        xabber.body.setScreen(screen_name, {chat_item: null});\n        let $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        $el.addClass('active');\n        xabber.trigger('update_placeholder');\n    },\n\n    showAddContactView: function () {\n        xabber.trigger('add_contact', {right: null});\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    showAddIncognitoGroupChatView: function () {\n        xabber.trigger('add_group_chat', {incognito: true, right: null});\n    },\n\n    showAddPublicGroupChatView: function () {\n        xabber.trigger('add_group_chat', {public: true, right: null});\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0, count_all_msg = 0, count_group_msg = 0, mentions = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted()) {\n                    if (chat.get('unread') || chat.get('const_unread')){\n                        xabber.error(chat);\n                    }\n                    count_all_msg += chat.get('unread') + chat.get('const_unread');\n                    if (chat.contact.get('group_chat'))\n                        count_group_msg += chat.get('unread') + chat.get('const_unread');\n                    else\n                        count_msg += chat.get('unread') + chat.get('const_unread');\n                }\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_all_msg += incoming_subscriptions;\n            mentions += account.unread_mentions.length;\n        });\n        return { msgs: count_msg, all_msgs: count_all_msg, group_msgs: count_group_msg, mentions: mentions };\n    },\n\n    recountAllMessageCounter: function () {\n        let unread_messages = this.setAllMessageCounter();\n        this.data.set('all_msg_counter', unread_messages.all_msgs);\n        this.data.set('msg_counter', unread_messages.msgs);\n        this.data.set('group_msg_counter', unread_messages.group_msgs);\n        this.data.set('mentions_counter', unread_messages.mentions);\n        xabber.recountAllMessageCounter();\n    },\n\n    onChangedMessageCounter: function () {\n        let c = this.data.get('msg_counter');\n        this.$('.msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedGroupMessageCounter: function () {\n        let c = this.data.get('group_msg_counter');\n        this.$('.group-msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedMentionsCounter: function () {\n        let c = this.data.get('mentions_counter');\n        this.$('.mentions-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedAllMessageCounter: function () {\n        let c = this.data.get('all_msg_counter');\n        if (c >= 100)\n            c = '99+';\n        this.$('.all-msg-indicator').switchClass('unread', c).text(c);\n    },\n});\n\nxabber.JingleMessageView = xabber.BasicView.extend({\n    className: 'modal main-modal jingle-message-view',\n    template: templates.jingle_message_calling,\n    avatar_size: constants.AVATAR_SIZES.XABBER_VOICE_CALL_VIEW,\n\n    events: {\n        \"click\": \"clickOnWindow\",\n        \"click .btn-accept\": \"accept\",\n        \"click .btn-share-screen\": \"shareScreen\",\n        \"click .btn-microphone\": \"toggleMicrophone\",\n        \"click .btn-video\": \"videoCall\",\n        \"click .btn-volume\": \"toggleVolume\",\n        \"click .btn-collapse\": \"collapse\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-full-screen\": \"setFullScreen\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n        this.model.on('destroy', this.onDestroy, this);\n        this.contact = this.model.contact;\n        this.account = this.contact.account;\n        this.model.on('change:state', this.updateCallingStatus, this);\n        this.model.on('change:status', this.updateBackground, this);\n        this.model.on('change:volume_on', this.updateButtons, this);\n        this.model.on('change:video_live', this.updateButtons, this);\n        this.model.on('change:video_screen', this.updateButtons, this);\n        this.model.on('change:video_in', this.updateCollapsedWindow, this);\n        this.model.on('change:video', this.updateCollapsedWindow, this);\n        this.model.on('change:audio', this.updateButtons, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.updateName();\n        this.updateCallingStatus(options.status);\n        if (options.status === 'in') {\n            this.updateStatusText(xabber.getString(\"dialog_jingle_message__status_calling\"));\n        }\n        else {\n            this.model.set('status', 'calling');\n        }\n        this.updateAccountJid();\n        this.updateButtons();\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                this.updateAvatar();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.collapsed-movable').mousedown((e) => {\n                    e = e || window.event;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag)\n                            this.collapse();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        e.preventDefault();\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        // set the element's new position:\n                        this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                        this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                        didDrag = true;\n                    };\n                });\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n\n    },\n\n    setFullScreen: function () {\n        if (document.fullscreenElement) {\n            document.exitFullscreen();\n        } else if(this.$el.length) {\n            this.$el[0].requestFullscreen();\n        }\n    },\n\n    cancelFullScreen: function () {\n        if (document.exitFullscreen) {\n            let full_screen_el = document.fullscreenElement;\n            full_screen_el && document.exitFullscreen().then(() => {\n                document.fullscreenElement && this.cancelFullScreen();\n            });\n        } else if (document.mozCancelFullScreen) { /* Firefox */\n            let full_screen_el = document.mozFullScreenElement;\n            full_screen_el && document.mozCancelFullScreen();\n            document.mozFullScreenElement && this.cancelFullScreen();\n        } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n            let full_screen_el = document.webkitCurrentFullScreenElement;\n            full_screen_el && document.webkitExitFullscreen();\n            document.webkitCurrentFullScreenElement && this.cancelFullScreen();\n        } else if (document.msExitFullscreen) { /* IE/Edge */\n            let full_screen_el = document.msFullscreenElement;\n            full_screen_el && document.msExitFullscreen();\n            document.msFullscreenElement && this.cancelFullScreen();\n        }\n    },\n\n    windowResized: function () {\n        this.$el.hasClass('collapsed') && this.$el.css('right', parseInt(xabber.main_panel.$el.css('margin-right')) + 8 + 'px');\n    },\n\n    updateButtons: function () {\n        this.$('.btn-video .video').switchClass('hidden', !this.model.get('video'));\n        this.$('.btn-share-screen').switchClass('active', this.model.get('video_screen'));\n        this.$('.btn-full-screen').switchClass('hidden', !this.model.get('video_in'));\n        this.$('.btn-video').switchClass('mdi-video active', this.model.get('video_live'))\n            .switchClass('mdi-video-off', !this.model.get('video_live'));\n        this.$('.btn-volume').switchClass('mdi-volume-high active', this.model.get('volume_on'))\n            .switchClass('mdi-volume-off', !this.model.get('volume_on'));\n        this.$('.btn-microphone').switchClass('active mdi-microphone', this.model.get('audio'))\n            .switchClass('mdi-microphone-off', !this.model.get('audio'));\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBackground: function () {\n        let status = this.model.get('status');\n        this.$el.attr('data-state', status);\n    },\n\n    updateCallingStatus: function (status) {\n        this.$('.buttons-wrap').switchClass('incoming', (status === 'in'));\n    },\n\n    updateStatusText: function (status) {\n        this.$('.calling-status').text(status || \"\");\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.contact.get('name'));\n    },\n\n    updateAccountJid: function () {\n        this.$('.modal-footer .contact-info .jid').text(this.contact.get('jid'));\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    shareScreen: function () {\n        this.model.set('video_screen', !this.model.get('video_screen'));\n    },\n\n    isFullScreen: function () {\n        if (document.fullscreenElement)\n            return true;\n        else if (document.webkitFullscreenElement)\n            return true;\n        else if (document.mozFullScreenElement)\n            return true;\n        else return false;\n    },\n\n    accept: function () {\n        this.model.accept();\n        this.updateCallingStatus(constants.JINGLE_MSG_ACCEPT);\n        this.model.initSession();\n    },\n\n    clickOnWindow: function (ev) {\n        if ($(ev.target).closest('.collapsed-movable').length)\n            return;\n        if ($(ev.target).closest('.video-wrap').length && this.$el.hasClass('collapsed') && this.$el.hasClass('collapsed-video'))\n            this.collapse();\n    },\n\n    collapse: function (ev) {\n        ev && ev.stopPropagation();\n        if (this.isFullScreen()) {\n            this.cancelFullScreen();\n            return;\n        }\n        let $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.toggle();\n        this.$el.toggleClass('collapsed');\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n        else {\n            this.$el.css('right', \"\");\n            this.$el.css('left', \"\");\n            this.$el.css('width', \"\");\n            this.$el.css('height', \"\");\n            this.$el.removeClass('collapsed-video');\n        }\n        this.windowResized();\n    },\n\n    updateCollapsedWindow: function () {\n        this.updateButtons();\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n    },\n\n    toggleMicrophone: function () {\n        this.model.set('audio', !this.model.get('audio'));\n    },\n\n    onDestroy: function (status) {\n        let status_text;\n        if (this.model.get('status') == 'device_busy')\n            status_text = 'dialog_jingle_message__status_device_busy';\n        else if (this.model.get('status') == 'busy')\n            status_text = 'dialog_jingle_message__status_busy';\n        else if (this.model.get('status') == 'accepted_another_device')\n            status_text = 'dialog_jingle_message__status_another_device_accepted';\n        else\n            status_text = 'dialog_jingle_message__status_disconnected';\n        this.updateStatusText(xabber.getString(status_text));\n        setTimeout(() => {\n            this.close();\n            this.$el.detach();\n        }, 3000);\n    },\n\n    videoCall: function () {\n        this.model.set('video_live', !this.model.get('video_live'));\n    },\n\n    toggleVolume: function (ev) {\n        let $target = $(ev.target);\n        $target.switchClass(this.model.set('volume_on', !this.model.get('volume_on')));\n    },\n\n    cancel: function () {\n        this.model.reject();\n        this.close();\n    }\n});\n\nxabber.PlyrPlayerPopupView = xabber.BasicView.extend({\n    className: 'modal main-modal player-overlay plyr-player-popup-view',\n    template: templates.plyr_player_popup,\n\n    events: {\n        \"click .mdi-close\": \"closePopup\",\n        \"click .mdi-minimize-float\": \"floatPopup\",\n        \"click .mdi-minimize-full\": \"fullPopup\",\n        \"click .mdi-plyr-hide\": \"hidePopup\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .mdi-open-message\": \"openMessage\",\n        \"click .mdi-toggle-play\": \"togglePlay\",\n        \"click .mdi-toggle-mute\": \"toggleMute\",\n    },\n\n    _initialize: function (options) {\n        this.data.set('visibility_state', 0);\n        this.data.on('change:visibility_state', this.onVisibilityChange, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                if (!this.player){\n                    this.player = new Plyr('.plyr-player-popup', {\n                        controls: [\n                            'play-large', 'play', 'progress', 'duration', 'mute', 'volume', 'settings', 'download', 'fullscreen',\n                        ],\n                        youtube: {controls: 0, disablekb: 1, iv_load_policy: 3, modestbranding: 1, rel: 0, showinfo: 0}\n                    });\n                    this.player.on('play',(event) => {\n                        let other_players = xabber.plyr_players.filter(other => other != this.player);\n                        other_players.forEach(function(other) {\n                            if (other.$audio_elem){\n                                if (other.$audio_elem.voice_message)\n                                    other.$audio_elem.voice_message.stopTime();\n                            }\n                        })\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('pause',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('timeupdate',(event) => {\n                        xabber.trigger('plyr_player_time_updated');\n                    });\n                    this.player.on('volumechange',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('statechange',(event) => {\n                        if (event.detail.code === 3) {\n                            this.$('.plyr-player-popup-draggable').removeClass('hidden');\n                            this.$('.plyr-player-popup-draggable').css({\n                                width: '',\n                                height: '',\n                            });\n                        }\n                        xabber.trigger('plyr_player_updated');\n                    });\n                }\n                this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).mousedown(() => {this.minimizePopup()});\n                this.showNewVideo(options);\n                this.onVisibilityChange();\n                this.updatePlyrControls();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.plyr-player-min-controls-tab').mousedown((e) => {\n                    e = e || window.event;\n                    if ($(e.target).closest('.plyr__control--overlaid').length || $(e.target).closest('.plyr__controls').length || $(e.target).closest('.mdi-close').length || $(e.target).closest('.plyr-player-min-controls-buttons').length)\n                        return;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag && !$(e.target).closest('.plyr__control--overlaid').length)\n                            this.$('.plyr__video-wrapper').click();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        didDrag = true;\n                        e.preventDefault();\n                        if (this.$el.hasClass('player-overlay'))\n                            return;\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n\n                        let xPercent = (((this.$el.offset().left - this.pos1)/window.innerWidth) * 100),\n                            yPercent = (((this.$el.offset().top - this.pos2)/window.innerHeight) * 100);\n\n\n                        // set the element's new position:\n                        this.$el.css('left', xPercent + '%');\n                        this.$el.css('top', yPercent + '%');\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                    };\n                });\n            },\n        });\n\n    },\n\n    showNewVideo: function (options) {\n        options = options || {};\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (options.player.provider === 'youtube'){\n                this.$('.plyr-player-popup-draggable').addClass('hidden');\n                this.$('.plyr-player-popup-draggable').css({\n                    width: 400,\n                    height: 200,\n                });\n            }\n            this.account = options.player.chat_item.account;\n            this.updateColorScheme();\n            this.player.chat_item = options.player.chat_item;\n            this.player.player_item = options.player;\n            this.player.message_unique_id = options.player.message_unique_id;\n            let video_sources = {\n                src: options.player.video_src,\n                provider: options.player.provider,\n            };\n            options.player.type && (video_sources.type = options.player.type);\n            this.player.source = {\n                type: 'video',\n                sources: [\n                    video_sources,\n                ],\n            }\n            xabber.current_plyr_player = this.player;\n            this.player.once('ready',(event) => {\n                let $minimize_element_float = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-float mdi-svg-template\" data-svgname=\"player-float\"></svg>')\n                $minimize_element_float.append(env.templates.svg['player-float']())\n                $minimize_element_float.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $minimize_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-full mdi-svg-template\" data-svgname=\"player-full\"></svg>')\n                $minimize_element_full.append(env.templates.svg['player-full']())\n                $minimize_element_full.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $show_message_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-open-message mdi-svg-template\" data-svgname=\"message-bookmark-outline\"></svg>')\n                $show_message_element_full.append(env.templates.svg['message-bookmark-outline']())\n                $show_message_element_full.insertAfter(this.$('.plyr__controls__item[data-plyr=\"download\"]'));\n                let $previous_element = $('<div class=\"btn-previous-plyr\"><i class=\"mdi mdi-skip-previous mdi-24px\"></i></div>')\n                $previous_element.insertBefore(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                let $next_element = $('<div class=\"btn-next-plyr\"><i class=\"mdi mdi-skip-next mdi-24px\"></i></div>')\n                $next_element.insertAfter(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                this.player.play();\n                xabber.trigger('plyr_player_updated');\n            });\n        });\n\n        if (options.player && options.player.video_file && options.player.video_file.key) {\n            options.player.key = options.player.video_file.key;\n            options.player.video_file.type && (options.player.type = options.player.video_file.type);\n        }\n\n        if (options.player && options.player.key && options.player.chat_item.model && options.player.video_src && !options.player.video_decrypted){\n            options.player.chat_item.model.messages.decryptFile(options.player.video_src, options.player.key).then((result) => {\n                options.player.video_src = result;\n                options.player.video_decrypted = true;\n                dfd.resolve();\n            });\n        } else\n            dfd.resolve();\n    },\n\n    closePopup: function () {\n        this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).detach();\n        this.$el.detach();\n        xabber.current_plyr_player = null;\n        xabber.plyr_player_popup = null;\n        xabber.trigger('plyr_player_updated');\n    },\n\n    minimizePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        let visibility_state = this.data.get('visibility_state');\n        visibility_state = visibility_state + 1;\n        (visibility_state > 2) && (visibility_state = 0);\n        this.data.set('visibility_state', visibility_state);\n    },\n\n    hidePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 2);\n    },\n\n    floatPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 1);\n    },\n\n    fullPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 0);\n    },\n\n    onVisibilityChange: function () {\n        let visibility_state = this.data.get('visibility_state'),\n            $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.switchClass('hidden', visibility_state != 0);\n        this.$el.switchClass('player-overlay', visibility_state === 0);\n        this.$el.switchClass('hidden', visibility_state === 2);\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        if (xabber.current_plyr_player) {\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            this.$('.mdi-plyr-play').switchClass('hidden', xabber.current_plyr_player.playing);\n            this.$('.mdi-plyr-pause').switchClass('hidden', !xabber.current_plyr_player.playing);\n            this.$('.mdi-mute-plyr').switchClass('hidden', !xabber.current_plyr_player.muted);\n            this.$('.mdi-unmute-plyr').switchClass('hidden', xabber.current_plyr_player.muted);\n        }\n    },\n\n    openMessage: function () {\n        if (!(this.player && this.player.chat_item && this.player.message_unique_id))\n            return;\n        this.floatPopup();\n        let chat = this.player.chat_item.model;\n        xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n        xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n        if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n            if (xabber.right_contact_panel_saveable)\n                chat.contact.showDetailsRight('all-chats', {right_saved: true});\n            else\n                chat.contact.showDetailsRight('all-chats', {right_saved: false});\n        }\n        chat.getMessageContext(this.player.message_unique_id, {message: true});\n    },\n\n    togglePlay: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n    },\n\n    toggleMute: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        xabber.current_plyr_player.muted = !xabber.current_plyr_player.muted;\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.SettingsModalView = xabber.BasicView.extend({\n    className: 'settings-panel-wrap',\n    template: templates.settings_modal,\n    ps_selector: '.settings-panel',\n\n    events: {\n        \"click .background-overlay\": \"closeSettings\",\n        \"click .btn-back\": \"backToMenu\",\n        \"click .btn-back-subsettings\": \"backToSubMenu\",\n        \"click .settings-tabs-wrap.global-settings-tabs .settings-tab:not(.delete-all-accounts)\": \"jumpToBlock\",\n        \"click .desktop-notifications-clue-wrap b\": \"goToWebNotifications\",\n        \"click .btn-add-account\": \"showAddAccountView\",\n        \"click .setting.idling label\": \"setIdling\",\n        \"change #idle_timeout\": \"setIdlingTimeout\",\n        \"click .setting.notifications label\": \"setNotifications\",\n        // \"click .setting.volume-enable label\": \"setNotificationsVolumeEnabled\",\n        \"click .private-notifications label\": \"setPrivateNotifications\",\n        \"click .group-notifications label\": \"setGroupNotifications\",\n        \"click .notifications-lever label\": \"setNotifications\",\n        \"click .jingle-calls label\": \"setJingleCalls\",\n        \"click .setting.message-preview.private-preview label\": \"setPrivateMessagePreview\",\n        \"click .setting.message-preview.group-preview label\": \"setGroupMessagePreview\",\n        \"click .call-attention label\": \"setCallAttention\",\n        \"click .setting.load-media label\": \"setLoadMedia\",\n        \"click .setting.typing-notifications label\": \"setTypingNotifications\",\n        \"click .setting.mapping-service label\": \"setMappingService\",\n        \"change .sound input[type=radio][name=private_sound]\": \"setPrivateSound\",\n        \"change .sound input[type=radio][name=group_sound]\": \"setGroupSound\",\n        \"change .sound input[type=radio][name=call_sound]\": \"setCallSound\",\n        \"change .sound input[type=radio][name=dialtone_sound]\": \"setDialtoneSound\",\n        \"change .sound input[type=radio][name=attention_sound]\": \"setAttentionSound\",\n        \"change .languages-list input[type=radio][name=language]\": \"changeLanguage\",\n        \"change .emoji-fonts-list input[type=radio][name=emoji_font]\": \"changeEmojiFont\",\n        \"click .emoji-font-external-url-button\": \"loadExternalEmojiFont\",\n        \"change #vignetting\": \"changeVignetting\",\n        \"change #blur\": \"changeBlur\",\n        \"change #notifications_volume\": \"changeNotificationsVolume\",\n        \"change #blur_switch\": \"switchBlur\",\n        \"change #vignetting_switch\": \"switchVignetting\",\n        \"click .selected-color-wrap\": \"openColorPicker\",\n        \"click .client-main-color-item\": \"chooseMainColor\",\n        \"change .background input[type=radio][name=background]\": \"setBackground\",\n        \"click .current-background-wrap\": \"changeBackgroundImage\",\n        \"change .hotkeys input[type=radio][name=hotkeys]\": \"setHotkeys\",\n        \"change .avatar-shape input[type=radio][name=avatar_shape]\": \"setAvatarShape\",\n        \"click .settings-tab.delete-all-accounts\": \"deleteAllAccounts\"\n    },\n\n    _initialize: function (options) {\n        this.$('.xabber-info-wrap .version').text(xabber.get('version_number'));\n        xabber.on('update_main_color', this.updateMainColor, this);\n        this.model.on('change:language', this.updateLanguage, this);\n        this.model.on('change:emoji_font', this.updateEmojiFontLabel, this);\n        this.model.on('change:avatar_shape', this.updateAvatarLabel, this);\n        this.model.on('change:notifications_private', this.updateSoundsLabel, this);\n        this.model.on('change:notifications_group', this.updateSoundsLabel, this);\n        this.model.on('change:call_attention', this.updateSoundsLabel, this);\n        this.model.on('change:private_sound', this.updateSoundsLabel, this);\n        this.model.on('change:group_sound', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_private_message', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_group_message', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_call', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_dialtone', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_attention', this.updateSoundsLabel, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        $(document).on(\"keyup\", (ev) => {\n            if (ev.keyCode === constants.KEY_ESCAPE && this.data.get('visible')) {\n                this.closeSettings();\n            }\n        });\n        xabber.once('accounts_ready',() => {\n            xabber.accounts.on(\"list_changed add change:enabled destroy\", this.updateAccounts, this);\n        })\n    },\n\n    render: function (options) {\n        let settings = this.model.attributes,\n            lang = settings.language,\n            emoji_font = settings.emoji_font;\n        this.updateSounds();\n        this.updateLanguages();\n        this.updateEmojiFonts();\n        this.$('.notifications input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.notifications-lever input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.private-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_private});\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !settings.notifications_private)\n        this.$('.sound input[type=radio][name=call_sound]').prop('disabled', !settings.jingle_calls);\n        this.$('.sound input[type=radio][name=dialtone_sound]').prop('disabled', !settings.jingle_calls);\n        this.$('.group-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_group});\n        this.$('.jingle-calls input[type=checkbox]')\n            .prop({checked: settings.jingle_calls});\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.sound input[type=radio][name=attention_sound]').prop('disabled', !settings.call_attention)\n        this.$('.message-preview.private-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_private}).prop('disabled', !(settings.notifications && xabber._cache.get('notifications') && settings.notifications_private));\n        this.$('.message-preview.group-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_group}).prop('disabled', !(settings.notifications && xabber._cache.get('notifications') && settings.notifications_group));\n        this.$('.desktop-notifications-clue-wrap').hideIf(settings.notifications);\n        this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !settings.notifications);\n        this.$('.call-attention input[type=checkbox]')\n            .prop({checked: settings.call_attention});\n        this.$('.load-media input[type=checkbox]')\n            .prop({checked: settings.load_media});\n        this.$('.typing-notifications input[type=checkbox]')\n            .prop({checked: settings.typing_notifications});\n        this.$('.idling input[type=checkbox]')\n            .prop({checked: settings.idling});\n        this.$('#idle_timeout')\n            .val(settings.idling_time).prop('disabled', !settings.idling);\n        // this.$(`#notifications_volume_enable`)\n        //     .prop('checked', settings.notifications_volume_enabled);\n        this.$('.mapping-service input[type=checkbox]')\n            .prop({checked: settings.mapping_service});\n        let sound_private_value = settings.private_sound ? settings.sound_on_private_message : '';\n        this.$(`.sound input[type=radio][name=private_sound][value=\"${sound_private_value}\"]`)\n                .prop('checked', true);\n        let sound_group_value = settings.group_sound ? settings.sound_on_group_message : '';\n        this.$(`.sound input[type=radio][name=group_sound][value=\"${sound_group_value}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=call_sound][value=\"${settings.sound_on_call}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=dialtone_sound][value=\"${settings.sound_on_dialtone}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=attention_sound][value=\"${settings.sound_on_attention}\"]`)\n                .prop('checked', true);\n        this.$(`.hotkeys input[type=radio][name=hotkeys][value=${settings.hotkeys}]`)\n                .prop('checked', true);\n        this.$(`.avatar-shape input[type=radio][name=avatar_shape][value=${settings.avatar_shape}]`)\n                .prop('checked', true);\n        (lang == xabber.get(\"default_language\")) && (lang = 'default');\n        this.$(`.languages-list input[type=radio][name=language][value=\"${lang}\"]`)\n            .prop('checked', true);\n        this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${emoji_font}\"]`)\n            .prop('checked', true);\n        this.$(`.client-main-color-item`).removeClass('chosen-client-color');\n        this.$(`.client-main-color-item[data-value=\"${settings.main_color}\"]`).addClass('chosen-client-color');\n        let notifications_volume = !isNaN(settings.notifications_volume) ? settings.notifications_volume * 100 : 100;\n        this.$(`#notifications_volume`).val(notifications_volume);\n        // this.$('.volume-setting .disabled').switchClass('hidden', settings.notifications_volume_enabled);\n        // this.$('#notifications_volume').prop('disabled', !settings.notifications_volume_enabled);\n        this.$('.settings-panel-head span').text(this.$('.settings-block-wrap:not(.hidden)').attr('data-header'))\n        this.updateAvatarLabel();\n        this.updateSoundsLabel();\n        this.updateDescription();\n        this.updateBackgroundSetting();\n        this.updateColor();\n        this.updateMainColor();\n        this.updateLanguage();\n        this.updateEmojiFontLabel();\n        this.$('.toolbar-main-color-setting-wrap .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            belowOrigin: true,\n            hover: false\n        });\n        this.$('.left-column').removeClass('hidden');\n        this.$('.left-column .settings-tabs-wrap.global-settings-tabs').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back').removeClass('hidden');\n        this.$('.btn-back-subsettings').addClass('hidden');\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.$('.desktop-notifications-clue-wrap b').addClass('client-text-color-500');\n        this.updateAccounts(options);\n        this.updateHeight();\n        this.updateSliders();\n        if (options && options.block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n        return this;\n    },\n\n    updateAccounts: function (options) {\n        if (this.settings_single_account_modal){\n            this.settings_single_account_modal.removeChild('blocklist');\n            this.removeChild('single_account');\n        }\n        if (xabber.accounts.length === 1 && xabber.accounts.enabled.length){\n            this.$('.accounts-info-wrap').addClass('hidden');\n            this.$('.btn-add-account').addClass('hidden');\n            this.$('.single-account-info-wrap').removeClass('hidden');\n            let first_account = xabber.accounts.models[0];\n            this.single_account_has_rendered = false;\n            this.settings_single_account_modal = this.addChild('single_account', xabber.AccountSettingsSingleModalView, {\n                model: first_account,\n                forced_ps_container: this.ps_container,\n                single_account_modal: true,\n                el: this.$('.single-account-info-wrap .single-account-info')[0]\n            });\n            if (!this.single_account_has_rendered){\n                this.settings_single_account_modal.show(null, options);\n            }\n            first_account.trigger('render_single_settings', this.settings_single_account_modal);\n            this.settings_single_account_modal.addChild('blocklist', xabber.BlockListView, {\n                account: first_account,\n                el: this.settings_single_account_modal.$('.block-list-view-wrap')[0]\n            });\n        } else {\n            this.$('.btn-add-account').removeClass('hidden');\n            this.$('.accounts-info-wrap').removeClass('hidden');\n            this.$('.single-account-info-wrap').addClass('hidden');\n        }\n        this.updateHeight();\n    },\n\n    updateMainColor: function () {\n        this.$('.toolbar-main-color-setting').attr('data-color', this.model.get('main_color'));\n    },\n\n    updateBackgroundSetting: function () {\n        this.$(`.background input[type=radio][name=background][value=${this.model.get('background').type}]`)\n            .prop('checked', true);\n        if (this.model.get('background').image) {\n            this.$('.current-background').css('background-image', `url(${utils.images.getCachedBackground(this.model.get('background').image)})`);\n        }\n        this.$('.current-background-wrap').switchClass('hidden', !this.model.get('background').image);\n        let appearance = this.model.get('appearance'),\n            blur_switched = appearance.blur !== false,\n            vignetting_switched = appearance.vignetting !== false;\n        this.$('#blur_switch')[0].checked = blur_switched;\n        this.$('.blur-setting .disabled').switchClass('hidden', blur_switched);\n        if (blur_switched)\n            this.$('#blur')[0].value = appearance.blur;\n        this.$('#vignetting_switch')[0].checked = vignetting_switched;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', vignetting_switched);\n        if (vignetting_switched)\n            this.$('#vignetting')[0].value = appearance.vignetting;\n        this.updateScrollBar();\n    },\n\n    updateColor: function () {\n        let color = this.model.get('appearance').color || '#E0E0E0';\n        this.$('.selected-color-item').css('background-color', color);\n        this.$('.selected-color-hex').text(color);\n        let material_color = xabber.ColorPicker.prototype.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == color.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == color.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        xabber.toolbar_view.updateColor(color);\n    },\n\n    jumpToBlock: function (ev) {\n        if ($(ev.target).closest('.switch').length)\n            return;\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.attr('data-block-name'));\n        if ($tab.hasClass('link-button')) {\n            $tab.parent().siblings().removeClass('active');\n            this.scrollTo(0);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        this.$('.left-column').addClass('hidden');\n        this.$('.right-column').removeClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span').text($elem.attr('data-header'))\n        $tab.addClass('active').siblings().removeClass('active');\n        if ($tab.closest('.right-column') && $tab.attr('data-subblock-parent-name')) {\n            this.$('.btn-back').addClass('hidden');\n            this.$('.btn-back-subsettings').removeClass('hidden');\n            this.$('.btn-back-subsettings').attr('data-subblock-parent-name', $tab.attr('data-subblock-parent-name'));\n        }\n        if ($tab.attr('data-block-name') === 'interface_language')\n            this.$('.settings-panel-head .description').removeClass('hidden');\n        else\n            this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    updateHeight: function () {\n        let height;\n        if (!this.$('.left-column.main-left-column').hasClass('hidden'))\n            height = this.$('.left-column.main-left-column').height();\n        if (!this.$('.right-column.main-right-column').hasClass('hidden'))\n            height = this.$('.right-column.main-right-column').height();\n        this.ps_container.css('height', height + 'px');\n        setTimeout(() => {\n            this.updateScrollBar();\n        }, 500)\n    },\n\n    updateSliders: function () {\n        this.$('.range-field.range-field-design').each((idx, item) => {\n            let $input = $(item).find('input'),\n                range_min = $input.attr('min'),\n                range_max = $input.attr('max'),\n                range_value = $input.val(),\n                left =  ((182 / (range_max - range_min)) * (range_value - range_min)) + 10;\n            $(item).find('span.thumb').css('left', left + 'px');\n            if ($input.hasClass('materialize-timer'))\n                $(item).find('span.value').text(range_value + 's');\n            else\n                $(item).find('span.value').text(range_value);\n        })\n\n    },\n\n    updateSounds: function () {\n\n        this.$('.notification-field').html('<form action=\"#\"></form>');\n\n        sounds.notifications.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'private_sound',\n                    input_id: `${this.cid}-private-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.notification-field:not(.group-notification-field)').append(element);\n                let group_element = $(templates.setting_radio_input({\n                    input_name: 'group_sound',\n                    input_id: `${this.cid}-group-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.group-notification-field').append(group_element);\n            }\n        });\n\n        let element_no_sound = $(templates.setting_radio_input({\n            input_name: 'private_sound',\n            input_id: `${this.cid}-private-sound-no`,\n            label: 'No sound',\n            value: '',\n        }));\n        this.$('.notification-field:not(.group-notification-field)').prepend(element_no_sound);\n\n        let group_element_no_sound = $(templates.setting_radio_input({\n            input_name: 'group_sound',\n            input_id: `${this.cid}-group-sound-no`,\n            label: 'No sound',\n            value: '',\n        }));\n        this.$('.group-notification-field').prepend(group_element_no_sound);\n\n        this.$('.dialtone-field').html('<form action=\"#\"></form>');\n        sounds.dialtones.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'dialtone_sound',\n                    input_id: `${this.cid}-dialtone-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.dialtone-field').append(element);\n            }\n        });\n\n        this.$('.ringtone-field').html('<form action=\"#\"></form>');\n        sounds.ringtones.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'call_sound',\n                    input_id: `${this.cid}-call-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.ringtone-field').append(element);\n            }\n        });\n\n        this.$('.attention-field').html('<form action=\"#\"></form>');\n        sounds.attention.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'attention_sound',\n                    input_id: `${this.cid}-attention-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.attention-field').append(element);\n            }\n        });\n\n    },\n\n    updateLanguages: function () {\n        this.$('.languages-list').html('<form action=\"#\"></form>');\n\n        let default_element = $(templates.setting_language_radio_input({\n            input_name: 'language',\n            input_id: `${this.cid}-default`,\n            label: xabber.getString(\"settings__languages_list___item_default\", [constants.languages[xabber.get(\"default_language\") || 'en']]),\n            value: 'default',\n            progress: {},\n        }));\n\n        this.$('.languages-list').append(default_element);\n\n        if (!window.navigator.language.includes('en')){\n            let second_lang = xabber.get(\"default_language\") === 'en' ? window.navigator.language : 'en',\n                second_prog, second_prog_text,\n                second_locale = Object.keys(client_translation_progress)\n                    .find(key => !second_lang.indexOf(key)) || constants.languages_another_locales[second_lang] && Object.keys(client_translation_progress)\n                    .find(key => !constants.languages_another_locales[second_lang].indexOf(key)); // < - check for locales that differ in names\n\n            if (second_locale) {\n                second_prog = client_translation_progress[second_locale];\n                second_prog_text = (second_prog == 100) ? xabber.getString(\"settings__section_interface_language__translation_progress_fully\")\n                    : xabber.getString(\"settings__section_interface_language__translation_progress\", [`${second_prog}%`]);\n\n                let second_element = $(templates.setting_language_radio_input({\n                    input_name: 'language',\n                    input_id: `${this.cid}-${second_lang}`,\n                    label: constants.languages[second_lang],\n                    value: second_lang,\n                    progress: {\n                        text: second_prog_text\n                    },\n                }));\n                this.$('.languages-list').append(second_element);\n            }\n        }\n\n\n        for (let lang in constants.languages) {\n            if (!lang || lang == xabber.get(\"default_language\") || lang == window.navigator.language)\n                continue;\n\n            let locale = Object.keys(client_translation_progress)\n                .find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress)\n                .find(key => !constants.languages_another_locales[lang].indexOf(key)); // < - check for locales that differ in names\n\n            if (locale) {\n                let progress = client_translation_progress[locale],\n                    progress_text = (progress == 100) ? xabber.getString(\"settings__section_interface_language__translation_progress_fully\")\n                        : xabber.getString(\"settings__section_interface_language__translation_progress\", [`${progress}%`]);\n\n                let element = $(templates.setting_language_radio_input({\n                    input_name: 'language',\n                    input_id: `${this.cid}-${lang}`,\n                    label: constants.languages[lang],\n                    value: lang,\n                    progress: {\n                        text: progress_text\n                    },\n                }));\n                this.$('.languages-list').append(element);\n            }\n        }\n    },\n\n    updateEmojiFonts: function () {\n        let emoji_fonts_list = constants.EMOJI_FONTS_LIST;\n\n        if (!Object.keys(emoji_fonts_list).length) {\n            this.$('.settings-tab[data-block-name=\"emoji_font\"').addClass('hidden');\n            return;\n        }\n        this.$('.settings-tab[data-block-name=\"emoji_font\"').removeClass('hidden');\n\n        this.$('.emoji-fonts-list').html('<form action=\"#\"></form>');\n\n        let system_element = $(templates.setting_emoji_font_radio_input({\n            input_name: 'emoji_font',\n            input_id: `${this.cid}-emoji-font-system`,\n            label: xabber.getString(\"settings__menu_item__emoji_font_system\"),\n            value: 'system',\n            hint: null,\n        }));\n\n        this.$('.emoji-fonts-list').append(system_element);\n        emoji_fonts_list = Object.values(emoji_fonts_list);\n\n        emoji_fonts_list.sort((a, b) => {\n            return a.order - b.order;\n        })\n\n        emoji_fonts_list.forEach((item) => {\n            let item_name = item.name,\n                element = $(templates.setting_emoji_font_radio_input({\n                    input_name: 'emoji_font',\n                    input_id: `${this.cid}-emoji-font-${item.value}`,\n                    label: item_name,\n                    value: item.value,\n                    hint: item.hint,\n                }));\n            this.$('.emoji-fonts-list').append(element);\n        });\n    },\n\n    onScrollY: function () {\n        if (this.getScrollTop() === 0)\n            this.$('.settings-panel-head').removeClass('lined-head')\n        else\n            this.$('.settings-panel-head').addClass('lined-head')\n    },\n\n    closeSettings: function (ev) {\n        this.current_sound && this.current_sound.pause();\n        if (xabber.body.screen && xabber.body.screen.get('previous_screen')){\n            let previous_screen = xabber.body.screen.get('previous_screen');\n            previous_screen.close_settings = true;\n            xabber.body.setScreen(previous_screen.name, previous_screen);\n            xabber.body.screen.attributes.close_settings = undefined;\n        } else\n            xabber.toolbar_view.showAllChats();\n    },\n\n    backToMenu: function (ev) {\n        this.current_sound && this.current_sound.pause();\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToSubMenu: function (ev) {\n        this.current_sound && this.current_sound.pause();\n        let $tab = $(ev.target).closest('.btn-back-subsettings'),\n            block_name = $tab.attr('data-subblock-parent-name'),\n            $elem = this.$('.settings-block-wrap.' + block_name),\n            elem_parent = $elem.attr('data-parent-block');\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (elem_parent) {\n            $tab.attr('data-subblock-parent-name', elem_parent)\n        } else {\n            this.$('.btn-back').removeClass('hidden');\n            this.$('.btn-back-subsettings').addClass('hidden');\n        }\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    goToWebNotifications: function (ev) {\n        this.$('.settings-tab[data-block-name=\"web-notifications\"]').click();\n    },\n\n    setIdling: function (ev) {\n        let value = !this.model.get('idling');\n        this.model.save('idling', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.idling').find('input').prop('checked', value);\n        this.$('#idle_timeout').prop('disabled', !value);\n    },\n\n    setIdlingTimeout: function (ev) {\n        let $target = $(ev.target),\n            value = $(ev.target).val();\n        value = parseInt(value);\n        if (_.isNaN(value)){\n            value = constants.IDLING_DEFAULT_TIMEOUT;\n        } else if (value < constants.IDLING_MINIMAL_TIMEOUT){\n            value = constants.IDLING_MINIMAL_TIMEOUT;\n        }\n        this.model.save('idling_time', value);\n        $target.val(value);\n        ev.preventDefault();\n    },\n\n    setNotificationsVolumeEnabled: function (ev) {\n        ev.preventDefault();\n        let value = !this.model.get('notifications_volume_enabled');\n        this.model.save('notifications_volume_enabled', value);\n        this.$('#notifications_volume_enable').prop('checked', value);\n        this.$('.volume-setting .disabled').switchClass('hidden', value);\n        this.$('#notifications_volume').prop('disabled', !value);\n    },\n\n    setNotifications: function (ev) {\n        let value = this.model.get('notifications');\n        ev.preventDefault();\n        if (value === null) {\n            utils.callback_popup_message(xabber.getString(\"notifications__toast_notifications_not_supported\"), 1500);\n        } else {\n            value = value && xabber._cache.get('notifications');\n            if (!xabber._cache.get('notifications')) {\n                window.Notification.requestPermission((permission) => {\n                    xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n                    xabber.notifications_placeholder && xabber.notifications_placeholder.close();\n                    value = (permission === 'granted');\n                    this.model.save('notifications', value ? value : this.model.get('notifications'));\n                    this.$('.setting.notifications input[type=checkbox]').prop('checked', value);\n                    this.$('.notifications-lever input[type=checkbox]').prop('checked', value);\n                    this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n                    this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n                    this.$('.desktop-notifications-clue-wrap').hideIf(value);\n                    this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !value);\n                });\n            } else {\n                value = !value;\n                this.model.save('notifications', value);\n                this.$('.setting.notifications input[type=checkbox]').prop('checked', value);\n                this.$('.notifications-lever input[type=checkbox]').prop('checked', value);\n                this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n                this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n                this.$('.desktop-notifications-clue-wrap').hideIf(value);\n                this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !value);\n            }\n        }\n    },\n\n    setPrivateNotifications: function (ev) {\n        let value = !this.model.get('notifications_private');\n        this.model.save('notifications_private', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !value)\n        this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n        $(ev.target).closest('.private-notifications').find('input').prop('checked', value);\n    },\n\n    setGroupNotifications: function (ev) {\n        let value = !this.model.get('notifications_group');\n        this.model.save('notifications_group', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !value)\n        this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n        $(ev.target).closest('.group-notifications').find('input').prop('checked', value);\n    },\n\n    setJingleCalls: function (ev) {\n        let value = !this.model.get('jingle_calls');\n        this.model.save('jingle_calls', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=call_sound]').prop('disabled', !value)\n        this.$('.sound input[type=radio][name=dialtone_sound]').prop('disabled', !value)\n        $(ev.target).closest('.jingle-calls').find('input').prop('checked', value);\n    },\n\n    setPrivateMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_private');\n        this.model.save('message_preview_private', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setGroupMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_group');\n        this.model.save('message_preview_group', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setCallAttention: function (ev) {\n        let value = !this.model.get('call_attention');\n        this.model.save('call_attention', value);\n        ev.preventDefault();\n        $(ev.target).closest('.call-attention').find('input').prop('checked', value);\n    },\n\n    setLoadMedia: function (ev) {\n        let value = !this.model.get('load_media');\n        this.model.save('load_media', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.load-media').find('input').prop('checked', value);\n    },\n\n    setTypingNotifications: function (ev) {\n        let value = !this.model.get('typing_notifications');\n        this.model.save('typing_notifications', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.typing-notifications').find('input').prop('checked', value);\n    },\n\n    setMappingService: function (ev) {\n        let value = !this.model.get('mapping_service');\n        this.model.save('mapping_service', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.mapping-service').find('input').prop('checked', value);\n    },\n\n    setPrivateSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, !this.model.get('notifications_volume_enabled') ? 0 : this.model.get('notifications_volume'));\n            this.model.save({private_sound: true, sound_on_private_message: value});\n        } else {\n            this.model.save('private_sound', false);\n        }\n    },\n\n    setGroupSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, !this.model.get('notifications_volume_enabled') ? 0 : this.model.get('notifications_volume'));\n            this.model.save({group_sound: true, sound_on_group_message: value});\n        } else {\n            this.model.save('group_sound', false);\n        }\n    },\n\n    setCallSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_call: value});\n    },\n\n    setDialtoneSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_dialtone: value});\n    },\n\n    setAttentionSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_attention: value});\n    },\n\n    setBackground: function (ev) {\n        let value = ev.target.value;\n        if (value == 'default') {\n            this.model.save('background', {type: 'default'});\n            xabber.body.updateBackground();\n            this.updateBackgroundSetting();\n        } else if (value == 'repeating-pattern' || value == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: value, model: this.model});\n        }\n    },\n\n    changeBackgroundImage: function () {\n        let type = this.model.get('background').type;\n        if (type == 'repeating-pattern' || type == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: type, model: this.model});\n        }\n    },\n\n    openColorPicker: function () {\n        if (!this.colorPicker)\n            this.colorPicker = new xabber.ColorPicker({model: this.model});\n        this.colorPicker.render();\n    },\n\n    chooseMainColor: function (ev) {\n        let color = $(ev.target).closest('.client-main-color-item').attr('data-value');\n        this.model.save('main_color', color);\n        this.$(`.client-main-color-item`).removeClass('chosen-client-color');\n        this.$(`.client-main-color-item[data-value=\"${color}\"]`).addClass('chosen-client-color');\n        xabber.trigger('update_main_color');\n    },\n\n    changeBlur: function () {\n        let value = this.$('#blur')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBlur(value);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n    },\n\n    changeNotificationsVolume: function () {\n        let volume = this.$('#notifications_volume')[0].value / 100,\n            sound = this.$('.sound input[type=radio][name=private_sound]:checked').val() || this.$('.sound input[type=radio][name=group_sound]:checked').val();\n        this.model.save('notifications_volume', volume);\n        if (sound) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(sound, false, volume);\n        }\n    },\n\n    changeVignetting: function () {\n        let value = this.$('#vignetting')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBoxShadow(value);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n    },\n\n    switchVignetting: function () {\n        let is_switched = this.$('#vignetting_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? this.$('#vignetting')[0].value : false;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', is_switched);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n        xabber.body.updateBoxShadow(value);\n    },\n\n    switchBlur: function () {\n        let is_switched = this.$('#blur_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? this.$('#blur')[0].value : false;\n        this.$('.blur-setting .disabled').switchClass('hidden', is_switched);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n        xabber.body.updateBlur(value);\n    },\n\n    setHotkeys: function (ev) {\n        this.model.save('hotkeys', ev.target.value);\n    },\n\n    setAvatarShape: function (ev) {\n        this.model.save('avatar_shape', ev.target.value);\n        xabber.trigger('update_avatar_shape');\n    },\n\n    deleteAllAccounts: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"settings__dialog_quit_client__confirm\", [constants.CLIENT_NAME]), null, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            res && xabber.trigger('quit');\n        });\n    },\n\n    changeLanguage: function (ev) {\n        let value = ev.target.value,\n            locale = Object.keys(client_translation_progress).find(key => !value.indexOf(key)) || constants.languages_another_locales[value] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[value].indexOf(key)),\n            progress = client_translation_progress[locale],\n            platform_text;\n\n        (value == 'default') && (progress = 100);\n\n        if (progress == 100 && ((xabber.get(\"default_language\") === 'en' && value === 'default') || value === 'en')) {\n            platform_text = xabber.getString(\"settings__dialog_change_language__confirm\");\n        } else if (progress == 100) {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_full_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translations\")}</a>`, constants.SHORT_CLIENT_NAME, ])\n             + '\\n\\n' +xabber.getString(\"settings__dialog_change_language__confirm\");\n        } else if (progress == 0) {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_no_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translation\")}</a>`]);\n        } else {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_partial_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translation_team\")}</a>`, constants.SHORT_CLIENT_NAME])\n                + '\\n\\n' +xabber.getString(\"settings__dialog_change_language__confirm\");\n        }\n        let modal_classes = ['change-language-modal'], inverted_buttons;\n        if (progress == 0){\n            modal_classes.push('change-language-modal-no-ok');\n        } else if (progress != 0 && progress < 70){\n            inverted_buttons = true;\n        }\n        utils.dialogs.ask(xabber.getString(\"settings__dialog_change_language__header\"),\n            platform_text,\n            {modal_class: modal_classes, no_dialog_options: true, inverted_buttons: inverted_buttons},\n            { ok_button_text: xabber.getString(\"settings__dialog_change_language__button_change\")}).done((result) => {\n\n            if (result) {\n                this.model.save('language', value);\n                window.location.reload(true);\n            } else {\n                this.$(`.languages-list input[type=radio][name=language][value=\"${this.model.get('language')}\"]`)\n                    .prop('checked', true);\n            }\n        });\n    },\n\n    changeEmojiFont: function (ev) {\n        let value = ev.target.value,\n            emoji_font = constants.EMOJI_FONTS_LIST[value],\n            current_time;\n\n\n        if (!emoji_font && value !== 'system'){\n            $(ev.target).closest('.emoji-font-field').detach();\n            utils.dialogs.error(xabber.getString(\"settings__menu_item__emoji_font_chosen_does_not_exist\"));\n            this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${this.model.get('emoji_font')}\"]`)\n                .prop('checked', true);\n            return\n        }\n        this.load_emoji_external_dfd = new $.Deferred();\n        this.load_emoji_external_dfd.done(() => {\n\n            this.font_load_dfd = new $.Deferred();\n            this.currently_loaded_font_value = value;\n\n            this.font_load_dfd.done((response) => {\n                if (this.emoji_load_date !== current_time)\n                    return;\n                this.$('.emoji_font .preloader-wrap').addClass('hidden');\n                this.$('.emoji_font .emoji-font-download-text').addClass('hidden');\n                this.$('.emoji_font .emojis-preview').removeClass('hidden');\n                this.$('.emoji_font .emoji-font-external-url-text').addClass('hidden');\n                this.$('.emoji_font .emoji-font-external-url-button').addClass('hidden');\n                this.$(`.emoji-fonts-list input[type=radio][name=emoji_font]`)\n                    .prop('disabled', false);\n\n                this.font_load_dfd = null;\n                this.currently_loaded_font_value = null;\n                if (response && response.error){\n                    this.$('.emoji_font .emoji-font-attribution-text').addClass('hidden');\n                    this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${this.model.get('emoji_font')}\"]`)\n                        .prop('checked', true);\n                    $(ev.target).prop('disabled', true);\n                } else {\n                    this.model.save('emoji_font', value);\n                }\n            });\n\n            this.$('.emoji_font .emoji-font-external-url-text').addClass('hidden');\n            this.$('.emoji_font .emoji-font-external-url-button').addClass('hidden');\n            this.$('.emoji_font .preloader-wrap').removeClass('hidden');\n            this.$('.emoji_font .emoji-font-download-text').removeClass('hidden');\n            let emoji_url = value === 'system' ? value : emoji_font.url;\n            this.load_emoji_external_dfd = null;\n            this.$(`.emoji-fonts-list input[type=radio][name=emoji_font]`)\n                .prop('disabled', true);\n            this.emoji_load_date = Date.now();\n            current_time = this.emoji_load_date;\n            xabber.loadEmojiFont(emoji_url, this.font_load_dfd);\n        });\n\n        this.$('.emoji_font .emojis-preview').addClass('hidden');\n        this.$('.emoji_font .emoji-font-attribution-text').addClass('hidden');\n\n        if (emoji_font && emoji_font.is_outside_url && value !== 'system'){\n            this.$('.emoji_font .emoji-font-external-url-text').removeClass('hidden');\n            this.$('.emoji_font .emoji-font-external-url-button').removeClass('hidden');\n        } else {\n            this.load_emoji_external_dfd.resolve();\n        }\n    },\n\n    loadExternalEmojiFont: function (ev) {\n        this.load_emoji_external_dfd && this.load_emoji_external_dfd.resolve();\n    },\n\n    updateEmojiFontLabel: function () {\n        if (!constants.EMOJI_FONTS_LIST[this.model.get('emoji_font')] && this.model.get('emoji_font') !== 'system') {\n            this.$('.settings-tab[data-block-name=\"emoji_font\"] .settings-block-label').text(xabber.getString(\"settings__menu_item__emoji_font_chosen_does_not_exist\"))\n            return;\n        }\n        let label = this.model.get('emoji_font') === 'system' ? 'system' : constants.EMOJI_FONTS_LIST[this.model.get('emoji_font')].name,\n            attribution_text = this.model.get('emoji_font') === 'system' ? '' : constants.EMOJI_FONTS_LIST[this.model.get('emoji_font')].attribution_text;\n        if (label === 'system')\n            label = xabber.getString(\"settings__menu_item__emoji_font_system\");\n        this.$('.settings-tab[data-block-name=\"emoji_font\"] .settings-block-label').text(label);\n        this.$('.emoji-font-attribution-text').switchClass('hidden', !attribution_text);\n        this.$('.emoji-font-attribution-text').text(attribution_text);\n        this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${this.model.get('emoji_font')}\"]`)\n            .prop('checked', true);\n        this.$(`.emoji-fonts-list input[type=radio][name=emoji_font]`)\n            .prop('disabled', false);\n        this.$('.emoji_font .emoji-font-external-url-text').addClass('hidden');\n        this.$('.emoji_font .emoji-font-external-url-button').addClass('hidden');\n        this.$('.emoji_font .preloader-wrap').addClass('hidden');\n        this.$('.emoji_font .emoji-font-download-text').addClass('hidden');\n        this.$('.emoji_font .emojis-preview').removeClass('hidden');\n        if (this.font_load_dfd && this.currently_loaded_font_value){\n            this.$('.emoji_font .emojis-preview').addClass('hidden');\n            this.$('.emoji-font-attribution-text').addClass('hidden');\n            this.$('.emoji_font .preloader-wrap').removeClass('hidden');\n            this.$('.emoji_font .emoji-font-download-text').removeClass('hidden');\n            this.$(`.emoji-fonts-list input[type=radio][name=emoji_font]`)\n                .prop('disabled', true);\n            this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${this.currently_loaded_font_value}\"]`)\n                .prop('checked', true);\n        }\n    },\n\n    updateLanguage: function () {\n        if (this.model.get('language') === 'default'){\n            this.$('.settings-tab[data-block-name=\"interface_language\"] .settings-block-label').text(xabber.getString(\"settings__languages_list___item_default\", [constants.languages[xabber.get(\"default_language\") || 'en']]));\n        } else {\n            this.$('.settings-tab[data-block-name=\"interface_language\"] .settings-block-label').text(constants.languages[this.model.get('language')]);\n        }\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    updateDescription: function () {\n\n        if (!xabber.settings.language)\n            return;\n\n        let lang = xabber.settings.language,\n            locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key)),\n            progress = client_translation_progress[locale];\n\n        (lang == 'default' || !lang.indexOf('en')) && (progress = 100);\n\n        if (!_.isUndefined(progress)) {\n            let progress_text, platform_text;\n            if (progress == 100 && ((xabber.get(\"default_language\") === 'en' && lang === 'default') || lang === 'en')) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation_english\", [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" class=\"email-link\" href='mailto:${constants.EMAIL_FOR_JOIN_TRANSLATION}'>${constants.EMAIL_FOR_JOIN_TRANSLATION}</a>`, constants.SHORT_CLIENT_NAME]);\n            } else if (progress == 100) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n            } else if (progress == 0) {\n                progress_text = xabber.getString(\"settings__section_interface_language__text_description_no_translations\", [constants.SHORT_CLIENT_NAME]);\n            } else {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_unfull_translation\", [constants.SHORT_CLIENT_NAME]);\n            }\n            platform_text = xabber.getString(\"settings__interface_language__text_description_platform\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${constants.PROJECT_CROWDIN_URL}</a>`]);\n            this.$('.description').html(`${progress_text}<br><br>${platform_text}`);\n        }\n    },\n\n    updateAvatarLabel: function () {\n        let shape = this.model.get('avatar_shape'), label_text;\n        if (shape === 'circle')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_circle\");\n        if (shape === 'squircle')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_squircle\");\n        if (shape === 'octagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_octagon\");\n        if (shape === 'hexagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_hexagon\");\n        if (shape === 'pentagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_pentagon\");\n        if (shape === 'rounded')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_rounded\");\n        if (shape === 'star')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_star\");\n        this.$('.settings-tab[data-block-name=\"avatars\"] .settings-block-label').text(label_text);\n    },\n\n    updateSoundsLabel: function () {\n        let sound_private_value = this.model.get('private_sound') && this.model.get('notifications_private') ? this.model.get('sound_on_private_message') : '',\n            sound_group_value = this.model.get('group_sound') && this.model.get('notifications_group') ? this.model.get('sound_on_group_message') : '',\n            sound_on_attention = this.model.get('call_attention') ? this.model.get('sound_on_attention') : '',\n            sound_private_text, sound_group_text, sound_on_attention_text;\n\n\n        if (sound_private_value === '')\n            sound_private_text = 'No sound';\n        else\n            sound_private_text = sound_private_value.replace('_', ' ');\n\n        if (sound_group_value === '')\n            sound_group_text = 'No sound';\n        else\n            sound_group_text = sound_group_value.replace('_', ' ');\n\n        if (sound_on_attention === '')\n            sound_on_attention_text = 'No sound';\n        else\n            sound_on_attention_text = sound_on_attention.replace('_', ' ');\n\n        this.$('.settings-tab[data-block-name=\"chats-notifications\"] .settings-block-label').text(sound_private_text);\n        this.$('.settings-tab[data-block-name=\"groupchats-notifications\"] .settings-block-label').text(sound_group_text);\n        this.$('.settings-tab[data-block-name=\"attention-calls\"] .settings-block-label').text(sound_on_attention_text);\n    },\n});\n\nxabber.mainColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal main-color-picker',\n    template: templates.color_scheme,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .color-value\": \"setColor\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n    },\n\n    setColor: function (ev) {\n        let color = $(ev.target).closest('.color-value').attr('data-value');\n        this.model.save('main_color', color);\n        xabber.trigger('update_main_color');\n        this.close();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n\n});\n\nxabber.ColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal color-picker',\n    materialColors: [\n        {\n            color: \"red\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFEBEE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCDD2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EF9A9A\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E57373\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EF5350\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#F44336\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#E53935\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#D32F2F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#C62828\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#B71C1C\"\n                }\n            ]\n        },\n        {\n            color: \"pink\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FCE4EC\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F8BBD0\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#F48FB1\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#F06292\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EC407A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#E91E63\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#D81B60\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#C2185B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#AD1457\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#880E4F\"\n                }\n            ]\n        },\n        {\n            color: \"purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F3E5F5\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#E1BEE7\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#CE93D8\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#BA68C8\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#AB47BC\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9C27B0\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#8E24AA\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#7B1FA2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#6A1B9A\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#4A148C\"\n                }\n            ]\n        },\n        {\n            color: \"deep-purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EDE7F6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D1C4E9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B39DDB\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#9575CD\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#7E57C2\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#673AB7\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#5E35B1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#512DA8\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4527A0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#311B92\"\n                }\n            ]\n        },\n        {\n            color: \"indigo\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8EAF6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C5CAE9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#9FA8DA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#7986CB\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#5C6BC0\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#3F51B5\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#3949AB\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#303F9F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#283593\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1A237E\"\n                }\n            ]\n        },\n        {\n            color: \"blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E3F2FD\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#BBDEFB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#90CAF9\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#64B5F6\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#42A5F5\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#2196F3\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#1E88E5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#1976D2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#1565C0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#0D47A1\"\n                }\n            ]\n        },\n        {\n            color: \"light-blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E1F5FE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B3E5FC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#81D4FA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4FC3F7\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#29B6F6\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#03A9F4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#039BE5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0288D1\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#0277BD\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#01579B\"\n                }\n            ]\n        },\n        {\n            color: \"cyan\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F7FA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2EBF2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80DEEA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DD0E1\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26C6DA\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#00BCD4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00ACC1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0097A7\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00838F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#006064\"\n                }\n            ]\n        },\n        {\n            color: \"teal\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F2F1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2DFDB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80CBC4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DB6AC\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26A69A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#009688\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00897B\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#00796B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00695C\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#004D40\"\n                }\n            ]\n        },\n        {\n            color: \"green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8F5E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C8E6C9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#A5D6A7\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#81C784\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#66BB6A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#4CAF50\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#43A047\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#388E3C\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#2E7D32\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1B5E20\"\n                }\n            ]\n        },\n        {\n            color: \"light-green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F1F8E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#DCEDC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#C5E1A5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#AED581\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#9CCC65\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#8BC34A\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#7CB342\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#689F38\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#558B2F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#33691E\"\n                }\n            ]\n        },\n        {\n            color: \"lime\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F9FBE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F0F4C3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#E6EE9C\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#DCE775\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#D4E157\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#CDDC39\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#C0CA33\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#AFB42B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#9E9D24\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#827717\"\n                }\n            ]\n        },\n        {\n            color: \"yellow\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFFDE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFF9C4\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFF59D\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFF176\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFEE58\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFEB3B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FDD835\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FBC02D\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#F9A825\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#F57F17\"\n                }\n            ]\n        },\n        {\n            color: \"amber\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF8E1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFECB3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFE082\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFD54F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFCA28\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFC107\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FFB300\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FFA000\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#FF8F00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#FF6F00\"\n                }\n            ]\n        },\n        {\n            color: \"orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF3E0\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFE0B2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFCC80\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFB74D\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFA726\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF9800\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FB8C00\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#F57C00\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#EF6C00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#E65100\"\n                }\n            ]\n        },\n        {\n            color: \"deep-orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FBE9E7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCCBC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFAB91\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FF8A65\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FF7043\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF5722\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#F4511E\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#E64A19\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#D84315\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#BF360C\"\n                }\n            ]\n        },\n        {\n            color: \"brown\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EFEBE9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D7CCC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#BCAAA4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#A1887F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#8D6E63\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#795548\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#6D4C41\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#5D4037\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4E342E\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#3E2723\"\n                }\n            ]\n        },\n        {\n            color: \"grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FAFAFA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F5F5F5\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EEEEEE\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E0E0E0\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#BDBDBD\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9E9E9E\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#757575\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#616161\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#424242\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#212121\"\n                }\n            ]\n        },\n        {\n            color: \"blue-grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#ECEFF1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#CFD8DC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B0BEC5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#90A4AE\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#78909C\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#607D8B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#546E7A\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#455A64\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#37474F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#263238\"\n                }\n            ]\n        }\n    ],\n\n    ps_selector: '.material-color-picker-wrap',\n    events: {\n        \"click .color-palette-item\": \"selectColor\",\n        \"click .selected-color-hex\": \"updateInputField\",\n        \"focusout .selected-color-hex-input\": \"focusoutInputField\",\n        \"keyup .selected-color-hex-input\": \"keyUpInput\",\n        \"click .btn-set\": \"setColor\"\n    },\n\n    _initialize(options) {\n        this.model = options.model;\n        this.$el.html(templates.color_picker({materialColors: this.materialColors}));\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                let $input = this.$('.selected-color-hex-input'),\n                    $color_hex = this.$('.selected-color-hex'),\n                    value = this.model.get('appearance').color || '#E0E0E0';\n                let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n                if (material_color) {\n                    let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n                    this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n                } else {\n                    this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n                }\n                if (value) {\n                    this.$('.selected-color-wrap').removeClass('hidden');\n                    $input.addClass('hidden');\n                    $color_hex.removeClass('hidden').text(value);\n                    value && this.$('.selected-color-item').css('background-color', value);\n                }\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    updateInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.removeClass('hidden');\n        $input[0].value = $color_hex.text();\n        $color_hex.addClass('hidden');\n    },\n\n    keyUpInput: function (ev) {\n        if (ev.keyCode == constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.focusoutInputField();\n        }\n        let $input = this.$('.selected-color-hex-input'),\n            value = $input[0].value.trim();\n        this.$('.selected-color-item').css('background-color', value);\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n    },\n\n    focusoutInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex'),\n            value = $input[0].value.trim();\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden').text(value);\n        this.$('.selected-color-item').css('background-color', value);\n    },\n\n    selectColor: function (ev) {\n        let $target = $(ev.target),\n            hex = $target.attr('data-hex'),\n            color_name = $target.closest('.color-palette-wrapper').attr('data-color-name').replace(/-/g, \"_\"),\n            weight = $target.attr('data-weight');\n        this.$('.selected-color-wrap').removeClass('hidden');\n        this.$('.selected-color-item').css('background-color', hex);\n        this.$('.selected-color-name').text(xabber.getString(`account_color_name_${color_name}`).replace(/-/g, \" \").replace(/-/g, \" \") + ` ${weight}`);\n        this.$('.selected-color-hex').text(hex);\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden');\n    },\n\n    setColor: function () {\n        this.close();\n        let appearance = this.model.get('appearance');\n        this.model.save('appearance', _.extend(appearance, {color: this.$('.selected-color-hex').text()}));\n\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                xabber.settings_modal_view.updateColor();\n            }\n        });\n    }\n\n});\n\nxabber.SetBackgroundView = xabber.BasicView.extend({\n    className: 'modal main-modal settings-background background-panel',\n    template: templates.backgrounds_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addBackground\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.type = options.type;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        if (this.type == 'repeating-pattern')\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_pattern\"));\n        else\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_image\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onScrollY: function () {\n        if (this.$('.screen-wrap:not(.hidden)').attr('data-screen') === 'library' && this.getScrollBottom() < 5) {\n            this.loadMoreImages();\n        }\n    },\n\n    getImagesFromXML: function (callback) {\n        if (this.type == 'repeating-pattern' && this.model.patterns_library || this.type == 'images' && this.model.img_library) {\n            callback && callback();\n            return;\n        }\n        if (this.type == 'repeating-pattern') {\n            this.onGetPatternsCallback(env.backgroundPatternsXml)\n        } else {\n            this.onGetImagesCallback(env.backgroundImagesXml);\n        }\n        callback && callback();\n    },\n\n    onGetPatternsCallback: function (data) {\n        if (!(data && data['background-patterns'] && data['background-patterns'].image))\n            return;\n        let images = [];\n        data = data['background-patterns'].image;\n        data.forEach((item) => {\n            images.push({thumbnail: item});\n        });\n        this.model.patterns_library = images;\n    },\n\n    onGetImagesCallback: function (data) {\n        if (!(data && data['background-images'] && data['background-images'].image))\n            return;\n        let images = [];\n        data = data['background-images'].image;\n        data.forEach((item) => {\n            let thumbnail = item.thumbnail,\n                fs_img = item['fullscreen-image'];\n            images.push({thumbnail, fs_img});\n        });\n        this.model.img_library = images;\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    createLibrary: function () {\n        this.getImagesFromXML(() => {\n            this.loadMoreImages(40);\n        });\n    },\n\n    loadMoreImages: function (count) {\n        if ((this.type == 'repeating-pattern' && !this.model.patterns_library) || (this.type == 'images' && !this.model.img_library))\n            return;\n        !count && (count = 20);\n        let current_count = this.$(`.image-item`).length;\n        if (this.type == 'repeating-pattern' && current_count >= this.model.patterns_library.length || this.type == 'images' && current_count >= this.model.img_library.length)\n            return;\n        for (let i = current_count; i < (current_count + count); i++) {\n            let img = $(`<div class=\"image-item\"/>`),\n                img_sources = this.type == 'repeating-pattern' ? this.model.patterns_library[i] : this.model.img_library[i];\n            if (!img_sources)\n                break;\n            img.css('background-image', `url(\"${img_sources.thumbnail}\")`);\n            img.attr('data-src', this.type == 'repeating-pattern' ? img_sources.thumbnail : img_sources.fs_img);\n            this.$('.library-wrap').append(img);\n        }\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addBackground: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img) => {\n            if (img) {\n                this.model.save('background', {type: this.type, image: img});\n            }\n            else {\n                this.model.save('background', {type: 'default'});\n            }\n            xabber.body.updateBackground();\n            this.close();\n        });\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = $active_screen.find('div.active').attr('data-src');\n            dfd.resolve(image);\n        } else {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            if ($active_screen.attr('data-screen') == 'web-address') {\n                let request = {\n                    type: \"GET\",\n                    url: image,\n                    headers: {\"Access-Control-Allow-Origin\": \"*\"},\n                    dataType: 'blob',\n                    success: function (data) {\n                        image = data;\n                        dfd.resolve(image);\n                    },\n                    error: () => {\n                        dfd.resolve(image);\n                    }\n                };\n                $.ajax(request);\n            } else\n                dfd.resolve(image);\n        }\n    },\n\n    close: function () {\n        xabber.settings_modal_view.updateBackgroundSetting();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.AboutView = xabber.BasicView.extend({\n    className: 'settings-panel about-panel',\n    template: templates.about,\n    ps_selector: '.panel-content',\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(this.model.get('version_number'));\n    },\n\n    render: function () {\n    }\n});\n\nxabber.DragManager = Backbone.Model.extend({\n    initialize: function () {\n        window.document.onmousedown = this.onMouseDown.bind(this);\n        window.document.onmousemove = this.onMouseMove.bind(this);\n        window.document.onmouseup = this.onMouseUp.bind(this);\n    },\n\n    onMouseDown: function (ev) {\n        if (ev.which != 1) {\n            return;\n        }\n        let draghandle_elem = ev && ev.target && ev.target.closest ? ev.target.closest('.drag-handle') : $(ev.target).closest('.drag-handle'),\n            elem = draghandle_elem && draghandle_elem.closest('.draggable');\n        if (!elem) {\n            return this.resetElem();\n        }\n        this.set({\n            elem: elem,\n            draghandle_elem: draghandle_elem,\n            downX: ev.pageX,\n            downY: ev.pageY\n        });\n    },\n\n    onMouseMove: function (ev) {\n        if (!this.get('elem')) {\n            return;\n        }\n        let avatar = this.get('avatar');\n        if (!avatar) {\n            if (    Math.abs(ev.pageX - this.get('downX')) < 3 &&\n                    Math.abs(ev.pageY - this.get('downY')) < 3) {\n                return;\n            }\n            avatar = this.createAvatar(ev);\n            if (!avatar) {\n                return this.resetElem();\n            }\n            this.set('avatar', avatar);\n            let coords = this.getCoords(avatar);\n            this.set({\n                shiftX: this.get('downX') - coords.left,\n                shiftY: this.get('downY') - coords.top\n            });\n            this.startDrag(ev);\n        }\n        avatar.style.left = ev.pageX - this.get('shiftX') + 'px';\n        avatar.style.top = ev.pageY - this.get('shiftY') + 'px';\n        let drop_elem = this.findDropElem(ev);\n        this.updateDropElem(drop_elem);\n        return;\n    },\n\n    onMouseUp: function (ev) {\n        let selector = document.querySelector('.recording');\n        if (selector) {\n            $(selector).removeClass('recording');\n            return;\n        }\n        this.get('avatar') && this.finishDrag(ev);\n        this.resetElem();\n    },\n\n    resetElem: function () {\n        this.set({elem: null, draghandle_elem: null, avatar: null});\n    },\n\n    getCoords: function (elem) {\n        let box = elem.getBoundingClientRect();\n        return {\n            top: box.top + window.pageYOffset,\n            left: box.left + window.pageXOffset\n        };\n    },\n\n    createAvatar: function () {\n        let avatar = this.get('elem'),\n            $avatar = $(avatar),\n            draghandle_elem = this.get('draghandle_elem');\n        let old = {\n            parent: avatar.parentNode,\n            nextSibling: avatar.nextSibling,\n            position: avatar.position || '',\n            left: avatar.left || '',\n            top: avatar.top || '',\n            zIndex: avatar.zIndex || '',\n            avatar_cursor: avatar.style.cursor || '',\n            draghandle_elem_cursor: draghandle_elem.style.cursor || ''\n        };\n\n        $avatar.addClass('dragging');\n        avatar.style.cursor = '-webkit-grabbing';\n        draghandle_elem.style.cursor = '-webkit-grabbing';\n\n        avatar.rollback = function () {\n            old.parent.insertBefore(avatar, old.nextSibling);\n            $avatar.removeClass('dragging');\n            avatar.style.position = old.position;\n            avatar.style.left = old.left;\n            avatar.style.top = old.top;\n            avatar.style.zIndex = old.zIndex;\n            avatar.style.cursor = old.avatar_cursor;\n            draghandle_elem.style.cursor = old.draghandle_elem_cursor;\n        };\n\n        return avatar;\n    },\n\n    startDrag: function (ev) {\n        let avatar = this.get('avatar');\n        window.document.body.appendChild(avatar);\n        avatar.style.zIndex = 9999;\n        avatar.style.position = 'absolute';\n    },\n\n    finishDrag: function (ev) {\n        let elem = this.get('elem'),\n            avatar = this.get('avatar'),\n            drop_elem = this.findDropElem(ev);\n        avatar.rollback();\n        this.updateDropElem(null);\n        if (elem && drop_elem) {\n            $(elem).trigger('drag_to', drop_elem);\n            $(drop_elem).trigger('drag_from', elem);\n        }\n    },\n\n    findDropElem: function (ev) {\n        let avatar = this.get('avatar');\n        avatar.hidden = true;\n        let elem = window.document.elementFromPoint(ev.clientX, ev.clientY);\n        avatar.hidden = false;\n        if (!elem) {\n            return null;\n        }\n        return elem.closest('.droppable');\n    },\n\n    updateDropElem: function (drop_elem) {\n        let old_drop_elem = this.get('drop_elem');\n        this.set('drop_elem', drop_elem);\n        old_drop_elem && $(old_drop_elem).removeClass('drag-on');\n        drop_elem && $(drop_elem).addClass('drag-on');\n    }\n});\n\n_.extend(xabber, {\n    modal_settings: {\n        open: {\n            in_duration: 10,\n            out_duration: 10,\n            opacity: 0.4\n        },\n        close: {out_duration: 10}\n    },\n\n    ps_settings: {\n        minScrollbarLength: 40,\n        suppressScrollX: true,\n        wheelSpeed: 0.5\n    },\n\n    startBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval && is_disconnected === undefined)\n            return;\n        clearInterval(this._blink_interval);\n        this._blink_interval = setInterval(() => {\n            let $icon = $(\"link[rel='shortcut icon']\"), url;\n            if ($icon.attr('href').indexOf(this.cache.favicon) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT) > -1 || $icon.attr('href').indexOf(this.cache.favicon_gray) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT_GREY) > -1)\n                url = this.cache.favicon_message || constants.FAVICON_MESSAGE;\n            else\n                url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $icon.attr('href', url);\n        }, 1000);\n    },\n\n    stopBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval || is_disconnected !== undefined) {\n            clearInterval(this._blink_interval);\n            this._blink_interval = null;\n            let url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $(\"link[rel='shortcut icon']\").attr(\"href\", url);\n        }\n    },\n\n    onChangedAllMessageCounter: function () {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon();\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon();\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    updateAllMessageCounterOnDisconnect: function (is_disconnected) {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon(is_disconnected);\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon(is_disconnected);\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    loadEmojiFont: function (url, dfd) {\n        if (url && url !== 'system') {\n            let FontName = \"EmojiFont\",\n                FontURL = url,\n                emoji_font = new FontFace(FontName, `url(${FontURL})`);\n\n            emoji_font.load().then((loaded_face) => {\n                document.fonts.add(loaded_face);\n                $(constants.CONTAINER_ELEMENT).addClass('custom-emoji-font');\n                dfd && dfd.resolve({});\n            }).catch((error) => {\n                utils.dialogs.error(xabber.getString(\"settings__menu_item__emoji_font_error_loading\") + error);\n                $(constants.CONTAINER_ELEMENT).removeClass('custom-emoji-font');\n                dfd && dfd.resolve({error: true});\n            });\n        } else if (url === 'system'){\n            $(constants.CONTAINER_ELEMENT).removeClass('custom-emoji-font');\n            dfd && dfd.resolve({});\n        }\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted())\n                    count_msg += chat.get('unread') + chat.get('const_unread');\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_msg += incoming_subscriptions;\n        });\n        return count_msg;\n    },\n\n    recountAllMessageCounter: function () {\n        if (!this.get('focused')) {\n            this.set('all_msg_counter', this.setAllMessageCounter());\n        }\n    },\n\n    resetMessageCounter: function () {\n        this.set('all_msg_counter', 0);\n    },\n\n    onChangedFocusState: function () {\n        if (this.get('focused')) {\n            this.resetMessageCounter();\n        }\n    },\n\n    openWindow: function (url) {\n        utils.openWindow(url, () => {\n            utils.dialogs.error(xabber.getString(\"notifications__error__text_could_not_open_new_tab\"));\n        });\n    },\n\n    popupNotification: function (params) {\n        let notification = new window.Notification(params.title, {\n            body: params.text,\n            icon: params.icon\n        });\n        setTimeout(notification.close.bind(notification), 5000);\n        return notification;\n    },\n\n    playAudio: function (name, loop, volume) {\n        if (!((volume || volume === 0) && !isNaN(volume)))\n            volume = 1;\n        loop = loop || false;\n        let filename = sounds.all_sounds.find(item => item.file_name === name);\n        if (filename) {\n            let audio = new window.Audio(filename.audio);\n            audio.loop = loop;\n            audio.volume = volume;\n            audio.play();\n            return audio;\n        }\n        return;\n    },\n\n    stopAudio: function (audio) {\n        if (audio) {\n            audio.pause();\n            audio.remove();\n        }\n    },\n\n    registerDOMEvents: function () {\n        let self = this;\n\n        $(window).on(\"blur focus\", function (ev) {\n            self.set('focused', ev.type === 'focus');\n        });\n\n        $(window).on(\"resize\", function (ev) {\n            self.set({\n                width: window.innerWidth,\n                height: window.innerHeight\n            });\n            self.trigger('update_layout', {size_changed: true});\n        });\n\n        window.document.body.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n\n        window.document.body.ondrop = (ev) => {\n            ev.preventDefault();\n        };\n    },\n\n\n    initIdleJS: function () {\n        if (this.idleJs)\n            this.idleJs.stop();\n        let self = this,\n            idling_time = self._settings.get('idling_time') * 1000\n\n        this.idleJs = new idleJs({\n            idle: idling_time, // idle time in ms\n            events: ['mousemove', 'keydown', 'mousedown', 'touchstart', 'focus', 'blur'], // events that will trigger the idle resetter\n            onIdle: () => {\n                if (self._settings.get('idling'))\n                    self.set('idle', true);\n                else\n                    self.set('idle', false);\n            } , // callback function to be executed after idle time\n            onActive:() => {\n                self.set('idle', false);\n            }  , // callback function to be executed after back form idleness\n            keepTracking: true, // set it to false if you want to be notified only on the first idleness change\n            startAtIdle: false // set it to true if you want to start in the idle state\n        })\n        this.idleJs.start();\n    },\n});\n\nxabber.once(\"start\", function () {\n    this.set('all_msg_counter', 0);\n    this.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n    this.on(\"change:focused\", this.onChangedFocusState, this);\n    this._settings.on(\"change:idling_time\", this.initIdleJS, this);\n    this.set({\n        focused: window.document.hasFocus(),\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n    this.registerDOMEvents();\n    this.initIdleJS();\n\n    Materialize.modalSettings = this.modal_settings;\n\n    this.drag_manager = new this.DragManager();\n\n    this.body = new this.Body({model: this});\n\n    this.login_page = this.body.addChild('login', this.NodeView, {\n        classlist: 'login-page-wrap', el: $(document).find('.login-container')[0]});\n\n    this.toolbar_view = this.body.addChild('toolbar', this.ToolbarView);\n    this.settings.appearance.color && this.toolbar_view.updateColor(this.settings.appearance.color);\n\n    this.blur_overlay = this.body.addChild('blur_overlay', this.NodeView, {\n        classlist: 'blur-overlay'});\n\n    this.main_panel = this.body.addChild('main', this.NodeView, {\n        classlist: 'main-wrap'});\n    this.main_overlay_panel = this.body.addChild('main_overlay', this.NodeView, {\n        classlist: 'main-overlay-wrap hidden'});\n    this.body.updateBlur(this.settings.appearance.blur);\n    this.left_panel = this.main_panel.addChild(\n        'left', this.NodeView, {classlist: 'panel-wrap left-panel-wrap'});\n    this.right_panel = this.main_panel.addChild(\n        'right', this.NodeView, {classlist: 'panel-wrap right-panel-wrap'});\n    this.right_contact_panel = this.main_panel.addChild(\n        'right_contact', this.NodeView, {classlist: 'panel-wrap right-contact-panel-wrap'});\n    this.wide_panel = this.main_panel.addChild(\n        'wide', this.NodeView, {classlist: 'panel-wrap wide-panel-wrap'});\n    this.placeholders_wrap = this.main_panel.addChild('placeholders', this.NodeView, {classlist: 'wide-placeholders-wrap'});\n    this.settings_modal_view = this.main_overlay_panel.addChild(\n        'settings_modal', this.SettingsModalView, {model: this._settings});\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    utils = env.utils;\n\n\nxabber.AccountSettings = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    defaults: {\n        timestamp: 0,\n        to_sync: false,\n        synced: false,\n        deleted: false\n    },\n\n    update_timestamp: function () {\n        this.save('timestamp', utils.now());\n    },\n\n    update_settings: function (settings) {\n        this.save(_.extend({timestamp: utils.now()}, settings));\n    },\n\n    request_data: function () {\n        return {\n            jid: this.get('jid'),\n            timestamp: this.get('timestamp'),\n            settings: _.omit(this.attributes, [\n                'jid', 'timestamp', 'order',\n                'to_sync', 'synced', 'deleted'\n            ])\n        };\n    }\n});\n\nxabber.AccountSettingsList = Backbone.CollectionWithStorage.extend({\n    model: xabber.AccountSettings,\n});\n\nxabber.AccountsOrderTimestamp = Backbone.ModelWithStorage.extend({\n    defaults: {\n        timestamp: 0\n    }\n});\n\nxabber.once(\"start\", function () {\n        this.account_settings_list = new this.AccountSettingsList(null, {\n            storage_name: this.getStorageName() + '-account-settings'\n        });\n        this.account_settings_list.fetch();\n        this.account_settings_list.order_timestamp = new this.AccountsOrderTimestamp(\n            {id: 'accounts-order-timestamp'},\n            {storage_name: this.getStorageName(), fetch: 'after'}\n        );\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    _ = env._,\n    uuid = env.uuid,\n    $iq = env.$iq,\n    utils = env.utils,\n    Strophe = env.Strophe,\n    constants = env.constants;\n\nStrophe.log = function (log_level, msg) {\n    let do_log = (constants.LOG_LEVEL === constants.LOG_LEVEL_DEBUG) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN &&\n            log_level >= Strophe.LogLevel.WARN) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR &&\n            log_level >= Strophe.LogLevel.ERROR);\n    if (do_log) {\n        console.info('Strophe log: ');\n        console.info(msg);\n    }\n};\n\nStrophe.addConnectionPlugin('register', {\n    _connection: null,\n\n    //The plugin must have the init function.\n    init: function(conn) {\n        this._connection = conn;\n\n        // compute free emun index number\n        let i = 0;\n        Object.keys(Strophe.Status).forEach(function (key) {\n            i = Math.max(i, Strophe.Status[key]);\n        });\n\n        /* extend name space\n         *  NS.REGISTER - In-Band Registration\n         *              from XEP 77.\n         */\n        Strophe.addNamespace('REGISTER', 'jabber:iq:register');\n        Strophe.Status.REGIFAIL        = i + 1;\n        Strophe.Status.REGISTER        = i + 2;\n        Strophe.Status.REGISTERED      = i + 3;\n        Strophe.Status.CONFLICT        = i + 4;\n        Strophe.Status.NOTACCEPTABLE   = i + 5;\n\n        if (conn.disco) {\n            if(conn.disco.addFeature)\n                conn.disco.addFeature(Strophe.NS.REGISTER);\n            if(conn.disco.addNode)\n                conn.disco.addNode(Strophe.NS.REGISTER, {items:[]});\n        }\n\n        // hooking strophe's connection.reset\n        var self = this, reset = conn.reset.bind(conn);\n        conn.reset = function () {\n            reset();\n            self.instructions = \"\";\n            self.fields = {};\n            self.registered = false;\n        };\n\n        // hooking strophe's _connect_cb\n        var connect_cb = conn._connect_cb.bind(conn);\n        conn._connect_cb = function (req, callback, raw) {\n            if (!self._registering) {\n                if (self.processed_features) {\n                    // exchange Input hooks to not print the stream:features twice\n                    var xmlInput = conn.xmlInput;\n                    conn.xmlInput = Strophe.Connection.prototype.xmlInput;\n                    var rawInput = conn.rawInput;\n                    conn.rawInput = Strophe.Connection.prototype.rawInput;\n                    connect_cb(req, callback, raw);\n                    conn.xmlInput = xmlInput;\n                    conn.rawInput = rawInput;\n                    delete self.processed_features;\n                } else {\n                    connect_cb(req, callback, raw);\n                }\n            } else {\n                if(!self._check_user) {\n                    // Save this request in case we want to authenticate later\n                    self._connect_cb_data = {\n                        req: req,\n                        raw: raw\n                    };\n                    if (self._register_cb(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n                }\n                else {\n                    if (self._register_cb_check_user(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n\n                }\n            }\n        };\n\n        // hooking strophe`s authenticate\n        var auth_old = conn.authenticate.bind(conn);\n        conn.authenticate = function(matched) {\n            if (typeof matched === \"undefined\") {\n                var conn = this._connection;\n\n                if (!this.fields.username || !this.domain || !this.fields.password) {\n                    Strophe.info(\"Register a JID first!\");\n                    return;\n                }\n\n                var jid = this.fields.username + \"@\" + this.domain;\n\n                conn.jid = jid;\n                conn.authzid = Strophe.getBareJidFromJid(conn.jid);\n                conn.authcid = Strophe.getNodeFromJid(conn.jid);\n                conn.pass = this.fields.password;\n\n                var req = this._connect_cb_data.req;\n                var callback = conn.connect_callback;\n                var raw = this._connect_cb_data.raw;\n                conn._connect_cb(req, callback, raw);\n            } else {\n                auth_old(matched);\n            }\n        }.bind(this);\n\n    },\n\n    /** Function: connect\n     *  Starts the registration process.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered multiple times with status updates.  The callback\n     *  should take two arguments - the status code and the error condition.\n     *\n     *  The status code will be one of the values in the Strophe.Status\n     *  constants.  The error condition will be one of the conditions\n     *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n     *\n     *  Please see XEP 77 for a more detailed explanation of the optional\n     *  parameters below.\n     *\n     *  Parameters:\n     *    (String) domain - The xmpp server's Domain.  This will be the server,\n     *      which will be contacted to register a new JID.\n     *      The server has to provide and allow In-Band Registration (XEP-0077).\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     */\n    connect: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n\n    connect_check_user: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n        this._check_user = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n    connect_change_password: function(jid, password, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(jid);\n        this.instructions = \"\";\n        this.fields = {};\n        conn.registerSASLMechanisms([Strophe.SASLAnonymous,\n            Strophe.SASLExternal,\n            Strophe.SASLMD5,\n            Strophe.SASLPlain,\n            Strophe.SASLSHA1]);\n\n        conn.connect(jid, password, callback, wait, hold, route);\n    },\n\n    /** PrivateFunction: _register_cb\n     *  _Private_ handler for initial registration request.\n     *\n     *  This handler is used to process the initial registration request\n     *  response from the BOSH server. It is used to set up a bosh session\n     *  and requesting registration fields from host.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The current request.\n     */\n    _register_cb: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n\n        // send a get request for registration, to get all required data fields\n        conn._addSysHandler(this._get_register_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send($iq({type: \"get\", id: uuid(), to: this.domain }).c(\"query\",\n            {xmlns: Strophe.NS.REGISTER}).tree());\n\n        return true;\n    },\n    _register_cb_check_user: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n\n        return true;\n    },\n\n    /** PrivateFunction: _get_register_cb\n     *  _Private_ handler for Registration Fields Request.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove SHOULD contain the registration information currentlSHOULD contain the registration information currentlSHOULD contain the registration information currentlthe handler.\n     */\n    _get_register_cb: function (stanza) {\n        var i, query, field, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        // get required fields\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                // this is a special element\n                // it provides info about given data fields in a textual way.\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                // ignore x for now\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n        return false;\n    },\n\n    /** Function: submit\n     *  Submits Registration data.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered with status code Strophe.Status.REGISTER. At this point\n     *  the user should fill all required fields in connection.register.fields\n     *  and invoke this function to procceed in the registration process.\n     */\n    submit: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER});\n\n        // set required fields\n        fields = Object.keys(this.fields);\n        for (i = 0; i < fields.length; i++) {\n            name = fields[i];\n            query.c(name).t(this.fields[name]).up();\n        }\n\n        // providing required information\n        conn._addSysHandler(this._submit_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    /** PrivateFunction: _submit_cb\n     *  _Private_ handler for submitted registration information.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _submit_cb: function (stanza) {\n        var i, query, field, error = null, conn = this._connection;\n\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length > 0) {\n            query = query[0];\n            // update fields\n            for (i = 0; i < query.childNodes.length; i++) {\n                field = query.childNodes[i];\n                if (field.tagName.toLowerCase() === 'instructions') {\n                    // this is a special element\n                    // it provides info about given data fields in a textual way\n                    this.instructions = Strophe.getText(field);\n                    continue;\n                }\n                this.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n            }\n        }\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Registration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Registration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    },\n\n    submit_unregister: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER}).c('remove');\n\n        conn._addSysHandler(this._submit_unregister_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    _submit_unregister_cb: function (stanza) {\n        var i, error = null, conn = this._connection;\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Unregistration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Unregistration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    }\n});\n\n\nlet utf16to8 = function (str) {\n    let i, c;\n    let out = \"\";\n    let len = str.length;\n    for (i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n        if ((c >= 0x0000) && (c <= 0x007F)) {\n            out += str.charAt(i);\n        } else if (c > 0x07FF) {\n            out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n            out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        } else {\n            out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        }\n    }\n    return out;\n};\n\nStrophe.SASLHOTP = function() {};\nStrophe.SASLHOTP.prototype = new Strophe.SASLMechanism(\"HOTP\", true, 100);\n\nStrophe.SASLHOTP.prototype.test = function (connection) {\n    return true;\n};\n\nStrophe.SASLHOTP.prototype.onChallenge = function (connection) {\n    let auth_str = String.fromCharCode(0) + connection.authcid +\n        String.fromCharCode(0) + connection.hotp_pass;\n    return utf16to8(auth_str);\n};\n\nStrophe.ConnectionManager = function (CONNECTION_URL, options) {\n    options = options || {};\n    this.connection = new Strophe.Connection(CONNECTION_URL, options);\n};\n\nStrophe.ConnectionManager.prototype = {\n    connect: function (auth_type, jid, password, callback) {\n        this.connection.mechanisms = {};\n        this.auth_type = auth_type || 'password';\n        if (this.auth_type === 'password') {\n            this.connection.registerSASLMechanisms([Strophe.SASLAnonymous,\n                Strophe.SASLExternal,\n                Strophe.SASLMD5,\n                Strophe.SASLPlain,\n                Strophe.SASLSHA1]);\n        } else if (this.auth_type === 'x-token') {\n            this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n            delete this.connection._sasl_data[\"server-signature\"];\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(password), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(jid, password, callback)\n            });\n            return;\n        } else {\n            this.connection.registerSASLMechanisms([Strophe.SASLXOAuth2]);\n            delete this.connection._sasl_data[\"server-signature\"];\n        }\n        this.connection.connect(jid, password, callback);\n    },\n\n    reconnect: function (callback) {\n        if (this.auth_type === 'x-token') {\n            if (!this.connection.mechanisms[\"HOTP\"]) {\n                this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n                delete this.connection._sasl_data[\"server-signature\"];\n            }\n            if (this.connection.account && this.connection.account.get('hotp_counter'))\n                this.connection.counter = this.connection.account.get('hotp_counter');\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(this.connection.pass), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(this.connection.jid, this.connection.pass, callback)\n            });\n            return;\n        }\n        this.connection.connect(this.connection.jid, this.connection.pass, callback);\n    }\n};\n\n_.extend(Strophe.Connection.prototype, {\n\n    _attemptSASLAuth: function (mechanisms) {\n        mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n        var i = 0, mechanism_found = false;\n        for (i = 0; i < mechanisms.length; ++i) {\n            if (!mechanisms[i].prototype.test(this)) {\n                continue;\n            }\n            this._sasl_success_handler = this._addSysHandler(\n                this._sasl_success_cb.bind(this), null,\n                \"success\", null, null);\n            this._sasl_failure_handler = this._addSysHandler(\n                this._sasl_failure_cb.bind(this), null,\n                \"failure\", null, null);\n            this._sasl_challenge_handler = this._addSysHandler(\n                this._sasl_challenge_cb.bind(this), null,\n                \"challenge\", null, null);\n\n            this._sasl_mechanism = new mechanisms[i]();\n            this._sasl_mechanism.onStart(this);\n\n            var request_auth_exchange = $build(\"auth\", {\n                xmlns: Strophe.NS.SASL,\n                mechanism: this._sasl_mechanism.name\n            });\n            if (this._sasl_mechanism.isClientFirst) {\n                var response = this._sasl_mechanism.onChallenge(this, null);\n                request_auth_exchange.t(btoa(response));\n            }\n            this.send(request_auth_exchange.tree());\n            mechanism_found = true;\n            if (this.account && this.counter && this.account.get('x_token') && this._sasl_mechanism.name === \"HOTP\") {\n                this.counter++;\n                this.account.save({\n                    hotp_counter: this.counter,\n                });\n            }\n            break;\n        }\n        return mechanism_found;\n    },\n\n    _sasl_auth1_cb: function (elem) {\n        this.features = elem;\n        let i, child;\n        for (i = 0; i < elem.childNodes.length; i++) {\n            child = elem.childNodes[i];\n            if (child.nodeName === 'bind') {\n                this.do_bind = true;\n            }\n\n            if (child.nodeName === 'session') {\n                this.do_session = true;\n            }\n\n            if ((child.nodeName === 'devices') && child.namespaceURI === Strophe.NS.AUTH_DEVICES && this.options['x-token']) {\n                this.x_token_auth = true;\n            }\n\n            if ((child.nodeName === 'synchronization') && (child.namespaceURI === Strophe.NS.SYNCHRONIZATION)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n                this.do_synchronization = true;\n            }\n\n            if ((child.nodeName === 'sub') && (child.namespaceURI === Strophe.NS.SUBSCRIPTION_PREAPPROVAL)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n            }\n        }\n\n        if (!this.do_bind) {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            return false;\n        } else {\n            if (this.x_token_auth && (!this.x_token || (parseInt(this.x_token.expire)*1000 < env.moment.now()))) {\n                this.getXToken((success) => {\n                    let token = $(success).find('secret').text(),\n                        expires_at = $(success).find('expire').text(),\n                        token_uid = $(success).find('device').attr('id');\n                    this.x_token = {token: token, expire: expires_at, token_uid: token_uid,};\n                    this.counter = 1;\n                    this.pass = token;\n                    this._send_auth_bind();\n                    if (this.account) {\n                        this.account.save({\n                            hotp_counter: this.counter,\n                            password: null,\n                        });\n                    }\n                }, () => {\n                    this._send_auth_bind();\n                });\n            }\n            else {\n                this._send_auth_bind();\n            }\n        }\n        return false;\n    },\n\n    _send_auth_bind() {\n        this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\n            null, \"_bind_auth_2\");\n\n        let resource = Strophe.getResourceFromJid(this.jid);\n        if (resource) {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .c('resource', {}).t(resource).tree());\n        } else {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .tree());\n        }\n    },\n\n    getXToken: function (callback, errback) {\n        let uniq_id = uuid(), old_token,\n            iq = $iq({\n            type: 'set',\n            to: this.domain,\n            id: uniq_id\n        }).c('register', { xmlns: Strophe.NS.AUTH_DEVICES});\n        this.account && (old_token = this.account.get('old_device_token'));\n        if (old_token && old_token.token && old_token.token_uid){\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES, id: old_token.token_uid})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('secret').t(old_token.token).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n            this.account.save('old_device_token', null);\n        } else {\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n        }\n        let handler = function (stanza) {\n            let iqtype = stanza.getAttribute('type');\n            if (iqtype == 'result') {\n                if (callback) {\n                    callback(stanza);\n                }\n            } else if (iqtype == 'error') {\n                if (errback) {\n                    errback(stanza);\n                }\n            } else {\n                throw {\n                    name: \"StropheError\",\n                    message: \"Got bad IQ type of \" + iqtype\n                };\n            }\n        };\n\n        this._addSysHandler(handler.bind(this), Strophe.NS.AUTH_DEVICES, 'iq', 'result' , uniq_id);\n\n        this.send(iq.tree());\n    }\n});\n\n_.extend(Strophe.Websocket.prototype, {\n\n    _onIdle: function () {\n        var data = this._conn._data;\n        if (data.length > 0 && !this._conn.paused) {\n            for (var i = 0; i < data.length; i++) {\n                if (data[i] !== null) {\n                    var stanza, rawStanza;\n                    if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                    } else {\n                        stanza = data[i];\n                    }\n                    rawStanza = Strophe.serialize(stanza);\n                    this._conn.xmlOutput(stanza);\n                    this._conn.rawOutput(rawStanza);\n                    if (this.socket && this.socket.readyState === 1){\n                        this.socket.send(rawStanza);\n                    } else {\n                        console.log('data went to pending');\n                        console.log(this._conn._data.slice(i));\n                        this._conn.account._pending_stanzas.push(this._conn._data.slice(i))\n                        this._conn._data = [];\n                        return;\n                    }\n                }\n            }\n            this._conn._data = [];\n        }\n    },\n});\n\nStrophe.xmlunescape = function (text) {\n    let reg_exp = {\n        '&amp;': '&',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&quot;': '\"',\n        '&apos;': \"'\"\n    };\n    let escaper = function(match) {\n        return reg_exp[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    let source = '(?:' + _.keys(reg_exp).join('|') + ')',\n        testRegexp = RegExp(source),\n        replaceRegexp = RegExp(source, 'g');\n    text = text == null ? '' : '' + text;\n    return testRegexp.test(text) ? text.replace(replaceRegexp, escaper) : text;\n};\n\nStrophe.addNamespace('ATTENTION', 'urn:xmpp:attention:0');\nStrophe.addNamespace('CARBONS', 'urn:xmpp:carbons:2');\nStrophe.addNamespace('FORWARD', 'urn:xmpp:forward:0');\nStrophe.addNamespace('HASH', 'urn:xmpp:hashes:2');\nStrophe.addNamespace('HINTS', 'urn:xmpp:hints');\nStrophe.addNamespace('SCE', 'urn:xmpp:sce:1');\nStrophe.addNamespace('RECEIPTS', 'urn:xmpp:receipts');\nStrophe.addNamespace('JINGLE', 'urn:xmpp:jingle:1');\nStrophe.addNamespace('JINGLE_SECURITY_STUB', 'urn:xmpp:jingle:security:stub:0');\nStrophe.addNamespace('JINGLE_MSG', 'urn:xmpp:jingle-message:0');\nStrophe.addNamespace('JINGLE_RTP', 'urn:xmpp:jingle:apps:rtp:1');\nStrophe.addNamespace('JINGLE_TRANSPORTS_ICE', 'urn:xmpp:jingle:transports:ice-udp:1');\nStrophe.addNamespace('ADDRESS', 'http://jabber.org/protocol/address');\nStrophe.addNamespace('CHATSTATES', 'http://jabber.org/protocol/chatstates');\nStrophe.addNamespace('EXTENDED_CHATSTATES', 'https://xabber.com/protocol/extended-chatstates');\nStrophe.addNamespace('HTTP_AUTH', 'http://jabber.org/protocol/http-auth');\nStrophe.addNamespace('AUTH_TOKENS', 'https://xabber.com/protocol/auth-tokens');\nStrophe.addNamespace('AUTH_DEVICES', 'https://xabber.com/protocol/devices');\nStrophe.addNamespace('SYNCHRONIZATION', 'https://xabber.com/protocol/synchronization');\nStrophe.addNamespace('SYNCHRONIZATION_REGULAR_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('SYNCHRONIZATION_CHANNEL', 'https://xabber.com/protocol/channels');\nStrophe.addNamespace('SYNCHRONIZATION_OLD_OMEMO', 'urn:xmpp:omemo:1');\nStrophe.addNamespace('SYNCHRONIZATION_OMEMO', 'urn:xmpp:omemo:2');\nStrophe.addNamespace('XABBER_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('EXPLICIT_MESSAGE_ENCRYPTION', 'urn:xmpp:eme:0');\nStrophe.addNamespace('DELIVERY', 'https://xabber.com/protocol/delivery');\nStrophe.addNamespace('ARCHIVE', 'https://xabber.com/protocol/archive');\nStrophe.addNamespace('MAM', 'urn:xmpp:mam:2');\nStrophe.addNamespace('RSM', 'http://jabber.org/protocol/rsm');\nStrophe.addNamespace('DATAFORM', 'jabber:x:data');\nStrophe.addNamespace('CHAT_MARKERS', 'urn:xmpp:chat-markers:0');\nStrophe.addNamespace('VCARD_UPDATE', 'vcard-temp:x:update');\nStrophe.addNamespace('HTTP_UPLOAD', 'urn:xmpp:http:upload');\nStrophe.addNamespace('BLOCKING', 'urn:xmpp:blocking');\nStrophe.addNamespace('SEARCH', 'jabber:iq:search');\nStrophe.addNamespace('PRIVATE_STORAGE', 'jabber:iq:private');\nStrophe.addNamespace('MEDIA', 'urn:xmpp:media-element');\nStrophe.addNamespace('LAST', 'jabber:iq:last');\nStrophe.addNamespace('GROUP_CHAT', 'https://xabber.com/protocol/groups');\nStrophe.addNamespace('GROUP_CHAT_INVITE', 'https://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('GROUP_CHAT_INVITE_HTTP', 'http://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('WEBCHAT', 'https://xabber.com/protocol/webchat');\nStrophe.addNamespace('INDEX', 'https://xabber.com/protocol/index');\nStrophe.addNamespace('PUBSUB', 'http://jabber.org/protocol/pubsub');\nStrophe.addNamespace('PUBSUB_AVATAR_DATA', 'urn:xmpp:avatar:data');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA', 'urn:xmpp:avatar:metadata');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA_THUMBNAIL', 'urn:xmpp:thumbs:1');\nStrophe.addNamespace('REWRITE', 'https://xabber.com/protocol/rewrite');\nStrophe.addNamespace('REFERENCE', 'https://xabber.com/protocol/references');\nStrophe.addNamespace('GEOLOC', 'http://jabber.org/protocol/geoloc');\nStrophe.addNamespace('MARKUP', 'https://xabber.com/protocol/markup');\nStrophe.addNamespace('VOICE_MESSAGE', 'https://xabber.com/protocol/voice-messages');\nStrophe.addNamespace('FILES', 'https://xabber.com/protocol/files');\nStrophe.addNamespace('SUBSCRIPTION_PREAPPROVAL', 'urn:xmpp:features:pre-approval');\nStrophe.addNamespace('OGP', 'https://xabber.com/protocol/ogp');\nStrophe.addNamespace('URLDISCO', 'urn:xabber:http:url');\nStrophe.addNamespace('MEDIAGALLERY', 'urn:xabber:http:url:mediagallery');\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.vcard,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq,\n    $build = env.$build,\n    utils = env.utils;\n\nlet xmlToObject = function ($vcard) {\n    let vcard = {\n        nickname: $vcard.find('NICKNAME').text().trim(),\n        fullname: $vcard.find('FN').text().trim(),\n        first_name: $vcard.find('N GIVEN').text().trim(),\n        middle_name: $vcard.find('N MIDDLE').text().trim(),\n        last_name: $vcard.find('N FAMILY').text().trim(),\n        birthday: $vcard.find('BDAY').text().trim(),\n        job_title: $vcard.find('TITLE').text().trim(),\n        role: $vcard.find('ROLE').text().trim(),\n        url: $vcard.find('URL').text().trim(),\n        description: $vcard.find('DESC').text().trim(),\n        jabber_id: $vcard.find('JABBERID').text().trim(),\n        org: {},\n        photo: {},\n        phone: {},\n        address: {},\n        email: {}\n    };\n\n    if ($vcard.find('X-PRIVACY').length || $vcard.find('X-MEMBERSHIP').length || $vcard.find('X-INDEX').length) {\n        vcard.group_info = {\n            jid: vcard.jabber_id,\n            description: vcard.description,\n            name: vcard.nickname,\n            anonymous: $vcard.find('X-PRIVACY').text().trim(),\n            searchable: $vcard.find('X-INDEX').text().trim(),\n            model: $vcard.find('X-MEMBERSHIP').text().trim(),\n            status_msg: $vcard.find('X-STATUS').text().trim(),\n            members_num: $vcard.find('X-MEMBERS').text().trim()\n        };\n    }\n\n    let $org = $vcard.find('ORG');\n    if ($org.length) {\n        vcard.org.name = $org.find('ORGNAME').text().trim();\n        vcard.org.unit = $org.find('ORGUNIT').text().trim();\n    }\n\n    let $photo = $vcard.find('PHOTO');\n    if ($photo.length) {\n        vcard.photo.image = $photo.find('BINVAL').text().trim();\n        vcard.photo.type = $photo.find('TYPE').text().trim();\n    }\n\n    $vcard.find('TEL').each(function () {\n        let $this = $(this),\n            number = $this.find('NUMBER').text().trim();\n        if (!number) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.phone.work = number;\n        } else if ($this.find('HOME').length) {\n            vcard.phone.home = number;\n        } else if ($this.find('MOBILE').length) {\n            vcard.phone.mobile = number;\n        } else {\n            vcard.phone.default = number;\n        }\n    });\n\n    $vcard.find('EMAIL').each(function () {\n        let $this = $(this);\n        let email = $this.find('USERID').text().trim();\n        if (!email) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.email.work = email;\n        } else if ($this.find('HOME').length) {\n            vcard.email.home = email;\n        } else {\n            vcard.email.default = email;\n        }\n    });\n\n    $vcard.find('ADR').each(function () {\n        let $this = $(this);\n        let address = {\n            pobox: $this.find('POBOX').text().trim(),\n            extadd: $this.find('EXTADR').text().trim(),\n            street: $this.find('STREET').text().trim(),\n            locality: $this.find('LOCALITY').text().trim(),\n            region: $this.find('REGION').text().trim(),\n            pcode: $this.find('PCODE').text().trim(),\n            country: $this.find('CTRY').text().trim()\n        };\n        if ($this.find('WORK').length) {\n            vcard.address.work = address;\n        } else if ($this.find('HOME').length) {\n            vcard.address.home = address;\n        } else {\n            vcard.address.default = address;\n        }\n    });\n\n    return vcard;\n};\n\nlet objectToXml = function (vcard) {\n    let $vcard = $build(\"vCard\", {xmlns: Strophe.NS.VCARD});\n    vcard.nickname && $vcard.c(\"NICKNAME\").t(vcard.nickname).up();\n    vcard.fullname && $vcard.c(\"FN\").t(vcard.fullname).up();\n    if (vcard.first_name || vcard.last_name || vcard.middle_name) {\n        $vcard.c(\"N\");\n        vcard.first_name && $vcard.c(\"GIVEN\").t(vcard.first_name).up();\n        vcard.last_name && $vcard.c(\"FAMILY\").t(vcard.last_name).up();\n        vcard.middle_name && $vcard.c(\"MIDDLE\").t(vcard.middle_name).up();\n        $vcard.up();\n    }\n    vcard.birthday && $vcard.c(\"BDAY\").t(vcard.birthday).up();\n    vcard.job_title && $vcard.c(\"TITLE\").t(vcard.job_title).up();\n    vcard.role && $vcard.c(\"ROLE\").t(vcard.role).up();\n    if (vcard.org.name || vcard.org.unit) {\n        $vcard.c(\"ORG\");\n        vcard.org.name && $vcard.c(\"ORGNAME\").t(vcard.org.name).up();\n        vcard.org.unit && $vcard.c(\"ORGUNIT\").t(vcard.org.unit).up();\n        $vcard.up();\n    }\n    vcard.url && $vcard.c(\"URL\").t(vcard.url).up();\n    if (vcard.photo.image) {\n        $vcard.c(\"PHOTO\").c(\"BINVAL\").t(vcard.photo.image).up();\n        $vcard.c(\"TYPE\").t(vcard.photo.type || 'image/jpeg').up();\n        $vcard.up();\n    }\n    vcard.description && $vcard.c(\"DESC\").t(vcard.description).up();\n    vcard.jabber_id && $vcard.c(\"JABBERID\").t(vcard.jabber_id).up();\n\n    _.each(vcard.phone, function (phone, type) {\n        $vcard.c(\"TEL\").c(\"NUMBER\").t(phone).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.email, function (email, type) {\n        $vcard.c(\"EMAIL\").c(\"USERID\").t(email).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.address, function (address, type) {\n        $vcard.c(\"ADR\");\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        address.pobox && $vcard.c(\"POBOX\").t(address.pobox).up();\n        address.extadd && $vcard.c(\"EXTADR\").t(address.extadd).up();\n        address.street && $vcard.c(\"STREET\").t(address.street).up();\n        address.locality && $vcard.c(\"LOCALITY\").t(address.locality).up();\n        address.region && $vcard.c(\"REGION\").t(address.region).up();\n        address.pcode && $vcard.c(\"PCODE\").t(address.pcode).up();\n        address.country && $vcard.c(\"CTRY\").t(address.country).up();\n        $vcard.up();\n    });\n\n    return $vcard.tree();\n};\n\nStrophe.addConnectionPlugin('vcard', {\n    _connection: null,\n\n    init: function(conn) {\n        this._connection = conn;\n        return Strophe.addNamespace('VCARD', 'vcard-temp');\n    },\n\n    get: function(jid, callback, errback) {\n        let iq = $iq({type: 'get', to: jid}).c('vCard', {xmlns: Strophe.NS.VCARD});\n        this._connection.sendIQ(iq, function (res) {\n            if (!callback) { return; }\n            let vcard = xmlToObject($(res).find('vCard[xmlns='+Strophe.NS.VCARD+']'));\n            vcard.jabber_id || (vcard.jabber_id = jid);\n            return callback(vcard);\n        }, errback);\n    },\n\n    set: function(jid, vcard, callback, errback) {\n        vcard.jabber_id || (vcard.jabber_id = jid);\n        let iq = $iq({type: 'set', to: jid}).cnode(objectToXml(vcard));\n        this._connection.sendIQ(iq, callback, errback);\n    }\n});\n\nutils.vcard = {\n    getBlank: function (jid) {\n        let vcard = xmlToObject($('<div/>'));\n        vcard.jabber_id = jid;\n        return vcard;\n    }\n};\n\nxabber.VCardView = xabber.BasicView.extend({\n    template: templates.vcard,\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.data.on(\"change:refresh\", this.updateRefreshButton, this);\n    },\n\n    render: function () {\n        this.$('.block-header .block-name').text(this.model.get('group_chat') ? 'Group chat details' : xabber.getString(\"vcard_screen__header\"));\n        this.data.set('refresh', false);\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                         addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    updateRefreshButton: function () {\n        this.$('.btn-vcard-refresh .button').hideIf(this.data.get('refresh'));\n        this.$('.btn-vcard-refresh .preloader-wrapper').showIf(this.data.get('refresh'));\n    },\n\n    refresh: function () {\n        if (!this.data.get('refresh')) {\n            this.data.set('refresh', true);\n            this.model.getVCard(() => {\n                this.data.set('refresh', false);\n            });\n        }\n    }\n});\n\nxabber.VCardRightView = xabber.VCardView.extend({\n    template: templates.vcard_right,\n\n    __initialize: function (ev) {\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        this.data.set('refresh', false);\n        this.update();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.vcard-wrap .personal-info-wrap');\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.first_name || vcard.last_name);\n\n        $info = this.$('.full-vcard-wrap .personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n});\n\nxabber.VCardEditModalView = xabber.BasicView.extend({\n    className: 'account-vcard-edit-modal-wrap account-vcard-edit-wrap',\n    template: templates.vcard_edit_modal,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"keyup input\": \"keyUp\",\n        \"keyup textarea\": \"keyUp\",\n        \"input .first-name input\": \"changePlaceholder\",\n        \"input .middle-name input\": \"changePlaceholder\",\n        \"input .last-name input\": \"changePlaceholder\",\n        \"click .btn-vcard-save\": \"save\",\n    },\n\n    _initialize: function () {\n        let self = this,\n            $input = this.$('.datepicker').pickadate({\n            selectMonths: true,\n            selectYears: 100,\n            autoOk: false,\n            // min = 100 years ago\n            min: new Date(moment.now() - 3153600000000),\n            max: new Date(moment.now() - 86400000),\n            format: 'dd.mm.yyyy',\n            allowKeyboardControl: false,\n            today: '',\n            onClose: function(){\n                $(document.activeElement).blur();\n                self.$('.btn-vcard-back').removeClass('hidden');\n                self.$('.btn-vcard-save').removeClass('hidden');\n            },\n            klass: {\n                weekday_display: 'picker__weekday-display ground-color-700',\n                date_display: 'picker__date-display ground-color-500',\n                navPrev: 'picker__nav--prev hover-ground-color-100',\n                navNext: 'picker__nav--next hover-ground-color-100',\n                selected: 'picker__day--selected ground-color-500',\n                now: 'picker__day--today text-color-700',\n                buttonClear: 'btn-flat btn-main btn-dark',\n                buttonClose: 'btn-flat btn-main text-color-700'\n            }\n        });\n        $input.on('mousedown', function cancelEvent(evt) {\n            evt.preventDefault();\n        });\n        this.data.on(\"change:saving\", this.updateSaveButton, this);\n    },\n\n    render: function (options) {\n        options.$el.html('');\n        options.$el.append(this.$el);\n        this.data.set('saving', false);\n        this.setData();\n        Materialize.updateTextFields();\n        this.changePlaceholder();\n        this.updateScrollBar();\n        this.$('.btn-vcard-save').addClass('hidden');\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    changePlaceholder: function () {\n        let nickname_placeholder = ((this.$('.first-name input').val() + \" \" + this.$('.middle-name input').val()).trim() + \" \" + this.$('.last-name input').val()).trim() || this.model.get('jid');\n        this.$('.nickname input').attr('placeholder', nickname_placeholder);\n    },\n\n    setData: function () {\n        let vcard = this.model.get('vcard');\n\n        this.$('.nickname input').val(vcard.nickname);\n        this.$('.fullname input').val(vcard.fullname);\n        this.$('.first-name input').val(vcard.first_name);\n        this.$('.last-name input').val(vcard.last_name);\n        this.$('.middle-name input').val(vcard.middle_name);\n\n        this.$('.birthday input').val(vcard.birthday);\n\n        this.$('.role input').val(vcard.role);\n        this.$('.job-title input').val(vcard.job_title);\n        this.$('.org-name input').val(vcard.org.name);\n        this.$('.org-unit input').val(vcard.org.unit);\n\n        this.$('.url input').val(vcard.url);\n\n        this.$('.description textarea').val(vcard.description);\n\n        this.$('.phone-work input').val(vcard.phone.work);\n        this.$('.phone-home input').val(vcard.phone.home);\n        this.$('.phone-mobile input').val(vcard.phone.mobile);\n\n        this.$('.email-work input').val(vcard.email.work);\n        this.$('.email-home input').val(vcard.email.home);\n\n        let addr = vcard.address.work || {},\n            $info = this.$('.address-work-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n\n        addr = vcard.address.home || {};\n        $info = this.$('.address-home-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n    },\n\n    getData: function () {\n        let vcard = utils.vcard.getBlank(this.model.get('jid'));\n\n        vcard.nickname = this.$('.nickname input').val();\n        vcard.fullname = this.$('.fullname input').val();\n        vcard.first_name = this.$('.first-name input').val();\n        vcard.last_name = this.$('.last-name input').val();\n        vcard.middle_name = this.$('.middle-name input').val();\n\n        vcard.birthday = this.$('.birthday input').val();\n\n        vcard.role = this.$('.role input').val();\n        vcard.job_title = this.$('.job-title input').val();\n        vcard.org.name = this.$('.org-name input').val();\n        vcard.org.unit = this.$('.org-unit input').val();\n\n        vcard.url = this.$('.url input').val();\n\n        vcard.description = this.$('.description textarea').val();\n\n        vcard.phone.work = this.$('.phone-work input').val();\n        vcard.phone.home = this.$('.phone-home input').val();\n        vcard.phone.mobile = this.$('.phone-mobile input').val();\n\n        vcard.email.work = this.$('.email-work input').val();\n        vcard.email.home = this.$('.email-home input').val();\n\n        vcard.address.work = {};\n        let addr = vcard.address.work,\n            $info = this.$('.address-work-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n\n        vcard.address.home = {};\n        addr = vcard.address.home;\n        $info = this.$('.address-home-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n        return vcard;\n    },\n\n    updateSaveButton: function () {\n        this.$('.btn-vcard-save').text(this.data.get('saving') ? xabber.getString(\"saving\") : xabber.getString(\"vcard_edit__button_save\"));\n    },\n\n    save: function () {\n        if (this.data.get('saving')) {\n            return;\n        }\n        this.data.set('saving', true);\n        this.model.setVCard(this.getData(),\n            () => {\n                this.model.getVCard();\n                this.data.set('saving', false);\n                this.$('.btn-vcard-back').addClass('hidden');\n                this.$('.btn-vcard-save').addClass('hidden');\n            },\n            function () {\n                utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                this.data.set('saving', false);\n            }\n        );\n    },\n\n    keyUp: function () {\n        this.$('.btn-vcard-back').removeClass('hidden');\n        this.$('.btn-vcard-save').removeClass('hidden');\n    },\n});\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.accounts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    uuid = env.uuid,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')},\n    pretty_datetime_date = (timestamp) => { return utils.pretty_datetime(timestamp, 'MMM DD, YYYY')};\n\n\nxabber.Account = Backbone.Model.extend({\n        idAttribute: 'jid',\n\n        defaults: () => {\n            return {\n                enabled: true,\n                auth_type: \"password\",\n                status: \"online\",\n                status_message: \"\",\n                priority: 67,\n                auto_login_xa: false,\n                account_unique_id: uuid().substring(0, 8),\n                groupchat_servers_list: []\n            }\n        },\n\n        initialize: function (_attrs, options) {\n            this.retraction_version = null;\n            options || (options = {});\n            if (_attrs.is_new && !options.auth_view) {\n                this.is_invalid = true;\n                this.on(\"destroy\", this.onDestroy, this);\n                return;\n            }\n            this.last_msg_timestamp = 0;\n            this.settings = xabber.account_settings_list.get(_attrs.jid);\n            if (!this.settings) {\n                this.settings = xabber.account_settings_list.create({\n                    jid: _attrs.jid,\n                    timestamp: utils.now(),\n                });\n            }\n            let settings = _.clone(this.settings.attributes);\n            settings.color || (settings.color = this.collection.getDefaultColor());\n            settings.order || (settings.order = this.collection.getLastOrder() + 1);\n            this.settings.save(settings);\n            this.settings.on(\"delete_account\", this.deleteAccount, this);\n            let attrs = _.clone(_attrs);\n            attrs.name || (attrs.name = attrs.jid);\n            attrs.image || (attrs.image = Images.getDefaultAvatar(attrs.name));\n            this.cached_image = Images.getCachedImage(attrs.image);\n            attrs.vcard = utils.vcard.getBlank(attrs.jid);\n            attrs.photo_hash = '';\n            this.save(attrs);\n            this.auth_view = options.auth_view || null;\n            this.session = new Backbone.Model({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"connection__error__text_disconnected\")\n            });\n            this._waiting_code = false;\n            this.code_requests = [];\n            this.gallery_code_requests = [];\n            this.xabber_auth = {};\n            this.session.on(\"change:connected\", this.onChangedConnected, this);\n            this.CONNECTION_URL = _attrs.websocket_connection_url || constants.CONNECTION_URL;\n            this.conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL, {'x-token': true});\n            this.connection = this.conn_manager.connection;\n            this.get('x_token') && (this.connection.x_token = this.get('x_token'));\n            if (this.connection.x_token && this.connection.x_token.counter && !this.get('hotp_counter'))\n                this.save({\n                    hotp_counter: this.connection.x_token.counter,\n                });\n            this.get('hotp_counter') && (this.connection.counter = this.get('hotp_counter'));\n            this.on(\"destroy\", this.onDestroy, this);\n            this._added_pres_handlers = [];\n            this._pending_stanzas = [];\n            this._pending_messages = [];\n            this.dfd_presence = new $.Deferred();\n            this.resources = new xabber.AccountResources(null, {account: this});\n            this.password_view = new xabber.ChangePasswordView({model: this});\n            this.updateColorScheme();\n            this.settings.on(\"change:color\", this.updateColorScheme, this);\n            this.on(\"change:photo_hash\", this.getVCard, this);\n            _.each(this._init_plugins, (plugin) => {\n                plugin.call(this);\n            });\n            this.connection.xmlInput = function (xml) {\n                xabber.info('input main connection');\n                xabber.info(xml);\n            };\n            this.connection.xmlOutput = function (xml) {\n                xabber.info('output main connection');\n                xabber.info(xml);\n            };\n            this.once(\"start\", this.start, this);\n            xabber.on(\"start_accounts\", () => {\n                this.trigger('start');\n            }, this);\n        },\n\n        start: function () {\n            this.get('enabled') && this.isOnline() && this.connect();\n        },\n\n        _init_plugins: [],\n\n        getPassword: function () {\n            try {\n                return utils.atou(this.get('password'));\n            } catch (e) {\n                return '';\n            }\n        },\n\n        isConnected: function () {\n            return this.session && this.session.get('connected');\n        },\n\n        isReconnecting: function () {\n            return this.session && this.session.get('reconnecting');\n        },\n\n        isOnline: function () {\n            return this.get('status') !== 'offline';\n        },\n\n        sendMsg: function (stanza, callback) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.session.get('ready_to_send') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            callback && callback();\n            return res;\n        },\n\n        sendMsgPending: function (stanza) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            return res;\n        },\n\n        sendMsgFast: function (stanza, callback) {\n            return this.sendMsg(stanza, callback);\n        },\n\n        getConnectionForIQ: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                return this.fast_connection;\n            } else\n                return this.connection;\n        },\n\n        sendIQFast: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                this.fast_connection.sendIQ.apply(this.fast_connection, arguments);\n                return res;\n            } else\n                return this.sendIQ.apply(this, arguments);\n        },\n\n        sendFast: function (stanza, callback, errback) {\n            if ($(stanza.nodeTree).first().is('message')) {\n                this.sendMsgFast(stanza, callback);\n            } else {\n                this.sendIQFast(stanza, callback, errback);\n            }\n        },\n\n        pubAvatar: function (image, callback, errback) {\n            if (!image) {\n                this.removeAvatar(callback, errback);\n                return;\n            }\n            let dfd = new $.Deferred();\n\n            dfd.done((data, http_avatar) => {\n                if (http_avatar) {\n                    let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                    data.thumbnails && data.thumbnails.forEach((thumbnail) => {\n                        iq_pub_metadata.c('thumbnail', {\n                            xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                            url: thumbnail.url,\n                            width: thumbnail.width,\n                            height: thumbnail.height,\n                        }).up()\n                    })\n                    this.sendIQFast(iq_pub_metadata, () => {\n                            callback && callback(avatar_hash);\n                        },\n                        function (data_error) {\n                            errback && errback(data_error);\n                        });\n                }\n                else {\n                    let avatar_hash = image.hash || sha1(image.base64),\n                        iq_pub_data = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                            .c('item', {id: avatar_hash})\n                            .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                    this.sendIQFast(iq_pub_data, () => {\n                            this.sendIQFast(iq_pub_metadata, () => {\n                                    callback && callback(avatar_hash);\n                                },\n                                function (data_error) {\n                                    errback && errback(data_error);\n                                });\n                        },\n                        (data_error) => {\n                            errback && errback(data_error);\n                        });\n                }\n            });\n            if (image.uploaded){\n                dfd.resolve(image, true)\n            }\n            else if (this.get('gallery_token') && this.get('gallery_url') && !image.generated && !image.uploaded){\n                let file = image.name ? image : image.file;\n                this.uploadAvatar(file, (res) => {\n                    if (res.thumbnails && res.thumbnails.length || res.file){\n                        res.type = file.type;\n                        dfd.resolve(res, true)\n                    } else\n                        dfd.resolve(image.base64)\n                }, (res) => {\n                    dfd.resolve(image.base64)\n                });\n            } else\n                dfd.resolve(image.base64)\n        },\n\n        removeAvatar: function (callback, errback) {\n            let iq_pub_metadata = $iq({type: 'set'})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('item')\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA});\n            this.sendIQFast(iq_pub_metadata, () => {\n                    callback && callback();\n                },\n                function () {\n                    errback && errback();\n                });\n        },\n\n        getAvatar: function (avatar, callback, errback) {\n            let iq_request_avatar = $iq({type: 'get', to: this.get('jid')})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('items', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                .c('item', {id: avatar});\n            this.sendIQFast(iq_request_avatar, (iq) => {\n                let pubsub_avatar = $(iq).find('data').text();\n                if (pubsub_avatar == \"\")\n                    errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n                else\n                    callback && callback(pubsub_avatar);\n            });\n        },\n\n        sendIQ: function () {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                let elem = arguments[0];\n                if (typeof(elem.tree) === \"function\" && elem.tree().getAttribute('type') == 'get') {\n                    let lang = xabber.settings.language;\n                    (lang == 'default') && (lang = xabber.get('default_language'));\n                    elem.tree().setAttribute('xml:lang', lang);\n                }\n                this.connection.sendIQ.apply(this.connection, arguments);\n            } else {\n                if (!(arguments[0] && $(arguments[0].nodeTree).find('query[xmlns=\"' + Strophe.NS.MAM + '\"]').length)) {\n                    this._pending_stanzas.push({stanza: arguments, is_iq: true});\n                }\n            }\n            return res;\n        },\n\n        parseDataForm: function ($dataform, options) {\n            options = options || {};\n            let type = $dataform.attr('type'),\n                title = $dataform.children('title').text(),\n                instructions = $dataform.children('instructions').text(),\n                fields = [],\n                data_form = {};\n            $dataform.children('field').each((idx, field) => {\n                let $field = $(field),\n                    attrs = {},\n                    field_var = $field.attr('var'),\n                    field_type = $field.attr('type'),\n                    field_label = $field.attr('label'),\n                    field_value = [], field_options = [];\n                $field.children('value').each((i, value) => {\n                    field_value.push($(value).text());\n                });\n                $field.children('option').each((i, option) => {\n                    let $option = $(option),\n                        val = $option.children('value').text(),\n                        lbl = $option.attr('label');\n                    field_options.push({value: val, label: lbl});\n                });\n                field_var && (attrs.var = field_var);\n                field_type && (attrs.type = field_type);\n                field_label && (attrs.label = field_label);\n                field_value.length && (attrs.values = field_value);\n                field_options.length && (attrs.options = field_options);\n                fields.push(attrs);\n            });\n            type && (data_form.type = type);\n            title && (data_form.title = title);\n            instructions && (data_form.instructions = instructions);\n            fields.length && (data_form.fields = fields);\n            return data_form;\n        },\n\n        addDataFormToStanza: function ($stanza, data_form) {\n            $stanza.c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'});\n            data_form.title && $stanza.c('title').t(data_form.title).up();\n            data_form.instructions && $stanza.c('instructions').t(data_form.instructions).up();\n            data_form.fields.forEach((field) => {\n                let field_attrs = _.clone(field);\n                delete field_attrs.values;\n                delete field_attrs.options;\n                $stanza.c('field', field_attrs);\n                field.values && field.values.forEach((value) => {\n                    $stanza.c('value').t(value).up();\n                });\n                $stanza.up();\n            });\n            return $stanza;\n        },\n\n        sendPres: function (stanza) {\n            if (this.connection.authenticated && this.session.get('connected')) {\n                this.connection.send(stanza);\n            } else {\n                this._pending_stanzas.push({stanza: stanza});\n            }\n            return this.connection.authenticated;\n        },\n\n        createFastConnection: function () {\n            let jid = this.get('jid'),\n                auth_type = this.conn_manager.auth_type,\n                password;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            if (!this.fast_conn_manager) {\n                this.fast_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                this.fast_connection = this.fast_conn_manager.connection;\n                this.fast_connection.account = this;\n                this.fast_connection.xmlInput = function (xml) {\n                    xabber.info('input fast connection');\n                    xabber.info(xml);\n                };\n                this.fast_connection.xmlOutput = function (xml) {\n                    xabber.info('output fast connection');\n                    xabber.info(xml);\n                };\n            } else{\n                this.fast_connection.disconnect();\n                return this.createFastConnection();\n            }\n            if (auth_type === 'x-token' && this.fast_connection) {\n                this.fast_connection.x_token = this.get('x_token');\n                this.fast_connection.counter = this.get('hotp_counter');\n                this.fast_connection.x_token_auth = true;\n            }\n            this.fast_conn_manager.connect(auth_type, jid, password, this.onFastConnected.bind(this));\n        },\n\n        connect: function (options) {\n            options = options || {};\n            let jid = this.get('jid'),\n                auth_type = this.get('auth_type'),\n                password;\n            jid += '/xabber-web-' + xabber.get('client_id');\n            this.connection.x_token = this.get('x_token');\n            this.connection.counter = this.get('hotp_counter');\n            this.connection.account = this;\n            if (this.connection.x_token && !this.connection.counter)\n                this.connection.counter = 0;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                reconnecting: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"application_state_connecting\"),\n                auth_failed: false\n            });\n            this.restoreStatus();\n            this.conn_manager.connect(auth_type, jid, password, this.connectionCallback.bind(this));\n        },\n\n        reconnect: function (is_fast) {\n            let conn_retries = this.session.get('conn_retries'),\n                timeout = conn_retries < 3 ? constants.RECONNECTION_TIMEOUTS[conn_retries] : 20000;\n            is_fast && (timeout = 1500);\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                reconnecting: true,\n                conn_retries: ++conn_retries,\n                conn_feedback:  xabber.getString(\"application_state_reconnect_after_some_seconds\", [timeout/1000]),\n                auth_failed: false\n            });\n            if (this.get('x_token'))\n                this.connection.x_token = this.get('x_token');\n            this.connection.account = this;\n            setTimeout(() => {\n                this.connFeedback(xabber.getString(\"application_state_connecting\"));\n                this.restoreStatus();\n                this.connection.reset();\n                this.conn_manager.reconnect(this.reconnectionCallback.bind(this));\n            }, timeout);\n        },\n\n        connectionCallback: function (status, condition, elem) {\n            if (this.session.get('reconnecting')) {\n                xabber.info('ignore connection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.auth_view && this.loginCallback(status, condition);\n            this.session.set({conn_status: status, conn_condition: condition});\n            if ((status === Strophe.Status.ERROR) && (condition === 'conflict') && !this.session.get('delete')) {\n                this.onConnectionConflict();\n            } else if (status === Strophe.Status.ERROR && (condition === 'policy-violation')) {\n                this.onAuthFailed(condition);\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                    this.conn_manager.auth_type = 'x-token';\n                }\n\n                if (this.get('registration_nickname')){\n                    let vcard = utils.vcard.getBlank(this.get('jid'));\n                    vcard.nickname = this.get('registration_nickname');\n                    this.setVCard(vcard,\n                        () => {\n                            this.getVCard();\n                            this.set('registration_nickname', null)\n                        },\n                        function () {\n                            utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                            this.set('registration_nickname', null)\n                        }\n                    );\n                }\n                this.createFastConnection();\n                this.session.set({connected: true, reconnected: false});\n            } else if (status === Strophe.Status.AUTHFAIL || ((status === Strophe.Status.ERROR) && (condition === 'not-authorized'))) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)){\n                    if (this.session.get('conn_retries') <= 3 && $(elem).find('credentials-expired').length === 0)\n                        this.reconnect(true);\n                    else\n                        this.onTokenRevoked();\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                });\n            }\n        },\n\n        reconnectionCallback: function (status, condition, elem) {\n            if (!this.session.get('reconnecting')) {\n                xabber.info('ignore reconnection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.session.set({conn_status: status, conn_condition: condition});\n            if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                }\n                this.createFastConnection();\n                this.connection.connect_callback = this.connectionCallback.bind(this);\n                this.session.set({\n                    connected: true,\n                    reconnected: true,\n                    reconnecting: false,\n                    conn_retries: 0\n                });\n            } else if (status === Strophe.Status.ERROR && (condition === 'policy-violation')) {\n                this.onAuthFailed(condition);\n            } else if (status === Strophe.Status.AUTHFAIL || ((status === Strophe.Status.ERROR) && (condition === 'not-authorized'))) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)) {\n                    if ($(elem).find('credentials-expired').length > 0)\n                        this.onTokenRevoked();\n                    else if (this.session.get('conn_retries') > 2 )\n                        this.onAuthFailed();\n                    else\n                        this.reconnect(true);\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                let max_retries = xabber.settings.max_connection_retries;\n                if (max_retries === -1 || this.session.get('conn_retries') < max_retries) {\n                    this.reconnect();\n                } else {\n                    this.connFeedback(xabber.getString(\"connection__error__connection_lost\"));\n                }\n            }\n        },\n\n        registerCallback: function (status, condition, error_text) {\n            if (status === Strophe.Status.REGISTER) {\n                this.connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                this.connection.register.fields.password = this.getPassword();\n                if (xabber.url_params && xabber.url_params.rkey) {\n                    this.connection.register.fields.key = xabber.url_params.rkey;\n                }\n                this.connection.register.submit();\n            } else if (status === Strophe.Status.REGISTERED) {\n                let nickname = this.auth_view.$nickname_input.val()\n                this.auth_view.data.set('step',6);\n                if(nickname){\n                    this.set('registration_nickname', nickname)\n                }\n            } else if (status === Strophe.Status.CONFLICT) {\n                this.auth_view.errorRegistrationFeedback({jid: xabber.getString(\"label_xmpp_id\")});\n                this.auth_view.data.set('step', 3)\n            } else if (status === Strophe.Status.NOTACCEPTABLE) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_not_filled\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            } else if (status === Strophe.Status.REGIFAIL) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_failed\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            }\n        },\n\n        changePasswordCallback: function (status, condition) {\n            if (this.change_password_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.change_password_view.successFeedback();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.change_password_view.errorFeedback({password: xabber.getString(\"password_changed_fail\") + condition});\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.change_password_view.errorFeedback({old_password: xabber.getString(\"AUTHENTICATION_FAILED\")});\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.change_password_connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                    this.change_password_connection.register.fields.password = this.change_password_view.$password_input.val().trim();\n                    this.change_password_connection.register.submit();\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.change_password_connection_manager = undefined;\n                    this.change_password_connection = undefined;\n                }\n            }\n        },\n\n        unregisterAccountCallback: function (status, condition) {\n            if (this.unregister_account_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.unregister_account_view.close();\n                    this.trigger('deactivate', this);\n                    this.deleteAccount();\n                    xabber.settings_modal_view.closeSettings();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.unregister_account_view.errorFeedback({password: xabber.getString(\"account_unregister_failed\") + condition});\n                    this.unregister_account_view.data.set('step', 0);\n                    this.unregister_account_connection && this.unregister_account_connection.disconnect();\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.unregister_account_view.errorFeedback({password: xabber.getString(\"wrong_password\")});\n                    this.unregister_account_view.data.set('step', 0);\n                    this.unregister_account_connection && this.unregister_account_connection.disconnect();\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.unregister_account_view.data.set('step', 1);\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.unregister_account_connection_manager = undefined;\n                    this.unregister_account_connection = undefined;\n                }\n            }\n        },\n\n        loginCallback: function (status, condition) {\n            if (status === Strophe.Status.CONNECTING) {\n                if (this.auth_view.stepped_auth){\n                    this.auth_view.resetAuthStepper()\n                }\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.save('is_new', undefined);\n                if (this.auth_view.stepped_auth && !this.auth_view.data.get('registration'))\n                    this.auth_view.authStepperStart();\n                else{\n                    this.auth_view.endAuth();\n                }\n\n            } else if (_.contains(constants.BAD_CONN_STATUSES, status)) {\n                let stepper_auth_error = false;\n                if (status === Strophe.Status.ERROR) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.CONNFAIL) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    status = xabber.getString(\"AUTHENTICATION_FAILED\");\n                    stepper_auth_error = true;\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    status = xabber.getString(\"connection__error__text_disconnected\");\n                } else if (status === Strophe.Status.CONNTIMEOUT) {\n                    status = xabber.getString(\"connection__error__text_timeout_expired\");\n                }\n                condition = condition ? ': ' + condition : '';\n                if (this.auth_view.stepped_auth)\n                    this.auth_view.authStepperError(stepper_auth_error, {password: status + condition});\n                else\n                    this.auth_view.errorFeedback({password: status + condition});\n                this.get('is_new') && this.destroy();\n            }\n        },\n\n        onAuthFailed: function (text) {\n            if (!this.auth_view && !text){\n                utils.dialogs.error(xabber.getString(\"connection__error__text_authentication_failed\", [this.get('jid')]));\n                this.password_view.show();\n            } else if (text){\n                if (this.auth_view)\n                    return;\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                    no_reconnect: true\n                });\n                let dialog_text = xabber.getString(\"XMPP_EXCEPTION\") + \": \" + text;\n                utils.dialogs.ask_extended(xabber.getString(\"error\"), xabber.getString(\"modal_policy_violation_text\"),\n                    {modal_class: 'modal-policy-violation', no_dialog_options: true, quoted_text: text, cancel_button_main: true},\n                    {\n                        ok_button_text: xabber.getString(\"disable_account\"),\n                        cancel_button_text: xabber.getString(\"account_settings\"),\n                        optional_button: 'account-reconnect',\n                        optional_button_text: xabber.getString(\"account_reconnect\")\n                    }).done((res) => {\n                    if (res){\n                        if (res === 'account-reconnect')\n                            this.reconnect();\n                        else {\n                            this.save('enabled', false);\n                            this.deactivate()\n                        }\n                    } else {\n                        this.showSettingsModal();\n                    }\n                });\n                return;\n            }\n            this.session.set({\n                auth_failed: true,\n                connected: false,\n                ready_to_send: false,\n                no_reconnect: true\n            });\n            this.save({old_device_token: this.get('x_token'), auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_authentication_failed_short\"));\n        },\n\n        onConnectionConflict: function () {\n            utils.dialogs.error(xabber.getString(\"connection__error__text_connection_conflict\", [this.get('jid')]));\n            this.session.set({\n                auth_failed: true,\n                no_reconnect: true\n            });\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_connection_conflict_short\"));\n        },\n\n        getAllXTokens: function (callback) {\n            let tokens_list = [],\n                iq = $iq({\n                    type: 'get',\n                    to: this.connection.domain\n                }).c('query', {xmlns: `${Strophe.NS.AUTH_DEVICES}#items`});\n            this.sendIQFast(iq, (tokens) => {\n                $(tokens).find('device').each((idx, token) => {\n                    let $token = $(token),\n                        client = $token.find('client').text(),\n                        device = $token.find('info').text(),\n                        description = $token.find('public-label').text(),\n                        omemo_id = $token.find('omemo-id').text(),\n                        token_uid = $token.attr('id'),\n                        expire = Number($token.find('expire').text())*1000,\n                        last_auth = Number($token.find('last-auth').text())*1000,\n                        ip_address = $token.find('ip').text();\n                    tokens_list.push({client: client, device: device, description: description, token_uid: token_uid, last_auth: last_auth, expire: expire, ip: ip_address, omemo_id: omemo_id});\n                });\n                this.x_tokens_list = tokens_list;\n                callback && callback();\n            });\n        },\n\n        onTokenRevoked: function () {\n            if (!this.auth_view) {\n                utils.dialogs.error(xabber.getString(\"connection__error__text_token_invalidated\", [this.get('jid')]));\n            }\n            this.session.set({\n                on_token_revoked: true,\n                auth_failed: true,\n                connected: false,\n                no_reconnect: true\n            });\n            this.save({auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_token_invalidated_short\"));\n            this.deleteAccount()\n        },\n\n        onChangedConnected: function () {\n            if (this.isConnected()) {\n                this.session.get('reconnected') ? this.onReconnected() : this.onConnected();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onConnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.jid = this.connection.jid;\n            this.resource = Strophe.getResourceFromJid(this.jid);\n            this.domain = Strophe.getDomainFromJid(this.jid);\n            this.trigger('activate', this);\n            this.session.get('no_reconnect') && this.session.set('no_reconnect', false);\n            this.afterConnected();\n            _.each(this._after_connected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        onFastConnected: function (status) {\n            if (status === Strophe.Status.CONNECTED) {\n                if (this.fast_connection.x_token) {\n                    this.save({\n                        x_token: this.fast_connection.x_token,\n                        hotp_counter: this.fast_connection.counter,\n                    });\n                    this.fast_conn_manager.auth_type = 'x-token';\n                    this.fast_connection.x_token_auth = true;\n                    if (this.connection && this.connection.pass)\n                        this.fast_connection.pass = this.connection.pass;\n                }\n                _.each(this._after_fast_connected_plugins, (plugin) => {\n                    plugin.call(this);\n                });\n            } else if (status === Strophe.Status.AUTHFAIL || status === Strophe.Status.DISCONNECTED) {\n                if (this._fast_interval_worker)\n                    this._fast_interval_worker.terminate();\n                this.fast_conn_manager = undefined;\n                this.fast_connection = undefined;\n                if (this.connection && !this.connection.disconnecting\n                    && this.connection.authenticated && this.connection.connected){\n                    this.getVCard();\n                    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n                        this.trigger('ready_to_get_roster');\n                }\n            }\n        },\n\n        onReconnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.afterConnected();\n            _.each(this._after_reconnected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        afterConnected: function () {\n            this.dfd_presence.done(() => {\n                this.sendPendingStanzas();\n                this.sendPendingMessages();\n                this.session.set({\n                    ready_to_send: true\n                })\n            });\n            this.registerPresenceHandler();\n            this.enableCarbons();\n        },\n\n        getAllMessageRetractions: function (callback) {\n            let query_options = {xmlns: Strophe.NS.REWRITE, version: this.retraction_version};\n            let retractions_query = $iq({type: 'get'})\n                .c('query', query_options);\n            this.sendIQ(retractions_query, callback);\n        },\n\n        sendPendingStanzas: function () {\n            console.log('pending stanzas');\n            console.log(this._pending_stanzas);\n            _.each(this._pending_stanzas, (item) => {\n                console.log(item);\n                if ((item.stanza instanceof Strophe.Builder) || item.is_msg) {\n                    this.connection.send(item.stanza);\n                    item.callback && item.callback();\n                } else if (item && item.stanza && item.is_iq){\n                    this.connection.sendIQ.apply(this.connection, item.stanza);\n                }\n            });\n            this._pending_stanzas = [];\n        },\n\n        sendPendingMessages: function () {\n            console.log('pending messages');\n            console.log(this._pending_messages);\n            this._pending_messages.sort((a,b) => (a.timestamp > b.timestamp) ? 1 : ((b.timestamp > a.timestamp) ? -1 : 0));\n            _.each(this._pending_messages, (item) => {\n                console.log(item)\n                let msg = this.messages.get(item.unique_id), msg_iq;\n                msg && (msg_iq = msg.get('xml'));\n                if (msg.collection && msg.collection.chat && msg.collection.chat.get('group_chat'))\n                    $(msg_iq).append(\"<retry to='\" + msg.collection.chat.get('jid') + \"' xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                else\n                    $(msg_iq).append(\"<retry xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                msg_iq && this.sendMsgPending(msg_iq);\n            });\n            this.trigger('send_pending_messages');\n        },\n\n        _after_connected_plugins: [],\n        _after_reconnected_plugins: [],\n        _after_fast_connected_plugins: [],\n\n        onDisconnected: function () {\n            this.disconnected_timestamp = this.last_stanza_timestamp;\n            if (this.session.get('delete')) {\n                this.destroy();\n                return;\n            }\n            let deactivate = this.session.get('deactivate');\n            if (deactivate) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnected\"));\n                this.session.set('deactivate', null);\n                if (deactivate === 'set_off') {\n                    this.trigger('deactivate', this);\n                }\n            } else {\n                if (this.session.get('no_reconnect')) {\n                    this.session.set('no_reconnect', false);\n                } else {\n                    this.fast_connection && this.fast_connection.connected && this.fast_connection.disconnect();\n                    this.reconnect();\n                }\n            }\n        },\n\n        connFeedback: function (message) {\n            this.session.set(\"conn_feedback\", message);\n        },\n\n        enableCarbons: function () {\n            let iq = $iq({type: 'set'}).c('enable', {xmlns: Strophe.NS.CARBONS});\n            this.sendIQFast(iq);\n        },\n\n        getVCard: function (callback) {\n            let jid = this.get('jid'),\n                is_callback = _.isFunction(callback);\n            if (this.connection && this.connection.connected) {\n                this.getConnectionForIQ().vcard.get(jid,\n                    (vcard) => {\n                        let attrs = {\n                            vcard: vcard,\n                            vcard_updated: moment.now()\n                        };\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                        if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                            if (vcard.photo.image) {\n                                attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                                attrs.image = vcard.photo.image;\n                            }\n                            else\n                                attrs.image = Images.getDefaultAvatar(attrs.name);\n                            this.cached_image = Images.getCachedImage(attrs.image);\n                        }\n                        this.save(attrs);\n                        is_callback && callback(vcard);\n                    },\n                    function () {\n                        is_callback && callback(null);\n                    }\n                );\n            }\n        },\n\n        setVCard: function (data, callback, errback) {\n            let vcard = _.extend(_.clone(this.get('vcard')), data);\n            this.connection.vcard.set(this.get('jid'), vcard, () => {\n                this.vcardPhotoUpdated(vcard.photo.image);\n                callback && callback();\n            }, errback);\n        },\n\n        getStatusMessage: function () {\n            return this.get('status_message') || xabber.getString([this.get('status')]);\n        },\n\n        setStatus: function (status, message) {\n            let attrs = { status_updated: moment.now() };\n            status !== null && (attrs.status = status);\n            message !== null && (attrs.status_message = message || '');\n            if (status === 'offline' && this.get('status') !== 'offline')\n                attrs.status_prev = this.get('status');\n            this.save(attrs);\n            if (!this.get('enabled'))\n                return;\n            if (status === 'offline') {\n                this.deactivate('set_offline');\n            } else if (!this.isConnected()) {\n                this.activate();\n            } else {\n                this.sendPresence();\n            }\n        },\n\n        restoreStatus: function () {\n            if (this.get('status') === 'offline') {\n                this.save({\n                    status_updated: moment.now(),\n                    status: this.get('status_prev') || 'online',\n                    status_prev: undefined\n                });\n            }\n        },\n\n        getAvatarHash: function (avatar) {\n            let from_avatar = avatar || this.get('vcard').photo.image;\n            if (from_avatar) {\n                let decoded_raw = atob(from_avatar),\n                    bin = Uint8Array.from(Array.prototype.map.call(decoded_raw,function(x) {\n                        return x.charCodeAt(0);\n                    }));\n                return sha1(bin);\n            }\n            else\n                return \"\";\n        },\n\n        vcardPhotoUpdated: function (photo) {\n            let stanza = $pres().c('x', {xmlns: Strophe.NS.VCARD_UPDATE}).c('photo').t(this.getAvatarHash(photo)).up().up();\n            return this.sendPres(stanza);\n        },\n\n        sendPresence: function (type, message) {\n            type = type || this.get('status');\n            let status_message = message || this.get('status_message'), stanza = $pres();\n            if (type === 'offline') {\n                stanza.attrs({'type': 'unavailable'});\n            } else {\n                if (type !== 'online') {\n                    stanza.c('show').t(type).up();\n                }\n                stanza.c('status').t(status_message).up();\n                stanza.c('priority').t(this.get('priority')).up();\n                if(this.get('x_token'))\n                    stanza.c('device', {xmlns: Strophe.NS.AUTH_DEVICES, id: this.get('x_token').token_uid}).up();\n            }\n            stanza.cnode(this.connection.caps.createCapsNode({\n                node: 'https://www.xabber.com/clients/xabber/web'\n            }).tree());\n            return this.sendPres(stanza);\n        },\n\n        showSettings: function (right, block_name) {\n            this.showSettingsModal(block_name);\n        },\n\n        showSettingsModal: function (block_name) {\n            if (xabber.accounts.length === 1){\n                xabber.body.setScreen('settings-modal', {account_block_name: block_name});\n                xabber.trigger('update_placeholder');\n                return;\n            }\n            let has_modal_settings = !_.isUndefined(this.settings_account_modal);\n            if (!has_modal_settings)\n                this.settings_account_modal = new xabber.AccountSettingsModalView({model: this});\n            this.updateColorScheme();\n            xabber.body.setScreen('account_settings_modal', {\n                account: this, block_name: block_name\n            });\n            this.trigger('open_settings');\n            if (!has_modal_settings) {\n                this.trigger('render_settings');\n                this.settings_account_modal.addChild('blocklist', xabber.BlockListView, {\n                    account: this,\n                    el: this.settings_account_modal.$('.block-list-view-wrap')[0]\n                });\n            }\n            this.settings_account_modal.updateHeight();\n        },\n\n        updateColorScheme: function () {\n            let color = this.settings.get('color');\n            this.settings_account_modal && this.settings_account_modal.$el.attr('data-color', color);\n        },\n\n        revokeXToken: function (token_uid, callback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke', {xmlns:Strophe.NS.AUTH_DEVICES});\n            for (let token_num = 0; token_num < token_uid.length; token_num++)\n                iq.c('device', {id: token_uid[token_num]}).up();\n            this.sendIQFast(iq, () => {\n                callback && callback();\n            });\n        },\n\n        revokeAllXTokens: function (callback, errback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke-all', {xmlns:Strophe.NS.AUTH_DEVICES});\n            this.sendIQFast(iq, (success) => {\n                    callback & callback(success);\n                },\n                function (error) {\n                    errback && errback(error);\n                });\n        },\n\n        deleteAccount: function (show_settings, dont_change_screen) {\n            this.show_settings_after_delete = show_settings;\n            this.dont_change_screen_after_delete = dont_change_screen;\n            let screen = xabber.body.screen;\n            if (screen.get('account') && screen.get('account') === this && screen.get('name') === 'account_settings_modal')\n                this.show_settings_after_delete = true;\n            if (this.get('x_token'))\n                this.revokeXToken([this.get('x_token').token_uid]);\n            this.session.set('delete', true);\n            this.deactivate();\n        },\n\n        activate: function () {\n            if (!this.isConnected())\n                this.connect();\n        },\n\n        deactivate: function (type) {\n            type || (type = 'set_off');\n            this.session.set('deactivate', type);\n            if (this.isConnected()) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnecting\"));\n                this.sendPresence('offline');\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onDestroy: function () {\n            if (this.connection && !this.connection.register._registering)\n                this.connection.connect_callback = null;\n            if (this.omemo){\n                this.omemo.destroy();\n                this.omemo = undefined;\n            }\n            this.groups_settings\n            if (this.groups_settings){\n                this.groups_settings.clearStorage();\n            }\n            if (this.groupchat_settings){\n                this.groupchat_settings.destroy();\n                this.groupchat_settings = undefined;\n            }\n            if (this.chat_settings){\n                this.chat_settings.destroy();\n                this.chat_settings = undefined;\n            }\n            if (this.settings)\n                this.settings.destroy();\n            if (this.isConnected()) {\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            }\n            this.cached_sync_conversations && this.cached_sync_conversations.deleteDataBase();\n            this.cached_roster && this.cached_roster.deleteDataBase();\n            this.cached_server_features && this.cached_server_features.deleteDataBase();\n            this.trigger('remove_saved_chat');\n        },\n\n        registerIQHandler: function () {\n            this.connection.deleteHandler(this._stanza_handler);\n            this._stanza_handler = this.connection.addHandler((iq) => {\n                    this.onGetIQ(iq);\n                    return true;\n                }, null, 'iq', \"get\");\n        },\n\n\n        registerSyncedIQHandler: function () {\n            this.connection.deleteHandler(this._synced_stanza_handler);\n            this._synced_stanza_handler = this.connection.addHandler(\n                this.onSyncedIQ.bind(this),\n                Strophe.NS.SYNCHRONIZATION, 'iq', \"set\");\n        },\n\n        registerPresenceHandler: function () {\n            this.connection.deleteHandler(this._pres_handler);\n            this._pres_handler = this.connection.addHandler(\n                (presence) => {\n                    this.onPresence(presence);\n                    return true;\n                }, null, 'presence', null);\n        },\n\n        onSetIQResult: function (iq) {\n            let to = $(iq).attr('to');\n            if (this.fast_connection && this.fast_connection.jid === to\n                && !this.fast_connection.disconnecting && this.fast_connection.authenticated\n                && this.fast_connection.connected && this.get('status') !== 'offline'){\n                this.sendIQFast($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            } else if (this.connection && this.connection.jid === to && this.connection.authenticated\n                && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline') {\n                this.sendIQ($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            }\n        },\n\n        onSyncedIQ: function (iq) {\n            this.onSetIQResult(iq);\n            this.roster.syncConversations(iq);\n            return true;\n        },\n\n        onGetIQ: function (iq) {\n            let $incoming_iq = $(iq),\n                $confirm = $incoming_iq.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`),\n                $session_availability = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n                request_code,\n                from_jid = $incoming_iq.attr('from');\n            if ($confirm.length) {\n                request_code = $confirm.attr('id');\n                if (this.get('gallery_auth_request_code')) {\n                    this.onAuthCode(request_code)\n                }\n                else {\n                    this.gallery_code_requests.push({\n                        id: $incoming_iq.attr('id'),\n                        code: request_code\n                    });\n                }\n            }\n            if ($session_availability.length) {\n                let session_id = $session_availability.children('session').attr('id'), $session_availability_response;\n                if (session_id && xabber.current_voip_call && session_id === xabber.current_voip_call.get('session_id') && !xabber.current_voip_call.get('state')) {\n                    $session_availability_response = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')})\n                        .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n                        .c('session', {id: session_id});\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n                }\n                else {\n                    $session_availability_response = $iq({to: from_jid, type: 'error', id: $incoming_iq.attr('id')})\n                        .c('error', {xmlns: Strophe.NS.JINGLE_MSG});\n\n                }\n                this.sendIQFast($session_availability_response);\n            }\n        },\n\n        testGalleryTokenExpire: function(callback, errback) {\n            let currentTime = new Date(),\n                tokenExpireTime = new Date(this.get('gallery_token_expires'));\n            if (this.get('gallery_auth')){\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (currentTime < tokenExpireTime){\n                callback && callback();\n            }\n            else if (this.server_features.get('media-gallery')){\n                this.initGalleryAuth(this.server_features.get('media-gallery'), errback)\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (!this.server_features.get('media-gallery')){\n                this.set('gallery_url', undefined);\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                callback && callback();\n            }\n        },\n\n        testGalleryFileSlot: function(file, callback) {\n            if (this.get('gallery_token') && this.get('gallery_url')){\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: {size: file.size, name: file.name, hash: sha1(bytes)},\n                        success: (response) => {\n                            console.log(response);\n                            callback && callback(response);\n                        },\n                        error: (response) => {\n                            console.log(response);\n                            callback && callback(response.responseJSON);\n                        }\n                    });\n                }\n                reader.onerror = (e) => {\n                    console.log(reader.error);\n                    callback && callback(false)\n                };\n                reader.readAsDataURL(file);\n            }\n        },\n\n        initGalleryAuth: function(gallery_feature, errback) {\n            this.set('gallery_url', gallery_feature.get('from'));\n            if (this.get('gallery_url') && !this.get('gallery_auth')) {\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                this.set('gallery_auth', true)\n                this.gallery_iq_answered = false;\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_code_request/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.jid, type: \"iq\"}),\n                    success: (response) => {\n                        if (response.request_id){\n                            this.set('gallery_auth_request_code', response.request_id)\n                            this.gallery_auth_errback = errback;\n                            if (this.gallery_code_requests.length){\n                                let verifying_code = this.gallery_code_requests.find(verifying_mess => (verifying_mess.id === this.get('gallery_auth_request_code')));\n                                if (verifying_code && verifying_code.code)\n                                    this.onAuthCode(verifying_code.code)\n                            }\n                            setTimeout(() => {\n                                if (!this.gallery_iq_answered)\n                                    this.handleCommonGalleryErrors({status: 500}, errback)\n                            }, 5000)\n                        }\n                    },\n                    error: (response) => {\n                        this.handleCommonGalleryErrors(response, errback)\n                        this.set('gallery_auth', false)\n                        this.gallery_code_requests = [];\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        onAuthCode: function (confirm_code) {\n            this.gallery_code_requests = [];\n            this.set('gallery_auth_request_code', undefined);\n            if (confirm_code) {\n                this.gallery_iq_answered = true;\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_auth/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.id, code: confirm_code}),\n                    success: (response) => {\n                        if (response.token)\n                            this.set('gallery_token', response.token);\n                        if (response.expires)\n                            this.set('gallery_token_expires', response.expires);\n                        this.trigger('gallery_token_authenticated')\n                        this.set('gallery_auth', false)\n                    },\n                    error: (response) => {\n                        this.set('gallery_auth', false)\n                        this.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        prepareFiles: function (files, callback) {\n            files.forEach((file) => {\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    this.testFile({size: file.size, name: file.name, hash: sha1(bytes)}, file, callback)\n                }\n                reader.readAsDataURL(file);\n            })\n        },\n\n        handleCommonGalleryErrors: function (response, errback) {\n            !errback && (errback = this.gallery_auth_errback);\n            this.gallery_auth_errback = undefined;\n            let err_text;\n            response && response.responseJSON && response.responseJSON.error && (err_text = response.responseJSON.error);\n            if (response.status === 401){\n                if (this.server_features.get('media-gallery')){\n                    this.initGalleryAuth(this.server_features.get('media-gallery'), errback)\n                } else {\n                    this.set('gallery_url', null);\n                    this.set('gallery_token', null);\n                    errback && errback('No Media Gallery server feature');\n                }\n            } else if (response.status === 500) {\n                this.set('gallery_url', null);\n                this.set('gallery_token', null);\n                errback && errback(xabber.getString(\"media_gallery_server_error\"));\n            } else {\n                errback && errback('Media Gallery error - ' + (err_text || response.status));\n            }\n        },\n\n        getStorageStats: function (params, callback) {\n            this.testGalleryTokenExpire(() => {\n                params && (params = {});\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/stats/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        testFile: function (params, file, callback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            this.uploadFile(file , callback)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n\n            });\n        },\n\n        uploadFile: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    let formData = new FormData(),\n                        metadata = {};\n                    file.duration && (metadata.duration = file.duration);\n                    formData.append('file', file, file.name);\n                    formData.append('metadata', JSON.stringify(metadata));\n                    if (file.size)\n                        formData.append('size', file.size);\n                    if (file.voice)\n                        formData.append('media_type', file.type + '+voice');\n                    else\n                        formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        uploadAvatar: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    if (!file)\n                        errback && errback('no file')\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/avatar/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        deleteFile: function (file_id, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url') && file_id)\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({id: file_id}),\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n            });\n        },\n\n        getOpenGraphData: function (url, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token'), \"Content-Type\": \"application/json\"},\n                        url: this.get('gallery_url') + 'v1/opengraph/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({url: url}),\n                        success: (response) => {\n                            response.site = $(response.ogp).closest('meta[property=\"og:site_name\"]').attr('content')\n                            response.type = $(response.ogp).closest('meta[property=\"og:type\"]').attr('content')\n                            response.url = $(response.ogp).closest('meta[property=\"og:url\"]').attr('content')\n                            response.description = $(response.ogp).closest('meta[property=\"og:description\"]').attr('content')\n                            response.title = $(response.ogp).closest('meta[property=\"og:title\"]').attr('content')\n                            response.image = $(response.ogp).closest('meta[property=\"og:image\"]').attr('content')\n                            response.image_height = $(response.ogp).closest('meta[property=\"og:image:height\"]').attr('content')\n                            response.image_width = $(response.ogp).closest('meta[property=\"og:image:width\"]').attr('content')\n                            response.video_url = $(response.ogp).closest('meta[property=\"og:video:url\"]').attr('content')\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            errback && errback(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        createMessageFromIQ: function (attrs) {\n            let contact = this.contacts.mergeContact(attrs.from_jid),\n                chat = this.chats.getChat(contact);\n            chat.messages.create(attrs);\n        },\n\n        onPresence: function (presence) {\n            let $presence = $(presence),\n                type = presence.getAttribute('type');\n            if (type === 'error') { return; }\n            let jid = presence.getAttribute('from'),\n                bare_jid = Strophe.getBareJidFromJid(jid);\n            if (bare_jid !== this.get('jid')) {\n                _.each(this._added_pres_handlers, function (handler) {\n                    handler(presence, bare_jid);\n                });\n                return;\n            };\n            let resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                status_message = $presence.find('status').text();\n            _.isNaN(priority) && (priority = 0);\n            let $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCAD_UPDATE}\"]`);\n            if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR)\n                this.save('photo_hash', $vcard_update.find('photo').text());\n            if (resource) {\n                let resource_obj = this.resources.get(resource);\n                if (type === 'unavailable') {\n                    if (resource_obj) { resource_obj.destroy(); }\n                } else {\n                    let attrs = {\n                        resource: resource,\n                        priority: priority,\n                        status: status,\n                        status_message: status_message\n                    };\n                    let $device = $presence.find(`device[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n                    if ($device && this.x_tokens_list && $device.attr('id')) {\n                        attrs.token_uid = $device.attr('id')\n                    }\n                    if (!resource_obj)\n                        resource_obj = this.resources.create(attrs);\n                    else\n                        resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n    {\n        addInitPlugin: function (func) {\n            this.prototype._init_plugins.push(func);\n        },\n\n        addConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_connected_plugins.push(func);\n            reconn && this.prototype._after_reconnected_plugins.push(func);\n        },\n\n        addFastConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_fast_connected_plugins.push(func);\n        }\n    });\n\nxabber.Accounts = Backbone.CollectionWithStorage.extend({\n    model: xabber.Account,\n    comparator: function (acc1, acc2) {\n        return acc1.settings.get('order') < acc2.settings.get('order') ? -1 : 1;\n    },\n\n    _initialize: function (models, options) {\n        this.settings_list = xabber.account_settings_list;\n        this.getEnabledList();\n        this.getConnectedList();\n        this.on(\"add\", this.onAdd, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.on(\"change:enabled\", this.getEnabledList, this);\n        this.on(\"update_order\", this.onUpdatedOrder, this);\n        this.on(\"add destroy activate deactivate\", this.onListChanged, this);\n        this.on(\"destroy deactivate\", this.onAccountDisconnected, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        xabber.on(\"quit_accounts\", this.onQuitAccounts, this);\n        this.settings_list.on(\"add_settings\", this.onSettingsAdded, this);\n    },\n\n    onQuit: function () {\n        _.each(_.clone(this.models), function (account) {\n            account.deleteAccount(true);\n            account.password_view.closeModal();\n            utils.modals.clear_queue();\n        });\n        !this.models.length && xabber.body.setScreen('login', {chat_item: null});\n    },\n\n    onQuitAccounts: function () {\n        _.each(_.clone(this.models), function (account) {\n            if (account.settings.get('to_sync')) {\n                account.deleteAccount();\n                account.password_view.closeModal();\n                utils.modals.clear_queue();\n            }\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    getEnabledList: function () {\n        this.enabled = this.filter(account => account.get('enabled'));\n    },\n\n    getConnectedList: function () {\n        this.connected = this.filter(account => account.isConnected());\n    },\n\n    onListChanged: function () {\n        this.getEnabledList();\n        this.getConnectedList();\n        this.trigger('list_changed', this);\n    },\n\n    onAdd: function (account) {\n        if (account.is_invalid)\n            account.destroy();\n    },\n\n    onDestroy: function (account) {\n        if (!account.get('is_new')) {\n            let no_accounts = !(this.length);\n            if (no_accounts) {\n                xabber.body.setScreen('login');\n            } else if (account.show_settings_after_delete) {\n                xabber.body.setScreen('settings-modal', {account_block_name: null});\n            } else if (account.dont_change_screen_after_delete) {\n                return;\n            } else {\n            }\n        }\n    },\n\n    onAccountDisconnected: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n        xabber.recountAllMessageCounter();\n    },\n\n    onSettingsAdded: function (settings) {\n        let jid = settings.get('jid');\n        if (!this.get(jid))\n            this.create({jid: jid});\n    },\n\n    onUpdatedOrder: function () {\n        this.sort();\n        this.getEnabledList();\n        this.getConnectedList();\n    },\n\n    getLastOrder: function () {\n        return this.length ? this.last().settings.get('order') : 0;\n    },\n\n    getDefaultColor: function () {\n        let used_colors = {}, colors = constants.MATERIAL_COLORS;\n        this.each(function (account) {\n            used_colors[account.settings.get('color')] = true;\n        });\n        for (let idx = 0; idx < colors.length; idx++) {\n            if (!used_colors[colors[idx]])\n                return colors[idx];\n        }\n        return 'red';\n    },\n\n    moveBefore: function (acc1, acc2) {\n        let index2 = this.indexOf(acc2),\n            prev_order = index2 > 0 ? this.at(index2-1).settings.get('order') : 0;\n        acc1.settings.save('order', (acc2.settings.get('order') + prev_order)/2);\n        this._updateOrder();\n    },\n\n    moveToBottom: function (acc) {\n        acc.settings.save('order', this.getLastOrder() + 1);\n        this._updateOrder();\n    },\n\n    _updateOrder: function () {\n        this.sort();\n        this.each(function (acc, index) {\n            acc.settings.save({order: index + 1});\n        });\n        this.trigger('update_order');\n    }\n});\n\nxabber.AccountToolbarItemView = xabber.BasicView.extend({\n    className: 'toolbar-item account-item',\n    template: templates.toolbar_item,\n    avatar_size: constants.AVATAR_SIZES.TOOLBAR_ACCOUNT_ITEM,\n\n    events: {\n        'click .filter-chats': 'filterChats',\n        'click .account-item-avatar-wrap': 'showSettings'\n    },\n\n    _initialize: function () {\n        this.updateConnected();\n        this.updateAuthState();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.$el.attr('data-jid', this.model.get('jid'));\n        this.model.session.on(\"change:auth_failed\", this.updateAuthState, this);\n        this.model.session.on(\"change:connected\", this.updateConnected, this);\n        this.model.on(\"change:status\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"open_settings\", this.setActive, this);\n    },\n\n    updateConnected: function () {\n        this.$el.switchClass('disconnected', !this.model.isConnected());\n        xabber.updateFaviconConnected();\n    },\n\n    updateAuthState: function () {\n        let auth_failed = this.model.session.get('auth_failed');\n        xabber.updateFaviconConnected();\n        this.$('.status').hideIf(auth_failed);\n        this.$('.auth-failed').showIf(auth_failed);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    filterChats: function (ev) {\n        ev.stopPropagation();\n        let is_single = $(ev.target).closest('.single-item').length;\n        if (is_single){\n            xabber.body.setScreen('settings-modal', {account_block_name: null});\n            xabber.trigger('update_placeholder');\n            return;\n        }\n        xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        if (xabber.toolbar_view.data.get('account_filtering') != this.model.get('jid'))\n            this.$el.addClass('active');\n        xabber.toolbar_view.showChatsByAccount(this.model);\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n});\n\nxabber.ToolbarAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.model.on(\"add change:enabled\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n    },\n\n    updateList: function (account) {\n        this.$el.find('.single-item').removeClass('single-item');\n        _.each(this.children, function (view) { view.detach(); });\n        _.each(this.model.enabled, (account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            !view && (view = this.addChild(jid, xabber.AccountToolbarItemView, {model: account}));\n            this.$el.append(view.$el);\n            if (this.model.enabled.length === 1)\n                this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        });\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid');\n        if (account.get('enabled')) {\n            let view = this.child(jid);\n            if (view) {\n                view.$el.detach();\n            } else {\n                view = this.addChild(jid, xabber.AccountToolbarItemView,\n                    {model: account});\n            }\n            let index = this.model.enabled.indexOf(account);\n            if (index === 0) {\n                this.$el.prepend(view.$el);\n            } else {\n                this.$('.account-item').eq(index - 1).after(view.$el);\n            }\n        } else {\n            account.last_msg_timestamp = 0;\n            this.removeChild(jid);\n        }\n        this.$el.find('.single-item').removeClass('single-item');\n        if (this.model.enabled.length === 1)\n            this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.parent.updateScrollBar();\n        if (this.model.enabled.length === 1)\n            this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n    }\n});\n\nxabber.Resource = Backbone.Model.extend({\n    idAttribute: 'resource',\n    defaults: {\n        priority: 0\n    }\n});\n\nxabber.ResourceView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.ResourceRightView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource_right,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.Resources = Backbone.Collection.extend({\n    model: xabber.Resource,\n    comparator: function (r1, r2) {\n        let p1 = r1.get('priority'), p2 = r2.get('priority');\n        return p1 > p2 ? -1 : (p1 < p2 ? 1 : 0);\n    },\n\n    requestInfo: function (resource, callback) {\n        let jid = this.jid + '/' + resource.get('resource');\n        if (this.connection && this.connection.connected) {\n            this.connection.disco.info(jid, null, (iq) => {\n                let $identity = $(iq).find('identity[category=client]');\n                if ($identity.length)\n                    resource.set('client', $identity.attr('name'));\n                this.attention_supported = this.isFeatureSupported(iq, Strophe.NS.ATTENTION);\n                callback && callback();\n            });\n        }\n    },\n\n    isFeatureSupported: function (stanza, ns) {\n        let $stanza = $(stanza), is_supported = false;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            if (namespace === ns)\n                is_supported = true;\n        });\n        return is_supported;\n    },\n});\n\nxabber.ResourcesView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.renderByInit();\n        this.model.on(\"add\", this.onResourceAdded, this);\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onPriorityChanged: function (resource) {\n        this.model.sort();\n        this.updatePosition(resource);\n    }\n});\n\nxabber.AccountResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.jid = options.account.get('jid');\n        this.connection = options.account.connection;\n    }\n});\n\nxabber.AccountResourcesView = xabber.ResourcesView.extend({\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.main-resource').after(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.AccountVCardModalView = xabber.VCardView.extend({\n    template: env.templates.vcard.vcard_modal,\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .btn-vcard-edit\": \"showEditView\",\n        \"click .details-icon\": \"onClickIcon\"\n    },\n\n    __initialize: function () {\n        this.updateButtons();\n        this.model.on(\"activate deactivate\", this.updateButtons, this);\n    },\n\n    updateButtons: function () {\n        let connected = this.model.isConnected();\n        this.$('.btn-vcard-edit').showIf(connected);\n        this.$('.btn-vcard-refresh').showIf(connected);\n    },\n\n    showEditView: function ($el) {\n        this.vcard_edit_modal = new xabber.VCardEditModalView({model: this.model});\n        this.vcard_edit_modal.show({$el: $el});\n    }\n});\n\nxabber.AccountMediaGalleryView = xabber.BasicView.extend({\n    template: templates.media_gallery_account,\n    events: {\n        \"change input.gallery-upload\": \"onFileInputChanged\",\n        \"click .gallery-file:not(.gallery-avatar) .btn-delete\": \"deleteFile\",\n        \"click .gallery-file.gallery-avatar .btn-delete\": \"deleteAvatar\",\n        \"click .gallery-file .checkbox-field\": \"selectFile\",\n        \"click .btn-delete-selection\": \"deleteSelectedFiles\",\n        \"click .settings-tab:not(.settings-deletion-button)\": \"onTabClick\",\n        \"click .show-deletion\": \"showDeleteFilesView\",\n        \"click .btn-back-gallery\": \"backToMain\",\n        \"click .gallery-file\": \"onClickFile\",\n        \"click .btn-close-selection\": \"disableFilesSelect\",\n    },\n\n    _initialize: function () {\n        this.account = this.model;\n        this.$el.html(this.template());\n        this.parent.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.account.on(\"update_avatar_list\", this.onUpdateAvatars.bind(this));\n    },\n\n    render: function () {\n        this.updateStorage();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n    },\n\n    onScroll: function () {\n        if (this.$el.hasClass('hidden'))\n            return;\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && !this.loading_files && (this.current_page < this.total_pages)){\n            this.current_page++;\n            this.current_options.page = this.current_page;\n            if (this.current_options.type === 'avatars'){\n                this.getAvatars(this.current_options)\n            } else {\n                this.getFiles(this.current_options)\n            }\n        }\n    },\n\n    updateStorage: function (after_deletion, after_avatar_update) {\n        this.account.getStorageStats(null,(response) => {\n            let used_storage = utils.pretty_size(response.total.used) || '0';\n            this.$('.btn-delete-files-dropdown').hideIf(!(response.total && response.total.used))\n            this.$('.gallery-manage-storage').hideIf(!(response.total && response.total.used))\n            this.$('.storage-usage').html(used_storage + xabber.getString(\"of\") + utils.pretty_size(response.quota))\n            this.$('.storage-usage-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images .storage-usage-amount').html(utils.pretty_size(response.images.used))\n            this.$('.storage-label-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos .storage-usage-amount').html(utils.pretty_size(response.videos.used))\n            this.$('.storage-label-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices .storage-usage-amount').html(utils.pretty_size(response.voices.used))\n            this.$('.storage-label-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files .storage-usage-amount').html(utils.pretty_size(response.files.used))\n            if (response.images){\n                this.$('.storage-progress-images').css('width', ((response.images.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.videos){\n                this.$('.storage-progress-videos').css('width', ((response.videos.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.voices){\n                this.$('.storage-progress-voices').css('width', ((response.voices.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.files){\n                this.$('.storage-progress-files').css('width', ((response.files.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (this.parent){\n                this.parent.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label')\n                    .text(xabber.getString(\"settings_account__storage_label\", [utils.pretty_size(response.total.used), utils.pretty_size(response.quota)]));\n                this.parent.updateHeight();\n            }\n            if (xabber.settings_modal_view.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label').length){\n                xabber.settings_modal_view.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label')\n                    .text(xabber.getString(\"settings_account__storage_label\", [utils.pretty_size(response.total.used), utils.pretty_size(response.quota)]));\n                xabber.settings_modal_view.updateHeight();\n            }\n        });\n    },\n\n    filterType: function (file_type, sorting) {\n        this.$('.gallery-files').html('')\n        if (file_type === 'image' || file_type === 'video' || file_type === 'avatars') {\n            this.$('.gallery-files').removeClass('voice');\n            this.$('.gallery-files').removeClass('file');\n            this.$('.gallery-files').addClass('grid');\n        } else if (file_type === 'voice') {\n            this.$('.gallery-files').addClass('voice')\n            this.$('.gallery-files').removeClass('file');\n            this.$('.gallery-files').removeClass('grid')\n        } else {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').addClass('file');\n            this.$('.gallery-files').removeClass('grid')\n        }\n        let options = {type: file_type}\n        sorting && (options.order_by = sorting)\n        this.current_options = options\n        if (file_type === 'avatars')\n            this.getAvatars(options)\n        else\n            this.getFiles(options)\n    },\n\n    onTabClick: function (ev) {\n        let $target = $(ev.target).closest('.settings-tab'),\n            file_type = $target.attr('data-media-type'),\n            tab_header = $target.attr('data-header-text');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.parent.$('.btn-back-settings').addClass('hidden');\n        this.parent.$('.settings-panel-head-title').text(tab_header);\n        this.parent.$('.btn-select-files').removeClass('hidden');\n        this.parent.$('.btn-sorting').removeClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').removeClass('hidden');\n        this.$('.gallery-wrap').addClass('hidden');\n        this.$('.media-gallery-items-wrap').removeClass('hidden');\n        this.$('.media-gallery-items-wrap').attr('data-value', file_type);\n        this.$('.gallery-files').html('')\n        this.filterType(file_type);\n        if (this.parent){\n            this.parent.updateHeight();\n        }\n        if (xabber.settings_modal_view){\n            xabber.settings_modal_view.updateHeight();\n        }\n    },\n\n    backToMain: function (ev) {\n        this.parent.$('.btn-back-settings').removeClass('hidden');\n        this.parent.$('.btn-select-files').addClass('hidden');\n        this.parent.$('.btn-sorting').addClass('hidden');\n        this.parent.$('.settings-panel-head-title').text(xabber.getString(\"account_cloud_storage\"));\n        this.parent.$('.btn-more.media-gallery-button').addClass('hidden');\n        this.$('.gallery-wrap').removeClass('hidden');\n        this.$('.media-gallery-items-wrap').addClass('hidden');\n        this.updateStorage();\n        if (this.parent){\n            this.parent.updateHeight();\n        }\n        if (xabber.settings_modal_view){\n            xabber.settings_modal_view.updateHeight();\n        }\n    },\n\n    onUpdateAvatars: function (ev) {\n        this.updateStorage(false, true);\n        if (this.$('.media-gallery-items-wrap').attr('data-value') === 'avatars'){\n            this.current_page = 1;\n            this.total_pages = 0;\n            this.$('.gallery-files').html('');\n            this.filterType('avatars');\n        }\n    },\n\n    showDeleteFilesView: function (ev) {\n        xabber.trigger('show_delete_files', {model: this.account, gallery_view: this});\n    },\n\n    sortFiles: function (ev) {\n        let $target = $(ev.target).closest('.btn-gallery-sorting'),\n            file_type = this.$('.media-gallery-items-wrap').attr('data-value'),\n            sort_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type, sort_type);\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    getFiles: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id'}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined;\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    getAvatars: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id', type: \"avatars\"}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    renderFiles: function (response) {\n        if (response.type != this.$('.media-gallery-items-wrap').attr('data-value'))\n            return;\n        this.total_pages = response.total_pages;\n        this.$('.gallery-files .preloader-wrapper').remove();\n        if (response.items && response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                let duration;\n                item.metadata && item.metadata.duration && (duration = utils.pretty_duration(item.metadata.duration));\n                let $gallery_file = $(templates.media_gallery_account_file({\n                    file: item,\n                    svg_icon: utils.file_type_icon_svg(item.media_type),\n                    filesize: utils.pretty_size(item.size),\n                    created_at: utils.pretty_date(item.created_at),\n                    duration: duration,\n                    download_only: false,\n                }));\n                (response.type === 'avatars') && $gallery_file.addClass('gallery-avatar');\n                $gallery_file.appendTo(this.$('.gallery-files'));\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n        }\n        else {\n            this.$('.gallery-files').html(`<div class=\"no-files\">${xabber.getString(\"no_files\")}</div>`)\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings)\n        if (this.parent && this.parent.updateHeight)\n            this.parent.updateHeight();\n    },\n\n    deleteFile: function (ev) {\n        let $target = $(ev.target).closest('.gallery-file'),\n            file_id = $target.attr('data-id');\n        this.account.deleteFile(file_id,(response) => {\n            $target.detach();\n        }, (err) => {\n        })\n    },\n\n    deleteAvatar: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.gallery-file'),\n                file_id = $target.attr('data-id');\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && file_id)\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({id: file_id}),\n                    success: (response) => {\n                        $target.detach();\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    enableFilesSelect: function (ev) {\n        this.$('.media-gallery-items-wrap').addClass('select-items-state');\n        this.parent.$('.settings-panel-head-title').addClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').addClass('hidden');\n        this.parent.$('.btn-back-settings').addClass('hidden');\n        this.onSelectFile();\n    },\n\n    disableFilesSelect: function (ev) {\n        this.$('.media-gallery-items-wrap').removeClass('select-items-state');\n        this.parent.$('.settings-panel-head-title').removeClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').removeClass('hidden');\n        this.parent.$('.btn-back-settings').removeClass('hidden');\n        this.$('.gallery-file .checkbox-field input:checked').prop('checked', false);\n    },\n\n    selectFile: function (ev) {\n        let $target_input = $(ev.target).closest('.checkbox-field').find('input');\n        $target_input.prop('checked', !$target_input.prop('checked'));\n        this.onSelectFile();\n    },\n\n    onSelectFile: function () {\n        if (!this.$('.media-gallery-items-wrap').attr('data-value'))\n            return;\n        let selected_count = this.$('.gallery-file .checkbox-field input:checked').length,\n            selected_header;\n        selected_header = xabber.getQuantityString(`media_gallery_selected_${this.$('.media-gallery-items-wrap').attr('data-value')}_header`, selected_count);\n        this.$('.gallery-selection-head').text(selected_header);\n\n        this.$('.gallery-file .checkbox-field input:checked').closest('.gallery-file').addClass('selected-gallery-file');\n        this.$('.gallery-file .checkbox-field input:not(:checked)').closest('.gallery-file').removeClass('selected-gallery-file');\n    },\n\n    deleteSelectedFiles: function () {\n        this.$('.gallery-file .checkbox-field input:checked').each((idx, item) => {\n            let file_id = $(item).closest('.gallery-file').attr('data-id');\n            if (file_id){\n                if (this.$('.media-gallery-items-wrap').attr('data-value') === 'avatars'){\n                    this.deleteAvatar({target: item});\n                } else {\n                    this.deleteFile({target: item});\n                }\n            }\n        })\n        this.disableFilesSelect();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files) {\n            this.account.prepareFiles(files, this.openStoragePanel.bind(this));\n            $(target).val('')\n        }\n    },\n});\n\nxabber.DeleteFilesFromGalleryView = xabber.BasicView.extend({\n    className: 'modal main-modal delete-files-modal',\n    ps_selector: '.modal-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    template: templates.delete_files_media_gallery,\n    events: {\n        \"click .btn-confirm\": \"deleteFilesFiltered\",\n        \"click .btn-delete-files-percent\": \"deletePercent\",\n        \"click .btn-cancel\": \"close\",\n        \"click .gallery-file\": \"onClickFile\",\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.gallery_view = options.gallery_view;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.$el.removeClass('wide-deletion');\n        this.$('.media-gallery-delete-items-wrap').addClass('hidden');\n        this.$('.deletion-variants').removeClass('hidden');\n        this.$('.modal-footer').addClass('hidden');\n        this.$('.gallery-files').addClass('hidden');\n        this.$('.list-variant.tab').addClass('hidden');\n        this.$('.delete-files-preview-container').addClass('hidden');\n        this.$('.setting-name').addClass('hidden');\n        this.$('.delete-files-preview-wrap .gallery-files').html('');\n        this.$('.media-gallery-delete-items-wrap .no-files').addClass('hidden');\n        this.$('.modal-header').text(xabber.getString(\"media_gallery_delete_files\"));\n        this.updateScrollBar();\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target),\n            gallery;\n\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.gallery_view.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    deletePercent: function (ev) {\n        let $target = $(ev.target).closest('.btn-delete-files-percent'),\n            percent = $target.attr('data-value');\n        this.$el.addClass('wide-deletion');\n        this.$('.deletion-variants').addClass('hidden');\n        this.$('.modal-header').text(xabber.getString(\"media_gallery_delete_files_header\"));\n        this.updateScrollBar();\n        let options = {percent: percent}\n        this.current_page_preview = 1\n        $(env.templates.contacts.preloader()).appendTo(this.$('.modal-content'))\n        this.getFilesForDeletion(options);\n    },\n\n    getFilesForDeletion: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id'}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        console.log(response)\n                        let current_page = this.current_page_preview;\n                        if (current_page < response.total_pages){\n                            this.current_page_preview++;\n                            options.page = this.current_page_preview;\n                            this.getFilesForDeletion(options)\n                        } else {\n                            this.$('.preloader-wrapper').remove();\n                            this.$('.modal-footer').removeClass('hidden');\n                            this.$('.media-gallery-delete-items-wrap').removeClass('hidden');\n                            this.updateScrollBar();\n                        }\n                        this.renderForDeletion(response);\n                        if (current_page === 1 && response.items && response.items.length){\n                            this.date_lte_for_deletion = response.items[0].created_at;\n                        } else if (current_page === 1) {\n                            this.$('.media-gallery-delete-items-wrap .no-files').removeClass('hidden');\n                        }\n                    },\n                    error: (response) => {\n                        console.log(response)\n                        this.$('.preloader-wrapper').remove();\n                        this.$('.media-gallery-delete-items-wrap .no-files').removeClass('hidden');\n                        this.updateScrollBar();\n                    }\n                });\n            }\n        });\n    },\n\n    renderForDeletion: function (response) {\n        if (response.items && response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                let duration;\n                item.metadata && item.metadata.duration && (duration = utils.pretty_duration(item.metadata.duration));\n                let $gallery_file = $(templates.media_gallery_account_file({\n                    file: item,\n                    svg_icon: utils.file_type_icon_svg(item.media_type),\n                    filesize: utils.pretty_size(item.size),\n                    created_at: utils.pretty_date(item.created_at),\n                    duration: duration,\n                    download_only: true,\n                }));\n                if (item.media_type && item.media_type.includes('image')){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-images'));\n                    this.$('.delete-files-images').removeClass('hidden');\n                } else if (item.media_type && item.media_type.includes('video')){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-videos'));\n                    this.$('.delete-files-videos').removeClass('hidden');\n                } else if (item.media_type && item.media_type.includes('+voice')){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-voices'));\n                    this.$('.delete-files-voices').removeClass('hidden');\n                } else {\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-files'));\n                    this.$('.delete-files-files').removeClass('hidden');\n                }\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n            let dropdown_settings = {\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'right'\n            };\n            this.$('.dropdown-button').dropdown(dropdown_settings)\n            this.$('.list-variant.tab:not(.hidden)').length && this.$('.list-variant.tab:not(.hidden)').first().click();\n            this.updateScrollBar();\n        }\n    },\n\n    deleteFilesFiltered: function (ev) {\n        if (!this.date_lte_for_deletion)\n            return\n\n        utils.dialogs.ask(xabber.getString(\"media_gallery_delete_files_confirm_delete_header\"), xabber.getString(\"media_gallery_delete_files_confirm_delete_text\"),\n            null, { ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (!res)\n                return;\n            $(env.templates.contacts.preloader()).appendTo(this.$('.modal-footer'))\n            this.account.testGalleryTokenExpire(() => {\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                        url: this.account.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({date_lte: this.date_lte_for_deletion}),\n                        success: (response) => {\n                            console.log(response);\n                            this.close();\n                        },\n                        error: (response) => {\n                            this.account.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        this.gallery_view.updateStorage();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.AccountSettingsModalView = xabber.BasicView.extend({\n    className: 'settings-panel-wrap',\n    template: templates.account_settings_modal,\n    ps_selector: '.settings-panel',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_SETTINGS_LEFT,\n\n    events: {\n        \"click .background-overlay\": \"closeSettings\",\n        \"change .main-info-wrap .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-back\": \"showSettings\",\n        \"click .btn-back-settings\": \"backToMenu\",\n        \"click .btn-back-subsettings-account\": \"backToSubMenu\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click .settings-tab[data-block-name='status']\": \"openChangeStatus\",\n        \"click .settings-tabs-wrap .settings-tab:not(.delete-account):not(.settings-non-tab)\": \"jumpToBlock\",\n        \"click .tokens-wrap .settings-tab.token-wrap\": \"jumpToBlock\",\n        \"click .settings-tab.delete-account\": \"deleteAccount\",\n        \"click .settings-tab.unregister-account\": \"unregisterAccount\",\n\n        \"change .enabled-state input\": \"setEnabled\",\n        \"change .setting-send-chat-states input\": \"setTypingNotification\",\n        \"change .setting-use-omemo input\": \"setEnabledOmemo\",\n        \"click .btn-change-password\": \"showPasswordView\",\n        \"click .btn-reconnect\": \"reconnect\",\n        \"click\": \"hideResources\",\n        \"change .sync-account\": \"changeSyncSetting\",\n        \"click .btn-delete-settings\": \"deleteSettings\",\n        \"click .color-picker-button\": \"changeColor\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-revoke-token\": \"revokeXToken\",\n        \"click .devices-wrap .btn-revoke-all-tokens\": \"revokeAllXTokens\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .btn-block\": \"openBlockWindow\",\n        \"click .btn-unblock-selected\": \"unblockSelected\",\n        \"click .btn-deselect-blocked\": \"deselectBlocked\",\n        \"click .btn-gallery-sorting\": \"sortFiles\",\n        \"click .btn-select-files\": \"enableFilesSelect\",\n        \"click .all-sessions .device-encryption.active\": \"openFingerprint\",\n        \"click .device-information-trust\": \"openFingerprintDevice\",\n        \"click .btn-purge-keys\": \"purgeKeys\"\n    },\n\n    _initialize: function (options) {\n        if (options.forced_ps_container){\n            this.ps_container = options.forced_ps_container;\n        }\n        this.status_field = new xabber.StatusMessageModalWidget({\n            el: this.$('.status-wrap')[0],\n            model: this.model\n        });\n        this.updateName();\n        this.updateAvatar();\n        this.updateBlocks();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:gallery_token\", this.updateGallery, this);\n        this.model.on(\"activate deactivate\", this.updateBlocks, this);\n        this.model.on(\"destroy\", this.remove, this);\n\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n\n        this.vcard_view = this.addChild('vcard', xabber.AccountVCardModalView,\n            {model: this.model,});\n        this.gallery_view = this.addChild('media-gallery', xabber.AccountMediaGalleryView,\n            {model: this.model, el: this.$('.media-gallery')[0]});\n        this.$('.account-name .value').text(this.model.get('jid'));\n        this.updateStatus();\n        this.updateView();\n        this.showConnectionStatus();\n        this.updateSynchronizationBlock();\n\n        this.model.resources.on(\"change\", this.updateXTokens, this);\n        this.model.resources.on(\"add\", this.updateXTokens, this);\n        this.model.resources.on(\"destroy\", this.updateXTokens, this);\n        this.model.groups.on(\"change\", this.updateGroupsLabel, this);\n        this.model.groups.on(\"add\", this.updateGroupsLabel, this);\n        this.model.groups.on(\"destroy\", this.updateGroupsLabel, this);\n        this.model.session.on(\"change:reconnecting\", this.updateReconnectButton, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.model.settings.on(\"change:to_sync\", this.updateSyncOption, this);\n        this.model.settings.on(\"change:deleted\", this.updateDelSettingsButton, this);\n        this.model.settings.on(\"change:to_sync change:synced\", this.updateSyncState, this);\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"update_omemo_devices\", this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateXTokens, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.settings.on(\"change:encrypted_chatstates\", this.updateEncryptedChatstates, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"activate deactivate\", this.updateView, this);\n        this.model.on(\"change:auth_type\", this.updateView, this);\n        this.model.on(\"destroy\", this.remove, this);\n        if (options && !options.single_account_modal) {\n            $(document).on(\"keyup.account_settings_modal\", (ev) => {\n                if (ev.keyCode === constants.KEY_ESCAPE && this.data.get('visible') && !options.single_account_modal) {\n                    this.closeSettings();\n                }\n            });\n        }\n    },\n\n    render: function (options) {\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.updateCSS();\n\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateGroupsLabel();\n        this.updateView();\n        this.$('.main-resource .client').text(xabber.get('client_name'));\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back-settings').removeClass('hidden');\n        this.$('.btn-back-subsettings-account').addClass('hidden');\n        this.$('.btn-sorting').addClass('hidden');\n        this.$('.settings-panel-head-title').removeClass('hidden');\n        this.$('.media-gallery-button.btn-more').addClass('hidden');\n        this.updateHeight();\n        this.updateBlockedLabel();\n        if (options && options.block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n        return this;\n    },\n\n    updateHeight: function () {\n        let height;\n        if (!this.$('.left-column').hasClass('hidden'))\n            height = this.$('.left-column').height();\n        if (!this.$('.right-column').hasClass('hidden'))\n            height = this.$('.right-column').height();\n        this.ps_container.css('height', height + 'px');\n        this.updateScrollBar();\n    },\n\n    updateBlockedLabel: function () {\n        if (!(this.model.blocklist && this.model.blocklist.list))\n            return;\n\n        let blocked_count = Object.keys(this.model.blocklist.list).length,\n            label_text = blocked_count === 0 ? xabber.getString(\"no_entries\") : xabber.getQuantityString(\"entry_count\", blocked_count);\n        this.$('.settings-tab[data-block-name=\"blocklist\"] .settings-block-label').text(label_text);\n    },\n\n    onScrollY: function () {\n        if (this.getScrollTop() === 0)\n            this.$('.settings-panel-head').removeClass('lined-head');\n        else\n            this.$('.settings-panel-head').addClass('lined-head');\n        if (this.getScrollTop() >= 180)\n            this.$('.settings-account-head').addClass('head-scrolled');\n        else\n            this.$('.settings-account-head').removeClass('head-scrolled');\n    },\n\n    jumpToBlock: function (ev) {\n        this.jumpToBlockHandler(ev);\n    },\n\n    jumpToBlockHandler: function (ev) {\n        if ($(ev.target).closest('.device-encryption').length || $(ev.target).closest('.btn-revoke-token').length)\n            return;\n\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.attr('data-block-name')),\n            block_name = $tab.attr('data-block-name');\n        if (block_name){\n            this.$('.device-more-button.btn-more').hideIf(block_name != 'encryption');\n            if (block_name != 'media-gallery'){\n                this.$('.media-gallery-button.btn-more').addClass('hidden');\n            }\n        }\n        if (block_name === 'password'){\n            xabber.trigger('change_account_password', this.model);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        this.$('.left-column').addClass('hidden');\n        this.$('.right-column').removeClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (block_name === 'media-gallery'){\n            this.gallery_view.$('.media-gallery-items-wrap:not(.delete-files-preview-wrap)').removeClass('select-items-state');\n            this.gallery_view.disableFilesSelect();\n            this.gallery_view.backToMain();\n        }\n        if (block_name === 'blocklist'){\n            this.$('.blocklist-tabs-wrap .tabs .indicator').remove();\n            this.$('.blocklist-tabs-wrap .tabs').tabs();\n            this.$('.blocklist-tabs-wrap .indicator').addClass('ground-color-500');\n        }\n        if (block_name === 'vcard-tab'){\n            this.vcard_view.showEditView(this.$('.vcard'));\n        }\n        if (block_name === 'device-information'){\n            $elem.attr('data-token-uid', $tab.attr('data-token-uid'));\n            this.updateDeviceInformation($tab.attr('data-token-uid'));\n        }\n        this.$('.btn-back-subsettings-account').attr('data-subblock-parent-name', '');\n        if ($tab.closest('.right-column') && $tab.attr('data-subblock-parent-name')) {\n            this.$('.btn-back-settings').addClass('hidden');\n            this.$('.btn-back-subsettings-account').removeClass('hidden');\n            this.$('.btn-back-subsettings-account').attr('data-subblock-parent-name', $tab.attr('data-subblock-parent-name'));\n        }\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToMenu: function (ev) {\n        this.backToMenuHandler(ev);\n    },\n\n    backToMenuHandler: function (ev) {\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToSubMenu: function (ev) {\n        this.backToSubMenuHandler(ev);\n    },\n\n    backToSubMenuHandler: function (ev) {\n        let $tab = $(ev.target).closest('.btn-back-subsettings-account'),\n            block_name = $tab.attr('data-subblock-parent-name');\n        if (!block_name){\n            this.backToMenu(ev);\n            return;\n        }\n        let $elem = this.$('.settings-block-wrap.' + block_name),\n            elem_parent = $elem.attr('data-parent-block');\n        if (block_name){\n            this.$('.device-more-button.btn-more').hideIf(block_name != 'encryption');\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (elem_parent) {\n            $tab.attr('data-subblock-parent-name', elem_parent);\n            this.deselectBlocked();\n        } else {\n            this.$('.btn-back-settings').removeClass('hidden');\n            this.$('.btn-back-subsettings-account').addClass('hidden');\n        }\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n        this.$('.jid').text(this.model.get('jid'));\n        this.updateNameCSS();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBlocks: function () {\n        let connected = this.model.isConnected();\n        this.$('.main-info-wrap').switchClass('disconnected', !connected);\n        this.$('.settings-tab[data-block-name=\"profile\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"encryption\"]').showIf(connected);\n        this.$('.profile-image-dropdown').showIf(connected);\n        this.$('.set-groupchat-avatar').showIf(connected);\n        this.updateGallery();\n        this.updateScrollBar();\n    },\n\n    updateGallery: function () {\n        let connected = this.model.isConnected();\n        this.$('.settings-tab[data-block-name=\"media-gallery\"]').showIf(connected && this.model.get('gallery_token'));\n    },\n\n    updateNameCSS: function () {\n        if (!this.isVisible())\n            return;\n        let $name = this.$('.name');\n        $name.removeAttr('style');\n        let wrap_width = this.$('.name-wrap').width(),\n            width = $name.width(),\n            font_size = 22;\n        while (width > wrap_width && font_size > 12) {\n            $name.css({'font-size': font_size});\n            width = $name.width();\n            font_size -= 2;\n        }\n        $name.css({'margin-left': (wrap_width - width) / 2});\n    },\n\n    chooseAvatar: function () {\n        if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.model});\n        } else\n            this.$('.main-info-wrap .circle-avatar input').click();\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    closeSettings: function (ev) {\n        xabber.settings_modal_view.closeSettings();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.model});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.model});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE && !(this.model.get('gallery_token') && this.model.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        this.$('.circle-avatar').find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image, hash, size) => {\n            if (image) {\n                this.model.pubAvatar({base64: image, hash: hash, size: size, type: file.type, file: file}, () => {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, () => {\n                    this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n        });\n    },\n\n    updateCSS: function () {\n        this.updateNameCSS();\n    },\n\n    openChangeStatus: function () {\n        !xabber.change_status_view && (xabber.change_status_view = new xabber.ChangeStatusView());\n        xabber.change_status_view.open(this.model);\n    },\n\n    deleteAccount: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__button_quit_account\"), xabber.getString(\"dialog_quit_account__confirm\"),\n            [], { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (!res)\n                return;\n            this.model.deleteAccount(true);\n        });\n    },\n\n    unregisterAccount: function () {\n        xabber.trigger('unregister_account', this.model);\n    },\n\n\n\n\n\n    updateStatus: function () {\n        let account = this.model,\n            status = account.get('status');\n        this.$('.settings-block-wrap.status .settings-subblock-wrap .status').attr('data-status', status);\n\n        this.$('.settings-tab[data-block-name=\"status\"] .settings-block-label').text(this.model.getStatusMessage());\n    },\n\n    updateOmemoDevices: function () {\n        if (this.model.omemo && this.model.omemo.store){\n            let identity_key = this.model.omemo.store.get('identityKey');\n            if (identity_key){\n                this.$('.btn-manage-devices').removeClass('hidden2');\n            } else {\n                this.model.omemo.store.once('change:identityKey', () => {\n                    this.$('.btn-manage-devices').removeClass('hidden2');\n                }, this);\n            }\n        }\n        else\n            this.$('.btn-manage-devices').addClass('hidden2');\n    },\n\n    updateView: function () {\n        let connected = this.model.isConnected();\n        this.$('.connection-wrap .buttons-wrap .btn-change-password').hideIf(this.model.get('auth_type') === 'x-token');\n        this.$('.connection-wrap .buttons-wrap .btn-reconnect').hideIf(this.model.get('auth_type') === 'x-token');\n        this.updateScrollBar();\n    },\n\n    updateSynchronizationBlock: function () {\n        this.updateSyncState();\n        this.updateSyncOption();\n        this.updateDelSettingsButton();\n    },\n\n    showResources: function (ev) {\n        this.$(`.token-resource-wrap`).hideIf(true)\n        let resource_id = $(ev.target).attr('data-resource-id');\n        this.$(`.token-resource-wrap[data-resource-id=\"${resource_id}\"]`).hideIf(false)\n    },\n\n    hideResources: function (ev) {\n        if (!($(ev.target).hasClass('last-auth') && $(ev.target).hasClass('resource') || $(ev.target).closest(\".token-resource-wrap\").length > 0))\n            this.$(`.token-resource-wrap`).hideIf(true)\n    },\n\n    renderAllXTokens: function () {\n        this.$('.sessions-wrap').html(\"\");\n        this.$('.orphaned-fingerprints-wrap').html(\"\");\n        this.$('.device-encryption-warning').addClass('hidden');\n        this.$('.device-encryption-warning').attr('data-not-trusted-count', 0);\n        this.$('.settings-tab[data-block-name=\"devices\"] .settings-block-label').text(xabber.getQuantityString(\"settings_account__devices_subheader_label\", this.model.x_tokens_list.length));\n        $(_.sortBy(this.model.x_tokens_list, '-last_auth')).each((idx, token) => {\n            let pretty_token = {\n                resource_obj: undefined,\n                client: token.client,\n                device: token.device,\n                token_uid: token.token_uid,\n                ip: token.ip,\n                last_auth: pretty_datetime_date(token.last_auth),\n                expire: pretty_datetime(token.expire)\n            };\n            let resource_obj = this.model.resources.findWhere({ token_uid: token.token_uid });\n            if (resource_obj)\n                pretty_token.resource_obj = resource_obj.toJSON();\n            if (this.model.get('x_token')) {\n                if (this.model.get('x_token').token_uid == token.token_uid) {\n                    pretty_token.is_omemo = this.model.omemo ? true : false\n                    let $cur_token_html = $(templates.current_token_item_modal(pretty_token));\n                    this.$('.current-session').append($cur_token_html);\n                    return;\n                }\n            }\n            let $token_html = $(templates.token_item_modal(pretty_token));\n            this.$('.all-sessions').append($token_html);\n            if (this.model.omemo) {\n                !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n                let omemo_device_id = token.omemo_id ? token.omemo_id : Number(pretty_token.token_uid.slice(0,8));\n                this.omemo_own_devices.updateTrustDevice(Number(omemo_device_id), $token_html, this, () => {\n                    if (this.$(`.settings-block-wrap.device-information[data-token-uid=\"${pretty_token.token_uid}\"]`).length\n                        && !this.$(`.settings-block-wrap.device-information[data-token-uid=\"${pretty_token.token_uid}\"]`).hasClass('hidden')){\n                        this.updateDeviceInformation(pretty_token.token_uid);\n                    }\n                });\n            } else {\n                if (token.omemo_id){\n                    $token_html.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n                    $token_html.find('.device-encryption .mdi-lock').removeClass('hidden');\n                }\n            }\n        });\n        if (this.$('.all-sessions').children().length){\n            this.$('.all-sessions-wrap').removeClass('hidden');\n            this.$('.active-sessions-label').removeClass('hidden');\n            this.$('.btn-revoke-all-tokens').removeClass('hidden');\n        }\n        else {\n            this.$('.all-sessions-wrap').addClass('hidden');\n            this.$('.active-sessions-label').addClass('hidden');\n            this.$('.btn-revoke-all-tokens').addClass('hidden');\n        }\n        this.$('.devices-wrap').removeClass('hidden')\n        !this._single_account  && this.$('.token-wrap').attr('data-subblock-parent-name', '');\n        this.updateHeight();\n    },\n\n    updateDeviceInformation: function (token_uid) {\n        let token = this.model.x_tokens_list.find(item => (item.token_uid === token_uid));\n        this.$('.device-information-last-seen').showIf(pretty_datetime(token.last_auth)).find('.device-information-text').text(pretty_datetime(token.last_auth));\n        this.$('.device-information-device').showIf(token.device).find('.device-information-text').text(token.device);\n        this.$('.device-information-client').showIf(token.client).find('.device-information-text').text(token.client);\n        this.$('.device-information-ip').showIf(token.ip).find('.device-information-text').text(token.ip);\n        this.$('.device-information-expires').showIf(pretty_datetime(token.expire)).find('.device-information-text').text(pretty_datetime(token.expire));\n        this.$('.device-information-device-id').showIf(token.omemo_id).find('.device-information-text').text(token.omemo_id);\n        this.$('.device-information-security-label').showIf(token.omemo_id);\n        let resource_obj = this.model.resources.findWhere({ token_uid: token_uid }),\n            status_text;\n        if (resource_obj){\n            status_text = resource_obj.get('status_message') || resource_obj.get('status') && xabber.getString(resource_obj.get('status')) || xabber.getString(\"account_state_connected\");\n        } else if (this.model.get('x_token').token_uid == token.token_uid){\n            status_text = this.model.get('status_message') || this.model.get('status') && xabber.getString(this.model.get('status')) || xabber.getString(\"account_state_connected\")\n        } else\n            status_text = xabber.getString(\"offline\");\n\n        this.$('.device-information-status .device-information-text').text(status_text);\n\n        if (this.model.get('x_token')) {\n            this.$('.btn-revoke-token').hideIf(this.model.get('x_token').token_uid == token.token_uid);\n            this.$('.device-information-trust')\n                .switchClass('hidden', this.model.get('x_token').token_uid == token.token_uid)\n        }\n        if (token.omemo_id && this.model.omemo){\n            let dfd = new $.Deferred(),\n                device = this.model.omemo.own_devices[token.omemo_id];\n            dfd.done((fing) => {\n                if (fing.match(/.{1,8}/g))\n                    fing = fing.match(/.{1,8}/g).join(\" \");\n                this.$('.device-information-fingerprint').showIf(fing).find('.device-information-text').text(fing);\n\n                let $this_device = this.$(`.token-wrap[data-token-uid=\"${token_uid}\"]`)\n\n                this.$('.device-information-trust').removeClass('hidden');\n                this.$('.device-information-trust-text').text($this_device.attr('data-trust-text'));\n                this.$('.device-information-trust').attr('data-trust', $this_device.attr('data-trust'));\n                this.$('.device-information-trust-text').attr('data-trust', $this_device.attr('data-trust'));\n                if (this.model.get('x_token') && this.model.get('x_token').token_uid == token.token_uid){\n                    this.$('.device-information-trust-text').text(xabber.getString(\"settings_account__omemo_enabled\"));\n                    this.$('.device-information-trust').addClass('hidden');\n                    this.$('.device-information-trust').attr('data-trust', 'trust');\n                    this.$('.device-information-trust-text').attr('data-trust', 'trust');\n                }\n            })\n            if (device.get('fingerprint')) {\n                dfd.resolve(device.get('fingerprint'));\n            } else if (device.get('ik')) {\n                device.set('fingerprint', device.generateFingerprint());\n                dfd.resolve(device.get('fingerprint'));\n            } else {\n                device.getBundle().then(({pk, spk, ik}) => {\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    let fingerprint = device.generateFingerprint();\n                    if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                        device.set('fingerprint', fingerprint);\n                    dfd.resolve(device.get('fingerprint'));\n                });\n            }\n        } else {\n            this.$('.device-information-fingerprint').addClass('hidden');\n            this.$('.device-information-trust').addClass('hidden');\n            this.$('.device-information-trust-text').text('');\n            this.$('.device-information-trust').attr('data-trust', '');\n            this.$('.device-information-trust-text').attr('data-trust', '');\n        }\n        this.$('.settings-panel-head span.settings-panel-head-title').text(token.device);\n    },\n\n    openFingerprint: function (ev) {\n        if (this.model.omemo){\n            let $target = $(ev.target).closest('.device-encryption'),\n                is_own = $target.hasClass('is-own');\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            let token = this.model.x_tokens_list.find(item => (item.token_uid === $target.closest('.token-wrap').attr('data-token-uid'))),\n                omemo_device_id = token && token.omemo_id ? token.omemo_id : Number($target.closest('.token-wrap').attr('data-token-uid').slice(0,8));\n            this.omemo_own_devices.open(Number(omemo_device_id), is_own);\n        }\n    },\n\n    openFingerprintDevice: function (ev) {\n        if (this.model.omemo){\n            if ($(ev.target).closest('.device-information-trust.device-information-trust-own').length)\n                return;\n            let $target = $(ev.target).closest('.device-information');\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            let token = this.model.x_tokens_list.find(item => (item.token_uid === $target.attr('data-token-uid'))),\n                omemo_device_id = token && token.omemo_id ? token.omemo_id : Number($target.attr('data-token-uid').slice(0,8));\n            this.omemo_own_devices.open(Number(omemo_device_id), false);\n        }\n    },\n\n    updateXTokens: function () {\n        if (this.model.get('auth_type') !== 'x-token') {\n            this.$('.tokens').addClass('hidden');\n            this.$('.sessions-wrap').children().html(\"\");\n            return;\n        }\n        this.model.getAllXTokens(() => {\n            this.$('.sessions-wrap').html(\"\");\n            if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                this.renderAllXTokens();\n            }\n        });\n    },\n\n    updateGroupsLabel: function () {\n        let groups_count = this.model.groups.length,\n            label_text = groups_count === 0 ? xabber.getString(\"contact_circles_empty\") : xabber.getQuantityString(\"settings_account__section_header_circles\", groups_count);\n\n        this.$('.settings-tab[data-block-name=\"circles-groups\"] .settings-block-label').text(label_text);\n    },\n\n    revokeXToken: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"terminate_session_title\"), xabber.getString(\"terminate_session_text\"),\n            {}, { ok_button_text: xabber.getString(\"button_terminate\")}).done((res) => {\n            if (!res)\n                return;\n            let $target = $(ev.target).closest('.settings-block-wrap.device-information'),\n                token_uid = $target.attr('data-token-uid');\n            this.model.revokeXToken([token_uid], () => {\n                if (this.model.get('x_token')){\n                    if (this.model.get('x_token').token_uid === token_uid) {\n                        this.model.deleteAccount(true);\n                        return;\n                    }\n                    this.model.getAllXTokens(() => {\n                        this.$('.sessions-wrap').html(\"\");\n                        this.$('.btn-back-subsettings-account').length && this.backToSubMenu({target: this.$('.btn-back-subsettings-account')[0]})\n                        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                            this.renderAllXTokens();\n                        }\n                    });\n                }\n            });\n        });\n    },\n\n    revokeAllXTokens: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__dialog_terminate_sessions__header\"), xabber.getString(\"terminate_all_sessions_title\"), null, { ok_button_text: xabber.getString(\"button_terminate\")}).done((result) => {\n            if (result && this.model.x_tokens_list)\n                this.model.revokeAllXTokens(() => {\n                    this.model.getAllXTokens(() => {\n                        this.$('.sessions-wrap').html(\"\");\n                        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                            this.renderAllXTokens();\n                        }\n                    });\n                });\n        });\n    },\n\n    updateSyncState: function () {\n        let state;\n        if (!this.model.settings.get('to_sync'))\n            state = 'off';\n        else\n            state = this.model.settings.get('synced') ? 'yes' : 'no';\n        this.$('.sync-status').text(xabber.getString(constants.SYNCED_STATUS_DATA[state].tip));\n        let mdiclass = constants.SYNCED_STATUS_DATA[state].icon,\n            $sync_icon = this.$('.sync-status-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n    },\n\n    updateSyncOption: function () {\n        this.$('.sync-account').prop('checked', this.model.settings.get('to_sync'));\n    },\n\n    updateDelSettingsButton: function () {\n        this.$('.btn-delete-settings').hideIf(this.model.settings.get('deleted'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateEnabledOmemo: function () {\n        let enabled = this.model.settings.get('omemo'), has_keys = false;\n        if (_.isUndefined(enabled))\n            enabled = false;\n        if (enabled && this.model.omemo_enable_view)\n            this.model.omemo_enable_view.close();\n        this.$('.setting-use-omemo input[type=checkbox]').prop('checked', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        this.$('.device-more-button').switchClass('hidden', !enabled);\n        this.$('.label-encryption-enabled').switchClass('hidden', !enabled);\n        this.$('.label-encryption-disabled').switchClass('hidden', enabled);\n        if (!this.model.omemo){\n            this.$('.btn-manage-devices').addClass('hidden2');\n        }\n        this.updateHeight();\n    },\n\n    updateEncryptedChatstates: function () {\n        let enabled = this.model.settings.get('encrypted_chatstates');\n        this.$('.setting-send-chat-states input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateReconnectButton: function () {\n        this.$('.btn-reconnect').switchClass('disabled', this.model.session.get('reconnecting'));\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n        if (xabber.accounts.length !== 1){\n            this.showSettings();\n        }\n    },\n\n    setEnabledOmemo: function () {\n        let enabled = this.$('.setting-use-omemo input').prop('checked');\n        this.model.settings.save('omemo', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        if (enabled)\n            this.initOmemo();\n        else\n            this.destroyOmemo();\n    },\n\n    setTypingNotification: function () {\n        let enabled = this.$('.setting-send-chat-states input').prop('checked');\n        this.model.settings.save('encrypted_chatstates', enabled);\n    },\n\n    initOmemo: function () {\n        this.model.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.model,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.model.omemo.onConnected();\n            this.updateXTokens();\n        }, 1000);\n    },\n\n    destroyOmemo: function () {\n        this.model.omemo.destroy();\n        this.model.omemo = undefined;\n        this.updateXTokens();\n    },\n\n    openDevicesWindow: function () {\n        if (this.model.omemo) {\n            !this.omemo_devices && (this.omemo_devices = new xabber.Fingerprints({model: this.model.omemo}));\n            this.omemo_devices.open();\n        }\n        else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    purgeKeys: function () {\n        utils.dialogs.ask(xabber.getString('omemo__dialog_purge_keys__header'), xabber.getString('omemo__dialog_purge_keys__text'),\n            null, { ok_button_text: xabber.getString('omemo__dialog_purge_keys__button_purge_keys')}).done((result) => {\n            if (result) {\n                if (this.model.omemo) {\n                    let device_id = this.model.omemo.get('device_id');\n                    this.model.omemo.save('prekeys', {});\n                    this.model.omemo.bundle && (this.model.omemo.bundle.preKeys = []);\n                    if (this.model.omemo.own_devices[device_id]) {\n                        this.model.omemo.own_devices[device_id].preKeys = [];\n                        this.model.omemo.own_devices[device_id].set({ik: null, fingerprint: null});\n                    }\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                } else {\n                    let omemo = new xabber.Omemo({id: 'omemo'}, {\n                        account: this.model,\n                        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                        fetch: 'before'\n                    });\n                    omemo.save('prekeys', {});\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, omemo.get('device_id'));\n                    omemo.destroy();\n                }\n            }\n        });\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    showPasswordView: function () {\n        this.model.password_view.show();\n    },\n\n    reconnect: function () {\n        if (this.model.session.get('reconnecting'))\n            return;\n        this.model.save('enabled', true);\n        if (this.model.connection.connected)\n            this.model.connection.disconnect();\n        else\n            this.model.connect();\n    },\n\n    changeSyncSetting: function (ev) {\n        let to_sync = $(ev.target).prop('checked'),\n            settings = this.model.settings;\n        settings.save('to_sync', to_sync);\n        if (to_sync) {\n            settings.update_timestamp();\n        }\n    },\n\n    deleteSettings: function () {\n        utils.dialogs.ask(xabber.getString(\"progress_title_delete_settings\"), xabber.getString(\"delete_settings_summary\"),\n            [{name: 'delete_account', checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"delete_settings__optional_button__delete_synced_account\")}],{ ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (res) {\n                if (!res.delete_account) {\n                    this.model.settings.save('to_sync', false);\n                } else if (!this.model.settings.get('to_sync')) {\n                    this.model.deleteAccount(true);\n                }\n            }\n        });\n    },\n\n    changeColor: function (ev) {\n        let value = $(ev.target).closest('.color-picker-button').attr('data-color-value');\n        this.model.settings.update_settings({color: value});\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    openBlockWindow: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"dialog_block_xmpp_address__text\"), null, {modal_class: 'account-add-blocked', input_placeholder_value: xabber.getString(\"dialog_block_xmpp_address__hint_address\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let contact = this.model.contacts.get(result);\n                if (contact)\n                    contact.block();\n                else {\n                    this.model.contacts.blockContact(result);\n                }\n            }\n        });\n    },\n\n    unblockSelected: function () {\n        if (this.children && this.children.blocklist){\n            this.children.blocklist.unblockSelected();\n        }\n    },\n\n    deselectBlocked: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.deselectBlocked();\n    },\n\n    sortFiles: function (ev) {\n        if (this.gallery_view)\n            this.gallery_view.sortFiles(ev);\n    },\n\n    enableFilesSelect: function () {\n        if (this.gallery_view)\n            this.gallery_view.enableFilesSelect();\n    },\n});\n\nxabber.AccountSettingsSingleModalView = xabber.AccountSettingsModalView.extend({\n    className: 'single-account-settings-panel-wrap',\n    template: templates.single_account_settings_modal,\n    // ps_selector: '.right-column',\n    // ps_settings: {\n    //     wheelPropagation: true\n    // },\n\n    render: function (view, options, args) {\n        if (!_.isNull(view))\n            return;\n        this.$el.detach();\n        this.parent.$('.single-account-info-wrap').append(this.$el);\n        this.ps_container = this.parent.ps_container;\n        this.gallery_view.render();\n        this._single_account = true;\n\n        this.$el.attr('data-color', this.model.settings.get('color'));\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.updateCSS();\n\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateGroupsLabel();\n        this.updateView();\n        this.$('.main-resource .client').text(xabber.get('client_name'));\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back-settings').removeClass('hidden');\n        this.$('.btn-back-subsettings-account').addClass('hidden');\n        this.updateHeight();\n        this.updateBlockedLabel();\n        if (options && options.account_block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.account_block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n\n        this.parent.single_account_has_rendered = true;\n        return this;\n    },\n\n    jumpToBlock: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').addClass('hidden');\n        this.jumpToBlockHandler(ev);\n    },\n\n    backToMenu: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').removeClass('hidden');\n        this.backToMenuHandler(ev);\n    },\n\n    backToSubMenu: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').addClass('hidden');\n        this.backToSubMenuHandler(ev);\n    },\n\n    updateHeight: function () {\n        this.parent.updateHeight();\n    },\n});\n\nxabber.StatusMessageWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.StatusMessageModalWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n    template: templates.status_message_input_widget,\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.AccountSettingsItemModalView = xabber.BasicView.extend({\n    className: 'xmpp-account draggable droppable',\n    template: templates.global_settings_item_modal,\n    avatar_size: constants.AVATAR_SIZES.SETTINGS_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-info-wrap\": \"showSettings\",\n        \"change .enabled-state input\": \"setEnabled\",\n    },\n\n    _initialize: function () {\n        this.updateEnabled();\n        this.updateNickname();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateSyncState();\n        this.showConnectionStatus();\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"change:vcard\", this.updateNickname, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.$el.on('drag_to', this.onDragTo.bind(this));\n        this.$('.move-account-to-this')\n            .on('move_xmpp_account', this.onMoveAccount.bind(this));\n        this.model.settings.on(\"change:to_sync\", this.updateSyncState, this);\n    },\n\n    updateNickname: function () {\n        let nickname;\n        if (this.model.get('vcard')) {\n            if (this.model.get('vcard').nickname)\n                nickname = this.model.get('vcard').nickname;\n            else if (this.model.get('vcard').fullname)\n                nickname = this.model.get('vcard').fullname;\n            else if (this.model.get('vcard').first_name || this.model.get('vcard').last_name)\n                nickname = this.model.get('vcard').first_name + ' ' + this.model.get('vcard').last_name;\n        }\n        if (nickname){\n            this.$('.nickname').text(nickname);\n            this.$('.jid').text(this.model.get('jid'));\n            this.$('.nickname-wrap').removeClass('single-row');\n            this.$('.jid-wrap').removeClass('hidden');\n        } else {\n            this.$('.nickname').text(this.model.get('jid'));\n            this.$('.nickname-wrap').addClass('single-row');\n            this.$('.jid-wrap').addClass('hidden');\n        }\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showConnectionStatus: function () {\n        // this.$('.status').attr('data-status', this.model.get('status'));\n        // this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$el.switchClass('disabled', !enabled);\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    onDragTo: function (ev, drop_elem) {\n        drop_elem && $(drop_elem).trigger('move_xmpp_account', this.model);\n    },\n\n    onMoveAccount: function (ev, account) {\n        this.model.collection.moveBefore(account, this.model);\n    },\n\n    updateSyncState: function () {\n    },\n\n    showSettings: function () {\n        if (this.model.get('enabled'))\n            this.model.showSettingsModal();\n        else {\n            utils.dialogs.ask_extended(xabber.getString(\"settings_account__enable_account_label\"), xabber.getString(\"settings_account__enable_account_text\", [this.model.get('jid')]),\n                {modal_class: 'modal-offline-account', no_dialog_options: true},\n                {\n                    ok_button_text: xabber.getString(\"button_enable\"),\n                    optional_button: 'delete-account',\n                    optional_button_text: xabber.getString(\"settings_account__button_quit_account\")\n                }).done((res) => {\n                    if (res){\n                        if (res === 'delete-account')\n                            this.model.deleteAccount(null, true);\n                        else {\n                            this.model.save('enabled', true);\n                            this.model.activate();\n                        }\n                    }\n            });\n        }\n    }\n});\n\nxabber.SettingsAccountsModalBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.updateSyncState();\n        this.model.on(\"add\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n        this.model.on(\"add\", this.parent.updateAccounts, this.parent);\n        this.model.on(\"update_order\", this.parent.updateAccounts, this.parent);\n        this.model.on(\"destroy\", this.parent.updateAccounts, this.parent);\n        this.$('.move-account-to-bottom')\n            .on('move_xmpp_account', this.onMoveAccountToBottom.bind(this));\n    },\n\n    updateList: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            if (!view) {\n                view = this.addChild(jid, xabber.AccountSettingsItemModalView, {model: account});\n            }\n            this.$('.no-accounts-tip').before(view.$el);\n        });\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view)\n            view.$el.detach();\n        else\n            view = this.addChild(jid, xabber.AccountSettingsItemModalView, {model: account});\n        let index = this.model.indexOf(account);\n        if (index === 0)\n            this.$('.no-accounts-tip').after(view.$el);\n        else\n            this.$('.xmpp-account').eq(index - 1).after(view.$el);\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    render: function () {\n        this.updateHtml();\n        _.each(this.children, function (view) {\n            view.updateEnabled();\n        });\n    },\n\n    updateHtml: function () {\n        this.$('.no-accounts-tip').hideIf(this.model.length);\n    },\n\n    updateSyncState: function () {\n    },\n\n    onMoveAccountToBottom: function (ev, account) {\n        this.model.moveToBottom(account);\n    }\n});\n\nxabber.ChangeStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.change_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\",\n        \"click .status-message-wrap .clear-input\": \"clearStatusMessageInput\",\n        \"keyup .status-message\": \"keyUp\",\n        \"change .apply-to-all\": \"changeApplyToAll\"\n    },\n\n    open: function (account) {\n        this.account = account;\n        this.highlightStatus(account.get('status'));\n        this.restoreStatusMessageInput();\n        this.show();\n    },\n\n    highlightStatus: function (status) {\n        this.$('.status-values li[data-value=\"'+status+'\"]').addClass('active')\n            .siblings().removeClass('active');\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    restoreStatusMessageInput: function () {\n        let status_message = this.account.get('status_message');\n        this.$('.status-message').val(status_message)\n            .switchClass('filled', status_message);\n        if (!status_message) {\n            this.$('.status-message').attr('placeholder', this.account.getStatusMessage());\n        }\n    },\n\n    clearStatusMessageInput: function () {\n        let verbose_status = xabber.getString(this.account.get('status'));\n        this.$('.status-message').val('').attr('placeholder', verbose_status)\n            .removeClass('filled');\n    },\n\n    keyUp: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.do_change();\n            this.closeModal();\n        } else {\n            let value = this.$('.status-message').val();\n            this.$('.status-message').switchClass('filled', value);\n        }\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value'),\n            status_message = this.$('.status-message').val();\n        if (this.apply_to_all) {\n            xabber.accounts.each(function (account) {\n                account.setStatus(status, status_message);\n            });\n        } else {\n            this.account.setStatus(status, status_message);\n        }\n    },\n\n    changeApplyToAll: function (ev) {\n        this.apply_to_all = $(ev.target).prop('checked');\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SetAvatarView = xabber.BasicView.extend({\n    className: 'modal main-modal avatar-picker background-panel',\n    template: templates.avatars_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addAvatarSelecter\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.contact = options.contact;\n        this.participant = options.participant;\n        this.parent = options.parent;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        this.$('.modal-header span').text(xabber.getString(\"account_set_avatar_header\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    renderFiles: function (response) {\n        this.$('.library-wrap .preloader-wrapper').remove()\n        if (response.items.length){\n            this.current_items = response.items\n            response.items.forEach((item, idx) => {\n                let img = $(`<div class=\"image-item\"/>`);\n                img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                img.attr('data-src', item.file);\n                img.attr('data-id', idx);\n                this.$('.library-wrap').append(img);\n            });\n        }\n    },\n\n    createLibrary: function () {\n        this.model.testGalleryTokenExpire(() => {\n            let options = {order_by: '-id'};\n            if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                this.$('.library-wrap').html(env.templates.contacts.preloader())\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                    url: this.model.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        console.log(response)\n                        this.renderFiles(response)\n                    },\n                    error: (response) => {\n                        this.model.handleCommonGalleryErrors(response)\n                        console.log(response)\n                        this.$('.library-wrap .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.current_file = file;\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addAvatarSelecter: function () {\n        if (this.contact){\n            this.addNotOwnAvatar();\n        } else {\n            this.addAvatar();\n        }\n    },\n\n    addAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                image.type = image.media_type;\n                this.model.pubAvatar(image, () => {\n                    this.current_items = [];\n                    this.close();\n                    this.model.trigger('update_avatar_list');\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.model.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, () => {\n                            this.close();\n                            this.model.trigger('update_avatar_list');\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    addNotOwnAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            participant_node = '';\n        if (this.participant && this.participant.get('id')){\n            participant_node = '#' + this.participant.get('id');\n        }\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                image.type = image.media_type;\n                this.contact.pubAvatar(image, participant_node, () => {\n                    this.current_items = [];\n                    this.close();\n                    if (this.parent && this.participant) {\n                        this.parent.updateMemberAvatar(this.participant, true);\n                    }\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.contact.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, participant_node, () => {\n                            this.close();\n                            if (this.parent && this.participant) {\n                                this.parent.updateMemberAvatar(this.participant, true);\n                            }\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    createFileFromURL: async function (url) {\n        let response = await fetch(url);\n        let data = await response.blob();\n        let metadata = {\n            type: 'image/png'\n        };\n        let file = new File([data], \"avatar.png\", metadata);\n        return file\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.WebcamProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal webcam-panel',\n    template: templates.webcam_panel,\n\n    events: {\n        \"click .btn-save\": \"addAvatarSelecter\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.contact = options.contact;\n        this.participant = options.participant;\n        this.parent = options.parent;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n\n        this.width = 171;\n        this.height = 128;\n        this.streaming = false;\n        this.video = null;\n        this.canvas = null;\n        this.photo = null;\n        this.startbutton = null;\n\n        this.show();\n        this.startupStream();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        if (this.video && this.video.srcObject && this.video.srcObject.getTracks()){\n            let tracks = this.video.srcObject.getTracks()\n            tracks.forEach(function(track) {\n                track.stop();\n            });\n            this.video.srcObject = null\n        }\n        this.$el.detach();\n\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    startupStream: function (ev) {\n        this.video = this.$('.webcam-video')[0];\n        this.canvas = this.$('#canvas')[0];\n        this.photo = this.$('.webcam-photo')[0];\n        this.startbutton = this.$('.btn-take-photo')[0];\n        navigator.mediaDevices.getUserMedia({video: true, audio: false})\n            .then((stream) => {\n                this.video.srcObject = stream;\n                this.video.play();\n            })\n            .catch((err) => {\n                console.log(\"An error occurred: \" + err);\n            });\n\n        this.video.addEventListener('canplay', (ev) => {\n            if (!this.streaming) {\n                if (isNaN(this.height)) {\n                    this.height = this.width / (4/3);\n                }\n                this.video.setAttribute('width', this.width);\n                this.video.setAttribute('height', this.height);\n                this.canvas.setAttribute('width', this.width);\n                this.canvas.setAttribute('height', this.height);\n                this.streaming = true;\n            }\n        }, false);\n\n        this.startbutton.addEventListener('click', (ev) =>{\n            this.takePicture();\n            ev.preventDefault();\n        }, false);\n\n        this.$('.circle-icon')[0].addEventListener('click', (ev) =>{\n            if ($(ev.target).closest('.circle-icon').hasClass('disabled'))\n                return;\n            this.clearPhoto();\n            ev.preventDefault();\n        }, false);\n\n        this.clearPhoto();\n\n    },\n\n\n    clearPhoto: function (ev) {\n        let context = this.canvas.getContext('2d');\n        context.fillStyle = \"#AAA\";\n        context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        let data = this.canvas.toDataURL('image/png');\n        this.photo.setAttribute('src', data);\n        this.$('.btn-take-photo').hideIf(false)\n        this.$('.btn-save').hideIf(true)\n        this.$('.output').hideIf(true)\n    },\n\n\n    takePicture: function (ev) {\n        let context = this.canvas.getContext('2d');\n        this.$('.btn-take-photo').hideIf(true)\n        this.$('.btn-save').hideIf(false)\n        this.$('.output').hideIf(false)\n        if (this.width && this.height) {\n            this.canvas.width = this.width;\n            this.canvas.height = this.height;\n            context.drawImage(this.video, 0, 0, this.width, this.height);\n            context.globalCompositeOperation='destination-in';\n            context.beginPath();\n            context.arc(this.width/2,this.height/2,this.height/2,0,Math.PI*2);\n            context.closePath();\n            context.fill();\n\n            let data = this.canvas.toDataURL('image/png');\n            this.photo.setAttribute('src', data);\n        } else {\n            this.clearPhoto();\n        }\n    },\n\n    addAvatarSelecter: function (ev) {\n        if (this.contact){\n            this.saveNotOwnAvatar();\n        } else {\n            this.saveAvatar();\n        }\n    },\n\n\n    saveAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            });\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            if (this.registration && this.registration_view){\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, ''), this.member_details_avatar_size);\n                this.close();\n            } else {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.$('.circle-icon').addClass('disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n\n    saveNotOwnAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            }),\n            participant_node = '';\n        if (this.participant && this.participant.get('id')){\n            participant_node = '#' + this.participant.get('id');\n        }\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n            this.$('.btn-save').addClass('hidden-disabled');\n            this.$('.circle-icon').addClass('disabled');\n            this.contact.pubAvatar(file, participant_node, () => {\n                this.close();\n                if (this.parent && this.participant) {\n                    this.parent.updateMemberAvatar(this.participant, true);\n                }\n            }, () => {\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            });\n        }\n    },\n});\n\nxabber.EmojiProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel',\n    template: templates.emoji_panel,\n\n    events: {\n        \"click .profile-image-background-color\": \"changeColor\",\n        \"click .avatar-wrap\": \"openEmojiPicker\",\n        \"click .close-modal\": \"close\",\n        \"click .btn-save\": \"addAvatarSelecter\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.contact = options.contact;\n        this.participant = options.participant;\n        this.parent = options.parent;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n        this.emoji_panel_view = this.addChild('emoji_picker_panel', xabber.EmojiPickerView,{})\n        this.show();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    openEmojiPicker: function () {\n        this.emoji_panel_view.open(this);\n    },\n\n    changeColor: function (ev) {\n        let color = $(ev.target).data('value');\n        this.$('.profile-image-background-color').removeClass('chosen-background-color');\n        $(ev.target).addClass('chosen-background-color');\n        this.$('.circle-avatar').attr('class', 'circle-avatar');\n        this.$('.circle-avatar').attr('data-value', color);\n        this.$('.circle-avatar').addClass('ground-color-' + color + '-100');\n    },\n\n    addAvatarSelecter: function (ev) {\n        if (this.contact){\n            this.saveNotOwnAvatar();\n        } else {\n            this.saveAvatar();\n        }\n    },\n\n    saveAvatar: function (ev) {\n        if (this.registration && this.registration_view){\n            let blob = Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"96px EmojiFont\", 176, 176),\n                file = new File([blob], \"avatar.png\", {\n                    type: \"image/png\",\n                });\n            file.generated = true;\n            file.base64 = blob;\n            if (file && file.base64) {\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(blob, this.member_details_avatar_size);\n                xabber._settings.save('main_color', this.$('.circle-avatar').attr('data-value'));\n                xabber.trigger('update_main_color');\n                this.close();\n            }\n        } else {\n            let blob = Images.getBlobImage(Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"96px EmojiFont\", 176, 176)),\n                file = new File([blob], \"avatar.png\", {\n                    type: \"image/png\",\n                });\n            file.base64 = blob;\n            if (file && file.base64) {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n\n    saveNotOwnAvatar: function (ev) {\n        let blob = Images.getBlobImage(Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"96px EmojiFont\", 176, 176)),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            }),\n            participant_node = '';\n        if (this.participant && this.participant.get('id')){\n            participant_node = '#' + this.participant.get('id');\n        }\n        file.base64 = blob;\n        if (file && file.base64) {\n            this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n            this.$('.btn-save').addClass('hidden-disabled');\n            this.contact.pubAvatar(file, participant_node, () => {\n                this.close();\n                if (this.parent && this.participant) {\n                    if (this.participant.get('jid') === this.account.get('jid'))\n                        this.parent.updateMemberAvatar(this.participant, true);\n                }\n            }, () => {\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            });\n        }\n    },\n});\n\nxabber.EmojiPickerView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel emoji-picker',\n    template: templates.emoji_picker,\n\n    events: {\n        \"click .emojis-bottom-tab-selector\": \"pickEmojiTab\",\n        \"click .emoji-picker-emoji\": \"pickEmoji\",\n        \"click .close-modal\": \"close\",\n    },\n\n    open: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n        this.readEmojisJSON()\n        this.show();\n    },\n\n    readEmojisJSON: function () {\n        this.emojis = templates.emojis;\n\n        if (this.emojis.length) {\n            this.$('.emoji-picker-wrap').html(templates.emoji_picker_tabs({\n                emojis: this.emojis\n            }));\n            this.ps_container = this.$('.emojis-tab');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n    },\n\n    render: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container.each((index) => {\n            this.ps_container[index].scrollTop = offset;\n        });\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    pickEmojiTab: function (ev) {\n        let tab = $(ev.target).data('value');\n        this.$('.emojis-bottom-tab-selector').removeClass('chosen-emoji-selector');\n        $(ev.target).addClass('chosen-emoji-selector');\n        this.$('.emojis-tab').removeClass('chosen-emoji-tab').addClass('hidden');\n        this.$(`.emojis-tab[data-value=\"${tab}\"]`).removeClass('hidden').addClass('chosen-emoji-tab');\n        this.scrollToTop();\n    },\n\n    pickEmoji: function (ev) {\n        let emoji = $(ev.target).closest('.emoji-picker-emoji').data('value');\n        this.parent.$('.chosen-emoji').attr('data-value', emoji).text(emoji);\n        this.close();\n    },\n});\n\nxabber.ChangePasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-password-modal',\n    template: templates.change_password,\n\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.$('input[name=jid]').val(this.model.get('jid'));\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        return this;\n    },\n\n    render: function (options) {\n        options || (options = {});\n        this.is_login = options.login;\n        this.token_invalidated = options.token_invalidated;\n        this.$('.modal-header span').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"button_set_pass\"));\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$('.btn-change').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"set\"));\n        this.$el.openModal({\n            use_queue: true,\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n        this.authFeedback({});\n        this.$password_input.val('').focus();\n    },\n\n    getActionName: function () {\n        return this.is_login ? xabber.getString(\"login\") : xabber.getString(\"set\")\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.model.get('jid'),\n            password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (this.model.connection.connected) {\n            this.model.once('deactivate', () => {\n                this.setPassword(password);\n            });\n            this.model.deactivate();\n        } else {\n            this.setPassword(password);\n        }\n    },\n\n    setPassword: function (password) {\n        this.model.last_msg_timestamp = 0;\n        this.model.save({\n            auth_type: 'password',\n            password: utils.utoa(password),\n            enabled: true\n        });\n        this.model.auth_view = this;\n        this.model.connect();\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-change').text(authentication ? xabber.getString(\"stop\") : this.getActionName());\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    successFeedback: function () {\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    endAuth: function (account) {\n        this.model.save('is_new', undefined);\n        this.successFeedback(this.model)\n        this.model.auth_view = null;\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    onQuit: function () {\n        this.closeModal();\n    },\n\n    close: function () {\n        if (this.is_login)\n            this.model.save('enabled', false);\n        if (this.token_invalidated)\n            this.model.deleteAccount();\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.model.auth_view = null;\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ChangeAccountPasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-account-password-modal',\n    template: templates.change_account_password,\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input\": \"keyUp\",\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.$('.original-state').removeClass('hidden');\n        this.$('.success-state').addClass('hidden');\n        this.$old_password_input = this.$('input[name=old_password]');\n        this.$password_input = this.$('input[name=password]');\n        this.$password_confirm_input = this.$('input[name=password_confirm]');\n        this.authFeedback({});\n        this.$password_input.val('');\n        this.$password_confirm_input.val('');\n        this.$old_password_input.val('').focus();\n        this.keyUp();\n    },\n\n    keyUp: function (ev) {\n        ev && ev.keyCode === constants.KEY_ENTER && this.submit();\n        if (this.$old_password_input.val() && this.$password_input.val() && this.$password_confirm_input.val()){\n            this.$('.btn-change').prop('disabled', false);\n        } else {\n            this.$('.btn-change').prop('disabled', true);\n        }\n        this.authFeedback({});\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let jid = this.account.get('jid'),\n            old_password = this.$old_password_input.val(),\n            password = this.$password_input.val(),\n            password_confirm = this.$password_confirm_input.val();\n        if (!old_password)\n            return this.errorFeedback({old_password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (password != password_confirm)\n            return this.errorFeedback({password_confirm: xabber.getString(\"settings_account__alert_passwords_do_not_match\")});\n        old_password = old_password.trim();\n        this.authFeedback({password_confirm: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\"), password_not_error: true});\n        if (!this.account.change_password_connection_manager) {\n            this.account.change_password_view = this;\n            this.account.change_password_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.change_password_connection = this.account.change_password_connection_manager.connection;\n            this.account.change_password_connection.account = this.account;\n            this.account.change_password_connection.register.connect_change_password(jid, old_password, this.account.changePasswordCallback.bind(this.account))\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n        this.$old_password_input.switchClass('invalid', options.old_password)\n            .siblings('span.errors').text(options.old_password || '');\n        this.$password_confirm_input.switchClass('invalid', options.password_confirm && !options.password_not_error)\n            .siblings('span.errors').switchClass('non-error', options.password_not_error).text(options.password_confirm || '');\n        this.parent && this.parent.updateHeight();\n    },\n\n    errorFeedback: function (options) {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.authFeedback(options);\n    },\n\n    successFeedback: function () {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.$('.original-state').addClass('hidden');\n        this.$('.success-state').removeClass('hidden');\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.disconnect();\n        }\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.AuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        return this;\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    onRender: function () {\n        this.account = null;\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$jid_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.$jid_input.val(),\n            password = this.$password_input.val();\n        if (this.data.get('registration')){\n            let domain = this.$('#new_account_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-xmpp-server .property-value').text();\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.errorRegistrationFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            jid = jid + '@' + domain\n        }\n        else if(\n            (this.$('.input-field-jid .xmpp-server-dropdown-wrap').length && !this.$('.input-field-jid .xmpp-server-dropdown-wrap').hasClass('hidden')) &&\n            (this.$('#sign_in_domain') && this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text())\n        ){\n            let domain = this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text();\n            jid = jid + '@' + domain\n        }\n        if (!jid) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        jid = jid.trim();\n        if (!password)  {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n            }\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        if (!this.data.get('registration') && !constants.LOGIN_CUSTOM_DOMAIN && !(constants.LOGIN_DOMAINS.indexOf(Strophe.getDomainFromJid(jid)) > -1))\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__login_custom_domain\")});\n        password = password.trim();\n        let at_idx = jid.indexOf('@');\n        if (at_idx <= 0 || at_idx === jid.length - 1) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n        }\n        jid = Strophe.getBareJidFromJid(jid).toLowerCase();\n        let account = xabber.accounts.get(jid);\n        if (account) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n            }\n            this.errorFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n        } else {\n            if (this.data.get('registration'))\n                this.registerFeedback({registration_success: true, password: xabber.getString(\"account_registration__feedback__text_registration\")});\n            else\n                this.authStepperShow();\n            this.getWebsocketURL(jid, (response) => {\n                this.account = xabber.accounts.create({\n                    jid: jid,\n                    websocket_connection_url: response || constants.CONNECTION_URL,\n                    password: utils.utoa(password),\n                    is_new: true\n                }, {auth_view: this});\n\n                if (this.data.get('registration')) {\n                    this.account.connection.register.connect(jid, this.account.registerCallback.bind(this.account))\n                }\n                else\n                    this.account.trigger('start');\n            });\n        }\n    },\n\n    getWebsocketURL: function (jid, callback) {\n        if (!constants.DISABLE_LOOKUP_WS) {\n            let domain = Strophe.getDomainFromJid(jid),\n                request = {\n                    type: 'GET',\n                    url: window.location.protocol + '//' + domain + '/.well-known/host-meta',\n                    dataType: 'xml',\n                    success: (success) => {\n                        let socket_url = $(success).find('Link').attr('href');\n                        if (socket_url)\n                            callback && callback(socket_url);\n                        else\n                            callback && callback(null);\n                    },\n                    error: () => {\n                        callback && callback(null);\n                    },\n                    timeout: 5000\n                };\n            $.ajax(request);\n        }\n        else\n            callback && callback(null);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n        if (this.account) {\n            this.account.destroy();\n            this.account = null;\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid)\n            .siblings('span.errors').text(options.jid || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    authStepperShow: function (){\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.successFeedback(this.account)\n        this.account.auth_view = null;\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email')\n            xabber.body.setScreen('login', {'login_screen': 'xabber'});\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\nxabber.XmppLoginPanel = xabber.AuthView.extend({\n    className: 'login-panel',\n    template: templates.xmpp_login,\n\n    events: {\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-sign-up-instead\": \"logoutAndRegister\",\n        \"click .btn-register-form\": \"openRegisterForm\",\n        \"click .btn-login-form\": \"openLoginForm\",\n        \"click .btn-register\": \"register\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-go-back-menu\": \"openButtonsMenu\",\n        \"click .btn-go-back\": \"openPreviousStep\",\n        \"click .btn-next\": \"openNextStep\",\n        \"click .btn-skip\": \"registerWithoutAvatar\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=register_nickname]\": \"keyUpNickname\",\n        \"keyup input[name=register_jid]\": \"keyUpJid\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"keyup input[name=register_domain]\": \"keyUpDomain\",\n        \"focusout input[name=register_domain]\": \"focusoutDomain\",\n        \"keyup input[name=register_password]\": \"keyUpPassword\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click #select-xmpp-server .property-variant\": \"changePropertyValueRegistration\",\n        \"click #select-auth-xmpp-server .property-variant\": \"changePropertyValueAuth\",\n    },\n\n    __initialize: function () {\n        this.$nickname_input = this.$('input[name=register_nickname]');\n        this.$domain_input = this.$('input[name=register_domain]');\n        this.data.on(\"change:step\", this.handleRegistrationStep, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.data.set('step', 1)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.registerFeedback({});\n        Materialize.updateTextFields();\n        this.$('.btn-go-back').hideIf(false);\n        this.$('.btn-skip').hideIf(true)\n        this.$nickname_input.val('');\n        this.$jid_input.val('');\n        this.$password_input.val('');\n        this.$('.circle-avatar').css({'background-image': ''});\n        this.$('.circle-avatar').css({'background-color': ''});\n        this.updateButtons();\n        this.updateDomains();\n        this.updateAuthDomains();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.avatar-wrap.dropdown-button').dropdown(dropdown_settings);\n        this.$('.btn-register-form').hideIf(!constants.REGISTRATION_BUTTON);\n        this.$('.btn-login-form').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n        this.$('.register-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.REGISTRATION_CUSTOM_DOMAIN);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        this.updateOptions && this.updateOptions();\n        this.$('#select-xmpp-server').hideIf(xabber.url_params.rkey)\n        this.$('.select-xmpp-server .caret').hideIf(xabber.url_params.rkey)\n        if (xabber.url_params.anchor == 'signup' || xabber.url_params.rkey)\n            this.data.set('step', 2)\n        else if (xabber.url_params.anchor == 'signin')\n            this.data.set('step', 0)\n    },\n\n    openButtonsMenu: function () {\n        this.data.set('step', 1)\n    },\n\n    register: function () {\n        if (this.data.get('registration')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('registration', true);\n        this.$jid_input.prop('disabled', true);\n        this.$password_input.prop('disabled', true);\n        this.submit();\n    },\n\n    login: function () {\n        this.submit();\n    },\n\n    keyUpNickname: function (ev) {\n        if(this.$nickname_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$nickname_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpJid: function (ev) {\n        clearTimeout(this._check_user_timeout);\n        if (!this.$('.btn-next').prop('disabled') && ev && ev.keyCode === constants.KEY_ENTER) {\n            this.openNextStep();\n            return;\n        }\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.REGISTRATION_CUSTOM_DOMAIN){\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'))\n            this.$domain_input.val(this.$jid_input.val().split('@')[1]);\n            this.$jid_input.val(this.$jid_input.val().split('@')[0]);\n            this.$domain_input.focus();\n            return;\n        }\n        this.$('.btn-next').prop('disabled', true);\n        if(this.$jid_input.val()){\n            let regexp_local_part = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))$/,\n                regexp_domain = /^((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n            if (!regexp_local_part.test(this.$jid_input.val()))\n                return this.registerFeedback({jid: xabber.getString(\"account_add__alert_localpart_invalid\")});\n            else if (!(regexp_domain.test(domain)))\n                return this.registerFeedback({domain: xabber.getString(\"account_add__alert_invalid_domain\")});\n            else\n                this.registerFeedback({});\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.registerFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            this._check_user_timeout = setTimeout(() => {\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n                this.$('.btn-next').prop('disabled', true);\n                this._registration_username = this.$jid_input.val()\n                this._registration_domain = domain\n                if (domain) {\n                    if (this.auth_connection && this.auth_connection.domain != domain)\n                        this.auth_connection.disconnect()\n                    if (!this.auth_connection) {\n                        this.getWebsocketURL(domain, (response) => {\n                            this.CONNECTION_URL = response || constants.CONNECTION_URL;\n                            this.auth_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                            this.auth_connection = this.auth_conn_manager.connection;\n                            this.auth_connection.register.connect_check_user(domain, this.checkUserCallback.bind(this))\n                        });\n                    }\n                    else if(this.auth_connection && this.auth_connection.connected) {\n                        this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                            null, \"iq\", null, null);\n                        this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                            {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n                    }\n                }\n                else {\n                    this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                }\n            }, 1000);\n        }\n        else\n            this.registerFeedback({});\n    },\n\n    keyUpPassword: function (ev) {\n        if(this.$password_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$password_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpDomain: function () {\n    },\n\n    keyUpLogin: function (ev) {\n        if(this.$jid_input.val() && this.$password_input.val()){\n            this.$('.btn-log-in').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        this.$('.login-step-wrap').hideIf(true);\n        this.authFeedback({});\n        this.$('.input-field-jid .xmpp-server-dropdown-wrap').hideIf(this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN)\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN){\n            this.$('.input-field-jid').addClass('input-field-jid-borders')\n        }else {\n            this.$('.input-field-jid').removeClass('input-field-jid-borders')\n        }\n        if (ev && this.$jid_input.val() && this.$password_input.val())\n            ev.keyCode === constants.KEY_ENTER && this.login();\n    },\n\n    focusoutDomain: function () {\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    handleRegisterStanza: function (stanza) {\n        let i, query, field, username_taken, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'username') {\n                if (Strophe.getText(field))\n                    this._supports_check_user = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'registered') {\n                username_taken = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        if (this._supports_check_user){\n            if (username_taken)\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, null);\n            else\n                conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n        else\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"not-supported\");\n\n        return false;\n    },\n\n    checkUserCallback: function (status, condition) {\n        if (status === Strophe.Status.REGISTER || status === Strophe.Status.REGIFAIL) {\n            if (!this.$('.select-xmpp-server .property-variant[data-value=\"' + this.auth_connection.register.domain + '\"]').length && constants.REGISTRATION_CUSTOM_DOMAIN) {\n                $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                    .text(this.auth_connection.register.domain)\n                    .attr('data-value', this.auth_connection.register.domain)\n                    .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n            }\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n            this.$('.select-xmpp-server .xmpp-server-item-wrap .property-value').text(this.auth_connection.register.domain)\n                .removeClass('hidden').attr('data-value', this.auth_connection.register.domain);\n        }\n        if (status === Strophe.Status.REGISTER) {\n            if (this.auth_connection && this.auth_connection.connected) {\n                this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                    null, \"iq\", null, null);\n                this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                    {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n            }\n        } else if (status === Strophe.Status.REGISTERED) {\n            this.registerFeedback({user_success: true, jid: xabber.getString(\"xmpp_login__registration_jid_available\")});\n            this.$('.btn-next').prop('disabled', false);\n        } else if (status === Strophe.Status.CONFLICT) {\n            this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_occupied\")});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.CONNFAIL) {\n            this.registerFeedback({jid: xabber.getString(\"CONNECTION_FAILED\") + ': ' + condition});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.REGIFAIL) {\n            if (condition === 'not-supported'){\n                this.registerFeedback({});\n                this.$('.btn-next').prop('disabled', false);\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_not_supported\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_connection.disconnect()\n        } else if (status === Strophe.Status.CONNECTING) {\n            clearTimeout(this._check_user_connection_timeout);\n                this._check_user_connection_timeout = setTimeout(() => {\n                    if(this.auth_connection && !this.auth_connection.connected){\n                        this.auth_connection._no_response = true\n                        this.auth_connection.disconnect()\n                    }\n                }, 10000);\n        } else if (status === Strophe.Status.DISCONNECTED) {\n            if (this.auth_connection && this.auth_connection._no_response) {\n                this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_conn_manager = undefined;\n            this.auth_connection = undefined;\n        }\n    },\n\n    openPreviousStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step--;\n            this.data.set('step', step)\n        }\n    },\n\n    openNextStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step++;\n            this.data.set('step', step)\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.login-form-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-server-features .register-form-step-header').text(xabber.getString(\"signin_checking_features_message\", [this.account.domain]));\n            this.$('.btn-go-back-menu').hideIf(true);\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n        if (step === 0){\n            this.$jid_input = this.$('input[name=jid]');\n            this.$password_input = this.$('input[name=password]');\n            this.$domain_input = this.$('input[name=sign_in_domain]');\n            this.$domain_input.val('')\n            this.$jid_input.val('')\n            this.$password_input.val('')\n            this.keyUpLogin();\n            this.$('.login-step-wrap').hideIf(true);\n            this.authFeedback({});\n            this.resetAuthStepper();\n            this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n            this.$('.login-form-header').text(xabber.getString(\"title_login_xabber_account\"));\n            this.$('.btn-go-back-menu').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(false);\n            this.$('.login-form-jid').hideIf(false);\n            this.$('.login-form-server-features').hideIf(true);\n            this.$('.btn-log-in').hideIf(false);\n            this.$('.btn-finish-log-in').hideIf(true);\n            this.$('.btn-sign-up-instead').hideIf(true);\n            this.$jid_input.focus();\n        }\n        else if (step === 1){\n            this.$('.login-panel-intro').hideIf(false);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(true);\n        }\n        else if (step === 2){\n            this.$jid_input = this.$('input[name=register_jid]');\n            this.$password_input = this.$('input[name=register_password]');\n            this.$domain_input = this.$('input[name=register_domain]');\n            this.keyUpNickname();\n            this.$('.login-form-header').text(xabber.getString(\"title_register_xabber_account\"));\n            this.$('.login-form-url').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(false);\n            this.$('.xmpp-login-form').hideIf(true);\n            this.$('.register-form-nickname').hideIf(false);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(true);\n            this.$nickname_input.focus();\n        }\n        else if (step === 3){\n            if (this.$nickname_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_username\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(false);\n                this.$('.register-form-password').hideIf(true);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpJid();\n                this.$jid_input.focus();\n                this.$password_input.val('');\n            }\n            else {\n                this.registerFeedback({nickname: xabber.getString(\"dialog_add_circle__error__text_input_name\")});\n                return this.data.set('step', 2);\n            }\n\n        }\n        else if (step === 4){\n            if (this.$jid_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_pass\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(true);\n                this.$('.register-form-password').hideIf(false);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpPassword();\n                this.$password_input.focus();\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n                return this.data.set('step', 3);\n            }\n\n        }\n        else if (step === 5){\n            if (this.$password_input.val()) {\n                this.register();\n            }\n            else {\n                this.registerFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                return this.data.set('step', 4);\n            }\n        }\n        else if (step === 6){\n            this.$('.login-form-header').text(xabber.getString(\"xmpp_login__registration_header_avatar\"));\n            this.$('.login-form-url').hideIf(true);\n            this.$('.btn-go-back').hideIf(true);\n            this.$('.btn-skip').hideIf(false)\n            this.$('.register-form-nickname').hideIf(true);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(false);\n            this.$('.btn-next').prop('disabled', true);\n        }\n        else if (step >= 7){\n            if(this.avatar)\n                this.account.pubAvatar(this.avatar, () => {\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            this.successRegistrationFeedback();\n        }\n    },\n\n    registerWithoutAvatar: function () {\n        this.successRegistrationFeedback();\n    },\n\n    logoutAndRegister: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.openRegisterForm()\n    },\n\n    openRegisterForm: function () {\n        this.data.set('step', 2)\n    },\n\n    openLoginForm: function () {\n        this.data.set('step', 0)\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').prop('disabled', authentication);\n    },\n\n    updateDomains: function () {\n        let all_servers = constants.REGISTRATION_DOMAINS;\n        if (xabber.url_params.rkey && all_servers.length){\n            for (let i = all_servers.length - 1; i >= 0; i--) {\n                if (!sha1(all_servers[i]).substr(0, 10).includes(xabber.url_params.rkey.substr(0, 10))){\n                    all_servers.splice(i, 1)\n                }\n            }\n        }\n        this.$('.register-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.register-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.register-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    updateAuthDomains: function () {\n        let all_servers = constants.LOGIN_DOMAINS;\n\n        this.$('.login-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.login-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainAuth(this.$('.login-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.login-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.login-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    setCustomDomainRegistration: function ($property_value) {\n        this.$('#new_account_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        this.$('.select-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    setCustomDomainAuth: function ($property_value) {\n        this.$('#sign_in_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-auth-xmpp-server .caret').addClass('hidden');\n        this.$('.select-auth-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValueRegistration: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainRegistration($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden');\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    changePropertyValueAuth: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainAuth($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-auth-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#sign_in_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-auth-xmpp-server .caret').removeClass('hidden');\n    },\n\n    chooseAvatar: function () {\n        this.$('.circle-avatar input').click();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.avatar = file;\n                this.$('.btn-next').prop('disabled', false);\n                this.$('.circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n            }\n        });\n    },\n\n    successFeedback: function () {\n        this.data.set('step', -1)\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').addClass('server-features-additional-button');\n                                        this.$('.btn-sign-up-instead').hideIf(false);\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6) {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                        this.$('.btn-finish-log-in').addClass('btn-main').removeClass('btn-main-filled')\n                                    }\n                                    else {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                        this.$('.btn-finish-log-in').removeClass('btn-main').addClass('btn-main-filled')\n                                    }\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats', {right: null});\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password);\n        this.$('.login-form-jid .login-password-error').text(options.password || '').showIf(options.password);\n        this.$('.login-form-jid .register-form-step-description').hideIf(options.password || options.jid);\n    },\n\n    resetAuthStepper: function (){\n        this.$(`.login-step .preloader-wrapper`).addClass('active').addClass('visible');\n        this.$(`.login-step .mdi`).hideIf(true);\n        this.$(`.login-step`).removeClass('active-feature')\n        this.$(`.login-step .mdi`).addClass('mdi-alert-circle').removeClass('mdi-checkbox-marked-circle')\n    },\n\n    authStepperShow: function (){\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step`).hideIf(true);\n    },\n\n    authStepperStart: function (){\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            this.$(`.login-step.connecting-step`).addClass('active-feature');\n            this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n            this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n            this.$(`.login-step.credentials-step`).hideIf(false);\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step`).addClass('active-feature');\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                setTimeout(() => {\n                    if (constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1){\n                        this.endAuth();\n                    } else {\n                        this.stepped_auth_complete = true\n                        if (this.first_features_received)\n                            this.successFeedback();\n                    }\n                },timeout_timer)\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    authStepperError: function (auth_error, options){\n        let timeout_timer = 1000;\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        setTimeout(() => {\n            if (auth_error){\n                this.$(`.login-step.connecting-step`).addClass('active-feature');\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                this.$(`.login-step.credentials-step`).hideIf(false);\n            }\n            else {\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n                return;\n            }\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    registerFeedback: function (options) {\n        if(options.user_success) {\n            this.$('.register-form-jid .register-form-step-error').addClass('available').text(options.jid || '').showIf(options.jid);\n            this.$jid_input.removeClass('invalid');\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid);\n        }\n        else if(options.registration_success) {\n            this.$('.register-form-password .register-form-step-error').addClass('available').text(options.password || '').showIf(options.password);\n            this.$password_input.removeClass('invalid');\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n        else {\n            this.$nickname_input.switchClass('invalid', options.nickname);\n            this.$('.register-form-nickname.register-form-step-error').text(options.nickname || '').showIf(options.nickname);\n            this.$('.register-form-nickname .register-form-step-description').hideIf(options.nickname);\n            this.$jid_input.switchClass('invalid', options.jid);\n            this.$domain_input.switchClass('invalid', options.domain);\n            this.$('.register-form-jid .register-form-step-error').removeClass('available').text(options.jid || options.domain || '').showIf(options.jid || options.domain);\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid || options.domain);\n            this.$password_input.switchClass('invalid', options.password);\n            this.$('.register-form-password .register-form-step-error').removeClass('available').text(options.password || '').showIf(options.password);\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n    },\n\n    errorRegistrationFeedback: function (options) {\n        this.registerFeedback(options);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false);\n        if(this.account)\n            this.account.destroy();\n    },\n\n    successRegistrationFeedback: function () {\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false)\n        this.account.trigger('start');\n    },\n});\n\n\nxabber.AddAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal add-account-modal',\n    template: templates.add_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-cancel\": \"logout\",\n        \"click .btn-go-back-menu\": \"close\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.data.set('step', 0)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$domain_input = this.$('input[name=sign_in_domain]');\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        this.updateAuthDomains();\n        this.$('.login-step-wrap').hideIf(true);\n        this.resetAuthStepper();\n        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n        this.$('.modal-header').text(xabber.getString(\"account_add\"));\n        this.$('.login-form-jid').hideIf(false);\n        this.$('.login-form-server-features').hideIf(true);\n        this.$('.btn-log-in').hideIf(false);\n        this.$('.btn-cancel').hideIf(true);\n        this.$('.btn-finish-log-in').hideIf(true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        Materialize.updateTextFields();\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.modal-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n    },\n\n    logout: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.closeModal();\n    },\n\n    endAuth: function () {\n        this.account.save('is_new', undefined);\n        this.data.set('authentication', false);\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n        this.closeModal();\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6)\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                    else\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                    this.$('.btn-cancel').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\n\nxabber.UnregisterAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal unregister-account-modal',\n    template: templates.unregister_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-submit-unregister\": \"submitUnregister\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"change input[type=checkbox]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.authFeedback({});\n        this.data.set('step', 0);\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$('input[type=checkbox]').prop('checked', false);\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        Materialize.updateTextFields();\n    },\n\n    keyUpLogin: function (ev) {\n        let checked_count = this.$('input[type=checkbox]:checked').length;\n        if(this.$password_input.val() && checked_count === 2){\n            this.$('.btn-log-in').prop('disabled', false);\n        } else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        if(this.$jid_input.val() && this.$jid_input.val() === `delete ${this.account.get('jid')} account`){\n            this.$('.btn-submit-unregister').prop('disabled', false);\n        } else {\n            this.$('.btn-submit-unregister').prop('disabled', true);\n        }\n        this.authFeedback({});\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password && !options.password_not_error);\n        this.$('.login-form-jid .login-password-error').switchClass('non-error', options.password_not_error).text(options.password || '');\n    },\n\n    unregisterAccount: function (callback, errback) {\n        let iq = $iq({\n            type: 'set',\n            to: this.connection.domain,\n            from: this.get('jid')\n        }).c('query', {xmlns:Strophe.NS.REGISTER}).c('remove');\n        this.sendIQFast(iq, (success) => {\n                callback & callback(success);\n            },\n            function (error) {\n                errback && errback(error);\n            });\n    },\n\n    login: function (callback, errback) {\n        this.submit()\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\"), password_not_error: true});\n        if (!this.account.unregister_account_connection_manager) {\n            this.account.unregister_account_view = this;\n            this.account.unregister_account_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.unregister_account_connection = this.account.unregister_account_connection_manager.connection;\n            this.account.unregister_account_connection.account = this.account;\n            this.account.unregister_account_connection.register.connect_change_password(this.account.get('jid'), password, this.account.unregisterAccountCallback.bind(this.account))\n        }\n    },\n\n    submitUnregister: function () {\n        this.authFeedback({});\n        if (this.$jid_input.val() !== this.account.get('jid'))\n            return this.errorFeedback({jid: xabber.getString(\"settings_account__unregister_jid_mismatch\")});\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.register.submit_unregister();\n        } else {\n            this.data.set('step', 0);\n            return this.errorFeedback({password: xabber.getString(\"settings_account__connection_broken\")});\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step');\n        if (step === 0){\n            this.$('.login-form-step-wrap').removeClass('hidden');\n            this.$('.btn-log-in').removeClass('hidden');\n            this.$('.btn-submit-unregister').addClass('hidden');\n            this.$('.login-confirm-form-step-wrap').addClass('hidden');\n            this.$('.modal-header span').text(xabber.getString('settings_account__delete_account_modal_title'));\n            this.$('.modal-description-text').text(xabber.getString('settings_account__delete_account_modal_text'));\n        } else if (step === 1) {\n            this.$('.login-form-step-wrap').addClass('hidden');\n            this.$('.btn-log-in').addClass('hidden');\n            this.$('.btn-submit-unregister').removeClass('hidden');\n            this.$('.login-confirm-form-step-wrap').removeClass('hidden');\n            this.$('.modal-header span').text(xabber.getString('settings_account__confirm_delete_account_modal_title'));\n            this.$('.modal-description-text').html(xabber.getString('settings_account__confirm_delete_account_modal_text', [`<nobr>delete ${this.account.get('jid')} account</nobr>`]));\n        }\n    },\n\n    endAuth: function () {\n    },\n\n    checkFeaturesStepper: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.disconnect();\n        }\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.xmpp_login_panel = xabber.login_page.addChild('xmpp_login', this.XmppLoginPanel);\n    this.account_settings_modal = xabber.main_overlay_panel.addChild('account_settings_modal',\n        this.Container, {classlist: 'account-settings-panel'});\n\n    this.accounts = new this.Accounts(null, {\n        storage_name: this.getStorageName() + '-accounts'\n    });\n    this.accounts.fetch();\n\n    this.trigger('accounts_ready');\n\n    this.toolbar_view.addChild('accounts', this.ToolbarAccountsBlockView,\n        {model: this.accounts, el: this.toolbar_view.$('.accounts')[0]});\n    this.settings_modal_view.addChild('accounts_modal', this.SettingsAccountsModalBlockView,\n        {model: this.accounts, el: this.settings_modal_view.$('.accounts-info-wrap')[0]});\n\n\n    this.on(\"add_account\", function () {\n        if (!this.add_account_view)\n            this.add_account_view = new this.AddAccountView();\n        this.add_account_view.show();\n    }, this);\n\n    this.on(\"unregister_account\", function (account) {\n        if (!this.unregister_account_view)\n            this.unregister_account_view = new this.UnregisterAccountView();\n        this.unregister_account_view.show({model: account});\n    }, this);\n\n    this.on(\"change_account_password\", function (account) {\n        if (!this.change_account_password_view)\n            this.change_account_password_view = new this.ChangeAccountPasswordView();\n        this.change_account_password_view.show({model: account});\n    }, this);\n\n    this.on(\"show_delete_files\", function (options) {\n        if (!this.delete_files_view)\n            this.delete_files_view = new this.DeleteFilesFromGalleryView();\n        this.delete_files_view.show(options);\n    }, this);\n\n    $(window).bind('beforeunload',function(){\n        xabber.current_voip_call && xabber.current_voip_call.reject();\n        return;\n    });\n\n    window.onbeforeunload = () => {\n        _.each(this.accounts.connected, function (account) {\n            account.sendPresence('offline');\n        });\n    };\n\n    this.login_page.patchTree = function (tree, options) {\n        let login_screen = options.login_screen || constants.DEFAULT_LOGIN_SCREEN;\n        return login_screen === 'xmpp' ? { xmpp_login: null } : { xabber_login: null };\n    };\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq;\n\nxabber.ClientFeature = Backbone.Model.extend({\n    idAttribute: 'namespace'\n});\n\nxabber.FeatureView = xabber.BasicView.extend({\n    className: 'client-feature',\n    template: function () {\n        this.$el.append('<div class=\"feature-check-icon mdi mdi-24px\"/>')\n                .append('<div class=\"feature-name one-line\"/>');\n        this.$('.feature-check-icon').append(env.templates.svg['check-circle']());\n    },\n\n    _initialize: function (options, attrs) {\n        this.render();\n        this.model.collection.account.settings_account_modal && this.$el.appendTo(this.model.collection.account.settings_account_modal.$('.capabilities'));\n        if (options.single_account && options.single_account.$('.capabilities').length){\n            this.$el.appendTo(options.single_account.$('.capabilities'));\n        }\n        this.model.on(\"change\", this.render, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function () {\n        let name = this.model.get('verbose_name'),\n            supports = this.model.get('supports');\n        this.$('.feature-name').text(name);\n        this.$('.feature-check-icon').showIf(supports);\n    }\n});\n\nxabber.ClientFeatures = Backbone.Collection.extend({\n    model: xabber.ClientFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on('render_settings', this.render, this);\n        this.account.on('render_single_settings', this.renderSingleAccount, this);\n        this.connection = this.account.connection;\n        this.connection.disco.addIdentity(\n            'client',\n            'web',\n            xabber.get('client_name'),\n            'en'\n        );\n        this.addFeature(Strophe.NS.LAST, 'XEP-0012: Last Activity');\n        this.addFeature(Strophe.NS.VCARD, 'XEP-0054: vCard-temp');\n        this.addFeature(Strophe.NS.RSM, 'XEP-0059: Result Set Management');\n        this.addFeature(Strophe.NS.PUBSUB, 'XEP-0060: Publish-Subscribe');\n        this.addFeature(Strophe.NS.REGISTER, 'XEP-0077: In-Band Registration');\n        this.connection.disco.addFeature(Strophe.NS.CHATSTATES);\n        this.addFeature(Strophe.NS.BLOCKING, 'XEP-0191: Blocking Command');\n        this.addFeature(Strophe.NS.PING, 'XEP-0199: XMPP Ping');\n        this.connection.disco.addFeature(Strophe.NS.ATTENTION, 'XEP-0244: Attention');\n        this.addFeature(Strophe.NS.CARBONS, 'XEP-0280: Message carbons');\n        this.addFeature(Strophe.NS.MAM, 'XEP-0313: Message archive management');\n        this.connection.disco.addFeature(Strophe.NS.CHAT_MARKERS);\n        this.connection.disco.addFeature(Strophe.NS.PUBSUB_AVATAR_METADATA + '+notify');\n        this.addFeature(Strophe.NS.HTTP_UPLOAD, 'XEP-0363: HTTP File Upload');\n        this.addFeature(Strophe.NS.SYNCHRONIZATION, 'XEP-SYNC: Client Synchronization');\n        this.addFeature(Strophe.NS.AUTH_DEVICES, 'XEP-DEVICES: HOTP and Device Management');\n        this.addFeature(Strophe.NS.ARCHIVE, 'XEP-ARCHIVED: Archived Chats');\n        this.addFeature(Strophe.NS.DELIVERY, 'XEP-DELIVERY: Reliable message delivery');\n        this.addFeature(Strophe.NS.GROUP_CHAT, 'XEP-GROUPS: Groups');\n        this.addFeature(Strophe.NS.REWRITE, 'XEP-RETRACT: Message Delete and Rewrite');\n    },\n\n    addFeature: function (namespace, verbose_name) {\n        let feature = this.create({\n            namespace: namespace,\n            verbose_name: verbose_name\n        });\n        this.connection.disco.addFeature(namespace);\n    },\n\n    render: function () {\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature});\n        });\n    },\n\n    renderSingleAccount: function (single_account) {\n        single_account.$('.capabilities').html('');\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature, single_account: single_account});\n        });\n    },\n});\n\nxabber.ServerFeature = Backbone.Model.extend({\n    idAttribute: 'var'\n});\n\nxabber.ServerFeatures = Backbone.Collection.extend({\n    model: xabber.ServerFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.connection = this.account.connection;\n        this.on(\"add\", this.onFeatureAdded, this);\n    },\n\n    request: function () {\n        this.account.cached_server_features.getAllFromCachedFeatures((res) => {\n            if (res && res.length){\n                res.forEach((item) => {\n                    this.create({\n                        'var': item.var,\n                        from: item.from\n                    });\n                });\n                this.is_cached = true;\n            } else {\n                this.connection.disco.info(this.account.domain, null, this.onInfo.bind(this));\n            }\n            this.connection.disco.items(this.account.domain, null, this.onItems.bind(this));\n        });\n    },\n\n    onItems: function (stanza) {\n        let groupchat_servers_list = [];\n        $(stanza).find('query item').each((idx, item) => {\n            let jid = $(item).attr('jid'),\n                name = $(item).attr('name'),\n                node = $(item).attr('node');\n            if (node === Strophe.NS.GROUP_CHAT) {\n                groupchat_servers_list.push(jid);\n                this.account.set('groupchat_servers_list', groupchat_servers_list);\n            }\n            this.connection.disco.addItem(jid, name, node, () => {});\n            (!this.is_cached) && this.connection.disco.info(\n                jid,\n                null,\n                this.onInfo.bind(this));\n        });\n    },\n\n    onInfo: function (stanza) {\n        let $stanza = $(stanza),\n            from = $stanza.attr('from'),\n            self = this;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            self.create({\n                'var': namespace,\n                from: from\n            });\n        });\n        $stanza.find('x').each(function () {\n            let form_type_val = $(this).find('field[var=\"FORM_TYPE\"] value');\n            if (form_type_val.length && form_type_val.text() === Strophe.NS.URLDISCO && self.account.domain === from){\n                let media_gallery_url = $(this).find('field[var=\"' + Strophe.NS.MEDIAGALLERY + '\"] value');\n                if (media_gallery_url.length && media_gallery_url.text()){\n                    self.create({\n                        'var': 'media-gallery',\n                        from: media_gallery_url.text()\n                    });\n                }\n            }\n        });\n        if (this.account.auth_view && !(constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1)){\n            this.account.auth_view.first_features_received = true\n            if (this.account.auth_view.stepped_auth_complete)\n                this.account.auth_view.successFeedback();\n        }\n    },\n\n    onFeatureAdded: function (feature) {\n        let _var = feature.get('var'),\n            client_feature = this.account.client_features.get(_var);\n        client_feature && client_feature.set('supports', true);\n        (_var != Strophe.NS.SUBSCRIPTION_PREAPPROVAL && _var != Strophe.NS.SYNCHRONIZATION) && this.account.cached_server_features.putInCachedFeatures({\n            var: _var,\n            from: feature.get('from'),\n        });\n        if (_var === 'media-gallery') {\n            this.account.set('gallery_auth', false)\n            if (!(this.account.get('gallery_token') && this.account.get('gallery_url')) || (this.account.get('gallery_url') != feature.get('from')))\n                this.account.initGalleryAuth(feature);\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.client_features = new xabber.ClientFeatures(null, {account: this});\n    this.server_features = new xabber.ServerFeatures(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.last_stanza_timestamp = moment.now();\n\n    this.connection.deleteHandler(this._last_stanza_handler);\n    this._last_stanza_handler = this.connection.addHandler(() => {\n        this.last_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.connection.deleteHandler(this._pong_handler);\n    this._pong_handler = this.connection.ping.addPingHandler((ping) => {\n        this.last_stanza_timestamp = moment.now();\n        this.connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._main_interval_worker)\n        this._main_interval_worker.terminate();\n\n    this._main_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._main_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n            }\n            console.log('downtime main to disconnect: ' + downtime);\n            console.log(this.connection.connected);\n            if (this.connection.connected)\n                this.connection.disconnect();\n            else\n                this.connect();\n            this._main_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime main to ping: ' + downtime);\n            this.connection && this.connection.ping.ping(this.get('domain'));\n        }\n    };\n\n    this._main_interval_worker.postMessage({});\n\n    this.server_features.request();\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.last_fast_stanza_timestamp = moment.now();\n\n    this.fast_connection.deleteHandler(this._last_fast_stanza_handler);\n    this._last_fast_stanza_handler = this.fast_connection.addHandler(() => {\n        this.last_fast_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.fast_connection.deleteHandler(this._fast_pong_handler);\n    this._fast_pong_handler = this.fast_connection.ping.addPingHandler((ping) => {\n        this.last_fast_stanza_timestamp = moment.now();\n        this.fast_connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._fast_interval_worker)\n        this._fast_interval_worker.terminate();\n\n    this._fast_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._fast_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_fast_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n            }\n            console.log('downtime fast to disconnect: ' + downtime);\n            console.log(this.connection.connected);\n            if (this.fast_connection.connected)\n                this.fast_connection.disconnect();\n            else\n                this.fast_connection.connect('password', this.fast_connection.jid, this.fast_connection.pass);\n            this._fast_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime fast to ping: ' + downtime);\n            this.fast_connection && this.fast_connection.ping.ping(this.get('domain'));\n        }\n    };\n    this._fast_interval_worker.postMessage({});\n}, true, true);\n\nxabber.Account.addConnPlugin(function () {\n    let disco = this.connection.disco;\n    this.connection.addHandler(disco._onDiscoInfo.bind(disco),\n            Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n    this.connection.addHandler(disco._onDiscoItems.bind(disco),\n            Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n}, false, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.contacts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    VanillaQR = env.VanillaQR,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Contact = Backbone.Model.extend({\n    idAttribute: 'jid',\n    defaults: {\n        status: \"offline\",\n        status_message: \"\",\n        subscription: undefined,\n        subscription_request_in: false,\n        subscription_request_out: false,\n        groups: [],\n        group_chat: false\n    },\n\n    initialize: function (_attrs, options) {\n        this.on(\"change:group_chat\", this.onChangedGroupchat, this);\n        this.account = options.account;\n        if (_attrs.avatar) {\n            _attrs.image = _attrs.avatar;\n            delete _attrs.avatar;\n        }\n        let attrs = _.clone(_attrs);\n        if (attrs.resource) {\n            attrs.full_jid = attrs.jid + '/' + attrs.resource;\n        } else if (attrs.group_chat) {\n            attrs.full_jid = attrs.jid + '/Group';\n        }\n        (this.account && this.account.domain === attrs.jid) && _.extend(attrs, {server: true, status: 'online'});\n        attrs.name = attrs.roster_name || attrs.name || attrs.jid;\n        if (!attrs.image) {\n            attrs.photo_hash = \"\";\n            attrs.image = Images.getDefaultAvatar(attrs.name);\n        }\n        if (this.account.blocklist.isBlocked(attrs.jid))\n            attrs.blocked = true;\n        this.cached_image = Images.getCachedImage(attrs.image);\n        attrs.vcard = utils.vcard.getBlank(attrs.jid);\n        this.set(attrs);\n        this.onChangedGroupchat();\n        this.domain = Strophe.getDomainFromJid(this.get('jid'));\n        !this.get('group_chat') && this.account && this.account.chat_settings && this.set('group_chat', _.contains(this.account.chat_settings.get('group_chat'), this.get('jid')));\n        this.hash_id = env.b64_sha1(this.account.get('jid') + '-' + attrs.jid);\n        this.resources = new xabber.ContactResources(null, {contact: this});\n        this.on(\"update_avatar\", this.updateAvatar, this);\n        this.on(\"change:full_jid\", this.updateCachedInfo, this);\n        this.on(\"change:name\", this.updateCachedInfo, this);\n        this.on(\"change:roster_name\", this.updateName, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.account.dfd_presence.done(() => {\n            if (!this.get('blocked') && !this.get('vcard_updated') && !attrs.is_deleted)\n                this.getVCard();\n        });\n    },\n\n    getStatusMessage: function () {\n        let subscription = this.get('subscription'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_text = \"\";\n        if (this.get('blocked'))\n            status_text = xabber.getString(\"action_contact_blocked\");\n        else if (this.get('group_chat')) {\n            if (this.get('group_info')) {\n                if (this.get('group_info').members_num)\n                    status_text += xabber.getQuantityString(\"contact_groupchat_status_member\", this.get('group_info').members_num);\n                if (this.get('group_info').online_members_num > 0)\n                    status_text += xabber.getString(\"contact_groupchat_status_online\", [this.get('group_info').online_members_num || 0]);\n            } else if (!subscription)\n                status_text = xabber.getString(\"contact_state_no_subscriptions\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        } else {\n            if (subscription === 'from') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else\n                    status_text = xabber.getString(\"chat_receives_presence_updates\");\n            } else if (subscription === 'none') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else if (in_request)\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n                else\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n            }\n            else if (!subscription)\n                status_text = xabber.getString(\"contact_state_not_in_contact_list\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        }\n        return status_text;\n    },\n\n    getSubscriptionStatuses: function () {\n        let subscription = this.get('subscription'),\n            subscription_preapproved = this.get('subscription_preapproved'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_description = \"\",\n            status_out_color = \"\",\n            status_in_color = \"\",\n            status_out_text = \"\",\n            status_in_text = \"\";\n        if (this.get('blocked'))\n            status_out_text = xabber.getString(\"action_contact_blocked\");\n        if (subscription === 'both') {\n            status_out_text = xabber.getString(\"subscription_status_out_to\");\n            status_in_text = xabber.getString(\"subscription_status_in_from\");\n            status_description = xabber.getString(\"subscription_status_description_both\");\n        }\n        else if (subscription === 'from') {\n            if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_from\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_from\");\n            }\n        }\n        else if (subscription === 'to') {\n            if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_to_in_allowed\");\n                }\n            }\n        } else if (subscription === 'none') {\n            if (out_request && in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_request_incoming\");\n            }\n            else if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_request_in_allowed\");\n                }\n            }\n            else if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_none_in_allowed\");\n                }\n            }\n        }\n        else if (!subscription)\n            status_out_text = xabber.getString(\"contact_add\");\n\n        if (out_request)\n            status_out_color = \"request\";\n        if (in_request)\n            status_in_color = \"request\";\n        if (subscription === 'to')\n            status_out_color = \"subbed\";\n        if (subscription === 'from')\n            status_in_color = \"subbed\";\n        if (subscription === 'both') {\n            status_out_color = \"subbed\";\n            status_in_color = \"subbed\";\n        }\n        return {\n            status_out: status_out_text,\n            status_in: status_in_text,\n            status_out_color: status_out_color,\n            status_in_color: status_in_color,\n            status_description: status_description,\n        };\n    },\n\n    getIcon: function () {\n        if (this.get('blocked'))\n            return 'blocked';\n        if (this.get('invitation'))\n            return 'group-invite';\n        if (this.get('group_chat')) {\n            if (this.get('jid').includes('redmine_issue_'))\n                return 'task';\n            if (this.get('private_chat'))\n                return 'group-private';\n            if (this.get('incognito_chat'))\n                return 'group-incognito';\n            return 'group-public';\n        }\n        if (this.get('server'))\n            return 'server';\n        if (this.get('bot'))\n            return 'bot';\n        return;\n    },\n\n    updateAvatar: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            if (cached_info && this.get('photo_hash') === cached_info.photo_hash)\n                return;\n            this.getVCard();\n        });\n    },\n\n    getVCard: function (callback) {\n        let jid = this.get('jid'),\n            is_callback = _.isFunction(callback);\n        this.account.getConnectionForIQ().vcard.get(jid,\n             (vcard) => {\n                if (vcard.group_info) {\n                    let group_info = this.get('group_info') || {};\n                    group_info = _.extend(group_info, vcard.group_info);\n                    this.set({group_info});\n                    delete vcard.group_info;\n                }\n                let attrs = {\n                    vcard: vcard,\n                    vcard_updated: moment.now(),\n                    name: this.get('roster_name')\n                };\n                if (!attrs.name) {\n                    if (this.get('group_chat'))\n                        attrs.name = vcard.nickname || this.get('name');\n                    else\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                }\n                if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                    if (vcard.photo.image) {\n                        attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                        attrs.image = vcard.photo.image;\n                    }\n                    else\n                        attrs.image = Images.getDefaultAvatar(attrs.name);\n                    this.cached_image = Images.getCachedImage(attrs.image);\n                }\n                this.set(attrs);\n                is_callback && callback(vcard);\n            },\n            function () {\n                is_callback && callback(null);\n            }\n        );\n    },\n\n    updateCachedInfo: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            cached_info = cached_info || {};\n            let roster_info = {\n                jid: this.get('jid'),\n                in_roster: !_.isUndefined(this.get('in_roster')) ? this.get('in_roster') : cached_info.in_roster,\n                groups: this.get('groups'),\n                subscription: !_.isUndefined(this.get('subscription')) ? this.get('subscription') : cached_info.subscription,\n                roster_name: !_.isUndefined(this.get('roster_name')) ? this.get('roster_name') : cached_info.roster_name,\n                subscription_request_out: this.get('subscription_request_out'),\n                subscription_request_in: this.get('subscription_request_in'),\n                name: this.get('name'),\n                vcard_updated: this.get('vcard_updated')\n            }, full_jid = this.get('full_jid');\n            if (this.get('photo_hash') || this.get('image'))\n                _.extend(roster_info, {\n                    photo_hash: (this.get('photo_hash') || this.account.getAvatarHash(this.get('image'))),\n                    avatar_priority: this.get('avatar_priority'),\n                    avatar: this.get('image')\n                });\n            if (full_jid)\n                roster_info.resource = Strophe.getResourceFromJid(full_jid);\n            this.account.cached_roster.putInRoster(roster_info);\n        });\n    },\n\n    onChangedGroupchat: function () {\n        if (this.get('group_chat') && this.get('removed')) {\n            xabber.error(\"removed contact became groupchat\")\n        }\n        if (this.get('group_chat')) {\n            this.updateCounters();\n            this.participants = new xabber.Participants(null, {contact: this});\n        }\n    },\n\n    onDestroy: function () {\n        if (this.account && this.account.groupchat_settings && this.participants) {\n            this.participants.reset();\n            this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n        }\n    },\n\n    getBlockedParticipants: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.get('full_jid') || this.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#block'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    updateCounters: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    getLastSeen: function() {\n        if (this.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.get('jid'))) {\n                this.set({status_message: 'Server'});\n                return;\n            }\n            let iq = $iq({type: 'get', to: this.get('jid') }).c('query', {xmlns: Strophe.NS.LAST});\n            this.account.sendIQFast(iq, (iq) => {\n                let last_seen = this.getLastSeenStatus(iq);\n                if (this.get('status') == 'offline')\n                    this.set({status_message: last_seen});\n                return this;\n            });\n        }\n    },\n\n    getMyInfo: function (callback) {\n        this.participants.participantsRequest({id: '', properties: true}, (response) => {\n            let $item = $($(response).find('query user')),\n                cached_avatar = this.account.chat_settings.getAvatarInfoById($item.find('id').text());\n            $item.length && this.participants && this.participants.createFromStanza($item, {my_info: true});\n            cached_avatar && (cached_avatar.avatar_hash == this.my_info.get('avatar')) && this.my_info.set('b64_avatar', cached_avatar.avatar_b64);\n            this.trigger('update_my_info');\n            this.participants.participantsRequest({id: ''}, (response) => {\n                let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                this.my_rights = data_form;\n                this.trigger('permissions_changed');\n                callback && callback();\n            });\n        });\n    },\n\n    getAvatar: function (avatar, node, callback, errback) {\n        let jid = this.get('group_chat') ? this.get('full_jid') : this.get('jid'),\n            iq_request_avatar = $iq({type: 'get', to: jid})\n            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n            .c('items', {node: node})\n            .c('item', {id: avatar});\n        this.account.sendIQFast(iq_request_avatar, (iq) => {\n            let pubsub_avatar = $(iq).find('data').text();\n            if (pubsub_avatar == \"\")\n                errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n            else\n                callback && callback(pubsub_avatar);\n        });\n    },\n\n    pubAvatar: function (image, node, callback, errback) {\n        let dfd = new $.Deferred();\n\n        dfd.done((data, http_avatar) => {\n            if (http_avatar) {\n                let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                    iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                        .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                data.thumbnails && data.thumbnails.forEach((thumbnail) => {\n                    iq_pub_metadata.c('thumbnail', {\n                        xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                        url: thumbnail.url,\n                        width: thumbnail.width,\n                        height: thumbnail.height,\n                    }).up()\n                })\n                this.account.sendIQFast(iq_pub_metadata, () => {\n                        callback && callback(avatar_hash);\n                    },\n                    function (data_error) {\n                        errback && errback(data_error);\n                    });\n            }\n            else {\n                let avatar_hash = image.hash || sha1(image.base64),\n                    iq_pub_data = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                    iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                        .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                this.account.sendIQFast(iq_pub_data, () => {\n                        this.account.sendIQFast(iq_pub_metadata, () => {\n                                callback && callback(avatar_hash);\n                            },\n                            function (data_error) {\n                                errback && errback(data_error);\n                            });\n                    },\n                    (data_error) => {\n                        errback && errback(data_error);\n                    });\n            }\n        });\n        if (image.uploaded){\n            dfd.resolve(image, true)\n        }\n        else if (this.account.get('gallery_token') && this.account.get('gallery_url') && !image.generated && !image.uploaded){\n            let file = image.name ? image : image.file;\n            this.account.uploadAvatar(file, (res) => {\n                if (res.thumbnails && res.thumbnails.length || res.file){\n                    res.type = file.type;\n                    dfd.resolve(res, true)\n                } else\n                    dfd.resolve(image.base64)\n            }, (res) => {\n                dfd.resolve(image.base64)\n            });\n        } else\n            dfd.resolve(image.base64)\n    },\n\n    getLastSeenStatus: function(iq) {\n        let seconds = $(iq).children('query').attr('seconds'),\n            message_time = moment.now() - 1000*seconds;\n        this.set({ last_seen: message_time });\n        return xabber.pretty_last_seen(seconds);\n    },\n\n    pres: function (type) {\n        let pres = $pres({to: this.get('jid'), type: type});\n        this.account.sendPres(pres);\n        return this;\n    },\n\n    pushInRoster: function (attrs, callback, errback) {\n        attrs || (attrs = {});\n        let name = attrs.name || this.get('roster_name'),\n            groups = attrs.groups || this.get('groups');\n        let iq = $iq({type: 'set'})\n            .c('query', {xmlns: Strophe.NS.ROSTER})\n            .c('item', {jid: this.get('jid'), name: name});\n        _.each(groups, function (group) {\n            iq.c('group').t(group).up();\n        });\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('known', true);\n        this.set('removed', false);\n        return this;\n    },\n\n    removeFromRoster: function (callback, errback) {\n        if (!this.get('removed')){\n            let iq = $iq({type: 'set'})\n                .c('query', {xmlns: Strophe.NS.ROSTER})\n                .c('item', {jid: this.get('jid'), subscription: \"remove\"});\n            this.account.cached_roster.removeFromRoster(this.get('jid'));\n            this.account.sendIQFast(iq, callback, errback);\n            this.set('known', false);\n            this.set('removed', true);\n            if (this.get('group_chat')){\n                this.set('group_chat', false);\n                this.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n            }\n        }\n        return this;\n    },\n\n    acceptRequest: function (callback) {\n        this.pres('subscribed');\n        callback && callback();\n    },\n\n    askRequest: function (callback) {\n        this.pres('subscribe');\n        callback && callback();\n    },\n\n    blockRequest: function (callback) {\n        this.block(callback);\n    },\n\n    declineRequest: function (callback) {\n        this.pres('unsubscribed');\n        this.removeFromRoster(callback);\n    },\n\n    declineSubscription: function () {\n        this.pres('unsubscribe');\n        this.set('subscription_request_out', false);\n    },\n\n    declineSubscribe: function () {\n        this.pres('unsubscribed');\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', false)\n    },\n\n    deleteWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            header = is_group ? xabber.getString(\"group_remove\") : xabber.getString(\"remove_contact\"),\n            msg_text = is_group ? xabber.getString(\"group_remove_confirm\", [this.get('name').bold()]) : xabber.getString(\"contact_delete_confirm_short\", [this.get('name').bold()]),\n            optional_buttons = is_group ? null : [{ name: 'delete_history', checked: false, text: xabber.getString(\"delete_contact__label_delete_history\")}];\n        utils.dialogs.ask(header, msg_text, optional_buttons, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (is_group) {\n                    let domain = this.domain,\n                        localpart = Strophe.getNodeFromJid(this.get('jid')),\n                        iq = $iq({to: domain, type: 'set'})\n                            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#delete`}).t(localpart);\n                    this.account.sendIQFast(iq, () => {\n                        this.declineSubscription();\n                        let chat = this.account.chats.getChat(this);\n                        this.removeFromRoster();\n                        chat.trigger(\"close_chat\");\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    });\n                } else {\n                    let chat = this.account.chats.getChat(this);\n                    this.removeFromRoster();\n                    if (result.delete_history) {\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    }\n                    xabber.trigger(\"clear_search\");\n                }\n            }\n        });\n    },\n\n    blockWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            contact = this,\n            header = is_group ? xabber.getString(\"block_group__header\") : xabber.getString(\"contact_block\"),\n            buttons = { ok_button_text: xabber.getString(\"contact_bar_block\")},\n            msg_text = xabber.getString(\"block_contact_confirm_short\", [this.get('name').bold()]);\n        if (!is_group) {\n            buttons.optional_button = xabber.getString(\"contact_block_and_delete\");\n            msg_text += `\\n${xabber.getString(\"block_contact_warning\", [this.get('jid')])}`;\n        }\n        utils.dialogs.ask(header, msg_text, null, buttons).done(function (result) {\n            if (result) {\n               if (!is_group) {\n                    let chat = contact.account.chats.getChat(contact);\n                    if (result === 'block & delete') {\n                        contact.removeFromRoster();\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        chat.set('active', false);\n                    }\n                }\n                contact.blockRequest();\n                xabber.trigger(\"clear_search\");\n                if (!is_group)\n                    xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n            }\n        });\n    },\n\n    unblockWithDialog: function () {\n        let contact = this;\n        utils.dialogs.ask(xabber.getString(\"chat_settings__button_unblock_contact\"), xabber.getString(\"unblock_contact_confirm_short\", [this.get('name')]), null, { ok_button_text: xabber.getString(\"contact_bar_unblock\")}).done(function (result) {\n            if (result) {\n                contact.unblock();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n    },\n\n    block: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', true);\n        this.set('known', false);\n    },\n\n    unblock: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', false);\n    },\n\n    setActiveStateSendInterval: function () {\n        let stanza = $msg({to: this.get('jid'), type: 'chat'}).c('active', {xmlns: Strophe.NS.CHATSTATES});\n        clearTimeout(this._sending_active_chatstate_timeout);\n        clearInterval(this._sending_active_chatstate_interval);\n        this._sending_active_chatstate_timeout = setTimeout(() => {\n            this._sending_active_chatstate_interval = setInterval(() => {\n                this.account.sendMsg(stanza);\n            }, constants.PRESENT_INTERVAL);\n        }, constants.PRESENT_INTERVAL)\n    },\n\n    handlePresence: function (presence) {\n        let $presence = $(presence),\n            type = presence.getAttribute('type'),\n            $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCARD_UPDATE}\"]`);\n        if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n            this.set('photo_hash', $vcard_update.find('photo').text());\n            this.trigger('update_avatar');\n        }\n        let $group_chat_info = $(presence).find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`);\n        if ($group_chat_info.length > 0 && $group_chat_info.children().length) {\n            this.set('full_jid', $presence.attr('from'));\n            if (!this.get('group_chat')) {\n                this.set('group_chat', true);\n                this.account.chat_settings.updateGroupChatsList(this.get('jid'), this.get('group_chat'));\n            }\n            let group_chat_info = this.parseGroupInfo($(presence)),\n                prev_group_info = this.get('group_info') || {};\n            _.extend(prev_group_info, group_chat_info);\n            this.set('group_info', prev_group_info);\n            if (!this.get('roster_name') && (prev_group_info.name !== this.get('name')))\n                this.set('name', prev_group_info.name);\n            this.set({status: prev_group_info.status, status_updated: moment.now(), status_message: (prev_group_info.members_num + ' members' + xabber.getString(\"contact_groupchat_status_online\", [prev_group_info.online_members_num || 0]))});\n        }\n        if (type === 'subscribe') {\n            this.set('subscription_request_in', true);\n            if (this.get('subscription_preapproved')) {\n                this.pres('subscribed');\n            } else {\n                this.trigger('presence', this, 'subscribe');\n            }\n        } else if (type === 'subscribed') {\n            if (this.get('group_chat') && (this.get('subscription_request_out') || this.get('subscription') === 'to')) {\n\n            }\n            if (this.get('subscription') === 'to') {\n                // this.pres('subscribed');\n            }\n            this.trigger('presence', this, 'subscribed');\n        } else if (type === 'unsubscribe') {\n            this.set('subscription_request_in', false);\n            if (this.get('group_chat')) {\n                let chat = this.account.chats.getChat(this),\n                    sync_deleted = this.get('sync_deleted');\n                this.removeFromRoster();\n                if (!sync_deleted){\n                    chat.deleteFromSynchronization(() => {\n                        chat.trigger(\"close_chat\");\n                    }, () => {\n                        chat.trigger(\"close_chat\");\n                    });\n                } else {\n                    chat.trigger(\"close_chat\");\n                }\n            }\n        } else if (type === 'unsubscribed') {\n            this.set('subscription_request_out', false);\n            // this.trigger('presence', this, 'unsubscribed');\n        } else {\n            let jid = presence.getAttribute('from'),\n                resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                $status_message = $presence.find('status'),\n                status_message = $status_message.text();\n            _.isNaN(priority) && (priority = 0);\n            clearTimeout(this._reset_status_timeout);\n            let resource_obj = this.resources.get(resource);\n            if (type === 'unavailable') {\n                this.set({ last_seen: moment.now() });\n                resource_obj && resource_obj.destroy();\n            } else {\n                this.set({ last_seen: undefined });\n                let attrs = {\n                    resource: resource,\n                    priority: priority,\n                    status: status\n                };\n                $status_message.length && (attrs.status_message = status_message);\n                if (!resource_obj) {\n                    resource_obj = this.resources.create(attrs);\n                } else {\n                    resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n\n    parseGroupInfo: function ($presence) {\n        let jid = this.get('jid'),\n            $group_chat = $presence.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`),\n            name = $group_chat.find('name').text(),\n            $model = $group_chat.find('membership'),\n            status = $presence.children('show').text() || (($presence.attr('type') === 'unavailable') ? 'unavailable' : 'online'),\n            status_msg = $presence.children('status').text(),\n            privacy = $group_chat.find('privacy').text(),\n            $index = $group_chat.find('index'),\n            $description = $group_chat.find('description'),\n            pinned_message = Number($group_chat.find('pinned-message').text()),\n            prev_pinned_message = this.get('pinned_message') ? this.get('pinned_message').get('stanza_id') : 0,\n            private_chat = $group_chat.find('parent-chat').text() || false,\n            members_num = Number($group_chat.find('members').text()),\n            $online_members_num = $group_chat.find('present'),\n            info = {jid, name, status_msg, privacy, status, members_num};\n        $index.length && (info.searchable = $index.text());\n        $model.length && (info.model = $model.text());\n        $description.length && (info.description = $description.text());\n        $online_members_num.length && (info.online_members_num = Number($online_members_num.text()));\n        private_chat && this.set('private_chat', private_chat);\n        privacy === 'incognito' && this.set('incognito_chat', true);\n        let chat = this.account.chats.get(this.hash_id), pinned_msg_elem;\n        if ($group_chat.find('pinned-message').length) {\n            if (prev_pinned_message != pinned_message) {\n                if (chat) {\n                    if (chat.item_view && !chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    pinned_msg_elem = chat.item_view.content.$pinned_message;\n                }\n                if (pinned_msg_elem) {\n                    if (pinned_message) {\n                        this.getMessageByStanzaId(pinned_message, ($message) => {\n                            this.parsePinnedMessage($message, pinned_msg_elem);\n                        });\n                    }\n                    else {\n                        this.set('pinned_message', undefined);\n                        this.parsePinnedMessage(undefined, pinned_msg_elem);\n                    }\n                }\n            }\n        }\n        return info;\n    },\n\n    getAllRights: function (callback) {\n        let iq_get_rights = $iq({type: 'get', to: this.get('full_jid') || this.get('jid') })\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights` });\n        this.account.sendIQFast(iq_get_rights, (iq_all_rights) => {\n            let all_permissions = $(iq_all_rights).find('permission'),\n                all_restrictions = $(iq_all_rights).find('restriction');\n            this.all_rights = {permissions: all_permissions, restrictions: all_restrictions};\n            callback && callback();\n        });\n    },\n\n    getMessageByStanzaId: function (stanza_id, callback, options) {\n        options = options || {};\n        let queryid = uuid(),\n            account = this.account,\n            is_fast = account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            receiver = this.get('group_chat') ? this.get('full_jid') || this.get('jid') : this.account.get('jid'),\n            iq = $iq({type: 'set', to: receiver})\n                .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                .c('value').t(Strophe.NS.MAM).up().up()\n                .c('field', {'var': 'ids'})\n                .c('value').t(stanza_id).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            if (options.encrypted){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n        }\n        let handler = conn.addHandler((message) => {\n            let $msg = $(message);\n            if ($msg.find('result').attr('queryid') === queryid)\n                callback && callback($msg);\n            return true;\n        }, Strophe.NS.MAM);\n        this.account.sendIQFast(iq, () => {\n                conn.deleteHandler(handler);\n            }, () => {\n                conn.deleteHandler(handler);\n            }\n        );\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            contact = this,\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            if (options.encrypted){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n            iq.c('field', {'var': `with-tags`});\n            if (options.filter_image)\n                iq.c('value').t('image').up();\n            if (options.filter_video)\n                iq.c('value').t('video').up();\n            if (options.filter_voice)\n                iq.c('value').t('voice').up();\n            if (options.filter_files)\n                iq.c('value').t('document').up();\n            iq.up();\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let handler = conn.addHandler(function (message) {\n                if ((contact && is_groupchat == contact.get('group_chat'))) {\n                    let $msg = $(message);\n                    if ($msg.find('result').attr('queryid') === queryid) {\n                        messages.push(message);\n                    }\n                }\n                else {\n                    messages = [];\n                    success = false;\n                }\n                return true;\n            }, Strophe.NS.MAM);\n            let callb = function (res) {\n                    conn.deleteHandler(handler);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                    if ($fin.length && $fin.attr('queryid') === queryid) {\n                        let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                        rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                        callback && callback(success, messages, rsm);\n                    }\n                },\n                errb = function (err) {\n                    conn.deleteHandler(handler);\n                    xabber.error(\"MAM error\");\n                    xabber.error(err);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    errback && errback(err);\n                };\n            if (is_fast)\n                account.sendFast(iq, callb, errb);\n            else\n                account.sendIQ(iq, callb, errb);\n        });\n    },\n\n    getFilesFromStanza: function ($message, options) {\n        $message = options && options.cached_message? $message.find('content') : $message.find('message')\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n            items = [], cached_stanza_id;\n        options && options.cached_stanza_id && (cached_stanza_id = options.cached_stanza_id);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type');\n            if (type === 'mutable') {\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        uniqueid: $message.attr('id') || cached_stanza_id ,\n                        id: $file.children('gallery-id').text(),\n                        created_at: $file.children('created').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        media_type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        file_attrs.has_encrypted_files = true;\n                    }\n                    items.push(file_attrs);\n                }\n            }\n        });\n        return items\n    },\n\n    parsePinnedMessage: function ($message, pinned_msg_elem) {\n        if (!$message) {\n            this.renderPinnedMessage(null, pinned_msg_elem);\n        }\n        else {\n            let $msg = $message.find('result message').first();\n            if (this.get('pinned_message'))\n                if (this.get('pinned_message').stanza_id === $msg.find('stanza-id').attr('id'))\n                    return;\n            let message = this.account.chats.receiveChatMessage($message, {pinned_message: true});\n            this.set('pinned_message', message);\n            this.renderPinnedMessage(message, pinned_msg_elem);\n        }\n    },\n\n    renderPinnedMessage: function (message, pinned_msg_elem) {\n        if (!message) {\n            pinned_msg_elem.html(\"\");\n            pinned_msg_elem.siblings('.chat-content').css({'height':'100%'});\n        }\n        else {\n            let images = message.get('images') || [],\n                files = message.get('files') || [],\n                locations = message.get('locations'),\n                fwd_message = message.get('forwarded_message'),\n                fwd_msg_author = null,\n                msg_text = _.escape(message.get('message'));\n            message.get('videos') && message.get('videos').length && (files = files.concat(message.get('videos')));\n            if (fwd_message) {\n                let user_info = fwd_message[0].get('user_info') || {};\n                if (msg_text) {\n                } else if (fwd_message.length > 1)\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", fwd_message.length);\n                else {\n                    msg_text = fwd_message[0].get('message') || fwd_message[0].get('forwarded_message') && xabber.getString(\"forwarded_messages_count_plural_0\", [fwd_message[0].get('forwarded_message').length]);\n                    fwd_msg_author = user_info.nickname || fwd_message[0].get('from_jid') || user_info.id;\n                }\n            }\n            if ((images && images.length) && (files && files.length))\n                msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__attachments\", [images.length + files.length])}</span>`;\n            else {\n                if (images && images.length) {\n                    if (images.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__images_plural_0\")}: </span>` + images[0].name;\n                    if (images.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__images\", images.length)}</span>`;\n                }\n                if (files && files.length) {\n                    if (files.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__files_plural_0\")}: </span>` + files[0].name + ' (' + files[0].size + ')';\n                    if (files.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__files\", files.length)}</span>`;\n                }\n            }\n            if (locations && locations.length) {\n                if (locations.length == 1)\n                    msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__locations_plural_0\")}</span>`;\n                if (locations.length > 1)\n                    msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length)}</span>`;\n            }\n            let participant_info = this.participants.get(message.get('user_info')),\n                participant_nickname = participant_info && participant_info.get('nickname') ? participant_info.get('nickname') : null;\n            let user_info = message.get('user_info') || {},\n                chat_content = this.account.chats.get(this.hash_id).item_view.content,\n                is_scrolled = chat_content.isScrolledToBottom(),\n                msg_author = participant_nickname || user_info.nickname || message.get('from_jid') || user_info.id,\n                pinned_msg = {\n                    author: msg_author,\n                    time: pretty_datetime(message.get('time')),\n                    message: msg_text,\n                    fwd_author: fwd_msg_author\n                },\n                pinned_msg_html = $(templates.group_chats.pinned_message(pinned_msg));\n            pinned_msg_elem.html(pinned_msg_html).emojify('.chat-msg-content', {emoji_size: 18});\n            let height_pinned_msg = pinned_msg_elem.height();\n            pinned_msg_elem.siblings('.chat-content').css({\n                'height': 'calc(100% - ' + height_pinned_msg + 'px)'\n            });\n            if (is_scrolled)\n                chat_content.scrollToBottom();\n            pinned_msg_elem.attr('data-uniqueid', message.get('unique_id'));\n        }\n    },\n\n    resetStatus: function (timeout) {\n        clearTimeout(this._reset_status_timeout);\n        this._reset_status_timeout = setTimeout(() => {\n            this.set({\n                status_updated: moment.now(),\n                status: 'offline',\n                status_message: ''\n            });\n        }, timeout || 5000);\n    },\n\n    searchByParticipants: function (query, callback) {\n        if (!this.participants.version) {\n            this.participants.participantsRequest({}, () => {\n                let participants_list = this.participants.search(query);\n                callback && callback(participants_list);\n            });\n        } else {\n            let participants_list = this.participants.search(query);\n            callback && callback(participants_list);\n        }\n    },\n\n    updateName: function () {\n        if (this.get('roster_name') && this.get('name') !== this.get('roster_name'))\n            this.set('name', this.get('roster_name'));\n    },\n\n    showDetails: function (screen) {\n        if (!this.details_view)\n            this.details_view = (this.get('group_chat')) ? new xabber.GroupChatDetailsView({model: this}) : new xabber.ContactDetailsView({model: this});\n        screen || (screen = 'contacts');\n        xabber.body.setScreen(screen, {right: 'contact_details', contact: this});\n    },\n\n    showDetailsRight: function (screen, options) {\n        let chat = this.account.chats.getChat(this),\n             scrolled_top_chats_view, scrolled_top_chat;\n        if (chat)\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            scrolled_top_chat = chat.item_view.content.getScrollTop()\n        if (xabber.chats_view)\n            scrolled_top_chats_view = xabber.chats_view.getScrollTop();\n        options = options || {};\n        if (!this.details_view_right && !options.encrypted)\n            this.details_view_right = (this.get('group_chat')) ? new xabber.GroupChatDetailsViewRight({model: this}) : new xabber.ContactDetailsViewRight({model: this});\n        if (!this.details_view_right_encrypted && options.encrypted)\n            this.details_view_right_encrypted = new xabber.ContactDetailsViewRight({model: this, encrypted: true});\n        screen || (screen = 'contacts');\n        if (xabber.body.screen.get('right_contact') && options.type != 'search' && options.type != 'members' && options.type != 'participant' && !options.right_saved) {\n            this.set('search_hidden', true)\n            xabber.body.setScreen(screen, {right_contact: '', contact: this});\n        }\n        else {\n            if (options.encrypted)\n                xabber.body.setScreen(screen, {right_contact: 'contact_details_encrypted', contact: this});\n            else\n                xabber.body.setScreen(screen, {right_contact: 'contact_details', contact: this});\n            if (this.details_view_right && this.details_view_right.contact_searched_messages_view){\n                this.details_view_right.contact_searched_messages_view.hideSearch();\n                if (options.type === 'search') {\n                    this.details_view_right.contact_searched_messages_view.clearSearch();\n                    this.details_view_right.showSearchMessages();\n                }\n                if (options.type === 'members') {\n                    this.details_view_right.$('.tabs:not(.participant-tabs) .list-variant[data-value=\"participants\"]').click()\n                }\n                this.details_view_right.onScroll()\n            }\n        }\n        if (scrolled_top_chat)\n            chat.item_view.content.scrollTo(scrolled_top_chat);\n        if (scrolled_top_chats_view)\n            xabber.chats_view.scrollTo(scrolled_top_chats_view);\n    },\n});\n\nxabber.SetGroupchatStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.group_chats.set_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\"\n    },\n\n    open: function (contact) {\n        this.contact = contact;\n        this.account = this.contact.account;\n        this.show();\n        this.getStatuses();\n    },\n\n    updateIcons: function () {\n        let ic_name = this.contact.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    highlightStatus: function (status) {\n        this.$(`.status-values li[data-value=\"${status}\"]`).addClass('active')\n            .siblings().removeClass('active');\n        this.updateIcons();\n    },\n\n    getStatuses: function () {\n        let iq_get_properties = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'get'})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`});\n        this.account.sendFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find('x[xmlns=\"' + Strophe.NS.DATAFORM + '\"]'));\n            let status_field = this.data_form.fields.find(field => field.var == 'status'),\n                options = (this.data_form.fields.find(field => field.var == 'status') || []).options || [];\n            if (!options.length || status_field.type == 'fixed') {\n                this.closeModal();\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                return;\n            }\n            this.renderStatuses(options);\n        }, () => {\n            this.closeModal();\n            utils.dialogs.error(xabber.getString(\"set_group_status__error__service_unavailable\"));\n            return;\n        });\n    },\n\n    renderStatuses: function (options) {\n        this.$('.status-values').html(\"\");\n        options.forEach((option) => {\n            let status = option,\n                status_field = this.data_form.fields.find(f => f.var == status.value);\n            if (status_field)\n                status.show = status_field.values[0];\n            else\n                status.show = status.value;\n            let $status_item = $(templates.group_chats.status_item({status}));\n            this.$('.status-values').append($status_item);\n        });\n        this.highlightStatus(this.contact.get('status'));\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value');\n        this.setStatus(status);\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    setStatus: function (status) {\n        if (!this.data_form || this.contact.get('group_info').status === status)\n            return;\n        let iq_set_status = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`}),\n            status_field = this.data_form.fields.find(field => field.var === 'status'),\n            idx = this.data_form.fields.indexOf(status_field);\n        status_field.values = [status];\n        this.data_form.fields[idx] = status_field;\n        iq_set_status = this.account.addDataFormToStanza(iq_set_status, this.data_form);\n        this.account.sendFast(iq_set_status);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ContactItemView = xabber.BasicView.extend({\n    className: 'roster-contact list-item',\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$el.attr({'data-id': uuid(), 'data-jid': this.model.get('jid')});\n        this.$('.jid').text(this.model.get('jid'));\n        this.interval_last;\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.selectView();\n        this.updateGroupChat();\n        this.updateIcon();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:subscription\", this.updateStatus, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatus, this);\n        this.model.on(\"change:private_chat\", this.updateIcon, this);\n        this.model.on(\"change:incognito_chat\", this.updateIcon, this);\n        this.model.on(\"change:bot\", this.updateIcon, this);\n        this.model.on(\"change:blocked\", this.onBlocked, this);\n        this.model.on(\"change:status_message\", this.updateStatusMsg, this);\n        this.model.on(\"change:last_seen\", this.lastSeenUpdated, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n    },\n\n    updateAvatar: function () {\n        this.$('.circle-avatar').setAvatar(this.model.cached_image, this.avatar_size);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n        this.$('.chat-icon').attr('data-status', this.model.get('status'));\n        this.$('.status-message').text(this.model.getStatusMessage());\n        if (this.model.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.model.get('jid'))) {\n                this.model.set({status_message: 'Server'});\n                return;\n            }\n            if (this.model.get('last_seen')) {\n            let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.model.set({ status_message: new_status });\n            }\n        }\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    selectView: function () {\n        if (this.model.get('group_chat')) {\n            this.$('.private-chat').addClass('hidden');\n            this.$('.group_chat').removeClass('hidden');\n        }\n    },\n\n    lastSeenUpdated: function () {\n        if (this.model.get('status') == 'offline' && this.model.get('last_seen') && _.isUndefined(this.interval_last)) {\n            this.interval_last = setInterval(() => {\n                let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                    new_status = xabber.pretty_last_seen(seconds);\n                this.model.set({ status_message: new_status });\n            }, 60000);\n        }\n        else\n        {\n            clearInterval(this.interval_last);\n        }\n    },\n\n    updateGroupChat: function () {\n        let is_group_chat = this.model.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.updateIcon();\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.chat-icon').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    updateStatusMsg: function() {\n        this.$('.status-message').text(this.model.getStatusMessage());\n    }\n});\n\nxabber.ContactItemRightView = xabber.ContactItemView.extend({\n    template: templates.contact_right_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_RIGHT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\",\n        \"mouseover\": \"showJid\",\n        \"mouseleave\": \"hideJid\",\n    },\n\n    showJid: function () {\n        if (this.$('.name').text() !== this.model.get('jid')) {\n            this.$('.status-message').addClass('hidden');\n            this.$('.jid').removeClass('hidden');\n        }\n    },\n\n    hideJid: function () {\n        this.$('.jid').addClass('hidden');\n        this.$('.status-message').removeClass('hidden');\n    },\n\n    clickOnItem: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    }\n});\n\nxabber.ContactItemLeftView = xabber.ContactItemView.extend({\n    template: templates.contact_left_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_LEFT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\"\n    },\n\n    __initialize: function () {\n        this.updateDisplayStatus();\n        this.updateBlockedState();\n        this.updateMutedState();\n        this.updateGroupChat();\n        this.model.on(\"change:display\", this.updateDisplayStatus, this);\n        this.model.on(\"change:blocked\", this.updateBlockedState, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateDisplayStatus: function () {\n        this.$el.switchClass('active', this.model.get('display'));\n    },\n\n    updateBlockedState: function () {\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n    updateMutedState: function () {\n        this.$('.muted-icon').hide();\n    },\n\n    clickOnItem: function () {\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    }\n});\n\nxabber.ContactResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.jid = options.contact.get('jid');\n        this.connection = options.contact.account.connection;\n        this.on(\"add change\", this.onResourceUpdated, this);\n        this.on(\"remove\", this.onResourceRemoved, this);\n    },\n\n    onResourceUpdated: function (resource) {\n        if (resource === this.first()) {\n            this.contact.set({\n                status_updated: moment.now(),\n                status: resource.get('status'),\n                status_message: resource.get('status_message')\n            });\n        }\n    },\n\n    onResourceRemoved: function () {\n        let attrs = {status_updated: moment.now()};\n        if (this.length) {\n            attrs.status = this.first().get('status');\n            attrs.status_message = this.first().get('status_message');\n        } else {\n            attrs.status = 'offline';\n            attrs.status_message = '';\n        }\n        this.contact.set(attrs);\n    }\n});\n\nxabber.ContactResourcesView = xabber.ResourcesView.extend({\n    onResourceAdded: function (resource) {\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactResourcesRightView = xabber.ResourcesView.extend({\n    className: 'modal main-modal resource-modal',\n\n    _initialize: function () {\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    open: function () {\n        if (this.model.length) {\n            this.$el.openModal({\n                ready: () => {\n                    this.$el.html('<svg class=\"details-icon mdi mdi-24px \"></svg><div class=\"resources-wrap\"></div>')\n                    this.$el.find('.details-icon').html(env.templates.svg['ic-jabber']())\n                    this.renderByInit();\n                },\n                // complete: () => {\n                //     this.$el.detach();\n                //     this.data.set('visible', false);\n                // }\n            });\n        }\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceRightView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .details-icon\": \"onClickIcon\"\n    }\n});\n\nxabber.ContactRightVCardView = xabber.VCardRightView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .info-wrap.more\": \"showVCard\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n});\n\nxabber.ContactDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right contact-details-panel',\n    template: templates.contact_details_right,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .list-variant\": \"changeList\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n    },\n\n    _initialize: function (options) {\n        this.encrypted = options.encrypted;\n        this.ps_container = this.$('.panel-content-wrap');\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model, options.encrypted && 'encrypted');\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        if (!this.encrypted){\n            this.contact_edit_view = this.addChild('edit', xabber.ContactEditView,\n                {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        }\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactRightVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        if (this.encrypted){\n            this.$('.btn-search-messages').remove()\n            this.$('.btn-edit').remove()\n            this.$('.btn-qr-code').remove()\n        }\n        this.updateChilds();\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.updateNotifications();\n        this.setButtonsWidth();\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.onScroll();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n    },\n\n    updateChilds: function () {\n        if (this.vcard_view && !this.model.get('vcard_hidden'))\n            this.vcard_view.hideVCard();\n        if (this.contact_edit_view && !this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.header-buttons .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('roster_name') && this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 160){\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-block-wrap .contact-btn').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap):not(.btn-search-messages)').switchClass('non-active', is_blocked);\n        this.$('.contact-mute-dropdown').hideIf(is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.chat.isMuted());\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop() - 120},\n            200,\n            () => {\n                this.onScroll();\n        });\n        this.$('.header-buttons .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, encrypted: this.encrypted, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.GroupChatDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right groupchat-details-panel',\n    template: templates.group_chats.group_chat_details_right,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-clear-history-chat\": \"clearHistory\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"showRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .description-edit-wrap .btn-choose-image\": \"chooseAvatar\",\n        \"click .description-edit-wrap .btn-selfie\": \"makeSelfie\",\n        \"click .description-edit-wrap .btn-emoji-panel\": \"makeEmojiAvatar\",\n        \"click .tabs:not(.participant-tabs) .list-variant\": \"changeList\",\n        \"click .edit-pictured-buttons .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model);\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        this.participants = this.addChild('participants', xabber.ParticipantsViewRight, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.contact_edit_view = this.addChild('edit', xabber.GroupEditView,\n            {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesViewRight, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusViewRight, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit_right = this.addChild('restrictions',\n            xabber.DefaultRestrictionsRightView,\n            {model: this.model, el: this.$('.restrictions-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.circle-avatar.dropdown-button').dropdown(dropdown_settings);\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.onScroll();\n        this.updateChilds();\n        this.updateNotifications();\n        this.updateList('participants');\n        this.setButtonsWidth();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n        return this;\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs.not-edit .indicator').remove();\n        this.$('.tabs.not-edit').tabs();\n        this.$('.tabs.not-edit .indicator').addClass('ground-color-500');\n    },\n\n    updateChilds: function () {\n        if (!this.model.get('vcard_hidden'))\n            this.group_chat_properties.hideVCard();\n        if (!this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n        if (!this.model.get('restrictions_hidden'))\n            this.default_restrictions_edit_right.hideRestrictions();\n        this.model.set('participant_hidden', true);\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    showRestrictions: function (ev) {\n        this.default_restrictions_edit_right.showRestrictions();\n    },\n\n    hideRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', true);\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'));\n        this.showEdit();\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 160) {\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clearHistory: function () {\n        if (this.chat && this.chat.item_view && this.chat.item_view.content && this.chat.item_view.content.head){\n            this.chat.item_view.content.head.clearHistory()\n        }\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                let chat = this.account.chats.getChat(contact);\n                contact.removeFromRoster();\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.header-buttons .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        if (list_name != 'blocked' && list_name != 'invitations') {\n            this.$('.tabs').animate({scrollLeft: $target.position().left - 80}, 400);\n            this.ps_container.animate(\n                {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 120},\n                400,\n                () => {\n                    this.onScroll();\n                });\n            this.$('.header-buttons .block-name.second-text').text($target.text())\n        }\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            if (name === 'invitations' || name === 'blocked'){\n                this.$('.edit-wrap .tabs .list-variant a').removeClass('active');\n                this.$('.edit-wrap .tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            else {\n                this.$('.tabs.not-edit .list-variant a').removeClass('active');\n                this.$('.tabs.not-edit .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func, edit_view;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                edit_view = true;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                edit_view = true;\n                break;\n        };\n        if (constructor_func && edit_view)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-edit-wrap')[0]});\n        else if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    chooseAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.account, contact: this.model, parent: this});\n        } else\n            this.$('.circle-avatar input').click();\n    },\n\n    makeSelfie: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let webcam_panel_view = new xabber.WebcamProfileImageView();\n            webcam_panel_view.open({model: this.account, contact: this.model, parent: this});\n        } else\n            this.$('.circle-avatar input').click();\n    },\n\n    makeEmojiAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let emoji_panel_view = new xabber.EmojiProfileImageView();\n            emoji_panel_view.open({model: this.account, contact: this.model, parent: this});\n        } else\n            this.$('.circle-avatar input').click();\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    }\n});\n\nxabber.GroupChatStatusView = xabber.BasicView.extend({\n    template: templates.group_chats.group_status,\n    events: {\n        \"click .status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatStatusViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_status_right,\n    events: {\n        \"click .group-chat-status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.updateIcon()\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatPropertiesView = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties,\n\n    events: {\n        \"click .group-chat-properties .details-icon\": \"onClickIcon\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            if ($target_info.hasClass('searchable-info-wrap')) {\n                let label_name = $target_info.find('.label').first().text();\n                if (value_text === xabber.getString(\"groupchat_index_type_none\"))\n                    value_text += ' ' + label_name.toLowerCase();\n            }\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties_right,\n\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.hideMoreDescription();\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.update();\n        });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    hideMoreDescription: function (ev) {\n        if (!this.$('.vcard-wrap .info.description').hasClass('short')) {\n            this.$('.vcard-wrap .info.description').addClass('short');\n            this.$('.show-vcard').hideIf(false);\n        }\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesEditView = xabber.BasicView.extend({\n    className: 'modal dialog-modal group-chat-properties-edit',\n\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        \"click .btn-cancel\": \"close\",\n        \"change input\": \"updateSaveButton\",\n        \"keyup .property-wrap .text-field\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model;\n        this.model.on(\"change:name\", this.updateName, this);\n    },\n\n    open: function (data_form) {\n        this.data_form = data_form;\n        let all_fixed = this.data_form.fields.filter(f => f.type == 'fixed' || f.type == 'hidden').length == this.data_form.fields.length;\n        this.$el.html(templates.group_chats.group_chat_properties_edit({all_fixed: all_fixed, fields: data_form.fields, privacy: this.contact.get('incognito_group'), jid: this.model.get('jid')}));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('height', this.$el.height() - 115).perfectScrollbar({theme: 'item-list'});\n                this.updateScrollBar();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateName: function () {\n        this.$('.name-info-wrap').find('.name').find('.value').text(this.model.get('name'));\n    },\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('non-active'))\n            return;\n\n        let has_changes = false,\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            if (value !== new_value) {\n                let field_idx = this.data_form.fields.indexOf(field);\n                field.values = [new_value];\n                this.data_form.fields[field_idx] = field;\n                has_changes = true;\n            }\n        });\n\n        if (has_changes) {\n            iq = this.account.addDataFormToStanza(iq, this.data_form);\n            this.account.sendIQFast(iq, (result) => {\n                let $result  = $(result),\n                    group_info = _.clone(this.contact.get('group_info')),\n                    attrs = {\n                        name: $result.find('field[var=\"name\"] value').text(),\n                        searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                        model: $result.find('field[var=\"membership\"]').children('value').text(),\n                        description: $result.find('field[var=\"description\"] value').text(),\n                        status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n                this.$('button').addClass('non-active');\n                this.close();\n                _.extend(group_info, attrs);\n                this.model.set('group_info', group_info);\n            }, (error) => {\n                this.$('button').addClass('non-active');\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        } else\n            this.$('button').removeClass('non-active');\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            (value !== new_value) && (has_changes = true);\n        });\n        this.$('.btn-save').switchClass('non-active', !has_changes);\n    }\n\n});\n\nxabber.InvitationsView = xabber.BasicView.extend({\n    events: {\n    },\n    status: 'invitations',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.contact.participants.on(\"participants_updated\", this._render, this);\n        this.contact.on(\"invitations_send\", this._render, this);\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateInvitations();\n    },\n\n    updateInvitations: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"groupchat_invitations\"))\n        this.parent.getInvitations((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').find('user').each((idx, item) => {\n                let user = {jid: $(item).attr('jid'), status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').find('user').length)\n                this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showInviteButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user'),\n            member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    },\n\n    revokeInvitationByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    }\n});\n\nxabber.MediaBaseView = xabber.BasicView.extend({\n    status: 'base',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.participant = options.participant;\n        this.encrypted = options.encrypted;\n        this.account = this.contact.account;\n        this.chat = this.account.chats.getChat(this.contact, this.encrypted && 'encrypted');\n        this.temporary_items = []\n        this.parent.ps_container.on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onUpdatedScreen, this);\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.all_messages_loaded = false;\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({}, () => {\n                this.$el.html(\"<div class='gallery-files'></div>\");\n                this.updateMedia();\n            });\n        }\n    },\n\n    onScroll: function () {\n        if (!this.active)\n            return\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && this.last_rsm_message && !this.all_messages_loaded && !this.loading_messages){\n            this.loadMoreFiles();\n        }\n    },\n\n    onUpdatedScreen: function () {\n        let block_height = xabber.body.$el.height() - 320;\n        this.$el.css('min-height', `${block_height}px`);\n    },\n\n    updateForParticipant: function () {\n        this.delegateEvents({})\n        this.parent.ps_container.off('ps-scroll-up.mediagallery').off('ps-scroll-down.mediagallery').on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        this.$('.gallery-file').on('click', (ev) => {\n            this.onClickFile(ev);\n        });\n    },\n\n    getMediaFromDecryptedMessages: function () {\n\n        let dfd = new $.Deferred();\n\n        dfd.done(() => {\n            if (this.filter_type === 'filter_image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n            else if (this.filter_type === 'filter_video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n            else if (this.filter_type === 'filter_voice')\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n            else if (this.filter_type === 'filter_files')\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n            else\n                this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia();\n        }).fail(() => {\n            this.temporary_items = [];\n            this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia()\n        });\n\n        if (this.account.omemo && this.account.omemo.cached_messages){\n\n            let cached_messages = this.account.omemo.cached_messages.getMessages(this.contact);\n\n            for (let [key, value] of Object.entries(cached_messages)) {\n                let msg_items = this.contact.getFilesFromStanza($(value), {cached_message: true, cached_stanza_id: key});\n                if (msg_items.length)\n                    this.temporary_items = this.temporary_items.concat(msg_items);\n            }\n\n            if (this.temporary_items.length){\n\n                let filtered_items = [],\n                    items_count = 0;\n\n                this.temporary_items.forEach((item, idx) => {\n                    if (this.filter_type === 'filter_image' && constants.MIME_TYPES.image.includes(item.media_type) ||\n                        this.filter_type === 'filter_video' && constants.MIME_TYPES.video.includes(item.media_type) ||\n                        this.filter_type === 'filter_voice' && constants.MIME_TYPES.audio.includes(item.media_type) ||\n                        this.filter_type === 'filter_files' &&\n                        !(\n                            constants.MIME_TYPES.image.includes(item.media_type) ||\n                            constants.MIME_TYPES.video.includes(item.media_type) ||\n                            constants.MIME_TYPES.audio.includes(item.media_type)\n                        )){\n                        if (this.filter_type === 'filter_image' && item.sources && item.sources[0]){\n                            this.chat.messages.decryptFile(item.sources[0], item.key).then((result) => {\n                                item.sources[0] = result;\n                                item.thumbnail = null;\n                                filtered_items = filtered_items.concat([item]);\n                                items_count++;\n                                if (items_count === this.temporary_items.length){\n                                    this.temporary_items = filtered_items;\n                                    dfd.resolve();\n                                }\n                            });\n\n                        } else {\n                            filtered_items = filtered_items.concat([item]);\n                            items_count++;\n                        }\n                    } else\n                        items_count++;\n                    if (items_count === this.temporary_items.length){\n                        this.temporary_items = filtered_items;\n                        dfd.resolve();\n                    }\n                });\n            } else {\n                dfd.reject();\n            }\n        } else {\n            dfd.reject();\n        }\n\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.updateMedia(true);\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items;\n    },\n\n    encryptedFilesHandler: function () {\n        let files_count = 0;\n        this.temporary_items = this.filterEncryptedFiles();\n\n        if (this.temporary_items.length)\n            this.temporary_items.forEach((item, idx) => {\n                let source = item.sources[0];\n                if (!item.key){\n                    files_count++;\n                    return;\n                }\n                this.chat.messages.decryptFile(source, item.key).then((result) => {\n                    if (!this.active)\n                        return\n                    item.sources[0] = result\n                    files_count++;\n                    if (files_count === this.temporary_items.length) {\n                        this.updateEncryptedMedia()\n                        this.loading_messages = false;\n                    }\n                });\n            });\n        else {\n            this.updateEncryptedMedia()\n            this.loading_messages = false;\n            if (!this.all_messages_loaded){\n                this.loadMoreFiles();\n            }\n        }\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files').length && this.$el.html(\"<div class='gallery-files'></div>\");\n        this.updateMedia();\n    },\n\n    updateMedia: function (is_loaded) {\n        if (!this.active)\n            return;\n        if (this.temporary_items.length){\n            this.temporary_items.reverse();\n            this.temporary_items.forEach((item) => {\n                if (this.filter_type === 'filter_voice')\n                    item.true_voice = true;\n                let $gallery_file = $(templates.media_item({file: item, is_encrypted: this.encrypted, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                $gallery_file.appendTo(this.$('.gallery-files'));\n            });\n        }\n        this.temporary_items = [];\n        this.$('.gallery-files .gallery-empty').remove();\n        $(templates.media_items_empty()).appendTo(this.$('.gallery-files'));\n        if (this.filter_type === 'filter_image')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_images\")}`);\n        else if (this.filter_type === 'filter_video')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_videos\")}`);\n        else if (this.filter_type === 'filter_voice')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_voice_messages\")}`);\n        this.$('.gallery-files .preloader-wrapper').remove();\n    },\n\n    messagesFileRequest: function (query, callback) {\n        if (!this.active || this.loading_messages)\n            return;\n        let options = query || {},\n            queryid = uuid();\n        this.loading_messages = true;\n        !options.max && (options.max = xabber.settings.mam_messages_limit);\n        !options.after && !options.before && (options.before = '');\n        this.encrypted && (options.encrypted = this.encrypted)\n        this.parent.participant && (options.var = [{var: 'with', value: this.parent.participant.id}]);\n        this.contact.MAMRequest(options, (success, messages, rsm) => {\n            let messages_count = 0;\n            if (this.encrypted) {\n                if (messages.length)\n                    $(templates.preloader()).appendTo(this.$('.gallery-files'));\n                else {\n                    this.loading_messages = false;\n                    callback && callback();\n                    return;\n                }\n            }\n            $(messages).each((idx, message) => {\n                let $message = $(message),\n                    msg_items = [];\n                if (this.encrypted) {\n                    let deferred = new $.Deferred();\n                    deferred.done(($msg) => {\n                        msg_items = this.contact.getFilesFromStanza($msg);\n                        if (msg_items.length)\n                            this.temporary_items = this.temporary_items.concat(msg_items)\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.encryptedFilesHandler();\n                        }\n                    }).fail(() => {\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.all_messages_loaded = true;\n                            this.encryptedFilesHandler();\n                        }\n                    });\n                    this.account.omemo.receiveChatMessage($message, {\n                        searched_message: true,\n                        gallery: true,\n                        query: query\n                    }, deferred);\n                } else{\n                    msg_items = this.contact.getFilesFromStanza($message);\n                    this.account.chats.receiveChatMessage($message, {\n                        searched_message: true,\n                        query: query\n                    });\n                    if (msg_items.length)\n                        this.temporary_items = this.temporary_items.concat(msg_items)\n                }\n            });\n            if (!this.encrypted){\n                this.last_rsm_message = rsm.first;\n                if (!messages.length)\n                    this.all_messages_loaded = true;\n                this.loading_messages = false;\n                (this.filter_type === 'filter_files') && (this.temporary_items = this.temporary_items.filter(file => !(file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files)))));\n                if (!(this.temporary_items.length >= xabber.settings.mam_messages_limit) && this.filter_type === 'filter_files' && !this.all_messages_loaded) {\n                    this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, callback);\n                }else\n                    callback && callback();\n            }\n        }, () => {\n\n        });\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n        else if ($elem.hasClass('mdi-play') || $elem.children('.mdi-play').length) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n        else if ($elem.hasClass('mdi-pause') || $elem.children('.mdi-pause').length) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n        else if (!$elem.parents('.gallery-file-audio-container').length || $elem.closest('.audio-control-time').length) {\n            let $file = $elem.closest('.gallery-file');\n            this.parent.saveScrollBarOffset()\n            xabber.body.data.set('contact_details_view', this.parent)\n            this.chat.getMessageContext($file.data('uniqueid'), {searched_messages: true, encrypted: this.encrypted});\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').length && $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n});\n\nxabber.MediaImagesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.images .gallery-file\": \"onClickFile\",\n    },\n    status: 'image',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_image';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.images.grid').length && this.$el.html(\"<div class='gallery-files images grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n            this.updateMedia(true);\n        });\n    },\n\n});\n\nxabber.MediaVideosView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.videos .gallery-file\": \"onClickFile\",\n    },\n    status: 'video',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_video';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.videos.grid').length && this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaFilesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.files .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_files';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'));\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.files').length && this.$el.html(\"<div class='gallery-files files'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaVoiceView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.voice .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_voice'\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => item.voice)\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => item.voice);\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.voice').length && this.$el.html(\"<div class='gallery-files voice'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => item.voice)\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.BlockedView = xabber.BasicView.extend({\n    status: 'blocked',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateBlockedParticipants();\n    },\n\n    updateBlockedParticipants: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"group_settings__block_list__header\"))\n        this.contact.getBlockedParticipants((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').children().each((idx, item) => {\n                let jid = $(item).attr('jid') ? $(item).attr('jid') : $(item).text(),\n                    user = {jid: jid, status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').children.length)\n                this.$el.append(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showBlockButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    unblockUser: function (ev) {\n        let $member_item = $(ev.target).closest('.blocked-user'),\n            member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    unblockUserByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    blockId: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"contact_bar_block\"), xabber.getString(\"groupchat_dialog_block__text\"), {input_placeholder_value: xabber.getString(\"groupchat_dialog_block__input_placeholder\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let tag = result.includes('@') ? 'jid' : 'domain',\n                    iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                        .c(tag).t(result);\n                this.account.sendIQFast(iq, () => {\n                    this.updateBlockedParticipants()\n                }, function (err) {\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n            }\n        });\n    },\n});\n\nxabber.ParticipantsView = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_selector: '.members-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-block\": \"blockParticipant\",\n        \"click .btn-kick\": \"kickParticipant\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.$(this.ps_selector).perfectScrollbar(this.ps_settings);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.participant_properties_panel = new xabber.ParticipantPropertiesView({model: this.model});\n        this.updateParticipants();\n        this.$('.members-list-wrap').perfectScrollbar({theme: 'item-list'});\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.$el.find('.members-list-wrap tbody').html('');\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        $item_view.emojify('.badge', {emoji_size: 16});\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantsViewRight = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants_right_panel,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-kick\": \"kickParticipantDialog\",\n        \"click .btn-edit-member\": \"showParticipantPropertiesEdit\",\n        \"click .btn-mute\": \"kickParticipantDialog\",\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"change\", this.onParticipantsChanged, this);\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.participant_properties_panel = this.addChild('participant_properties_panel', xabber.ParticipantPropertiesViewRight, {model: this.model, el: this.parent.$('.participant-view-wrap')[0], parent: this.parent});\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onUpdatedScreen, this);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.updateParticipants();\n        return this;\n    },\n\n    onUpdatedScreen: function () {\n        let block_height = xabber.body.$el.height() - 320;\n        this.$el.css('min-height', `${block_height}px`);\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    onParticipantsChanged: function () {\n        this.updateParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        if (this.$('.participants-search-form input').val())\n            this.searchParticipant();\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    let participant = this.participants.get($target.attr('data-id'));\n                    if (participant)\n                        participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    let participant = this.participants.get($target.attr('data-id'));\n                    participant.kick(() => {\n                        $target.remove();\n                        this.parent.updateScrollBar();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item_right(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    showParticipantPropertiesEdit: function (ev) {\n        let $target = $(ev.target),\n            participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n            this.participant_properties_panel.showNamePanel();\n            this.participant_properties_panel.changeBackButton();\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantPropertiesView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_rights,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .btn-cancel-changes\": \"close\",\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"click .participant-details-item:not(.unsubscribed) .nickname\": \"editNickname\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-block-participant\": \"block\",\n        \"click .btn-kick-participant\": \"kick\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.$el.openModal({\n            ready: () => {\n                this.$el.css('height', \"\");\n                if (($(window).height() * 0.1 + this.$el.height()) > $(window).height())\n                    this.$el.css('height', $(window).height() * 0.9);\n                this.$('.modal-content').css('max-height', 'calc(100% - ' + (64 + this.$('.header').height()) + 'px)');\n                this.scrollToTop();\n                this.updateSaveButton();\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n                this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n            },\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    render: function () {\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item(attrs));\n        this.$('.header').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.$('.content').perfectScrollbar({theme: 'item-list'});\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.participant-details-item[data-id=\"${participant_id}\"] .circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        this.$('.participant-details-item[data-id=\"'+ member.id +'\"]').emojify('.badge', {emoji_size: 18});\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            this.close();\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.circle-avatar').addClass('changed').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                            .removeClass('default-value')\n                            .text(moment(Number(attrs.expires)*1000).fromNow());\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                this.account.chats.openChat(contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (!this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-info .nickname').text(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.ParticipantPropertiesViewRight = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_details_right,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n\n    events: {\n        \"click .btn-back:not(.btn-top)\": \"close\",\n        \"click .btn-back.btn-top\": \"scrollToTopSmooth\",\n        'click .btn-edit-participant': 'showNamePanel',\n        'click .btn-back-name': 'hidePanel',\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-reset\": \"render\",\n        \"click .btn-reset-name\": \"resetPanel\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-kick-participant\": \"kickParticipantDialog\",\n        \"click .btn-set-visibility-wrap\": \"setVisibility\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat-participant\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-selfie\": \"makeSelfie\",\n        \"click .btn-emoji-panel\": \"makeEmojiAvatar\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        this.model.set('participant_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.participant.on(\"change:avatar_url\", this.updateMemberAvatar, this);\n        this.data_form = data_form;\n        this.render();\n        this.updateSaveButton();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n        this.$('.circle-avatar.dropdown-button').dropdown(dropdown_settings);\n        this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n    },\n\n    close: function () {\n        this.model.set('participant_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n            this.parent.onScroll();\n        };\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'));\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details_item_right(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item_right(attrs));\n        this.$('.participant-details-info-wrap').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.onScroll();\n        this.participant_name_field = new xabber.ParticipantNameRightWidget({\n            el: this.$('.edit-participant-name-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.participant_badge_field = new xabber.ParticipantBadgeRightWidget({\n            el: this.$('.edit-participant-badge-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.updateIndicator()\n        this.$('.participant-details-edit-wrap').hideIf(true);\n        this.$('.block-name:not(.second-text)').hideIf(true);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    showNamePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(false)\n        this.$('.btn-edit-participant').hideIf(true)\n        this.$('.parent-btn').hideIf(true)\n        this.$('.child-btn').hideIf(false)\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name:not(.second-text)').text(xabber.getString(\"groupchat_member_edit\"));\n        this.$('.block-name:not(.second-text)').hideIf(false);\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participant-details-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    changeBackButton: function () {\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n    },\n\n    hidePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(true)\n        this.$('.btn-edit-participant').hideIf(false)\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n        this.$('.block-name:not(.second-text)').hideIf(true);\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.onScroll();\n    },\n\n    resetPanel: function () {\n        this.participant_name_field.updateValue(true);\n        this.participant_badge_field.updateValue(true);\n        this.new_avatar = \"\";\n        this.updateMemberAvatar(this.participant);\n        this.updateSaveButton()\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block').position().top + this.ps_container.scrollTop() - 120},\n            400,\n            () => {\n                this.onScroll();\n            });\n        this.$('.block-header .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, participant: true, el: this.$('.participants-details-media-wrap')[0]});\n        else\n            return;\n    },\n\n    changeName: function (value) {\n        this.updateSaveButton()\n    },\n\n    changeBadge: function (value) {\n        this.updateSaveButton()\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name.second-text').addClass('fade-out');\n        this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        this.$('.btn-back').removeClass('btn-top');\n        this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 220) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').text(this.participant.get('nickname'));\n            this.$('.block-name.second-text').removeClass('fade-out');\n            this.$('.block-name:not(.second-text)').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 1) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.block-name.second-text').text('');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        let bottom_block_scroll\n        if (this.$('.bottom-block'))\n            bottom_block_scroll = this.$('.bottom-block').get(0).getBoundingClientRect().top;\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 170) {\n            this.$('.btn-back').addClass('btn-top');\n            this.$('.participant-details-item .buttons-wrap').addClass('hidden2');\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.btn-edit-participant').hideIf(true);\n            this.$('.block-header .block-name.second-text').text(this.$('.tabs .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-back').removeClass('btn-top');\n            this.$('.participant-details-item .buttons-wrap').removeClass('hidden2');\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n            this.$('.participant-details-edit-wrap').hasClass('hidden') && this.$('.btn-edit-participant').hideIf(false);\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    updateMemberAvatar: function (member, url_forced) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        $avatar.removeClass('changed');\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)) && !url_forced)\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n            this.open(this.participant, this.data_form);\n        });\n    },\n\n    chooseAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.account, contact: this.contact, participant: this.participant, parent: this});\n        } else\n            this.clickAvatarInput();\n    },\n\n    makeSelfie: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let webcam_panel_view = new xabber.WebcamProfileImageView();\n            webcam_panel_view.open({model: this.account, contact: this.contact, participant: this.participant, parent: this});\n        } else\n            this.clickAvatarInput();\n    },\n\n    makeEmojiAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let emoji_panel_view = new xabber.EmojiProfileImageView();\n            emoji_panel_view.open({model: this.account, contact: this.contact, participant: this.participant, parent: this});\n        } else\n            this.clickAvatarInput();\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.participant-details-edit-wrap .circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n        this.$('.participant-info').emojify('.participant-edit-badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n        this.$('.btn-save-user-rights').switchClass('fade-out', !has_changes);\n        this.$('.btn-edit-participant').switchClass('fade-out', has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.block-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').removeClass('btn-back').addClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').removeClass('btn-back-name').addClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.block-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.block-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').addClass('btn-back').removeClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').addClass('btn-back-name').removeClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.block-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    this.participant.block(() => {\n                            this.close();\n                            this.parent.participants._render();\n                        },\n                        (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    this.participant.kick(() => {\n                        this.close();\n                        this.parent.participants._render();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    setVisibility: function (ev) {\n            utils.dialogs.error('Feature not yet implemented')\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0 || field.values && field.label)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        if ($current_restriction.find('.select-timer .property-value').length)\n                            $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                                .removeClass('default-value')\n                                .text(moment(Number(attrs.expires)*1000).fromNow());\n                        else{\n                            $current_restriction.append($('<div class=\"select-timer\"/>'));\n                            $current_restriction.find('.select-timer').attr('data-value', attrs.expires)\n                                .text(moment(Number(attrs.expires)*1000).fromNow())\n                        }\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                contact.set('in_roster', true);\n                contact.trigger(\"open_chat\", contact);\n                contact.trigger('remove_invite', contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (this.actual_rights && !this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights && this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-name-input').val(),\n            new_badge = this.$('.participant-badge-input').val(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        if (Array.from(new_badge).length > 32)\n            utils.dialogs.error(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                has_changes = true;\n                iq_changes.c('badge').t(new_badge).up();\n            }\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                // this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.$(`.circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n                this.close();\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.EditBadgeView = xabber.BasicView.extend({\n    className: 'modal edit-badge',\n    template: templates.group_chats.badge_edit_view,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-save\": \"saveNewBadge\",\n        \"keydown .badge-text\": \"checkKey\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.participant = this.model.participant;\n        this.$el.openModal({\n            ready: () => {\n                if (this.participant.get('badge'))\n                    this.typeEmoticon(this.participant.get('badge'));\n                else\n                    this.$('.badge-text').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            $target.length && this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n        }});\n    },\n\n    saveNewBadge: function () {\n        let new_badge = this.$('.badge-text').getTextFromRichTextarea();\n        if (Array.from(new_badge).length > 32)\n            this.$('.modal-content .error').text(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                let iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                    .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`})\n                    .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: this.participant.get('id')})\n                    .c('badge').t(new_badge);\n                this.account.sendIQFast(iq_changes, () => {\n                    this.model.updateBadge(new_badge);\n                    this.close();\n                }, () => {\n                    this.$('.modal-content .error').text(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                })\n            }\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        let emoji_node = emoji.emojify({tag_name: 'span'}),\n            $textarea = this.$('.badge-text');\n        $textarea.focus().pasteHtmlAtCaret(emoji_node);\n    },\n\n    checkKey: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.saveNewBadge();\n        }\n    }\n\n});\n\nxabber.DefaultRestrictionsView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"close\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.hide.bind(this);\n            }\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('non-active');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('non-active', !has_changes);\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('non-active'))\n            return;\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.close();\n            }, (error) => {\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.close();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.DefaultRestrictionsRightView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions_right,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"hideRestrictions\",\n        \"click .btn-back\": \"hideRestrictions\",\n        \"click .btn-reset\": \"showRestrictions\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n        this.model.set('restrictions_hidden', true)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n    },\n\n    showRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', false);\n        this.update(() => {\n            this.$('.select-timer .dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n            this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n            this.updateSaveButton()\n        });\n    },\n\n    hideRestrictions: function (ev) {\n        this.parent.hideRestrictions();\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('fade-out');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('fade-out', !has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.restrictions-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.restrictions-header .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.restrictions-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.restrictions-header .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-default-restrictions-save').addClass('fade-out')\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            }, (error) => {\n\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.Participant = Backbone.Model.extend({\n    idAttribute: 'id',\n\n    initialize: function (_attrs, options) {\n        let attrs = _.clone(_attrs);\n        this.model = options.model;\n        this.contact = options.contact ? options.contact : this.model.contact;\n        this.account = this.contact.account;\n        this.on(\"change:avatar\", this.getBase64Avatar, this);\n        this.set(attrs);\n        this.getBase64Avatar();\n    },\n\n    getBase64Avatar: function () {\n        if (!this.get('id'))\n            return;\n        if (this.get('avatar')) {\n            let cached_info = this.account.chat_settings.getAvatarInfoById(this.get('id'));\n            if (cached_info) {\n                if (cached_info.avatar_hash == this.get('avatar')) {\n                    this.set('b64_avatar', cached_info.avatar_b64);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                    return;\n                }\n            }\n            if (this.get('avatar_url')){\n                this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), this.get('avatar_url'));\n                this.set('b64_avatar', this.get('avatar_url'));\n                (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n\n            } else {\n                let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + this.get('id');\n                this.contact.getAvatar(this.get('avatar'), node, (avatar) => {\n                    this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), avatar);\n                    this.set('b64_avatar', avatar);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                });\n\n            }\n        }\n    },\n\n    kick: function (callback, errback) {\n        let id = this.get('id'),\n            jid = this.get('jid'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('kick', {xmlns: Strophe.NS.GROUP_CHAT});\n        if (jid)\n            iq.c('jid').t(jid);\n        else\n            iq.c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, (err) => {\n            errback && errback(err);\n        });\n    },\n\n    block: function (callback, errback) {\n        let id = this.get('id'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, function (err) {\n            errback && errback(err);\n        });\n    }\n});\n\nxabber.Participants = Backbone.Collection.extend({\n    model: xabber.Participant,\n    comparator: 'nickname',\n\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.account = this.contact.account;\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid'));\n        this.getCachedParticipants();\n        this.contact.on(\"update_participants\", this.updateParticipants, this);\n        this.on(\"change:nickname\", this.sort, this);\n    },\n\n    updateVersion: function () {\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid')) || this.version;\n    },\n\n    getCachedParticipants: function () {\n        this.account.groupchat_settings.getParticipantsList(this.contact.get('jid')).forEach((participant) => {\n            this.mergeParticipant(participant);\n        });\n    },\n\n    mergeParticipant: function (attrs) {\n        if (typeof attrs !== \"object\")\n            attrs = {id: attrs};\n        let participant = this.get(attrs.id);\n        if (participant)\n            participant.set(attrs);\n        else {\n            participant = this.create(attrs, {model: this});\n        }\n        return participant;\n    },\n\n    resetParticipants: function () {\n        this.version = 0;\n        _.each(_.clone(this.models), function (participant) {\n            participant.destroy();\n        });\n    },\n\n    getRights: function (rights) {\n        let pretty_rights = [];\n        $(rights).each((idx, permission) => {\n            let name = $(permission).attr('name'),\n                pretty_name = $(permission).attr('translation'),\n                issued_time = $(permission).attr('issued-at'),\n                expires_time = $(permission).attr('expires');\n            pretty_rights.push({\n                name: name,\n                pretty_name: pretty_name,\n                issued_time: issued_time,\n                expires_time: expires_time\n            });\n        });\n        return pretty_rights;\n    },\n\n        updateParticipants: function () {\n            this.participantsRequest({version: this.version}, () => {\n                this.trigger(\"participants_updated\");\n                let chat = this.account.chats.getChat(this.contact);\n                if (chat.item_view) {\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.updatePinnedMessage()\n                }\n            });\n        },\n\n    participantsRequest: function (options, callback, errback) {\n        options = options || {};\n        let participant_id = options.id,\n            version = options.version || 0,\n            iq = $iq({to: this.contact.get('full_jid'), type: 'get'});\n        if (participant_id != undefined) {\n            if (options.properties)\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, id: participant_id});\n            else\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights`}).c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: participant_id});\n        }\n        else\n            iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, version: version});\n        this.account.sendFast(iq, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            version && (this.version = Number(version));\n            $response.find(`query user`).each((idx, item) => {\n                let $item = $(item),\n                    subscription = $item.find('subscription').text(),\n                    id = $item.attr('id');\n                if (subscription === 'none') {\n                    this.get(id) && this.get(id).destroy();\n                    this.account.groupchat_settings.removeParticipantFromList(this.contact.get('jid'), id);\n                    this.trigger(\"participants_updated\");\n                }\n                else\n                    this.createFromStanza($item);\n            });\n            callback && callback(response);\n        }, (error) => {\n            errback && errback(error);\n        });\n    },\n\n    search: function (query) {\n        let list = [];\n        this.models.forEach((participant) => {\n            let jid = participant.get('jid');\n            if (query) {\n                query = query.toLowerCase();\n                let nickname = participant.get('nickname');\n                if (jid && jid.toLowerCase().indexOf(query) > -1 || nickname && nickname.toLowerCase().indexOf(query) > -1)\n                    list.push(participant);\n            } else\n                list.push(participant);\n        });\n        return list;\n    },\n\n    createFromStanza: function ($item, options) {\n        let jid = $item.find('jid').text(),\n            nickname = $item.find('nickname').text(),\n            id = $item.attr('id'),\n            badge = $item.find('badge').text(),\n            present = $item.find('present').text(),\n            photo = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('id'),\n            photo_url = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('url'),\n            role = $item.find('role').text();\n        !nickname.trim().length && (nickname = jid || id);\n\n        let attrs = {\n            jid: jid,\n            id: id,\n            avatar: photo,\n            avatar_url: photo_url,\n            nickname: nickname,\n            badge: badge,\n            present: present,\n            role: role\n        };\n        (this.contact.get('incognito_chat') && options && options.my_info === true) && (attrs.jid = this.account.get('jid'));\n\n        let participant = this.mergeParticipant(attrs);\n        (this.account.get('jid') === participant.get('jid')) && (this.contact.my_info = participant) && this.contact.trigger('update_my_info');\n        this.account.groupchat_settings.updateParticipant(this.contact.get('jid'), attrs);\n        return participant;\n    }\n});\n\nxabber.GroupChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        participants_lists: []\n    },\n\n    getParticipantsListVersion: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result)\n            return result.version;\n        else\n            return 0;\n    },\n\n    setParticipantsListVersion: function (jid, version) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid),\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        if (!participants_list) {\n            participants_list = {jid: jid, participants_list: [], version: 0};\n        }\n        else\n            participants_list.version = version;\n        all_participants_lists.push(participants_list);\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    getParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result && result.participants_list)\n            return result.participants_list;\n        else\n            return [];\n    },\n\n    updateParticipant: function (jid, participant_info) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            chat_participants = all_participants_lists.find(list => list.jid === jid),\n            version = chat_participants && chat_participants.version || 0,\n            participants_list = chat_participants && chat_participants.participants_list || [],\n            participants_list_idx = all_participants_lists.indexOf(chat_participants);\n        if (participants_list.length) {\n            let participant = participants_list.find(participant_item => participant_item.id === participant_info.id),\n                participant_idx = participants_list.indexOf(participant);\n            if (participant_idx != -1)\n                participants_list[participant_idx] = participant_info;\n            else\n                participants_list.push(participant_info);\n        }\n        else\n            participants_list.push(participant_info);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        all_participants_lists.push({jid: jid, participants_list: participants_list, version: version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    setParticipantsList: function (jid, updated_participants_list) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid) || [],\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: updated_participants_list, version: participants_list.version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    removeParticipantFromList: function (jid, participant_id) {\n        let participants_list = this.getParticipantsList(jid);\n        if (participants_list.length) {\n            let participant_idx = participants_list.indexOf(participants_list.find(participant => participant.id === participant_id));\n            if (participant_idx != -1)\n                participants_list.splice(participant_idx, 1);\n            this.setParticipantsList(jid, participants_list);\n        }\n    },\n\n    resetParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list_idx = all_participants_lists.indexOf(all_participants_lists.find(list => list.jid === jid));\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: [], version: 0});\n        this.save('participants_lists', all_participants_lists);\n    }\n});\n\nxabber.GroupchatInvitationView = xabber.BasicView.extend({\n    className: 'details-panel invitation-view',\n    template: templates.group_chats.invitation,\n    ps_selector: '.panel-content',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-join\": \"join\",\n        \"click .btn-decline\": \"reject\",\n        \"click .btn-block\": \"blockContact\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$('.msg-text').text(options.message && options.message.get('message') ? options.message.get('message') : xabber.getString(\"groupchat__public_group__text_invitation\", [this.account.get('jid')]));\n        this.message = options.message;\n        this.model.on(\"change\", this.update, this);\n    },\n\n    render: function () {\n        this.model.set('visible', true);\n        this.updateAvatar();\n        this.updateName();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.model.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n    },\n\n    openChat: function () {\n        this.model.set('in_roster', true);\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    closeChat: function () {\n        let chat = this.account.chats.getChat(this.model);\n        chat.set({'opened': false, 'display': false, 'active': false, 'is_accepted': undefined});\n        xabber.body.setScreen('all-chats', { right: undefined });\n        chat.item_view.content.readMessages();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateName: function () {\n        this.$('.main-info  .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name-wrap') == this.model.get('jid')) {\n            this.$('.main-info .name-wrap').addClass('name-is-jid');\n            this.$('.main-info  .jid').text('');\n        }\n        else {\n            this.$('.main-info .name-wrap').removeClass('name-is-jid');\n            this.$('.main-info  .jid').text(this.model.get('jid'));\n        }\n    },\n\n    blockInvitation: function () {\n        if (this.account.connection && this.account.connection.do_synchronization)\n            return;\n        let contact_jid = this.model.get('jid'),\n            iq_get_blocking = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING}),\n            iq_unblocking = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING}),\n            iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.model.get('jid') + '/' + moment.now()});\n        this.account.sendIQFast(iq_get_blocking, (iq_blocking_items) => {\n            let items = $(iq_blocking_items).find('item');\n            if (items.length > 0) {\n                items.each(function (idx, item) {\n                    let item_jid = $(item).attr('jid');\n                    if (item_jid.indexOf(contact_jid) > -1)\n                        iq_unblocking.c('item', {jid: item_jid}).up();\n                });\n            }\n            if ($(iq_unblocking.nodeTree).find('item').length)\n                this.account.sendIQFast(iq_unblocking, () => {\n                    this.account.sendIQFast(iq_set_blocking);\n                });\n            else\n                this.account.sendIQFast(iq_set_blocking);\n        });\n    },\n\n    join: function () {\n        let contact = this.model;\n        contact.set('subscription_preapproved', true);\n        contact.pres('subscribed');\n        contact.set('known', true);\n        contact.set('removed', false);\n        setTimeout(() => {\n            contact.pres('subscribe');\n        }, 500);\n        this.blockInvitation();\n        contact.getMyInfo();\n        this.openChat();\n        contact.trigger('remove_invite', contact);\n        let chat = this.account.chats.getChat(this.model);\n    },\n\n    reject: function () {\n        let contact = this.model;\n        this.closeChat();\n        let iq = $iq({to: contact.get('full_jid') || contact.get('jid'), type: 'set'})\n            .c('decline', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`});\n        this.account.sendFast(iq, () => {}, () => {\n            contact.declineRequest();\n            this.blockInvitation();\n        });\n        contact.trigger('remove_invite', contact);\n    },\n\n    blockContact: function () {\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"contact_block\"), xabber.getString(\"block_contact_confirm\", [contact.get('name'), this.account.get('jid')]), null, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done(function (result) {\n            if (result) {\n                contact.trigger('remove_invite', contact);\n                contact.block();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n        this.blockInvitation();\n        this.closeChat();\n        contact.trigger('remove_invite', contact);\n    }\n});\n\nxabber.ContactNameWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    }\n});\n\nxabber.ContactNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n    template: templates.group_chats.group_name_input_widget,\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val()) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('roster_name'))\n                this.$input.val(this.model.get('roster_name'))\n        }\n        if (!this.model.get('roster_name'))\n            this.$value.addClass('name-is-default');\n        else\n            this.$value.removeClass('name-is-default');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    },\n});\n\nxabber.GroupNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                this.$input.val(this.model.get('group_info').name)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('nickname'))\n            name = this.model.get('nickname');\n        else\n            name = this.model.get('jid');\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('nickname'))\n                this.$input.val(this.model.get('nickname'))\n            if (force_reset)\n                this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        if (this.model.get('nickname'))\n            return this.model.get('nickname');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantBadgeRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-badge',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue(true);\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        this.parent.changeBadge(value);\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        if (force_reset) {\n            this.$input.val(value);\n            this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        let badge = _.escape(this.model.get('badge'));\n        return badge;\n    },\n\n    keyUp: function () {\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        this.changeValue();\n    },\n});\n\nxabber.GroupDescriptionRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-description',\n    template: templates.group_chats.description_input_widget,\n    placeholder: \"\",\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.parent.changeDescription(value);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').description)\n                name = this.model.get('group_info').description;\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n            if (force_reset && this.model.get('group_info'))\n                this.$input.val(this.model.get('group_info').description)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').description;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n        this.changeValue();\n    },\n});\n\nxabber.ContactEditGroupsView = xabber.BasicView.extend({\n    template: templates.groups,\n    events: {\n        'click .group': 'removeGroup',\n        'click .existing-group-field': 'editGroup',\n        'change .new-group-name input': 'checkNewGroup',\n        'keyup .new-group-name input': 'checkNewGroup',\n        'click .new-group-checkbox': 'addNewGroup',\n        \"keyup #new-group-name\": \"keyupAddNewGroup\",\n        \"focusin #new-group-name\": \"focusinAddNewGroup\",\n        \"focusout #new-group-name\": \"focusoutAddNewGroup\",\n        \"keydown #new-group-name\": \"keydownAddNewGroup\",\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('groups_hidden', true)\n        this.model.on(\"change:in_roster update_groups\", this.onUpdate, this);\n    },\n\n    render: function (view, args) {\n        this.$el.html(this.template());\n        if (this.model.get('in_roster')) {\n            let groups = _.clone(this.model.get('groups')),\n                all_groups = _.map(this.account.groups.notSpecial(), function (group) {\n                    let name = group.get('name');\n                    return {name: name, checked: _.contains(groups, name), id: uuid()};\n                }),\n                all_groups_unchecked = all_groups.filter(function(group) {\n                    if (group.checked)\n                        return false;\n                    return true;\n                }).length;\n            if (all_groups_unchecked)\n                this.$('.groups-wrap').removeClass('empty-groups-wrap')\n            else\n                this.$('.groups-wrap').addClass('empty-groups-wrap')\n\n            this.$('.checkbox-list').html(templates.groups_checkbox_list({\n                groups: all_groups\n            })).appendTo(this.$('.groups-wrap'));\n            this.ps_container = this.$('.checkbox-list');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.scrollToTop();\n            if (groups.length)\n                this.$('.groups').html(templates.groups_list({\n                    groups: all_groups\n                })).appendTo(this.$('.groups-wrap-list'));\n            else\n                this.$('.groups').html('<div class=\"empty-groups\">'+ xabber.getString(\"contact_circles_empty\") + '</div>')\n            this.$('.groups').append(templates.groups_new_group());\n\n        }\n        this.$el.showIf(this.model.get('in_roster'));\n        if (args && args.on_add) {\n            this.$('.groups-wrap').hideIf(false)\n            this.$('.input-field input').focus();\n        }\n        else\n            this.$('.groups-wrap').hideIf(true)\n        this._update_template = false;\n        this.parent.updateScrollBar();\n    },\n\n    onUpdate: function (ev) {\n        if (this._update_template){\n            this.render(this, {on_add: true});\n            this.$('.new-group-name input').focus();\n        }\n        else{\n            this.render();\n        }\n\n    },\n\n    removeGroup: function (ev) {\n        let $target = $(ev.target).closest('.group'),\n            group_name = $target.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = false\n        this.model.pushInRoster({groups: groups});\n    },\n\n    removeLastGroup: function (ev) {\n        let groups = _.clone(this.model.get('groups'));\n        if (groups.length) {\n            groups.pop();\n            this._update_template = true\n            this.model.pushInRoster({groups: groups});\n        }\n    },\n\n    editGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        let $target = $(ev.target).closest('.input-field'),\n            $input = $target.find('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            groups.push(group_name);\n        } else if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = true\n        this.model.pushInRoster({groups: groups});\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox');\n        $checkbox.showIf(name && !this.account.groups.get(name));\n    },\n\n    keyupAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_ENTER && name) {\n            this.addNewGroup();\n        }\n    },\n\n    keydownAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_BACKSPACE && !name) {\n            this.removeLastGroup();\n        }\n    },\n\n    focusinAddNewGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        this.$('.groups-wrap').hideIf(false)\n        this.$('.empty-groups').hideIf(true)\n    },\n\n    focusoutAddNewGroup: function (ev) {\n        this.$('.empty-groups').hideIf(false)\n        if (this.$('.new-group-name input').val())\n            this.addNewGroup();\n        this._hide_timeout = setTimeout(() => {\n            this.$('.groups-wrap').hideIf(true)\n            this.$('.new-group-name input').val('')\n        }, 100)\n    },\n\n    addNewGroup: function () {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            groups.push(name);\n        }\n        this.model.pushInRoster({groups: groups});\n        this._update_template = true\n    }\n});\n\nxabber.ContactEditView = xabber.BasicView.extend({\n    template: templates.edit_contact,\n    events: {\n        'click .btn-back': 'hideEdit',\n        'click .btn-request': 'requestSubscription',\n        'click .btn-allow': 'allowSubscription',\n        'click .btn-cancel-request': 'cancelSubscriptionRequest',\n        'click .btn-allow-request': 'handleSubscriptionRequest',\n        'click .btn-disallow-request': 'cancelSubscriptionIn',\n        'click .btn-disallow-preapproved': 'cancelSubscriptionIn',\n        'click .btn-cancel-subscription-out': 'cancelSubscriptionOut',\n        'click .btn-cancel-subscription-in': 'cancelSubscriptionIn',\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on(\"change:status_updated\", this.updateStatuses, this);\n        this.model.on(\"change:subscription\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatuses, this);\n        this.model.on(\"change:blocked\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatuses, this);\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.name_field = new xabber.ContactNameRightWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.$('.status-out.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.status-in.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.updateStatuses();\n    },\n\n    showEdit: function () {\n        this.model.set('edit_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n    },\n\n    updateStatuses: function () {\n        let statuses = this.model.getSubscriptionStatuses(),\n            subscription_preapproved = this.model.get('subscription_preapproved');\n        if (statuses){\n            this.$('.status-out').addClass(statuses.status_out_class)\n            this.$('.status-out .value').text(statuses.status_out)\n            this.$('.status-out').showIf(statuses.status_out)\n            this.$('.status-in').addClass(statuses.status_in_class)\n            this.$('.status-in  .value').text(statuses.status_in)\n            this.$('.status-in').showIf(statuses.status_in)\n            this.$('.status-description .value').html(statuses.status_description)\n            this.$('.status-description').showIf(statuses.status_description)\n            this.$('.btn-delete').hideIf(!this.model.get('in_roster'));\n            if (statuses.status_out_color === 'request') {\n                this.$('.status-out').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'request') {\n                this.$('.status-in').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === 'subbed') {\n                this.$('.status-out').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'subbed') {\n                this.$('.status-in').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === '') {\n                this.$('.status-out').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-out').removeClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === '') {\n                this.$('.status-in').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-in').removeClass('text-decoration-color-300')\n            }\n            this.$('.btn-request').hideIf(!(statuses.status_out_color === ''))\n            this.$('.btn-allow').hideIf(!(statuses.status_in_color === '' && !subscription_preapproved))\n            this.$('.btn-disallow-preapproved').hideIf(!(statuses.status_in_color === '' && subscription_preapproved))\n            this.$('.btn-cancel-request').hideIf(!(statuses.status_out_color === 'request'))\n            this.$('.btn-allow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-disallow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-cancel-subscription-out').hideIf(!(statuses.status_out_color === 'subbed'))\n            this.$('.btn-cancel-subscription-in').hideIf(!(statuses.status_in_color === 'subbed'))\n        }\n    },\n\n    requestSubscription: function () {\n        this.model.askRequest();\n    },\n\n    allowSubscription: function () {\n        this.model.acceptRequest();\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', true)\n    },\n\n    cancelSubscriptionRequest: function () {\n        this.model.declineSubscription();\n    },\n\n    handleSubscriptionRequest: function () {\n        this.model.acceptRequest();\n    },\n\n    cancelSubscriptionOut: function () {\n        this.model.declineSubscription();\n    },\n\n    cancelSubscriptionIn: function () {\n        this.model.declineSubscribe();\n        this.model.set('subscription_request_in', false);\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.GroupEditView = xabber.BasicView.extend({\n    template: templates.edit_group,\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        'click .edit-header:not(.property-header) .btn-back': 'hideEdit',\n        'click .btn-reset': 'resetPanel',\n        'click .btn-edit': 'showDescriptionProperty',\n        'click .btn-back-panel': 'hidePanel',\n        'click .membership-field .property-radio input': 'changeMembership',\n        'click .index-field .property-radio input ': 'changeIndex',\n        'click .index-property:not(.property-disabled)': 'showIndexProperty',\n        'click .membership-property:not(.property-disabled)': 'showMembershipProperty',\n        'click .btn-back.btn-property-back': 'hideProperty',\n        \"click .list-variant\": \"showPanel\",\n        \"click .revoke-invitation\": \"revokeInvitation\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .participants-edit-wrap .list-item\": \"selectParticipant\",\n        \"click .unblock-user\": \"unblockUser\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-add-block\": \"blockId\",\n        \"keydown .field-input\": \"keyDownName\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on('change:group_info', this.update, this)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.property-dropdown').dropdown(dropdown_settings);\n        this.$('.circle-avatar.dropdown-button').dropdown(dropdown_settings);\n        // this.name_field = new xabber.ContactNameRightWidget({\n        //     el: this.$('.name-wrap')[0],\n        //     model: this.model\n        // });\n        this.group_name_field = new xabber.GroupNameRightWidget({\n            el: this.$('.edit-group-name-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.group_description_field = new xabber.GroupDescriptionRightWidget({\n            el: this.$('.edit-group-description-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {},\n            model, searchable, privacy;\n        if (info){\n            if (info.privacy === 'public')\n                privacy = xabber.getString(\"groupchat_public_group\");\n            if (info.privacy === 'incognito')\n                privacy = xabber.getString(\"groupchat_incognito_group\");\n            if (info.searchable === 'none') {\n                searchable = xabber.getString(\"groupchat_index_type_none\");\n                this.$('.property-wrap #none').prop(\"checked\", true);\n            }\n            if (info.searchable === 'local') {\n                searchable = xabber.getString(\"groupchat_index_type_local\");\n                this.$('.property-wrap #local').prop(\"checked\", true);\n            }\n            if (info.searchable === 'global') {\n                searchable = xabber.getString(\"groupchat_index_type_global\");\n                this.$('.property-wrap #global').prop(\"checked\", true);\n            }\n            if (info.model === 'open') {\n                model = xabber.getString(\"groupchat_membership_type_open\");\n                this.$('.property-wrap #open').prop(\"checked\", true);\n            }\n            if (info.model === 'member-only') {\n                model = xabber.getString(\"groupchat_membership_type_members_only\");\n                this.$('.property-wrap #member-only').prop(\"checked\", true);\n            }\n        }\n        this.$('.main-edit-header .block-name:not(.second-text)').text(privacy);\n        this.$('.membership-property span').text(model);\n        this.$('.index-property span').text(searchable);\n        this.$('.edit-group-name').text(info.name);\n        this.$('.edit-group-description').text(info.description);\n        this.group_name_field && this.group_name_field.updateValue(true);\n        this.group_description_field && this.group_description_field.updateValue(true);\n        this.$('.btn-save').switchClass('fade-out', true);\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values);\n        if (is_owner){\n            let iq_get_rights = $iq({type: 'get', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n            this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n                let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)),\n                    restrictions_count = 0;\n                data_form.fields.forEach((field) => {\n                    if (field.type === 'fixed' || field.type === 'hidden')\n                        return;\n                    let expires = field.values ? field.values[0] : undefined;\n                    if (expires) {\n                        restrictions_count++;\n                    }\n                });\n                if (restrictions_count === 0)\n                    restrictions_count = '';\n                this.$('.btn-default-restrictions .edit-button-value').text(restrictions_count);\n            }, () => {\n                utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n            });\n        }\n        this.updateAvatar();\n\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    showMembershipProperty: function () {\n        this.$('.membership-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showIndexProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showDescriptionProperty: function () {\n        this.$('.description-edit-wrap').hideIf(false)\n        this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user');\n        if (this.parent.children && this.parent.children.invitations)\n            this.parent.children.invitations.revokeInvitation(ev)\n    },\n\n    showBlockButton: function (ev) {\n        this.$('.edit-bottom-block .btn-add-block').hideIf(false);\n    },\n\n    showInviteButton: function (ev) {\n        this.$('.edit-bottom-block .btn-invite').hideIf(false);\n    },\n\n    unblockUser: function (ev) {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.unblockUser(ev)\n    },\n\n    actionSelectedParticipants: function (ev) {\n        let selected = this.$('.list-item.selected');\n        selected.each((index, item) => {\n            if ($(item).hasClass('invitations-user') && this.parent.children && this.parent.children.invitations)\n                this.parent.children.invitations.revokeInvitationByElement($(item))\n            if ($(item).hasClass('blocked-user') && this.parent.children && this.parent.children.blocked)\n                this.parent.children.blocked.unblockUserByElement($(item))\n            if ($(item).hasClass('blocked-user') || $(item).hasClass('invitations-user'))\n                $(item).removeClass('selected')\n        });\n        this.updateRemoveParticipantButton();\n    },\n\n    blockId: function () {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.blockId()\n    },\n\n    deselectParticipants: function (ev) {\n        this.$('.list-item.selected').removeClass('selected')\n        this.updateRemoveParticipantButton();\n    },\n\n    selectParticipant: function (ev) {\n        if ($(ev.target).parent().hasClass('revoke-invitation') || $(ev.target).parent().hasClass('unblock-user') ||\n            $(ev.target).hasClass('revoke-invitation') || $(ev.target).hasClass('unblock-user'))\n            return;\n        let $member_item = $(ev.target).closest('.list-item'),\n            is_selected = $member_item.hasClass('selected');\n        $member_item.switchClass('selected', !is_selected)\n        this.updateRemoveParticipantButton();\n    },\n\n    updateRemoveParticipantButton: function () {\n        let has_changes = this.$('.list-item.selected').length;\n        this.$('.block-name-panel.second-text span').html(has_changes)\n        if (has_changes) {\n            this.$('.participants-edit-back').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.participants-edit-back').removeClass('btn-back-panel').addClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').addClass('fade-out');\n            this.$('.block-name-panel.second-text').removeClass('fade-out');\n            this.$('.btn-remove-selected').removeClass('fade-out');\n        }\n        else{\n            this.$('.participants-edit-back').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.participants-edit-back').addClass('btn-back-panel').removeClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').removeClass('fade-out');\n            this.$('.block-name-panel.second-text').addClass('fade-out');\n            this.$('.btn-remove-selected').addClass('fade-out');\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    hidePanel: function () {\n        this.parent.getInvitations((response) => {\n            let inv_count = $(response).find('query').find('user').length;\n            if (inv_count === 0)\n                inv_count = '';\n            this.$('.invitations-variant .counted').html(inv_count);\n        });\n        this.model.getBlockedParticipants((response) => {\n            let blocked_count = $(response).find('query').children().length;\n            if (blocked_count === 0)\n                blocked_count = '';\n            this.$('.blocked-variant .counted').html(blocked_count);\n        });\n        this.$('.btn-back-panel').hideIf(true)\n        this.$('.block-name-panel').hideIf(true)\n        this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n        this.$('.edit-bottom-block .btn-invite').hideIf(true)\n        this.$('.btn-remove-selected').hideIf(true)\n        this.$('.participants-edit-wrap').hideIf(true)\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar('destroy')\n        // }\n        // this.ps_container = this.$('.edit-wrap');\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar(\n        //         _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n        //     );\n        // }\n        // this.hideEdit();\n    },\n\n    showPanel: function () {\n        this.$('.btn-back-panel').hideIf(false)\n        this.$('.block-name-panel').hideIf(false)\n        this.$('.btn-remove-selected').hideIf(false)\n        this.$('.participants-edit-wrap').hideIf(false)\n        this.updateRemoveParticipantButton();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participants-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    resetPanel: function () {\n        this.updateSaveButton()\n        this.showEdit()\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null;\n            if ((field.var in this.original_data_form_values) && this.original_data_form_values[field.var] != value) {\n                has_changes = true;\n            }\n        });\n        this.$('.btn-save').switchClass('fade-out', !has_changes);\n        this.$('.btn-qr-code').hideIf(has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').addClass('fade-out');\n        }\n        let info = this.model.get('group_info') || {};\n        if (info){\n            if (info.privacy === 'public')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_public_group\"));\n            if (info.privacy === 'incognito')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_incognito_group\"));\n        }\n    },\n\n    changeName: function (value) {\n        if (this.data_form && value){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'name')\n            if (!this.original_data_form_values.name)\n                this.original_data_form_values.name = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeDescription: function (value) {\n        if (this.data_form){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'description')\n            if (!this.original_data_form_values.description)\n                this.original_data_form_values.description = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeMembership: function (ev) {\n        let membership = $(ev.target).attr('id'),\n            membership_text;\n        if (this.data_form && membership){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'membership')\n            if (!this.original_data_form_values.membership)\n                this.original_data_form_values.membership = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [membership]\n            if (membership === 'open')\n                membership_text = xabber.getString(\"groupchat_membership_type_open\");\n            if (membership === 'member-only')\n                membership_text = xabber.getString(\"groupchat_membership_type_members_only\");\n            this.$('.membership-property span').text(membership_text);\n            this.updateSaveButton()\n        }\n    },\n\n    changeIndex: function (ev) {\n        let index = $(ev.target).attr('id'),\n            index_text;\n        if (this.data_form && index){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'index')\n            if (!this.original_data_form_values.index)\n                this.original_data_form_values.index = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [index]\n            if (index === 'none')\n                index_text = xabber.getString(\"groupchat_index_type_none\");\n            if (index === 'local')\n                index_text = xabber.getString(\"groupchat_index_type_local\");\n            if (index === 'global')\n                index_text = xabber.getString(\"groupchat_index_type_global\");\n            this.$('.index-property span').text(index_text);\n            this.updateSaveButton()\n        }\n    },\n\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-save').addClass('fade-out')\n        this.group_name_field.$input.prop('disabled', true);\n        this.group_description_field.$input.prop('disabled', true);\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        let iq = $iq({type: 'set', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        iq = this.account.addDataFormToStanza(iq, this.data_form);\n        this.account.sendIQFast(iq, (result) => {\n            let $result  = $(result),\n                group_info = _.clone(this.model.get('group_info')),\n                attrs = {\n                    name: $result.find('field[var=\"name\"] value').text(),\n                    searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                    model: $result.find('field[var=\"membership\"]').children('value').text(),\n                    description: $result.find('field[var=\"description\"] value').text(),\n                    status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n            _.extend(group_info, attrs);\n            this.model.set('group_info', group_info);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n            this.resetPanel()\n        }, (error) => {\n\n            let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n            utils.dialogs.error(err_text);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n        });\n    },\n\n    showEdit: function (ev) {\n        let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.parent.$('.group-edit-preloader').html(env.templates.contacts.preloader())\n        this.account.sendIQFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.original_data_form_values = {}\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.$('.group-property:not(.privacy-property)').removeClass('disabled')\n            this.group_name_field.$input.hideIf(false)\n            this.group_description_field.$input.hideIf(false)\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.$('.circle-avatar input').prop('disabled', false);\n            this.$('.set-groupchat-avatar-text').hideIf(false);\n            this.$('.group-property').removeClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(false);\n            this.$('.index-property .details-icon-right').hideIf(false);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(false);\n            this.$('.btn-edit').hideIf(false)\n            this.$('.edit-bottom-block').hideIf(false)\n            this.$('.btn-default-restrictions').hideIf(false)\n            this.$('.btn-delete-group').hideIf(false)\n            this.$('.btn-clear-history-chat').hideIf(false)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            this.parent.getInvitations((response) => {\n                let inv_count = $(response).find('query').find('user').length;\n                if (inv_count === 0)\n                    inv_count = '';\n                this.$('.invitations-variant .counted').html(inv_count);\n            });\n            this.model.getBlockedParticipants((response) => {\n                let blocked_count = $(response).find('query').children().length;\n                if (blocked_count === 0)\n                    blocked_count = '';\n                this.$('.blocked-variant .counted').html(blocked_count);\n            });\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        }, () => {\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.group_name_field.$input.prop('disabled', true);\n            this.group_description_field.$input.prop('disabled', true);\n            if (!this.group_description_field.$input.val())\n                this.group_description_field.$input.hideIf(true)\n            this.$('.circle-avatar input').prop('disabled', true);\n            this.$('.set-groupchat-avatar-text').hideIf(true);\n            this.$('.group-property').addClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(true);\n            this.$('.index-property .details-icon-right').hideIf(true);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(true);\n            this.$('.group-property:not(.privacy-property)').addClass('disabled')\n            this.$('.btn-edit').hideIf(true)\n            this.$('.edit-bottom-block').hideIf(true)\n            this.$('.btn-default-restrictions').hideIf(true)\n            this.$('.btn-delete-group').hideIf(true)\n            this.$('.btn-clear-history-chat').hideIf(true)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            let info = this.model.get('group_info') || {};\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        });\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.ContactsBase = Backbone.Collection.extend({\n    model: xabber.Contact\n});\n\nxabber.GroupContacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.group = options.group;\n        this.on(\"change\", this.onContactChanged, this);\n    },\n\n    comparator: function (contact1, contact2) {\n        if (xabber.settings.roster.sorting === 'online-first') {\n            let s1 = contact1.get('status'),\n                s2 = contact2.get('status'),\n                sw1 = constants.STATUS_WEIGHTS[s1],\n                sw2 = constants.STATUS_WEIGHTS[s2],\n                sw1_offline = sw1 >= constants.STATUS_WEIGHTS.offline,\n                sw2_offline = sw2 >= constants.STATUS_WEIGHTS.offline;\n            if (sw1_offline ^ sw2_offline) {\n                return sw1_offline ? 1 : -1;\n            }\n        }\n        let name1, name2;\n        name1 = contact1.get('name').toLowerCase();\n        name2 = contact2.get('name').toLowerCase();\n        return name1 < name2 ? -1 : (name1 > name2 ? 1 : 0);\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed;\n        if (_.has(changed, 'name') || _.has(changed, 'status_updated')) {\n            this.sort();\n            this.trigger('update_contact_item', contact);\n        }\n    }\n});\n\nxabber.Group = Backbone.Model.extend({\n    defaults: {\n        counter: {all: 0, online: 0}\n    },\n\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        attrs.name || (attrs.name = attrs.id);\n        this.set(attrs);\n        this._settings = this.account.groups_settings.get(attrs.name);\n        if (!this._settings)\n            this._settings = this.account.groups_settings.create({name: attrs.name});\n        this.settings = this._settings.attributes;\n        this.contacts = new xabber.GroupContacts(null, {group: this});\n        this.settings_view = new xabber.GroupSettingsView({model: this});\n        this.contacts.on(\"add update_contact_item\", this.updateCounter, this);\n        this.contacts.on(\"destroy\", this.onContactRemoved, this);\n        xabber._roster_settings.on(\"change\", this.onChangedRosterSettings, this);\n    },\n\n    isSpecial: function () {\n        return _.isNumber(this.get('id'));\n    },\n\n    updateCounter: function () {\n        let all = this.contacts.length,\n            online = all - this.contacts.where({status: 'offline'}).length;\n        this.set('counter', {all: all, online: online});\n    },\n\n    renameGroup: function (new_name) {\n        let name = this.get('name'),\n            attrs = _.clone(this.settings);\n        attrs.name = new_name;\n        this._settings.destroy();\n        this._settings = this.account.groups_settings.create(attrs);\n        this.settings = this._settings.attributes;\n        this.set({id: new_name, name: new_name});\n        this.trigger('rename', this, name);\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            index = groups.indexOf(new_name);\n            if (index < 0) {\n                groups.push(new_name);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    deleteGroup: function () {\n        let name = this.get('name');\n        this._settings.destroy();\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    removeContact: function (contact) {\n        if (this.contacts.get(contact)) {\n            this.contacts.remove(contact);\n            this.onContactRemoved(contact);\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        this.updateCounter();\n        this.trigger('remove_contact', contact);\n        this.contacts.length || this.destroy();\n    },\n\n    onChangedRosterSettings: function () {\n        let changed = xabber._roster_settings.changed;\n        if (_.has(changed, 'show_offline')) {\n            this._settings.trigger('change:show_offline');\n        }\n        if (_.has(changed, 'sorting')) {\n            this.contacts.sort();\n            this._settings.trigger('change:sorting');\n        }\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    }\n});\n\nxabber.GroupView = xabber.BasicView.extend({\n    className: 'roster-group',\n    events: {\n        \"click .group-head\": \"toggle\",\n        \"click .group-head .group-icon\": \"showGroupSettings\",\n        \"mouseover .group-head\": \"showSettingsIcon\",\n        \"mouseleave .group-head\": \"updateGroupIcon\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.updateName();\n        this.updateGroupIcon();\n        this.updateMembersCounter();\n        this.model.contacts.on(\"add\", this.onContactAdded, this);\n        this.model.on(\"remove_contact\", this.onContactRemoved, this);\n        this.model.contacts.on(\"update_contact_item\", this.updateContactItem, this);\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:counter\", this.updateMembersCounter, this);\n        this.model._settings.on(\"change:show_offline\", this.onChangedOfflineSetting, this);\n        this.model._settings.on(\"change:sorting\", this.onChangedSortingSetting, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.roster-contact').showIf(expanded);\n        this.parent.parent.onListChanged();\n    },\n\n    updateGroupIcon: function () {\n        let mdi_icon, show_offline = this.model.settings.show_offline;\n        if (show_offline === 'default') {\n            mdi_icon = 'settings';\n        } else if (show_offline === 'yes') {\n            mdi_icon = 'group-filled';\n        } else if (show_offline === 'no') {\n            mdi_icon = 'group-outline';\n        }\n        this.$('.group-icon').attr('data-mdi', mdi_icon).hideIf(mdi_icon === 'settings');\n    },\n\n    updateName: function () {\n        this.$('.group-name').text(this.model.get('name'));\n    },\n\n    updateMembersCounter: function () {\n        let counter = this.model.get('counter');\n        this.$('.participant-counter').text('('+counter.online+'/'+counter.all+')');\n    },\n\n    onContactAdded: function (contact) {\n        let view = this.addChild(contact.get('jid'), this.item_view, {model: contact});\n        this.updateContactItem(contact);\n    },\n\n    onContactRemoved: function (contact) {\n        this.removeChild(contact.get('jid'));\n        this.parent.parent.onListChanged();\n    },\n\n    updateContactItem: function (contact) {\n        let view = this.child(contact.get('jid'));\n        if (!view) return;\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes'),\n            is_offline = constants.STATUS_WEIGHTS[contact.get('status')] >= 6;\n\n        view.$el.switchClass('invisible', is_offline && !show_offline).detach();\n        let index = this.model.contacts.indexOf(contact);\n        if (index === 0) {\n            this.$('.group-head').after(view.$el);\n        } else {\n            this.$('.roster-contact').eq(index - 1).after(view.$el);\n        }\n        view.$el.showIf(this.data.get('expanded'));\n        this.parent.parent.onListChanged();\n        return view;\n    },\n\n    showSettingsIcon: function () {\n        this.$('.group-icon').attr('data-mdi', 'settings').removeClass('hidden');\n    },\n\n    showGroupSettings: function (ev) {\n        ev.stopPropagation();\n        this.model.showSettings();\n    },\n\n    onChangedOfflineSetting: function () {\n        this.updateGroupIcon();\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes');\n        _.each(this.children, function (view) {\n            let is_offline = constants.STATUS_WEIGHTS[view.model.get('status')] >= 6;\n            view.$el.switchClass('invisible', is_offline && !show_offline);\n        });\n        this.parent.parent.onListChanged();\n    },\n\n    onChangedSortingSetting: function () {\n        _.each(this.children, function (view) { view.$el.detach(); });\n        this.model.contacts.each((c) => { this.updateContactItem(c); });\n        this.parent.parent.onListChanged();\n    }\n});\n\nxabber.GroupRightView = xabber.GroupView.extend({\n    template: templates.group_right,\n    item_view: xabber.ContactItemRightView,\n\n    __initialize: function () {\n        this.data.set('expanded', this.model.settings.expanded);\n    },\n\n    toggle: function () {\n        let expanded = !this.data.get('expanded');\n        this.data.set('expanded', expanded);\n        this.model._settings.save('expanded', expanded);\n    }\n});\n\nxabber.GroupLeftView = xabber.GroupView.extend({\n    template: templates.group_left,\n    item_view: xabber.ContactItemLeftView,\n\n    __initialize: function () {\n        this.data.set('expanded', true);\n    },\n\n    toggle: function (ev) {\n        ev.stopPropagation();\n        this.data.set('expanded', !this.data.get('expanded'));\n    }\n});\n\nxabber.GroupSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal group-settings',\n    template: templates.group_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.GROUP_SETTINGS,\n\n    events: {\n        \"change .offline input[type=radio][name=offline]\": \"setOffline\",\n        \"click .btn-apply\": \"applySettings\",\n        \"click .btn-delete\": \"deleteGroup\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this._settings = this.model._settings;\n        let name = this.model.get('name');\n        if (this.model.isSpecial()) {\n            this.$('.group-name input').attr('readonly', true);\n            this.$('.btn-delete').addClass('hidden');\n        }\n        this.model.on(\"destroy\", this.onDestroy, this);\n    },\n\n    render: function () {\n        this.$('.group-name input').val(this.model.get('name'));\n        this.$('.group-name .errors').addClass('hidden');\n        this.$('.offline input[type=radio][name=offline][value='+\n            (this.model.settings.show_offline)+']').prop('checked', true);\n        this.$el.openModal({\n            ready: function () {\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    setOffline: function (ev) {\n        this.model._settings.save('show_offline', ev.target.value);\n    },\n\n    validateName: function (name) {\n        if (!name) {\n            return xabber.getString(\"dialog_add_circle__error__text_input_name\");\n        }\n        if (this.model.collection.get(name)) {\n            return xabber.getString(\"dialog_add_circle__error__text_wrong_name\");\n        }\n    },\n\n    applySettings: function () {\n        let new_name = this.$('.group-name input').val();\n        if (new_name !== this.model.get('name')) {\n            let name_error = this.validateName(new_name);\n            if (name_error) {\n                this.$('.group-name .errors').text(name_error).removeClass('hidden');\n                return;\n            } else {\n                this.model.renameGroup(new_name);\n            }\n        }\n        this.close();\n    },\n\n    deleteGroup: function () {\n        let name = this.model.get('name');\n        utils.dialogs.ask(xabber.getString(\"circle_remove\"), xabber.getString(\"circle_remove_confirm\", [name]), null, { ok_button_text: xabber.getString(\"remove\")})\n            .done((result) => {\n                result && this.model.deleteGroup();\n            });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onDestroy: function () {\n        this.$el.closeModal({ complete: this.remove.bind(this) });\n    }\n});\n\nxabber.Groups = Backbone.Collection.extend({\n    model: xabber.Group,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"change:id\", this.sort, this);\n        this.account.on('render_settings', this.render, this);\n        this.account.on('render_single_settings', this.renderSingleAccount, this);\n    },\n\n    comparator: function (a, b) {\n        if (a.isSpecial() === b.isSpecial()) {\n            return a.get('id') < b.get('id') ? -1 : 1;\n        }\n        return a.isSpecial() ? 1 : -1;\n    },\n\n    notSpecial: function () {\n        return this.filter(function (group) { return !group.isSpecial(); });\n    },\n\n    onGroupAdded: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group});\n    },\n\n    onGroupAddedSingleAccount: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group, single_account: this.single_account});\n    },\n\n    render: function () {\n        this.on(\"add\", this.onGroupAdded, this);\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group});\n        });\n    },\n\n    renderSingleAccount: function (single_account) {\n        single_account.$('.groups').html('');\n        !this.rendered_once && this.on(\"add\", this.onGroupAddedSingleAccount, this);\n        this.single_account = single_account\n        this.rendered_once = true\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group, single_account: single_account});\n        });\n    }\n});\n\nxabber.Contacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"deactivate destroy\", this.removeAllContacts, this);\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    mergeContact: function (attrs) {\n        if (typeof attrs !== \"object\") {\n            attrs = {jid: attrs};\n        }\n        let contact = this.get(attrs.jid);\n        if (contact) {\n            if (attrs.avatar) {\n                attrs.image = attrs.avatar;\n                delete attrs.avatar;\n                contact.cached_image = Images.getCachedImage(attrs.image);\n            }\n            if (attrs.group_chat && attrs.is_deleted) {\n                delete attrs.group_chat;\n            }\n            contact.set(attrs);\n        } else {\n            contact = this.create(attrs, {account: this.account});\n        }\n        return contact;\n    },\n\n    blockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    unblockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    removeAllContacts: function () {\n        _.each(_.clone(this.models), function (contact) {\n            contact.destroy();\n        });\n        this.account.trigger('remove_saved_chat');\n    },\n\n    handlePresence: function (presence, jid) {\n        let contact = this.mergeContact(jid);\n        contact.handlePresence(presence);\n    }\n});\n\nxabber.BlockList = Backbone.Model.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.list = {};\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    length: function () {\n        return Object.keys(this.list).length;\n    },\n\n    isBlocked: function (jid) {\n        return this.list.hasOwnProperty(jid);\n    },\n\n    onContactRemoved: function (jid) {\n        delete this.list[jid];\n    },\n\n    onContactAdded: function (attrs) {\n        this.list[attrs.jid] = attrs;\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onBlockingIQ.bind(this),\n            Strophe.NS.BLOCKING, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n        this.account.sendIQFast(iq, this.onBlockingIQ.bind(this));\n    },\n\n    onBlockingIQ: function (iq) {\n        let $elem = $(iq).find(`[xmlns=\"${Strophe.NS.BLOCKING}\"]`),\n            tag = $elem[0].tagName.toLowerCase(),\n            blocked = tag.startsWith('block');\n        $elem.find('item').each((idx, item) => {\n            let jid = item.getAttribute('jid'),\n                resource = Strophe.getResourceFromJid(jid),\n                domain = Strophe.getDomainFromJid(jid),\n                attrs = {jid},\n                contact = this.contacts.get(jid);\n            resource && (attrs.resource = true);\n            (domain === jid) && (attrs.domain = true);\n            if (blocked)\n                this.contacts.trigger(\"add_to_blocklist\", attrs);\n            else {\n                this.contacts.trigger(\"remove_from_blocklist\", jid);\n                contact && contact.trigger(\"remove_from_blocklist\", contact);\n            }\n            contact && contact.set('blocked', blocked);\n        });\n        return true;\n    }\n});\n\nxabber.Roster = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.roster_version = options.roster_version || 0;\n        this.groups = this.account.groups;\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_roster\", this.onContactAdded, this);\n        this.contacts.on(\"change_in_roster\", this.onContactChanged, this);\n        this.contacts.on(\"remove_from_roster\", this.onContactRemoved, this);\n    },\n\n    update: function (contact, event) {\n        let contains = contact.get('in_roster') || contact.get('known');\n        if (contains) {\n            if (!this.get(contact)) {\n                this.add(contact);\n                contact.trigger(\"add_to_roster\", contact);\n            } else if (event === 'change') {\n                contact.trigger(\"change_in_roster\", contact);\n            }\n        } else if (this.get(contact)) {\n            this.remove(contact);\n            contact.trigger(\"remove_from_roster\", contact);\n        }\n    },\n\n    onContactAdded: function (contact) {\n        if (!contact.get('in_roster'))\n            return;\n        let groups = contact.get('groups');\n        if (!groups.length) {\n            this.addContactToGroup(contact, constants.GENERAL_GROUP_ID);\n        } else {\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n        }\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed,\n            known_changed = _.has(changed, 'known'),\n            in_roster_changed = _.has(changed, 'in_roster'),\n            groups_changed = _.has(changed, 'groups');\n        if (in_roster_changed || known_changed || groups_changed) {\n            let groups;\n            if (contact.get('in_roster')) {\n                groups = _.clone(contact.get('groups'));\n                if (!groups.length) {\n                    groups.push(constants.GENERAL_GROUP_ID);\n                }\n            } else if (contact.get('known')) {\n                groups = [];\n            }\n            // TODO: optimize\n            let groups_to_remove = this.groups.filter(function (group) {\n                return !_.contains(groups, group.get('id'));\n            });\n            _.each(groups_to_remove, function (group) {\n                group.removeContact(contact);\n            });\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n            contact.trigger('update_groups');\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        _.each(this.groups.filter(), function (group) {\n            group.removeContact(contact);\n        });\n    },\n\n    getGroup: function (name) {\n        let group = this.groups.get(name);\n        if (group)\n            return group;\n        let attrs = {id: name};\n        if (name === constants.GENERAL_GROUP_ID) {\n            attrs.name = xabber.settings.roster.general_group_name;\n        } else if (name === constants.NON_ROSTER_GROUP_ID) {\n            attrs.name = xabber.settings.roster.non_roster_group_name;\n        }\n        return this.groups.create(attrs, {account: this.account});\n    },\n\n    addContactToGroup: function (contact, name) {\n        let group = this.getGroup(name);\n        group.contacts.add(contact);\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onRosterIQ.bind(this),\n            Strophe.NS.ROSTER, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    syncFromServer: function (options, synchronization_with_stamp, is_first_sync) {\n        options = options || {};\n        let request_attrs = {xmlns: Strophe.NS.SYNCHRONIZATION},\n            cached_conversations_exclude = options.cached_conversations_exclude || [];\n        if (options.stamp)\n            request_attrs.stamp = options.stamp;\n        delete(options.stamp);\n        delete(options.cached_conversations_exclude);\n        let iq = $iq({type: 'get'}).c('query', request_attrs).cnode(new Strophe.RSM(options).toXML());\n        this.account.sendFast(iq, (response) => {\n            this.onSyncIQ(response, request_attrs.stamp, synchronization_with_stamp, is_first_sync, options.last_version_sync, cached_conversations_exclude).then(() => {\n            });\n        });\n    },\n\n    syncCachedConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(cached_conversations).each((idx, item) => {\n            this.syncConversation(null, null, item.conversation, is_first_sync);\n        });\n    },\n\n    syncConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(iq).find('conversation').each((idx, item) => {\n            this.syncConversation(iq, request_with_stamp, item, is_first_sync, cached_conversations);\n        });\n    },\n\n    syncConversation: function (iq, request_with_stamp, item, is_first_sync, cached_conversations) {\n        if (!$(item).length){\n            return;\n        }\n        if (!iq)\n            item = $($.parseXML(item)).find('conversation')[0];\n        let $item = $(item),\n            jid = $item.attr('jid'), saved = false;\n        if (cached_conversations){\n            $(cached_conversations).each((idx, conv) => {\n                if (!(conv.account_conversation_type && conv.account_conversation_type.split))\n                    return;\n                let cached_conv_type_jid = conv.account_conversation_type.split('/')[0];\n                if ((cached_conv_type_jid === jid) && (conv.account_conversation_type !== ($(item).attr('jid') +  '/' + $(item).attr('type')))){\n                    if ($item.attr('type') === Strophe.NS.GROUP_CHAT || conv.account_conversation_type.includes(Strophe.NS.GROUP_CHAT)){\n                        this.account.cached_sync_conversations.removeFromCachedConversations(conv.account_conversation_type);\n                    }\n                };\n            });\n        }\n        if (jid === this.account.get('jid'))\n            saved = true;\n        if ($item.attr('type') === Strophe.NS.SYNCHRONIZATION_OLD_OMEMO)\n            return true;\n        let $sync_metadata = $item.children('metadata[node=\"' + Strophe.NS.SYNCHRONIZATION + '\"]'),\n            type = $item.attr('type'),\n            presence = $item.children('presence'),\n            $group_metadata = $item.children('metadata[node=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_incognito =  type === Strophe.NS.GROUP_CHAT && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('privacy').text() === 'incognito',\n            is_private = is_incognito && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('parent').text(),\n            is_group_chat =  type === Strophe.NS.GROUP_CHAT || is_private || is_incognito,\n            encrypted = type === Strophe.NS.SYNCHRONIZATION_OMEMO,\n            contact = !saved && this.contacts.mergeContact({jid: jid, group_chat: is_group_chat, private_chat: is_private, incognito_chat: is_incognito, is_deleted: $item.attr('status') === 'deleted'}),\n            chat = saved ? this.account.chats.getSavedChat() : this.account.chats.getChat(contact, encrypted && 'encrypted', true),\n            message = $sync_metadata.children('last-message').children('message'),\n            current_call = $item.children('metadata[node=\"' + Strophe.NS.JINGLE_MSG + '\"]').children('call'),\n            $unread_messages = $sync_metadata.children('unread'),\n            chat_timestamp = Math.trunc(Number($item.attr('stamp'))/1000),\n            last_read_msg = $unread_messages.attr('after'),\n            last_delivered_msg = $sync_metadata.children('delivered').attr('id'),\n            last_displayed_msg = $sync_metadata.children('displayed').attr('id'),\n            unread_msgs_count = Number($unread_messages.attr('count')) || 0,\n            is_invite =  message.find('invite').length,\n            msg_retraction_version = $item.children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n            msg, options = {synced_msg: true,},\n            current_chat_timestamp = chat.get('last_sync_timestamp');\n        if (current_chat_timestamp && current_chat_timestamp > chat_timestamp){\n            console.log('old_sync_conv');\n            console.log(item);\n            return;\n        }\n        chat.set('last_sync_timestamp', chat_timestamp);\n        if (message.children('stanza-id').length\n            && message.children('stanza-id').attr('id')\n            && chat.retracted_msg_id_list.includes(message.children('stanza-id').attr('id'))){\n            return;\n        };\n        chat.set('sync_type', type);\n        (iq && !($item.attr('status') === 'deleted')) && this.account.cached_sync_conversations.putInCachedConversations({\n            account_conversation_type: $(item).attr('jid') +  '/' + $(item).attr('type'),\n            conversation: item.outerHTML,\n        });\n        if (!chat.item_view.content && (is_invite || encrypted && this.account.omemo)) {\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n        if ($item.attr('pinned') || $item.attr('pinned') === '0'){\n            chat.set('pinned', $item.attr('pinned'));\n        }\n        if (encrypted && this.account.omemo) {\n            chat.set('timestamp', chat_timestamp);\n            chat.set('opened', true);\n            if (!(chat.last_message && chat.last_message.get('message')))\n                chat.item_view.updateEncryptedChat();\n        }\n        if (!saved) {\n            if ($item.attr('mute') || $item.attr('mute') === '0') {\n                if ($item.attr('mute') < (Date.now() / 1000))\n                    chat.set('muted', false);\n                else\n                    chat.set('muted', $item.attr('mute'));\n                this.account.chat_settings.updateMutedList(contact.get('jid'), $item.attr('mute'));\n                if (contact.details_view_right)\n                    contact.details_view_right.updateNotifications();\n            } else {\n                chat.set('muted', false);\n            }\n        }\n        if ($item.attr('status') === 'archived')\n            chat.set('archived', true);\n        else if ($item.attr('status') === 'active' && !saved)\n            chat.set('archived', false);\n        if ($item.attr('status') === 'deleted') {\n            chat.get('display') && xabber.body.setScreen(xabber.body.screen.get('name'), {right_contact: '', right: undefined});\n            chat.set('opened', false);\n            chat.set('const_unread', 0);\n            this.account.cached_sync_conversations.removeFromCachedConversations($(item).attr('jid') +  '/' + $(item).attr('type'));\n            this.account.chat_settings.updateGroupChatsList(contact.get('jid'), false);\n            xabber.toolbar_view.recountAllMessageCounter();\n            xabber.chats_view.clearSearch();\n            contact && contact.set('sync_deleted', true);\n            if (is_group_chat) {\n                contact && contact.set('in_roster', false);\n                contact && contact.set('known', false);\n                contact && contact.set('removed', true);\n                this.account.cached_roster.removeFromRoster(jid);\n                contact.participants && contact.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(contact.get('jid'));\n            }\n        }\n        else\n            contact && contact.set('sync_deleted', false);\n        if (current_call.length) {\n            let $jingle_message = current_call.children('message'),\n                full_jid = $jingle_message.attr('from'),\n                session_id = $jingle_message.children('propose').attr('id');\n            chat.getCallingAvailability(full_jid, session_id, () => {\n                if (xabber.current_voip_call) {\n                    let reason = Strophe.getBareJidFromJid(full_jid) === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                    chat.sendReject({session_id: session_id, reason: reason});\n                    chat.messages.createSystemMessage({\n                        from_jid: this.account.get('jid'),\n                        message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                    });\n                } else {\n                    chat.initIncomingCall(full_jid, session_id);\n                }\n            });\n        }\n        chat.set('last_delivered_id', last_delivered_msg);\n        chat.set('last_displayed_id', last_displayed_msg);\n        chat.set('last_read_msg', last_read_msg);\n        chat.trigger('update_last_read_msg', {sync_update: true});\n        if (!message.length) {\n            chat.set('timestamp', chat_timestamp);\n            if (!(Number(last_delivered_msg) || Number(last_displayed_msg) || Number(last_read_msg))\n                && !chat.item_view.content && !chat.get('group_chat')){\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            }\n            chat.item_view.updateEmptyChat();\n        }\n        if (request_with_stamp && chat.retraction_version !== 0 && chat.retraction_version < msg_retraction_version)\n            chat.trigger(\"get_retractions_list\");\n        msg_retraction_version && (chat.retraction_version = msg_retraction_version);\n        if (request_with_stamp && chat.item_view && chat.item_view.content && !is_invite) {\n            chat.trigger('get_missed_history', request_with_stamp/1000);\n        }\n        unread_msgs_count && (options.is_unread = true);\n        options.delay = message.children('time');\n        message.length && (msg = this.account.chats.receiveChatMessage(message, options));\n        if (!(encrypted && !this.account.omemo)){\n            chat.messages_unread.reset();\n            chat.set('unread', 0);\n            chat.set('const_unread', unread_msgs_count);\n        }\n        if (msg) {\n            if (!msg.get('is_unread') && $unread_messages.attr('count') > 0 && !msg.isSenderMe() && !(msg.get('type') === 'system') && ($unread_messages.attr('after') < msg.get('stanza_id') || $unread_messages.attr('after') < msg.get('contact_stanza_id')))//TODO: change to timestamp checking\n                msg.set('is_unread', true);\n            if(!(is_invite || encrypted && this.account.omemo)) {\n                if (msg.isSenderMe() && msg.get('stanza_id') == last_displayed_msg)\n                    msg.set('state', constants.MSG_DISPLAYED);\n                else if (msg.isSenderMe() && msg.get('stanza_id') == last_delivered_msg)\n                    msg.set('state', constants.MSG_DELIVERED);\n                this.account.messages.add(msg);\n                if ((chat.last_message && (msg.get('timestamp') > chat.last_message.get('timestamp'))) || !chat.last_message){\n                    chat.last_message = msg;\n                    chat.item_view.updateLastMessage(msg);\n                    msg.get('stanza_id') && chat.set('synced_msg', msg);\n                }\n            }\n            chat.set('first_archive_id', msg.get('stanza_id'));\n        }\n        if (presence.length)\n            contact && contact.handlePresence(presence[0]);\n        else {\n            contact && contact.set('subscription_request_in', false)\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onSyncIQ: async function (iq, request_with_stamp, synchronization_with_stamp, is_first_sync, is_last_sync, cached_conversations_exclude) {\n        let sync_timestamp = Number($(iq).children(`query[xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).attr('stamp')),\n            sync_rsm_after = $(iq).find(`query set[xmlns=\"${Strophe.NS.RSM}\"]`).children('last').text();\n        this.account.last_msg_timestamp = Math.round(sync_timestamp/1000);\n        let last_chat_msg_id = $(iq).find('set last');\n        if (!request_with_stamp)\n            last_chat_msg_id.length ? (this.last_chat_msg_id = last_chat_msg_id.text()) : (this.conversations_loaded = true);\n        this.account.set('last_sync', sync_timestamp);\n        this.account.settings.update_settings({last_sync_timestamp: sync_timestamp});\n        xabber.chats_view.hideChatsFeedback();\n        if (!request_with_stamp)\n            this.account.chats.getSavedChat();\n        if (is_first_sync)\n            this.account.set('first_sync', sync_timestamp);\n        if (!$(iq).find('conversation').length || $(iq).find('conversation').length < constants.SYNCHRONIZATION_RSM_MAX ){\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                if (!is_last_sync){\n                    cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                        return $(this).attr('jid') +  '/' + $(this).attr('type');\n                    }).toArray());\n                    res = res.filter(item => !cached_conversations_exclude.includes(item.account_conversation_type));\n                    this.syncCachedConversations(null, request_with_stamp, is_first_sync, res);\n                }\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                this.account.cached_sync_conversations.putInCachedConversations({\n                    account_conversation_type: 'last_sync_timestamp',\n                    timestamp: sync_timestamp,\n                });\n                if (!is_last_sync){\n                    this.account.sendPresence();\n                    let saved_chat = this.account.chats.getSavedChat();\n                    saved_chat.set('opened', true);\n                    saved_chat.item_view.updateLastMessage();\n                    this.account.getAllMessageRetractions((result) => {\n                        let retract_version = $(result).find(`query[xmlns=\"${Strophe.NS.REWRITE}\"]`).attr('version');\n                        if (retract_version > this.account.retraction_version)\n                            this.account.retraction_version = retract_version;\n                    })\n                    this.account.get('first_sync') && this.syncFromServer({stamp: this.account.get('first_sync'), max: constants.SYNCHRONIZATION_RSM_MAX, last_version_sync: true}, true);\n                }\n            });\n        }\n        else if ($(iq).find('conversation').length) {\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                    return $(this).attr('jid') +  '/' + $(this).attr('type');\n                }).toArray());\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                let sync_options = {max: constants.SYNCHRONIZATION_RSM_MAX, after: sync_rsm_after};\n                if (request_with_stamp)\n                    sync_options.stamp = request_with_stamp;\n                if (is_last_sync)\n                    sync_options.last_version_sync = true;\n                if (cached_conversations_exclude && cached_conversations_exclude.length)\n                    sync_options.cached_conversations_exclude = cached_conversations_exclude;\n                this.syncFromServer(sync_options);\n            });\n        }\n    },\n\n    getRoster: function () {\n        let request_ver = this.roster_version;\n        this.account.cached_roster.getAllFromRoster((roster_items) => {\n            // $(roster_items).each((idx, roster_item) => {\n            //     this.contacts.mergeContact(roster_item);\n            // });\n            if (!roster_items.length && request_ver != 0) {\n                this.roster_version = 0;\n            }\n            this.getFromServer();\n        });\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.ROSTER, ver: this.roster_version});\n        this.account.sendIQFast(iq, (iq) => {\n            this.onRosterIQ(iq);\n            this.account.dfd_presence.resolve();\n        });\n    },\n\n    onRosterIQ: function (iq) {\n        let new_roster_version = $(iq).children('query').attr('ver');\n        $(iq).children('query').find('item').each((idx, item) => {\n            this.onRosterItem(item);\n        });\n        if (iq.getAttribute('type') === 'set') {\n            this.account.onSetIQResult(iq);\n        }\n        else {\n            if (iq.getAttribute('type') === 'result') {\n                new_roster_version && (this.roster_version = new_roster_version);\n                this.account.cached_roster.putInRoster({\n                    jid: 'roster_version',\n                    is_version: true,\n                    version: this.roster_version\n                });\n            }\n        }\n        return true;\n    },\n\n    onRosterItem: function (item) {\n        let jid = item.getAttribute('jid');\n        if (jid === this.account.get('jid'))\n            return;\n        let contact = this.contacts.mergeContact(jid),\n            subscription = item.getAttribute(\"subscription\"),\n            subscription_preapproved = item.getAttribute(\"approved\"),\n            ask = item.getAttribute(\"ask\");\n        if (contact.get('invitation') && (subscription === 'both' || subscription === 'to')) {\n            contact.set('invitation', false);\n            contact.trigger('remove_invite');\n        }\n        if (subscription === 'remove') {\n            contact.set({\n                in_roster: false,\n                known: false,\n                name: contact.get('jid'),\n                subscription: undefined,\n                subscription_request_out: false\n            });\n            contact.set('subscription_preapproved', false)\n            this.account.cached_roster.removeFromRoster(jid);\n            return;\n        }\n        let groups = [];\n        $(item).find('group').each(function () {\n            let group = $(this).text();\n            groups.indexOf(group) < 0 && groups.push(group);\n        });\n        let attrs = {\n            subscription: subscription || 'none',\n            in_roster: true,\n            roster_name: item.getAttribute(\"name\"),\n            groups: groups\n        };\n        if (subscription === 'both') {\n            attrs.subscription_request_out = false;\n            attrs.subscription_request_in = false;\n        }\n        if (subscription === 'from')\n            attrs.subscription_request_in = false;\n        if (subscription === 'to')\n            attrs.subscription_request_out = false;\n        if (ask === 'subscribe')\n            attrs.subscription_request_out = true;\n        else\n            attrs.subscription_request_out = false;\n        attrs.roster_name && (attrs.name = attrs.roster_name);\n        this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && (attrs.subscription_preapproved = subscription_preapproved ? true : subscription_preapproved);\n        contact.set(attrs);\n        contact.updateCachedInfo();\n    }\n});\n\nxabber.AccountRosterView = xabber.BasicView.extend({\n    className: 'account-roster-wrap',\n\n    events: {\n        \"click .roster-account-info-wrap .status-button\": \"openChangeStatus\",\n        \"click .roster-account-info\": \"toggle\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.groups = this.account.groups;\n        this.roster = this.account.roster;\n        this.contacts = this.account.contacts;\n        this.$el.attr('data-jid', this.account.get('jid'));\n        this.$el.appendTo(this.parent.$('.contact-list'));\n        this.$info = this.$('.roster-account-info-wrap');\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.on(\"change:name\", this.updateName, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on(\"change:status_updated\", this.updateStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.groups.on(\"add\", this.onGroupAdded, this);\n        this.groups.on(\"rename\", this.onGroupRenamed, this);\n        this.groups.on(\"destroy\", this.onGroupRemoved, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', true);\n    },\n\n    updateName: function () {\n        this.$info.find('.name').text(this.account.get('name'));\n    },\n\n    updateStatus: function () {\n        this.$info.find('.status').attr('data-status', this.account.get('status'));\n        this.$info.find('.status-message').text(this.account.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.account.cached_image;\n        this.$info.find('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.parent.updateScrollBar();\n    },\n\n    updateGroupPosition: function (view) {\n        view.$el.detach();\n        let index = this.groups.indexOf(view.model);\n        if (index === 0) {\n            this.$info.after(view.$el);\n        } else {\n            this.$('.roster-group').eq(index - 1).after(view.$el);\n        }\n        this.parent.updateScrollBar();\n    },\n\n    onGroupAdded: function (group) {\n        let view = this.addChild(group.get('id'), this.group_view, {model: group});\n        this.updateGroupPosition(view);\n    },\n\n    onGroupRenamed: function (group, old_name) {\n        let view = this.child(old_name);\n        delete this.children[old_name];\n        this.children[group.get('name')] = view;\n        view && this.updateGroupPosition(view);\n    },\n\n    onGroupRemoved: function (group) {\n        this.removeChild(group.get('id'));\n    },\n\n    toggle: function (ev) {\n        this.data.set('expanded', !this.data.get('expanded'));\n    },\n\n    openChangeStatus: function (ev) {\n        if (!xabber.change_status_view)\n            xabber.change_status_view = new xabber.ChangeStatusView();\n        xabber.change_status_view.open(this.account);\n    }\n});\n\nxabber.AccountRosterRightView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_right,\n    group_view: xabber.GroupRightView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_RIGHT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.contacts.on(\"add_to_roster change_in_roster remove_from_roster\",\n            this.updateCounter, this);\n        this.contacts.on(\"add_to_roster remove_from_roster\",\n            this.updateGlobalCounter, this);\n    },\n\n    updateCounter: function () {\n        if (!this.roster)\n            this.roster = this.account.roster;\n        let all = this.roster.length,\n            online = all - this.roster.where({status: 'offline'}).length;\n        this.$info.find('.counter').text(online + '/' + all);\n    },\n\n    updateGlobalCounter: function () {\n        this.parent.updateCounter();\n    }\n});\n\nxabber.AccountRosterLeftView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_left,\n    group_view: xabber.GroupLeftView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_LEFT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.$info.find('.jid').text(this.account.get('jid'));\n    },\n\n    search: function (query) {\n        this.$el.removeClass('shrank');\n        this.$('.group-head').addClass('hidden');\n        let count = 0, hashes = {};\n        this.$('.roster-contact').each((idx, item) => {\n            let $item = $(item),\n                jid = $item.data('jid'),\n                contact = this.roster.get(jid);\n            if (!contact) return;\n            if (hashes[contact.hash_id]) {\n                $item.addClass('hidden');\n                return;\n            }\n            hashes[contact.hash_id] = true;\n            let name = contact.get('name').toLowerCase(),\n                hide = name.indexOf(query) < 0 && jid.indexOf(query) < 0;\n            $item.hideIf(hide);\n            hide || count++;\n        });\n        this.$('.roster-account-info-wrap').showIf(count);\n    },\n\n    searchAll: function () {\n        this.$el.switchClass('shrank', !this.data.get('expanded'));\n        this.$('.roster-account-info-wrap').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n        this.$('.list-item').removeClass('hidden');\n    }\n});\n\nxabber.BlockListView = xabber.BasicView.extend({\n    avatar_size: constants.AVATAR_SIZES.CONTACT_BLOCKED_ITEM,\n    events: {\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .blocked-contact input\": \"selectUnblock\",\n        \"click .btn-unblock-selected\": \"unblockSelected\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        for (let jid in this.account.blocklist.list) {\n            this.onContactAdded(this.account.blocklist.list[jid], false);\n        };\n        this.updateTabsLabel();\n        this.account.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.account.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    render: function (options) {\n        this.deselectBlocked();\n    },\n\n    selectUnblock: function (ev) {\n        this.updateUnblockButton();\n    },\n\n    deselectBlocked: function (ev) {\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    updateUnblockButton: function () {\n        let has_changes = this.$('.blocked-contact input:checked').length;\n        this.$('.btn-unblock-selected').hideIf(!has_changes);\n        this.$('.btn-deselect-blocked').hideIf(!has_changes);\n        this.$('.btn-block').hideIf(has_changes);\n    },\n\n    unblockSelected: function (ev) {\n        let $current_tab = this.$('.settings-block-wrap:not(.hidden)'),\n            selected = $current_tab.find('.blocked-contact input:checked').closest('.blocked-contact');\n        selected.each((index, item) => {\n            this.unblockContactByJid($(item).attr('data-jid'))\n        });\n    },\n\n    unblockContactByJid: function (jid) {\n        let contact = this.account.contacts.get(jid);\n        if (contact)\n            contact.unblock();\n        else {\n            this.account.contacts.unblockContact(jid);\n        }\n    },\n\n    hideEmptyContainers: function () {\n        let tabs = this.$('.blocked-list:empty');\n        tabs.each((idx, item) => {\n            let $tab = $(item).closest('.settings-block-wrap');\n            $tab.find('.placeholder').removeClass('hidden');\n        });\n        this.updateUnblockButton();\n    },\n\n    onContactAdded: function (attrs) {\n        let rendered;\n        this.$('.blocked-contact').each((idx, item) => { //this construction avoids being destroyed by stupid domain and jid names in blocklist\n            ($(item).attr('data-jid') === attrs.jid) && (rendered = true);\n        });\n        if (rendered)\n            return;\n        let tmp = templates.contact_blocked_item({jid: attrs.jid});\n        if (attrs.resource) {\n            this.$('.blocked-invitations').append(tmp);\n            this.$('.settings-tab[data-block-name=\"blocklist-invitations\"]').removeClass('hidden');\n            this.$('.blocked-invitations-placeholder').addClass('hidden');\n        }\n        else if (attrs.domain) {\n            this.$('.blocked-domains').append(tmp);\n            this.$('.blocked-domains-placeholder').addClass('hidden');\n        }\n        else {\n            this.$('.blocked-contacts').append(tmp);\n            this.$('.blocked-contacts-placeholder').addClass('hidden');\n        }\n        if (this.parent && this.parent.updateHeight){\n            this.parent.updateBlockedLabel();\n            this.parent.updateHeight();\n            setTimeout(() => {\n                this.parent.updateScrollBar();\n            }, 250)\n        }\n        this.updateTabsLabel();\n    },\n\n    onContactRemoved: function (jid) {\n        let $elem = this.$(`.blocked-contact[data-jid=\"${jid}\"]`);\n        $elem.detach();\n\n        if (this.parent && this.parent.updateHeight){\n            this.parent.updateBlockedLabel();\n            this.parent.updateHeight();\n            setTimeout(() => {\n                this.parent.updateScrollBar();\n            }, 250)\n        }\n        this.updateTabsLabel();\n        this.hideEmptyContainers();\n    },\n\n    updateTabsLabel: function () {\n        if (!(this.account.blocklist && this.account.blocklist.list))\n            return;\n        let contacts, domains, invitations;\n        contacts = domains = invitations = 0;\n\n        for (let jid in this.account.blocklist.list) {\n            let item = this.account.blocklist.list[jid];\n            if (item.resource)\n                invitations++;\n            else if (item.domain)\n                domains++;\n            else\n                contacts++;\n        }\n\n        let contact_label_text = contacts === 0 ? xabber.getString(\"blocked_contacts_empty\") : xabber.getQuantityString(\"blocked_contacts_number_tab_label\", contacts),\n            domains_label_text = domains === 0 ? xabber.getString(\"blocked_domains_empty\") : xabber.getQuantityString(\"blocked_domains_number\", domains),\n            invitations_label_text = invitations === 0 ? xabber.getString(\"blocked_invitations_empty\") : xabber.getQuantityString(\"blocked_invitations_number\", invitations);\n        this.$('.settings-tab[data-block-name=\"blocklist-contacts\"] .settings-block-label').text(contact_label_text);\n        this.$('.settings-tab[data-block-name=\"blocklist-domains\"] .settings-block-label').text(domains_label_text);\n        this.$('.settings-tab[data-block-name=\"blocklist-invitations\"] .settings-block-label').text(invitations_label_text);\n    },\n});\n\nxabber.RosterView = xabber.SearchPanelView.extend({\n    ps_selector: '.contact-list-wrap',\n\n    _initialize: function () {\n        this._settings = xabber._roster_settings;\n        this.model.on(\"activate\", this.updateOneRosterView, this);\n        this.model.on(\"update_order\", this.updateRosterViews, this);\n        this.model.on(\"deactivate destroy\", this.removeRosterView, this);\n        this.on(\"before_hide\", this.saveScrollBarOffset, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    updateOneRosterView: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view) {\n            view.$el.detach();\n        } else if (account.isConnected()) {\n            view = this.addChild(jid, this.account_roster_view, {account: account});\n        } else {\n            return;\n        }\n        let index = this.model.connected.indexOf(account);\n        if (index === 0) {\n            this.$('.contact-list').prepend(view.$el);\n        } else {\n            this.$('.contact-list').children().eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    },\n\n    updateRosterViews: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            view && this.$('.contact-list').append(view.$el);\n        });\n        this.updateScrollBar();\n    },\n\n    removeRosterView: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateScrollBar();\n    }\n});\n\n\nxabber.RosterLeftView = xabber.RosterView.extend({\n    className: 'roster-left-container container',\n    template: templates.roster_left,\n    ps_settings: {theme: 'item-list'},\n    main_container: '.contact-list',\n    account_roster_view: xabber.AccountRosterLeftView,\n\n    __initialize: function () {\n        this.model.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    updateLeftIndicator: function () {\n        this.$el.attr('data-indicator', this.model.connected.length > 1);\n    },\n\n    getContactForItem: function (item) {\n        let $item = $(item),\n            account_jid = $item.parent().parent().data('jid'),\n            jid = $item.data('jid'),\n            roster_view = this.child(account_jid);\n        return roster_view && roster_view.roster.get(jid);\n    },\n\n    render: function (options) {\n        (options.right !== 'chat' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    searchAll: function () {\n        _.each(this.children, function (view) {\n            view.searchAll();\n        });\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id) {\n            (arrow === 'up') && (this.ps_container[0].scrollTop = 0);\n            return;\n        }\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if ($selection.length && arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n        || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        if ($selection.length && arrow === 'up' && ($selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop <= this.ps_container[0].scrollTop\n        || $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n        }\n    },\n\n    onListChanged: function () {\n        this.updateSearch();\n    }\n});\n\nxabber.RosterSettingsView = xabber.BasicView.extend({\n    className: 'roster-settings-wrap',\n    template: templates.roster_settings,\n\n    events: {\n        \"change .offline-contacts input\": \"setOfflineSetting\",\n        \"change .sorting-contacts input\": \"setSortingSetting\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-subblock-wrap.contact-list'));\n    },\n\n    render: function () {\n        this.$('.offline-contacts input[type=radio][name=offline-contacts][value='+\n            (this.model.get('show_offline'))+']').prop('checked', true);\n        this.$('.sorting-contacts input[type=radio][name=sorting-contacts][value='+\n            (this.model.get('sorting'))+']').prop('checked', true);\n    },\n\n    setOfflineSetting: function () {\n        this.model.save('show_offline',\n            this.$('.offline-contacts input[type=radio][name=offline-contacts]:checked').val());\n    },\n\n    setSortingSetting: function () {\n        this.model.save('sorting',\n            this.$('.sorting-contacts input[type=radio][name=sorting-contacts]:checked').val());\n    }\n});\n\nxabber.AccountGroupView = xabber.BasicView.extend({\n    className: 'group',\n    template: function () {\n        this.$el.append('<div class=\"group-name one-line\"/><span class=\"group-members-count\"/>');\n    },\n\n    events: {\n        \"click\": \"showGroupSettings\"\n    },\n\n    _initialize: function (options, attrs) {\n        this.$('.group-name').text(this.model.get('name'));\n        this.$('.group-members-count').text(this.model.get('counter').all);\n        let index = this.model.collection.indexOf(this.model),\n            $parent_el;\n        if (options.single_account && options.single_account.model.get('jid') != this.model.account.get('jid'))\n            return;\n        if (options.single_account)\n            $parent_el = options.single_account.$('.groups');\n        else\n            $parent_el = this.model.account.settings_account_modal.$('.groups');\n        if (index === 0) {\n            $parent_el.prepend(this.$el);\n        } else {\n            $parent_el.children().eq(index - 1).after(this.$el);\n        }\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    showGroupSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.ContactPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap contact-placeholder-wrap noselect',\n    template: templates.contact_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"contact_list__placeholder\"));\n        }\n    },\n});\n\nxabber.AddContactView = xabber.BasicView.extend({\n    className: 'modal main-modal add-contact-modal',\n    template: templates.add_contact,\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .dropdown-content#select-account-for-add-contact\": \"selectAccount\",\n        \"click .existing-group-field label\": \"editGroup\",\n        \"change .new-group-name input\": \"checkNewGroup\",\n        \"keyup .new-group-name input\": \"checkNewGroup\",\n        \"keyup .name-field #new_contact_username\": \"checkJid\",\n        \"focusout .name-field #new_contact_username\": \"focusoutInputField\",\n        \"focusout .new-group-name #new-group-name\": \"addNewGroup\",\n        \"click .btn-add\": \"stepForward\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.group_data = new Backbone.Model;\n        this.group_data.on(\"change\", this.updateGroups, this);\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = options.account ? [options.account] : xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-add-contact').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-add-contact').append(\n                this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            ready: () => {\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                });\n                this.$('input[name=\"username\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.renderGroupsForAccount(account);\n    },\n\n    stepForward: function () {\n        let jid = this.$('input[name=username]').val().trim();\n        this.$el.append($(templates.preloader()))\n        this.$('.btn-add').addClass('hidden-disabled')\n        this.$('input[name=contact_name]').val('');\n        if (this.account.connection && this.account.connection.connected) {\n            this.account.getConnectionForIQ().vcard.get(jid, (vcard) => {\n                    let username = vcard.username ? vcard.username : vcard.fullname ? vcard.fullname : ''\n                    username && this.$('input[name=contact_name]').val(username);\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.addContact()\n                },\n                (err) => {\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.$('input[name=username]').addClass('invalid')\n                        .siblings('.errors').text($(err).find('error text').text());\n                });\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_contact_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    renderGroupsForAccount: function (account) {\n        this.group_data.set({\n            selected: [],\n            groups: _.map(account.groups.notSpecial(), function (group) {\n                return group.get('name');\n            })\n        }, {silent: true});\n        this.updateGroups();\n    },\n\n    updateGroups: function () {\n        let selected = this.group_data.get('selected');\n        this.$('.groups').html(templates.groups_checkbox_list_contact({\n            groups: _.map(this.group_data.get('groups'), function (name) {\n                return { name: name, id: uuid(), checked: _.contains(selected, name) };\n            })\n        }));\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    editGroup: function (ev) {\n        ev.preventDefault();\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            selected = _.clone(this.group_data.get('selected')),\n            idx = selected.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            idx < 0 && selected.push(group_name);\n        } else if (idx >= 0) {\n            selected.splice(idx, 1);\n        }\n        this.group_data.set('selected', selected);\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox #new_group_checkbox');\n        $checkbox.prop('disabled', !(name && !_.contains(this.group_data.get('groups'), name)));\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.addNewGroup();\n    },\n\n    addNewGroup: function (ev) {\n        ev && ev.preventDefault();\n        if (this.$('.new-group-checkbox #new_group_checkbox').prop('disabled'))\n            return;\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.group_data.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            let selected = _.clone(this.group_data.get('selected'));\n            selected.push(name);\n            groups.push(name);\n            this.group_data.set({groups: groups, selected: selected});\n        }\n    },\n\n    focusoutInputField: function () {\n        if (!this.$('input[name=username]').val().trim()) {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n        }\n    },\n\n    checkJid: function (ev) {\n        let jid = this.$('input[name=username]').val().trim(),\n            error_text,\n            regexp_full_jid = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))|(([0-9]{1,3}\\.){3}[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!regexp_full_jid.test(jid) && jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        }\n        else {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n            if (ev.keyCode === constants.KEY_ENTER)\n                this.stepForward();\n        }\n    },\n\n    addContact: function () {\n        this.$('span.errors').text('').addClass('hidden');\n        let jid = this.$('input[name=username]').removeClass('invalid').val().trim(),\n            name = this.$('input[name=contact_name]').removeClass('invalid').val(),\n            groups = this.group_data.get('selected'),\n            contact, error_text,\n            regexp = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (jid)\n            jid = jid.toLowerCase()\n        jid = Strophe.getBareJidFromJid(jid);\n        if (!jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_input_username\");\n        } else if (jid === this.account.get('jid')) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_can_not_add_youself\");\n        } else if (!regexp.test(jid)) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        else {\n            contact = this.account.contacts.mergeContact(jid);\n            if (contact.get('in_roster')) {\n                error_text = xabber.getString(\"dialog_add_contact__error__text_already_in_roster\");\n            }\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        } else {\n            !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            contact.trigger('presence', contact, 'subscribe_from');\n            contact.trigger(\"open_chat\", contact, {right_force_close: true, force_opened_state: true});\n            this.close();\n        }\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.GroupSettings = Backbone.Model.extend({\n    idAttribute: 'name',\n    defaults: {\n        expanded: true,\n        show_offline: 'default',\n        sorting: 'default',\n        custom_notifications: false,\n        notifications: false,\n        message_preview: false\n    }\n});\n\nxabber.GroupsSettings = Backbone.CollectionWithStorage.extend({\n    model: xabber.GroupSettings,\n\n    _initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"destroy\", this.clearStorage, this);\n        this.fetch();\n    }\n});\n\nxabber.RosterSettings = Backbone.ModelWithStorage.extend({\n\n    defaults: function () {\n        let general_group_name = xabber.getString(\"circles__name_general_circle\"),\n            non_roster_group_name = xabber.getString(\"circles__name_non_roster_circle\");\n        return {\n            pinned: false,\n            show_offline: 'yes',\n            sorting: 'online-first',\n            general_group_name,\n            non_roster_group_name\n        };\n    }\n});\n\nxabber.CachedRoster = Backbone.ModelWithDataBase.extend({\n    putInRoster: function (value, callback) {\n        this.database.put('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromRoster: function (value, callback) {\n        this.database.get('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromRoster: function (callback) {\n        this.database.get_all('roster_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromRoster: function (value, callback) {\n        this.database.remove('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('roster_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('roster_items');\n    }\n});\n\nxabber.CachedSyncСonversations = Backbone.ModelWithDataBase.extend({\n    putInCachedConversations: function (value, callback) {\n        this.database.put('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedConversations: function (value, callback) {\n        this.database.get('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedConversations: function (callback) {\n        this.database.get_all('conversation_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedConversations: function (value, callback) {\n        this.database.remove('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('conversation_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('conversation_items');\n    }\n});\n\nxabber.CachedServerFeatures = Backbone.ModelWithDataBase.extend({\n    putInCachedFeatures: function (value, callback) {\n        this.database.put('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedFeatures: function (value, callback) {\n        this.database.get('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedFeatures: function (callback) {\n        this.database.get_all('server_features_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedFeatures: function (value, callback) {\n        this.database.remove('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('server_features_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('server_features_items');\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.groups_settings = new xabber.GroupsSettings(null, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-groups-settings-' + this.get('jid')\n    });\n    this.cached_roster = new xabber.CachedRoster(null, {\n        name:'cached-roster-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'roster_items',\n        primKey: 'jid'\n    });\n    this.cached_sync_conversations = new xabber.CachedSyncСonversations(null, {\n        name:'cached-conversation-list-v108-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'conversation_items',\n        primKey: 'account_conversation_type'\n    });\n    this.cached_server_features = new xabber.CachedServerFeatures(null, {\n        name:'cached-features-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'server_features_items',\n        primKey: 'var'\n    });\n\n    this.groupchat_settings = new xabber.GroupChatSettings({id: 'group-chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-group-chat-settings-' + this.get('jid'),\n        fetch: 'after'\n    });\n    this.groups = new xabber.Groups(null, {account: this});\n    this.contacts = new xabber.Contacts(null, {account: this});\n\n    this.cached_roster.on(\"database_open_failed\", () => {\n        this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: 0}));\n        this.trigger('roster_created');\n    });\n\n    this.cached_roster.on(\"database_opened\", () => {\n        this.cached_roster.getFromRoster('roster_version', (res) => {\n            let roster_version = res && res.version ? res.version : 0;\n            this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: roster_version}));\n            this.trigger('roster_created');\n        });\n    });\n\n    this.blocklist = new xabber.BlockList(null, {account: this});\n\n    this._added_pres_handlers.push(this.contacts.handlePresence.bind(this.contacts));\n\n    this.on(\"ready_to_get_roster\", function () {\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            this.resources.reset();\n            this.contacts.each(function (contact) {\n                contact.resources.reset();\n                contact.resetStatus();\n            });\n            this.cached_roster.getAllFromRoster((roster_items) => {\n                $(roster_items).each((idx, roster_item) => {\n                    if (roster_item.jid === 'roster_version'){\n                        return;\n                    }\n                    this.contacts.mergeContact(roster_item);\n                });\n                if (this.connection && this.connection.do_synchronization && xabber.chats_view) {\n                    let options = {};\n                    this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                        let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                        !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                        last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                        this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                        this.roster.getRoster();\n                    });\n                }\n                else {\n                    this.roster.getRoster();\n                }\n                this.blocklist.getFromServer();\n            });\n        });\n        console.log(this.roster);\n        if (this.roster) {\n            dfd.resolve();\n        } else {\n            this.once('roster_created', () => {\n                dfd.resolve();\n            });\n        }\n    }, this);\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.registerIQHandler();\n    this.registerSyncedIQHandler();\n    if (this.roster) {\n        this.roster.registerHandler();\n    } else {\n        this.once('roster_created', () => {\n            this.roster.registerHandler();\n        });\n    }\n    this.blocklist.registerHandler();\n}, true, true);\n\nxabber.once(\"start\", function () {\n    this._roster_settings = new this.RosterSettings({id: 'roster-settings'},\n        {storage_name: this.getStorageName(), fetch: 'after'});\n    this.settings.roster = this._roster_settings.attributes;\n    this.contacts_view = this.left_panel.addChild('contacts', this.RosterLeftView,\n        {model: this.accounts});\n    this.contact_container = this.right_panel.addChild('details', this.Container);\n    this.details_container = this.right_contact_panel.addChild('details', this.Container);\n    this.contact_placeholder = this.right_panel.addChild('contact_placeholder',\n        this.ContactPlaceholderView);\n    this.add_contact_view = new this.AddContactView();\n    this.on(\"add_contact\", function () {\n        this.add_contact_view.show();\n    }, this);\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.chats,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $msg = env.$msg,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_date = (timestamp) => { return utils.pretty_date(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'dddd, D MMMM YYYY')},\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Message = Backbone.Model.extend({\n    idAttribute: 'unique_id',\n\n    defaults: function () {\n        let msgid = uuid();\n        return {\n            msgid: msgid,\n            unique_id: msgid,\n            type: 'main',\n            state: constants.MSG_PENDING\n        };\n    },\n\n    initialize: function () {\n        let time = this.get('time'), attrs = {};\n        if (time) {\n            attrs.timestamp = Number(moment(time));\n        } else {\n            attrs.timestamp = moment.now();\n            attrs.time = moment(attrs.timestamp).format();\n        }\n        if (!this.get('origin_id'))\n            (this.isSenderMe() && !this.get('synced_from_server') && !this.get('carbon_copied') && !this.get('is_archived')) && this.set('origin_id', this.get('msgid'));\n        this.updateUniqueId();\n        this.set(attrs);\n        this.on(\"change:origin_id change:stanza_id change:archived_id\", this.updateUniqueId, this);\n    },\n\n    updateUniqueId: function () {\n        this.set('unique_id',  this.get('stanza_id') || this.get('archived_id') || this.get('origin_id') || this.get('msgid'));\n    },\n\n    destroyOnEcho: function () {\n        this.set('state', constants.MSG_DELIVERED);\n        if (this.collection && this.collection.chat && this.collection.chat.item_view && this.collection.chat.item_view.content)\n            this.collection.chat.item_view.content.removeMessage(this);\n        else\n            this.destroy();\n    },\n\n    getText: function () {\n        let forwarded_message = this.get('forwarded_message');\n        if (forwarded_message && forwarded_message.length) {\n            return forwarded_message[0].get('message');\n        }\n        return this.get('message');\n    },\n\n    getState: function () {\n        return constants.MSG_STATE[this.get('state')];\n    },\n\n    getVerboseState: function () {\n        let state = xabber.getString(constants.MSG_VERBOSE_STATE[this.get('state')]);\n        if (this.account) {\n            if (!this.account.isOnline())\n                state = xabber.getString(\"account_is_offline\");\n        }\n        else if (!this.collection.account.isOnline())\n            state = xabber.getString(\"account_is_offline\");\n        return state;\n    },\n\n    isSenderMe: function () {\n        if (this.account)\n            return this.account.get('jid') === this.get('from_jid');\n        else if (this.collection && this.collection.account)\n            return this.collection.account.get('jid') === this.get('from_jid');\n        else\n            false;\n    }\n});\n\nxabber.MessagesBase = Backbone.Collection.extend({\n    model: xabber.Message,\n});\n\n  xabber.SearchedMessages = xabber.MessagesBase.extend({\n      comparator: 'timestamp',\n\n      initialize: function () {\n          this.collections = [];\n          this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n          this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n      },\n\n      addCollection: function (collection) {\n          this.collections.push(collection);\n      },\n\n      updateInCollections: function (event, contact) {\n          _.each(this.collections, function (collection) {\n              collection.update(contact, event);\n          });\n      }\n  });\n\n  xabber.Messages = Backbone.Collection.extend({\n    model: xabber.Message,\n    comparator: 'timestamp',\n\n    initialize: function (models, options) {\n        this.chat = options.chat;\n        this.account = options.account;\n    },\n\n    createInvitationFromStanza: function ($message, options) {\n        options = options || {};\n        let $invite_item = $message.find('invite'),\n            full_jid = $invite_item.attr('jid') || $message.attr('from'),\n            $delay = options.delay || $message.children('delay'),\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').text(),\n            markable = $message.find('markable').length > 0,\n            msgid = $message.attr('id'),\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id),\n            $group_info = $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_private_invitation,\n            group_info_attributes = {};\n\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n\n        if (message)\n            return message;\n\n        if (!from_jid)\n            return;\n\n        let attrs = {\n            xml: options.xml || $message[0],\n            carbon_copied: options.carbon_copied && !options.is_archived,\n            markable: markable,\n            msgid: msgid,\n            is_forwarded: options.is_forwarded,\n            forwarded_message: options.forwarded_message || null,\n            from_jid: from_jid,\n            origin_id: origin_id,\n            stanza_id: options.stanza_id,\n            archive_id: archive_id,\n            contact_stanza_id: options.contact_stanza_id,\n            is_archived: options.is_archived\n        };\n\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        options.synced_msg && (attrs.synced_invitation_from_server = true);\n        body && (attrs.message = body);\n\n        let contact = this.account.contacts.mergeContact({jid: Strophe.getBareJidFromJid(from_jid), group_chat: true}),\n            chat = this.account.chats.getChat(contact);\n\n        !chat.item_view.content && (chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view}));\n\n        contact.set('in_roster', false);\n        if ($group_info.length) {\n            let name = $group_info.find('name').text(),\n                model = $group_info.find('membership').text(),\n                privacy = $group_info.find('privacy').text(),\n                searchable = $group_info.find('index').text(),\n                parent_chat = $group_info.find('parent-chat').text(),\n                description = $group_info.find('description').text();\n            name && (group_info_attributes.name = name);\n            model && (group_info_attributes.model = name);\n            privacy && (group_info_attributes.privacy = privacy);\n            searchable && (group_info_attributes.searchable = searchable);\n            description && (group_info_attributes.description = description);\n            parent_chat.length && (is_private_invitation = true);\n            is_private_invitation && contact.set('private_chat', true);\n            privacy === 'incognito' && contact.set('incognito_chat', true);\n            let prev_group_info = contact.get('group_info') || {};\n            _.extend(prev_group_info, group_info_attributes);\n            contact.set('group_info', prev_group_info);\n        }\n\n        let invite_msg = chat.messages.createSystemMessage(_.extend(attrs, {\n            from_jid: from_jid,\n            auth_request: true,\n            invite: true,\n            private_invite: is_private_invitation || false,\n            is_accepted: false,\n            silent: false,\n            message: $message.find('reason').text()\n        }));\n        return invite_msg;\n    },\n\n    createFromStanza: function ($message, options) {\n        options || (options = {});\n        let $delay = options.delay || $message.children('delay'),\n            full_jid = $message.attr('from') || options.from_jid,\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text(),\n            markable = $message.find('markable').length > 0,\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            msgid = $message.attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id);\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n        if (!message){\n            message = this.findWhere({'origin_id': origin_id});\n        }\n        if (options.replaced) {\n            let conversation = $message.children('replace').attr('conversation');\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.SYNCHRONIZATION_OLD_OMEMO}\"]`).length)\n                return;\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && this.account.omemo && !options.forwarded) {\n                this.account.omemo.receiveChatMessage($message, _.extend(options, {from_jid: conversation, conversation: conversation}));\n                return;\n            }\n            $message = $message.children('replace').children('message');\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text();\n            let sid = $message.children('stanza-id').first().attr('id');\n            message = this.find(m => m.get('stanza_id') === sid || m.get('contact_stanza_id') === sid);\n            if (!message)\n                return;\n            from_jid = message.get('from_jid');\n            msgid = message.get('msgid');\n            let xml = message.get('xml');\n            xml.innerHTML = $message[0].innerHTML;\n            options.xml = xml;\n            options.forwarded_message = message.get('forwarded_message');\n        }\n\n        if (message && !options.replaced && !options.context_message && !options.is_unread_archived && !options.searched_message && !options.pinned_message && !options.participant_message && !options.echo_msg && !options.is_searched)\n            return message;\n\n        let attrs = {\n                xml: options.xml || $message[0],\n                original_message: body,\n                carbon_copied: options.carbon_copied && !options.is_archived,\n                markable: markable,\n                msgid: msgid,\n                is_forwarded: options.is_forwarded,\n                forwarded_message: options.forwarded_message || null,\n                from_jid: from_jid,\n                contact_stanza_id: options.contact_stanza_id,\n                is_archived: options.is_archived,\n                is_unread_archived: options.is_unread_archived,\n                is_between_anchors: options.is_between_anchors,\n                not_encrypted: options.not_encrypted || null,\n                not_verified_device: options.not_verified_device || null,\n                not_verified_device_no_device: options.not_verified_device_no_device || null,\n                device_id: options.device_id || null,\n            },\n            mentions = [], blockquotes = [], markups = [], mutable_content = [], files = [], images = [], videos = [], locations = [], link_references = [];\n\n        options.encrypted && _.extend(attrs, {encrypted: true});\n        options.hasOwnProperty('is_trusted') && _.extend(attrs, {is_trusted: options.is_trusted});\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type'),\n                begin = parseInt($reference.attr('begin')),\n                end = parseInt($reference.attr('end'));\n            if (type === 'decoration') {\n                if ($reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`).length) {\n                    let $mention = $reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`),\n                        target = $mention.text(),\n                        is_gc = $mention.attr('node') === Strophe.NS.GROUP_CHAT ? true : false;\n                    mentions.push({start: begin, end: end, target: target, is_gc: is_gc});\n                } else {\n                    let markup = [];\n                    $reference.children().each((i, child_ref) => {\n                        if (constants.MARKUP_TAGS.indexOf(child_ref.tagName) > -1 && $(child_ref).attr('xmlns') === Strophe.NS.MARKUP) {\n                            if (child_ref.tagName === 'link')\n                                markup.push({type: child_ref.tagName, uri: $(child_ref).text()});\n                            else if (child_ref.tagName === 'quote') {\n                                blockquotes.push({start: begin, end: end});\n                            } else\n                                markup.push(child_ref.tagName);\n                        }\n                    });\n                    markup.length && markups.push({start: begin, end: end, markup: markup});\n                }\n            } else if (type === 'mutable') {\n                let $geolocation = $reference.children(`geoloc[xmlns=\"${Strophe.NS.GEOLOC}\"]`).first(),\n                    loc_attrs = {};\n                if ($geolocation.children('lat').text() && $geolocation.children('lon').text()){\n                    loc_attrs = {\n                        lat: $geolocation.children('lat').text(),\n                        lon: $geolocation.children('lon').text()\n                    }\n                    locations.push(loc_attrs);\n                    mutable_content.push({ start: begin, end: end, type: 'geolocation'});\n                };\n                if ($reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).length) {\n                    let $ogp = $reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).first(),\n                        link_reference_attrs = {};\n                    if ($ogp.length) {\n                        link_reference_attrs = {\n                            site: $ogp.children('meta[property=\"og:site_name\"]').attr('content'),\n                            type: $ogp.children('meta[property=\"og:type\"]').attr('content'),\n                            url: $ogp.children('meta[property=\"og:url\"]').attr('content'),\n                            description: $ogp.children('meta[property=\"og:description\"]').attr('content'),\n                            title: $ogp.children('meta[property=\"og:title\"]').attr('content'),\n                            image: $ogp.children('meta[property=\"og:image\"]').attr('content'),\n                            image_width: $ogp.children('meta[property=\"og:image:width\"]').attr('content'),\n                            image_height: $ogp.children('meta[property=\"og:image:height\"]').attr('content'),\n                            video_url: $ogp.children('meta[property=\"og:video:url\"]').attr('content'),\n                            original_text: $ogp.attr('url'),\n                            start: begin,\n                            end: end,\n                        }\n                        link_references.push(link_reference_attrs);\n                        mutable_content.push({start: begin, end: end, type: 'link_reference'});\n                    };\n                }\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($reference.children('forwarded').length)\n                    mutable_content.push({ start: begin, end: end, type: 'forward'});\n                else if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    mutable_content.push({ start: begin, end: end, type: type});\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        id: $file.children('gallery-id').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        attrs.has_encrypted_files = true;\n                    }\n                    if (this.getFileType($file.children('media-type').text()) === 'image')\n                        images.push(file_attrs);\n                    else if (this.getFileType($file.children('media-type').text()) === 'video')\n                        videos.push(file_attrs);\n                    else\n                        files.push(file_attrs);\n                }\n            } else if (type === 'data') {}\n        });\n\n        $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').each((idx, x_elem) => {\n            let $reference = $(x_elem).children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n                $user = $reference.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                if ($reference.length) {\n                    let begin = parseInt($reference.attr('begin')),\n                        end = parseInt($reference.attr('end'));\n                    mutable_content.push({start: begin, end: end, type: 'groupchat'});\n                    let user_id = $user.attr('id'),\n                        user_jid = $user.children('jid').text();\n                    _.extend(attrs, {\n                        user_info: {\n                            id: user_id,\n                            jid: user_jid,\n                            nickname: $user.children('nickname').text() || user_jid || user_id,\n                            role: $user.children('role').text(),\n                            avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                            avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                            badge: $user.children('badge').text()\n                        },\n                        from_jid: user_jid || user_id,\n                        groupchat_jid: Strophe.getBareJidFromJid(options.is_sender ? $message.attr('to') : $message.attr('from'))\n                    });\n                }\n        });\n\n        blockquotes.length && (attrs.blockquotes = blockquotes);\n        mentions.length && (attrs.mentions = mentions);\n        markups.length && (attrs.markups = markups);\n        images.length && (attrs.images = images);\n        videos.length && (attrs.videos = videos);\n        files.length && (attrs.files = files);\n        locations.length && (attrs.locations = locations);\n        link_references.length && (attrs.link_references = link_references);\n        attrs.mutable_content = mutable_content;\n        if (!attrs.mutable_content.length)\n            attrs.forwarded_message = null;\n\n        options.stanza_id && (attrs.stanza_id = options.stanza_id);\n        origin_id && (attrs.origin_id = origin_id);\n        archive_id && (attrs.archive_id = archive_id);\n\n        (options.replaced || mentions.length) && (attrs.mentions = mentions);\n        (options.replaced || markups.length) && (attrs.markups = markups);\n        (options.replaced || files.length) && (attrs.files = files);\n        (options.replaced || images.length) && (attrs.images = images);\n        (options.replaced || videos.length) && (attrs.videos = videos);\n        (options.replaced || link_references.length) && (attrs.link_references = link_references);\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            attrs.type = 'system';\n            attrs.participants_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).length &&\n            $message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).find('field[var=\"FORM_TYPE\"][type=\"hidden\"] value').text() === Strophe.NS.WEBCHAT) {\n            let addresses = [];\n            $message.children(`addresses[xmlns=\"${Strophe.NS.ADDRESS}\"]`).children('address').each((idx, address) => {\n                let $address = $(address);\n                addresses.push({type: $address.attr('type'), jid: $address.attr('jid')});\n            });\n            attrs.data_form = _.extend(this.account.parseDataForm($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)), {addresses: addresses});\n        }\n\n        body && (body = utils.slice_pretty_body(body, mutable_content));\n\n        if (!attrs.forwarded_message && body.removeEmoji() === \"\")\n            attrs.only_emoji = Array.from(body).length;\n\n        attrs.message = body;\n\n        options.echo_msg && ($delay = $message.children('time'));\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        (attrs.carbon_copied || from_jid == this.account.get('jid') && (options.is_archived || options.synced_msg)) && (attrs.state = constants.MSG_SENT);\n        options.synced_msg && (attrs.synced_from_server = true);\n        options.missed_history && (attrs.missed_msg = true);\n        if (options.is_unread_archived && (attrs.type !== 'system')){\n            let last_read_msg = this.find(m => this.chat.get('last_read_msg') && (m.get('stanza_id') === this.chat.get('last_read_msg') || m.get('contact_stanza_id') === this.chat.get('last_read_msg')));\n            if (last_read_msg){\n                if (Number(moment(attrs.time)) > last_read_msg.get('timestamp'))\n                    attrs.is_unread = true\n            } else {\n                attrs.is_unread = true\n            }\n        }\n        if (options.echo_msg) {\n            attrs.state = constants.MSG_DELIVERED;\n            attrs.timestamp = Number(moment(attrs.time));\n            attrs.from_jid = this.account.get('jid');\n        }\n        (options.context_message || options.participant_message || options.searched_message || options.is_searched) && (attrs.state = constants.MSG_ARCHIVED);\n\n        if (options.carbon_copied && options.encrypted && this.chat && this.chat.item_view && !this.chat.item_view.content)\n            this.chat.item_view.content = new xabber.ChatContentView({chat_item: this.chat.item_view});\n\n        if (options.pinned_message)\n            return this.account.pinned_messages.create(attrs);\n\n        if (options.participant_message)\n            return this.account.participant_messages.create(attrs);\n\n        if (options.searched_message) {\n            options.query && (attrs.query = options.query);\n            options.searched_in_contact_messages && (attrs.searched_in_contact_messages = options.searched_in_contact_messages)\n            return this.account.searched_messages.create(attrs);\n        }\n\n        if (options.context_message)\n            return this.account.context_messages.create(attrs);\n\n        if (options.echo_msg && message) {\n            message.destroyOnEcho();\n        }\n        if ((options.replaced || options.encrypted && options.is_unread_archived) && message) {\n            message.set(attrs);\n            return;\n        }\n\n        if (options.is_searched) {\n            let msg_contact = Strophe.getBareJidFromJid($message.attr('from'));\n            (msg_contact === this.account.get('jid')) && (msg_contact = Strophe.getBareJidFromJid($message.attr('to')));\n            message = xabber.all_searched_messages.create(attrs);\n            message.contact = this.account.contacts.mergeContact(msg_contact);\n            message.account = this.account;\n            return message;\n        }\n\n        message = this.create(attrs);\n\n        (options.encrypted && options.is_unread) && message.set('is_unread', true);\n\n        return message;\n    },\n\n      decryptFile: async function (uri, key) {\n          return new Promise((resolve, reject) => {\n              fetch(uri).then((r) => {\n                  r.blob().then((blob) => {\n                      let filereader = new FileReader();\n                      filereader.onloadend = () => {\n                          let arrayBuffer = filereader.result,\n                              exportedMasterKey = key.slice(0, 32),\n                              HMACData = key.slice(32);\n                          utils.AES.decrypt(exportedMasterKey, HMACData, arrayBuffer).then((enc_file) => {\n                              resolve(enc_file);\n                          });\n                      };\n                      filereader.readAsArrayBuffer(blob);\n                  });\n              }).catch(() => {\n                  resolve(null)\n              });\n          });\n      },\n\n    getFilename: function (url_media) {\n        let idx = url_media.lastIndexOf(\"/\");\n        return url_media.substr(idx + 1, url_media.length - 1);\n    },\n\n    getFileType: function(full_type) {\n        let end_idx = (full_type.indexOf(\"/\") > -1) ? full_type.indexOf(\"/\") : full_type.length,\n            type = full_type.slice(0, end_idx);\n        return type;\n    },\n\n    createSystemMessage: function (attrs) {\n        return this.create(_.extend({\n            type: 'system',\n            silent: true,\n            state: constants.MSG_DISPLAYED\n        }, attrs));\n    }\n});\n\n  xabber.JingleMessage = Backbone.Model.extend({\n      defaults: {\n          duration: 0,\n          contact_full_jid: \"\",\n          session_id: 0,\n          audio: true,\n          volume_on: true,\n          video_in: false,\n          video_screen: false,\n          state: 0\n      },\n\n      initialize: function (attrs, options) {\n          attrs = attrs || {};\n          attrs.video_live = attrs.video_live || false;\n          attrs.video = attrs.video_live;\n          this.contact = options.contact;\n          this.account = this.contact.account;\n          this.registerIqHandler();\n          this.audio_notifiation = xabber.playAudio(attrs.call_initiator ? xabber.settings.sound_on_call : xabber.settings.sound_on_dialtone, true);\n          this.modal_view = new xabber.JingleMessageView({model: this});\n          this.conn = new RTCPeerConnection({\n              iceServers: [\n                  {\n                      urls: \"stun:stun.l.google.com:19302\"\n                  },\n                  {\n                      urls: \"stun:stun01.pool-01.xabber.org:3478\"\n                  },\n              ].concat(constants.TURN_SERVERS_LIST),\n              sdpSemantics: 'unified-plan'\n          });\n          this.$remote_video_el = $('<video autoplay class=\"webrtc-remote-video\"/>');\n          this.$remote_audio_el = $('<audio autoplay class=\"webrtc-remote-audio hidden\"/>');\n          this.$local_video = this.modal_view.$el.find('.webrtc-local-video');\n          this.current_timer = 0;\n          this.conn.onconnectionstatechange = this.onChangeConnectionState.bind(this);\n          this.set(attrs);\n          this.get('in') && this.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n          this.onChangedMediaType();\n          this.conn.ontrack = (ev) => {\n              this.remote_stream = ev.streams[0];\n              this.modal_view.$el.find('.webrtc-remote-audio')[0].srcObject = ev.streams[0];\n          };\n          this._waiting_timeout = setTimeout(() => {\n              (!this.get('state') && this.get('status') === 'calling' && this.get('call_initiator') === this.account.get('jid')) && this.reject();\n          }, constants.JINGLE_WAITING_TIME * 1000);\n          this.conn.onicecandidate = this.onIceCandidate.bind(this);\n          this.conn.oniceconnectionstatechange = this.onChangeIceConnectionState.bind(this);\n          this.on('change:audio', this.setEnabledAudioTrack, this);\n          this.on('change:video', this.onChangedVideoValue, this);\n          this.on('change:video_live', this.setEnabledVideoTrack, this);\n          this.on('change:video_screen', this.setEnabledScreenShareVideoTrack, this);\n          this.on('change:video_in', this.onChangedRemoteVideo, this);\n          this.on('change:volume_on', this.onChangedVolume, this);\n          this.on('destroy', this.onDestroy, this);\n      },\n\n      registerIqHandler: function () {\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.iq_handler = this.account.connection.addHandler((iq) => {\n                  this.onIQ(iq);\n                  return true;\n              }, null, 'iq', 'set');\n\n      },\n\n      updateStatus: function (status) {\n          this.modal_view.updateStatusText(status);\n      },\n\n      updateTimer: function () {\n          this.updateStatus(utils.pretty_duration(++this.current_timer));\n      },\n\n      startTimer: function () {\n          this.updateTimer();\n          clearInterval(this.call_timer);\n          this.call_timer = setInterval(() => {\n              this.updateTimer();\n          }, 1000);\n      },\n\n      onConnected: function () {\n          this.get('video_live') && this.onChangedVideoValue();\n          xabber.stopAudio(this.audio_notifiation);\n          setTimeout(() => {\n              this.set('status', 'connected');\n              xabber.trigger('update_jingle_button');\n              this.updateStatus();\n              this.startTimer();\n          }, 1000);\n      },\n\n      onChangeConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.connectionState;\n          if (conn_state === 'connected') {\n              this.onConnected();\n          } else {\n              this.updateStatus(utils.pretty_name(conn_state) + '...');\n              if (conn_state === \"failed\") {\n                  clearTimeout(this._timeout_failed);\n                  this._timeout_failed = setTimeout(() => {\n                      if (peer_conn.connectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                          this.set('status', conn_state);\n                          xabber.trigger('update_jingle_button');\n                          this.reject();\n                          this.destroy();\n                          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                          xabber.current_voip_call = null;\n                      }\n                  }, 40000);\n                  peer_conn.restartIce();\n              }\n              if (conn_state === 'disconnected') {\n                  this.set('status', conn_state);\n                  xabber.trigger('update_jingle_button');\n                  this.destroy();\n                  xabber.current_voip_call = null;\n              }\n          }\n      },\n\n      onIceCandidate: function (ice) {\n          if (!ice || !ice.candidate || !ice.candidate.candidate)\n              return;\n          this.sendCandidate(ice.candidate);\n      },\n\n      onChangeIceConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.iceConnectionState;\n          if (conn_state === \"failed\") {\n              clearTimeout(this._timeout_failed);\n              this._timeout_failed = setTimeout(() => {\n                  if (peer_conn.iceConnectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                      this.set('status', conn_state);\n                      xabber.trigger('update_jingle_button');\n                      this.reject();\n                      this.destroy();\n                      this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                      xabber.current_voip_call = null;\n                  }\n              }, 40000);\n              peer_conn.restartIce();\n          }\n          if (conn_state === \"connected\")\n              !this.conn.connectionState && this.onConnected();\n      },\n\n      onChangedMediaType: function () {\n          this.$local_video.switchClass('hidden', !this.get('video'));\n      },\n\n      onChangedRemoteVideo: function () {\n          let incoming_video = this.get('video_in');\n          if (incoming_video) {\n              this.$remote_video_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-audio').replaceWith(this.$remote_video_el);\n              this.modal_view.$el.switchClass('multiple-videos', this.get('video') && this.get('video_in'));\n          }\n          else {\n              this.$remote_audio_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-video').replaceWith(this.$remote_audio_el);\n          }\n          this.modal_view.$el.find('.default-screen').switchClass('hidden', incoming_video);\n          this.onChangedVolume();\n      },\n\n      onChangedVolume: function () {\n          if (this.get('volume_on')) {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = false);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = false);\n          }\n          else {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = true);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = true);\n          }\n      },\n\n      setEnabledAudioTrack: function () {\n          this.local_stream.getAudioTracks()[0].enabled = this.get('audio');\n      },\n\n      setEnabledVideoTrack: function () {\n          let value = this.get('video_live'),\n              default_video = this.conn.getSenders().find(sender => sender.track && (sender.track.default || sender.track.screen));\n          value && this.set('video_screen', false);\n          (default_video && value) && this.createVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_screen'));\n      },\n\n      onDestroy: function () {\n          clearTimeout(this._waiting_timeout);\n          clearInterval(this.call_timer);\n          clearTimeout(this._timeout_failed);\n          xabber.stopAudio(this.audio_notifiation);\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.stopTracks();\n          this.conn.close();\n      },\n\n      setEnabledScreenShareVideoTrack:  function () {\n          let value = this.get('video_screen'),\n              default_video = this.conn.getSenders().find(sender => sender.track && !sender.track.screen);\n          value && this.set('video_live', false);\n          (default_video && value) && this.createScreenShareVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_live'));\n      },\n\n      onChangedVideoValue: function () {\n          let video_state = this.get('video') ? 'enable' : 'disable';\n          this.sendVideoStreamState(video_state);\n          this.onChangedMediaType();\n      },\n\n      createScreenShareVideoStream: function () {\n          navigator.mediaDevices.getDisplayMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  _.extend(track, {screen: true});\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      sendVideoStreamState: function (state) {\n          let $iq_video = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n              .c('video', {state: state, id: this.get('session_id')});\n          this.account.sendIQFast($iq_video);\n      },\n\n      onIQ: function (iq) {\n          let $incoming_iq = $(iq),\n              $jingle_initiate = $incoming_iq.find('jingle[action=\"session-initiate\"]'),\n              $jingle_accept = $incoming_iq.find('jingle[action=\"session-accept\"]'),\n              $jingle_info = $incoming_iq.find('jingle[action=\"session-info\"]'),\n              $jingle_video = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"] video`),\n              from_jid = $incoming_iq.attr('from'),\n              $result_iq = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')});\n          if ($jingle_initiate.length) {\n              if ($jingle_initiate.attr('sid') !== this.get('session_id'))\n                  return;\n              let offer_sdp = $jingle_initiate.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              offer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'offer', sdp: offer_sdp}));\n              this.acceptSession(offer_sdp);\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_accept.length) {\n              if ($jingle_accept.attr('sid') !== this.get('session_id'))\n                  return;\n              let answer_sdp = $jingle_accept.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              answer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: answer_sdp}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_info.length) {\n              if ($jingle_info.attr('sid') !== this.get('session_id'))\n                  return;\n              let candidate = $jingle_info.find('candidate');\n              candidate.length && this.conn.addIceCandidate(new RTCIceCandidate({candidate: candidate.text(), sdpMLineIndex: candidate.attr('sdpMLineIndex'), sdpMid: candidate.attr('sdpMid')}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_video.length) {\n              let session_id = $jingle_video.attr('id');\n              if (session_id === this.get('session_id')) {\n                  let video_state = $jingle_video.attr('state');\n                  if (video_state === 'enable')\n                      this.set('video_in', true);\n                  if (video_state === 'disable')\n                      this.set('video_in', false);\n              }\n              this.account.sendIQFast($result_iq);\n          }\n      },\n\n      startCall: function () {\n          this.set('call_initiator', this.account.get('jid'));\n          this.createAudioStream();\n          this.get('video_live') && this.createVideoStream();\n          this.propose();\n      },\n\n      createAudioStream: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n          });\n      },\n\n      createVideoStream: function () {\n          navigator.mediaDevices.getUserMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      stopTracks: function () {\n          this.local_stream && this.local_stream.getTracks().forEach((track) => {\n              track.stop();\n              this.local_stream.removeTrack(track);\n          });\n      },\n\n      propose: function () {\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_search\"));\n          let $propose_msg = $msg({type: 'chat', to: this.contact.get('jid')})\n              .c('propose', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up().up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('body').t(xabber.getString(\"jingle__text_body_message\")).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($propose_msg);\n      },\n\n      accept: function () {\n          let $accept_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('accept', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')}).up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.set('jingle_start', moment.now());\n          this.account.sendMsg($accept_msg);\n          xabber.stopAudio(this.audio_notifiation);\n          this.set('status', 'connecting');\n          xabber.trigger('update_jingle_button');\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n          this.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection, true);\n      },\n\n      reject: function (reason) {\n          if (this.get('status') === 'disconnected' || this.get('status') === 'disconnecting')\n              return;\n          let $reject_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')});\n          if (this.get('jingle_start')) {\n              let end = moment.now(),\n                  duration = Math.round((end - this.get('jingle_start'))/1000),\n                  call_attrs = {initiator: this.get('call_initiator')};\n              if (this.call_timer)\n                  _.extend(call_attrs, {start: moment(this.get('jingle_start')).format(), end: moment(end).format(), duration: duration});\n              reason && (call_attrs.reason = reason);\n              $reject_msg.c('call', call_attrs).up();\n          }\n          $reject_msg.up().c('store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($reject_msg);\n          this.createSystemMessage($reject_msg);\n          this.set('status', 'disconnected');\n          xabber.trigger('update_jingle_button');\n          this.destroy();\n          xabber.current_voip_call = null;\n      },\n\n      createSystemMessage: function (message) {\n          let $message = $(message.nodeTree),\n              chat = this.account.chats.getChat(this.contact),\n              time = $message.find('call').attr('end');\n          if (time) {\n              let duration = $message.find('call').attr('duration'),\n                  initiator = $message.find('call').attr('initiator');\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)])\n              });\n          }\n          else {\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(\"jingle__system_message__cancelled_call\")\n              });\n          }\n      },\n\n      initVideoTrack: function () {\n          let canvas = Object.assign(document.createElement(\"canvas\"), {width: 320, height: 240});\n          let ctx = canvas.getContext('2d');\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          let p = ctx.getImageData(0, 0, canvas.width, canvas.height);\n          requestAnimationFrame(function draw(){\n              for (let i = 0; i < p.data.length; i++)\n                  p.data[i++] = p.data[i++] = p.data[i++] = 1;\n              ctx.putImageData(p, 0, 0);\n              requestAnimationFrame(draw);\n          });\n          return _.extend(canvas.captureStream(60).getTracks()[0], {default: true});\n      },\n\n      initSession: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n              return this.conn.createOffer({offerToReceiveAudio:true, offerToReceiveVideo: true});\n          }).then((offer) => {\n                  this.set('session_initiator', this.account.get('jid'));\n                  this.conn.setLocalDescription(offer).then(() => {\n                      let offer_sdp = offer.sdp,\n                          $iq_offer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-initiate', initiator: this.account.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(offer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                      this.account.sendIQFast($iq_offer_sdp);\n                  });\n          });\n      },\n\n      sendCandidate: function (candidate) {\n          let $iq_candidate = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-info', initiator: this.get('session_initiator'), sid: this.get('session_id')})\n              .c('content', {creator: 'initiator', name: 'voice'})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up()\n              .c('transport', {xmlns: Strophe.NS.JINGLE_TRANSPORTS_ICE})\n              .c('candidate', {sdpMLineIndex: candidate.sdpMLineIndex, sdpMid: candidate.sdpMid }).t(candidate.candidate);\n          this.account.sendIQFast($iq_candidate);\n      },\n\n      acceptSession: async function () {\n          this.set('session_initiator', this.contact.get('jid'));\n          this.conn.createAnswer().then((answer) => {\n              this.conn.setLocalDescription(answer).then(() => {\n                  let answer_sdp = answer.sdp,\n                      $iq_answer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-accept', initiator: this.contact.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(answer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                  this.account.sendIQFast($iq_answer_sdp);\n              });\n          });\n      }\n  });\n\n  xabber.Chat = Backbone.Model.extend({\n    defaults: {\n        opened: true,\n        active: false,\n        display: false,\n        displayed_sent: false,\n        last_displayed_id: 0,\n        last_delivered_id: 0,\n        unread: 0,\n        timestamp: 0,\n        const_unread: 0,\n        encrypted: false\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.sync_created = options.sync_created;\n        this.account = this.contact ? this.contact.account : options.account;\n        let jid = this.contact ? this.contact.get('jid') : attrs.jid;\n        this.set({\n            id: attrs && attrs.id || this.contact.hash_id,\n            jid: jid\n        });\n        (attrs && attrs.type === 'encrypted') && this.set('encrypted', true);\n        if (attrs && attrs.type === 'saved') {\n            this.set('saved', true);\n            this.account.on('remove_saved_chat', this.onContactDestroyed, this);\n        }\n        this.retraction_version = 0;\n        if (this.contact) {\n            this.set('group_chat', this.contact.get('group_chat'));\n            this.contact.on(\"destroy\", this.onContactDestroyed, this);\n            this.contact.on(\"change:group_chat\", this.onChangedContact, this);\n        } else {\n            this.set({'group_chat': false, 'name': attrs.name});\n        }\n        this.messages = new xabber.Messages(null, {account: this.account, chat: this});\n        this.messages_unread = new xabber.Messages(null, {account: this.account});\n        this.item_view = new xabber.ChatItemView({model: this});\n        this.plyr_players = [];\n        this.retracted_msg_id_list = [];\n        this.on(\"get_retractions_list\", this.getAllMessageRetractions, this);\n        this.on(\"change:timestamp\", this.onChangedTimestamp, this);\n        this.on(\"update_last_read_msg\", this.onChangedLastReadMsg, this);\n    },\n\n    onChangedTimestamp: function () {\n    },\n\n    onChangedLastReadMsg: function (options) {\n        if (this.get('prev_last_read_msg') && this.get('last_read_msg') && this.get('prev_last_read_msg') !== this.get('last_read_msg')){\n            if (this.item_view && !this.item_view.content){\n                this.item_view.content = new xabber.ChatContentView({chat_item: this.item_view});\n            }\n            this.item_view.content._no_scrolling_event = true;\n            let query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                is_first: true,\n                sync_update: options && options.sync_update ? true : false,\n                var: [\n                    {var: 'after-id', value: this.get('prev_last_read_msg')},\n                    {var: 'before-id', value: this.get('last_read_msg')},\n                ]\n            };\n            this.requestHistoryBetweenAnchors(query);\n\n        }\n        this.set('prev_last_read_msg', this.get('last_read_msg'));\n    },\n\n    requestHistoryBetweenAnchors: function (query) {\n        this.item_view.content.MAMRequest(query, (success, messages, rsm) => {\n            if (rsm.complete)\n                this.set('last_sync_unread_id', this.get('last_read_msg'));\n            if (query.is_first && !query.sync_update) {\n                let read_count = Number(rsm.count) + 1;\n                read_count = this.get('const_unread') - read_count;\n                (read_count < 0) && (read_count = 0);\n                this.set('const_unread', read_count);\n            }\n            if (!rsm.complete && (rsm.count > messages.length)){\n                query.after = rsm.last;\n                query.is_first = false;\n                this.requestHistoryBetweenAnchors(query);\n            }\n            _.each(messages, (message) => {\n                let message_item = this.account.chats.receiveChatMessage(message,\n                        {\n                            is_archived: true,\n                            is_between_anchors: true,\n                        }\n                    );\n                message_item && message_item.set('is_unread', false)\n            });\n            if (rsm.complete && this.get('last_read_msg')){\n                let last_read_msg = this.messages.find(m => this.get('last_read_msg') && (m.get('stanza_id') === this.get('last_read_msg') || m.get('contact_stanza_id') === this.get('last_read_msg'))),\n                    deferred = new $.Deferred();\n                deferred.done(() => {\n                    last_read_msg && last_read_msg.set('is_unread', false);\n                    if (this.item_view.content.isVisible()){\n                        this.item_view.content._long_reading_timeout = true;\n                        this.item_view.content.scrollToUnread();\n                    } else {\n                        this.set('show_new_unread', true);\n                    }\n                    this.item_view.content._no_scrolling_event = false;\n                });\n                if (!last_read_msg){\n                    this.contact.getMessageByStanzaId(this.get('last_read_msg'), ($message) => {\n                        last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        deferred.resolve()\n                    });\n                } else {\n                    deferred.resolve()\n                }\n            }\n        }, (err) => {\n            xabber.error('error');\n        });\n    },\n\n\n    isMuted: function () {\n          if (this.get('muted') && (this.get('muted') < (Date.now() / 1000)))\n              this.set('muted', false)\n          return this.get('muted')\n    },\n\n      onChangedContact: function () {\n          let changed = this.contact.changed;\n          if (_.has(changed, 'group_chat'))\n              this.set('group_chat', this.contact.get('group_chat'));\n          if (_.has(changed, 'blocked'))\n              this.set('blocked', this.contact.get('blocked'));\n      },\n\n    recountUnread: function () {\n        this.set('unread', this.messages_unread.length);\n        if (this.contact && this.get('archived') && this.isMuted()) {\n        }\n        else {\n            xabber.toolbar_view.recountAllMessageCounter();\n        }\n    },\n\n    onContactDestroyed: function () {\n        this.resetUnread();\n        this.destroy();\n    },\n\n    resetUnread: function () {\n        let unread = this.get('unread');\n        if (unread > 0) {\n            this.messages_unread && this.messages_unread.reset();\n            this.set('unread', 0);\n            xabber.recountAllMessageCounter(unread);\n            xabber.toolbar_view.recountAllMessageCounter(unread);\n        }\n    },\n\n    searchMessages: function (query, callback) {\n        this.messages_view = new xabber.SearchedMessagesView({\n            query_text: query,\n            model: this\n        });\n        this.messages_view.messagesRequest({}, () => {\n            xabber.body.setScreen('all-chats', {\n                right: 'searched_messages',\n                model: this\n            });\n        });\n    },\n\n    sendDataForm: function (message, variable) {\n        let data_form = message.get('data_form');\n        if (!data_form)\n            return;\n        let msg = $msg({type: 'chat'});\n        data_form.fields.forEach((field) => {\n            if (field.type  === 'boolean') {\n                if (field.var === variable)\n                    field.values = [true];\n                else\n                    field.values = [false];\n            }\n        });\n        msg = this.account.addDataFormToStanza(msg, data_form);\n        data_form.addresses.forEach((address) => {\n            if (address.type === 'replyto')\n                $(msg.nodeTree).attr('to', address.jid);\n            this.account.sendMsg(msg);\n        });\n    },\n\n    setStanzaId: function (unique_id, stanza_id) {\n        let message = this.messages.get(unique_id),\n            origin_id = message.get('origin_id');\n        if (this.item_view && this.item_view.content && stanza_id)\n            this.item_view.content.$(`.chat-message[data-uniqueid=\"${unique_id}\"]`).data('uniqueid', stanza_id)[0].setAttribute('data-uniqueid', stanza_id);\n        message.set('stanza_id', stanza_id);\n        if (this.get('encrypted'))\n            this.account.omemo && this.account.omemo.updateMessage({stanza_id, origin_id}, this.contact);\n    },\n\n    getCallingAvailability: function (to, session_id, callback) {\n        let iq = $iq({to: to, type: 'get'})\n            .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n            .c('session', {id: session_id});\n        this.account.sendIQFast(iq, callback);\n    },\n\n    sendReject: function (options) {\n        !options && (options = {});\n        let msg_to = options.to || this.contact.get('jid'),\n            $reject_msg = $msg({\n                type: 'chat',\n                to: msg_to\n            })\n                .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: options.session_id})\n                .c('call', {reason: options.reason}).up().up()\n                .c('store', {xmlns: Strophe.NS.HINTS}).up()\n                .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n                .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n        this.account.sendMsg($reject_msg);\n    },\n\n    initIncomingCall: function (full_jid, session_id) {\n        if (!xabber.get('audio') || !xabber.settings.jingle_calls) {\n            return;\n        }\n        xabber.current_voip_call = new xabber.JingleMessage({contact_full_jid: full_jid, session_id: session_id, call_initiator: this.contact.get('jid')}, {contact: this.contact, });\n        xabber.current_voip_call.modal_view.show({status: 'in'});\n        xabber.trigger('update_jingle_button');\n        if (xabber.body.screen.get('name') === 'all-chats' && !xabber.body.screen.get('right') && this.item_view)\n            this.item_view.open();\n    },\n\n    endCall: function (status) {\n        status && xabber.current_voip_call.set('status', status);\n        xabber.trigger('update_jingle_button');\n        xabber.current_voip_call.destroy(status);\n        xabber.current_voip_call = null;\n        xabber.trigger('update_jingle_button');\n    },\n\n    getAllMessageRetractions: function () {\n        if (!this.contact.get('group_chat'))\n            return;\n        let retractions_query = $iq({type: 'get', to: this.contact.get('jid')})\n            .c('query', {xmlns: Strophe.NS.REWRITE, version: this.retraction_version});\n        this.account.sendIQ(retractions_query);\n    },\n\n    receiveMessage: function ($message, options) {\n        let from_bare_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            carbon_copied = options.carbon_copied;\n        // searching chat marker message\n        let $marker = $message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`),\n            $receipt_request = $message.children(`request[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $receipt_response = $message.children(`received[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $jingle_msg_propose = $message.children(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_accept = $message.children(`accept[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_reject = $message.children(`reject[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n        if ($jingle_msg_propose.length && !options.searched_message) {\n            if (carbon_copied && (from_bare_jid == this.account.get('jid'))) {\n                return;\n            }\n            if (options.synced_msg){\n                if (this.get('saved'))\n                    return;\n                let view = xabber.chats_view.child(this.contact.hash_id);\n                $message.find('time').attr('stamp') && this.set('timestamp', $message.find('time').attr('stamp'));\n                if (!view.content)\n                    view.content = new xabber.ChatContentView({chat_item: view});\n                if (view && view.content)\n                    view.content.receiveNoTextMessage($message, carbon_copied);\n                return;\n            }\n            if (options.is_archived)\n                return;\n            else {\n                let session_id = $jingle_msg_propose.attr('id'),\n                    iq_to = $message.attr('from');\n                this.getCallingAvailability(iq_to, session_id, () => {\n                    if (xabber.current_voip_call) {\n                        let reason = from_bare_jid === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                        this.sendReject({session_id: session_id, reason: reason});\n                        this.messages.createSystemMessage({\n                            from_jid: this.account.get('jid'),\n                            message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                        });\n                        return;\n                    }\n                    this.initIncomingCall(iq_to, session_id);\n                });\n            }\n        }\n        if ($jingle_msg_accept.length) {\n            if (options.is_archived || options.synced_msg)\n                return;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_accept.attr('id')) {\n                if (carbon_copied)\n                    this.endCall('accepted_another_device');\n                else {\n                    !xabber.current_voip_call.get('state') && xabber.current_voip_call.set('state', constants.JINGLE_MSG_ACCEPT);\n                    xabber.trigger('update_jingle_button');\n                    let jingle_start = $jingle_msg_accept.find('time').attr('stamp');\n                    jingle_start = jingle_start ? Number(moment(jingle_start)) : moment.now();\n                    xabber.current_voip_call.set('jingle_start', jingle_start);\n                    !xabber.current_voip_call.get('contact_full_jid') && xabber.current_voip_call.set('contact_full_jid', $message.attr('from'));\n                    xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                    xabber.current_voip_call.set('status', 'connecting');\n                    xabber.trigger('update_jingle_button');\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n                    xabber.current_voip_call.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection);\n                }\n            }\n        }\n        if ($jingle_msg_reject.length) {\n            if (this.messages.filter(m => m.get('session_id') === $jingle_msg_reject.attr('id')).length)\n                return;\n            let time = options.delay && options.delay.attr('stamp') || $message.find('delay').attr('stamp') || $message.find('time').attr('stamp'), message, msg_text = \"\";\n            if ($jingle_msg_reject.children('call').length) {\n                let duration = $jingle_msg_reject.children('call').attr('duration'),\n                    initiator = $jingle_msg_reject.children('call').attr('initiator');\n                if (duration && initiator)\n                    msg_text =xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)]);\n                else\n                    msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            }\n            else\n                msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            options.is_unread && (options.reject_contact_stanza_id = options.contact_stanza_id);\n            message = this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                time: time,\n                session_id: $jingle_msg_reject.attr('id'),\n                stanza_id: options.stanza_id,\n                contact_stanza_id: options.reject_contact_stanza_id,\n                is_unread: options.is_unread,\n                message: msg_text\n            });\n            if (options.is_archived || options.synced_msg)\n                return message;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_reject.attr('id')) {\n                xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                let busy_audio = xabber.playAudio(xabber.settings.sound_on_call_busy);\n                setTimeout(() => {\n                    xabber.stopAudio(busy_audio);\n                }, 1500);\n                this.endCall($jingle_msg_reject.children('call').attr('reason') == 'device_busy' ? 'device_busy' : $jingle_msg_reject.children('call').attr('reason') == 'busy' ? 'busy' : 'disconnected');\n            }\n            return message;\n        }\n        if (!options.is_archived) {\n            let $stanza_id, $contact_stanza_id;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n                stanza_id = $(stanza_id);\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length) {\n                    if (stanza_id.attr('by') === from_bare_jid) {\n                        !$stanza_id && ($stanza_id = stanza_id);\n                        $contact_stanza_id = stanza_id;\n                    }\n                    else\n                        $stanza_id = stanza_id;\n                }\n                else {\n                    if (stanza_id.attr('by') === from_bare_jid)\n                        $contact_stanza_id = stanza_id;\n                    else\n                        $stanza_id = stanza_id;\n                }\n            });\n            (!options.stanza_id && $stanza_id) && (options.stanza_id = $stanza_id.attr('id'));\n            (!options.contact_stanza_id && $contact_stanza_id) && (options.contact_stanza_id = $contact_stanza_id.attr('id'));\n        }\n        if ($marker.length) {\n            let marker_tag = $marker[0].tagName.toLowerCase();\n            if ((marker_tag === 'markable') && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread)) {\n                this.sendMarker($message.attr('id'), 'received', options.stanza_id, options.contact_stanza_id);\n                this.get('saved') && this.sendMarker($message.attr('id'), 'displayed', options.stanza_id, options.contact_stanza_id);\n            }\n            if ((marker_tag !== 'markable') && !carbon_copied) {\n                this.receiveMarker($message, marker_tag, carbon_copied);\n                return;\n            }\n            if ((marker_tag === 'displayed') && carbon_copied)\n                this.receiveCarbonsMarker($marker);\n        }\n\n        if ($receipt_request.length && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread))\n            this.sendDeliveryReceipt($message);\n\n        if ($receipt_response.length)\n            this.receiveDeliveryReceipt($message);\n\n        if (!$message.find('body').length || $jingle_msg_propose.length || $jingle_msg_accept.length || $jingle_msg_reject.length) {\n            if (this.get('saved'))\n                return;\n            let view = xabber.chats_view.child(this.contact.hash_id);\n            if (!view.content)\n                view.content = new xabber.ChatContentView({chat_item: view});\n            if (view && view.content)\n                view.content.receiveNoTextMessage($message, carbon_copied);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (from_bare_jid === this.account.get('jid'))\n                return;\n            let group_jid = $message.find('invite').attr('jid') || $message.find('message').attr('from'),\n                contact = this.account.contacts.get(group_jid), chat;\n            if (contact)\n                if (contact.get('subscription') == 'both')\n                    return;\n            if (this.account.connection && this.account.connection.do_synchronization) {\n                if (options.synced_msg || !options.synced_msg && !options.is_archived)\n                    return this.messages.createInvitationFromStanza($message, options);\n            } else {\n                let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n                this.account.sendIQFast(iq, (iq) => {\n                        let items = $(iq).find('item'),\n                            current_timestamp = Number(moment($message.find('delay').attr('stamp') || $message.find('time').attr('stamp') || (options.delay) && Number(moment(options.delay.attr('stamp'))) || moment.now())),\n                            last_blocking_timestamp,\n                            has_blocking = false;\n                        if (items.length > 0) {\n                            items.each((idx, item) => {\n                                let $item = $(item),\n                                    item_jid = $item.attr('jid'), blocking_timestamp = \"\";\n                                if (item_jid.indexOf(group_jid) > -1) {\n                                    has_blocking = true;\n                                    blocking_timestamp = item_jid.substr(item_jid.lastIndexOf(\"/\") + 1, item_jid.length - group_jid.length);\n                                    if (!blocking_timestamp) {\n                                        last_blocking_timestamp = \"\";\n                                        return false;\n                                    } else if (!last_blocking_timestamp || last_blocking_timestamp < blocking_timestamp)\n                                        last_blocking_timestamp = blocking_timestamp;\n                                }\n                            });\n                        }\n                        if (_.isUndefined(last_blocking_timestamp) || last_blocking_timestamp && last_blocking_timestamp < current_timestamp)\n                            return this.messages.createInvitationFromStanza($message, options);\n                    }, () => {\n                        return this.messages.createInvitationFromStanza($message, options);\n                    });\n            }\n        }\n        else{\n            return this.messages.createFromStanza($message, options);\n        }\n    },\n\n    getMessageContext: function (unique_id, options) {\n        options = options || {};\n        let messages = options.mention && this.account.messages || options.searched_messages && !options.encrypted && this.account.searched_messages || options.message && xabber.all_searched_messages || this.account.messages,\n            message = messages.get(unique_id),\n            dfd = new $.Deferred;\n\n        dfd.done(() => {\n            if (message) {\n                if (options.searched_messages)\n                    message.set('searched_message', false);\n                let stanza_id = message.get('stanza_id');\n                this.messages_view = new xabber.MessageContextView({\n                    contact: this.contact,\n                    mention_context: options.mention,\n                    model: this,\n                    stanza_id_context: stanza_id,\n                    encrypted: options.encrypted\n                });\n                this.account.context_messages.add(message);\n                this.messages_view.messagesRequest({after: stanza_id}, () => {\n                    let screen = 'all-chats';\n                    if (options.mention)\n                        screen = 'mentions';\n                    else if (options.message)\n                        screen = xabber.body.screen.get('name');\n                    xabber.body.setScreen(screen, {\n                        right: 'message_context',\n                        model: this,\n                    }, {\n                        right_contact_save: true\n                    });\n                });\n            }\n\n        })\n        if (!message) {\n            message = messages.models.find(item => {\n                return item.get('origin_id') === unique_id;\n            })\n            if (!message) {\n                this.contact.getMessageByStanzaId(unique_id, ($message) => {\n                    if (options.encrypted && this.account.omemo) {\n                        let omemo_dfd = new $.Deferred;\n                        omemo_dfd.done(($msg, msg_options) => {\n                            msg_options = msg_options || {};\n                            msg_options.searched_message = true;\n                            message = this.account.chats.receiveChatMessage($msg[0], msg_options);\n                            dfd.resolve();\n                        }).fail(() => {\n                            dfd.resolve();\n                        });\n                        message = this.account.omemo.receiveChatMessage($message, {\n                            searched_message: true,\n                            gallery: true,\n                        }, omemo_dfd);\n\n                    } else {\n                        message = this.account.chats.receiveChatMessage($message, {\n                            searched_message: true,\n                        });\n                        dfd.resolve();\n                    }\n                }, {encrypted: options.encrypted});\n\n            } else {\n                dfd.resolve()\n            }\n        } else {\n            dfd.resolve()\n        }\n    },\n\n    sendDeliveryReceipt: function ($message) {\n        let $delivery_msg = $msg({\n            to: this.contact.get('jid'),\n            type: 'chat',\n            id: uuid()})\n            .c('received', { xmlns: Strophe.NS.RECEIPTS, id: $message.attr('id')});\n        this.account.sendMsg($delivery_msg);\n    },\n\n    sendMarker: function (msg_id, status, stanza_id, contact_stanza_id) {\n        status || (status = 'displayed');\n        let stanza = $msg({\n            to: this.get('jid'),\n            type: 'chat',\n            id: uuid()\n        }).c(status).attrs({\n            xmlns: Strophe.NS.CHAT_MARKERS,\n            id: msg_id || stanza_id || contact_stanza_id || \"\"\n        });\n        stanza_id && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: stanza_id, by: this.account.get('jid')}).up();\n        (!this.get('saved') && contact_stanza_id) && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: contact_stanza_id, by: this.contact.get('jid')}).up();\n        this.account.sendMsg(stanza);\n    },\n\n    receiveMarker: function ($message, tag, carbon_copied) {\n        let $displayed = $message.find('displayed'),\n            $received = $message.find('received'),\n            error = $message.attr('type') === 'error';\n        if (error || !$displayed.length && !$received.length)\n            return;\n        let marked_msg_id = $displayed.attr('id') || $received.attr('id'),\n            marked_stanza_id = $displayed.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id') || $received.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(`${this.id}:encrypted`),\n                enc_msg = enc_chat && enc_chat.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n            if (enc_msg)\n                enc_chat.receiveMarker($message, tag, carbon_copied);\n            return;\n        }\n        if (msg.isSenderMe()) {\n            if ($received.length) {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DELIVERED)\n                    return;\n                }\n                if (msg_state !== constants.MSG_DISPLAYED) {\n                    let delivered_time = $received.children('time').attr('stamp');\n                    if (delivered_time) {\n                        msg.set('time', pretty_datetime(delivered_time));\n                        msg.set('timestamp', Number(delivered_time));\n                    }\n                }\n                this.setMessagesDelivered(msg.get('timestamp'));\n            } else {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DISPLAYED)\n                    return;\n                }\n                this.setMessagesDisplayed(msg.get('timestamp'));\n            }\n        } else {\n            msg.set('is_unread', false);\n        }\n    },\n\n    setMessagesDelivered: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DELIVERED));\n    },\n\n    setMessagesDisplayed: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DISPLAYED));\n    },\n\n    receiveCarbonsMarker: function ($marker) {\n        let stanza_id = $marker.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg_id = $marker.attr('id'),\n            msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id), msg_idx;\n        msg && (msg_idx = this.messages.indexOf(msg));\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(this.id + ':encrypted'),\n                enc_msg = enc_chat && enc_chat.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id);\n            if (enc_msg){\n                enc_chat.receiveCarbonsMarker($marker);\n                return;\n            }\n        }\n        if (this.get('const_unread') && this.get('last_read_msg')){\n            let last_read_msg_id = this.get('last_read_msg'),\n                last_read_msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === last_read_msg_id || m.get('contact_stanza_id') === last_read_msg_id)),\n                deferred = new $.Deferred(),\n                second_deferred = new $.Deferred(),\n                new_last_read_msg = msg;\n            second_deferred.done(() => {\n                if (last_read_msg.get('timestamp') < new_last_read_msg.get('timestamp')){\n                    this.set('last_read_msg', new_last_read_msg.get('stanza_id'))\n                    this.trigger('update_last_read_msg');\n                }\n            });\n            deferred.done(() => {\n                if (!new_last_read_msg){\n                    this.contact.getMessageByStanzaId(stanza_id, ($message) => {\n                        new_last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        second_deferred.resolve()\n                    });\n                } else {\n                    second_deferred.resolve()\n                }\n            });\n            if (!last_read_msg){\n                this.contact.getMessageByStanzaId(last_read_msg_id, ($message) => {\n                    last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                    deferred.resolve()\n                });\n            } else {\n                deferred.resolve()\n            }\n        }\n        if (msg_idx > -1) {\n            for (let i = msg_idx; i >= 0; i--) {\n                let message = this.messages.models[i];\n                message.set('is_unread', false);\n            }\n        }\n        else {\n            let unread_msg = this.messages_unread.find(m => m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id || m.get('msgid') === msg_id);\n            unread_msg && unread_msg.set('is_unread', false);\n        }\n    },\n\n    receiveDeliveryReceipt: function ($message) {\n        let $received = $message.find('received'),\n            delivered_origin_id = $received.attr('id'),\n            delivered_stanza_id = $received.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.get(delivered_origin_id || delivered_stanza_id);\n        if (!msg)\n            return;\n        msg.isSenderMe() && msg.set('state', constants.MSG_DELIVERED);\n    },\n\n    onPresence: function (type) {\n        let jid = this.get('jid');\n        if (!this.contact.get('group_chat') && !this.contact.get('in_roster')) {\n            if (type === 'subscribe') {\n                this.messages.createSystemMessage({\n                    from_jid: jid,\n                    auth_request: true,\n                    message: xabber.getString(\"action_subscription_received\")\n                });\n            }\n        }\n    },\n\n    onRosterPush: function (type) {\n        let jid = this.get('jid');\n        // not used\n        if (type === 'remove')\n            this.messages.createSystemMessage({\n                from_jid: jid,\n                silent: false,\n                message: xabber.getString(\"action_contact_deleted\")\n            });\n\n    },\n\n    retractMessages: function (msgs, group_chat, symmetric) {\n        let msgs_responses = 0, count = msgs.length, dfd = new $.Deferred();\n        dfd.done((num) => {\n            if (num === 0) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n            else if (num !== msgs.length) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n        });\n        $(msgs).each((idx, item) => {\n            let stanza_id = item.get('stanza_id'),\n                contact_stanza_id = item.get('contact_stanza_id');\n            if (stanza_id || contact_stanza_id) {\n                let iq_retraction = $iq({type: 'set', to: group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')})\n                    .c('retract-message', {\n                        id: (this.get('group_chat') && contact_stanza_id || stanza_id),\n                        xmlns: Strophe.NS.REWRITE,\n                        symmetric: symmetric,\n                        type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                        by: this.account.get('jid')\n                    });\n                this.account.sendIQFast(iq_retraction, (success) => {\n                        this.item_view.content.removeMessage(item);\n                        msgs_responses++;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    }, (error) => {\n                        msgs_responses++;\n                        if ($(error).find('not-allowed').length)\n                            count--;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    });\n            }\n        });\n    },\n\n    retractMessagesByUser: function (user_id) {\n        let iq_retraction = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('retract-user', {\n                id: user_id,\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: true\n            });\n        this.account.sendIQFast(iq_retraction, (success) => {\n            let user_msgs = this.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == user_id));\n            $(user_msgs).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    retractAllMessages: function (symmetric, callback, errback) {\n        let is_group_chat = this.get('group_chat'),\n            iq_retraction = $iq({type: 'set', to: is_group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')}),\n            retract_attrs = {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: symmetric\n        };\n        retract_attrs.conversation = this.get('jid');\n        this.get('encrypted') && (retract_attrs.type = 'encrypted');\n        iq_retraction.c('retract-all', retract_attrs);\n        this.account.sendIQFast(iq_retraction, (iq_response) => {\n            let all_messages = this.messages.models;\n            $(all_messages).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n            callback && callback();\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            errback && errback();\n        });\n    },\n\n    showBlockedRequestMessage: function () {\n        if (this.messages.length)\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"action_contact_blocked\"),\n                time: this.messages.last().get('time')\n            });\n    },\n\n    muteChat: function (muted_seconds) {\n        let muted = this.isMuted(),\n            is_muted = muted && muted !== '0' ? true : false,\n            muted_value = is_muted ? '' : '0';\n        if (muted_seconds || muted_seconds === '')\n            muted_value = muted_seconds;\n        let conversation_options = {\n            jid: this.contact.get('jid'),\n            mute: muted_value,\n            type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this)\n        },\n        iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq);\n    },\n\n    getConversationType: function (chat) {\n        if(chat.get('encrypted'))\n            return Strophe.NS.SYNCHRONIZATION_OMEMO;\n        if(chat.contact.get('group_chat'))\n            return Strophe.NS.GROUP_CHAT;\n        return Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT\n    },\n\n    deleteFromSynchronization: function (callback, errback) {\n        let conversation_options = {jid: this.get('jid'), status: 'deleted', type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this) };\n        this.account.cached_sync_conversations.removeFromCachedConversations(conversation_options.jid +  '/' + conversation_options.type);\n        let iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq, (success) => {\n            callback && callback(success);\n        }, (error) => {\n            errback && errback(error);\n        });\n    }\n});\n\nxabber.ChatItemView = xabber.BasicView.extend({\n    className: 'chat-item list-item',\n    template: templates.chat_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.message_counter = 0;\n        this.$el.attr('data-id', this.model.id);\n        if (!this.model.sync_created)\n            this.content = new xabber.ChatContentView({chat_item: this});\n        this.content_placeholder = new xabber.ChatContentPlaceholderView();\n        this.updateName();\n        this.updateStatus();\n        this.updateCounter();\n        this.updateAvatar();\n        this.updateMutedState();\n        this.updatePinned();\n        this.updateArchivedState();\n        this.updateColorScheme();\n        this.updateGroupChats();\n        this.updateIcon();\n        this.updateEncrypted();\n        this.updateChatError();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.model.on(\"change:archived\", this.updateArchivedState, this);\n        this.model.on(\"change:muted\", this.updateMutedState, this);\n        this.model.on(\"open\", this.open, this);\n        this.model.on(\"remove_opened_chat\", this.onClosed, this);\n        this.model.messages.on(\"add\", this.updateChatCard, this);\n        this.model.messages.on(\"destroy\", this.onMessageRemoved, this);\n        this.model.messages.on(\"change:state\", this.onChangedMessageState, this);\n        if (this.contact) {\n            this.updateIncomingSubscription();\n            this.contact.on(\"change:name\", this.updateName, this);\n            this.contact.on(\"change:invitation\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_in\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_out\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:status\", this.updateStatus, this);\n            this.contact.on(\"change:private_chat\", this.updateIcon, this);\n            this.contact.on(\"change:invitation\", this.updateIcon, this);\n            this.contact.on(\"change:incognito_chat\", this.updateIcon, this);\n            this.contact.on(\"change:image\", this.updateAvatar, this);\n            this.contact.on(\"change:blocked\", this.onBlocked, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChats, this);\n            this.contact.on(\"change:in_roster\", this.updateAcceptedStatus, this);\n            this.contact.on(\"remove_invite\", this.removeInvite, this);\n            this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        }\n        this.$el.switchClass('saved-chat', this.model.get('saved'));\n        this.$el.find('.circle-avatar').switchClass('ground-color-700', this.model.get('saved'));\n        this.model.get('saved') && this.$el.find('.circle-avatar').html(env.templates.svg['saved-messages']());\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n    },\n\n    render: function () {\n        if (this.model.get('saved') && (this.$('.chat-title').text() !== xabber.getString(\"saved_messages__header\"))) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n        }\n    },\n\n    updateChatCard: function (msg) {\n        if (this.content){\n            return;\n        }\n        if (this.message_counter == 0 && !(!msg.get('synced_from_server') && msg.get('encrypted') && this.model.get('encrypted'))){\n            this.message_counter++;\n            return\n        }\n        this.content = new xabber.ChatContentView({ chat_item: this, new_message: msg });\n        this.updateLastMessage(msg);\n        return;\n    },\n\n    onChangedMessageState: function (message) {\n        if (message.get('state') === constants.MSG_DISPLAYED && this.model.get('last_displayed_id') < message.get('stanza_id')) {\n            this.model.set('last_displayed_id', message.get('stanza_id'));\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        } else if (message.get('state') === constants.MSG_DELIVERED && this.model.get('last_delivered_id') < message.get('stanza_id')) {\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        }\n        if (this.content) {\n            let $message = this.content.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n                $elem = $message.find('.msg-delivering-state');\n            $elem.attr({\n                'data-state': message.getState(),\n                'title': message.getVerboseState()\n            });\n            ($elem.attr('data-state') === constants.MSG_STATE[constants.MSG_ERROR]) && $elem.dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n        }\n        if (message === this.model.last_message) {\n            this.updateLastMessage();\n        }\n        this.updateChatError();\n    },\n\n    updateName: function () {\n        if (this.model.get('saved')) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n            return;\n        }\n        this.$('.chat-title').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        if (this.model.get('saved'))\n            return;\n        let status = this.contact.get('status');\n        this.$('.status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n    },\n\n    updateActiveStatus: function () {\n        this.$el.switchClass('active', this.model.get('active'));\n        this.updateLastMessage();\n    },\n\n    updateAcceptedStatus: function () {\n        let in_roster = this.contact.get('in_roster');\n        if (in_roster)\n            this.model.set('is_accepted', true);\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.msg-counter').showIf(unread).text(unread || '');\n        this.updateTextClipping();\n    },\n\n    updateIncomingSubscription: function () {\n        this.$('.msg-incoming-subscription').showIf(this.contact.get('invitation') || (this.contact.get('subscription_request_in') && this.contact.get('subscription') != 'both'));\n        this.updateTextClipping();\n    },\n\n    updateChatError: function () {\n        let error_msgs = this.model.messages.filter(m => m.get('state') === -1)\n        this.$('.msg-chat-error').showIf(error_msgs.length);\n        this.updateTextClipping();\n    },\n\n    updateTextClipping: function () {\n        let indicators_count = this.$('.chat-item-notifications-wrap').children(':not(.hidden)').length;\n        this.$('.last-msg').switchClass('triple-indicators', indicators_count === 3)\n        this.$('.last-msg').switchClass('quad-indicators', indicators_count === 4)\n    },\n\n    updateAvatar: function () {\n        if (this.model.get('saved'))\n            return;\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updatePinned: function () {\n        let is_pinned = this.model.get('pinned');\n        this.$('.pinned-icon').showIf(is_pinned && is_pinned !== '0');\n        if (is_pinned)\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateIcon: function () {\n        if (!this.contact)\n            return;\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    updateMutedState: function () {\n        if (!this.contact)\n            return;\n        this.$('.msg-counter').switchClass('muted-chat-counter', this.model.isMuted());\n        this.$('.muted-icon').switchClass('mdi-bell-off', (this.model.isMuted() > 4800000000)).switchClass('mdi-bell-sleep', (this.model.isMuted() <= 4800000000));\n        this.$('.muted-icon').showIf(this.model.isMuted());\n    },\n\n    updateArchivedState: function () {\n        if (!this.contact)\n            return;\n        let archived = this.model.get('archived');\n        if (archived || (!archived && xabber.toolbar_view.$('.active').hasClass('archive-chats')))\n            this.$el.detach();\n        if (archived && xabber.toolbar_view.$('.active').hasClass('archive-chats') || !archived && !xabber.toolbar_view.$('.active').hasClass('archive-chats'))\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateGroupChats: function () {\n        if (!this.contact)\n            return;\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.$('.chat-icon').showIf(is_group_chat);\n        this.updateIcon();\n        if (is_group_chat) {\n            this.$el.addClass('group-chat');\n            this.model.set('group_chat', true);\n        }\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onMessageRemoved: function (msg) {\n        if (this.model.last_message === msg) {\n            let last_message;\n            for (let idx = this.model.messages.length-1; idx >= 0; idx--) {\n                last_message = this.model.messages.at(idx);\n                if (!last_message.get('silent'))\n                    break;\n            }\n            this.model.last_message = last_message;\n            this.updateLastMessage();\n        }\n        this.deletePlayersFromMessage(msg);\n    },\n\n    deletePlayersFromMessage: function (message) {\n        let players = []\n        message.get('msg_player_videos') && (players = players.concat(message.get('msg_player_videos')));\n        message.get('msg_player_audios') && (players = players.concat(message.get('msg_player_audios')));\n        if (players.length){\n            if (xabber.current_plyr_player){\n                let is_current_player = xabber.current_plyr_player.is_popup ?\n                    players.includes(xabber.current_plyr_player.chat_item.model.plyr_players[xabber.current_plyr_player.player_index])\n                    : players.includes(xabber.current_plyr_player);\n\n                if (is_current_player){\n                    xabber.plyr_players.forEach((item) => {\n                        if (item.$audio_elem){\n                            if (item.$audio_elem.voice_message)\n                                item.$audio_elem.voice_message.stopTime()\n                        }\n                        else\n                            item.stop();\n                    })\n                    if (xabber.current_plyr_player.is_popup && xabber.plyr_player_popup){\n                        xabber.plyr_player_popup.closePopup();\n                    } else {\n                        xabber.current_plyr_player = null;\n                        xabber.trigger('plyr_player_updated');\n                    }\n                }\n            }\n            this.model.plyr_players = this.model.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.plyr_players = xabber.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    updateEmptyChat: function () {\n        let msg_time = this.model.get('timestamp'),\n            is_empty = Number(this.model.get('last_delivered_id')) || Number(this.model.get('last_displayed_id')) || Number(this.model.get('last_read_msg'));\n        this.$('.last-msg').html(xabber.getString(is_empty ? \"recent_chat__last_message_retracted\" : \"no_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateEncryptedChat: function () {\n        let msg_time = this.model.get('timestamp');\n        this.$('.last-msg').html(xabber.getString(\"recent_chat__decrypting_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateLastMessage: function (msg) {\n        msg || (msg = this.model.last_message);\n        if (!this.model.get('active') && this.model.item_view && this.model.item_view.content && this.model.item_view.content.bottom && this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea().trim()){\n            let draft_message = this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea();\n            this.$('.last-msg').html(draft_message).prepend($(`<span class=\"text-color-700\">${xabber.getString(\"draft\")}: </span>`));\n            this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n            msg && this.model.set({timestamp: msg.get('timestamp')});\n            return;\n        }\n        if (!msg) {\n            !this.model.messages.length && this.updateEmptyChat();\n            return;\n        }\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'), msg_from = \"\",\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = forwarded_message ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n            msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact && this.contact.my_info && this.contact.my_info.attributes || {};\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (this.model.get('group_chat'))\n            msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n        msg_from && (msg_from = $('<span class=\"text-color-700\"/>').text(msg_from + ': '));\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg.get('type') === 'file_upload') {\n                msg_images = msg_files.filter(f => f && f.type && utils.isImageType(f.type));\n                msg_files = msg_files.filter(f => f && !(f.type && utils.isImageType(f.type)));\n            }\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                    msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                else if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n        }\n        else {\n            if (msg.get('type') == 'system') {\n                msg_from = \"\";\n                if (msg.get('invite'))\n                    msg_text = xabber.getString(\"groupchat_invitation_to_group_chat\", [(this.contact && this.contact.get('incognito_chat')) ? 'incognito' : 'public']);\n                msg.get('private_invite') && (msg_text = xabber.getString(\"recent_chat__last_message__private_invitation\"));\n                if (this.model.get('group_chat'))\n                    msg_text = $('<i/>').text(msg_text);\n                else\n                    msg_text = $('<span class=text-color-500/>').text(msg_text);\n                this.$('.last-msg').html(msg_text);\n                if (msg.get('auth_request')){\n                    xabber.toolbar_view.recountAllMessageCounter();\n                }\n            }\n            else {\n                if (forwarded_message) {\n                    if (msg.get('message')) {\n                        msg_text = msg.get('message');\n                        this.$('.last-msg').text(msg_text);\n                    }\n                    else {\n                        let first_forwarded_msg = forwarded_message[0];\n                        if (first_forwarded_msg.get('message')) {\n                            let fwd_msg_files = first_forwarded_msg.get('files') || [],\n                                fwd_msg_images = first_forwarded_msg.get('images') || [],\n                                fwd_msg_locations = first_forwarded_msg.get('locations') || [];\n                            first_forwarded_msg.get('videos') && first_forwarded_msg.get('videos').length && (fwd_msg_files = fwd_msg_files.concat(first_forwarded_msg.get('videos')));\n                            if (fwd_msg_files.length || fwd_msg_images.length || fwd_msg_locations.length) {\n                                let $colored_span = $('<span class=\"text-color-500\"/>');\n                                if (msg.get('type') === 'file_upload') {\n                                    fwd_msg_images = fwd_msg_files.filter(f => f.type && utils.isImageType(f.type));\n                                    fwd_msg_files = fwd_msg_files.filter(f => !(f.type && utils.isImageType(f.type)));\n                                }\n                                if (fwd_msg_files.length && fwd_msg_images.length)\n                                    msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [fwd_msg_files.length + fwd_msg_images.length]));\n                                else {\n                                    if (fwd_msg_files.length == 1 && (fwd_msg_files[0].is_audio || fwd_msg_files[0].voice))\n                                        msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(fwd_msg_files[0].duration));\n                                    else if (fwd_msg_files.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_files.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_images.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_images.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_locations.length > 0) {\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_msg_locations.length));\n                                    }\n                                }\n                                if (this.model.get('group_chat')) {\n                                    this.$('.last-msg').html(\"\").append(msg_from).append('» ').append(msg_text);\n                                } else {\n                                    this.$('.last-msg').html(\"» \").append(msg_text);\n                                }\n                            } else if (this.model.get('group_chat')) {\n                                msg_text = first_forwarded_msg.get('message');\n                                msg_text = '» ' + msg_text;\n                                this.$('.last-msg').text(msg_text);\n                            } else {\n                                msg_text = first_forwarded_msg.get('message');\n                                this.$('.last-msg').text(msg_text);\n                                msg_from = '» ';\n                            }\n                        }\n                        else {\n                            if (forwarded_message.length === 1) {\n                                let fwd_msg_txt = xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).slice(2)\n                                fwd_msg_txt = fwd_msg_txt.charAt(0).toUpperCase() + fwd_msg_txt.slice(1)\n                                msg_text = $('<i/>').text(fwd_msg_txt);\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                            else {\n                                msg_text = $('<i/>').text(xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length));\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                        }\n                    }\n                }\n                else {\n                    msg_text = msg.getText();\n                    this.$('.last-msg').text(msg_text);\n                }\n            }\n            this.$('.last-msg').prepend(msg_from);\n        }\n        if (msg.get('not_encrypted'))\n            this.$('.last-msg').html(this.$('.last-msg').html().italics());\n        this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n        this.$('.msg-delivering-state').showIf(msg.get('type') !== 'system' && msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n            .attr('data-state', msg.getState());\n    },\n\n    openByClick: function () {\n        this.open();\n    },\n\n    open: function (options) {\n        if (!this.content){\n            this.content = new xabber.ChatContentView({chat_item: this});\n        }\n        options || (options = {right_contact_save: true, clear_search: false});\n        xabber.chats_view.openChat(this, options);\n        this.content.bottom.click_counter = 0;\n        this.content.bottom.setDefaultPlaceholder();\n    },\n\n    removeInvite: function (options) {\n        if (!this.account.server_features.get(Strophe.NS.REWRITE))\n            return;\n        options || (options = {});\n        let msgs = _.clone(this.model.messages.models);\n        this.model.set({'last_archive_id': undefined, 'first_archive_id': undefined});\n        msgs.forEach((item) => {\n            if (item.get('invite')) {\n                let iq_retraction = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('retract-message', {\n                        id: item.get('stanza_id'),\n                        xmlns: Strophe.NS.REWRITE,\n                        type: Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT,\n                        symmetric: false,\n                    });\n                this.account.sendIQFast(iq_retraction);\n                item && this.content.removeMessage(item);\n            }\n        });\n        this.model.recountUnread();\n        delete this.contact.attributes.invitation;\n        this.updateIcon();\n    },\n\n    onClosed: function () {\n        this.parent.onChatRemoved(this.model, {soft: true});\n    }\n});\n\n  xabber.MessagesView = xabber.BasicView.extend({\n      template: templates.chat_content,\n      ps_selector: '.chat-content',\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n          this.$search_form = this.$('.search-form-header');\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this._scrolltop = this.getScrollTop();\n          this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          let wheel_ev = this.defineMouseWheelEvent();\n          this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n          this.$('.back-to-bottom').click(this.backToBottom.bind(this));\n      },\n\n      defineMouseWheelEvent: function () {\n          if (!_.isUndefined(window.onwheel)) {\n              return \"wheel\";\n          } else if (!_.isUndefined(window.onmousewheel)) {\n              return \"mousewheel\";\n          } else {\n              return \"MozMousePixelScroll\";\n          }\n      },\n\n      keyupSearch: function (ev) {\n          if (ev.keyCode === constants.KEY_ENTER) {\n              let query = this.$search_form.find('input').val();\n              this.model.searchMessages(query, (messages) => {\n              });\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              this.chat_content.head.renderSearchPanel();\n          }\n      },\n\n      onMouseWheel: function (ev) {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onClickMessage:function (ev) {\n          this.chat_content.onClickMessage(ev);\n      },\n\n      onClickLink:function (ev) {\n          this.chat_content.onClickLink(ev);\n      },\n\n      onClickLocationLink:function (ev) {\n          this.chat_content.onClickLocationLink(ev);\n      },\n\n      onClickLocation:function (ev) {\n          this.chat_content.onClickLocation(ev);\n      },\n\n      onHoverLocation:function (ev) {\n          this.chat_content.onHoverLocation(ev);\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          if (!this.history_loaded && !this.loading_history && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n              this.loading_history = true;\n              this.messagesRequest({before: this.first_msg_id}, () => {\n                  this.loading_history = false;\n              });\n          }\n      },\n\n      backToBottom: function () {\n          this.openChat();\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function () {},\n\n      emptyChat: function () {\n          this.$('.chat-content').html($('<span class=\"error\"/>').text(xabber.getString(\"no_messages\")));\n      },\n\n      openChat: function () {\n          this.model.item_view.open({right_contact_save: true, clear_search: false});\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          let scrolled_from_top,\n              scrolled_from_bottom = this.getScrollBottom();\n          if (index === 0)\n              $message.prependTo(this.$('.chat-content'));\n          else\n              $message.insertAfter(this.$('.chat-message').eq(index - 1));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          this.chat_content.updateMessageInChat($message[0], msg);\n          if ($next_message.length) {\n              this.chat_content.updateMessageInChat($next_message[0]);\n          }\n          this.chat_content.initPopup($message);\n          if (scrolled_from_top)\n              this.scrollTo(scrolled_from_top);\n          else\n              this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n          return $message;\n      }\n\n  });\n\n  xabber.MessageContextView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap messages-context-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          options = options || {};\n          this.stanza_id = options.stanza_id_context;\n          this.encrypted = options.encrypted;\n          this.mention_context = options.mention_context;\n          if (!this.model.item_view.content)\n              this.chat_content = new xabber.ChatContentView({chat_item: this.model.item_view});\n          this.$history_feedback = this.$('.load-history-feedback');\n          this.account.context_messages = new xabber.Messages(null, {account: this.account});\n          this.account.context_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.context_messages.on(\"add\", this.addMessage, this);\n          this.account.context_messages.on(\"change:is_unread\", this.onChangedReadState, this);\n          xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n      },\n\n      render: function () {\n          this.scrollToTop();\n          this.onUpdatePlyr();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this.encrypted && this.$el.attr('data-trust', true)\n      },\n\n      onMouseWheel: function (ev) {\n          if (!this.loading_history)\n              if (ev.originalEvent.deltaY < 0) {\n                  if (!this.first_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({before: this.first_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n              else {\n                  if (!this.last_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          this._scrollbottom = this.getScrollBottom();\n\n          if (!this.loading_history)\n              if (!this.first_history_loaded && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n                  this.loading_history = true;\n                  this.showHistoryFeedback();\n                  this.messagesRequest({before: this.first_msg_id}, () => {\n                      this.loading_history = false;\n                      this.hideHistoryFeedback();\n                  });\n              }\n              else {\n                  if (!this.last_history_loaded && (this._scrolltop > this._prev_scrolltop) && (this._scrollbottom < 100 || this.getPercentScrolled() > 0.9)) {\n                      this.loading_history = true;\n                      this.showHistoryFeedback();\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                          this.hideHistoryFeedback();\n                      });\n                  }\n              }\n\n          clearTimeout(this._onscroll_read_messages_timeout);\n          this._onscroll_read_messages_timeout = setTimeout(() => {\n              this.chat_content.readVisibleMessages(true);\n          }, 100)\n      },\n\n      onChangedReadState: function (message) {\n          let is_unread = message.get('is_unread'),\n              $msg = this.$(`.chat-message[data-uniqueid=\"${message.get(\"unique_id\")}\"]`);\n          if (is_unread) {\n              $msg.addClass('unread-message');\n              $msg.addClass('unread-message-background');\n          } else {\n              $msg.removeClass('unread-message');\n              setTimeout(() => {\n                  $msg.removeClass('unread-message-background');\n              }, 1000);\n          }\n      },\n\n      showHistoryFeedback: function () {\n          this.$history_feedback.text(xabber.getString(\"loading_history\")).removeClass('hidden');\n      },\n\n      hideHistoryFeedback: function () {\n          this.$history_feedback.addClass('hidden');\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.after && !options.before && (options.before = '');\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first) && (this.last_msg_id = rsm.last);\n                  if (options.after && (messages.length < options.max))\n                      this.last_history_loaded = true;\n                  if (options.before && (messages.length < options.max))\n                      this.first_history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {context_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          if (this.mention_context && (message.get('stanza_id') === this.stanza_id)) {} else message.set('is_archived', true);\n\n          let msg_item = this.model.messages.find(msg => msg.get('stanza_id') == message.get('stanza_id') || msg.get('contact_stanza_id') == message.get('stanza_id'));\n          if (msg_item) {\n              msg_item.get('is_unread') && message.set('is_unread', msg_item.get('is_unread'));\n              msg_item.get('is_unread_archived') && message.set('is_unread_archived', msg_item.get('is_unread_archived'));\n          }\n\n          let $message = this.chat_content.buildMessageHtml(message).addClass('context-message'),\n              index = this.account.context_messages.indexOf(message);\n          if (message.get('stanza_id') === this.stanza_id) {\n              $message.addClass('message-from-context');\n              setTimeout(() => {\n                  $message.removeClass('message-from-context')\n              }, 3000);\n          }\n          this.addMessageHTML($message, message, index, this.account.context_messages.findLastIndex());\n      },\n\n      onUpdatePlyr: function (ev) {\n          this.$('.plyr-video-container').removeClass('active-plyr-container');\n          if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n              let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n              if ($message.length) {\n                  $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n              }\n          }\n      },\n  });\n\n  xabber.SearchedMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.query_text = options.query_text;\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          this.account.searched_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          return this;\n      },\n\n      render: function () {\n          this.$search_form.find('input').val(this.query_text);\n          this.$search_form.slideToggle(10, () => {\n              if (this.$search_form.css('display') !== 'none')\n                  this.$search_form.find('input').focus();\n              this.scrollToBottom();\n          });\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'withtext', value: this.query_text}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {searched_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n              index = this.account.searched_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.ContactSearchedMessagesView = xabber.MessagesView.extend({\n      template: templates.chat_content_contact,\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\",\n          \"click .close-search-icon\": \"clearSearch\",\n          'click .btn-back': 'hideSearch'\n      },\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          this.$search_form = this.$('.search-form-header');\n          this.timer = null;\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          this.parent.model.set('search_hidden', true)\n          return this;\n      },\n\n      render: function () {\n          if (this.account.searched_messages)\n              this.searched_messages = this.account.searched_messages\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          if (this.searched_messages)\n              this.account.searched_messages.add(this.searched_messages.toJSON(), {silent : true});\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$el.html(this.parent.model.get('saved_search_panel'));\n              this.model.set('saved_search_panel', undefined);\n          }\n          else {\n              this.emptyChat();\n              this.$el.html(this.template());\n              this.emptyChat();\n              if (this.parent.model.get('search_hidden'))\n                  this.hideSearch();\n          }\n          this.ps_container = this.$('.search-messages-content-wrap');\n          if (this.ps_container.length) {\n              this.ps_container.perfectScrollbar(\n                  _.extend(this.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$search_form = this.$('.search-form-header');\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$search_form.find('input').focus();\n              if (this.parent.model.get('saved_search_panel_scroll'))\n                  this.scrollTo(this.parent.model.get('saved_search_panel_scroll'));\n          }\n      },\n\n      clearSearch: function () {\n          this.$search_form.find('input').val('');\n          this.emptyChat();\n      },\n\n\n      keyupSearch: function (ev) {\n          this.$('.close-search-icon').hideIf(!this.$search_form.find('input').val());\n          if (ev.keyCode === constants.KEY_ENTER) {\n              this.emptyChat();\n              let query = this.$search_form.find('input').val();\n              this.$('.preloader-wrap').hideIf(false);\n              this.loading_timestamp = Number(moment.now());\n              this.messagesRequest(query, this.loading_timestamp, undefined, [], (messages, rsm) => {\n              });\n          }\n      },\n\n      emptyChat: function () {\n          if (this.account.searched_messages)\n              this.account.searched_messages.reset();\n          this.$('.chat-content').html('');\n          this.$('.messages-count').hideIf(true);\n          this.$('.preloader-wrap').hideIf(true);\n          this.$('.search-results').hideIf(true);\n          this.$('.close-search-icon').hideIf(true);\n      },\n\n      messagesRequest: function (query, timestamp, rsm, loaded_messages, callback) {\n          if(!query || this.loading_timestamp != timestamp) {\n              this.emptyChat();\n              return true;\n          }\n          let messages = [],\n              options = {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              var: [{var: 'withtext', value: query}]\n          });\n          if (rsm && rsm.last)\n              _.extend(options, {\n                  after: rsm.last,\n              });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  loaded_messages = loaded_messages.concat(messages)\n                  if (messages.length == options.max){\n                      if (this.parent &&  this.parent.data && !this.parent.data.get('visible') || this.parent.model.get('search_hidden'))\n                          return;\n                      else\n                          this.messagesRequest(query, timestamp, rsm, loaded_messages, (messages, rsm) => {});\n                  }\n                  else if (loaded_messages.length == rsm.count) {\n                      if (rsm.count != 0) {\n                          let message_count = rsm.count;\n                          this.emptyChat()\n                          // list.sort((a, b) => (a.color > b.color) ? 1 : -1)\n                          $(loaded_messages).each((idx, message) => {\n                              let $message = $(message),\n                                  $jingle_msg_propose = $message.find(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n                              if ($jingle_msg_propose.length)\n                                  message_count--;\n                              this.account.chats.receiveChatMessage($message, {\n                                  searched_message: true,\n                                  searched_in_contact_messages: true,\n                                  query: query\n                              });\n                          });\n                          this.$('.messages-count').hideIf(!message_count);\n                          this.$('.close-search-icon').hideIf(!message_count);\n                          this.$('.search-results').hideIf(message_count);\n                          this.$('.messages-count').text(xabber.getQuantityString(\"searched_messages_count\", message_count));\n                      }\n                      else {\n                          this.emptyChat();\n                          this.$('.close-search-icon').hideIf(false);\n                          this.$('.search-results').hideIf(false);\n                      }\n\n                  }\n                  callback && callback(messages, rsm);\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          $message.prependTo(this.$('.chat-content'));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          // this.chat_content.updateMessageInChat($message[0]);\n          // if ($next_message.length) {\n          //     this.chat_content.updateMessageInChat($next_message[0]);\n          // }\n          // this.chat_content.initPopup($message);\n          return $message;\n      },\n\n      addMessage: function (message) {\n          if (!this.parent.model.get('search_hidden')) {\n              if (message.get('auth_request') || !message.get('searched_in_contact_messages'))\n                  return;\n              message.set('is_archived', true);\n              message.set('searched_message', true);\n              let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n                  index = this.account.searched_messages.indexOf(message);\n              this.chat_content.showMessageAuthor($message);\n              this.addMessageHTML($message, message, index);\n          }\n      },\n\n      hideSearch: function (ev) {\n          this.parent.model.set('search_hidden', true);\n          this.$('.search-input').val('')\n          this.emptyChat();\n          if (this.parent.ps_container.length) {\n              this.parent.ps_container.perfectScrollbar(\n                  _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$('.search-wrap').hideIf(this.parent.model.get('search_hidden'))\n      },\n\n      onClickMessage: function (ev) {\n          let $elem = $(ev.target),\n              $msg = $elem.closest('.chat-message');\n          this.parent.model.set('saved_search_panel_scroll', this.ps_container[0].scrollTop);\n          this.ps_container.perfectScrollbar('destroy');\n          this.parent.model.set('saved_search_panel', this.$el.clone());\n          this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n      }\n  });\n\n  xabber.ParticipantMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap participant-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          'click .btn-cancel-selection' : 'openChat',\n          'click .btn-retract-messages' : 'retractMessages',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.participant = options.participant;\n          this.member_jid = this.participant.jid;\n          this.member_id = this.participant.id;\n          this.member_nickname = this.participant.nickname;\n          this.account.participant_messages = new xabber.Messages(null, {account: this.account});\n          this.account.participant_messages.on(\"add\", this.addMessage, this);\n          this.account.participant_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n          return this;\n      },\n\n      render: function () {\n          this.$('.chat-content').css('height', 'calc(100% - 32px)');\n          this.$('.participant-messages-header .messages-by-header .participant-nickname').text(this.member_nickname);\n          this.$('.participant-messages-header').removeClass('hidden');\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScrollY: function () {\n\n      },\n\n      retractMessages: function () {\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__confirm\", [(this.member_nickname || this.member_jid || this.member_id)]),\n              null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n              if (result) {\n                  if (this.member_id) {\n                      this.chat_content.model.retractMessagesByUser(this.member_id, () => {\n                          this.emptyChat();\n                      });\n                  }\n              }\n          });\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              member_id = this.member_id,\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'with', value: member_id}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid) {\n                  messages.push(message);\n              }\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options,\n              (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.participant_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {participant_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('participant-message'),\n              index = this.account.participant_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.SubscriptionButtonsView = xabber.BasicView.extend({\n      template: templates.subscription_buttons,\n\n      events: {\n          \"click .btn-decline\": \"declineSubscription\",\n          \"click .btn-allow\": \"allowSubscription\",\n          \"click .btn-add\": \"addContact\",\n          \"click .btn-subscribe\": \"addContact\",\n          \"click .btn-block\": \"blockContact\"\n      },\n\n      _initialize: function (options) {\n          this.$el.html(this.template());\n          this.contact = options.contact;\n          this.contact.on(\"change:subscription\", this.render, this);\n          this.contact.on(\"change:in_roster\", this.render, this);\n          this.contact.on(\"change:blocked\", this.render, this);\n          this.contact.on(\"change:subscription_request_in\", this.render, this);\n          this.contact.on(\"change:subscription_request_out\", this.render, this);\n      },\n\n      render: function () {\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n          if (this.contact.get('group_chat')) {\n              this.$el.addClass('hidden');\n              return;\n          }\n          let subscription = this.contact.get('subscription'),\n              in_request = this.contact.get('subscription_request_in'),\n              in_roster = this.contact.get('in_roster'),\n              out_request = this.contact.get('subscription_request_out');\n          this.$('.button').removeClass('hidden');\n          this.$('.subscription-info').text(\"\");\n          this.$el.addClass('hidden');\n          if (subscription === 'both' || this.contact.get('blocked'))\n              return;\n          else if (subscription === 'to' && in_request || (subscription === 'none' && in_request && in_roster)) {\n              this.$('.subscription-info').text(xabber.getString(\"subscription_status_in_request_incoming\"));\n              this.$('.button:not(.btn-allow)').addClass('hidden');\n          } else if (!out_request && !in_roster && !in_request && (subscription === 'from' || subscription === 'none')) {\n              this.$('.subscription-info').text(xabber.getString(\"chat_subscribe_request_outgoing\"));\n              this.$('.button:not(.btn-subscribe)').addClass('hidden');\n          } else if (subscription === undefined || subscription === 'none' && in_request) {\n              this.$('.button:not(.btn-add):not(.btn-block)').addClass('hidden');\n          } else {\n              return;\n          }\n          this.$el.removeClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').addClass('with-before');\n      },\n\n      hideElement: function () {\n          this.$el.addClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n      },\n\n      declineSubscription: function () {\n          this.contact.declineSubscribe();\n          this.contact.set('subscription_request_in', false);\n          this.hideElement();\n      },\n\n      allowSubscription: function () {\n          this.contact.acceptRequest();\n          this.hideElement();\n      },\n\n      addContact: function () {\n          if (this.contact.get('subscription') === undefined)\n              this.contact.pushInRoster(null, () => {\n                  this.sendAndAskSubscription();\n              });\n          else\n              this.sendAndAskSubscription();\n          this.hideElement();\n      },\n\n      sendAndAskSubscription: function () {\n          this.contact.askRequest();\n          this.contact.acceptRequest();\n      },\n\n      blockContact: function () {\n          this.contact.blockRequest();\n          this.hideElement();\n      }\n  });\n\nxabber.ChatContentView = xabber.BasicView.extend({\n    className: 'chat-content-wrap',\n    template: templates.chat_content,\n    ps_selector: '.chat-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n    events: {\n        'mousedown .chat-message': 'onTouchMessage',\n        'click .chat-message': 'onClickMessage',\n        'click .chat-msg-location-content': 'onClickLocation',\n        'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n        'click .msg-copy-location' : 'onClickLocationLink',\n        'click .pinned-message' : 'showPinnedMessage',\n        \"keyup .messages-search-form\": \"keyupSearch\",\n        \"click .btn-cancel-searching\": \"cancelSearch\",\n        \"click .back-to-bottom\": \"backToBottom\",\n        \"click .back-to-unread:not(.back-to-bottom)\": \"scrollToUnreadWithButton\",\n        \"click .btn-retry-send-message\": \"retrySendMessage\",\n        \"click .btn-delete-message\": \"removeFileErrorMessage\",\n        \"click .not-decrypted-tooltip .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .encryption-warning\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.chat_item = options.chat_item;\n        this.current_day_indicator = null;\n        this._pending_avatars = [];\n        this.account = this.chat_item.account;\n        this.model = this.chat_item.model;\n        this.contact = this.model.contact;\n        this.head = this.model.get('saved') ? new xabber.SavedChatHeadView({content: this}) : new xabber.ChatHeadView({content: this});\n        this.bottom = new xabber.ChatBottomView({content: this});\n        this.$history_feedback = this.$('.load-history-feedback');\n        this.$pinned_message = this.$('.pinned-message');\n        this.$search_form = this.$('.search-form-header');\n        this.$el.attr('data-id', this.model.id);\n        this.updateContentColorScheme();\n        if ((this.model.sync_created && this.model.last_message) || options.new_message && !options.new_message.get('synced_from_server') && options.new_message.get('encrypted') && this.model.get('encrypted')){\n            this.model.last_message && this.onMessage(this.model.last_message);\n            if (options.new_message){\n                this.onMessage(options.new_message);\n                this.onChangedReadState(options.new_message);\n            }\n        }\n        this._scrolltop = this.getScrollTop();\n        this._is_scrolled_bottom = true;\n        this._long_reading_timeout = false;\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.model.on(\"change:active change:idle\", this.onChangedActiveStatus, this);\n        xabber.on(\"change:idle change:focused\", this.onChangedIdleStatus, this);\n        this.model.on(\"load_last_history\", this.loadLastHistory, this);\n        this.model.on(\"get_missed_history\", this.requestMissedMessages, this);\n        this.model.messages.on(\"add\", this.onMessage, this);\n        this.model.messages.on(\"change:is_unread\", this.onChangedReadState, this);\n        this.model.messages.on(\"change:timestamp\", this.onChangedMessageTimestamp, this);\n        this.model.messages.on(\"change:trusted\", this.onTrustedChanged, this);\n        this.model.messages.on(\"change:last_replace_time\", this.updateMessage, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        if (this.contact) {\n            this.subscription_buttons = new xabber.SubscriptionButtonsView({contact: this.contact, el: this.$('.subscription-buttons-wrap')[0]});\n            this.contact.on(\"change:blocked\", this.updateBlockedState, this);\n            this.contact.on(\"change:subscription\", this.onSubscriptionChange, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n            this.contact.on(\"remove_from_blocklist\", this.loadLastHistory, this);\n            this.contact.on(\"update_trusted\", this.updateMsgsMissingDevices, this);\n            this.account.contacts.on(\"change:name\", this.updateName, this);\n            this.account.contacts.on(\"change:image\", this.updateAvatar, this);\n        }\n        this.account.on(\"change\", this.updateMyInfo, this);\n        this.account.on(\"device_trusted\", this.updateMsgsDeviceTrusting, this);\n        this.account.settings.on(\"change:color\", this.updateContentColorScheme, this);\n        xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n        this.account.dfd_presence.done(() => {\n            !this.account.connection.do_synchronization && this.loadLastHistory();\n        });\n        return this;\n    },\n\n    render: function () {\n        this.cancelSearch();\n        if (this._prev_scrolltop)\n            this.scrollTo(this._prev_scrolltop);\n        else\n            this.scrollToBottom();\n        this.onScroll();\n        this.updateCounter();\n        this.updateContactStatus();\n        this.updateWaveforms();\n        this.onUpdatePlyr();\n        if (this.contact) {\n            this.contact.get('group_chat') && this.updatePinnedMessage();\n            this.subscription_buttons.render();\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    updateMyInfo: function () {\n        let changed = this.account.changed;\n        if (_.has(changed, 'name')) this.updateMyName();\n        if (_.has(changed, 'status')) this.updateMyStatus();\n        if (_.has(changed, 'image')) this.updateMyAvatar();\n    },\n\n    updateMsgsDeviceTrusting: function (device_id, jid) {\n        if (!this.model.get('encrypted') || !device_id || !this.contact || this.contact.get('jid') !== jid )\n            return;\n        this.$(`.not-decrypted-icon[data-device-id=\"${device_id}\"]`).each((idx, item) => {\n            let $msg = $(item).closest('.chat-message');\n            $msg.removeClass('not-verified');\n            $msg.addClass('not-verified-previously');\n        })\n    },\n\n    updateMsgsMissingDevices: function (trust, peer) {\n        if (!this.model.get('encrypted') || !peer || !this.contact)\n            return;\n\n        this.$(`.chat-message:not(.not-existing-device)`).each((idx, item) => {\n            let $item = $(item);\n            if ($item.attr('data-device-id') && !peer.devices[$item.attr('data-device-id')] && $item.attr('data-from') != this.account.get('jid')){\n                $item.hasClass('not-verified') && $item.addClass('not-verified-previously');\n                $item.removeClass('not-verified');\n                $item.addClass('not-existing-device');\n            }\n        })\n    },\n\n    updateContentColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n        this.head.$el.attr('data-color', color);\n        this.bottom.$el.attr('data-color', color);\n    },\n\n    onTrustedChanged: function (message) {\n        let trusted = message.get('trusted'),\n            $message = this.$('.chat-message[data-uniqueid=\"' + message.get('unique_id') + '\"]');\n        (trusted === null) && (trusted = 'none');\n        $message.attr('data-trust', trusted);\n    },\n\n    updateGroupChat: function () {\n        this._loading_history = false;\n        this.model.set('history_loaded', false);\n    },\n\n    onSubscriptionChange: function () {\n        let subscription = this.contact.get('subscription');\n        if (subscription === 'both' && this.contact.get('group_chat')){\n            this.updateGroupChat();\n            this.loadPreviousHistory();\n            this.model.get('active') && this.onChangedActiveStatus();\n        }\n    },\n\n    cancelSearch: function () {\n        this.$search_form.hide().find('input').val(\"\");\n    },\n\n    updateContactStatus: function () {\n        if (this.head.$('.contact-status').attr('data-status') == 'offline' && this.contact.get('last_seen')) {\n            let seconds = (moment.now() - this.contact.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.contact.set({status_message: new_status });\n        }\n    },\n\n    updateWaveforms: function () {\n        this.model.plyr_players.forEach(function(item) {\n            if (item.$audio_elem && item.$audio_elem.voice_message && item.$audio_elem.voice_message.backend && item.$audio_elem.voice_message.backend.buffer)\n                item.$audio_elem.voice_message.drawBuffer();\n        });\n    },\n\n    updatePinnedMessage: function () {\n        let $pinned_message = this.contact.get('pinned_message');\n        this.contact.renderPinnedMessage($pinned_message, this.$pinned_message);\n    },\n\n    onChangedVisibility: function () {\n        if (this.isVisible()) {\n            this.model.set({display: true, active: true});\n        } else {\n            this.model.set({display: false});\n        }\n    },\n\n    onChangedIdleStatus: function (ev) {\n        if (!this.model.get('active'))\n            return;\n        this.model.set('idle', xabber.get('idle') || !xabber.get('focused'))\n    },\n\n    onChangedActiveStatus: function () {\n        let active = this.model.get('active');\n        if (this.model.get('active') && this.model.get('idle'))\n            active = false;\n        this.sendChatState(active ? 'active' : 'inactive');\n        if (this.model.get('group_chat') && !this.contact.get('invitation')) {\n            if (active){\n                this.contact.setActiveStateSendInterval();\n            }\n            else{\n                clearTimeout(this.contact._sending_active_chatstate_timeout);\n                clearInterval(this.contact._sending_active_chatstate_interval);\n            }\n        }\n    },\n\n    updateName: function (contact) {\n        let name = contact.get('name'),\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.chat-msg-author').text(name);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-msg-author').text(name);\n            });\n        }\n    },\n\n    updateAvatar: function (contact) {\n        let image = contact.cached_image,\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        }\n    },\n\n    updateMyStatus: function () {\n        let text;\n        if (!this.account.isOnline()) {\n            text = xabber.getString(\"connection_status__you_are_offline\");\n        }\n        this.bottom.showChatNotification(text || '', true);\n    },\n\n    updateMyName: function () {\n        let name = this.account.get('name'),\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.chat-msg-author').text(name);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-msg-author').text(name);\n        });\n    },\n\n    updateMyAvatar: function () {\n        let image = this.account.cached_image,\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n    },\n\n    updateBlockedState: function () {\n        if (this.model.get('blocked'))\n            this.model.showBlockedRequestMessage();\n        if (this.isVisible()) {\n            xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'chat', chat_item: this.chat_item, blocked: this.model.get('blocked')});\n            this.updateScrollBar();\n        }\n    },\n\n    readVisibleMessages: function (is_context) {\n        let self = is_context ? this.model.messages_view : this;\n        if (!self.isVisible())\n            return;\n        if (self.$('.chat-message.unread-message').length && xabber.get('focused') && !xabber.get('idle')){\n            let last_visible_unread_msg;\n            self.$('.chat-message.unread-message').each((idx, msg) => {\n                if ($(msg).isVisibleInContainer(self.$('.chat-content'))) {\n                    last_visible_unread_msg = msg;\n                }\n            });\n            if (last_visible_unread_msg){\n                this.readMessage(this.model.messages.get($(last_visible_unread_msg).data('uniqueid')), $(last_visible_unread_msg), is_context);\n            }\n        }\n    },\n\n    hideMessagesAfterSkipping: function () {\n        if (this.model.get('last_sync_unread_id') && this.model.get('synced_msg')){\n            let synced_message = this.model.get('synced_msg'),\n                $synced_message = this.$(`.chat-message[data-uniqueid=\"${synced_message.get('unique_id')}\"]`);\n            $synced_message.addClass('after-skip-message');\n            $synced_message.prevAll('.chat-message.after-skip-message').removeClass('after-skip-message');\n            $synced_message.nextAll('.chat-message:not(.after-skip-message)').addClass('after-skip-message');\n        } else {\n            this.$('.chat-message.after-skip-message').removeClass('after-skip-message');\n        }\n    },\n\n    readMessage: function (last_visible_msg, $last_visible_msg, is_context) {\n        clearTimeout(this._read_last_message_timeout);\n        this._read_last_message_timeout = setTimeout(() => {\n            this.model.sendMarker(last_visible_msg.get('msgid'), 'displayed', last_visible_msg.get('stanza_id'), last_visible_msg.get('contact_stanza_id'));\n            this.model.set('last_read_msg', last_visible_msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', last_visible_msg.get('stanza_id'));\n\n            if (is_context){\n                let unread_context_messages = _.clone(this.account.context_messages.models).filter(item => Boolean(item.get('is_unread')) || Boolean(item.get('is_unread_archived')));\n                _.each(unread_context_messages, (msg) => {\n                    let msg_item = this.model.messages.find(message => message.get('stanza_id') == msg.get('stanza_id') || message.get('contact_stanza_id') == msg.get('stanza_id'));\n                    if (msg_item) {\n                        msg.set('is_unread', msg_item.get('is_unread'));\n                        msg.set('is_unread_archived', msg_item.get('is_unread_archived'));\n                    }\n                });\n                setTimeout(() => {\n                    $last_visible_msg.removeClass('unread-message-background');\n                }, 1000);\n            }\n\n            xabber.toolbar_view.recountAllMessageCounter();\n        }, 1000)\n\n        if (last_visible_msg.get('is_unread_archived') || this.model.last_message && (last_visible_msg.get('unique_id') === this.model.last_message.get('unique_id')) || this.model.get('const_unread')){\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread'))),\n                read_count = 0;\n\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                    read_count++;\n                }\n            });\n            read_count = this.model.get('const_unread') - read_count;\n            (read_count < 0) && (read_count = 0);\n            this.model.set('const_unread', read_count);\n        } else {\n            let unread_messages = _.clone(this.model.messages_unread.models);\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                }\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n\n        if (!is_context){\n            setTimeout(() => {\n                $last_visible_msg.removeClass('unread-message-background');\n            }, 1000);\n        }\n    },\n\n    readMessages: function (timestamp) {\n        let unread_messages = _.clone(this.model.messages_unread.models);\n        if (unread_messages.length) {\n            let msg = unread_messages[unread_messages.length - 1];\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n            this.model.set('last_read_msg', msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        this.model.set('const_unread', 0);\n        this.model.set('show_new_unread', false);\n        _.each(unread_messages, (msg) => {\n            if (!timestamp || msg.get('timestamp') <= timestamp) {\n                msg.set('is_unread', false);\n            }\n        });\n        if (this.model.last_message && this.model.last_message.get('is_unread') && !unread_messages.length){\n            let msg = this.model.last_message;\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n            msg.set('is_unread', false);\n            msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n            msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        else if (this.model.last_message && this.model.last_message.get('auth_request') && this.model.messages.length){\n            let messages = _.clone(this.model.messages.models),\n                msg = messages[messages.length - 2];\n            if (msg && msg.get('is_unread')) {\n                this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n                msg.set('is_unread', false);\n                msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n                msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n            }\n        }\n        if (!unread_messages.length) {\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread')));\n            _.each(unread_messages, (msg) => {\n                msg.set('is_unread', false);\n            });\n        }\n    },\n\n    showUnreadMarker: function () {\n        this.$('.unread-marker').remove();\n        if (this.$(`.chat-message.unread-message`).length){\n            let text = xabber.getQuantityString(\"new_chat_messages_no_number\", this.model.get('const_unread') + this.model.get('unread')),\n                $template = $(templates.unread_marker({text: text}));\n            $template.insertBefore(this.$(`.chat-message.unread-message:first`));\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        if (ev.originalEvent.deltaY < 0)\n            this.loadPreviousHistory();\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    keyupSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            let query = this.$search_form.find('input').val();\n            this.model.searchMessages(query, (messages) => {});\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.head.renderSearchPanel();\n        }\n    },\n\n    scrollToUnread: function () {\n        let $last_read_msg = this.$(`.chat-message.unread-message:first`);\n        $last_read_msg.length && (this.scrollTo(this.getScrollTop()\n            - (this.$el.height() * 0.2) + $last_read_msg.offset().top));\n        if (this.model.get('last_sync_unread_id')) {\n            let mam_query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                after: this.model.get('last_sync_unread_id'),\n            };\n            if (this.model.get('synced_msg')) {\n                mam_query.var = [\n                    {var: 'after-id', value: this.model.get('last_sync_unread_id')},\n                    {var: 'before-id', value: this.model.get('synced_msg').get('stanza_id')},\n                ];\n            }\n            this.getMessageArchive(mam_query, {\n                unread_history: true,\n            });\n        }\n    },\n\n    scrollToUnreadWithButton: function () {\n        this.scrollToUnread();\n        this.$('.back-to-unread').addClass('back-to-bottom');\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.back-to-unread-counter').text(unread || '');\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n    },\n\n    onScrollY: function () {\n        this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n        this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n        this._is_scrolled_bottom = this.isScrolledToBottom();\n        if (this._scrolltop === 0 && this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', 1);\n            this.current_day_indicator = pretty_date(parseInt(this.$('.chat-content').children().first().data('time')));\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    onScroll: function (ev, is_focused) {\n        if (!this.isVisible() || this._no_scrolling_event)\n            return;\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n        let $chatday_indicator = this.$('.chat-day-indicator'),\n            $messages = this.$('.chat-message'),\n            indicator_idx = undefined,\n            opacity_value;\n        if (this.$('.unread-marker').length) {\n            let marker = this.$('.unread-marker');\n            if (marker[0].offsetTop < this._scrolltop)\n                marker.remove();\n        }\n        $chatday_indicator.each((idx, indicator) => {\n            if (this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop <= this._scrolltop) && (indicator.offsetTop >= this._scrolltop - 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop - 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 30) && (indicator.offsetTop >= this._scrolltop)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 30) && (indicator.offsetTop <= this._scrolltop)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n            else if (!$(indicator).hasClass('fixed-day-indicator-wrap')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop >= this._scrolltop + 30) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 62) && (indicator.offsetTop >= this._scrolltop + 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 62) && (indicator.offsetTop <= this._scrolltop + 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n        });\n        if (indicator_idx) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            this.current_day_indicator = pretty_date(parseInt($($chatday_indicator[indicator_idx]).attr('data-time')));\n        }\n        else {\n            $messages.each((idx, msg) => {\n                if ((msg.offsetTop + $(msg).height() > this._scrolltop) && (msg.offsetTop < this._scrolltop)) {\n                    indicator_idx = idx;\n                    opacity_value = 1;\n                    return false;\n                }\n            });\n            if (indicator_idx) {\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n                this.current_day_indicator = pretty_date(parseInt($($messages[indicator_idx]).attr('data-time')));\n            }\n            else if (!this.$('.subscription-buttons-wrap').hasClass('hidden') && this._scrolltop == 0){\n                opacity_value = 0;\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            }\n        }\n        if (this.current_day_indicator !== null) {\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        let scroll_read_timer = this._long_reading_timeout || is_focused ? 100 : 100;\n        clearTimeout(this._onscroll_read_messages_timeout);\n        this._onscroll_read_messages_timeout = setTimeout(() => {\n            this.readVisibleMessages();\n        }, scroll_read_timer)\n        this._long_reading_timeout = false;\n        if (this._scrolltop < this._prev_scrolltop &&\n            (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n            this.loadPreviousHistory();\n        }\n        this.hideMessagesAfterSkipping();\n        if (this._scrolltop > this._prev_scrolltop && this.model.get('last_sync_unread_id') && this.getPercentScrolled() > 0.2) {\n            let mam_query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                after: this.model.get('last_sync_unread_id'),\n            };\n            if (this.model.get('synced_msg')) {\n                mam_query.var = [\n                    {var: 'after-id', value: this.model.get('last_sync_unread_id')},\n                    {var: 'before-id', value: this.model.get('synced_msg').get('stanza_id')},\n                ];\n            }\n            this.getMessageArchive(mam_query, {\n                unread_history: true,\n            });\n        }\n    },\n\n    backToBottom: function () {\n        this.model.set('last_sync_unread_id', undefined);\n        this.hideMessagesAfterSkipping();\n        this._no_scrolling_event = true;\n        this.removeAllMessagesExceptLast();\n        this.readMessages();\n        this.model.resetUnread();\n        this.model.set('history_loaded', false);\n        this.loadPreviousHistory();\n        this._long_reading_timeout = false;\n        this._no_scrolling_event = false;\n        this.scrollToBottom();\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            contact = this.contact,\n            is_saved = this.model.get('saved'),\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq, _interval, handler;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE)) {\n            iq.c('field', {'var': `conversation-type`});\n            if (this.model.get('encrypted')){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.model.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let sendMAMRequest = function(func_conn) {\n                handler = func_conn.addHandler(function (message) {\n                    if ((contact && is_groupchat == contact.get('group_chat')) || is_saved) {\n                        let $msg = $(message);\n                        if ($msg.find('result').attr('queryid') === queryid) {\n                            messages.push(message);\n                        }\n                    }\n                    else {\n                        messages = [];\n                        success = false;\n                    }\n                    return true;\n                }, Strophe.NS.MAM);\n                let _delete_handler_timeout = setTimeout(() => {\n                    console.log('handler deleted');\n                    func_conn.deleteHandler(handler);\n                }, 14000);\n                let callb = function (res) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        account.chats.onCompletedMAMRequest(deferred);\n                        let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                        if ($fin.length && $fin.attr('queryid') === queryid) {\n                            let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                            rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                            callback && callback(success, messages, rsm);\n                        }\n                    },\n                    errb = function (err) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        xabber.error(\"MAM error\");\n                        xabber.error(err);\n                        account.chats.onCompletedMAMRequest(deferred);\n                        errback && errback(err);\n                    };\n                console.log('trying to send')\n                if (is_fast)\n                    account.sendFast(iq, callb, errb);\n                else\n                    account.sendIQ(iq, callb, errb);\n\n            };\n            let is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n                conn = is_fast ? account.fast_connection : account.connection;\n\n            if (conn.connected){\n                sendMAMRequest(conn);\n            }\n            let send_counter = 0;\n            _interval = setInterval(() => {\n                is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                    && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline';\n                conn = is_fast ? account.fast_connection : account.connection;\n                conn && console.log(conn.connected);\n                if (!conn || send_counter >= 1){\n                    clearInterval(_interval);\n                    errback && errback('No connection or too many attempts');\n                    return;\n                }\n                if (conn.connected && send_counter < 1){\n                    send_counter++;\n                    sendMAMRequest(conn);\n                }\n            }, 15000);\n        });\n    },\n\n    getMessageArchive: function (query, options) {\n        if (options.previous_history || options.unread_history) {\n            if (this._loading_history || this.model.get('history_loaded')) {\n                return;\n            }\n            this._loading_history = true;\n            clearTimeout(this._load_history_timeout);\n            this._load_history_timeout = setTimeout(() => {\n                this._loading_history = false;\n            }, 60000);\n            this.showHistoryFeedback();\n        }\n        let account = this.model.account, counter = 0;\n        this.MAMRequest(query, (success, messages, rsm) => {\n            clearTimeout(this._load_history_timeout);\n            this._loading_history = false;\n            this.hideHistoryFeedback();\n            if (options.missed_history && !rsm.complete && (rsm.count > messages.length))\n                this.getMessageArchive({after: rsm.last}, {missed_history: true});\n            if (options.unread_history){\n                if (messages.length)\n                    this.model.set('last_sync_unread_id', $(messages[messages.length - 1]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id'));\n                else {\n                    this.model.set('last_sync_unread_id', undefined);\n                    this.hideMessagesAfterSkipping();\n                }\n            }\n            if (options.unread_history_first && messages.length){\n                let first_unread_msg_stanza_id = $(messages[0]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id')\n                this.model.set('first_unread_msg_stanza_id', first_unread_msg_stanza_id);\n                if (messages.length < query.max){\n                    this.model.set('last_sync_unread_id', undefined);\n                    this.hideMessagesAfterSkipping();\n                }\n                this.getMessageArchive({\n                    fast: true,\n                    max: xabber.settings.mam_messages_limit,\n                    before : first_unread_msg_stanza_id\n                }, {unread_history_before: true});\n            }\n            if (this.model.get('group_chat')) {\n                if (this.contact && !this.contact.my_info)\n                    this.contact.getMyInfo();\n            }\n            else {\n                if (this.contact && !this.contact.get('last_seen') && !this.contact.get('server'))\n                    this.contact.getLastSeen();\n            }\n            if (options.previous_history && (messages.length < query.max) && success) {\n                this.model.set('history_loaded', true);\n            }\n            if (options.previous_history || options.unread_history_before || !this.model.get('first_archive_id')) {\n                rsm.first && this.model.set('first_archive_id', rsm.first);\n            }\n            if (options.last_history || !this.model.get('last_archive_id')) {\n                rsm.last && this.model.set('last_archive_id', rsm.last);\n            }\n            _.each(messages, function (message) {\n                let loaded_message = account.chats.receiveChatMessage(message,\n                    _.extend({\n                        is_archived: true,\n                        is_unread_archived: options.unread_history ? true : undefined,\n                    }, options)\n                );\n                if (loaded_message) counter++;\n            });\n            if ((counter === 0) && options.last_history && !this.model.get('history_loaded')) {\n                this.getMessageArchive(_.extend(query, {\n                    max: xabber.settings.mam_messages_limit,\n                    before: this.model.get('first_archive_id') || ''\n                }), {previous_history: true});\n            }\n            if (options.unread_history_before){\n                if (this.model.get('encrypted')){\n                    //TODO: make async func to start opening chat after all messages been handled in enc chat\n                    setTimeout(() => {\n                        this.model._wait_load_unread_history.resolve();\n                    }, 1000);\n                } else\n                    this.model._wait_load_unread_history.resolve();\n            }\n        }, (err) => {\n            if (options.previous_history) {\n                this._loading_history = false;\n                this.showHistoryFeedback(true);\n            }\n            if (options.unread_history_before || options.unread_history_first){\n                this.model._wait_load_unread_history.resolve();\n            }\n        });\n    },\n\n    requestMissedMessages: function (timestamp) {\n        if (!timestamp)\n            return;\n        let query = {};\n        query.var = [{var: 'start', value: moment(timestamp).format()}];\n        this.getMessageArchive(query, {missed_history: true});\n    },\n\n    loadLastHistory: function () {\n        if (!xabber.settings.load_history) {\n            return;\n        }\n        let last_archive_id = this.model.get('last_archive_id'),\n            query = {};\n        if (last_archive_id) {\n            query.after = last_archive_id;\n        } else {\n            query.before = '';\n            query.max = xabber.settings.mam_messages_limit_start;\n        }\n        this.getMessageArchive(query, {last_history: true});\n    },\n\n    loadPreviousHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.getMessageArchive({\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                before: this.model.get('first_archive_id') || '' },\n            {previous_history: true\n            });\n    },\n\n    loadUnreadHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.model.set('loading_unread_history', true)\n        this.getMessageArchive({\n            fast: true,\n            max: xabber.settings.mam_messages_limit,\n            after: this.model.get('last_read_msg'),\n        }, {\n            unread_history_first: true,\n            unread_history: true,\n        });\n    },\n\n    showHistoryFeedback: function (is_error) {\n        if (this._load_history_feedback_timeout) {\n            clearTimeout(this._load_history_feedback_timeout);\n            this._load_history_feedback_timeout = null;\n        }\n        let text = xabber.getString(is_error ? \"loading_archived_messages_error\" : \"loading_history\");\n        this.$history_feedback.text(text).removeClass('hidden');\n        if (is_error) {\n            this._load_history_feedback_timeout = setTimeout(\n                this.hideHistoryFeedback.bind(this), 5000);\n        }\n    },\n\n    showDayIndicator: function (text) {\n        this.$('.fixed-day-indicator').text(text);\n        this.$('.fixed-day-indicator-wrap').removeClass('hidden');\n    },\n\n    showPinnedMessage: function (ev) {\n        if ($(ev.target).hasClass('close'))\n            this.unpinMessage();\n        else {\n            let pinned_message = this.contact.get('pinned_message'),\n                participant_info = {};\n            pinned_message.get('user_info') && this.contact.participants && (participant_info = this.contact.participants.get(pinned_message.get('user_info').id));\n            participant_info && participant_info.attributes && pinned_message.set('user_info', participant_info.attributes);\n\n            let msg = this.buildMessageHtml(pinned_message),\n                pinned_msg_modal = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this, message: pinned_message, pinned: true});\n            pinned_msg_modal.$el.attr('data-color', this.account.settings.get('color'));\n            this.updateMessageInChat(msg, pinned_message);\n            this.initPopup(msg);\n            pinned_msg_modal.open(msg);\n        }\n    },\n\n    imageOnload: function ($message) {\n        let $image_container = $message.find('.img-content'),\n            $copy_link_icon = $message.find('.mdi-link-variant');\n        $image_container.css('background-image', 'none');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    videoOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n        this.initPlyrEmbedPlayer($message, message);\n    },\n\n    OGPLinkOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    locationOnload: function ($message) {\n        let $copy_location_div = $message.find('.msg-copy-location-content');\n        $copy_location_div.html(env.templates.svg['map-marker-outline']());\n        $copy_location_div.attr({\n            'data-location': 'true'\n        });\n    },\n\n    unpinMessage: function () {\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message');\n        this.account.sendIQFast(iq, () => {}, (error) => {\n            if ($(error).find('error not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    loadLocationInChat: function ($message, attrs) {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            let $map_element = $message.find(`#${attrs.id}`);\n            if (!$map_element.length)\n                return;\n            let map = new ol.Map({\n                target: $map_element[0],\n                view: new ol.View\n                ({\tzoom: 15,\n                    center: ol.proj.transform([attrs.lon, attrs.lat], 'EPSG:4326', 'EPSG:3857')\n                }),\n                interactions: ol.interaction_defaults({\n                    altShiftDragRotate:false,\n                    doubleClickZoom:false,\n                    keyboard:false,\n                    mouseWheelZoom:false,\n                    shiftDragZoom:false,\n                    dragPan:false,\n                    pinchRotate:false,\n                    pinchZoom:false\n                }),\n                layers: [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n            });\n\n            map.once('rendercomplete', function(event) {\n                let mapCanvas = document.createElement('canvas');\n                let size = map.getSize();\n                mapCanvas.width = size[0];\n                mapCanvas.height = size[1];\n                let mapContext = mapCanvas.getContext('2d');\n                Array.prototype.forEach.call(\n                    document.querySelectorAll(`#${attrs.id} .ol-layer canvas`),\n                    function (canvas) {\n                        if (canvas.width > 0) {\n                            let opacity = canvas.parentNode.style.opacity;\n                            mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\n                            let transform = canvas.style.transform;\n                            // Get the transform parameters from the style's transform matrix\n                            let matrix = transform\n                                .match(/^matrix\\(([^\\(]*)\\)$/)[1]\n                                .split(',')\n                                .map(Number);\n                            // Apply the transform to the export map context\n                            CanvasRenderingContext2D.prototype.setTransform.apply(\n                                mapContext,\n                                matrix\n                            );\n                            let path = new Path2D('M 18 17.25 C 15.9289 17.25 14.25 15.5711 14.25 13.5 C 14.25 12.5054 14.6451 11.5516 15.3483 10.8483 C 16.0516 10.1451 17.0054 9.75 18 9.75 C 20.0711 9.75 21.75 11.4289 21.75 13.5 C 21.75 14.4946 21.3549 15.4484 20.6517 16.1517 C 19.9484 16.8549 18.9946 17.25 18 17.25 M 18 3 C 12.201 3 7.5 7.701 7.5 13.5 C 7.5 21.375 18 33 18 33 C 18 33 28.5 21.375 28.5 13.5 C 28.5 7.701 23.799 3 18 3 Z');\n                            mapContext.fillStyle = getComputedStyle(document.querySelector(`#${attrs.id}`)).color;\n                            mapContext.drawImage(canvas, 0, 0);\n                            mapContext.translate(157, 117);\n\n                            mapContext.fill(path);\n                        }\n                    }\n                );\n                if (navigator.msSaveBlob) {\n                    // link download attribute does not work on MS browsers\n                    navigator.msSaveBlob(mapCanvas.msToBlob(), 'map.png');\n                } else {\n                    let img = document.getElementById(`img_${attrs.id}`),\n                        dataURL = mapCanvas.toDataURL('image/png');\n                    map.setTarget(null)\n                    map = null;\n                    img.src= dataURL\n                }\n            });\n        });\n    },\n\n    hideHistoryFeedback: function () {\n        this.$history_feedback.addClass('hidden');\n    },\n\n    receiveNoTextMessage: function ($message, carbon_copied) {\n        let from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($message.attr('to')),\n            is_sender = from_jid === this.account.get('jid'),\n            $chat_state = $message.find(`[xmlns=\"${Strophe.NS.CHATSTATES}\"]`);\n        if ($chat_state.length) {\n            if (!is_sender) {\n                let $subtype = $chat_state.children('subtype');\n                if ($subtype.attr('type') == 'encrypted') {\n                    let view = xabber.chats_view.child(`${this.contact.hash_id}:encrypted`);\n                    if (view && view.content)\n                        view.content.showChatState($chat_state[0].tagName.toLowerCase());\n                } else\n                    this.showChatState($chat_state[0].tagName.toLowerCase(), $subtype.attr('type'), $subtype.attr('mime-type'));\n            }\n        }\n    },\n\n    showChatState: function (state, type, mime_type) {\n        clearTimeout(this._chatstate_show_timeout);\n        let message, name = this.contact.get('name');\n        if (state === 'composing') {\n            if (type) {\n                this._current_composing_msg = {type: type};\n                if (type === 'upload') {\n                    let file_type = mime_type ? utils.pretty_file_type_with_article(mime_type) : null;\n                    mime_type && (this._current_composing_msg.mime_type = mime_type);\n                    message = file_type ? xabber.getString(\"chat_state_composing_upload_filetype\", [file_type]) : xabber.getString(\"chat_state_composing_upload\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState();\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                } else {\n                    if (type === 'voice')\n                        message = xabber.getString(\"chat_state_composing_voice\");\n                    if (type === 'video')\n                        message = xabber.getString(\"chat_state_composing_video\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState('paused', type);\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                }\n            }\n            else {\n                this._current_composing_msg = undefined;\n                message = xabber.getString(\"chat_state_composing\");\n                this._chatstate_show_timeout = setTimeout(() => {\n                    this.showChatState();\n                }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            }\n        } else if (state === 'paused') {\n            this.showChatState();\n            return;\n        } else {\n            this.bottom.showChatNotification('');\n            this.chat_item.updateLastMessage();\n            return;\n        }\n        if (message)\n            this.bottom.showChatNotification(`${this.contact.get('name')} ${message}`);\n        else\n            this.bottom.showChatNotification();\n        this.chat_item.$('.last-msg').text(message);\n        this.chat_item.$('.last-msg-date').text(utils.pretty_short_datetime())\n            .attr('title', pretty_datetime());\n        this.chat_item.$('.msg-delivering-state').addClass('hidden');\n    },\n\n    updateMentions: function (message) {\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\";\n                if (this.contact.get('group_chat') || message.get('groupchat_jid')) {\n                    let id = mention_target.match(/\\?id=\\w*/),\n                        jid = mention_target.match(/\\?jid=.*/);\n                    if (id && this.contact.my_info) {\n                        mention_target = id[0].slice(4);\n                        (mention_target === this.contact.my_info.get('id')) && (mention.me = true);\n                    }\n                    else if (jid) {\n                        mention_target = jid[0].slice(5);\n                        (mention_target === this.account.get('jid')) && (mention.me = true);\n                    }\n                }\n                else {\n                    mention_target = mention_target.slice(5);\n                    if (mention_target === this.account.get('jid'))\n                        mention.me = true;\n                }\n            });\n        }\n    },\n\n    onMessage: function (message) {\n        this.updateMentions(message);\n        this.account.messages.add(message);\n        let is_scrolled_to_bottom = this.isScrolledToBottom(),\n            scrolled_from_bottom = this.getScrollBottom();\n        if (!_.isUndefined(message.get('is_accepted'))) {\n            this.model.set('is_accepted', false);\n        }\n        this.model.set('opened', true);\n        if (!message.get('is_archived') && !message.get('is_unread_archived') && message.get('stanza_id'))\n            this.model.set('last_archive_id', message.get('stanza_id'));\n\n        if (message.get('participants_version')) {\n            if (this.contact.participants && this.contact.participants.version < message.get('participants_version'))\n                this.contact.trigger('update_participants');\n        }\n\n        let $message = this.addMessage(message);\n\n        if (message.get('type') === 'file_upload') {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.startGalleryUploadFile(message, $message);\n            else\n                this.startUploadFile(message, $message);\n        }\n\n        if (!(message.get('synced_from_server') || (message.get('is_archived') && !message.get('missed_msg')))) {\n            if (message.get('missed_msg')){\n                if (this.model.get('last_read_msg')){\n                    let last_read_msg = this.model.messages.find(m => this.model.get('last_read_msg') && (m.get('stanza_id') === this.model.get('last_read_msg') || m.get('contact_stanza_id') === this.model.get('last_read_msg'))),\n                        deferred = new $.Deferred();\n                    deferred.done(() => {\n                        if (last_read_msg && message.get('timestamp') > last_read_msg.get('timestamp')){\n                            message.set('is_unread', true);\n                            if (!xabber.get('focused')) {\n                                if (this.model.get('saved') || this.model.isMuted())\n                                    message.set('muted', true);\n                            }\n                            this.model.setMessagesDisplayed(message.get('timestamp'));\n                        }\n                    });\n                    if (!last_read_msg){\n                        this.contact.getMessageByStanzaId(this.model.get('last_read_msg'), ($message) => {\n                            last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                            deferred.resolve();\n                        });\n                    } else {\n                        deferred.resolve();\n                    }\n                }\n            } else {\n                if (!(message.isSenderMe() || message.get('silent') || ((message.get('type') === 'system') && !message.get('auth_request')))) {\n                    message.set('is_unread', true);\n                    if (message.get('is_unread') && xabber.get('focused') && !xabber.get('idle') && this.isVisible()){\n                        this.readVisibleMessages();\n                    }\n                    if (!xabber.get('focused')) {\n                        if (this.model.get('saved') || this.model.isMuted())\n                            message.set('muted', true);\n                        else if (!message.get('synced_invitation_from_server'))\n                            this.notifyMessage(message);\n                    }\n                    this.model.setMessagesDisplayed(message.get('timestamp'));\n                }\n            }\n            if (this.contact && this.model.get('archived')){\n                if (this.model.isMuted())\n                    message.set('archived', true);\n                else {\n                    this.head.archiveChat();\n                    this.model.set('archived', false);\n                }\n            }\n            if (this.model.get('saved')) {\n                message.set('muted', true);\n                message.set('state', constants.MSG_DISPLAYED);\n            }\n        }\n\n        if (this.isVisible() && (!message.get('is_unread') || is_scrolled_to_bottom) && !message.get('is_between_anchors')) {\n            let is_scrolling_needed;\n            if (is_scrolled_to_bottom){\n                if (this.$(`.chat-message.unread-message`).length){\n                    if (this.$(`.chat-message.unread-message`)[0].offsetTop > (this._scrolltop + 140)) {\n                        is_scrolling_needed = true;\n                    }\n                } else\n                    is_scrolling_needed = true;\n            }\n            if ((is_scrolled_to_bottom && is_scrolling_needed) || message.get('submitted_here')) {\n                this.scrollToBottom();\n            } else if (!is_scrolled_to_bottom) {\n                this.updateScrollBar();\n                this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n            }\n        }\n\n        if (message.get('synced_from_server') && message.get('is_unread')) {\n            this.onChangedReadState(message);\n        }\n        if (message.get('attention')) {\n            this.attentionMessage(message);\n        }\n\n        if (message.isSenderMe()) {\n            if (!message.get('is_archived') && !message.get('missed_msg') && message.get('type') != 'system')\n                this.readMessages(message.get('timestamp'));\n            if (this.model.get('last_displayed_id') >= message.get('stanza_id') && message.get('stanza_id') !== message.get('origin_id'))\n                message.set('state', constants.MSG_DISPLAYED);\n            else if (message.get('stanza_id') !== message.get('origin_id') && (this.model.get('last_delivered_id') >= message.get('stanza_id') || message.get('is_archived')))\n                message.set('state', constants.MSG_DELIVERED);\n        }\n\n        if (message.get('private_invite') || message.get('invite')) {\n            if (!(this.contact.invitation && this.contact.invitation.message.get('timestamp') > message.get('timestamp')))\n                this.contact.invitation = new xabber.GroupchatInvitationView({model: this.contact, message: message});\n            this.model.contact.set('invitation', true);\n            this.model.get('active') && this.model.contact.trigger('open_chat', this.model.contact);\n            message.set('is_unread', false);\n        }\n\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') >= last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (this.contact.my_info)\n                    (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                else if (this.contact.get('group_chat')) {\n                    if (this._pending_my_info) {\n                        this._pending_my_info.done(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                            this._pending_my_info = null;\n                        });\n                    }\n                    else {\n                        this._pending_my_info = new $.Deferred();\n                        this.contact.getMyInfo(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {\n                                message: message,\n                                contact: this.contact\n                            });\n                            this._pending_my_info.resolve();\n                        });\n                    }\n                }\n                (mention_target === this.account.get('jid') || mention_target === \"\") && this.account.mentions.create(null, {message: message, contact: this.contact});\n            });\n        }\n\n        if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context' && this.model.messages_view.last_history_loaded)\n            this.account.context_messages.add(message);\n\n    },\n\n\n    decryptImages: function (message, force) {\n        let scrolled_from_bottom = this.getScrollBottom();\n        if (this.model.get('encrypted') || message.get('encrypted') || force) {\n            let images = message.get('images') || [];\n            if (images.length) {\n                images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = [];\n                        if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context')\n                            $msg = this.model.messages_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        else\n                            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            }\n            let fwd_msgs = message.get('forwarded_message') || [];\n            fwd_msgs.forEach((fwd_msg) => {\n                let fwd_images = fwd_msg.get('images') || [];\n                fwd_images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] .fwd-message[data-uniqueid=\"${fwd_msg.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            });\n        }\n    },\n\n    addMessage: function (message) {\n        let $message = this.buildMessageHtml(message),\n            index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            $message.prependTo(this.$('.chat-content'));\n        } else if (this.model.messages.models.length && this.model.messages.models[index - 1]) {\n            let $prev_message = this.$(`.chat-message[data-uniqueid=\"${this.model.messages.models[index - 1].get('unique_id')}\"]`);\n            if (!$prev_message.length) {\n                $prev_message = this.addMessage(this.model.messages.models[index - 1]);\n            }\n            $message.insertAfter($prev_message);\n        }\n        let $next_message = $message.nextAll('.chat-message').first();\n        this.updateMessageInChat($message[0], message);\n        if ($next_message.length) {\n            this.updateMessageInChat($next_message[0]);\n        }\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n        return $message;\n    },\n\n    initPopup: function ($message) {\n        let $one_image = $message.find('.uploaded-img'),\n            $collage_image = $message.find('.uploaded-img-for-collage');\n        if ($one_image.length) {\n            $one_image.each((idx, item) => {\n                this.initMagnificPopup($(item));\n            });\n        }\n        if ($collage_image.length) {\n            this.initZoomGallery($message);\n        }\n    },\n\n    getImagesInformation: function (msg) {\n        let images = msg.get('images'),\n            servers = [];\n        if (!images)\n            return;\n        images.forEach((img) => {\n            let server = new URL(img.sources[0]).hostname;\n            img.pretty_size = utils.pretty_size(img.size)\n            servers.push(server);\n        });\n        servers = [...new Set(servers)]\n\n        return {images, servers};\n    },\n\n    initMagnificPopup: function ($elem) {\n        let self = this;\n        $elem.length && $elem.magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    initZoomGallery: function ($message) {\n        let self = this;\n        $message.find('.zoom-gallery').length && $message.find('.zoom-gallery').magnificPopup({\n            delegate: 'img',\n            type: 'image',\n            closeOnContentClick: false,\n            closeBtnInside: false,\n            mainClass: 'mfp-with-zoom mfp-img-mobile',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            gallery: {\n                enabled: true\n            },\n            zoom: {\n                enabled: true,\n                duration: 300,\n                opener: function(element) {\n                    return element;\n                }\n            }\n        });\n    },\n\n    updateMessage: function (item) {\n        let $message, images = item.get('images'), emoji = item.get('only_emoji'), $new_message,\n            files =  item.get('files');\n        if (item instanceof xabber.Message) {\n            this.updateMentions(item);\n            $new_message = this.buildMessageHtml(item);\n            $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        }\n        else\n            return;\n        $message.replaceWith($new_message)\n        $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        this.updateMessageInChat($message[0], item);\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n\n        if (item.get('data_form')) {\n            let data_form = utils.render_data_form(item.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n        let short_datetime = utils.pretty_short_datetime(item.get('last_replace_time')),\n            datetime = moment(item.get('last_replace_time')).format('D MMMM, YYYY HH:mm:ss'),\n            new_title = `${pretty_datetime(item.get('time'))} ${xabber.getString(\"edited\", [moment(item.get('timestamp')).startOf('day').isSame(moment(item.get('last_replace_time')).startOf('day')) ? short_datetime : datetime])}`;\n        $message.find('.msg-time').prop('title', new_title);\n        $message.find('.edited-info').removeClass('hidden').text(xabber.getString(\"chat_screen__message__label_edited\")).prop('title', new_title);\n    },\n\n    removeAllMessagesExceptLast: function () {\n        let messages_to_save = [];\n        if (!this.model.messages)\n            return;\n        this.model.messages.forEach((message, idx) => {\n            if (idx === (this.model.messages.length - 1)){\n                messages_to_save.push(message);\n                this.model.set('first_archive_id', message.get('stanza_id'));\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message');\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message-background');\n                return;\n            }\n            let $message, $message_in_chat;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`));\n            $message.prev('.chat-day-indicator').remove();\n            $message.remove();\n        });\n        this.model.messages.reset(messages_to_save);\n        this.updateScrollBar();\n    },\n\n    removeMessage: function (item) {\n        let message, $message, $message_in_chat;\n        if (item instanceof xabber.Message) {\n            message = item;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`));\n        } else {\n            $message = item;\n            if (!$message.length) return;\n            message = this.model.messages.get($message.data('uniqueid'));\n        }\n        message && message.destroy();\n        if ($message_in_chat) {\n            this.removeMessageFromDOM($message_in_chat);\n        }\n        if ($message && ($message !== $message_in_chat))\n            this.removeMessageFromDOM($message);\n    },\n\n    removeMessageFromDOM: function ($message) {\n        if (($message.hasClass('with-author')) && (!$message.next().hasClass('with-author'))) {\n            let avatar = $message.find('.circle-avatar')[0];\n            $message.next().addClass('with-author');\n            $message.next().find('.circle-avatar').replaceWith(avatar);\n        }\n        $message.prev('.chat-day-indicator').remove();\n        $message.remove();\n        this.bottom.manageSelectedMessages();\n        if (!this._clearing_history) {\n            this.updateScrollBar();\n        }\n    },\n\n    clearHistory: function () {\n        let dialog_options = [],\n            dialog_message = this.contact.get('group_chat') ? xabber.getString(\"clear_group_chat_history_dialog_message\") : xabber.getString(\"clear_chat_history_dialog_message\"),\n            is_group_chat = this.contact.get('group_chat') ? true : false;\n        this._clearing_history = true;\n        if (this.account.server_features.get(Strophe.NS.REWRITE)) {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), dialog_message,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                this.model.retractAllMessages(is_group_chat, () => {\n                    this._clearing_history = false;\n                    this.chat_item.updateLastMessage();\n                    this.updateScrollBar();\n                }, () => {\n                    this._clearing_history = false;\n                });\n            });\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), `${dialog_message}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')})`,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                let msgs = _.clone(this.model.messages.models);\n                msgs.forEach((item) => { this.removeMessage(item); });\n            });\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url, chat) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.link-file');\n        chat = chat || this.model;\n        $elem.addClass('voice-message-rendering').html($(templates.messages.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, $elem.find('#' + unique_id));\n\n        let hideShowCursor = () => {\n            let current_time = aud.getCurrentTime(),\n                duration = aud.getDuration();\n            if (current_time === 0 || current_time === duration)\n                $msg_element.addClass('wave-cursor-hidden');\n            else\n                $msg_element.removeClass('wave-cursor-hidden');\n        };\n\n        aud.on('ready', () => {\n            let duration = Math.round(aud.getDuration());\n            hideShowCursor();\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.addClass('playing');\n            $msg_element.removeClass('wave-cursor-hidden');\n            let is_popup;\n            xabber.current_plyr_player && (is_popup = xabber.current_plyr_player.is_popup);\n            xabber.current_plyr_player = chat.plyr_players.find(item => item.$audio_elem === $msg_element[0]);\n            xabber.current_plyr_player && (xabber.current_plyr_player.chat_item = chat.item_view);\n            xabber.current_plyr_player && (xabber.current_plyr_player.is_popup = is_popup);\n            let other_players = xabber.plyr_players.filter(other => other != xabber.current_plyr_player);\n            other_players.forEach(function(other) {\n                if (other.$audio_elem){\n                    if (other.$audio_elem.voice_message)\n                        other.$audio_elem.voice_message.stopTime();\n                }\n            });\n            (xabber.plyr_player_popup && xabber.plyr_player_popup.player) && xabber.plyr_player_popup.player.stop();\n            (!xabber.current_plyr_player && xabber.plyr_player_popup) && xabber.plyr_player_popup.closePopup();\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('finish', () => {\n            hideShowCursor();\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.removeClass('playing');\n            hideShowCursor();\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('seek', () => {\n            hideShowCursor();\n        });\n\n        aud.stopTime = () => {\n            aud.stop()\n            $elem.find('.voice-msg-current-time').text(utils.pretty_duration(0));\n        };\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createImageGrid: function (attrs) {\n        let template_for_images;\n        if (attrs.images.length > 6) {\n            let tpl_name = 'template-for-6',\n                hidden_images = attrs.images.length - 5;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n            template_for_images = $(templates.messages[tpl_name](attrs));\n            template_for_images.find('.last-image').addClass('hidden-images');\n            template_for_images.find('.image-counter').text('+' + hidden_images);\n        }\n        else {\n            let tpl_name = 'template-for-' + attrs.images.length;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + attrs.images.length)\n            template_for_images = $(templates.messages[tpl_name](attrs));\n        }\n        if (!xabber.settings.load_media) {\n            template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n        }\n        return template_for_images;\n    },\n\n    buildMessageHtml: function (message) {\n        let attrs = _.clone(message.attributes),\n            is_sender = (message instanceof xabber.Message) ? message.isSenderMe() : false,\n            user_info = attrs.user_info || {}, username,\n            images = attrs.images,\n            videos = attrs.videos,\n            emoji = message.get('only_emoji'),\n            files =  attrs.files,\n            locations =  attrs.locations,\n            link_references =  attrs.link_references,\n            is_video = Boolean(videos && videos.length),\n            is_image = Boolean(images && images.length),\n            is_location = locations ? true : false,\n            is_file = files ? true : false,\n            is_audio = false,\n            template_for_images,\n            avatar_id = user_info.avatar,\n            avatar_url = user_info.avatar_url,\n            role = user_info.role,\n            badge = user_info.badge,\n            from_id = user_info.id,\n            has_encrypted_files = attrs.has_encrypted_files,\n            audio_player_list = [];\n\n        username = user_info.nickname || this.model.get('saved') && this.account.get('name') || (attrs.from_jid === this.contact.get('jid') && this.contact.get('name'));\n        if (!username) {\n            if (is_sender) {\n                if (this.model.get(\"group_chat\")) {\n                    if (this.contact.my_info)\n                        username = this.contact.my_info.get('nickname');\n                    else if (this.contact)\n                        this.contact.getMyInfo(() => {\n                            username = this.contact.my_info.get('nickname');\n                            if ($message) {\n                                $message.children(\".msg-wrap\").find(\".chat-msg-author-wrap .chat-msg-author\").text(Strophe.xmlescape(username));\n                            }\n                        });\n                    else\n                        username = this.account.get('name');\n                } else\n                    username = this.account.get('name');\n            } else {\n                username = this.account.contacts.get(attrs.from_jid) ? this.account.contacts.get(attrs.from_jid).get('name') : attrs.from_jid;\n            }\n        }\n        username = Strophe.xmlescape(username || \"\");\n\n        if (is_sender && this.model.get('group_chat')) {\n            if (this.contact.my_info) {\n                role = this.contact.my_info.get('role');\n                badge = this.contact.my_info.get('badge');\n            }\n        }\n        _.extend(attrs, {\n            username: username,\n            state: (message instanceof xabber.Message) ? message.getState() : 'sent',\n            verbose_state: (message instanceof xabber.Message) ? message.getVerboseState() : 'sent',\n            time: pretty_datetime(attrs.time),\n            short_time: utils.pretty_time(attrs.time),\n            avatar_id: avatar_id,\n            avatar_url: avatar_url,\n            is_image: is_image,\n            is_video: is_video,\n            is_file: is_file,\n            is_location: is_location,\n            files: files,\n            locations: locations,\n            link_references: link_references,\n            role: utils.pretty_name(role),\n            badge: badge,\n            from_id: from_id\n        });\n        attrs.encrypted = attrs.encrypted || this.model.get('encrypted');\n        attrs.not_encrypted = attrs.not_encrypted || null;\n        attrs.not_verified_device = attrs.not_verified_device || null;\n        attrs.not_verified_device_no_device = attrs.not_verified_device_no_device || null;\n        attrs.device_id = attrs.device_id || null;\n\n        if (attrs.type === 'system') {\n            let tpl_name = attrs.invite ? 'group_request' : 'system';\n            return $(templates.messages[tpl_name](attrs));\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                template_for_images = this.createImageGrid(attrs);\n            }\n        }\n\n        let classes = [\n            attrs.is_unread && 'unread-message',\n            attrs.is_unread && 'unread-message-background',\n            attrs.not_encrypted && 'not-decrypted',\n            attrs.not_verified_device && !attrs.not_verified_device_no_device && 'not-verified',\n            attrs.not_verified_device_no_device && 'not-existing-device',\n            attrs.forwarded_message && 'forwarding',\n            (attrs.encrypted || this.model.get('encrypted')) ? 'encrypted' : \"\"\n        ];\n\n        let markup_body = utils.markupBodyMessage(message), $message;\n        if (attrs.searched_message){\n            let myRegexp = new RegExp('(.{0,12})(' + attrs.query + ')(.{0,12})','gmius'),\n                matching_markup = myRegexp.exec(markup_body);\n            if (matching_markup) {\n                if (matching_markup[1].length == 12)\n                    matching_markup[1] = '...' + matching_markup[1].substring(1);\n                if (matching_markup[3].length == 12)\n                    matching_markup[3] = matching_markup[3].substring(0, matching_markup[3].length - 1) + '...';\n                markup_body = matching_markup[1] + '<span class=\"mention ground-color-100\">' + matching_markup[2] + '</span>' + matching_markup[3];\n                markup_body = markup_body.replace(/\\n/g, \" \");;\n            }\n        }\n\n        if (this.model.get('saved') && !markup_body.length && attrs.forwarded_message && attrs.forwarded_message.length == 1) {\n            $message = $(templates.messages.saved_main(_.extend(attrs, {\n                classlist: classes.join(' ')\n            })));\n        } else if (attrs.searched_message)\n            $message = $(templates.messages.searched(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                msg_time: utils.pretty_short_datetime_recent_chat(attrs.time),\n                classlist: classes.join(' ')\n            })));\n        else if (attrs.type === 'file_upload')\n            $message = $(templates.messages.file_upload(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n        else\n            $message = $(templates.messages.main(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n\n        if (attrs.hasOwnProperty('encrypted')){\n            if (attrs.hasOwnProperty('submitted_here')){\n                $message.attr('data-trust', true);\n                if (attrs.hasOwnProperty('is_contact_trusted')){\n                    $message.attr('data-trust', attrs.is_contact_trusted);\n                }\n            } else if (attrs.hasOwnProperty('is_trusted')){\n                $message.attr('data-trust', attrs.is_trusted);\n            } else {\n                $message.attr('data-trust', this.$el.attr('data-trust'));\n            }\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                $message.find('.chat-msg-media-content').html(template_for_images);\n                !xabber.settings.load_media && $message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            if (images.length == 1) {\n                let $img_html = this.createImage(images[0]),\n                    img_content = this.createImageContainer(images[0]);\n                $img_html.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.find('.chat-msg-media-content').html($(img_content).html($img_html));\n                !xabber.settings.load_media && $message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                this.updateScrollBar();\n            }\n        }\n        if (is_video) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n\n        if (is_file && attrs.type !== 'file_upload') {\n            if (files.length > 0) {\n                let file_attrs = _.clone(files),\n                    template_for_file_content;\n                $(file_attrs).each((idx, file) => {\n                    let copied_attrs = _.clone(file_attrs[idx]);\n                    if (file.type) {\n                        if (file.voice)\n                            is_audio = true;\n                        else\n                            is_audio = false;\n                    }\n                    ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                    let mdi_icon_class = utils.file_type_icon(file.type);\n                    _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size) });\n                    template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                    $message.find('.chat-msg-media-content').append(template_for_file_content);\n                    if (is_audio && $message.find('.link-file').length) {\n                        let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                        audio_player.msg_time = $message.attr('data-time');\n                        audio_player.author = username;\n                        audio_player.message_unique_id = $message.attr('data-uniqueid');\n                        if (attrs.from_jid === this.account.get('jid')) {\n                            if (this.model.get('group_chat')) {\n                                if (this.contact.my_info) {\n                                    audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                    if (!audio_player.contact_avatar) {\n                                        if (this.account.cached_image)\n                                            audio_player.contact_avatar = this.account.cached_image;\n                                        !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                                    } else\n                                        audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                }\n                            }\n                            if (!audio_player.contact_avatar)\n                                audio_player.contact_avatar = this.account.cached_image;\n                        } else {\n                            if (this.model.get('group_chat')) {\n                                let author = $message.find('.msg-wrap .chat-msg-author').text();\n                                audio_player.contact_avatar = Images.getDefaultAvatar(author);\n                            }\n                            else {\n                                let author = this.account.contacts.get($message.data('from')) || $message.find('.msg-wrap .chat-msg-author').text() || $message.data('from');\n                                audio_player.contact_avatar = author.cached_image || Images.getDefaultAvatar(author);\n                            }\n                        }\n                        if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                            this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                            xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                            audio_player_list = audio_player_list.concat([audio_player]);\n                        } else {\n                            audio_player_list = message.get('msg_player_audios');\n                        }\n\n                        let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                        $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                        audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                        xabber.trigger('plyr_player_updated');\n                    }\n                });\n            }\n        }\n\n        if (is_file && attrs.type === 'file_upload') {\n            let images = [];\n            $(files).each((idx, file_) => {\n                file_.upload_id = idx;\n                if (utils.isImageType(file_.type)) {\n                    file_.sources = [file_.key ? file_.image_prev.src : window.URL.createObjectURL(new Blob([file_])),];\n                    images.push(file_);\n                }\n            });\n            if (images.length > 0) {\n                if (images.length > 1) {\n                    let template_for_images;\n                    if (images.length > 6) {\n                        let tpl_name = 'template-for-6',\n                            hidden_images = images.length - 5;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                        template_for_images.find('.last-image').addClass('hidden-images');\n                        template_for_images.find('.image-counter').text('+' + hidden_images);\n                    }\n                    else {\n                        let tpl_name = 'template-for-' + images.length;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                    }\n                    template_for_images.addClass('unuploaded-images');\n                    $(templates.messages.loading_circle()).insertAfter(template_for_images.find('img'));\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(template_for_images);\n                } else {\n                    let $img_html = this.createImage(images[0]),\n                        img_content = this.createImageContainer(images[0]),\n                        maxHeight = 400,\n                        maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7,\n                        imgHeight = images[0].height,\n                        imgWidth = images[0].width;\n                    maxWidth = maxWidth > 400 ? 400 : maxWidth;\n                    if (imgHeight && imgWidth) {\n                        if (imgWidth > maxWidth) {\n                            imgHeight = imgHeight * (maxWidth/imgWidth);\n                            imgWidth = maxWidth;\n                        }\n                        if (imgHeight > maxHeight) {\n                            imgWidth = imgWidth * (maxHeight/imgHeight);\n                            imgHeight = maxHeight;\n                        }\n                    }\n                    imgWidth = imgWidth ? imgWidth : 200;\n                    imgHeight = imgHeight ? imgHeight : 200;\n                    $(img_content).addClass('unuploaded-images');\n                    $(img_content).attr('data-upload-file-id', images[0].upload_id);\n                    $(img_content).css({\n                        width: imgWidth,\n                        height: imgHeight,\n                        'max-height': maxHeight,\n                        'max-width': maxWidth,\n                    });\n                    $(img_content).html($img_html)\n                    $(img_content).append(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(img_content);\n                }\n            }\n            if (files.length > 0) {\n                $(files).each((idx, item) => {\n                    if (images.includes(item))\n                        return;\n                    let file_attrs = {\n                            name: item.name,\n                            type: item.type,\n                            upload_id: item.upload_id,\n                        },\n                        template_for_file_content;\n                    _.extend(file_attrs, {size: utils.pretty_size(item.size)});\n                    template_for_file_content = $(templates.messages.file_loading(file_attrs));\n                    template_for_file_content.find('.file-loading-container').html(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                });\n            }\n        }\n        if (is_location) {\n            if (locations.length > 0) {\n                let location_attrs = _.clone(locations),\n                    template_for_location_content;\n                $(location_attrs).each((idx, location) => {\n                    let copied_attrs = _.clone(location_attrs[idx]);\n                    _.extend(copied_attrs, { id: '_' + Math.random().toString(36).substr(2, 9)});\n                    if (xabber.settings.mapping_service){\n                        template_for_location_content = $(templates.messages.location(copied_attrs));\n                        $message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                        $message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                        $message.find('.chat-msg-location-content').append(template_for_location_content);\n                        this.loadLocationInChat($message, copied_attrs);\n                        this.locationOnload($message);\n                    } else {\n                        $message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                    }\n                });\n            }\n        }\n\n        if (link_references && link_references.length > 0) {\n            let link_references_attrs = _.clone(link_references),\n                template_for_link_reference_content,\n                youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n            $(link_references_attrs).each((idx, link) => {\n                let copied_attrs = _.clone(link_references_attrs[idx]);\n                copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                    copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                    copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                    copied_attrs.is_video = true;\n                    youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                    vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                } else\n                    copied_attrs.is_video = false;\n                template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                $message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n            });\n            this.OGPLinkOnload($message, message);\n        }\n\n        if (message.get('data_form')) {\n            let data_form = utils.render_data_form(message.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n\n        if (attrs.forwarded_message && !attrs.searched_message) {\n            $(attrs.forwarded_message).each((idx, fwd_msg) => {\n                is_sender = fwd_msg.isSenderMe();\n                attrs = _.clone(fwd_msg.attributes);\n                let is_image_forward = Boolean(attrs.images && attrs.images.length),\n                    images_forward = is_image_forward ? _.clone(attrs.images) : undefined,\n                    $img_html_forward,\n                    is_forward_video = Boolean(attrs.videos && attrs.videos.length),\n                    is_forward_file = Boolean(attrs.files && attrs.files.length),\n                    is_forward_location = Boolean(attrs.locations && attrs.locations.length),\n                    is_fwd_voice_message,\n                    user_info = attrs.user_info || {},\n                    avatar_id = user_info.avatar,\n                    avatar_url = user_info.avatar_url,\n                    role = utils.pretty_name(user_info.role),\n                    badge = user_info.badge,\n                    from_id = user_info.id,\n                    from_jid = attrs.from_jid;\n                !has_encrypted_files && (has_encrypted_files = attrs.has_encrypted_files);\n                if (is_sender) {\n                    username = Strophe.xmlescape(user_info.nickname || this.account.get('name'));\n                } else {\n                    username = Strophe.xmlescape(user_info.nickname || user_info.id || this.account.contacts.mergeContact({jid: from_jid}).get('name'));\n                }\n\n                let fwd_markup_body = utils.markupBodyMessage(fwd_msg);\n\n                let $f_message = $(templates.messages.forwarded(_.extend(attrs, {\n                    time: pretty_datetime(attrs.time),\n                    short_time: utils.pretty_short_month_date(attrs.time),\n                    username: username,\n                    avatar_id: avatar_id,\n                    avatar_url: avatar_url,\n                    message: fwd_markup_body,\n                    is_file: is_forward_file,\n                    is_location: is_forward_location,\n                    is_audio: is_fwd_voice_message,\n                    role: role,\n                    badge: badge,\n                    from_id: from_id\n                })));\n\n                if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                    $f_message.append($message.children('.right-side').clone());\n                }\n\n                if (fwd_msg.get('forwarded_message')) {\n                    let fwd_messages_count = fwd_msg.get('forwarded_message').length,\n                        fwd_messages_link = xabber.getQuantityString(\"forwarded_messages_count\", fwd_messages_count);\n                    $f_message.children('.msg-wrap').children('.fwd-msgs-block').append($('<a/>', {class: 'collapsed-forwarded-message', 'data-uniqueid': attrs.unique_id}).text(fwd_messages_link));\n                }\n\n                if (is_image_forward) {\n                    if (images_forward.length > 1) {\n                        template_for_images = this.createImageGrid(attrs);\n                        $f_message.find('.chat-msg-media-content').html(template_for_images);\n                        !xabber.settings.load_media && $f_message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                    if (images_forward.length == 1) {\n                        $img_html_forward = this.createImage(images_forward[0]);\n                        $img_html_forward.onload = () => {\n                            this.imageOnload($message);\n                        };\n                        let img_content_forward = this.createImageContainer(images_forward[0]);\n                        $f_message.find('.chat-msg-media-content').html($(img_content_forward).html($img_html_forward));\n                        !xabber.settings.load_media && $f_message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                }\n                if (is_forward_video) {\n                    let video_content = this.createVideoContainer();\n                    $f_message.find('.chat-msg-media-content').append(video_content);\n                    attrs.videos.forEach((video, idx) => {\n                        let video_el = this.createVideo(video, idx);\n                        $f_message.find('.video-content').append(video_el);\n                    });\n                    this.videoOnload($message, message);\n                    $f_message.removeClass('file-upload noselect');\n                }\n\n                if (is_forward_file) {\n                    if (attrs.files.length > 0) {\n                        let file_attrs = _.clone(attrs.files),\n                            template_for_file_content;\n                        $(file_attrs).each((idx, file) => {\n                            let copied_attrs = _.clone(file_attrs[idx]);\n                            if (file.type) {\n                                if (file.voice)\n                                    is_audio = true;\n                                else\n                                    is_audio = false;\n                            }\n                            ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                            let mdi_icon_class = utils.file_type_icon(file.type);\n                            _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size)});\n                            template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                            $f_message.find('.chat-msg-media-content').append(template_for_file_content);\n                            if (is_audio && $f_message.find('.link-file').length) {\n                                let audio_player = {$audio_elem : $f_message.find('.link-file')[0]};\n                                audio_player.msg_time = $message.attr('data-time');\n                                audio_player.author = username;\n                                audio_player.message_unique_id = $message.attr('data-uniqueid') + '-' + $f_message.attr('data-uniqueid');\n                                if (is_sender) {\n                                    if (this.model.get('group_chat')) {\n                                        if (this.contact.my_info) {\n                                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                            if (!audio_player.contact_avatar)\n                                                audio_player.contact_avatar = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                                            else\n                                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                        }\n                                    }\n                                    if (!audio_player.contact_avatar)\n                                        audio_player.contact_avatar = this.account.cached_image;\n                                } else if (this.account.contacts.mergeContact({jid: from_jid})) {\n                                    let contact = this.account.contacts.mergeContact({jid: from_jid})\n                                    audio_player.contact_avatar = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($f_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n                                }\n                                if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                                    this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                                    xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                                    audio_player_list = audio_player_list.concat([audio_player]);\n                                } else {\n                                    audio_player_list = message.get('msg_player_audios');\n                                }\n                                let f_url = $f_message.find('.link-file').find('.file-link-download').attr('href');\n                                $f_message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                                audio_player.$audio_elem.voice_message = this.renderVoiceMessage($f_message.find('.link-file').find('.file-container')[0], f_url);\n                                xabber.trigger('plyr_player_updated');\n                            }\n                        });\n                    }\n                }\n                if (is_forward_location) {\n                    if (attrs.locations.length > 0) {\n                        let location_attrs = _.clone(attrs.locations),\n                            template_for_location_content;\n                        $(location_attrs).each((idx, location) => {\n                            let copied_attrs = _.clone(location_attrs[idx]);\n                            _.extend(copied_attrs, { id: '_fwd' + Math.random().toString(36).substr(2, 9) });\n                            if (xabber.settings.mapping_service){\n                                template_for_location_content = $(templates.messages.location(copied_attrs));\n                                $f_message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                                $f_message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                                $f_message.find('.chat-msg-location-content').append(template_for_location_content);\n                                this.loadLocationInChat($message, copied_attrs);\n                            } else {\n                                $f_message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                            }\n                        });\n                    }\n                }\n                if (attrs.link_references && attrs.link_references.length > 0) {\n                    let link_references_attrs = _.clone(attrs.link_references),\n                        template_for_link_reference_content,\n                        youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                        vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n                    $(link_references_attrs).each((idx, link) => {\n                        let copied_attrs = _.clone(link_references_attrs[idx]);\n                        copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                        if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                            copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                        if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                            copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                            copied_attrs.is_video = true;\n                            youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                            vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                        } else\n                            copied_attrs.is_video = false;\n                        template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                        $f_message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n                    });\n                    this.OGPLinkOnload($message, message);\n                }\n                if (fwd_msg.get('data_form')) {\n                    let data_form = utils.render_data_form(fwd_msg.get('data_form'));\n                    $f_message.find('.chat-msg-content').append(data_form);\n                }\n                $message.children('.msg-wrap').length ? $message.children('.msg-wrap').children('.fwd-msgs-block').append($f_message) : $message.children('.fwd-msgs-block').append($f_message);\n            });\n            this.updateScrollBar();\n            if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                $message.children('.right-side').remove();\n            }\n        }\n        else\n            $message.find('.fwd-msgs-block').remove();\n\n        if (attrs.encrypted || this.model.get('encrypted') || has_encrypted_files) {\n            this.decryptImages(message, has_encrypted_files);\n        }\n\n        if (attrs.searched_message) {\n            let msg_text = '';\n            msg_text = (attrs.forwarded_message) ? (xabber.getQuantityString(\"forwarded_messages_count\", attrs.forwarded_message.length)) : '';\n            if (is_file && is_image && files.length && images.length)\n                msg_text = xabber.getString(\"recent_chat__last_message__attachments\", [files.length + images.length]);\n            else {\n                if (is_file && files.length == 1 && (files[0].is_audio || files[0].voice))\n                    msg_text = `${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(files[0].duration);\n                else if (is_file && files.length > 0) {\n                    let total_size = 0;\n                    files.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_image && images.length > 0) {\n                    let total_size = 0;\n                    images.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__images\", images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_location && locations.length > 0) {\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length);\n                }\n            }\n            if (msg_text)\n                $message.find('.chat-msg-content').text(msg_text)\n        }\n        message.set('msg_player_audios', audio_player_list);\n        return $message.hyperlinkify({selector: '.chat-text-content', embed_video: true}).emojify('.chat-text-content', {tag_name: 'div', emoji_size: utils.emoji_size(emoji)}).emojify('.chat-msg-author-badge', {emoji_size: 16});\n    },\n\n    getDateIndicator: function (date) {\n        let day_date = moment(date).startOf('day');\n        return $('<div class=\"chat-day-indicator one-line noselect\"' + (this.model.get('encrypted') ? (' data-trust=\"' + (this.bottom.$el.attr('data-trust') || this.bottom.$el.attr('data-contact-trust')) + '\"') : \"\") + ' data-time=\"'+\n            day_date.format('x')+'\">'+pretty_date(day_date)+'</div>');\n    },\n\n    initPlyrEmbedPlayer: function ($msg, msg) {\n        let message = this.model.messages.get($msg.data('uniqueid')) || msg,\n            msg_players = [],\n            msg_videos = message && message.get('videos') && message.get('videos').length ? message.get('videos') : null;\n        $msg.find('.plyr-video-container:not(.no-load)').each((idx, item) => {\n            if ($(item).hasClass('no-load'))\n                return;\n            let existing_player = this.model.plyr_players.filter(obj => { return (obj.message_id === idx && obj.message_unique_id === $msg.attr('data-uniqueid'))}),\n                player;\n            if (existing_player.length){\n                player = existing_player[0]\n                msg_players = msg_players.concat([player]);\n            } else {\n                player = {video_src: $(item).attr('data-src')}\n                player.provider = $(item).attr('data-provider');\n                player.video_id = $(item).attr('data-msg-video-id');\n                player.msg_time = $msg.attr('data-time');\n                player.chat_item = this.model.item_view;\n                player.message_id = idx;\n                player.message_unique_id = $msg.attr('data-uniqueid');\n                if (msg_videos && msg_videos.length && player.video_id >= 0) {\n                    let video_file = msg_videos[player.video_id];\n                    video_file && (player.video_file = video_file);\n                }\n                this.model.plyr_players = this.model.plyr_players.concat([player]).sort((a, b) => a.msg_time - b.msg_time);\n                xabber.plyr_players = xabber.plyr_players.concat([player]);\n                msg_players = msg_players.concat([player]);\n            }\n            $(item).attr('data-message-id', player.message_id);\n            $(item).addClass('no-load');\n            if (xabber.current_plyr_player && xabber.current_plyr_player.player_item)\n                if (xabber.current_plyr_player.player_item.message_id === player.message_id && xabber.current_plyr_player.player_item.message_unique_id === player.message_unique_id)\n                    $(item).addClass('active-plyr-container');\n        });\n        msg_players.length && message && message.set('msg_player_videos', msg_players);\n        xabber.trigger('plyr_player_updated');\n    },\n\n    hideMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showMessageAuthor: function ($msg) {\n        if ($msg.hasClass('system'))\n            return;\n        $msg.addClass('with-author');\n        let image, $avatar = $msg.find('.left-side .circle-avatar'),\n            from_jid = $msg.data('from');\n        if (from_jid === this.account.get('jid')) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image) {\n                        if (this.account.cached_image)\n                            image = this.account.cached_image;\n                        !image && (image = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                    } else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else {\n            if (this.model.get('group_chat')) {\n                let author = $msg.find('.msg-wrap .chat-msg-author').text();\n                image = Images.getDefaultAvatar(author);\n            }\n            else {\n                let author = this.account.contacts.get($msg.data('from')) || $msg.find('.msg-wrap .chat-msg-author').text() || $msg.data('from');\n                image = author.cached_image || Images.getDefaultAvatar(author);\n            }\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        if ($msg.data('avatar')) {\n            if ($msg.data('from-id')) {\n                if (this.account.chat_settings.getHashAvatar($msg.data('from-id')) == $msg.data('avatar') && (this.account.chat_settings.getB64Avatar($msg.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($msg.data('from-id')), this.avatar_size);\n                }\n                else {\n                    let pending_avatar = this._pending_avatars.find(a => a.hash == $msg.data('avatar'));\n                    if (pending_avatar) {\n                        pending_avatar.dfd.done((data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            let idx = this._pending_avatars.indexOf(pending_avatar);\n                            if (idx > -1)\n                                this._pending_avatars.splice(idx, 1);\n                        });\n                    } else {\n                        if($msg.data('avatar-url')){\n                            $avatar.setAvatar($msg.data('avatar-url'), this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), $msg.data('avatar-url'));\n                        }\n                        else\n                        {\n                            let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $msg.data('from-id'), dfd = new $.Deferred();\n                            this._pending_avatars.push({hash: $msg.data('avatar'), dfd: dfd});\n                            this.contact.getAvatar($msg.data('avatar'), node, (data_avatar) => {\n                                $avatar.setAvatar(data_avatar, this.avatar_size);\n                                this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), data_avatar);\n                                dfd.resolve(data_avatar);\n                            });\n\n                        }\n                    }\n                }\n            }\n        }\n    },\n\n    hideFwdMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showFwdMessageAuthor: function ($fwd_message) {\n        if (!$fwd_message.length)\n            return;\n        $fwd_message.addClass('with-author');\n        let image,\n            $avatar = $fwd_message.find('.circle-avatar'),\n            from_jid = $fwd_message.data('from'),\n            is_sender = (from_jid === this.account.get('jid')),\n            contact = this.account.contacts.get(from_jid) || from_jid;\n        if (is_sender) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image)\n                        image = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                    else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else if (contact) {\n            image = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($fwd_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        $avatar.removeClass('hidden');\n        if ($fwd_message.data('avatar')) {\n            if ($fwd_message.data('from-id')) {\n                if ((this.account.chat_settings.getHashAvatar($fwd_message.data('from-id')) == $fwd_message.data('avatar')) && (this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')), this.avatar_size);\n                }\n                else {\n                    if($fwd_message.data('avatar-url')){\n                        $avatar.setAvatar($fwd_message.data('avatar-url'), this.avatar_size);\n                        this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), $fwd_message.data('avatar-url'));\n                    }\n                    else {\n                        let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $fwd_message.data('from-id');\n                        this.contact && this.contact.getAvatar($fwd_message.data('avatar'), node, (data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), data_avatar);\n                        });\n                    }\n                }\n            }\n        }\n    },\n\n    updateMessageInChat: function (msg_elem, msg) {\n        let $msg = $(msg_elem);\n        $msg.prev('.chat-day-indicator').remove();\n        if ($msg.find('.plyr-video-container').length) {\n            this.initPlyrEmbedPlayer($msg, msg);\n        }\n        ($msg.find('.not-decrypted-icon').length) && $msg.find('.not-decrypted-icon').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        });\n        let $prev_msg = $msg.prevAll('.chat-message').first();\n        if (!$prev_msg.length) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n            $msg.find('.fwd-message').each((idx, fwd_msg_item) => {\n                this.showFwdMessageAuthor($(fwd_msg_item));\n            });\n            return;\n        }\n        if ($msg.find('.data-form').length) {\n            this.showMessageAuthor($msg);\n            return;\n        }\n        let is_system = $prev_msg.hasClass('system'),\n            is_same_sender = ($msg.data('from') === $prev_msg.data('from')),\n            is_same_date = moment($msg.data('time')).startOf('day')\n                .isSame(moment($prev_msg.data('time')).startOf('day'));\n        if (!is_same_date) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n        } else if (is_system || !is_same_sender || $prev_msg.hasClass('saved-main')) {\n            this.showMessageAuthor($msg);\n        } else {\n            this.hideMessageAuthor($msg);\n        }\n        if ($msg.hasClass('forwarding')) {\n            let $fwd_message = $msg.find('.fwd-message');\n            $fwd_message.each((idx, fwd_msg_item) => {\n                let $fwd_msg_item = $(fwd_msg_item),\n                    $prev_fwd_message = (idx > 0) ? $fwd_msg_item.prev() : [];\n                $fwd_msg_item.switchClass('hide-date', is_same_date && $prev_fwd_message.length);\n                $fwd_msg_item.removeClass('hide-time');\n                if ($prev_fwd_message.length) {\n                    let is_same_fwded_sender = ($fwd_msg_item.data('from') === $prev_fwd_message.data('from'));\n                    if (is_same_fwded_sender) {\n                        this.hideFwdMessageAuthor($fwd_msg_item);\n                    } else {\n                        this.showFwdMessageAuthor($fwd_msg_item);\n                    }\n                } else {\n                    this.showMessageAuthor($msg);\n                    this.showFwdMessageAuthor($fwd_msg_item);\n                }\n            });\n        }\n    },\n\n    notifyMessage: function (message) {\n        if (xabber.settings.notifications && ((xabber.settings.notifications_private && !this.model.get('group_chat')) || (xabber.settings.notifications_group && this.model.get('group_chat')))) {\n            let notification_text;\n            if ((this.model.get('group_chat') && xabber.settings.message_preview_group) || (!this.model.get('group_chat') && xabber.settings.message_preview_private))\n                notification_text = message.getText();\n            else\n                notification_text = xabber.getString(\"notification__text_sent_a_message\");\n            let notification = xabber.popupNotification({\n                title: this.contact.get('name'),\n                text: notification_text,\n                icon: this.contact.cached_image.url\n            });\n            notification.onclick = () => {\n                window.focus();\n                this.model.trigger('open');\n            };\n        }\n        if (xabber.settings.group_sound && xabber.settings.notifications_group && this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_group_message;\n            }\n            xabber.playAudio(sound, false, !xabber.settings.notifications_volume_enabled ? 0 : xabber.settings.notifications_volume);\n        }\n        else if (xabber.settings.private_sound && xabber.settings.notifications_private && !this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_private_message;\n            }\n            xabber.playAudio(sound, false, !xabber.settings.notifications_volume_enabled ? 0 : xabber.settings.notifications_volume);\n        }\n        xabber.recountAllMessageCounter();\n    },\n\n    attentionMessage: function () {\n        let notification = xabber.popupNotification({\n            title: this.contact.get('name'),\n            text: xabber.getString(\"chats_attention\"),\n            icon: this.contact.cached_image.url\n        });\n        notification.onclick = () => {\n            window.focus();\n            this.model.trigger('open');\n        };\n        let sound = xabber.settings.sound_on_attention;\n        xabber.playAudio(sound);\n    },\n\n    sendMessage: function (message) {\n        let body = message.get('message'),\n            legacy_body = '',\n            mutable_content = [],\n            forwarded_message = message.get('forwarded_message'),\n            unique_id = message.get('unique_id'),\n            msg_id = message.get('msgid'),\n            link_references = message.get('link_references'),\n            stanza = $msg({\n                to: this.model.get('jid'),\n                type: 'chat',\n                id: msg_id\n            });\n\n        if (forwarded_message) {\n            legacy_body = [];\n            $(forwarded_message).each((idx, fwd_msg) => {\n                let legacy_fwd_msg = Array.from(_.escape(_.unescape(this.bottom.createTextMessage([fwd_msg], \">\"))) + ((idx === forwarded_message.length - 1 && !body.length) ? \"\" : '\\n')),\n                    idx_begin = legacy_body.length,\n                    fwd = $(fwd_msg.get('xml')).clone(),\n                    idx_end = legacy_body.concat(legacy_fwd_msg).length;\n                if (!fwd.attr('from'))\n                    fwd.attr('from', this.account.get('jid'));\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: idx_begin,\n                    end: idx_end\n                })\n                    .c('forwarded', {xmlns: 'urn:xmpp:forward:0'})\n                    .c('delay', {\n                        xmlns: 'urn:xmpp:delay',\n                        stamp: fwd_msg.get('time')\n                    }).up().cnode(fwd[0]).up().up().up();\n                legacy_body = legacy_body.concat(legacy_fwd_msg);\n                mutable_content.push({\n                    start: idx_begin,\n                    end: idx_end,\n                    type: 'forward'\n                });\n            });\n            body = _.unescape(legacy_body.join(\"\")) + body;\n        }\n\n        if (message.get('mentions') && message.get('mentions').length) {\n            message.get('mentions').forEach((mention) => {\n                let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n                mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: mention.start + legacy_body.length,\n                    end: mention.end + legacy_body.length,\n                    type: 'decoration',\n                })\n                    .c('mention', mention_attrs).t(mention.target).up().up();\n            });\n        }\n\n        if (message.get('markups')) {\n            message.get('markups').forEach((markup) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: markup.start + legacy_body.length,\n                    end: markup.end + legacy_body.length,\n                    type: 'decoration'\n                });\n                for (let idx in markup.markup) {\n                    stanza.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n                }\n                stanza.up();\n            });\n        }\n\n        if (message.get('blockquotes')) {\n            message.get('blockquotes').forEach((blockquote) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: blockquote.start + legacy_body.length,\n                    end: blockquote.end + legacy_body.length,\n                    type: 'decoration'\n                })\n                    .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n            });\n        }\n\n        if (message.get('type') == 'file_upload') {\n            let files = message.get('files') || [],\n                images = message.get('images') || [],\n                videos = message.get('videos') || [],\n                all_files = files.concat(images);\n            all_files = all_files.concat(videos)\n            all_files.forEach((file, idx) => {\n                (idx === 0) && (body += '\\n');\n                legacy_body = file.sources[0] + ((idx != all_files.length - 1) ? '\\n' : \"\");\n                let start_idx = Array.from(_.escape(body)).length,\n                    end_idx = start_idx + legacy_body.length;\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && stanza.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                stanza.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && stanza.c('media-type').t(file.type).up();\n                file['id'] && stanza.c('gallery-id').t(file['id']).up();\n                file.thumbnail && stanza.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && stanza.c('created').t(file.created).up();\n                file.name && stanza.c('name').t(file.name).up();\n                file.size && stanza.c('size').t(file.size).up();\n                file.height && stanza.c('height').t(file.height).up();\n                file.width && stanza.c('width').t(file.width).up();\n                file.duration && stanza.c('duration').t(file.duration).up();\n                file.description && stanza.c('desc').t(file.description).up();\n                stanza.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    stanza.c('uri').t(u).up();\n                });\n                stanza.up().up().up();\n                file.voice && stanza.up();\n                body += legacy_body;\n                mutable_content.push({start: start_idx, end: end_idx});\n            });\n            message.set({type: 'main'});\n        }\n\n        if (link_references && link_references.length) {\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(body)).length;\n                    body = body + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && stanza.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && stanza.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && stanza.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && stanza.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && stanza.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && stanza.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && stanza.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && stanza.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && stanza.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                stanza.up().up();\n                mutable_content.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n\n        mutable_content.length && message.set({mutable_content: mutable_content});\n\n        this.account._pending_messages.push({chat_hash_id: this.model.id, unique_id: unique_id, timestamp: moment.now()});\n\n        message.set('original_message', body);\n        body && stanza.c('body').t(body).up();\n        stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n            .c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n        message.set({xml: $(stanza.tree()).clone()[0]});\n        if (message.get('state') === constants.MSG_ERROR) {\n            stanza.c('retry', {xmlns: Strophe.NS.DELIVERY}).up();\n            message.set('state', constants.MSG_PENDING);\n        }\n        if (stanza.toString().length >= constants.STANZA_MAX_SIZE) {\n            utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n            this.removeMessage(message);\n            return;\n        }\n        if (message.get('encrypted') && this.account.omemo) {\n            stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($(stanza.tree()).children('body').length) {\n                stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $(stanza.tree()).children('body').detach()\n            }\n            if ($(stanza.tree()).children('reference').length) {\n                $(stanza.tree()).children('reference').each((idx, reference) => {\n                    stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                });\n                $(stanza.tree()).children('reference').detach()\n            }\n            stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            stanza.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, stanza).then((msg) => {\n                if (msg) {\n                    stanza = msg.message;\n                    message.set('trusted', msg.is_trusted);\n                    message.set({xml: $(stanza.tree()).clone()[0]});\n                }\n                let msg_sending_timestamp = moment.now();\n                this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n            });\n            return;\n        } else {\n            let msg_sending_timestamp = moment.now();\n            this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n        }\n    },\n\n    msgCallback: function (msg_sending_timestamp, message) {\n        this.bottom.click_counter = 0;\n        this.bottom.setDefaultPlaceholder();\n        if (!this.model.get('group_chat') && !this.account.server_features.get(Strophe.NS.DELIVERY)) {\n            setTimeout(() => {\n                if ((this.account.last_stanza_timestamp > msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING)) {\n                    message.set('state', constants.MSG_SENT);\n                } else {\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {\n                        (message.get('state') === constants.MSG_PENDING) && message.set('state', constants.MSG_SENT);\n                    });\n                    setTimeout(() => {\n                        if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING))\n                            message.set('state', constants.MSG_ERROR);\n                    }, 5000);\n                }\n            }, 1000);\n        }\n        else {\n            let _pending_time = 5, was_reconnecting;\n            if (!(this.account.connection.authenticated && !this.account.connection.disconnecting && this.account.session.get('connected') && this.account.session.get('ready_to_send') && this.account.get('status') !== 'offline'))\n                was_reconnecting = true;\n            if (this.account.session.get('reconnecting'))\n                was_reconnecting = true;\n            this.account.session.once('change:reconnecting', () => {\n                console.log('change reconnecting');\n                console.log(this.account.session.get('reconnecting'));\n                was_reconnecting = true;\n            })\n            let _interval = setInterval(() => {\n                console.log(was_reconnecting);\n                if (was_reconnecting)\n                    clearInterval(_interval);\n                if (_pending_time >= 8 && message.get('state') === constants.MSG_PENDING && !was_reconnecting){\n                    console.log('ping on message pending');\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {},  () => {\n                        let downtime = (moment.now() - this.account.last_stanza_timestamp) / 1000;\n                        if (downtime >= 2){\n                            console.log('message initiated reconnection');\n                            console.log(message);\n                            this.account.connection.disconnect();\n                        } else {\n                            console.log('ping was sent and got no result after 2 seconds, but didnt reconnect because last stanza time was: ' + downtime + ' sec')\n                        }\n                    }, 2000);\n                }\n                if (((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 40) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 40)) && !was_reconnecting) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 3;\n            }, 3000);\n        }\n    },\n\n    initJingleMessage: function (media_type) {\n        xabber.current_voip_call && xabber.current_voip_call.destroy();\n        media_type = media_type || {};\n        media_type = media_type.video ? 'video' : 'audio';\n        let session_id = uuid();\n        xabber.current_voip_call = new xabber.JingleMessage({session_id: session_id, video_live: media_type === 'video'}, {contact: this.contact});\n        xabber.current_voip_call.startCall();\n        xabber.current_voip_call.modal_view.show({status: constants.JINGLE_MSG_PROPOSE});\n        xabber.trigger('update_jingle_button');\n    },\n\n    saveForwardedMessage: function (msg) {\n        let forwarded_message = null;\n        if ($(msg).get('forwarded_message')) {\n            forwarded_message = $(msg).get('forwarded_message');\n            if (this.account.forwarded_messages.indexOf(forwarded_message) < 0) {\n                forwarded_message = this.saveForwardedMessage(forwarded_message);\n            }\n        }\n        msg = this.account.forwarded_messages.create(_.extend({\n            is_forwarded: true,\n            forwarded_message: forwarded_message\n        }, msg.attributes));\n        return msg;\n    },\n\n    onSubmit: function (text, fwd_messages, options) {\n        // send forwarded messages before\n        options = options || {};\n        let attrs = {\n            from_jid: this.account.get('jid'),\n            message: text,\n            mentions: options.mentions,\n            blockquotes: options.blockquotes,\n            markups: options.markup_references,\n            files: options.attached_files,\n            link_references: options.link_references,\n            encrypted: this.model.get('encrypted'),\n            submitted_here: true,\n            forwarded_message: null\n        }, _dfd_info = new $.Deferred();\n        _dfd_info.done(() => {\n            if (!fwd_messages.length && !(attrs.files && attrs.files.length) && !(attrs.link_references && attrs.link_references.length) && text.removeEmoji() === \"\")\n                attrs.only_emoji = Array.from(text).length;\n            if (fwd_messages.length) {\n                let new_fwd_messages = [];\n                _.each(fwd_messages, (msg) => {\n                    if (this.account.forwarded_messages.indexOf(msg) < 0) {\n                        msg = this.saveForwardedMessage(msg);\n                    }\n                    new_fwd_messages.push(msg);\n                });\n                attrs.forwarded_message = new_fwd_messages;\n                if (attrs.files && attrs.files.length) {\n                    attrs.type = 'file_upload';\n                    this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                    this.model.messages.create(attrs);\n                } else {\n                    let message = this.model.messages.create(attrs);\n                    this.sendMessage(message);\n                }\n            } else if (attrs.files && attrs.files.length) {\n                attrs.type = 'file_upload';\n                this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                this.model.messages.create(attrs);\n            } else if (text || (attrs.link_references && attrs.link_references.length)) {\n                let message = this.model.messages.create(attrs);\n                this.sendMessage(message);\n            }\n            if (this.contact && this.model.get('archived') && !this.model.isMuted()) {\n                message.set('muted', false);\n                this.head.archiveChat();\n                this.model.set('archived', false);\n                xabber.chats_view.updateScreenAllChats();\n            }\n            if (this.model.get('group_chat') && xabber.toolbar_view.$('.active').hasClass('chats'))\n                if (this.contact && !this.model.isMuted() && !this.model.get('archived'))\n                    xabber.chats_view.updateScreenAllChats();\n            xabber.chats_view.scrollToTop();\n            xabber.chats_view.clearSearch();\n        });\n\n        if (this.contact && this.contact.get(\"group_chat\") && !this.contact.my_info)\n            this.contact.getMyInfo(() => {\n                _dfd_info.resolve();\n            });\n        else if (this.model.get('encrypted')){\n            this.account.omemo.checkContactFingerprints(this.contact).then((obj) => {\n                attrs.is_contact_trusted = obj.trust;\n                _dfd_info.resolve();\n            });\n        } else\n            _dfd_info.resolve();\n    },\n\n    addFileMessage: function (files, is_voice) {\n        let new_files = [], file_counter = 0;\n        if (this.model.messages_view)\n            if (this.model.messages_view.data.get('visible'))\n                this.model.messages_view.openChat();\n        if (files.length > 10 && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        let http_upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        if (!http_upload_service && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"error_file_upload_not_support\", [this.account.domain]));\n            return;\n        }\n        let deferred_all = new $.Deferred();\n        deferred_all.done((data) => {\n            if (is_voice) {\n                this.model.messages.create({\n                    from_jid: this.account.get('jid'),\n                    type: 'file_upload',\n                    files: data,\n                    encrypted: this.model.get('encrypted'),\n                    upload_service: http_upload_service.get('from'),\n                    message: '',\n                    submitted_here: true\n                });\n            } else\n                this.bottom.addFileSnippets(data);\n        });\n        $(files).each((idx, file) => {\n            if (utils.isImageType(file.type)) {\n                let reader = new FileReader(), deferred = new $.Deferred();\n                Images.compressImage(file).done((image) => {\n                    reader.readAsDataURL(image);\n                    deferred.done((data) => {\n                        if (data) {\n                            image.height = data.height;\n                            image.width = data.width;\n                        }\n                        if (data.encrypted_file)\n                            new_files.push(data.encrypted_file);\n                        else\n                            new_files.push(image);\n                        file_counter++;\n                        if (file_counter === files.length)\n                            deferred_all.resolve(new_files);\n                    });\n                });\n                reader.onload = (e) => {\n                    if (this.model.get('encrypted')) {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                new_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            new_file.key = key;\n                            if (new_file.type === 'image/svg+xml') {\n                                deferred.resolve({encrypted_file: new_file,key: key});\n                            } else {\n                                let image_prev = new Image();\n                                image_prev.onload = function () {\n                                    let height = this.height,\n                                        width = this.width;\n                                    new_file.image_prev = image_prev;\n                                    deferred.resolve({height: height, width: width, encrypted_file: new_file, key: key});\n                                };\n                                image_prev.src = e.target.result;\n                            }\n                        });\n                    } else {\n                        if (file.type === 'image/svg+xml') {\n                            deferred.resolve({});\n                        } else {\n                            let image_prev = new Image();\n                            image_prev.onload = function () {\n                                let height = this.height,\n                                    width = this.width;\n                                deferred.resolve({height: height, width: width});\n                            };\n                            image_prev.src = e.target.result;\n                        }\n                    }\n                };\n            }\n            else {\n                if (this.model.get('encrypted')) {\n                    let reader = new FileReader();\n                    reader.onload = (e) => {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                encrypted_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            file.voice && (encrypted_file.voice = true);\n                            file.duration && (encrypted_file.duration = file.duration);\n                            encrypted_file.key = key;\n                            new_files.push(encrypted_file);\n                            file_counter++;\n                            if (file_counter === files.length)\n                                deferred_all.resolve(new_files);\n                        });\n                    };\n                    reader.readAsDataURL(file);\n                } else {\n                    new_files.push(file);\n                    file_counter++;\n                    if (file_counter === files.length)\n                        deferred_all.resolve(new_files);\n                }\n            }\n        });\n    },\n\n    startUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        $message.find('.repeat-upload').hide();\n        $message.find('.status').hide();\n        $message.find('.progress').show();\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        let files_count = 0;\n        $(message.get('files')).each((idx, file) => {\n            let enc_file = new File([file], file.name);\n            enc_file.key && (delete enc_file.key);\n            let iq = $iq({type: 'get', to: message.get('upload_service')})\n                    .c('request', {xmlns: Strophe.NS.HTTP_UPLOAD})\n                    .c('filename').t(enc_file.name).up()\n                    .c('size').t(enc_file.size).up()\n                    .c('content-type').t(enc_file.type).up(),\n                deferred = new $.Deferred(), self = this;\n            this.account.sendIQFast(iq,\n                function (result) {\n                    let $slot = $(result).find(`slot[xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`);\n                    deferred.resolve({\n                        get_url: $slot.find('get').text(),\n                        put_url: $slot.find('put').text()\n                    });\n                },\n                function (err) {\n                    let error_text = $(err).find(`error text[xml\\\\:lang=\"${xabber._settings.get('language')}\"]`).text(),\n                        error_type = $(err).find('error').attr('type');\n                    !error_text && (error_text = $(err).find(`error text`).text());\n                    self.onFileNotUploaded(message, $message, error_text, 'xmpp');\n                }\n            );\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n            deferred.done((data) => {\n                clearInterval(_interval);\n                let xhr = new XMLHttpRequest(),\n                    $bar = $message.find('.progress');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').click(() => {\n                    xhr.abort();\n                });\n                xhr.onabort = () => {\n                    this.removeMessage($message);\n                };\n                xhr.upload.onprogress = (event) => {\n                    let percentage = event.loaded / event.total;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n                };\n                xhr.onload = xhr.onerror = function () {\n                    if (this.status === 201) {\n                        message.get('files')[idx].url = data.get_url;\n                        files_count++;\n                        if (files_count == message.get('files').length) {\n                            self.onFileUploaded(message, $message);\n                        }\n                    } else {\n                        self.onFileNotUploaded(message, $message, this.responseText, 'http');\n                    }\n                };\n                if ($message.data('cancel')) {\n                    xhr.abort();\n                } else {\n                    xhr.open(\"PUT\", data.put_url, true);\n                    xhr.send(enc_file);\n                }\n            });\n        });\n    },\n\n    startGalleryUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files_count = 0,\n            cancelled_files_count = 0,\n            self = this,\n            is_error = false,\n            xhr_requests = [],\n            msg_files_count = message.get('files').length;\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.uploaded-file').removeClass('uploaded-file');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        $(message.get('files')).each((idx, file) => {\n            if (is_error)\n                return;\n            if (file.key) {\n                file = new File([file], file.name);\n                delete file.key\n            }\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n\n            let formData = new FormData(),\n                metadata = {};\n            file.duration && (metadata.duration = file.duration);\n            file.width && (metadata.width = file.width);\n            file.height && (metadata.height = file.height);\n            formData.append('file', file, file.name);\n            formData.append('metadata', JSON.stringify(metadata));\n            if (file.size)\n                formData.append('size', file.size);\n            if (file.voice)\n                formData.append('media_type', file.type + '+voice');\n            else\n                formData.append('media_type', file.type);\n            clearInterval(_interval);\n            message.get('files')[idx].is_errored = false;\n            let xhr = new XMLHttpRequest(),\n                $bar = $message.find('.progress');\n            xhr.formData = formData;\n            xhr_requests = xhr_requests.concat([xhr]);\n            xhr.arrayIndex = xhr_requests.indexOf(xhr);\n            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').one(\"click\",() => {\n                cancelled_files_count++;\n                if (xhr.is_uploading)\n                    xhr.abort();\n                else {\n                    if ((msg_files_count - cancelled_files_count) == 0) {\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        xhr.is_cancelled = true;\n                        $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        message.get('files')[idx] = null;\n                    }\n                }\n            });\n            xhr.upload.onprogress = (event) => {\n                let percentage = event.loaded / event.total;\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n            };\n            xhr.oncancel = xhr.onload = xhr.onerror = xhr.onabort = function () {\n                let xhr_status = this.fakeStatus || this.status;\n                if (xhr_status >= 200 && xhr_status < 300) {\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('mdi-check').removeClass('mdi-close');\n                    let response = this.response ? JSON.parse(this.response) : this.fakeResponse;\n                    message.get('files')[idx].id = response.id;\n                    message.get('files')[idx].created_at = response.created_at;\n                    (response.thumbnail && response.thumbnail.url) && (message.get('files')[idx].thumbnail = response.thumbnail.url);\n                    message.get('files')[idx].url = response.file;\n                    files_count++;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('uploaded-file');\n                    while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                        files_count++;\n                    }\n                    if (files_count == message.get('files').length) {\n                        self.onFileUploaded(message, $message);\n                    } else if (xhr_requests[files_count]){\n                        self.account.testGalleryTokenExpire(() => {\n                            self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                if (!is_error) {\n                                    if (slot_response && slot_response.quota){\n                                        if (slot_response.file && slot_response.hash){\n                                            xhr_requests[files_count].fakeStatus = 200;\n                                            xhr_requests[files_count].fakeResponse = {\n                                                file: slot_response.file,\n                                                id: slot_response.id,\n                                                name: slot_response.name,\n                                                thumbnail: slot_response.thumbnail,\n                                                created_at: slot_response.created_at,\n                                            };\n                                            xhr_requests[files_count].oncancel();\n                                        } else {\n                                            xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                            xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                            xhr_requests[files_count].is_uploading = true;\n                                            xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                        }\n                                    } else {\n                                        xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                        xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                        xhr_requests[files_count].oncancel();\n                                    }\n                                }\n                            });\n                        });\n                    }\n                } else {\n                    if (xhr_status === 0 && is_error)\n                        return;\n                    if ((msg_files_count - cancelled_files_count) == 0 && xhr_status === 0){\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        let response_text, error_status;\n                        self.account.handleCommonGalleryErrors(this.response)\n                        if (xhr_status === 500)\n                            response_text = this.fakeResponse || this.statusText;\n                        else if (xhr_status === 400 || this.fakeStatus){\n                            response_text = this.fakeResponse || JSON.parse(this.response).error;\n                            error_status = this.fakeStatus || JSON.parse(this.response).status;\n                            if (error_status && error_status == 429){\n                                setTimeout(() => {\n                                    self.account.testGalleryTokenExpire(() => {\n                                        self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                            if (!is_error) {\n                                                if (slot_response && slot_response.quota){\n                                                    if (slot_response.file && slot_response.hash){\n                                                        xhr_requests[files_count].fakeStatus = 200;\n                                                        xhr_requests[files_count].fakeResponse = {\n                                                            file: slot_response.file,\n                                                            id: slot_response.id,\n                                                            name: slot_response.name,\n                                                            thumbnail: slot_response.thumbnail,\n                                                            created_at: slot_response.created_at,\n                                                        };\n                                                        xhr_requests[files_count].oncancel();\n                                                    } else {\n                                                        xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                        xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                        xhr_requests[files_count].is_uploading = true;\n                                                        xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                                    }\n                                                } else {\n                                                    xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                                    xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                                    xhr_requests[files_count].oncancel();\n                                                }\n                                            }\n                                        });\n                                    });\n                                }, 1000);\n                                return;\n                            }\n                        }\n                        else if (xhr_status === 0) {\n                            $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        };\n                        (xhr_status === 0) && (message.get('files')[idx] = null);\n                        if (!message.get('files').filter((element) => { return element != null}).length && !message.get('message')){\n                            self.bottom.setEditedMessageAttachments(message, true);\n                            self.bottom.setRedactedUploadMessage(message);\n                            self.removeMessage($message);\n                            return;\n                        }\n                        files_count++;\n                        if (xhr_status != 0) {\n                            if (!$message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').closest('.img-content-template.hidden').length){\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                            } else {\n                                $message.find('.hidden-images .circle-percent-text').text(response_text);\n                                $message.find('.hidden-images .mdi-alert-circle').removeClass('hidden');\n                                $message.find('.hidden-images .mdi-alert-circle').prop('title', response_text);\n                                $message.find('.hidden-images .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('.hidden-images').addClass('upload-error');\n                                $message.find('.hidden-images').css({ 'border-color': '#EF9A9A'});\n                            }\n                            message.get('files')[idx].is_errored = true;\n                            is_error = true;\n                            $(xhr_requests).each((idx, request) => {\n                                request.abort();\n                            })\n                            self.onFileNotUploaded(message, $message, response_text);\n                        }\n                        else if (files_count == msg_files_count) {\n                            self.onFileUploaded(message, $message);\n                        } else {\n                            while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                                files_count++;\n                            }\n                            if (files_count == msg_files_count) {\n                                self.onFileUploaded(message, $message);\n                            } else {\n                                self.account.testGalleryTokenExpire(() => {\n                                    self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                        if (!is_error) {\n                                            if (slot_response && slot_response.quota){\n                                                if (slot_response.file && slot_response.hash){\n                                                    xhr_requests[files_count].fakeStatus = 200;\n                                                    xhr_requests[files_count].fakeResponse = {\n                                                        file: slot_response.file,\n                                                        id: slot_response.id,\n                                                        name: slot_response.name,\n                                                        thumbnail: slot_response.thumbnail,\n                                                        created_at: slot_response.created_at,\n                                                    };\n                                                    xhr_requests[files_count].oncancel();\n                                                } else {\n                                                    xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                    xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                    xhr_requests[files_count].is_uploading = true;\n                                                    xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                                }\n                                            } else {\n                                                xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                                xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                                xhr_requests[files_count].oncancel();\n                                            }\n                                        }\n                                    });\n                                });\n                            }\n                        }\n                    }\n                }\n            };\n        });\n        if (xhr_requests.length){\n            if ($message.data('cancel')) {\n                xhr_requests[0].abort();\n            } else {\n                this.account.testGalleryTokenExpire(() => {\n                    this.account.testGalleryFileSlot(xhr_requests[0].formData.get('file'), (slot_response) => {\n                        if (!is_error) {\n                            if (slot_response && slot_response.quota){\n                                if (slot_response.file && slot_response.hash){\n                                    xhr_requests[0].fakeStatus = 200;\n                                    xhr_requests[0].fakeResponse = {\n                                        file: slot_response.file,\n                                        id: slot_response.id,\n                                        name: slot_response.name,\n                                        thumbnail: slot_response.thumbnail,\n                                        created_at: slot_response.created_at,\n                                    };\n                                    xhr_requests[0].oncancel();\n                                } else {\n                                    xhr_requests[0].open(\"POST\", this.account.get('gallery_url') + 'v1/files/upload/', true);\n                                    xhr_requests[0].setRequestHeader(\"Authorization\", 'Bearer ' + this.account.get('gallery_token'));\n                                    xhr_requests[0].is_uploading = true;\n                                    xhr_requests[0].send(xhr_requests[0].formData);\n                                }\n                            } else {\n                                xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                xhr_requests[0].oncancel();\n                            }\n                        }\n                    });\n                }, (err_status) => {\n                    let response_text = err_status,\n                        file;\n                    message.get('files').length && (file = message.get('files')[0])\n                    if (file && !_.isUndefined(file.upload_id)){\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                    }\n                    message.get('files').length && (message.get('files')[0].is_errored = true);\n                    is_error = true;\n                    $(xhr_requests).each((idx, request) => {\n                        request.abort();\n                    })\n                    self.onFileNotUploaded(message, $message, response_text);\n                });\n            }\n        }\n\n    },\n\n    encryptFile: async function (file) {\n        return await utils.AES.encrypt(file);\n    },\n\n    onFileUploaded: function (message, $message) {\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files = message.get('files'),\n            self = this, is_audio = false,\n            images = [], files_ = [], videos = [];\n        if (!files.length)\n            this.onFileNotUploaded(message, $message)\n        $(files).each((idx, file_) => {\n            let file_new_format = {\n                name: file_.name,\n                type: file_.type,\n                size: file_.size,\n                description: file_.description || '',\n                sources: [file_.url]\n            };\n            file_.key && (file_new_format.key = file_.key);\n            file_.voice && (file_new_format.voice = true);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')){\n                _.extend(file_new_format, { id: file_.id, created: file_.created_at, thumbnail: file_.thumbnail });\n            }\n            if (utils.isImageType(file_.type)) {\n                _.extend(file_new_format, { width: file_.width, height: file_.height });\n                images.push(file_new_format);\n            }\n            else if (utils.isVideoType(file_.type)) {\n                _.extend(file_new_format, { duration: file_.duration});\n                videos.push(file_new_format);\n            }\n            else {\n                _.extend(file_new_format, { duration: file_.duration});\n                files_.push(file_new_format);\n            }\n        });\n        $message.find('.unuploaded-images').remove();\n        $message.find('.unuploaded-file').remove();\n        //  loaded and send image\n        if (images.length > 0) {\n            if (images.length > 1) {\n                let template_for_images;\n                if (images.length > 6) {\n                    let tpl_name = 'template-for-6',\n                        hidden_images = images.length - 5;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                    template_for_images.find('.last-image').addClass('hidden-images');\n                    template_for_images.find('.image-counter').text('+' + hidden_images);\n                }\n                else {\n                    let tpl_name = 'template-for-' + images.length;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + images.length)\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                }\n                if (!xabber.settings.load_media) {\n                    template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n                }\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_images);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            else {\n                let img = this.createImage(images[0]),\n                    img_content = self.createImageContainer(images[0]);\n                img.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(img_content);\n                $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').html(img);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n        }\n        message.set('videos', videos);\n        if (videos.length > 0) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n        if (files_.length > 0) {\n            $message.removeClass('file-upload noselect');\n            $(files_).each((idx, item) => {\n                if (!idx && !images.length){\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').removeClass('chat-file-content');\n                }\n                if (item.type) {\n                    if (item.voice)\n                        is_audio = true;\n                    else\n                        is_audio = false;\n                }\n                let file_attrs = {\n                        name: item.name,\n                        type: item.type,\n                        sources: item.sources\n                    },\n                    template_for_file_content,\n                    mdi_icon_class = utils.file_type_icon(item.type);\n                ((files_.length === 1) && is_audio) && (file_attrs.name = xabber.getString(\"voice_message\"));\n                _.extend(file_attrs, {size: utils.pretty_size(item.size), is_audio: is_audio, duration: utils.pretty_duration(item.duration), mdi_icon: mdi_icon_class});\n                template_for_file_content = is_audio ? $(templates.messages.audio_file(file_attrs)) : $(templates.messages.file(file_attrs));\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                if (is_audio && $message.find('.link-file').length) {\n                    let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                    audio_player.msg_time = $message.attr('data-time');\n                    audio_player.author = $message.find('.chat-msg-author').text();\n                    audio_player.message_unique_id = $message.attr('data-uniqueid');\n                    if (this.model.get('group_chat')) {\n                        if (this.contact.my_info) {\n                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                            if (!audio_player.contact_avatar) {\n                                if (this.account.cached_image)\n                                    audio_player.contact_avatar = this.account.cached_image;\n                                !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                            } else\n                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                        }\n                    }\n                    if (!audio_player.contact_avatar)\n                        audio_player.contact_avatar = this.account.cached_image;\n                    if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                        this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                        xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                    }\n\n                    let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                    $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                    audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                    message.set('msg_player_audios', [audio_player])\n                    xabber.trigger('plyr_player_updated');\n                }\n            });\n        }\n        this.initPopup($message);\n        message.set('images', images);\n        message.set('files', files_);\n        if ((message.get('encrypted') || this.model.get('encrypted')) && message.get('images').length) {\n            this.decryptImages(message);\n        }\n        this.sendMessage(message);\n        this.scrollToBottom();\n    },\n\n    createAudio: function(file_url, $elem) {\n        let audio = WaveSurfer.create({\n            container: $elem[0],\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    createImage: function(image) {\n        let imgContent = new Image(),\n            maxHeight = 400,\n            maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7;\n        if (image.height)\n            imgContent.height = image.height;\n        if (image.width)\n            imgContent.width = image.width;\n        maxWidth = maxWidth > 400 ? 400 : maxWidth;\n        if (xabber.settings.load_media) {\n            imgContent.src = image.sources[0];\n            $(imgContent).addClass('uploaded-img popup-img');\n        } else {\n            $(imgContent).addClass('unloaded-img');\n        }\n        $(imgContent).attr({'data-mfp-src': image.sources[0], title: (image.description || '')});\n        if (imgContent.height && imgContent.width) {\n            if (imgContent.width > maxWidth) {\n                imgContent.height = imgContent.height * (maxWidth/imgContent.width);\n                imgContent.width = maxWidth;\n            }\n            if (imgContent.height > maxHeight) {\n                imgContent.width = imgContent.width * (maxHeight/imgContent.height);\n                imgContent.height = maxHeight;\n            }\n        }\n        return imgContent;\n    },\n\n    createVideo: function(video, idx) {\n        video.pretty_size = utils.pretty_size(video.size)\n        let video_attrs = {video_src: video.sources[0], thumbnail: video.thumbnail, video_id: idx},\n            $video_wrap_template = $(templates.messages.video(video_attrs));\n        if (video.thumbnail){\n            setTimeout(() => {\n                $video_wrap_template.append($(`<img class=\"plyr-video-poster\" src=\"${video.thumbnail}\" onerror=\"this.style.display='none'\">`))\n            }, 1000);\n        }\n        return $video_wrap_template;\n    },\n\n    createImageContainer: function() {\n        return $('<div class=\"img-content\"/>')[0];\n    },\n\n    createVideoContainer: function() {\n        return $('<div class=\"video-content\"/>')[0];\n    },\n\n    onFileNotUploaded: function (message, $message, error_text, type, error_type) {\n        let error_message = error_text ? xabber.getString(\"file_upload__error\", [error_text]) : xabber.getString(\"file_upload__error_default\");\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        $message.find('.circle-wrap .mdi-close').unbind( \"click\" );\n        message.set('state', constants.MSG_ERROR);\n        if (type == 'http' || error_type == 'wait'){\n            $message.find('.repeat-upload').one(\"click\",() => {\n                this.startUploadFile(message, $message);\n            });\n        }\n        else {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.bottom.deleteFilesFromMessages([message]);\n            $message.find('.edit-upload').one(\"click\",() => {\n                this.bottom.setEditedMessageAttachments(message, true);\n                this.bottom.setRedactedUploadMessage(message);\n                this.removeMessage($message);\n            });\n            $message.find('.repeat-upload').one(\"click\",() => {\n                message.set('state', constants.MSG_PENDING);\n                $message.find('.upload-error .circle-percent-text').text('0%');\n                $message.find('.mdi-alert-circle').addClass('hidden');\n                $message.find('.mdi-close').removeClass('hidden');\n                $message.find('.upload-error').css({ 'border-color': ''});\n                $message.find('.upload-error').removeClass('upload-error');\n                $message.find('.preloader-path-new').css({ 'stroke-dasharray': '0, 149.825'});\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.startGalleryUploadFile(message, $message);\n                else\n                    this.startUploadFile(message, $message);\n            });\n        }\n    },\n\n    sendChatState: function (state, type) {\n        if (this.model.get('saved') || this.contact && this.contact.get('status') === 'offline')\n            return;\n        clearTimeout(this._chatstate_timeout);\n        clearTimeout(this._chatstate_send_timeout);\n        this.chat_state = false;\n        let stanza = $msg({to: this.model.get('jid'), type: 'chat'}).c(state, {xmlns: Strophe.NS.CHATSTATES});\n        if (this.model.get('encrypted')) {\n            if (this.account.settings.get('encrypted_chatstates'))\n                type = 'encrypted';\n            else\n                return;\n        }\n        type && stanza.c('subtype', {xmlns: Strophe.NS.EXTENDED_CHATSTATES, type: type});\n        (state === 'composing') && (this.chat_state = true);\n        this.account.sendMsg(stanza);\n        if (state === 'composing') {\n            this._chatstate_timeout = setTimeout(() => {\n                this.chat_state = false;\n            }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            this._chatstate_send_timeout = setTimeout(() => {\n                (!this.chat_state && xabber.settings.typing_notifications) && this.sendChatState('paused');\n            }, constants.CHATSTATE_TIMEOUT_PAUSED*2);\n        }\n    },\n\n    onChangedMessageTimestamp: function (message) {\n        let $message = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n            $next_msg = $message.next(),\n            $old_prev_msg = $message.prev();\n        $message.attr({\n            'data-time': message.get('timestamp')\n        });\n        $message.detach();\n        $message.children('.right-side').find('.msg-time').attr({title: pretty_datetime(message.get('time'))}).text(utils.pretty_time(message.get('time')));\n        message.get('user_info') && $message.attr('data-from-id', message.get('user_info').id);\n        this.model.messages.sort();\n        let index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            if ($old_prev_msg.hasClass('chat-day-indicator'))\n                $old_prev_msg.after($message);\n            else\n                $message.prependTo(this.$('.chat-content'));\n        } else {\n            let $prev_msg = this.$('.chat-message').eq(index - 1),\n                is_same_sender = ($message.data('from') === $prev_msg.data('from')),\n                is_same_date = moment($message.data('time')).startOf('day')\n                    .isSame(moment($prev_msg.data('time')).startOf('day'));\n            if (($old_prev_msg.data('from') !== $message.data('from')) && ($next_msg.data('from') === $message.data('from')) && (($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'delivered') || ($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'displayed')))\n                this.showMessageAuthor($next_msg);\n            if ($prev_msg.next().hasClass('chat-day-indicator') && (moment($prev_msg.next().data('time')).format('DD.MM.YY') === moment(message.get('timestamp')).format('DD.MM.YY'))) {\n                $message.insertAfter($prev_msg.next());\n                this.showMessageAuthor($message);\n            }\n            else\n                $message.insertAfter($prev_msg);\n            if (message.get('data_form') || message.get('forwarded_message') || !is_same_date || !is_same_sender || $prev_msg.hasClass('system') || $prev_msg.hasClass('saved-main'))\n                this.showMessageAuthor($message);\n            else\n                this.hideMessageAuthor($message);\n        }\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') > last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n    },\n\n    onChangedReadState: function (message) {\n        let is_unread = message.get('is_unread'),\n            is_synced = message.get('synced_from_server'),\n            is_unread_archived = message.get('is_unread_archived'),\n            is_missed_msg = message.get('missed_msg'),\n            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get(\"unique_id\")}\"]`);\n        if (is_unread) {\n            if (!is_unread_archived && !is_synced && !is_missed_msg)\n                this.model.messages_unread.add(message);\n            $msg.addClass('unread-message');\n            $msg.addClass('unread-message-background');\n            this.model.recountUnread();\n        } else {\n            if ((!is_unread_archived && !is_synced && !is_missed_msg) || this.model.messages_unread.indexOf(message) > -1)\n                this.model.messages_unread.remove(message);\n            $msg.removeClass('unread-message');\n            setTimeout(() => {\n                $msg.removeClass('unread-message-background');\n            }, 1000);\n            this.model.recountUnread();\n            if (!message.get('muted')) {\n                xabber.recountAllMessageCounter();\n            }\n        }\n    },\n\n    onTouchMessage: function (ev) {\n        if (ev.which === 3)\n            return;\n        let $elem = $(ev.target), $msg;\n\n        if ($elem.hasClass('chat-message')) {\n            $msg = $elem;\n        } else {\n            $msg = $elem.parents('.chat-message');\n        }\n        if (window.getSelection() != 0) {\n            utils.clearSelection();\n            $msg.attr('data-no-select-on-mouseup', '1');\n        }\n    },\n\n    onClickLink: function (ev) {\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let files = msg.get('files'),\n            videos = msg.get('videos'),\n            images = msg.get('images'),\n            link_references = msg.get('link_references'),\n            fwd_messages = [],\n            fwd_link_references = [],\n            files_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('images') && fwd_messages.push(message.get('images'));\n                message.get('videos') && fwd_messages.push(message.get('videos'));\n                message.get('link_references') && fwd_link_references.push(message.get('link_references'));\n            });\n        }\n        $(files).each(function(idx, file) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += file.sources[0];\n        });\n        $(images).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(videos).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(link_references).each(function(idx, link_reference) {\n            if (files_links != \"\")\n                files_links += '\\n';\n            files_links += link_reference.url;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, file) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += file.sources[0];\n            });\n        });\n        $(fwd_link_references).each(function (idx, message) {\n            $(message).each(function (i, link_reference) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += link_reference.url;\n            });\n        });\n        utils.copyTextToClipboard(files_links, xabber.getString(\"toast_link_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n\n    onClickLocationLink: function (ev) {\n        ev.preventDefault()\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let locations = msg.get('locations'),\n            fwd_messages = [],\n            location_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('locations') && fwd_messages.push(message.get('locations'));\n            });\n        }\n        $(locations).each(function(idx, location) {\n            location_links += 'geo:' + location.lat + ',' + location.lon;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, object) {\n                if (location_links != \"\")\n                    location_links += '\\n';\n                location_links += 'geo:' + object.lat + ',' + object.lon;\n            });\n        });\n\n        utils.copyTextToClipboard(location_links, xabber.getString(\"toast_location_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n    showParticipantProperties: function (participant_id, options) {\n        options = options || {};\n        let participant = this.contact.participants.get(participant_id);\n        if (!participant) {\n            this.contact.getBlockedParticipants((response) => {\n                _.extend(options, {present: null, subscription: null});\n                if ($(response).find(`query user:contains(${participant_id})`).length)\n                    options.blocked = true;\n                else\n                    options.blocked = false;\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            }, (err) => {\n                _.extend(options, {present: null, subscription: null});\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            });\n            return;\n        }\n        (this.contact.my_info && this.contact.my_info.get('id') === participant_id) && (participant_id = '');\n        this.contact.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.contact.showDetailsRight('all-chats', {type: 'participant'});\n            this.contact.details_view_right.participants.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    onClickMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('not-decrypted-icon') || $elem.closest('.dropdown-content').length || $elem.closest('.not-decrypted-icon').length)\n            return;\n        if ($elem.hasClass('file-link-download')) {\n            ev.preventDefault();\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')) || this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')),\n                uri = $elem.attr('href'),\n                file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n            if (file && file.key) {\n                this.model.messages.decryptFile(uri,file.key).then((result) => {\n                    if (result === null)\n                        return;\n                    let download = document.createElement(\"a\");\n                    download.href = result;\n                    download.download = file.name;\n                    download.click();\n                });\n                return;\n            } else\n                xabber.openWindow($elem.attr('href'));\n        }\n        if ($elem.hasClass('msg-delivering-state') ||  $elem.hasClass('not-decrypted-tooltip') || $elem.hasClass('audio-control-panel') || $elem.hasClass('voice-msg-current-time') || $elem.hasClass('voice-msg-total-time')) {\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if (!$elem.hasClass('mdi-link-variant') && !$elem.hasClass('msg-copy-location-content') && !$elem.hasClass('btn-retry-send-message') && !$elem.hasClass('btn-delete-message') && !$elem.hasClass('file-link-download') && !$elem.is('canvas') && !$elem.hasClass('voice-message-volume')) {\n            let $msg = $elem.closest('.chat-message'), msg,\n                $fwd_message = $elem.parents('.fwd-message').first(),\n                is_forwarded = $fwd_message.length > 0,\n                no_select_message = $msg.attr('data-no-select-on-mouseup');\n            $msg.attr('data-no-select-on-mouseup', '');\n\n            if ($elem.hasClass('data-form-field')) {\n                msg = this.model.messages.get($msg.data('uniqueid'));\n                if (msg)\n                    this.model.sendDataForm(msg, $elem.attr('id'));\n                return;\n            }\n\n            if (window.getSelection() != 0) {\n                return;\n            }\n\n            if ($elem.hasClass('collapsed-forwarded-message')) {\n                let msg = this.buildMessageHtml(this.account.forwarded_messages.get($elem.data('uniqueid'))),\n                    expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this});\n                expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n                this.updateMessageInChat(msg, this.account.forwarded_messages.get($elem.data('uniqueid')));\n                this.initPopup(msg);\n                expanded_fwd_message.open(msg);\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-author') || $elem.hasClass('fwd-msg-author')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from'),\n                    from_id = is_forwarded ? $fwd_message.data('fromId') : $msg.data('fromId');\n                if (this.contact && this.contact.get('group_chat')) {\n                    this.bottom.quill.focus();\n                    let caret_position = this.bottom.quill.getSelection(),\n                        participant_attrs = {jid: from_jid, id: from_id, nickname: $elem.text()};\n                    caret_position && (caret_position = caret_position.index);\n                    participant_attrs.position = caret_position || 0;\n                    this.bottom.insertMention(participant_attrs);\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    if (from_jid == from_id)\n                        return;\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                }\n                return;\n            }\n\n            if ($elem.hasClass('circle-avatar')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from');\n                if (this.model.get('group_chat')) {\n                    let member_id = (is_forwarded) ? $fwd_message.attr('data-from-id') : $msg.attr('data-from-id'),\n                        unique_id = (is_forwarded) ? $fwd_message.attr('data-uniqueid') : $msg.attr('data-uniqueid'),\n                        msg = this.model.messages.get(unique_id) || this.account.context_messages.get(unique_id) || this.account.searched_messages.get(unique_id),\n                        user_info = msg && msg.get('user_info');\n                    member_id && this.showParticipantProperties(member_id, user_info);\n                    return;\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mention')) {\n                let member_id = $elem.data('target');\n                if (this.contact.get('group_chat')) {\n                    if (member_id && !this.contact.participants.get(member_id)) {\n                        let participant = this.contact.participants.find(p => p.get('jid') === member_id);\n                        participant && (member_id = participant.get('id'));\n                    }\n                    member_id && this.showParticipantProperties(member_id);\n                }\n                else {\n                    if (member_id === this.account.get('jid'))\n                        this.account.showSettings();\n                    else if (member_id === this.model.get('jid')) {\n                        this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    } else {\n                        let contact = this.account.contacts.mergeContact(member_id);\n                        contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    }\n                }\n                return;\n            }\n\n            if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n                let $audio_elem = $elem.closest('.link-file'),\n                    f_url = $audio_elem.find('.file-link-download').attr('href');\n                $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n                if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                    let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                        uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                        file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                    if (file && file.key) {\n                        this.model.messages.decryptFile(f_url, file.key).then((result) => {\n                            if (result === null)\n                                return;\n                            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                        });\n                    }\n                } else {\n                    $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.play();\n                return;\n            }\n\n            if ($elem.hasClass('mdi-pause') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.pause();\n                return;\n            }\n\n            if ($elem.hasClass('msg-hyperlink')) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.closest(\".msg-hyperlink\").length > 0) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.closest(\".msg-hyperlink\").attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.hasClass('uploaded-img')||$elem.hasClass('img-content')||($elem.hasClass('uploaded-img-for-collage'))) {\n                $elem.hasClass('img-content') && $elem.children('img').click();\n                return;\n            }\n\n            if ($elem.hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        $elem.attr('src',$elem.attr('data-mfp-src'));\n                        $elem.removeClass('unloaded-img');\n                        $elem.addClass('uploaded-img');\n                        this.initPopup($elem.closest('.chat-message'));\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('img-content-template') && $elem.find('img').hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        let $msg = $elem.closest('.chat-message'),\n                            $imgs = $msg.find('.img-content-template img');\n                        $imgs.each((idx, img) => {\n                            $(img).attr('src',$(img).attr('data-mfp-src'));\n                        });\n                        $imgs.removeClass('unloaded-img');\n                        $imgs.addClass('uploaded-img-for-collage');\n                        this.initPopup($msg);\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-location-content') || $elem.hasClass('location-link') || $elem.closest(\".video-file-wrap\").length > 0 || $elem.closest(\".embed-video\").length > 0) {\n                return;\n            }\n\n            if ($elem.hasClass('last-image')) {\n                $elem.find('img').length && $elem.find('img')[0].click();\n                return;\n            }\n\n            if ($elem.hasClass('image-counter')) {\n                $elem.closest('.last-image').find('img')[0].click();\n                return;\n            }\n\n            if ($msg.hasClass('searched-message')) {\n                this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n                return;\n            }\n\n            let processClick = () => {\n                let $prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').last() : $msg.prevAll('.chat-message.selected').first();\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.nextAll('.chat-message.selected').last() : $msg.nextAll('.chat-message.selected').first());\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').first() : $msg.prevAll('.chat-message.selected').last());\n                if ((xabber.shiftctrl_pressed || xabber.shift_pressed) && $prev_selected.length) {\n                    let $all_msgs = [], is_selected = $msg.hasClass('selected');\n                    if ($prev_selected.attr('data-time') < $msg.attr('data-time'))\n                        $all_msgs = $prev_selected.nextUntil($msg, '.chat-message:not(.system)');\n                    else\n                        $all_msgs = $msg.nextUntil($prev_selected, '.chat-message:not(.system)');\n                    xabber.shift_pressed && this.$('.chat-message').removeClass('selected');\n                    $prev_selected.switchClass('selected', !is_selected);\n                    $all_msgs.switchClass('selected', !is_selected);\n                    $msg.switchClass('selected', !is_selected);\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n                if (!no_select_message) {\n                    $msg.switchClass('selected', !$msg.hasClass('selected'));\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n            };\n\n            if ($msg.hasClass('participant-message') || $msg.hasClass('context-message')) {\n                if ($msg.hasClass('system'))\n                    return;\n                processClick();\n                return;\n            }\n\n            msg = this.model.messages.get($msg.data('uniqueid'));\n            if (!msg) {\n                return;\n            }\n\n            let type = msg.get('type');\n            if (type === 'file_upload') {\n                return;\n            }\n\n            if (type === 'system') {\n                return;\n            } else if (is_forwarded) {\n                let fwd_message = this.account.forwarded_messages.get($fwd_message.data('uniqueid'));\n                if (!fwd_message) {\n                    return;\n                }\n                processClick();\n            } else {\n                processClick();\n            }\n        }\n    },\n\n    onClickLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    onHoverLocation: function (ev) {\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat');\n\n        fetch('https://nominatim.openstreetmap.org/reverse?format=json&lon=' + lon + '&lat=' + lat).then(function(response) {\n            return response.json();\n        }).then(function(json) {\n            if (!json.error) {\n                $(ev.target).attr('title', json.display_name);\n            }\n            else {\n                $(ev.target).attr('title', xabber.getString(\"location_fragment__address_error__title\"));\n            }\n            $(ev.target).removeClass('no-title')\n        })\n    },\n\n    retrySendMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message'),\n            msg = this.model.messages.get($msg.data('uniqueid'));\n        if (msg.get('type') === 'file_upload') {\n            msg.set('state', constants.MSG_PENDING);\n            this.startUploadFile(msg, $msg);\n        }\n        else\n            this.sendMessage(msg);\n        ev.preventDefault();\n    },\n\n    removeFileErrorMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message');\n        this.removeMessage($msg);\n        ev.preventDefault();\n        this.chat_item.updateChatError();\n    },\n\n    onUpdatePlyr: function (ev) {\n        this.$('.plyr-video-container').removeClass('active-plyr-container');\n        if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n            let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n            if ($message.length) {\n                $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n            }\n        }\n    },\n});\n\n\nxabber.ChatContentPlaceholderView = xabber.BasicView.extend({\n    className: 'chat-body-content-placeholder-wrap',\n    template: templates.chat_content_placeholder,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        return this;\n    },\n\n    render: function () {\n    },\n});\n\nxabber.ExpandedMessagePanel = xabber.BasicView.extend({\n    className: 'modal expanded-message',\n    template: templates.group_chats.pinned_message_panel,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .collapsed-forwarded-message\": \"expandFwdMessage\",\n        \"click .chat-message\": \"onClickPinnedMessage\",\n        'click .chat-msg-location-content': 'onClickExpandedMessageLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.chat_content = options.chat_content;\n        this.message = options.message;\n    },\n\n    open: function ($message) {\n        this.$el.css('width', $message.find('.chat-text-content').text().length <= 60 ? 540 : xabber.main_panel.$el.width() * 0.715);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.modal-content').css('height', this.$el.height() - 12);\n                if ($message.find('.plyr-video-container').length) {\n                    this.chat_content.initPlyrEmbedPlayer($message, this.message);\n                }\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        $message.find('.right-side .msg-delivering-state').remove();\n        this.$('.modal-content').html($message);\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onClickLink:function (ev) {\n        this.chat_content.onClickLink(ev);\n    },\n\n    onClickPinnedMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('msg-hyperlink')) {\n            ev && ev.preventDefault();\n            let link = $elem.attr('href');\n            utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                if (result)\n                    utils.openWindow(link);\n            });\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.forwarded_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n            let $audio_elem = $elem.closest('.link-file'),\n                f_url = $audio_elem.find('.file-link-download').attr('href');\n            $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n            if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                    uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                    file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                if (file && file.key) {\n                    this.chat_content.model.messages.decryptFile(f_url, file.key).then((result) => {\n                        if (result === null)\n                            return;\n                        $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                    });\n                }\n            } else {\n                $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n            }\n            return;\n        }\n        if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n            let $audio_elem = $elem.closest('.link-file');\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n    },\n    onClickExpandedMessageLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    expandFwdMessage: function (ev) {\n        let $target = $(ev.target),\n            unique_id = $target.data('uniqueid'),\n            msg = this.chat_content.buildMessageHtml(this.account.forwarded_messages.get(unique_id)),\n            expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this.chat_content});\n        expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n        this.chat_content.updateMessageInChat(msg, this.account.forwarded_messages.get(unique_id));\n        this.chat_content.initPopup(msg);\n        expanded_fwd_message.open(msg);\n    }\n});\n\nxabber.ChatsBase = Backbone.Collection.extend({\n    model: xabber.Chat\n});\n\nxabber.Chats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    registerQuillEmbeddedsTags: function () {\n        let Inline = Quill.import('blots/inline'),\n            Image = Quill.import('formats/image');\n\n        class Mention extends Inline {\n            static create(paramValue) {\n                let node = super.create(), data, target;\n                if (paramValue.on_format){\n                    data = paramValue.data;\n                    target = paramValue.target;\n                } else {\n                    data = JSON.parse(paramValue);\n                    target = data.jid ? ('?jid=' + data.jid) : (data.id ?  ('?id=' + data.id) : \"\");\n                    node.innerHTML = data.nickname;\n                }\n                data.is_me && node.classList.add('ground-color-100');\n                node.setAttribute('data-target', target);\n                return node;\n            }\n\n            static value(node) {\n                return node.innerHTML;\n            }\n\n            static formats(node) {\n                return {\n                    on_format: true,\n                    data: {\n                        nickname: node.innerHTML,\n                        is_me: node.classList.contains(\"ground-color-100\")\n                    },\n                    target: node.getAttribute('data-target')\n                };\n            }\n        }\n        Mention.blotName = 'mention';\n        Mention.tagName = 'mention';\n        Mention.prototype.optimize = function () {};\n\n        Quill.register(Mention);\n    }\n});\n\nxabber.OpenedChats = xabber.ChatsBase.extend({\n    comparator: function (item1, item2) {\n        let t1 = item1.get('timestamp'),\n            t2 = item2.get('timestamp');\n        return t1 > t2 ? -1 : (t1 < t2 ? 1 : 0);\n    },\n\n    initialize: function (models, options) {\n        this.on(\"change:timestamp\", this.sort, this);\n    },\n\n    update: function (chat, event) {\n        let contains = chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_opened_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_opened_chat\", chat);\n        }\n    }\n});\n\nxabber.ClosedChats = xabber.ChatsBase.extend({\n    update: function (chat, event) {\n        let contains = !chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_closed_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_closed_chat\", chat);\n        }\n    }\n});\n\nxabber.AccountChats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.mam_requests = 0;\n        this.deferred_mam_requests = [];\n        this.account.contacts.on(\"open_chat\", this.openChat, this);\n        this.account.contacts.on(\"open_mention\", this.openMention, this);\n        this.account.contacts.on(\"presence\", this.onPresence, this);\n        this.account.contacts.on(\"roster_push\", this.onRosterPush, this);\n    },\n\n    getSavedChat: function () {\n      let jid = this.account.get('jid'),\n          attrs = {jid: jid, type: 'saved', name: xabber.getString(\"saved_messages__header\"), id: `${jid}:saved`},\n          chat = this.get(attrs.id);\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {account: this.account});\n            this.add(chat);\n            chat.trigger(\"load_last_history\");\n        }\n        return chat;\n    },\n\n    getChat: function (contact, identifier, sync_created) {\n        let attrs = null,\n            id = identifier && `${contact.hash_id}:${identifier}`,\n            chat = id ? this.get(id) : this.get(contact.hash_id);\n        if (id)\n            attrs = {id};\n        if (identifier === 'encrypted')\n            attrs.type = identifier;\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {contact: contact, sync_created: sync_created});\n            this.add(chat);\n            contact.set('known', true);\n        }\n        return chat;\n    },\n\n    openChat: function (contact, options) {\n        options = options || {};\n        _.isUndefined(options.clear_search) && (options.clear_search = true);\n        let chat = this.getChat(contact, options.encrypted && 'encrypted');\n        if (options && options.force_opened_state){\n            chat.set('opened', true);\n            chat.set('timestamp', Date.now());\n        }\n        chat.trigger('open', {clear_search: options.clear_search, right_force_close: options.right_force_close});\n    },\n\n    openMention: function (contact, unique_id) {\n        let chat = this.getChat(contact);\n        xabber.body.setScreen('mentions', {right: 'mentions', chat_item: chat.item_view});\n        unique_id && chat.getMessageContext(unique_id, {mention: true});\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message');\n    },\n\n    onStartedMAMRequest : function (deferred) {\n        this.deferred_mam_requests.push(deferred);\n        this.runMAMRequests();\n    },\n\n    onCompletedMAMRequest: function (deferred) {\n        this.mam_requests--;\n        this.runMAMRequests();\n    },\n\n    runMAMRequests: function () {\n        while (this.mam_requests < xabber.settings.mam_requests_limit) {\n            let deferred = this.deferred_mam_requests.shift();\n            if (!deferred) break;\n            this.mam_requests++;\n            deferred.resolve();\n        }\n    },\n\n    parsePubSubNode: function (node) {\n        if (!node)\n            return null;\n        let is_member_id = node.indexOf('#');\n        if (is_member_id !== -1)\n            return node.slice(is_member_id + 1, node.length);\n        else\n            return null;\n    },\n\n    receivePubsubMessage: function ($message) {\n        let photo_id =  $message.find('info').attr('id'),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if (node.indexOf(Strophe.NS.OMEMO) > -1)\n            return;\n        if (node.indexOf(Strophe.NS.PUBSUB_AVATAR_METADATA) > -1) {\n            let member_id = this.parsePubSubNode(node),\n                photo_url =  $message.find('info').attr('url'),\n                contact = this.account.contacts.get(from_jid);\n            if (contact) {\n                if (member_id) {\n                    if (contact.my_info) {\n                        if ((member_id == contact.my_info.get('id')) && (photo_id == contact.my_info.get('avatar'))) {\n                            contact.trigger('update_my_info');\n                            return;\n                        }\n                    }\n                    if (photo_id && (this.account.chat_settings.getHashAvatar(member_id) != photo_id)) {\n                        let member_node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + member_id;\n                        contact.getAvatar(photo_id, member_node, (new_avatar) => {\n                                this.account.chat_settings.updateCachedAvatars(member_id, photo_id, new_avatar);\n                                if (contact.my_info) {\n                                    if (member_id == contact.my_info.id) {\n                                        contact.my_info.set({avatar: photo_id, b64_avatar: new_avatar});\n                                        contact.trigger('update_my_info');\n                                    }\n                                }\n                                let participant = contact.participants && contact.participants.get(member_id);\n                                if (participant) {\n                                    let avatar_url = $message.find('info').attr('url');\n                                    participant.set({avatar: photo_id, b64_avatar: new_avatar});\n                                    avatar_url && participant.set('avatar_url', avatar_url);\n                                    this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                }\n                            }, () => {\n                                if (photo_url) {\n                                    this.account.chat_settings.updateCachedAvatars(member_id, photo_id, photo_url);\n                                    if (contact.my_info) {\n                                        if (member_id == contact.my_info.id) {\n                                            contact.my_info.set({avatar: photo_id, b64_avatar: photo_url});\n                                            contact.trigger('update_my_info');\n                                        }\n                                    }\n                                    let participant = contact.participants && contact.participants.get(member_id);\n                                    if (participant) {\n                                        participant.set({avatar: photo_id, b64_avatar: photo_url});\n                                        this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                    }\n                                    return;\n                                }\n                            });\n                    }\n                }\n                else if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.PUBSUB_AVATAR) {\n                    if (!photo_id) {\n                        let image = Images.getDefaultAvatar(contact.get('name'));\n                        contact.cached_image = Images.getCachedImage(image);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', null);\n                        contact.set('image', image);\n                        contact.updateCachedInfo();\n                        return;\n                    }\n                    if ((photo_id !== \"\") && (contact.get('photo_hash') === photo_id)) {\n                        return;\n                    } else if (photo_url) {\n                        contact.cached_image = photo_url;\n                        contact.set({photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR});\n                    }\n                    contact.getAvatar(photo_id, Strophe.NS.PUBSUB_AVATAR_DATA, (data_avatar) => {\n                        contact.cached_image = Images.getCachedImage(data_avatar);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', photo_id);\n                        contact.set('image', data_avatar);\n                        contact.updateCachedInfo();\n                    });\n                }\n            }\n            else if (from_jid === this.account.get('jid')) {\n                if (photo_url) {\n                    let avatar_attrs = {photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR};\n                    this.account.cached_image = photo_url;\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                if (!photo_id) {\n                    let image = Images.getDefaultAvatar(this.account.get('name'));\n                    this.account.cached_image = Images.getCachedImage(image);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: image};\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                this.account.getAvatar(photo_id, (data_avatar) => {\n                    this.account.cached_image = Images.getCachedImage(data_avatar);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: data_avatar};\n                    this.account.save(avatar_attrs);\n                });\n            }\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type'),\n            $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n        if (this.account.connection.do_synchronization && Strophe.getBareJidFromJid($(message).attr('from')) !== this.account.get('jid')) {\n            let time = $message.children('time').attr('stamp') || $message.children('delay').attr('stamp'),\n                timestamp = Number(moment(time));\n            (timestamp > this.account.last_msg_timestamp) && (this.account.last_msg_timestamp = timestamp);\n        }\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n        if (type === 'chat' || (type === 'normal') || (!type && !$mam.length)) {\n            return this.receiveChatMessage(message);\n        }\n        if (type === 'error') {\n            return this.receiveErrorMessage(message);\n        }\n    },\n\n    receiveHeadlineMessage: function (message) {\n        let $message = $(message),\n            msg_from = Strophe.getBareJidFromJid($message.attr('from')),\n            $stanza_received = $message.find(`received[xmlns=\"${Strophe.NS.DELIVERY}\"]`),\n            $echo_msg = $message.children(`x[xmlns=\"${Strophe.NS.DELIVERY}\"]`).children('message');\n        if ($stanza_received.length) {\n            let stanza_id = $stanza_received.children('stanza-id').attr('id'),\n                origin_msg_id = $stanza_received.children('origin-id').first().attr('id');\n            if (origin_msg_id) {\n                let msg = this.account.messages.get(origin_msg_id || stanza_id),\n                    delivered_time = $stanza_received.children('time').attr('stamp') || moment(stanza_id/1000).format();\n                if (!msg)\n                    return;\n                let pending_message = this.account._pending_messages.find(msg => msg.unique_id == (origin_msg_id || stanza_id));\n                if (!pending_message)\n                    return;\n                let chat = this.account.chats.get(pending_message.chat_hash_id);\n                if (chat && chat.get('group_chat'))\n                    return;\n                if (!msg.get('stanza_id') && msg.get('locations'))\n                    msg.set({'stanza_id': stanza_id})\n                msg.set({'state': constants.MSG_SENT, 'time': delivered_time, 'timestamp': Number(moment(delivered_time))}); // delivery receipt, changing on server time\n                chat.setStanzaId(pending_message.unique_id, stanza_id);\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            return;\n        }\n\n        if ($echo_msg.length) {\n            console.log(this.account._pending_messages);\n            console.log(this.account._pending_messages.length);\n            let origin_msg_id = $echo_msg.children('origin-id').first().attr('id'),\n                pending_message = this.account._pending_messages.find(msg => msg.unique_id == origin_msg_id);\n            if (pending_message) {\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            console.log(this.account._pending_messages.length);\n            return this.receiveChatMessage($echo_msg[0], {echo_msg: true, stanza_id: $echo_msg.children('stanza-id').attr('id')});\n        }\n\n        let $token_revoke = $message.children(`revoke[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n        if ($token_revoke.length) {\n            $token_revoke.children('device').each((idx, token) => {\n                let $token = $(token),\n                    token_uid = $token.attr('id');\n                if (!token_uid)\n                    return;\n                if (this.account.get('x_token') && this.account.get('x_token').token_uid === token_uid) {\n                    this.account.deleteAccount();\n                    return;\n                }\n                if (this.account.x_tokens_list) {\n                    let token = this.account.x_tokens_list.find(token => token.token_uid == token_uid),\n                        token_idx = token ? this.account.x_tokens_list.indexOf(token) : -1;\n                    (token_idx > -1) && this.account.x_tokens_list.splice(token_idx, 1);\n                }\n            });\n            this.account.settings_right && this.account.settings_right.updateXTokens();\n            return;\n        }\n\n        if ($message.find(`event[xmlns=\"${Strophe.NS.PUBSUB}#event\"]`).length) {\n            this.receivePubsubMessage($message);\n            return;\n        }\n\n        let contact = this.account.contacts.get(msg_from), chat;\n        if (contact) {\n            contact && (chat = this.account.chats.getChat(contact));\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version)\n                contact.trigger('update_participants');\n        }\n\n        if ($message.children(`attention[xmlns=\"${Strophe.NS.ATTENTION}\"]`).length && xabber.settings.call_attention) {\n            if (!chat)\n                return;\n            return chat.messages.createSystemMessage({from_jid: msg_from, message: xabber.getString(\"action_attention_requested\"), attention: true});\n        }\n\n        if ($message.find(`replace[xmlns=\"${Strophe.NS.REWRITE}#notify\"]`).length) {\n            !contact && (contact = this.account.contacts.get($message.find('replace').attr('conversation'))) && (chat = this.account.chats.getChat(contact));\n            if ($message.find('replace').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let stanza_id = $message.find('replace').attr('id'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id),\n                active_right_screen = xabber.body.screen.get('right'),\n                participant_messages = active_right_screen === 'participant_messages' && this.account.participant_messages || active_right_screen === 'message_context' && this.account.context_messages || active_right_screen === 'searched_messages' && this.account.searched_messages || [],\n                participant_msg_item = participant_messages.find(msg => msg.get('stanza_id') == stanza_id);\n            this.receiveChatMessage($message, {replaced: true});\n            if (participant_msg_item) {\n                participant_msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n            }\n            if (msg_item) {\n                msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n                if (contact && contact.get('pinned_message'))\n                    if (contact.get('pinned_message').get('unique_id') === msg_item.get('unique_id')) {\n                        contact.get('pinned_message').set('message', msg_item.get('message'));\n                        if (!chat.item_view.content)\n                            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                        chat.item_view.content.updatePinnedMessage();\n                    }\n                chat && chat.item_view.updateLastMessage(chat.last_message);\n            }\n        }\n        if ($message.find('retract-message').length) {\n            let is_encrypted = $message.find('retract-message').attr('type') == Strophe.NS.OMEMO;\n            !contact && (contact = this.account.contacts.get($message.find('retract-message').attr('conversation'))) && (chat = this.account.chats.getChat(contact,  is_encrypted && 'encrypted'));\n            if ($message.find('retract-message').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let $retracted_msg = $message.find('retract-message'),\n                retracted_msg_id = $retracted_msg.attr('id'),\n                retract_version = $retracted_msg.attr('version'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == retracted_msg_id || msg.get('contact_stanza_id') == retracted_msg_id);\n            chat.retracted_msg_id_list.push(retracted_msg_id);\n            if (msg_item) {\n                msg_item.set('is_unread', false);\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(msg_item);\n                chat.item_view.updateLastMessage(chat.last_message);\n            }\n            if (!chat.get('group_chat') && retract_version > this.account.retraction_version) {\n                this.account.retraction_version = retract_version;\n            }\n        }\n        if ($message.find('retract-user').length) {\n            let $retracted_user_msgs = $message.find('retract-user'),\n                retracted_user_id = $retracted_user_msgs.attr('id'),\n                msg_item = chat.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == retracted_user_id));\n            if (msg_item)\n                $(msg_item).each((idx, item) => {\n                    item.set('is_unread', false);\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.removeMessage(item);\n                });\n            chat.item_view.updateLastMessage(chat.last_message);\n        }\n        if ($message.find('retract-all').length) {\n            !contact && (contact = this.account.contacts.get($message.find('retract-all').attr('conversation'))) && (chat = this.getChat(contact, $message.find('retract-all').attr('type') == 'encrypted' && 'encrypted'));\n            if (!chat)\n                return;\n            let all_messages = chat.messages.models;\n            $(all_messages).each((idx, item) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(item);\n            });\n            chat.item_view.updateLastMessage();\n        }\n        return;\n    },\n\n    receiveStanzaId: function ($message, options) {\n        options.replaced && ($message = $message.children('replace').children('message'));\n        let $stanza_id, $contact_stanza_id, attrs = {},\n            from_bare_jid = options.from_bare_jid;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n            stanza_id = $(stanza_id);\n            if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && !($message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE_HTTP}\"]`).length || $message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE}\"]`).length)) {\n                if (stanza_id.attr('by') === from_bare_jid) {\n                    $stanza_id = stanza_id;\n                    $contact_stanza_id = stanza_id;\n                }\n                else\n                    $stanza_id = stanza_id;\n            }\n            else {\n                if (stanza_id.attr('by') === this.account.get('jid'))\n                    $stanza_id = stanza_id;\n                else\n                    $contact_stanza_id = stanza_id;\n            }\n        });\n        $stanza_id && (attrs.stanza_id = $stanza_id.attr('id'));\n        $contact_stanza_id && (attrs.contact_stanza_id = $contact_stanza_id.attr('id'));\n        return attrs;\n    },\n\n    receiveChatMessage: function (message, options) {\n        options = options || {};\n        let $message = $(message),\n            $forwarded = $message.find('forwarded'),\n            $delay = options.delay,\n            to_jid = $message.attr('to'),\n            to_bare_jid = Strophe.getBareJidFromJid(to_jid),\n            to_resource = to_jid && Strophe.getResourceFromJid(to_jid),\n            from_jid = $message.attr('from') || options.from_jid;\n\n        if ($message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && !options.forwarded) {\n            if (this.account.omemo)\n                this.account.omemo.receiveChatMessage(message, options);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (options.forwarded)\n                return;\n        }\n\n        if (!from_jid) {\n            from_jid = this.account.get('jid');\n        }\n        let from_bare_jid = Strophe.getBareJidFromJid(from_jid),\n            is_sender = from_bare_jid === this.account.get('jid');\n\n        if (options.forwarded && (!$forwarded.length || (options.xml))) {\n            return this.account.forwarded_messages.createFromStanza($message, {\n                is_forwarded: true,\n                forwarded_message: options.forwarded_message || null,\n                delay: $delay,\n                replaced: options.replaced,\n                from_jid: from_jid,\n                xml: options.xml\n            });\n        }\n\n        if ($forwarded.length && !options.xml) {\n            let $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n            if ($mam.length) {\n                if (!Object.keys(options).length)\n                    return;\n                $forwarded = $mam.children('forwarded');\n                if ($forwarded.length) {\n                    $message = $forwarded.children('message');\n                    $delay = $forwarded.children('delay');\n                }\n                let stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid});\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    is_mam: true,\n                    delay: $delay,\n                    stanza_id: stanza_ids.stanza_id || $mam.attr('id'),\n                    contact_stanza_id: stanza_ids.contact_stanza_id\n                }));\n            }\n            let $carbons = $message.find(`[xmlns=\"${Strophe.NS.CARBONS}\"]`);\n            if (!options.carbon_copied && $carbons.length && ['received', 'sent'].includes($carbons[0].tagName)) {\n                if ($message.find('invite').length) {\n                    if ($carbons[0].tagName === 'sent')\n                        return;\n                }\n                if (!is_sender)\n                    return;\n                $forwarded = $carbons.children('forwarded');\n                if ($forwarded.length)\n                    $message = $forwarded.children('message');\n                if ($carbons.find(`request[xmlns=\"${Strophe.NS.DELIVERY}\"][to=\"${to_bare_jid}\"]`).length)\n                    return;\n                if (this.account.fast_connection && ($message.attr('from') === this.account.fast_connection.jid))\n                    return;\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    carbon_copied: true, carbon_direction: $carbons[0].tagName\n                }));\n            }\n            let forwarded_msgs = [];\n            $forwarded = $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n                $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]') :\n                $message.children('envelope').children('content').children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]');\n            $forwarded.each((idx, forwarded_msg) => {\n                let $forwarded_msg = $(forwarded_msg),\n                    $forwarded_message = $forwarded_msg.children('message'),\n                    $forwarded_delay = $forwarded_msg.children('delay');\n                let forwarded_message = this.receiveChatMessage($forwarded_message[0], {\n                    forwarded: true,\n                    pinned_message: options.pinned_message,\n                    participant_message: options.participant_message,\n                    searched_message: options.searched_message,\n                    is_searched: options.is_searched,\n                    context_message: options.context_message,\n                    from_jid: from_jid,\n                    delay: $forwarded_delay\n                });\n                forwarded_msgs.push(forwarded_message);\n            });\n            if (!Object.keys(options).length && !forwarded_msgs.length)\n                return;\n            return this.receiveChatMessage($message[0], _.extend({\n                forwarded_message: forwarded_msgs.length ? forwarded_msgs : null,\n                xml: $message[0]\n            }, options));\n        }\n\n        if (!options.is_mam && to_resource && to_resource !== this.account.resource) {\n            xabber.warn('Message to another resource');\n            xabber.warn(message);\n        }\n\n        let contact_jid = is_sender ? to_bare_jid : from_bare_jid;\n        options.replaced && (contact_jid = $message.children('replace').attr('conversation'));\n\n        if (contact_jid === this.account.get('jid')) {\n            if (options.carbon_copied && options.carbon_direction === 'sent' || !options.carbon_copied) {\n                let chat = this.getSavedChat(),\n                    stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n                return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n            } else {\n                xabber.warn('Message from me to me');\n                xabber.warn(message);\n                return;\n            }\n        }\n\n        let contact = this.account.contacts.mergeContact(contact_jid),\n            chat = this.account.chats.getChat(contact, (options.encrypted || options.not_encrypted) && 'encrypted'),\n            stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version){\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && chat.contact.get('pinned_message')){\n                    $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '#system-message\"]').each((idx, x_elem) => {\n                        let $user = $(x_elem).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                        if ($user.length) {\n                            let user_id = $user.attr('id'),\n                                user_jid = $user.children('jid').text();\n                            if (chat.contact.get('pinned_message').get('from_jid') === user_jid) {\n                                let pinned_message = chat.contact.get('pinned_message'),\n                                    user_info = {\n                                        id: user_id,\n                                        jid: user_jid,\n                                        nickname: $user.children('nickname').text() || user_jid || user_id,\n                                        role: $user.children('role').text(),\n                                        avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                                        avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                                        badge: $user.children('badge').text()\n                                    };\n                                pinned_message.set('user_info', user_info);\n                                chat.contact.set('pinned_message', pinned_message);\n                            }\n                        }\n                    });\n                }\n            }\n        }\n        if (chat.contact.get('group_chat') && options.carbon_direction === 'sent' && !$message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`).length)\n            return;\n\n        return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n    },\n\n    receiveErrorMessage: function (message) {\n        let msgid = message.getAttribute('id'),\n            origin_id = $(message).children('origin-id').attr('id');\n        if (msgid) {\n            let code = $(message).find('error').attr('code'),\n                msg = this.account.messages.get(origin_id || msgid);\n            if (msg) {\n                if (code === '405') {\n                    msg.set('state', constants.MSG_BLOCKED);\n                }\n                if (code === '406') {\n                    msg.set('state', constants.MSG_ERROR);\n                }\n            }\n        }\n    },\n\n    onPresence: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onPresence(type);\n    },\n\n    onRosterPush: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onRosterPush(type);\n    }\n});\n\nxabber.AddGroupChatView = xabber.SearchView.extend({\n    className: 'modal main-modal add-group-chat-modal add-contact-modal',\n    template: templates.group_chats.add_group_chat,\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_ITEM,\n    ps_selector: '.rich-textarea',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .dropdown-content#select-account-for-creating-groupchat\": \"selectAccount\",\n        \"click .btn-add\": \"addGroupChat\",\n        \"keyup .input-group-chat-name input\": \"updateGroupJid\",\n        \"keyup .rich-textarea\": \"showPlaceholder\",\n        \"keyup .input-group-chat-jid input\": \"fixJid\",\n        \"click .btn-cancel\": \"close\",\n        \"click .property-variant\": \"changePropertyValue\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        this.setDefaultSettings(options);\n        let accounts = options.account ? [options.account] : xabber.accounts.connected;\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-creating-groupchat').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-creating-groupchat').append(\n                    this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$el.openModal({\n            ready: () => {\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown(dropdown_settings);\n                this.$('.property-field .dropdown-button').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n                this.$('input[name=\"chat_name\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    setDefaultSettings: function (options) {\n        this.$('.incognito-field .public-item-wrap').showIf(options.public);\n        this.$('.incognito-field .incognito-item-wrap').showIf(options.incognito);\n        if (options.public)\n            this.$('.modal-header span').text(xabber.getString(\"create_group\"));\n        if (options.incognito)\n            this.$('.modal-header span').text(xabber.getString(\"create_incognito_group\"));\n        this.$('input[name=chat_jid]').removeClass('fixed-jid').val(\"\");\n        this.$('#new_chat_domain').val(\"\");\n        this.$('input[name=chat_name]').val(\"\");\n        this.$('.description-field .rich-textarea').text(\"\");\n        this.$('.btn-add').addClass('non-active');\n        this.showPlaceholder();\n        this.$('span.errors').text('').addClass('hidden');\n        this.$('input').removeClass('invalid');\n        let $global_wrap = this.$('.global-dropdown-wrap'),\n            default_global_value = $global_wrap.find('.dropdown-content .default-value');\n        $global_wrap.find('.global-item-wrap .property-value').attr('data-value', default_global_value.attr('data-value')).text(default_global_value.text());\n        let $membership_wrap = this.$('.membership-dropdown-wrap'),\n            default_membership_value = $membership_wrap.find('.dropdown-content .default-value');\n        $membership_wrap.find('.membership-item-wrap .property-value').attr('data-value', default_membership_value.attr('data-value')).text(default_membership_value.text());\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.input-group-chat-domain').addClass('hidden');\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n                .replaceWith(this.renderAccountItem(account));\n        let all_servers = this.account.get('groupchat_servers_list');\n        all_servers = all_servers.sort((x,y) => { return x == this.account.domain ? -1 : y == this.account.domain ? 1 : 0; })\n        if (all_servers.length){\n            this.$('.xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n            this.$('.select-xmpp-server .caret').removeClass('hidden')\n            this.$('.xmpp-server-item-wrap .property-value').removeClass('hidden')\n        }\n        else\n            this.setCustomDomain(this.$('.property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.modal-content .jid-field .set-default-domain').remove();\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'}).text(all_servers[i]).insertBefore(this.$('.modal-content .jid-field .set-custom-domain'));\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_chat_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    setCustomDomain: function ($property_value) {\n        this.$('#new_chat_domain').val(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomain($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.input-group-chat-domain').addClass('hidden');\n            this.$('#new_chat_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden')\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateGroupJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        if (!elem.hasClass('fixed-jid')) {\n            let text = slug(this.$('.input-group-chat-name input').get(0).value, {lower: true});\n            this.$(\"label[for=new_chat_jid]\").addClass('active');\n            this.$('.input-field #new_chat_jid').get(0).value = text;\n        }\n        this.$('.btn-add').switchClass('non-active', !this.$('.input-group-chat-name input').get(0).value);\n    },\n\n    showPlaceholder: function () {\n        let textarea_is_empty = (this.$('.rich-textarea ').text() !== \"\") ? false : true;\n        this.$('.rich-textarea-wrap .placeholder').hideIf(!textarea_is_empty);\n    },\n\n    fixJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        !elem.hasClass('fixed-jid') && elem.addClass('fixed-jid');\n        (elem.get(0).value == \"\") && elem.removeClass('fixed-jid');\n    },\n\n    createGroupChat: function () {\n        let name = this.$('input[name=chat_name]').val(),\n            chat_jid = this.$('input[name=chat_jid]').val() ? this.$('input[name=chat_jid]').val() : undefined,\n            privacy = this.$('.incognito-field .property-wrap:not(.hidden) .property-value').attr('data-value'),\n            domain = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            searchable = this.$('input[name=\"group_index\"]:checked').attr('data-value'),\n            description = this.$('.description-field .rich-textarea').text() || \"\",\n            model = this.$('input[name=\"group_membership\"]:checked').attr('data-value'),\n            iq = $iq({type: 'set', to: domain}).c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#create'})\n                .c('name').t(name).up()\n                .c('privacy').t(privacy).up()\n                .c('index').t(searchable).up()\n                .c('description').t(description).up()\n                .c('membership').t(model).up();\n            if (chat_jid)\n                iq.c('localpart').t(chat_jid);\n        this.account.sendIQFast(iq, (iq) => {\n            let group_jid = $(iq).find('query localpart').text().trim() + '@' + $(iq).attr('from').trim(),\n                contact = this.account.contacts.mergeContact(group_jid);\n            contact.set('group_chat', true);\n            contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            this.close();\n            xabber.chats_view.updateScreenAllChats();\n            contact.trigger(\"open_chat\", contact);\n            if (!(this.account.connection && this.account.connection.do_synchronization)) {\n                let iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n                    .c('item', {jid: group_jid + '/' + moment.now()});\n                this.account.sendIQFast(iq_set_blocking);\n            }\n\n        }, () => {\n            this.$('span.errors').removeClass('hidden').text(xabber.getString(\"groupchat_jid_already_exists\"));\n            this.$('input[name=\"chat_jid\"]').addClass('invalid');\n        });\n    },\n\n    addGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            $(ev.target).blur();\n            return;\n        }\n        let xmpp_server = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            input_value = this.$('input[name=chat_jid]').val();\n        if (this.$('input[name=chat_name]').val() == \"\") {\n            this.$('span.errors').text(xabber.getString(\"group_is_empty\")).removeClass('hidden');\n            this.$('input[name=\"chat_name\"]').addClass('invalid');\n        } else {\n            if ((input_value == \"\")||((input_value.search(/[А-яЁё]/) == -1)&&(input_value.search(/\\s/) == -1)&&(input_value != \"\"))) {\n                this.$('span.errors').text('').addClass('hidden');\n                this.$('input').removeClass('invalid');\n                let iq = $iq({type: 'get', to: xmpp_server}).c('query', {xmlns: Strophe.NS.DISCO_INFO}),\n                    group_chats_support;\n                this.account.sendIQFast(iq, (iq) => {\n                    $(iq).children('query').children('feature').each((elem, item) => {\n                        if ($(item).attr('var') == Strophe.NS.GROUP_CHAT)\n                            group_chats_support = true;\n                    });\n                    if (group_chats_support)\n                        this.createGroupChat();\n                    else {\n                        this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_server_does_not_support\")}`);\n                        this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                    }\n                }, (response) => {\n                    this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_invalid_domain\")}`); // !!!!!!!!!!!!!!!!!! :::::\n                    this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                });\n            }\n            else {\n                this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_localpart_invalid\")}`);\n                this.$('input[name=\"chat_jid\"]').addClass('invalid');\n            }\n        }\n    }\n});\n\nxabber.ChatsView = xabber.SearchPanelView.extend({\n    className: 'recent-chats-container container',\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    main_container: '.chat-list',\n    template: templates.chats_panel,\n\n    _initialize: function () {\n        this.active_chat = null;\n        this.model.on(\"add\", this.onChatAdded, this);\n        this.model.on(\"destroy\", this.onChatRemoved, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"add_opened_chat\", this.onChangedActiveStatus, this);\n        this.model.on(\"change:unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:const_unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:timestamp\", this.updateChatPosition, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('.read-all-button').click(this.readAllMessages.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onWindowResized, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (options.right === undefined)\n            this.active_chat = null;\n        this.$('.chat-list-wrap').switchClass('with-padding', xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').length);\n        if (options.right !== 'chat' && !options.no_unread && options.right !== 'searched_messages' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search) {\n            this.clearSearch();\n            if (xabber.toolbar_view.$('.active').hasClass('all-chats') && !xabber.toolbar_view.data.get('account_filtering')) {\n                this.showAllChats();\n            }\n        }\n    },\n\n    readAllMessages: function () {\n        let chats = this.model,\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (active_toolbar.hasClass('chats')) {\n            let private_chats = chats.filter(chat => chat.get('saved') || !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            private_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('all-chats')) {\n            let all_chats = chats.filter(chat => chat.get('saved') || chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            all_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('group-chats')) {\n            let group_chats = chats.filter(chat => chat.get('saved') || chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            group_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onUpdatedScreen: function (name) {\n        this.$('.read-all-button').switchClass('hidden', !xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo).active.unread').length);\n    },\n\n    // onWindowResized: function (options) {\n    //     options.size_changed && this.onScroll();\n    // },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        // if (ev.originalEvent.deltaY > 0)\n        //     this.onScroll();\n    },\n\n    hideChatsFeedback: function () {\n        clearTimeout(this._load_chats_timeout);\n        this.$('.load-chats-feedback').addClass('hidden');\n        this.updateScrollBar();\n        this._load_chats_timeout = null;\n    },\n\n    // onScroll: function () {\n    //     if (this.getScrollBottom() < 12 && !this._load_chats_timeout && this.isVisible()) {\n    //         this._load_chats_timeout = setTimeout(() => {\n    //             this.hideChatsFeedback();\n    //         }, 5000);\n    //         let accounts = xabber.accounts.connected.filter(account => !account.roster.conversations_loaded && account.connection && account.connection.do_synchronization);\n    //         if (accounts.length) {\n    //             this.$('.load-chats-feedback').text(xabber.getString(\"placeholder_loading\")).removeClass('hidden');\n    //             this.updateScrollBar();\n    //         }\n    //         accounts.forEach((account) => {\n    //             let options = {max: xabber.settings.mam_messages_limit};\n    //             account.roster.last_chat_msg_id && (options.after = account.roster.last_chat_msg_id);\n    //             account.roster.syncFromServer(options);\n    //         });\n    //     }\n    // },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    onChatAdded: function (chat) {\n        this.addChild(chat.id, chat.item_view);\n        this.updateChatPosition(chat);\n    },\n\n    onChatRemoved: function (chat, options) {\n        if (this.active_chat === this.child(chat.id)) {\n            this.active_chat = null;\n            xabber.body.showChatPlaceholder();\n        }\n        this.removeChild(chat.id, options);\n        this.updateScrollBar();\n    },\n\n    onChangedActiveStatus: function (chat) {\n        if (chat.get('active')) {\n            let previous_chat = this.active_chat;\n            this.active_chat = this.child(chat.id);\n            previous_chat && previous_chat.model.set('active', false);\n        }\n    },\n\n    onChangedReadStatus: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (!active_toolbar.hasClass('unread') || (active_toolbar.hasClass('unread') && (item.get('unread') || item.get('const_unread'))))\n            return;\n        view.detach();\n        if (!this.$('.chat-item').length && active_toolbar.hasClass('unread')) {\n            active_toolbar.click();\n        }\n    },\n\n    replaceChatItem: function (item, chats, pinned_chats) {\n        let view = this.child(item.id);\n        if (view && item.get('pinned') && item.get('pinned') !== '0' && pinned_chats ){\n            pinned_chats = pinned_chats.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            let index = pinned_chats.indexOf(item);\n            if (index === 0) {\n                this.$('.pinned-chat-list').prepend(view.$el);\n            } else {\n                let $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                while (!$chat_item.length && index > 0) {\n                    index--;\n                    $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                }\n                $chat_item.after(view.$el);\n            }\n        }\n        else if (view && (item.get('timestamp') || item.get('saved'))) {\n            view.$el.detach();\n            let index = chats.indexOf(item);\n            if (index === 0) {\n                this.$('.chat-list').prepend(view.$el);\n            } else {\n                this.$('.chat-list .chat-item').eq(index - 1).after(view.$el);\n            }\n        }\n    },\n\n    updateChatPosition: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (active_toolbar.hasClass('unread') && !(item.get('unread') || item.get('const_unread')))\n            return;\n        if (active_toolbar.hasClass('account-item') && view.account.get('jid') !== active_toolbar.attr('data-jid')){\n            return;\n        }\n        active_toolbar.hasClass('group-chats') && (view.model.get('saved') || view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('chats') && (view.model.get('saved') || !view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        (active_toolbar.hasClass('all-chats') || active_toolbar.hasClass('settings-modal') || (xabber.accounts.enabled.length === 1 && active_toolbar.hasClass('saved-chats'))) && (view.model.get('saved') || !view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('archive-chats') && (view.model.get('saved') || view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved') || chat.get('archived')));\n        active_toolbar.hasClass('saved-chats') && (xabber.accounts.enabled.length !== 1) && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved'))));\n        active_toolbar.hasClass('mentions') && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => (chat.get('jid') === chat.account.domain))));\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = this.child(selection.data('id'));\n                view && view.open();\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.getChat(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')));\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            view = this.child(selection.data('id'));\n            view && view.open();\n        }\n    },\n\n    openChat: function (view, options) {\n        if (!view.content)\n            view.content = new xabber.ChatContentView({chat_item: view});\n        options = options || {};\n        this.$('.list-item.active').removeClass('active');\n        view.updateActiveStatus();\n        let scrolled_top = xabber.chats_view.getScrollTop();\n        options.clear_search && this.clearSearch();\n        if (view.contact && !view.contact.get('in_roster') && (view.model.get('is_accepted') == false || (view.model.get('is_accepted') == true && view.contact.invitation))) {\n            if (view.model.get('is_accepted') == false){\n                view.model.set('display', true);\n                view.model.set('active', true);\n                xabber.body.setScreen('all-chats', {right: 'group_invitation', contact: view.contact });\n            } else if (view.model.get('is_accepted') == true && view.contact.invitation){\n                view.contact.invitation.join();\n            }\n        }\n        else {\n            if (xabber.toolbar_view.$('.active').hasClass('contacts'))\n                this.updateScreenAllChats();\n            if (!view.model.get('history_loaded')) {\n                if (\n                    (view.model.get('const_unread') || view.model.get('unread'))\n                    && view.model.get('last_read_msg') &&\n                    (!view.content._prev_scrolltop || (view.content._prev_scrolltop && view.content._is_scrolled_bottom) || (view.model.get('show_new_unread') === true))\n                    && !view.model.get('loading_unread_history') && !options.force_bottom && xabber.body.screen.get('chat_item') !== view\n                ){\n                    view.model.set('show_new_unread', false);\n                    view.model._wait_load_unread_history = new $.Deferred();\n                    view.content._no_scrolling_event = true;\n                    view.content.loadUnreadHistory();\n                } else if (view.model.messages.length < 20)\n                    view.content.loadPreviousHistory();\n            }\n            if (!options.right_force_close && (\n                xabber.body.screen.get('right_contact') && (xabber.body.screen.get('right') === 'chat' || xabber.body.screen.get('right') === 'message_context' )\n            )) {\n                if (view.model.get('saved'))\n                    xabber.body.setScreen((options.screen || 'all-chats'), {right_contact: ''});\n                else if(xabber.right_contact_panel_saveable)\n                    view.contact.showDetailsRight('all-chats', {right_saved: true, encrypted: view.model.get('encrypted')});\n                else\n                    view.contact.showDetailsRight('all-chats', {right_saved: false});\n            }\n            if (!view.model.get('loading_unread_history')){\n                let current_scrolling = view.content.getScrollTop() || view.content._scrolltop,\n                    scrolled_to_bottom = view.content.isScrolledToBottom();\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                !scrolled_to_bottom && view.content.scrollTo(current_scrolling);\n            } else {\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    show_placeholder: true,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                view.model.set('active', true);\n                view.model._wait_load_unread_history.done(() => {\n                    if (xabber.body.screen.get('chat_item') === view) {\n                        view.model.set('loading_unread_history', false)\n                        xabber.body.setScreen((options.screen || 'all-chats'), {\n                            right: 'chat',\n                            clear_search: options.clear_search,\n                            chat_item: view,\n                            blocked: view.model.get('blocked')\n                        },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                        view.content.scrollToUnread();\n                        view.content._long_reading_timeout = true;\n                        view.content._no_scrolling_event = false;\n                        view.content.onScroll();\n                        if (options.scroll_to_chat) {\n                            xabber.chats_view.scrollToChild(view.$el);\n                        } else {\n                            xabber.chats_view.scrollTo(scrolled_top);\n                        }\n                    }\n                });\n            }\n            if (view.contact && (!view.contact.get('vcard_updated') || (view.contact.get('group_chat') && !view.contact.get('group_info')) || (view.contact.get('vcard_updated') && !moment(view.contact.get('vcard_updated')).startOf('hour').isSame(moment().startOf('hour'))))) {\n                view.contact.getVCard();\n            }\n        }\n        if (options.scroll_to_chat) {\n            xabber.chats_view.scrollToChild(view.$el);\n        } else {\n            xabber.chats_view.scrollTo(scrolled_top);\n        }\n    },\n\n    showGroupChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            group_chats = [],\n            group_chats_pinned = [];\n        if (is_unread) {\n            group_chats = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!group_chats.length && !group_chats_pinned.length) {\n            group_chats = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        group_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (group_chats_pinned) {\n            group_chats_pinned = group_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            group_chats_pinned.forEach((chat) => {\n                let index = group_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            private_chats = [],\n            private_chats_pinned = [];\n        if (is_unread) {\n            private_chats = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!private_chats.length && !private_chats_pinned.length) {\n            private_chats = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        private_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (private_chats_pinned) {\n            private_chats_pinned = private_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            private_chats_pinned.forEach((chat) => {\n                let index = private_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChatsByAccount: function (account) {\n        xabber.body.setScreen('all-chats');\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            account_chats = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && (chat.get('pinned') === '0' || !chat.get('pinned'))),\n            account_chats_pinned = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        this.$(`.omemo-item:not([data-id=\"${account.get('jid')}\"])`).addClass('hidden');\n        account_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (account_chats_pinned) {\n            account_chats_pinned = account_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            account_chats_pinned.forEach((chat) => {\n                let index = account_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showArchiveChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            archive_chats = chats.filter(chat => !chat.get('saved') && chat.get('archived'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            archive_chats = archive_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        archive_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showSavedChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            saved_chats = chats.filter(chat => chat.get('saved'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            saved_chats = saved_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        saved_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n            this.$(`.chat-list .chat-item[data-id=\"${chat.id}\"] .chat-title`).text(chat.get('jid'));\n        });\n    },\n\n    showNotifications: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            notificatons_chats = chats.filter(chat => (chat.get('jid') === chat.account.domain || chat.contact && chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both' ));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            notificatons_chats = notificatons_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        notificatons_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showAllChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = no_unread || xabber.toolbar_view.data.get('account_filtering') ? false : xabber.toolbar_view.$('.active.unread').length,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (is_unread) {\n            all_chats = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && (chat.get('pinned') === '0' || !chat.get('pinned')) );\n            all_chats_pinned = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        if (xabber.toolbar_view.data.get('account_filtering')){\n            all_chats = all_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n            all_chats_pinned = all_chats_pinned.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n        }\n        all_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                let index = all_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    updateScreenAllChats: function () {\n        xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active')\n            .filter('.all-chats:not(.toolbar-logo)').addClass('active');\n        this.showAllChats();\n    }\n});\n\n  xabber.MessageItemView = xabber.BasicView.extend({\n      className: 'message-item list-item',\n      template: templates.message_item,\n      avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n      events: {\n          'click': 'openByClick'\n      },\n\n      _initialize: function () {\n          this.contact = this.model.contact;\n          this.account = this.contact ? this.contact.account : this.model.account;\n          this.$el.attr('data-id', this.model.id + '-' + this.cid);\n          this.$el.attr('data-contact-jid', this.contact.get('jid'));\n          this.updateName();\n          this.updateLastMessage();\n          this.updateAvatar();\n          this.updateColorScheme();\n          this.updateGroupChats();\n          this.updateIcon();\n          this.updateStatus();\n          this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n          this.contact.on(\"change:status\", this.updateStatus, this);\n          this.contact.on(\"change:name\", this.updateName, this);\n      },\n\n      updateName: function () {\n          this.$('.chat-title').text(this.contact.get('name'));\n      },\n\n      updateAvatar: function () {\n          let image = this.contact.cached_image;\n          this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n      },\n\n      updateStatus: function () {\n          let status = this.contact.get('status'),\n              status_message = this.contact.getStatusMessage();\n          this.$('.contact-status').attr('data-status', status);\n          this.$('.chat-icon').attr('data-status', status);\n          this.model.get('blocked') ? this.$('.contact-status-message').text(xabber.getString(\"action_contact_blocked\")) : this.$('.contact-status-message').text(status_message);\n      },\n\n      updateGroupChats: function () {\n          let is_group_chat = this.contact.get('group_chat');\n          this.$('.status').hideIf(is_group_chat);\n          this.updateIcon();\n          if (is_group_chat) {\n              this.$el.addClass('group-chat');\n              this.$('.chat-title').css('color', '#424242');\n              this.model.set('group_chat', true);\n          }\n      },\n\n      updateIcon: function () {\n          this.$('.chat-icon').addClass('hidden');\n          let ic_name = this.contact.getIcon();\n          ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n      },\n\n      updateColorScheme: function () {\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n      },\n\n      updateLastMessage: function (msg) {\n          msg || (msg = this.model);\n          if (!msg)\n              return;\n          let msg_time = msg.get('time'),\n              timestamp = msg.get('timestamp'),\n              forwarded_message = msg.get('forwarded_message'),\n              msg_files = msg.get('files') || [],\n              msg_images = msg.get('images') || [],\n              msg_locations = msg.get('locations') || [],\n              msg_text = (forwarded_message) ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n              msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes || {}, msg_from = \"\";\n          msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n          this.model.set({timestamp: timestamp});\n          if (this.model.get('group_chat'))\n              msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n          if (msg_files.length || msg_images.length || msg_locations.length) {\n              let $colored_span = $('<span class=\"text-color-500\"/>');\n              if (msg_files.length && msg_images.length)\n                  msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n              else {\n                  if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                      msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                  else if (msg_files.length > 0) {\n                      let total_size = 0;\n                      msg_files.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_images.length > 0) {\n                      let total_size = 0;\n                      msg_images.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_locations.length > 0) {\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                  }\n              }\n              this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n          }\n          else {\n              this.$('.last-msg').text(\"\").append(msg_text);\n              if (msg_from)\n                  this.$('.last-msg').prepend($('<span class=text-color-700>' + msg_from + ': ' + '</span>'));\n          }\n          this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n          this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n              .attr('title', pretty_datetime(msg_time));\n          this.$('.msg-delivering-state').showIf(msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n              .attr('data-state', msg.getState());\n      },\n\n      openByClick: function () {\n          let chat = this.account.chats.getChat(this.contact);\n          this.$el.closest('.left-panel-list-wrap').find('.list-item').removeClass('active');\n          this.$el.addClass('active');\n          xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n          xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n          if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n              if (xabber.right_contact_panel_saveable)\n                  chat.contact.showDetailsRight('all-chats', {right_saved: true});\n              else\n                  chat.contact.showDetailsRight('all-chats', {right_saved: false});\n          }\n          this.model.get('unique_id') && chat.getMessageContext(this.model.get('unique_id'), {message: true});\n      }\n  });\n\n\n  xabber.ForwardPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal forward-panel-modal',\n    template: templates.forward_panel,\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n      events: {\n          \"keyup .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\"\n      },\n\n    open: function (messages, account) {\n        this.messages = messages;\n        this.account = account;\n        this.$('.chat-list-wrap .pinned-chat-list').html(\"\");\n        this.$('.chat-list-wrap .chat-list').html(\"\");\n        this.$('.chat-list-wrap .contact-list').html(\"\");\n        this.saved_chat = false;\n        let chats = xabber.chats_view.model,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                if (chat.account.get('jid') === this.account.get('jid')) {\n                    if (chat.id == `${this.account.get('jid')}:saved`) {\n                        let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                        $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                        this.saved_chat = true;\n                        this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                    } else\n                        this.$('.chat-list-wrap .pinned-chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n                }\n            });\n        }\n        all_chats.forEach((chat) => {\n            if (chat.account.get('jid') === this.account.get('jid')) {\n                if (chat.id == `${this.account.get('jid')}:saved`) {\n                    let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                    $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                    this.saved_chat = true;\n                    this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                } else\n                    this.$('.chat-list-wrap .chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n            }\n        });\n        if (!this.saved_chat) {\n            let saved_chat = this.account.chats.getSavedChat(),\n                $cloned_item = saved_chat.item_view.$el.clone();\n            $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n            this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n        }\n        this.$('.chat-list-wrap .pinned-chat-list').prepend($('<div/>', { class: 'forward-panel-list-title recent-chats-title hidden'}).text(xabber.getString(\"category_recent_chats\")));\n        this.$('.chat-list-wrap .chat-list').append($('<div/>', { class: 'forward-panel-list-title contacts-title hidden'}).text(xabber.getString(\"category_title_contacts\")));\n        this.$('.chat-item').removeClass('active');\n        this.clearSearch();\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n            this.$el.detach();\n            this.data.set('visible', false);\n            deferred.resolve();\n        }});\n        return deferred.promise();\n    },\n\n    onClickItem: function (ev) {\n        let $target = $(ev.target).closest('.list-item');\n        this.onEnterPressed($target);\n    },\n\n    search: function (query) {\n        let jid, name, is_match = false, has_matches_chats = false, has_matches_contacts = false;\n        query = query.toLowerCase();\n        this.$('.roster-contact.list-item').remove();\n        query && this.account.roster.forEach((contact) => {\n            let jid = contact.get('jid'),\n                chat_id = contact.hash_id,\n                name = contact.get('name').toLowerCase(),\n                is_match = (name.indexOf(query) < 0 && jid.indexOf(query) < 0) ? true : false;\n            if (!is_match) {\n                if (!this.$('.chat-list-wrap .chat-item[data-id=\"' + chat_id + '\"]').length) {\n                    let contact_list_item = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-contact[data-jid=\"${jid}\"]`).first().clone();\n                    contact_list_item.find('.muted-icon').hide();\n                    this.$('.chat-list-wrap .contact-list').append(contact_list_item);\n                }\n                else\n                    is_match = true;\n            }\n            !is_match && (has_matches_contacts = true);\n        });\n        this.$('.contacts-title').switchClass('hidden', !has_matches_contacts);\n        this.$('.chat-item').each((idx, item) => {\n            let chat = this.account.chats.get($(item).data('id'));\n            if (!chat) {\n                $(item).addClass('hidden');\n                return;\n            }\n            jid = chat.get('jid');\n            name = (chat.contact ? chat.contact.get('name') : chat.get('name'));\n            if (name)\n                name = name.toLowerCase();\n            is_match = (!name || name && (name.indexOf(query) < 0 && jid.indexOf(query) < 0)) ? false : true;\n            $(item).hideIf(!is_match);\n            is_match && (has_matches_chats = true);\n        });\n        this.$('.recent-chats-title').switchClass('hidden', !has_matches_chats);\n        this.$('.modal-content .error').showIf(!has_matches_contacts && !has_matches_chats);\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.roster-contact.list-item').remove();\n        this.$('.contacts-title').addClass('hidden');\n        this.$('.modal-content .error').addClass('hidden');\n        this.$('.recent-chats-title').addClass('hidden');\n    },\n\n    onEnterPressed: function (selection) {\n        let chat_item;\n        if (selection.hasClass('roster-contact'))\n            chat_item = this.account.chats.getChat(this.account.contacts.get(selection.data('jid'))).item_view;\n        if (selection.hasClass('chat-item'))\n            chat_item = xabber.chats_view.child(selection.data('id'));\n        chat_item && this.forwardTo(chat_item);\n    },\n\n    forwardTo: function (chat_item) {\n        if (chat_item.model.get('saved')) {\n            this.messages.forEach((message) => {\n                chat_item.content.onSubmit(\"\", [message]);\n            });\n        }\n        else {\n            if (!chat_item.content)\n                chat_item.content = new xabber.ChatContentView({chat_item: chat_item});\n            chat_item.content.bottom.setForwardedMessages(this.messages);\n        }\n        this.messages = [];\n        this.close().done(() => {\n            chat_item.open({clear_search: true});\n        });\n    }\n});\n\nxabber.InvitationPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal add-user-group-chat',\n    template: templates.group_chats.invitation_panel_view,\n    ps_selector: '.contacts-list-wrap',\n    ps_settings: {theme: 'item-list'},\n\n    _initialize: function () {\n        this.registerClickEvents();\n    },\n\n    open: function (account, contact) {\n        this.selected_contacts = [];\n        this.account = account;\n        this.contact = contact;\n        this.clearPanel();\n        this.$(`textarea[name=\"invitation_text\"]`).val('');\n        this.$('.invitation-reason-wrap').addClass('hidden');\n        xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-group`).each((idx, item) => {\n            let group_node = $(item).clone();\n            $(group_node).find('.list-item').each((i, list_item) => {\n                let contact_node = this.account.contacts.get($(list_item).attr('data-jid'));\n                if (contact_node.get('group_chat'))\n                        list_item.remove();\n            });\n            if (group_node.children('.list-item').length) {\n                this.$('.contacts-list-wrap').append(group_node);\n                group_node.find('.arrow').click((ev) => {\n                    this.toggleContacts(ev);\n                });\n                group_node.find('.group-head').click((ev) => {\n                    this.selectAllGroup(ev);\n                });\n            }\n        });\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                this.selected_contacts = [];\n            }\n        });\n    },\n\n    addSelectedUsers: function () {\n        if (!this.selected_contacts.length) {\n            this.$('.modal-footer button').blur();\n            return;\n        }\n        let selected_users_count = this.selected_contacts.length,\n            _dfd_invitations = new $.Deferred(), invitations_count = 0;\n        _dfd_invitations.done((count) => {\n            let toast_text;\n            if (count == selected_users_count)\n                toast_text = xabber.getQuantityString(\"groupchat__toast__invitations_sent\", selected_users_count);\n            else\n                toast_text = xabber.getQuantityString(\"groupchat__toast_failed_to_sent_invitations\", selected_users_count);\n            utils.callback_popup_message(toast_text, 2000);\n            this.contact.trigger('invitations_send')\n        });\n        $(this.selected_contacts).each((idx, item) => {\n            this.sendInvite(item, () => {\n                invitations_count++;\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            }, () => {\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            });\n        });\n        this.close();\n    },\n\n    clearPanel: function () {\n        this.$('.modal-footer .errors').text('');\n        this.$('.counter').text('');\n        this.$('.contacts-list-wrap').empty();\n        this.clearSearch();\n    },\n\n    showReasonWrap: function () {\n        this.$('.invitation-reason-wrap').switchClass('hidden');\n        if (this.$('.invitation-reason-wrap').hasClass('hidden'))\n            this.$(`textarea[name=\"invitation_text\"]`).val('');\n    },\n\n    registerClickEvents: function () {\n        this.$('.btn-cancel').click(() => {\n            this.close();\n        });\n        this.$('.btn-add').click(() => {\n            this.addSelectedUsers();\n        });\n        this.$('.btn-invitation-reason').click(() => {\n            this.showReasonWrap();\n        });\n    },\n\n    addUser: function (ev) {\n        let $target = $(ev.target).closest('.list-item'),\n            contact_jid = $target.attr('data-jid');\n        let itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (!$target.hasClass('click-selected') && itemIdx > -1){\n            this.$(`.list-item[data-jid=\"${contact_jid}\"]`).removeClass('click-selected');\n            this.selected_contacts.splice(itemIdx, 1);\n            this.updateCounter();\n            return;\n        }\n        $target.toggleClass('click-selected');\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        else\n            this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n    },\n\n    sendInvite: function (contact_jid, callback, errback) {\n        let reason_text = (this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [contact_jid]);\n        if (this.$(`textarea[name=\"invitation_text\"]`).val()){\n            reason_text = reason_text + '\\n\\n' + this.$(`textarea[name=\"invitation_text\"]`).val();\n        }\n        let iq = $iq({type: 'set', to: (this.contact.get('full_jid') || this.contact.get('jid'))})\n                .c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(contact_jid).up()\n                .c('send').t('false').up()\n                .c('reason').t(reason_text);\n        this.account.sendIQFast(iq, () => {\n            this.sendInviteMessage(contact_jid);\n            this.close();\n            callback && callback();\n        }, (iq) => {\n            this.onInviteError(iq);\n            errback && errback();\n        });\n    },\n\n    onInviteError: function (iq) {\n        let err_text;\n        if ($(iq).find('not-allowed').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n        }\n        if ($(iq).find('conflict').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat__invitation__error_already_invited\", [$(iq).find('invite').find('jid').text()]);\n        }\n        this.$('.modal-footer .errors').removeClass('hidden').text(err_text);\n    },\n\n    sendInviteMessage: function(jid_to) {\n        let reason_text = (this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [jid_to]);\n        if (this.$(`textarea[name=\"invitation_text\"]`).val()){\n            reason_text = reason_text + '\\n\\n' + this.$(`textarea[name=\"invitation_text\"]`).val();\n        }\n        let body = xabber.getString(\"groupchat_legacy_invitation_body\", [this.contact.get('jid')]),\n            stanza = $msg({\n                to: jid_to,\n                type: 'chat',\n                id: uuid()\n            }).c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`, jid: this.contact.get('jid')})\n                .c('reason').t(reason_text).up().up()\n                .c('x', {xmlns: Strophe.NS.GROUP_CHAT})\n                .c('privacy').t(this.contact.get('group_info').privacy).up().up()\n                .c('body').t(body).up();\n        this.account.sendMsg(stanza);\n    },\n\n    search: function (query) {\n        query = query.toLowerCase();\n        query && this.$('.list-item').each((idx, item) => {\n            let jid = $(item).attr('data-jid'),\n                name = this.account.contacts.get(jid).get('name').toLowerCase(),\n                hide_clone = (this.$(`.list-item[data-jid=\"${jid}\"]`).length > 1) && (!this.$(`.list-item[data-jid=\"${jid}\"]`).first().is($(item)));\n            $(item).hideIf((name.indexOf(query) < 0 && jid.indexOf(query) < 0) || hide_clone);\n        });\n        this.$('.group-head').addClass('hidden');\n        this.$('.modal-content .error').switchClass('hidden', !(this.$('.list-item').length === this.$('.list-item.hidden').length));\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.list-item').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n    },\n\n    onClickItem: function (ev) {\n        this.addUser(ev);\n    },\n\n    onEnterPressed: function (selection) {\n        let contact_jid = selection.attr('data-jid'),\n            itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n        this.addSelectedUsers();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    toggleContacts: function (ev) {\n        let is_visible = $(ev.target).hasClass('mdi-chevron-down');\n        if (is_visible) {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).addClass('hidden');\n            });\n        }\n        else\n        {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).removeClass('hidden');\n            });\n        }\n        $(ev.target).switchClass('mdi-chevron-right', is_visible);\n        $(ev.target).switchClass('mdi-chevron-down', !is_visible);\n        this.updateScrollBar();\n    },\n\n    selectAllGroup: function (ev) {\n        if ($(ev.target).hasClass('arrow'))\n            return;\n       let group_roster = $(ev.target).closest('.roster-group');\n       if (group_roster.hasClass('click-selected')) {\n           group_roster.removeClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1) {\n                   this.selected_contacts.splice(itemIdx, 1);\n                   $(item).removeClass('click-selected');\n               }\n           });\n       }\n       else\n       {\n           group_roster.addClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1)\n                   return;\n               else\n                   this.selected_contacts.push(contact_jid);\n               $(item).addClass('click-selected');\n           });\n       }\n        this.updateCounter();\n    },\n\n    updateCounter: function () {\n        let selected_counter = this.$('.list-item.click-selected').length;\n        (selected_counter) ? this.$('.counter').removeClass('hidden').text(selected_counter) : this.$('.counter').text('');\n    }\n\n});\n\n  xabber.SavedChatHeadView = xabber.BasicView.extend({\n      className: 'chat-head-wrap saved-chat',\n      template: templates.saved_chat_head,\n      events: {\n          \"click .contact-name\": \"showSettings\",\n          \"click .circle-avatar\": \"showSettings\",\n          \"click .btn-chat-pin\": \"pinSavedChat\",\n          \"click .btn-delete-chat\": \"deleteChat\",\n          \"click .btn-set-status\": \"setStatus\",\n          \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n          \"click .btn-next-plyr\": \"nextPlyr\",\n          \"click .btn-previous-plyr\": \"previousPlyr\",\n          \"click .btn-stop-plyr\": \"stopPlyr\",\n          \"click .btn-popup-plyr\": \"popupPlyr\",\n          \"click .btn-jingle-message\": \"openJingleMessage\",\n          \"click .btn-search-messages\": \"renderSearchPanel\"\n      },\n\n      _initialize: function (options) {\n          this.content = options.content;\n          this.contact = this.content.contact;\n          this.model = this.content.model;\n          clearInterval(this._update_oneliner_interval);\n          this.updateOneLiner();\n          this._update_oneliner_interval = setInterval(() => {\n              this.updateOneLiner();\n          }, 1000*60*2);\n          this.account = this.model.account;\n          this.$el.find('.circle-avatar:not(.voice-message-player-avatar)').html(env.templates.svg['saved-messages']());\n          this.model.on(\"close_chat\", this.closeChat, this);\n          this.model.on(\"hide_chat\", this.hideChat, this);\n          xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n          xabber.on('update_layout', this.updatePlyrTitle, this);\n          xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n          xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n      },\n\n      render: function () {\n          this.$('.tooltipped').tooltip({delay: 50});\n          this.$('.btn-more').dropdown({\n              inDuration: 100,\n              outDuration: 100,\n              hover: false\n          });\n          this.$('.chat-head-menu').hide();\n          this.updatePlyrControls();\n          this.updatePlyrTime();\n          this.updateJingleButton();\n          return this;\n      },\n\n      updateOneLiner: function () {\n          let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n              one_liner = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n          if (!one_liner) {\n              this.updateOneLiner();\n              return;\n          }\n          this.$('.one-liner').text(one_liner);\n      },\n\n      closeChat: function () {\n          this.model.set({'opened': false, 'display': false, 'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      hideChat: function () {\n          this.model.set({'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      showSettings: function () {\n          this.account.showSettingsModal();\n      },\n\n      deleteChat: function () {\n          let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_saved_messages__header\"), xabber.getString(\"dialog_delete_saved_messages__confirm\") +\n              (rewrite_support ? \"\" : (\"\\n\" + xabber.getString(\"dialog_delete_saved_messages__confirm\", [this.account.domain]).fontcolor('#E53935'))), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n              if (result) {\n                  if (this.account.connection && this.account.connection.do_synchronization) {\n                      this.model.deleteFromSynchronization();\n                  }\n                  if (rewrite_support) {\n                      this.model.retractAllMessages(false);\n                  }\n                  else {\n                      let all_messages = this.model.messages.models;\n                      $(all_messages).each((idx, item) => {\n                          this.content.removeMessage(item);\n                      });\n                  }\n                  this.closeChat();\n                  this.model.set('timestamp', 0);\n              }\n          });\n      },\n\n      pinSavedChat: function () {\n          let pinned = this.model.get('pinned'),\n              is_pinned = pinned && pinned !== '0' ? true : false,\n              pinned_value = is_pinned ? '0' : + new Date(),\n              conversation_options = {\n                  jid: this.account.get('jid'),\n                  pinned: pinned_value,\n                  type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n              },\n              iq = $iq({type: 'set', to: this.account.get('jid')})\n                  .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                  .c('conversation', conversation_options);\n          this.account.sendIQFast(iq);\n          this.model.set('pinned', pinned_value);\n      },\n\n      renderSearchPanel: function () {\n          let visible_view;\n          if (this.content.isVisible())\n              visible_view = this.content;\n          this.model.messages_view && this.model.messages_view.isVisible() && (visible_view = this.model.messages_view);\n          visible_view && visible_view.$search_form.slideToggle(200, () => {\n              if (visible_view.$search_form.css('display') !== 'none')\n                  visible_view.$search_form.find('input').focus();\n          });\n      },\n\n      playPausePlyr: function () {\n          if (!xabber.current_plyr_player)\n              return;\n          if (xabber.current_plyr_player.$audio_elem){\n              if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                  let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                  $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                  xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n              } else {\n                  xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n              }\n          } else\n              xabber.current_plyr_player.togglePlay();\n          xabber.trigger('plyr_player_updated');\n      },\n\n      stopPlyr: function () {\n          if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n              return;\n          xabber.plyr_players.forEach((item) => {\n              if (item.$audio_elem){\n                  if (item.$audio_elem.voice_message)\n                      item.$audio_elem.voice_message.stopTime();\n              }\n          });\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.closePopup();\n          else {\n              xabber.current_plyr_player = null;\n              xabber.trigger('plyr_player_updated');\n          }\n      },\n\n      popupPlyr: function () {\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.minimizePopup();\n      },\n\n      nextPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n              let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n              if (!next_item.$audio_elem.voice_message){\n                  let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  next_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n          }\n      },\n\n      previousPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n              let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n              if (!prev_item.$audio_elem.voice_message){\n                  let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  prev_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n          }\n      },\n\n      updatePlyrControls: function () {\n          this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n          this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              if (xabber.current_plyr_player.$audio_elem.voice_message){\n                  let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                  this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                  // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                  this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                  let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                  this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                  this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n                  this.$('.voice-message-player-avatar').removeClass('hidden');\n                  this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                  this.updatePlyrTitle();\n                  let duration = Math.round(voice_message.getDuration());\n                  this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                  let timerId = setInterval(function() {\n                      let cur_time = Math.round(voice_message.getCurrentTime());\n                      if (voice_message.isPlaying())\n                          this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                      else\n                          clearInterval(timerId);\n                  }, 100);\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n              }\n          }\n          else if (xabber.current_plyr_player) {\n              this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n              this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n              this.updatePlyrTitle();\n              let poster = xabber.current_plyr_player.poster;\n              if (poster){\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').removeClass('hidden');\n                  this.$('.player-poster').attr(\"src\", poster);\n              } else {\n                  this.$('.mdi-player-type-icon').removeClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n              }\n              this.$('.voice-message-player-avatar').addClass('hidden');\n              if (xabber.current_plyr_player.provider != 'html5')\n                  this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n              else\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n              this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n              // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n              this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n              let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n              this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n              this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n          }\n      },\n\n      updatePlyrTime: function () {\n          if (xabber.current_plyr_player){\n              if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              }\n              else if (!isNaN(xabber.current_plyr_player.currentTime))\n                  this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n          }\n      },\n\n      updatePlyrTitle: function () {\n          if (!xabber.current_plyr_player)\n              return\n          let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n              title;\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n              title = xabber.current_plyr_player.author;\n          else if (xabber.current_plyr_player)\n              title = xabber.current_plyr_player.config.title ?\n                  xabber.current_plyr_player.config.title :\n                  xabber.current_plyr_player.provider === 'html5' ?\n                      xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                      : xabber.getString(\"chat_message_video\");\n          $title_elem.text(title);\n          if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n              $title_elem.addClass('active-animation-player-title');\n              $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n          } else\n              $title_elem.removeClass('active-animation-player-title');\n\n      },\n\n      updateJingleButton: function () {\n          this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n          if (xabber.current_voip_call){\n              this.$('.btn-jingle-message').removeClass('hidden');\n              let voip_status = xabber.current_voip_call.get('status');\n              if (voip_status)\n                  this.$('.btn-jingle-message').attr('data-state', voip_status);\n              else\n                  this.$('.btn-jingle-message').attr('data-state', '');\n              if (voip_status === 'disconnected')\n                  this.$('.btn-jingle-message').removeClass('active-call');\n          } else\n              this.$('.btn-jingle-message').addClass('hidden');\n      },\n\n      openJingleMessage: function () {\n          if (xabber.current_voip_call) {\n              xabber.current_voip_call.modal_view.collapse();\n              return;\n          }\n      },\n  });\n\n  xabber.ChatHeadView = xabber.BasicView.extend({\n    className: 'chat-head-wrap',\n    template: templates.chat_head,\n    avatar_size: constants.AVATAR_SIZES.CHAT_HEAD,\n\n    events: {\n        \"click .chat-head-wrap\": \"showContactDetailsRight\",\n        \"click .chat-head-details\": \"showContactDetailsRight\",\n        \"click .contact-name\": \"showContactDetailsRight\",\n        \"click .circle-avatar\": \"showContactDetailsRight\",\n        \"click .contact-status-message.resource-hover\": \"showContactResources\",\n        \"click .contact-status-message.members-hover\": \"showMembersDetails\",\n        \"click .btn-clear-history\": \"clearHistory\",\n        \"click .btn-invite-users\": \"inviteUsers\",\n        \"click .btn-delete-chat\": \"deleteChat\",\n        \"click .btn-delete-contact\": \"deleteContact\",\n        \"click .btn-block-contact\": \"blockContact\",\n        \"click .btn-unblock-contact\": \"unblockContact\",\n        \"click .btn-export-history\": \"exportHistory\",\n        \"click .btn-show-fingerprints\": \"showFingerprints\",\n        \"click .btn-start-encryption\": \"startEncryptedChat\",\n        \"click .btn-open-encrypted-chat\": \"openEncryptedChat\",\n        \"click .btn-open-regular-chat\": \"openRegularChat\",\n        \"click .btn-chat-pin\": \"pinChat\",\n        \"click .btn-archive-chat\": \"archiveChat\",\n        \"click .btn-call-attention\": \"callAttention\",\n        \"click .btn-search-messages\": \"renderSearchPanel\",\n        \"click .btn-jingle-message\": \"sendJingleMessage\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-notifications.muted\": \"unmuteChat\",\n        \"click .btn-set-status\": \"setStatus\",\n        \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .btn-stop-plyr\": \"stopPlyr\",\n        \"click .btn-popup-plyr\": \"popupPlyr\",\n    },\n\n    _initialize: function (options) {\n        this.content = options.content;\n        this.contact = this.content.contact;\n        this.model = this.content.model;\n        this.account = this.model.account;\n        this.resources_view = new xabber.ContactResourcesRightView({model: this.contact.resources});\n        this.updateName();\n        this.updateStatus();\n        this.updateEncrypted();\n        this.updateAvatar();\n        this.updateNotifications();\n        this.updateArchived();\n        this.updatePinned();\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"close_chat\", this.closeChat, this);\n        this.model.on(\"hide_chat\", this.hideChat, this);\n        this.model.on(\"pinned\", this.pinChat, this);\n        this.model.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"change:archived\", this.updateArchived, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.contact.on(\"change\", this.onContactChanged, this);\n        this.contact.on(\"archive_chat\", this.archiveChat, this);\n        this.contact.on(\"change:name\", this.updateName, this);\n        this.contact.on(\"change:status\", this.updateStatus, this);\n        this.contact.on(\"change:status_updated\", this.updateStatus, this);\n        this.contact.on(\"change:image\", this.updateAvatar, this);\n        this.contact.on(\"change:blocked\", this.onChangedBlocked, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChatHead, this);\n        this.contact.on(\"change:subscription\", this.updateMenu, this);\n        this.contact.on(\"change:in_roster\", this.updateMenu, this);\n        this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        xabber._settings.on(\"change:jingle_calls\", this.updateGroupChatHead, this);\n        xabber.on('change:audio', this.updateGroupChatHead, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n        xabber.on('update_layout', this.updatePlyrTitle, this);\n        xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n        xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n    },\n\n    render: function (options) {\n        this.$('.tooltipped').tooltip('remove');\n        this.$('.tooltipped').tooltip({delay: 50});\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-notifications').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: true, // Activate on hover\n            belowOrigin: true, // Displays dropdown below the button\n        });\n        this.$('.chat-head-menu').hide();\n        this.updateStatusMsg();\n        this.updateGroupChatHead();\n        if (this.contact.get('group_chat'))\n            this.$('.contact-status-message').addClass('members-hover')\n        else\n            this.$('.contact-status-message').addClass('resource-hover')\n        this.updatePlyrControls();\n        this.updatePlyrTime();\n        this.updateJingleButton();\n        return this;\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateName: function () {\n        this.$('.contact-name').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        let status = this.contact.get('status'),\n            status_message = this.contact.getStatusMessage();\n        this.$('.contact-status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n        this.model.get('blocked') ? this.$('.contact-status-message').text('Contact blocked') : this.$('.contact-status-message').text(status_message);\n    },\n\n    updateStatusMsg: function () {\n        this.$('.contact-status-message').text(this.contact.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    onContactChanged: function () {\n        let changed = this.contact.changed;\n        if (_.has(changed, 'subscription_request_in') || _.has(changed, 'subscription_request_out') || _.has(changed, 'subscription') || _.has(changed, 'status_message'))\n            this.updateStatusMsg();\n        if (_.has(changed, 'private_chat') || _.has(changed, 'incognito_chat') || _.has(changed, 'invitation'))\n            this.updateIcon();\n    },\n\n    onChangedBlocked: function () {\n        this.updateMenu();\n        this.updateStatusMsg();\n        this.updateIcon();\n    },\n\n    updateMenu: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.btn-invite-users').showIf(is_group_chat && !this.contact.get('private_chat') && this.contact.get('subscription') == 'both');\n        this.$('.btn-call-attention').hideIf(is_group_chat || this.model.get('encrypted'));\n        this.$('.btn-clear-history').hideIf(is_group_chat);\n        this.$('.btn-start-encryption').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && !this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-encrypted-chat').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-regular-chat').showIf(this.model.get('encrypted'));\n        this.$('.btn-show-fingerprints').showIf(!is_group_chat && this.account.omemo && this.model.get('encrypted'));\n        this.$('.btn-retract-own-messages').showIf(is_group_chat);\n        this.$('.btn-block-contact').hideIf(this.contact.get('blocked'));\n        this.$('.btn-unblock-contact').showIf(this.contact.get('blocked'));\n        this.$('.btn-delete-contact').showIf(this.contact.get('in_roster') && !is_group_chat);\n        this.$('.btn-notifications').hideIf(this.contact.get('blocked'));\n        this.$('.btn-jingle-message').hideIf((this.contact.get('blocked') || is_group_chat) && xabber.current_voip_call);\n        this.$('.btn-jingle-message').hideIf(!xabber.settings.jingle_calls);\n    },\n\n    renderSearchPanel: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'search'});\n    },\n\n    showContactDetailsRight: function () {\n        this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n    },\n\n    showContactResources: function () {\n        this.resources_view.open();\n    },\n\n    showMembersDetails: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'members'});\n    },\n\n    updatePinned: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false;\n        if (is_pinned)\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_unpin\"))\n        else\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_pin\"))\n    },\n\n    updateNotifications: function () {\n        if (this.model.isMuted()) {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_unmute\"));\n            this.$('.btn-notifications').addClass('muted');\n        }\n        else {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_mute\"));\n            this.$('.btn-notifications').removeClass('muted');\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.model.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.model.isMuted());\n    },\n\n      muteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n              muted_seconds;\n          if (mute_type === 'minutes15')\n              muted_seconds = 900\n          if (mute_type === 'hours1')\n              muted_seconds = 3600\n          if (mute_type === 'hours2')\n              muted_seconds = 7200\n          if (mute_type === 'day')\n              muted_seconds = 86400\n          if (mute_type === 'forever')\n              muted_seconds = 0\n          this.model.muteChat(muted_seconds);\n      },\n\n      unmuteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          this.model.muteChat('');\n      },\n\n    callAttention: function (ev) {\n        let msg = $msg({type: 'headline', to: this.contact.get('jid')})\n            .c('attention', {xmlns: Strophe.NS.ATTENTION});\n        this.account.sendMsg(msg);\n        this.model.messages.createSystemMessage({\n            from_jid: this.account.get('jid'),\n            message: xabber.getString(\"action_attention_called\")\n        });\n    },\n\n\n    updateArchived: function () {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!is_archived)\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_unarchive\"))\n        else\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_archive\"))\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-up', !is_archived);\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-down', is_archived);\n        if (this.model.item_view && archived){\n            !this.model.messages.length && this.model.item_view.updateLastMessage();\n            this.account.chat_settings.updateArchiveChatsList(this.contact.get('jid'), archived);\n            if (this.model.get('active')) {\n                xabber.chats_view.updateScreenAllChats();\n            }\n        }\n    },\n\n    archiveChat: function (ev, no_iq) {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!no_iq) {\n            let is_archived_status = is_archived ? 'archived' : 'active',\n                conversation_options = {\n                    jid: this.contact.get('jid'),\n                    status: is_archived_status,\n                    type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n                },\n                iq = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                    .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('archived', archived);\n        }\n    },\n\n    pinChat: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false,\n            pinned_value = is_pinned ? '0' : + new Date(),\n            conversation_options = {\n                jid: this.contact.get('jid'),\n                pinned: pinned_value,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n            },\n            iq = $iq({type: 'set', to: this.account.get('jid')})\n                .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('pinned', pinned_value);\n    },\n\n    sendJingleMessage: function () {\n        if (!xabber.settings.jingle_calls){\n            return;\n        }\n        if (xabber.current_voip_call) {\n            xabber.current_voip_call.modal_view.collapse();\n            return;\n        }\n        xabber.chats_view.scrollToTop();\n        xabber.chats_view.clearSearch();\n        !this.contact.get('group_chat') && this.content.initJingleMessage();\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.contact);\n    },\n\n    playPausePlyr: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n        xabber.trigger('plyr_player_updated');\n    },\n\n    stopPlyr: function () {\n        if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n            return;\n        xabber.plyr_players.forEach((item) => {\n            if (item.$audio_elem){\n                if (item.$audio_elem.voice_message)\n                    item.$audio_elem.voice_message.stopTime();\n            }\n        });\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.closePopup();\n        else {\n            xabber.current_plyr_player = null;\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    popupPlyr: function () {\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.minimizePopup();\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n        this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            if (xabber.current_plyr_player.$audio_elem.voice_message){\n                let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n                this.$('.voice-message-player-avatar').removeClass('hidden');\n                this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                this.updatePlyrTitle();\n                let duration = Math.round(voice_message.getDuration());\n                this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                let timerId = setInterval(function() {\n                    let cur_time = Math.round(voice_message.getCurrentTime());\n                    if (voice_message.isPlaying())\n                        this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                    else\n                        clearInterval(timerId);\n                }, 100);\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n            }\n        }\n        else if (xabber.current_plyr_player) {\n            this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n            this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n            this.updatePlyrTitle();\n            let poster = xabber.current_plyr_player.poster;\n            if (poster){\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').removeClass('hidden');\n                this.$('.player-poster').attr(\"src\", poster);\n            } else {\n                this.$('.mdi-player-type-icon').removeClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n            }\n            this.$('.voice-message-player-avatar').addClass('hidden');\n            if (xabber.current_plyr_player.provider != 'html5')\n                this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n            else\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n            this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n            // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n            this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n        }\n    },\n\n    updatePlyrTime: function () {\n        if (xabber.current_plyr_player){\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            }\n            else if (!isNaN(xabber.current_plyr_player.currentTime))\n                this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n        }\n    },\n\n    updatePlyrTitle: function () {\n        if (!xabber.current_plyr_player)\n            return\n        let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n            title;\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            title = xabber.current_plyr_player.author;\n        else if (xabber.current_plyr_player)\n            title = xabber.current_plyr_player.config.title ?\n                xabber.current_plyr_player.config.title :\n                xabber.current_plyr_player.provider === 'html5' ?\n                    xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                    : xabber.getString(\"chat_message_video\");\n        $title_elem.text(title);\n        if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n            $title_elem.addClass('active-animation-player-title');\n            $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n        } else\n            $title_elem.removeClass('active-animation-player-title');\n\n    },\n\n\n    updateJingleButton: function () {\n        this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n        if (xabber.current_voip_call){\n            this.contact.get('group_chat') && this.$('.btn-jingle-message').removeClass('hidden');\n            let voip_status = xabber.current_voip_call.get('status');\n            if (voip_status)\n                this.$('.btn-jingle-message').attr('data-state', voip_status);\n            else\n                this.$('.btn-jingle-message').attr('data-state', '');\n            if (voip_status === 'disconnected')\n                this.$('.btn-jingle-message').removeClass('active-call');\n        } else if (this.contact.get('group_chat'))\n            this.$('.btn-jingle-message').addClass('hidden');\n    },\n\n    getActiveScreen: function () {\n        let active_screen = xabber.toolbar_view.$('.active');\n        this.$('.omemo-item').removeClass('hidden');\n        if (active_screen.hasClass('archive-chats')) {\n            xabber.toolbar_view.showArchive();\n            return;\n        }\n        if (active_screen.hasClass('all-chats')) {\n            xabber.toolbar_view.showAllChats();\n            return;\n        }\n        if (active_screen.hasClass('chats')) {\n            xabber.toolbar_view.showChats();\n            return;\n        }\n        if (active_screen.hasClass('group-chats')) {\n            xabber.toolbar_view.showGroupChats();\n            return;\n        }\n        if (active_screen.hasClass('account-item')) {\n            xabber.toolbar_view.showChatsByAccount();\n            return;\n        }\n    },\n\n    updateGroupChatHead: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.updateIcon();\n        this.$('.btn-jingle-message').showIf(!is_group_chat && xabber.get('audio') || xabber.current_voip_call);\n        this.$('.btn-jingle-message').hideIf(!xabber.settings.jingle_calls);\n        this.$('.contact-status').hideIf(is_group_chat);\n        this.updateMenu();\n    },\n\n    updateIcon: function () {\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    inviteUsers: function () {\n        if (!xabber.invite_panel)\n            xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n        xabber.invite_panel.open(this.account, this.contact);\n    },\n\n    clearHistory: function () {\n        this.content.clearHistory();\n        xabber.chats_view.clearSearch();\n    },\n\n    leaveGroupChat: function () {\n        this.contact.declineSubscription();\n        this.contact.removeFromRoster();\n        this.contact.set('in_roster', false);\n    },\n\n    closeChat: function () {\n        this.model.set({'opened': false, 'display': false, 'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    hideChat: function () {\n        this.model.set({'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    deleteChat: function () {\n        if (this.contact.get('group_chat')) {\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"dialog_group_remove__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                if (result) {\n                    let scrolled_top = xabber.chats_view.getScrollTop() || 0;\n                    (this.account.connection && this.account.connection.do_synchronization) && this.model.deleteFromSynchronization();\n                    this.leaveGroupChat();\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                    xabber.chats_view.scrollTo(scrolled_top);\n                }\n            });\n        }\n        else {\n            let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"delete_chat_dialog_message\") +\n            (rewrite_support ? \"\" : `\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n                if (result) {\n                    let scrolled_top = xabber.chats_view.getScrollTop() || 0;\n                    if (rewrite_support) {\n                        this.model.retractAllMessages(false);\n                    }\n                    if (this.account.connection && this.account.connection.do_synchronization) {\n                        this.model.deleteFromSynchronization();\n                    }\n                    else {\n                        let all_messages = this.model.messages.models;\n                        $(all_messages).each((idx, item) => {\n                            this.content.removeMessage(item);\n                        });\n                    }\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                    xabber.chats_view.scrollTo(scrolled_top);\n                }\n            });\n        }\n    },\n\n    deleteContact: function () {\n        this.contact.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.contact.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.contact.unblockWithDialog();\n    },\n\n    exportHistory: function () {\n\n    },\n\n    showFingerprints: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    startEncryptedChat: function () {\n        this.account.chats.openChat(this.contact, {encrypted: true});\n        let chat = this.account.chats.get(this.contact.hash_id + ':encrypted');\n        chat.set('timestamp', moment.now());\n        chat.item_view.updateLastMessage();\n    },\n\n    openEncryptedChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact, {encrypted: true});\n    },\n\n    openRegularChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact);\n    }\n});\n\n\n  xabber.SendMediaView = xabber.BasicView.extend({\n      className: 'modal main-modal avatar-picker background-panel',\n      template: templates.send_media,\n      ps_selector: '.modal-content',\n      ps_settings: {theme: 'item-list'},\n\n      events: {\n          \"click .menu-btn\": \"updateActiveMenu\",\n          \"click .library-wrap .image-item\": \"setActiveImage\",\n          'change input[type=\"file\"]': \"onFileInputChanged\",\n          'keyup input.url': \"onInputChanged\",\n          \"click .btn-add\": \"addMedia\",\n          \"click .btn-cancel\": \"close\"\n      },\n\n      _initialize: function () {\n          this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n      },\n\n      render: function (options) {\n          this.model = options.model;\n          this.parent = options.parent;\n          this.createLibrary();\n          this.$('.menu-btn').removeClass('active');\n          this.$('.menu-btn[data-screen-name=\"upload\"]').addClass('active');\n          this.$('.modal-header span').text(xabber.getString(\"chat_bottom__tooltip_add_media\"));\n          this.$el.openModal({\n              ready: () => {\n                  this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n              },\n              complete: this.close.bind(this)\n          });\n          let draggable = this.$('.upload-wrap');\n          draggable[0].ondragenter = function (ev) {\n              ev.preventDefault();\n              draggable.addClass('file-drop');\n          };\n          draggable[0].ondragover = function (ev) {\n              ev.preventDefault();\n          };\n          draggable[0].ondragleave = function (ev) {\n              if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                  return;\n              ev.preventDefault();\n              draggable.removeClass('file-drop');\n          };\n          draggable[0].ondrop = (ev) => {\n              ev.preventDefault();\n              ev.stopPropagation();\n              draggable.removeClass('file-drop');\n              let files = ev.dataTransfer.files || [];\n              this.parent.view.addFileMessage(files);\n              this.close();\n          };\n      },\n\n      onPaste: function (ev) {\n          let url = ev.clipboardData.getData('text').trim();\n          this.$('.image-preview img')[0].onload = () => {\n              this.$('.image-preview img').removeClass('hidden');\n              this.updateActiveButton();\n          };\n          this.$('.image-preview img').addClass('hidden')[0].src = url;\n          this.updateActiveButton();\n      },\n\n      updateActiveMenu: function (ev) {\n          let screen_name = ev.target.getAttribute('data-screen-name');\n          this.$('.menu-btn').removeClass('active');\n          this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n          this.updateScreen(screen_name);\n      },\n\n      updateScreen: function (name) {\n          this.$('.screen-wrap').addClass('hidden');\n          this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n          this.scrollToTop();\n          this.updateActiveButton();\n      },\n\n      updateActiveButton: function () {\n          let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n              non_active = true;\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video') {\n              $active_screen.find('div.active').length && (non_active = false);\n          } else {\n              $active_screen.find('img:not(.hidden)').length && (non_active = false);\n          }\n          this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n      },\n\n      renderFiles: function (response) {\n          this.$(`.library-wrap[data-screen=\"${response.type}\"] .preloader-wrapper`).remove()\n          if (response.items.length){\n              response.items.forEach((item) => {\n                  let img = $(`<div class=\"image-item\"/>`);\n                  img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                  img.attr('data-src', item.file);\n                  img.attr('data-name', item.name);\n                  this.$(`.library-wrap[data-screen=\"${response.type}\"]`).append(img);\n              });\n          }\n      },\n\n      createLibrary: function () {\n          this.model.testGalleryTokenExpire(() => {\n              if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                  this.$('.library-wrap').html(env.templates.contacts.preloader())\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'image'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'image'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"image\"] .preloader-wrapper').remove()\n                      }\n                  });\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'video'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'video'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"video\"] .preloader-wrapper').remove()\n                      }\n                  });\n              }\n          });\n      },\n\n      setActiveImage: function (ev) {\n          let $target = $(ev.target),\n              $active_screen = this.$('.screen-wrap:not(.hidden)');\n          if ($target.hasClass('active'))\n              $target.removeClass('active');\n          else {\n              this.$('.library-wrap>div').removeClass('active');\n              $target.addClass('active');\n          }\n          this.updateActiveButton();\n      },\n\n      onFileInputChanged: function (ev) {\n          let target = ev.target,\n              files = [];\n          for (let i = 0; i < target.files.length; i++) {\n              files.push(target.files[i]);\n          }\n\n          if (files && files.length) {\n              this.parent.view.addFileMessage(files);\n              $(target).val('');\n              this.close();\n          }\n      },\n\n      onInputChanged: function (ev) {\n          if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n              return;\n          if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n              let url = ev.target.value.trim();\n              this.$('.image-preview img')[0].onload = () => {\n                  this.$('.image-preview img').removeClass('hidden');\n                  this.updateActiveButton();\n              };\n              this.$('.image-preview img').addClass('hidden')[0].src = url;\n              this.updateActiveButton();\n          } else {\n              this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n              this.updateActiveButton();\n          }\n      },\n\n      addMedia: function () {\n          if (this.$('.btn-add').hasClass('non-active'))\n              return;\n          let file, filename, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n          dfd.done((resolved_file) => {\n              this.parent.view.addFileMessage([resolved_file])\n              this.close();\n          });\n          this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n          this.$('.btn-add').addClass('hidden-disabled');\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' || $active_screen.attr('data-screen') == 'web-address') {\n              file = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-src') :\n                  $active_screen.find('img:not(.hidden)')[0].src;\n              filename = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-name') : '';\n\n              this.createFileFromURL(file, filename).then((file) => {\n                  dfd.resolve(file);\n              })\n          } else\n              dfd.resolve(this.current_file);\n      },\n\n      createFileFromURL: async function (url, filename) {\n          let response = await fetch(url);\n          let data = await response.blob();\n          let metadata = {\n              type: data.type\n          };\n          let file = new File([data], filename || url.split('#').shift().split('?').shift().split('/').pop() || 'file', metadata);\n          return file\n      },\n\n      close: function () {\n          this.$el.closeModal({ complete: () => {\n                  this.$el.detach();\n                  this.data.set('visible', false);\n              }\n          });\n      }\n  });\n\nxabber.ChatLocationView = xabber.BasicView.extend({\n    className: 'modal main-modal chat-location ',\n    template: templates.location_popup,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-apply\": \"sendLocation\",\n        \"click #map canvas\": \"closeLocationName\",\n        \"click .nominatim.ol-search input\": \"initializeScrollbar\",\n        \"focusout .nominatim.ol-search input\": \"destroyScrollbar\",\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.account = this.view.account;\n\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.initMap();\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    initMap: function () {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            this.$el.find('.modal-content').switchClass('popup', xabber.popup_coordinates);\n\n            let layers = [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n                coordinates = xabber.popup_coordinates ? ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857') : [-9639318.435625363, 1667475.03690917],\n                zoom = xabber.popup_coordinates ? 15 : 0,\n                placemark = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"48px\" height=\"48px\" viewBox=\"0 0 24 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#000000\" fill-rule=\"nonzero\"></path></g></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                }),\n                placemark_my_location = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"36px\" height=\"36px\"><circle class=\"outer\" cx=\"20\" cy=\"20\" r=\"16\" stroke=\"none\" stroke-width=\"1.5\" fill=\"none\" style=\"opacity: 0.6;\"></circle><circle class=\"inner\" cx=\"20\" cy=\"20\" r=\"8\" stroke=\"white\" stroke-width=\"1.5\" fill=\"none\"></circle></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                });\n\n            let map = new ol.Map\n            ({\ttarget: 'map',\n                view: new ol.View\n                ({\tzoom: zoom,\n                    center: coordinates\n                }),\n                interactions: ol.interaction_defaults({ altShiftDragRotate:false, pinchRotate:false }),\n                layers: layers,\n                overlays: [placemark, placemark_my_location]\n            });\n\n            let getCurrentPositionControl = function (e) {\n                navigator.geolocation.getCurrentPosition(success, error, options);\n            };\n\n            let options = {\n                enableHighAccuracy: true,\n                timeout: 5000,\n                maximumAge: 0\n            };\n\n            function success(pos) {\n                let crd = pos.coords;\n                map.getView().setCenter(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                placemark_my_location.show(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                map.getView().setZoom(17);\n                button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-gps\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\" id=\"mdi:crosshairs-gps\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n            };\n\n            function error(err) {\n                console.warn(`ERROR(${err.code}): ${err.message}`);\n            };\n\n            let button_geoposition = document.createElement('button');\n            button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-question\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\" id=\"mdi:crosshairs-question\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n            button_geoposition.addEventListener('click', getCurrentPositionControl, false);\n\n            let custom_element_position = document.createElement('div');\n\n            if (xabber.popup_coordinates) {\n                custom_element_position.className = 'geoposition placemark-exist ol-control ol-unselectable';\n            }\n            else {\n                custom_element_position.className = 'geoposition ol-control ol-unselectable';\n            }\n            custom_element_position.appendChild(button_geoposition);\n\n            let geoposition = new ol.control.Control({\n                className: 'myControl',\n                element: custom_element_position,\n                target: document.getElementById(\"myCustomControl\")\n            });\n\n            map.addControl(geoposition);\n\n            if (xabber.popup_coordinates) {\n                placemark.show(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                $('.ol-zoom.ol-unselectable.ol-control').addClass('placemark-exist');\n                let getPlacemarkPositionControl = function (e) {\n                    map.getView().setCenter(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                    map.getView().setZoom(15);\n                    $('.ol-location').show()\n\n                };\n\n                let button_placemark_position = document.createElement('button');\n                button_placemark_position.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n                button_placemark_position.addEventListener('click', getPlacemarkPositionControl, false);\n\n                let custom_element_placemark_position = document.createElement('div');\n                custom_element_placemark_position.className = 'placemark-position ol-control ol-unselectable';\n                custom_element_placemark_position.appendChild(button_placemark_position);\n\n                let placemark_position = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_placemark_position,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(placemark_position);\n\n                let custom_element_show_location_name = document.createElement('div');\n                custom_element_show_location_name.innerHTML = xabber.location_name || '';\n\n\n                custom_element_show_location_name.className = 'ol-location ol-control ol-unselectable';\n\n                let show_location_name = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_show_location_name,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(show_location_name);\n\n            }\n\n            if (!xabber.popup_coordinates) {\n\n                let send_buttom = document.createElement('button');\n                send_buttom.className = 'btn-apply mdi mdi-28px mdi-send';\n\n                let send_address_div = document.createElement('div');\n                send_address_div.setAttribute(\"id\", \"send_address\");\n                send_address_div.className = 'ol-send-address';\n\n                let send_div = document.createElement('div');\n                send_div.setAttribute(\"id\", \"send_text\");\n                send_div.className = 'ol-send-text';\n\n                let custom_element_send = document.createElement('div');\n                custom_element_send.className = 'ol-send ol-control ol-unselectable';\n                custom_element_send.appendChild(send_address_div);\n                custom_element_send.appendChild(send_div);\n                custom_element_send.appendChild(send_buttom);\n\n                let send = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_send,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(send);\n\n                let sLayer = new ol.layer.Vector({\n                    source: new ol.source.Vector(),\n                    style: new ol.style.Style({\n                        image: new ol.style.Circle({\n                            radius: 5,\n                            stroke: new ol.style.Stroke ({\n                                color: 'rgb(255,165,0)',\n                                width: 3\n                            }),\n                            fill: new ol.style.Fill({\n                                color: 'rgba(255,165,0,.3)'\n                            })\n                        }),\n                        stroke: new ol.style.Stroke ({\n                            color: 'rgb(255,165,0)',\n                            width: 3\n                        }),\n                        fill: new ol.style.Fill({\n                            color: 'rgba(255,165,0,.3)'\n                        })\n                    })\n                });\n\n                map.addLayer(sLayer);\n\n                let search = new ol.control.SearchNominatim (\n                    {\t//target: $(\".options\").get(0),\n                        polygon: $(\"#polygon\").prop(\"checked\"),\n                        reverse: true,\n                        position: true\t// Search, with priority to geo position\n                    });\n\n                map.addControl (search);\n\n                search.on('select', function(e){\n                    sLayer.getSource().clear();\n                    // Check if we get a geojson to describe the search\n                    if (e.search.geojson) {\n                        let format = new ol.format.GeoJSON();\n                        let f = format.readFeature(e.search.geojson, { dataProjection: \"EPSG:4326\", featureProjection: map.getView().getProjection() });\n                        sLayer.getSource().addFeature(f);\n                        let view = map.getView();\n                        let resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n                        let zoom = view.getZoomForResolution(resolution);\n                        let center = ol.extent.getCenter(f.getGeometry().getExtent());\n                        // redraw before zoom\n                        setTimeout(function(){\n                            view.animate({\n                                center: center,\n                                zoom: Math.min (zoom, 16)\n                            });\n                        }, 100);\n                    }\n                    else {\n                        map.getView().animate({\n                            center:e.coordinate,\n                            zoom: Math.max (map.getView().getZoom(),16)\n                        });\n                    }\n                });\n\n                function reverseGeocode(json) {\n                    if (!json[0].error) {\n                        let house_number = json[0].address.house_number ? ' ' + json[0].address.house_number : '',\n                            road = json[0].address.road ? json[0].address.road + house_number + ', ' : '',\n                            state = json[0].address.state ? json[0].address.state + ', ' : '',\n                            neighbourhood = json[0].address.neighbourhood ? json[0].address.neighbourhood + ', ' : '',\n                            allotments = json[0].address.allotments ? json[0].address.allotments + ', ' : '',\n                            village = json[0].address.village ? json[0].address.village + ', ' : '',\n                            city = json[0].address.city ? json[0].address.city + ', ' : '',\n                            country = json[0].address.country ? state + json[0].address.country : '',\n                            final_text = ''\n                        if ( !road ){\n                            final_text = neighbourhood + allotments + village + city + country\n                        }\n                        else {\n                            final_text = road + neighbourhood + allotments + village + city + state.replace(', ','')\n                        }\n                        $('#send_address').text(final_text);\n                    }\n                    else {\n                        $('#send_address').text(xabber.getString(\"location_fragment__address_error__title\"));\n                    }\n                }\n\n                map.on('click', function(e) {\n                    placemark.show(e.coordinate);\n                    search.reverseGeocode(e.coordinate, reverseGeocode);\n                    let coordinates = ol.proj.transform(e.coordinate, map.getView().getProjection(), 'EPSG:4326');\n                    $('.ol-control.ol-send').show();\n                    $('#send_text').text(coordinates[1].toFixed(6) + ':' + coordinates[0].toFixed(6));\n                    $('#output').text('geo:' + coordinates[1] + ',' + coordinates[0]);\n                    $('#lat').text(coordinates[1]);\n                    $('#lon').text(coordinates[0]);\n                });\n            }\n            window.setTimeout(function () { map.updateSize(); }, 200)\n        });\n    },\n\n    sendLocation: function (e) {\n        if (this.$('#output').val()) {\n            let body = this.$('#output').val(),\n                legacy_body = '',\n                start_idx = legacy_body.length,\n                end_idx = (body + legacy_body).length,\n                lat = this.$('#lat').val(),\n                lon = this.$('#lon').val(),\n                locations = [{\n                        lat: lat,\n                        lon: lon\n                    }],\n                mutable_content = [{\n                    start: start_idx,\n                    end: end_idx,\n                    type: 'geolocation'\n                    }],\n                attrs = {\n                    from_jid: this.account.get('jid'),\n                    locations: locations,\n                    mutable_content: mutable_content,\n                    message: this.$('#output').val(),\n                    begin: start_idx,\n                    end: end_idx\n                },\n                message = this.model.messages.create(attrs),\n                msg_id = message.get('msgid'),\n                stanza = $msg({\n                    to: this.model.get('jid'),\n                    type: 'chat',\n                    id: msg_id\n                });\n            stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up();\n            stanza.c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n            stanza.c('reference', {\n                xmlns: Strophe.NS.REFERENCE,\n                type: 'mutable',\n                begin: start_idx,\n                end: end_idx\n            }).c('geoloc', {\n                xmlns: Strophe.NS.GEOLOC,\n            }).c('lat').t(lat).up().c('lon').t(lon).up().up().up();\n            stanza.c('body').t(body).up();\n            if (this.model.get('encrypted') && this.account.omemo) {\n                stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n                if ($(stanza.tree()).children('body').length) {\n                    stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                    $(stanza.tree()).children('body').detach()\n                }\n                if ($(stanza.tree()).children('reference').length) {\n                    $(stanza.tree()).children('reference').each((idx, reference) => {\n                        stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                    });\n                    $(stanza.tree()).children('reference').detach()\n                }\n                stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n                stanza.c('from', {jid: this.account.get('jid')}).up().up()\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.omemo.encrypt(this.model.contact, stanza).then((msg) => {\n                    if (msg) {\n                        stanza = msg.message;\n                        message.set('trusted', msg.is_trusted);\n                    }\n                    this.account.sendMsg(stanza);\n                });\n            } else {\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.sendMsg(stanza);\n            }\n        }\n        this.close();\n    },\n\n    closeLocationName: function (e) {\n        this.$el.find('.ol-location').hide()\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    initializeScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar(\n            _.extend(this.ps_settings || {}, xabber.ps_settings)\n        );\n    },\n\n    destroyScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar('destroy');\n    },\n});\n\nxabber.ChatBottomView = xabber.BasicView.extend({\n    className: 'chat-bottom-wrap',\n    ps_selector: '.message-reference-preview-container',\n    template: templates.chat_bottom,\n    avatar_size: constants.AVATAR_SIZES.CHAT_BOTTOM,\n    mention_avatar_size: constants.AVATAR_SIZES.MENTION_ITEM,\n\n    events: {\n        \"click\": \"onClickBottom\",\n        \"click .ql-editor\": \"focusOnInput\",\n        \"click .my-avatar\": \"showAccountSettings\",\n        \"keyup .input-message .rich-textarea\": \"keyUp\",\n        \"keydown .input-message .rich-textarea\": \"keyDown\",\n        \"change .attach-file input\": \"onFileInputChanged\",\n        \"click .attach-location\": \"showLocationPopup\",\n        \"click .attach-media\": \"showMediaPopup\",\n        \"mouseup .message-input-panel\": \"stopWritingVoiceMessage\",\n        \"mousedown .attach-voice-message\": \"writeVoiceMessage\",\n        \"click .chat-mention\": \"onMentionButtonClick\",\n        \"click .close-forward\": \"unsetForwardedMessages\",\n        \"click .close-attachments\": \"removeAttachments\",\n        \"click .send-message\": \"submit\",\n        \"click .markup-text\": \"onShowMarkupPanel\",\n        \"click .reply-message\": \"replyMessages\",\n        \"click .forward-message\": \"forwardMessages\",\n        \"click .pin-message\": \"pinMessage\",\n        \"click .copy-message\": \"copyMessages\",\n        \"click .edit-message\": \"showEditPanel\",\n        \"click .delete-message\": \"deleteMessages\",\n        \"click .close-message-panel\": \"resetSelectedMessages\",\n        \"click .mention-item\": \"inputMention\",\n        \"click .format-text\": \"updateMarkupPanel\",\n        \"click .link-message-reference .mdi-close\": \"removeLinkReference\",\n        \"click .preview-preloader-container .preview-cancel-preloader\": \"stopLoadingLinkReference\",\n        \"click .message-reference-preview-item-file .mdi-close\": \"removeFileSnippet\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.click_counter = 0;\n        let rich_textarea_wrap = this.$('.rich-textarea-wrap');\n        let bindings = {\n            enter: {\n                key: 13,\n                handler: function(range) {\n                    if (xabber.settings.hotkeys !== \"enter\")\n                        this.quill.insertText(range.index, \"\\n\");\n                }\n            },\n            arrow_up: {\n                key: constants.KEY_ARROW_UP,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length)  {\n                            let $prev_elem = active_item.prev('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$prev_elem.length) {\n                                $prev_elem = this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                                this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            }\n                            $prev_elem.addClass('active');\n                            if ($prev_elem.length && ($prev_elem[0].offsetTop <= this.$('.mentions-list')[0].scrollTop))\n                                this.$('.mentions-list')[0].scrollTop = $prev_elem[0].offsetTop;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_down: {\n                key: constants.KEY_ARROW_DOWN,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length) {\n                            let $next_elem = active_item.next('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$next_elem.length) {\n                                $next_elem = this.$('.mentions-list').children('.mention-item').first();\n                                this.$('.mentions-list')[0].scrollTop = 0;\n                            }\n                            $next_elem.addClass('active');\n                            if ($next_elem.length && ($next_elem[0].offsetTop + $next_elem[0].clientHeight >= this.$('.mentions-list')[0].scrollTop + this.$('.mentions-list')[0].clientHeight))\n                                this.$('.mentions-list')[0].scrollTop = $next_elem[0].offsetTop - this.$('.mentions-list')[0].clientHeight + $next_elem[0].clientHeight;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = 0;\n                            this.$('.mentions-list').children('.mention-item').first().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_left: {\n                key: constants.KEY_ARROW_LEFT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            },\n            arrow_right: {\n                key: constants.KEY_ARROW_RIGHT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            }\n        };\n        this.quill = new Quill(rich_textarea_wrap[0], {\n            modules: {\n                keyboard: {\n                    bindings: bindings\n                },\n                toolbar: [\n                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                    this.model.get('group_chat') ? ['mention'] : [],\n                    ['clean']\n                ]\n            },\n            formats: ['bold', 'italic', 'underline', 'strike', 'blockquote', 'clean', 'emoji', 'mention'],\n            placeholder: xabber.getString(this.model.get('encrypted') ? \"chat_bottom__hint_default_encrypted\" : \"chat_bottom__hint_default\"),\n            scrollingContainer: '.rich-textarea',\n            theme: 'snow'\n        });\n        this.quill.container.firstChild.classList.add('rich-textarea');\n        this.$('.ql-mention').prop('disabled', true);\n        this.$('.ql-mention').append('<div class=\"chat-mention\" =\"\">@</div>');\n        this.contact = this.view.contact;\n        this.account = this.view.account;\n        this.fwd_messages = [];\n        this.edit_message = null;\n        this.stopped_loading_link_reference = false;\n        this.link_references = [];\n        this.link_reference_exempted = [];\n        this.currently_loaded_link_references = [];\n        this.attached_files = [];\n        this.loading_link_reference = false;\n        this.$('.account-jid').text(this.account.get('jid'));\n        this.updateAvatar();\n        this.quill.on(\"text-change\", this.onChangedText, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on('trusting_updated', this.updateEncrypted, this);\n        if (this.contact) {\n            this.contact.on(\"change:blocked\", this.onBlockedUpdate, this);\n            this.contact.on('update_my_info', this.updateInfoInBottom, this);\n        }\n        this.model.on(\"reply_selected_messages\", this.replyMessages, this);\n        this.model.on(\"forward_selected_messages\", this.forwardMessages, this);\n        this.model.on(\"copy_selected_messages\", this.copyMessages, this);\n        this.model.on(\"delete_selected_messages\", this.deleteMessages, this);\n        this.model.on(\"edit_selected_message\", this.showEditPanel, this);\n        this.model.on(\"pin_selected_message\", this.pinMessage, this);\n        this.model.on(\"reset_selected_messages\", this.resetSelectedMessages, this);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            rich_textarea = $rich_textarea[0],\n            $rich_textarea_wrap = $rich_textarea.parent('.rich-textarea-wrap'),\n            $placeholder = $rich_textarea.siblings('.placeholder');\n        rich_textarea.onpaste = this.onPaste.bind(this);\n        rich_textarea.oncut = this.onCut.bind(this);\n        rich_textarea.ondragenter = (ev) => {\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__drag_and_drop__text_drop_files_here\"));\n            $rich_textarea_wrap.addClass('file-drop');\n        };\n        rich_textarea.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n        rich_textarea.ondragleave = (ev) => {\n            if ($(ev.relatedTarget).closest('.rich-textarea').length)\n                return;\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n        };\n        rich_textarea.ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [];\n            this.view.addFileMessage(files);\n        };\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        let onloaded_sprites = 0,\n            i = 0,\n            all_sprites = Object.keys(Emoji.all).length;\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`);\n            $(`<div id=${emoji_list} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: emoji_list})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: emoji_list, title: xabber.getString(constants.EMOJI_LIST_NAME(emoji_list)), tag_name: 'a', emoji_size: 20}));\n        }\n        let window_onclick = function (ev) {\n            if ($(ev.target).closest('.emoticons-panel-wrap').length || $(ev.target).closest('.insert-emoticon').length)\n                return;\n            $emoji_panel_wrap.removeClass('opened');\n            window.removeEventListener(\"click\" , window_onclick);\n        };\n        $emoji_panel.perfectScrollbar(\n                _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.click((ev) => {\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if ($emoji_panel_wrap.hasClass('opened')) {\n                $emoji_panel_wrap.removeClass('opened');\n                window.removeEventListener( \"click\" , window_onclick);\n            }\n            else {\n                $emoji_panel_wrap.addClass('opened');\n                window.addEventListener( \"click\" , window_onclick);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(() => {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev.button)\n                return;\n            let $target = $(ev.target),\n                $target_emoji = $target.closest('.emoji-wrap').find('.emoji');\n            if ($target.closest('.emoji-menu').length)\n                return;\n            $target_emoji.length && this.typeEmoticon($target_emoji.data('emoji'));\n        });\n        this.renderLastEmoticons();\n    },\n\n    render: function (options) {\n        this.$('.message-input-panel').hideIf(options.blocked);\n        this.$('.blocked-msg').showIf(options.blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', options.blocked);\n        this.updateAvatar();\n        this.updateEncrypted();\n        let http_upload = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        this.messages_arr = this.content_view.$el.hasClass('participant-messages-wrap') && this.account.participant_messages || this.content_view.$el.hasClass('messages-context-wrap') && this.account.context_messages || this.model.messages;\n        this.renderLastEmoticons();\n        this.$('.attach-file').showIf(http_upload);\n        this.$('.attach-location').showIf(xabber.settings.mapping_service);\n        this.$('.attach-media').showIf(this.account.get('gallery_token') && this.account.get('gallery_url'));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left', !xabber.settings.mapping_service || !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left-extra', !xabber.settings.mapping_service && !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        if (this.model.get('group_chat')) {\n            this.updateInfoInBottom();\n        }\n        else {\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n        this.focusOnInput();\n        this.manageSelectedMessages();\n        xabber.chat_body.updateHeight();\n        return this;\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.message-actions-panel .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        (Math.max.apply(null, widths) !== 0) && this.$('.message-actions-panel .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateEncrypted: function () {\n        this.$el.children('.preloader-wrapper').detach();\n        this.$el.children('.omemo-disabled').detach();\n        this.view.$el.removeClass('encrypted');\n        this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('encryption-warning').html(\"\");\n        this.$el.attr('data-trust', null);\n        this.$el.attr('data-contact-trust', null);\n        this.$el.find('.warning-wrap').detach();\n        if (!this.model.get('encrypted'))\n            return;\n        if (this.account.omemo) {\n            this.$el.addClass('loading');\n            this.$el.prepend(env.templates.contacts.preloader());\n            this.account.omemo.checkOwnFingerprints().then((is_trusted) => {\n                if (is_trusted == 'none' || is_trusted == 'error') {\n                    let is_scrolled_bottom = this.view.isScrolledToBottom();\n                    this.$el.attr('data-trust', is_trusted);\n                    this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_trusted);\n                    this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_trusted);\n                    this.view.$el.attr('data-trust', is_trusted);\n                    this.$el.removeClass('loading');\n                    this.$el.children('.preloader-wrapper').detach();\n                    if (is_trusted == 'none')\n                        this.$el.prepend(templates.encryption_warning({color: 'amber', message: xabber.getString(\"omemo__alert_new_device_yours__text_new_device\")}));\n                    else\n                        this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_yours__text_keys_changed\")}));\n                    xabber.chat_body.updateHeight();\n                    is_scrolled_bottom && this.view.scrollToBottom();\n                    this.account.omemo.checkContactFingerprints(this.contact);\n                    (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                } else {\n                    this.account.omemo.checkContactFingerprints(this.contact).then((obj) => {\n                        let is_contact_trusted = obj.trust,\n                            unverified_counter = obj.unverified_counter;\n                        let is_scrolled_bottom = this.view.isScrolledToBottom();\n                        this.$el.removeClass('loading');\n                        this.$el.children('.preloader-wrapper').detach();\n                        if (is_contact_trusted === 'nil') {\n                            this.$el.prepend($(`<div class=\"warning-wrap no-fingerprints\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            return;\n                        }\n                        if (is_contact_trusted === 'error') {\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_partner__text_keys_changed\")}));\n                        } else {\n                            if (is_contact_trusted === 'none') {\n                                this.view.$el.addClass('encrypted');\n                                this.view.$('.chat-notification').removeClass('hidden').addClass('encryption-warning').attr('data-unverified-device-count', unverified_counter).html(templates.content_encryption_warning({message: xabber.getString(\"omemo__alert_new_device_partner__text_new_device\")}));\n                            }\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                        }\n                        this.view.$el.attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_contact_trusted);\n                        xabber.chat_body.updateHeight();\n                        is_scrolled_bottom && this.view.scrollToBottom();\n                        (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                    });\n                }\n            });\n        } else {\n            this.$el.addClass('loading');\n            this.$el.prepend($('<div class=\"omemo-disabled warning-wrap\"/>').text(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\")));\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (this.account.omemo) {\n            if (this.$el.attr('data-trust') !== undefined) {\n                this.account.showSettings(null, 'devices');\n            } else if (this.$el.attr('data-contact-trust') !== undefined) {\n                let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n                peer.fingerprints.open();\n            }\n        } else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    onBlockedUpdate: function () {\n        if (!this.isVisible())\n            return;\n        let is_blocked = this.model.get('blocked');\n        this.$('.message-input-panel').hideIf(is_blocked);\n        this.$('.blocked-msg').showIf(is_blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', is_blocked);\n    },\n\n    onClickBottom: function (ev) {\n        if ($(ev.target).closest('.ql-editor.rich-textarea').length) {\n            if (!this.quill.getText().trim().length) {\n                if (++this.click_counter === 3) {\n                    this.click_counter = 0;\n                    this.setOneLiner();\n                }\n            }\n        }\n    },\n\n    updateInfoInBottom: function () {\n        if (this.contact && this.contact.my_info) {\n            let nickname = this.contact.my_info.get('nickname'),\n                badge = this.contact.my_info.get('badge'),\n                avatar = this.contact.my_info.get('b64_avatar'),\n                role = this.contact.my_info.get('role');\n            if (nickname) {\n                this.$('.account-jid').hide();\n                this.$('.account-nickname').show().text(nickname);\n            }\n            else\n                this.$('.account-nickname').hide();\n            if (badge)\n                this.$('.account-badge').show().text(badge);\n            else\n                this.$('.account-badge').hide();\n            if (role && role != 'member')\n                this.$('.account-role').show().text(utils.pretty_name(role));\n            else\n                this.$('.account-role').hide();\n            this.$('.input-toolbar').emojify('.account-badge', {emoji_size: 16});\n            if (!avatar && this.contact.my_info.get('avatar_url'))\n                avatar = this.contact.my_info.get('avatar_url');\n            if (!avatar && this.account.cached_image)\n                avatar = this.account.cached_image;\n            !avatar && (avatar = Images.getDefaultAvatar(nickname));\n            this.$('.my-avatar.circle-avatar').setAvatar(avatar, this.avatar_size);\n        }\n        else {\n            this.$('.account-jid').show();\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n    },\n\n    updateAvatar: function () {\n        let image;\n        if (this.contact && this.contact.get('group_chat')) {\n            if (this.contact.my_info){\n                if (this.contact.my_info.get('b64_avatar'))\n                    image = this.contact.my_info.get('b64_avatar');\n                if (!image && this.contact.my_info.get('avatar_url'))\n                    image = this.contact.my_info.get('avatar_url');\n                if (!image && this.account.cached_image)\n                    image = this.account.cached_image;\n            }\n            !image && (image = Images.getDefaultAvatar(this.contact.my_info && this.contact.my_info.nickname || this.account.get('jid')));\n        }\n        else\n            image = this.account.cached_image;\n        this.$('.my-avatar.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    focusOnInput: function () {\n        if (!xabber.body.$el.siblings('#modals').children('.open:not(.collapsed):not(.plyr-player-popup-view)').length){\n            this.quill.enable();\n            this.quill.focus();\n        } else {\n            this.quill.blur();\n            this.quill.disable();\n        }\n        return this;\n    },\n\n    moveCursorToEnd: function () {\n        this.quill.root.focus();\n        let range = document.createRange(),\n            sel = window.getSelection(),\n            target = this.quill.root.lastElementChild\n            && this.quill.root.lastElementChild.lastChild ? this.quill.root.lastElementChild.lastChild : this.quill.root.lastElementChild;\n        range.selectNodeContents(target);\n        range.collapse(false);\n        sel.removeAllRanges();\n        sel.addRange(range);\n        range.detach(); // optimization\n        this.quill.root.scrollTop = this.quill.root.scrollHeight;\n    },\n\n    keyDown: function (ev) {\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') ||\n                ev.keyCode === constants.KEY_BACKSPACE ||\n                ev.keyCode === constants.KEY_DELETE) {\n            return;\n        }\n        if (ev.keyCode === constants.KEY_ENTER || ev.keyCode === 10) {\n            if (this.$('.mentions-list').css('display') !== 'none') {\n                let active_item = this.$('.mentions-list').children('.active.mention-item');\n                active_item.length && active_item.click();\n                ev.preventDefault();\n                return;\n            }\n            let send_on_enter = xabber.settings.hotkeys === \"enter\";\n            if ((send_on_enter && ev.keyCode === constants.KEY_ENTER && !ev.shiftKey) ||\n                    (!send_on_enter && ev.ctrlKey)) {\n                ev.preventDefault();\n                this.submit();\n                return;\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().trim() && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n    },\n\n    displayMicrophone: function () {\n        this.$('.mdi-send').addClass('hidden');\n        this.$('.attach-voice-message').removeClass('hidden');\n    },\n\n    displaySend: function () {\n        this.$('.mdi-send').removeClass('hidden');\n        this.$('.attach-voice-message').addClass('hidden');\n    },\n\n    updateMarkupPanel: function (ev) {\n        let $ic_markup = $(ev.target).closest('.format-text');\n        $ic_markup.toggleClass('active');\n        if ($ic_markup.hasClass('active')) {\n            this.$('.ql-toolbar.ql-snow').show();\n            this.$('.last-emoticons').hide();\n        }\n        else {\n            this.$('.ql-toolbar.ql-snow').hide();\n            this.$('.last-emoticons').show();\n        }\n    },\n\n    setOneLiner: function () {\n        let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n            placeholder = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n        if (!placeholder) {\n            this.setOneLiner();\n            return;\n        }\n        this.updatePlaceholder(placeholder);\n    },\n\n    setDefaultPlaceholder: function () {\n        let placeholder = this.model.get('encrypted') ? xabber.getString(\"chat_bottom__hint_default_encrypted\") : xabber.getString(\"chat_bottom__hint_default\");\n        this.updatePlaceholder(placeholder);\n    },\n\n    updatePlaceholder: function (placeholder) {\n        this.quill.root.setAttribute('data-placeholder', placeholder);\n    },\n\n    changeEncryption: function () {\n        this.model.set('encrypted', !this.model.get('encrypted'));\n    },\n\n    getParticipantsList: function () {\n        let list = [];\n        this.contact.participants.each((participant) => {\n            list.push(participant.get('nickname') || participant.get('jid') || participant.get('id'));\n        });\n        return list.join(', ');\n    },\n\n    onChangedText: function () {\n        let current_height = this.$el.height(),\n            quill_textarea = $(this.quill.container).find('.rich-textarea'),\n            quill_current_height = quill_textarea.prop('scrollHeight');\n        if (quill_current_height !== this.text_input_height) {\n            if (this.text_input_height < quill_current_height){\n                quill_textarea.scrollTop(quill_current_height);\n            }\n            this.text_input_height = quill_current_height;\n        }\n        let quill_content = this.quill.getContents()\n        if (quill_content && quill_content.ops && quill_content.ops.length){\n            let text = quill_content.ops[0].insert;\n            if (text && text.trimStart) {\n                let trimmed_text = text.trimStart();\n                if (text.length != trimmed_text.length){\n                    quill_content.ops[0].insert = trimmed_text;\n                    this.quill.setContents(quill_content, 'user');\n                    this.quill.disable();\n                    setTimeout(() => {\n                        this.focusOnInput();\n                        this.quill.root.focus();\n                    },1)\n                }\n            }\n        }\n\n        if (current_height !== this.bottom_height) {\n            this.bottom_height = current_height;\n            this.view.scrolled_to_bottom = this.view.isScrolledToBottom();\n        }\n        clearTimeout(this._timeout_textchange);\n        this._timeout_textchange = setTimeout(() => {\n            this.updateOpenGraphReference(this.quill.getText())\n        }, 500);\n    },\n\n    updateMentionsList: function (mention_text) {\n        mention_text = (mention_text || \"\").toLowerCase();\n        this.contact.searchByParticipants(mention_text, (participants) => {\n            if (participants.length || xabber.getString(\"chat_bottom__mentions_list__item_everyone\").toLowerCase().indexOf(mention_text) > -1 || mention_text === \"*\" || 'all'.indexOf(mention_text) > -1 || 'все'.indexOf(mention_text) > -1) {\n                this.$('.mentions-list').html(\"\").show().perfectScrollbar({theme: 'item-list'});\n                this.$('.mentions-list')[0].scrollTop = 0;\n                participants.forEach((participant) => {\n                    let attrs = _.clone(participant.attributes);\n                    if (!attrs.id)\n                        return;\n                    attrs.nickname = attrs.nickname ? Strophe.xmlescape(attrs.nickname) : attrs.id;\n                    let mention_item = $(templates.group_chats.mention_item(attrs));\n                    mention_item.find('.circle-avatar').setAvatar(participant.get('b64_avatar') || utils.images.getDefaultAvatar(participant.get('nickname') || participant.get('jid') || participant.get('id')), this.mention_avatar_size);\n                    mention_item.find('.nickname').text().replace(mention_text, mention_text.bold());\n                    this.$('.mentions-list').append(mention_item);\n                });\n                let mention_all = $(templates.group_chats.mention_item({jid: \"\", nickname: xabber.getString(\"chat_bottom__mentions_list__item_everyone\"), id: \"\"}));\n                mention_all.find('.circle-avatar').setAvatar(this.contact.cached_image, this.mention_avatar_size);\n                mention_all.find('.one-line.jid').text(this.getParticipantsList());\n                this.$('.mentions-list').append(mention_all);\n                this.$('.mentions-list').children('.mention-item').first().addClass('active');\n            } else\n                this.$('.mentions-list').html(\"\").hide();\n        });\n    },\n\n    onMentionButtonClick: function () {\n        if (this.$('.ql-mention').hasClass('ql-active')){\n            this.$('.ql-mention').prop('disabled', false);\n            this.$('.ql-mention').click();\n            this.$('.ql-mention').prop('disabled', true);\n\n            return;\n        }\n        let selection = this.quill.getSelection() ? this.quill.getSelection().index : (this.quill.getLength() - 1);\n        this.quill.insertText(selection, ' @ ', 'user')\n        this.quill.setSelection(selection + 2, 0)\n        let mention_text = \"\";\n        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n            this.updateMentionsList(mention_text);\n        } else {\n            this.contact.participants.participantsRequest({version: 0}, () => {\n                this.updateMentionsList(mention_text);\n            });\n        }\n\n    },\n\n    inputMention: function (ev) {\n        ev && ev.preventDefault();\n        let $rich_textarea = this.$('.rich-textarea'),\n            $participant_item = $(ev.target).closest('.mention-item'),\n            nickname = $participant_item.data('nickname'),\n            id = $participant_item.data('id') || \"\",\n            jid = !this.contact.get('incognito_chat') && $participant_item.data('jid') || \"\",\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\"),\n            caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n            mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n            mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n            to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji(),\n            mentions_at = to_caret_text && Array.from(to_caret_text.matchAll(mention_at_regexp)) || [],\n            mentions_plus = to_caret_text && Array.from(to_caret_text.matchAll(mention_plus_regexp)) || [],\n            at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n            plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n            mention_position = Math.max(at_position, plus_position),\n            mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\");\n        (mention_text.length && mention_text[0].match(/\\s/)) && mention_position++;\n        mention_text = mention_text.replace(/\\s?(@|[+])/, \"\");\n        this.$('.mentions-list').hide();\n        this.quill.deleteText(mention_position, (mention_text.length + 1));\n        if (!nickname.length) {\n            if (id.length)\n                nickname = id;\n            else\n                return;\n        }\n        this.insertMention({jid: jid, id: id, nickname: nickname, position: mention_position});\n        this.focusOnInput();\n    },\n\n    insertMention: function (options) {\n        if (!options)\n            return;\n        let id = options.id, jid = options.jid, nickname = options.nickname,\n            is_me = !id && !jid || this.account.get('jid') === jid || this.contact.my_info && this.contact.my_info.get('id') === id,\n            attrs = {jid: jid, id: id, nickname: Strophe.xmlescape(nickname), is_me: is_me},\n            position = options.position;\n        this.quill.insertEmbed(position, 'mention', JSON.stringify(attrs));\n        this.quill.pasteHTML(position + nickname.length, '<text> </text>');\n        this.quill.setSelection(position + nickname.length + 1, 0);\n    },\n\n    showAccountSettings: function () {\n        if (this.contact.get('group_chat')) {\n            if (this.contact.my_info && this.contact.my_rights) {\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n            } else\n                this.contact.getMyInfo(() => {\n                    this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                    this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n                });\n        } else {\n            this.account.showSettings();\n        }\n    },\n\n    keyUp: function (ev) {\n        let $rich_textarea = $(ev.target).closest('.rich-textarea'),\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\");\n        if (text) {\n            this.click_counter = 0;\n            this.setDefaultPlaceholder();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            if (!text) {\n                let $msg = this.view.$(`.chat-message[data-from=\"${this.account.get('jid')}\"]`).last();\n                (!$msg.length && this.contact.participants) && ($msg = this.view.$(`.chat-message[data-from=\"${this.contact.participants.find(m => m.get('jid') === this.account.get('jid')).get('id')}\"]`).last());\n                let edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n                if (!edit_msg)\n                    return;\n                this.edit_message = edit_msg;\n                this.setEditedMessageAttachments(edit_msg);\n                this.setEditedMessage(edit_msg);\n            }\n        }\n        if ((!text || text == \"\\n\") && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length))\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') && !this.edit_message) {\n            ev.preventDefault();\n            if (this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0) {\n                let $elem = this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').last();\n                if ($elem.hasClass('link-message-reference')){\n                    let url = $elem.attr('data-original-url');\n                    if (url) {\n                        $elem.remove();\n                        this.removeLinkReferenceByUrl(url);\n                    }\n                } else {\n                    let id = $elem.attr('data-id');\n                    if (id) {\n                        $elem.remove();\n                        this.removeFileSnippetById(id);\n                    }\n                }\n            } else {\n                this.unsetForwardedMessages();\n            }\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            this.unsetForwardedMessages();\n        } else {\n            if (ev.keyCode === constants.KEY_ARROW_UP || ev.keyCode === constants.KEY_ARROW_DOWN) {\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_ARROW_LEFT || ev.keyCode === constants.KEY_ARROW_RIGHT) && this.$('.mentions-list').css('display') !== 'none') {\n                this.$('.mentions-list').hide();\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_BACKSPACE || ev.keyCode === constants.KEY_DELETE) && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length)) {\n                if (!text || text == \"\\n\") {\n                    if (this.$('.fwd-messages-preview').hasClass('hidden'))\n                        this.displayMicrophone();\n                    else\n                        this.displaySend();\n                    $rich_textarea.flushRichTextarea();\n                }\n            }\n            if (ev.keyCode === constants.KEY_SPACE) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji();\n                if (to_caret_text[caret_position - 2] && to_caret_text[caret_position - 2].match(/@|[+]/)) {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n            }\n            if (this.model.get('group_chat')) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n                    mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replace(/\\n$/, \"\").replaceEmoji(),\n                    mentions_at = Array.from(to_caret_text.matchAll(mention_at_regexp)),\n                    mentions_plus = Array.from(to_caret_text.matchAll(mention_plus_regexp)),\n                    at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n                    plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n                    mention_position = Math.max(at_position, plus_position);\n                if (this.quill.selection.lastRange && this.quill.getLeaf(this.quill.selection.lastRange.index)[0].parent.domNode.tagName.toLowerCase() === 'mention') {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n                if (!(caret_position > -1) || mention_position === -1) {\n                    this.$('.mentions-list').hide();\n                }\n                if (mention_position > -1) {\n                    let mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\").replace(/\\s?(@|[+])/, \"\");\n                        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n                            this.updateMentionsList(mention_text);\n                        } else {\n                            this.contact.participants.participantsRequest({version: 0}, () => {\n                                this.updateMentionsList(mention_text);\n                            });\n                        }\n                }\n                else\n                    this.$('.mentions-list').hide();\n            }\n        }\n        $rich_textarea.updateRichTextarea();\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onCut: function () {\n        if (this.$('.fwd-messages-preview').hasClass('hidden'))\n            this.displayMicrophone();\n        else {\n            this.displaySend();\n        }\n    },\n\n    onPaste: function (ev) {\n        ev.preventDefault();\n        let $rich_textarea = $(ev.target),\n            clipboard_data = ev.clipboardData;\n        if (clipboard_data) {\n            if (clipboard_data.files.length > 0) {\n                let image_from_clipboard = clipboard_data.files[clipboard_data.files.length - 1],\n                    blob_image = window.URL.createObjectURL(new Blob([image_from_clipboard])),\n                    options = { blob_image_from_clipboard: blob_image};\n                this.view.addFileMessage([image_from_clipboard]);\n                this.focusOnInput();\n            }\n            else if (clipboard_data.items.length > 0) {\n                let image_from_clipboard = clipboard_data.items[clipboard_data.items.length - 1];\n                if (image_from_clipboard.kind === 'file') {\n                    let blob = image_from_clipboard.getAsFile(),\n                        reader = new FileReader(), deferred = new $.Deferred();\n                    reader.onload = function(event){\n                        let options = { blob_image_from_clipboard: event.target.result};\n                        deferred.resolve();\n                        this.focusOnInput();\n                    };\n                    deferred.done(() => {\n                        blob.name = 'clipboard.png';\n                        this.view.addFileMessage([blob]);\n                    });\n                    reader.readAsDataURL(blob);\n                }\n                else {\n                    let text = _.escape(clipboard_data.getData('text')),\n                        arr_text = Array.from(text);\n                    arr_text.forEach((item, idx) => {\n                        if (item == '\\n')\n                            arr_text.splice(idx, 1, '</p><p>');\n                        if (item == ' ')\n                            arr_text.splice(idx, 1, '&nbsp');\n                    });\n                    text = \"<p>\" + arr_text.join(\"\") + \"</p>\";\n                    let range = window.getSelection().getRangeAt(0);\n                    range.insertNode($('<div>' + text + '</div>')[0]);\n                }\n            }\n            else {\n                let text = _.escape(clipboard_data.getData('text')),\n                    arr_text = Array.from(text);\n                arr_text.forEach((item, idx) => {\n                    if (item == '\\n')\n                        arr_text.splice(idx, 1, '</p><p>');\n                    if (item == ' ')\n                        arr_text.splice(idx, 1, '&nbsp');\n                });\n                text = \"<p>\" + arr_text.join(\"\") + \"</p>\";\n                let range = window.getSelection().getRangeAt(0);\n                range.insertNode($('<div>' + text + '</div>')[0]);\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\") && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n        this.focusOnInput();\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files && files.length) {\n            this.view.addFileMessage(files);\n            $(target).val('');\n        }\n    },\n\n    updateOpenGraphReference: function (text) {\n        if (!(this.account.get('gallery_token') && this.account.get('gallery_url')))\n            return;\n        let url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g,\n            list = text && text.match(url_regexp);\n        list = _.difference(list, this.link_reference_exempted);\n        list = _.difference(list, this.currently_loaded_link_references);\n        if (list && list.length){\n            this.stopped_loading_link_reference = false;\n            this.$('.preview-preloader-container').removeClass('hidden');\n            let request_count = 0;\n            this.link_reference_request_timestamp = Date.now();\n            let request_timestamp = this.link_reference_request_timestamp;\n            list.forEach((item, idx) => {\n                this.account.getOpenGraphData(item, (res) => {\n                    if (this.stopped_loading_link_reference || !(request_timestamp === this.link_reference_request_timestamp))\n                        return;\n                    if (this.currently_loaded_link_references.includes(item)){\n                        request_count++;\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        return;\n                    } else {\n                        this.currently_loaded_link_references = this.currently_loaded_link_references.concat([item]);\n                    }\n                    let dfd = new $.Deferred();\n                    dfd.done(() => {\n                        request_count++;\n                        this.displaySend();\n                        this.$('.message-reference-preview').removeClass('hidden');\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        res.original_text = item\n                        this.$('.message-reference-preview-container').append($(templates.messages.link_reference({\n                            item: res,\n                            domain: res.url ? utils.getDomainFromUrl(res.url) : res.site_name,\n                            url: null\n                        })));\n                        this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n                            type: 'image',\n                            closeOnContentClick: true,\n                            fixedContentPos: true,\n                            mainClass: 'mfp-no-margins mfp-with-zoom',\n                            image: {\n                                verticalFit: true,\n                                titleSrc: function(item) {\n                                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                                }\n                            },\n                            zoom: {\n                                enabled: true,\n                                duration: 300\n                            }\n                        });\n                        this.link_references = this.link_references.concat(res);\n                        xabber.chat_body.updateHeight();\n                        this.scrollToBottom();\n                    });\n                    if ((res.image_height && res.image_width) || !res.image){\n                        dfd.resolve()\n                    } else {\n                        let img = new Image();\n                        img.onload = (image) => {\n                            res.image_height = img.height;\n                            res.image_width = img.width;\n                            dfd.resolve()\n                        };\n                        img.onerror = img.onabort = (image) => {\n                            res.image = undefined;\n                            dfd.resolve()\n                        };\n                        img.src = res.image;\n                    }\n                }, (err) => {\n                    this.link_reference_exempted = this.link_reference_exempted.concat([item]);\n                    request_count++;\n                    if (request_count === list.length)\n                        this.$('.preview-preloader-container').addClass('hidden');\n                })\n\n            });\n        }\n    },\n\n    removeAttachments: function () {\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n    },\n\n    stopLoadingLinkReference: function () {\n        this.$('.preview-preloader-container').addClass('hidden');\n        this.stopped_loading_link_reference = true;\n    },\n\n    removeLinkReference: function (ev) {\n        let $elem = $(ev.target).closest('.link-message-reference'),\n            url = $elem.attr('data-original-url');\n        $elem.remove();\n        this.removeLinkReferenceByUrl(url);\n    },\n\n    removeLinkReferenceByUrl: function (url) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = this.link_references.filter(item => item.original_text != url);\n        this.currently_loaded_link_references = this.currently_loaded_link_references.filter(item => item != url);\n        this.link_reference_exempted = this.link_reference_exempted.concat([url]);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllLinkReferences: function () {\n        this.stopLoadingLinkReference();\n        this.$('.message-reference-preview-container .link-message-reference').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = [];//\n        this.currently_loaded_link_references = [];//\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    addFileSnippets: function (files) {\n        if (files && (this.attached_files.length + files.length) > 10){\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        if (this.edit_message)\n            return;\n        files && files.length && this.$('.message-reference-preview').removeClass('hidden');\n        files && files.length && this.displaySend();\n        files.forEach((file) => {\n            let id = uuid();\n            file.uid = id;\n            this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                file: file,\n                uid: id,\n                blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                filesize: utils.pretty_size(file.size),\n                typeicon: utils.file_type_icon(file.type),\n                filetype: utils.pretty_file_type(file.type),\n            })));\n            this.attached_files = this.attached_files.concat([file]);\n            xabber.chat_body.updateHeight();\n            this.scrollToBottom();\n        });\n        files && files.length && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    removeFileSnippet: function (ev) {\n        let $elem = $(ev.target).closest('.message-reference-preview-item-file'),\n            id = $elem.attr('data-id');\n        $elem.remove();\n        this.removeFileSnippetById(id);\n    },\n\n    removeFileSnippetById: function (id) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = this.attached_files.filter(item => item.uid != id);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllFileSnippets: function (ev) {\n        this.$('.message-reference-preview .message-reference-preview-item-file').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = [];\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    setEditedMessageAttachments: function (edit_msg, is_upload) {\n        !is_upload && this.$('.attach-file input').attr('disabled', true);\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n        let files = edit_msg.get('files') || [],\n            images = edit_msg.get('images') || [],\n            videos = edit_msg.get('videos') || [],\n            link_references = edit_msg.get('link_references') || [];\n        files = files.concat(images).concat(videos);\n        if ((link_references && link_references.length) || (files && files.length)) {\n            this.$('.message-reference-preview').removeClass('hidden');\n            this.displaySend();\n        }\n        link_references.forEach((item) => {\n            this.link_references = this.link_references.concat([item]);\n            this.currently_loaded_link_references = this.currently_loaded_link_references.concat(item.original_text);\n            this.$('.message-reference-preview-container').prepend($(templates.messages.link_reference({\n                item: item,\n                domain: item.url ? utils.getDomainFromUrl(item.url) : item.site_name,\n                url: null\n            })));\n            xabber.chat_body.updateHeight();\n        });\n        files.forEach((file) => {\n            if (!file)\n                return;\n            let id = uuid();\n            file.uid = id;\n            this.attached_files = this.attached_files.concat([file]);\n            if (is_upload){\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            } else{\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: file.sources.length && file.sources[0] && utils.isImageType(file.type) ? file.sources[0] : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            }\n            xabber.chat_body.updateHeight();\n        });\n        ((link_references && link_references.length) || (files && files.length)) && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    showLocationPopup: function (ev) {\n        if (!xabber.settings.mapping_service)\n            return;xabber\n        xabber.popup_coordinates = undefined;\n        xabber.location_name = undefined;\n        new xabber.ChatLocationView({content: this}).show(ev);\n    },\n\n    showMediaPopup: function (ev) {\n        if (this.edit_message)\n            return;\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let media_view = new xabber.SendMediaView();\n            media_view.render({parent: this, model: this.account});\n        }\n    },\n\n    stopWritingVoiceMessage: function (ev) {\n        let $bottom_panel = this.$('.message-input-panel');\n        if ($bottom_panel.find('.recording').length > 0) {\n            $bottom_panel.find('.recording').removeClass('recording');\n            return;\n        }\n    },\n\n    writeVoiceMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('recording'))\n            $elem.removeClass('recording');\n        else {\n            $elem.addClass('recording ground-color-50');\n            if (!this.model.get('recording_voice_message'))\n                this.initAudio();\n        }\n    },\n\n    initAudio: function() {\n        navigator.getUserMedia = (navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.webkitGetUserMedia || navigator.getUserMedia);\n        if (navigator.getUserMedia) {\n            this.model.set('recording_voice_message', true)\n            let constraints = { audio: true, channelCount: 1 },\n                chunks = [],\n                $mic = this.$('.send-area .attach-voice-message'),\n                onSuccess = (stream) => {\n                if (!$mic.is(\":hover\")) {\n                    $mic.removeClass('recording ground-color-50');\n                    this.model.set('recording_voice_message', false)\n                    return;\n                }\n                let mediaRecorder = new opusRecorder({\n                        encoderPath: opusRecorderEncoderPath,\n                        encoderSampleRate: 16000,\n                        numberOfChannels: 1\n                }),\n                    timer = 1, start_time, end_time,\n                    mic_hover = true;\n                    mediaRecorder.onstart = () => {\n                        if (xabber.settings.typing_notifications) {\n                            this.view.sendChatState('composing', 'voice');\n                            this._chatstate_send_timeout = setInterval(() => {\n                                this.view.sendChatState('composing', 'voice');\n                            }, constants.CHATSTATE_INTERVAL_COMPOSING_AUDIO);\n                        }\n                        start_time = moment.now();\n                        let $bottom_panel = this.$('.message-input-panel'),\n                            $timer_elem = this.$('.input-voice-message .timer'),\n                            $status_msg = this.$('.input-voice-message .voice-msg-status'),\n                            $voice_visualizer = this.$('.input-voice-message .voice-visualizer');\n                        $timer_elem.text('0:00');\n                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                        $bottom_panel.addClass('voice-message-recording');\n\n                        let timerId = setInterval(() => {\n                                if ($mic.hasClass('recording') && (timer < constants.VOICE_MSG_TIME)) {\n                                    if (timer%1 == 0)\n                                        $timer_elem.text(utils.pretty_duration(timer));\n                                    timer = (timer*10 + 2)/10;\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    if (!mic_hover)\n                                        $status_msg.css('color', '#D32F2F').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice_short\"));\n                                    else\n                                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                                }\n                                else\n                                {\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    mediaRecorder.stop();\n                                    $mic.removeClass('recording ground-color-50');\n                                    $bottom_panel.removeClass('voice-message-recording');\n                                    this.model.set('recording_voice_message', false)\n                                    clearInterval(timerId);\n                                }\n                            }, 200),\n                            flag = false,\n                            timerIdDot = setInterval(() => {\n                                if ($mic.hasClass('recording')) {\n                                    if (flag)\n                                        $voice_visualizer.css('background-color', '#FFF');\n                                    else\n                                        $voice_visualizer.css('background-color', '#D32F2F');\n                                    flag = !flag;\n                                }\n                                else\n                                    clearInterval(timerIdDot);\n                            }, 500);\n                    };\n\n                    mediaRecorder.start();\n\n                mediaRecorder.onstop = () => {\n                    clearInterval(this._chatstate_send_timeout);\n                    (xabber.settings.typing_notifications) && this.view.sendChatState('paused');\n                    end_time = moment.now();\n                    if (mic_hover && ((end_time - start_time)/1000 >= 1.5)) {\n                        let audio_name = (\"voice message \" + moment().format('YYYY-MM-DD HH:mm:ss') + '.ogg'), audio_type = 'audio/ogg; codecs=opus',\n                            blob = new Blob([chunks], { 'type' : audio_type}),\n                            file = new File([blob], audio_name, {\n                                type: audio_type,\n                            });\n                        file.voice = true;\n                        file.duration = Math.round((end_time - start_time)/1000);\n                        this.view.addFileMessage([file], true);\n                    }\n                    chunks = [];\n                };\n\n                mediaRecorder.ondataavailable = (e) => {\n                    chunks = e;\n                };\n            };\n\n            let onError = (error) => {\n                console.log(xabber.getString(\"file_upload__error\", [error]));\n                $mic.removeClass('recording ground-color-50');\n            };\n\n            window.navigator.getUserMedia(constraints, onSuccess, onError);\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        if (typeof emoji == 'number')\n            emoji = Number(emoji).toString();\n        let caret_idx = -1;\n        if (this.quill.selection.lastRange)\n            caret_idx = this.quill.selection.lastRange.index;\n        else if (this.quill.selection.savedRange)\n            caret_idx = this.quill.selection.savedRange.index;\n        this.quill.focus();\n        if (!this.edit_message)\n            this.displaySend();\n        (!this.view.chat_state && xabber.settings.typing_notifications) && this.view.sendChatState('composing');\n        this.quill.insertText(caret_idx++, emoji);\n        if (this.quill.getFormat(caret_idx, 1).mention) {\n            this.quill.formatText(caret_idx, 1, 'mention', false);\n        }\n        this.quill.setSelection(caret_idx + 1);\n        xabber.chat_body.updateHeight();\n    },\n\n    renderLastEmoticons: function () {\n        if (!this.account.chat_settings)\n            return;\n        let cached_last_emoji = this.account.chat_settings.getLastEmoji(),\n            $last_emoticons = this.$('.last-emoticons').empty(), emoji;\n        if (cached_last_emoji.length < 7) {\n            for (let idx = 0; idx < 7; idx++) {\n                emoji = Emoji.getByIndex(idx);\n                this.account.chat_settings.updateLastEmoji(emoji);\n            }\n        }\n        cached_last_emoji = this.account.chat_settings.getLastEmoji();\n        for (let idx = 0; idx < 7; idx++) {\n            $('<div class=\"emoji-wrap\"/>').html(\n                cached_last_emoji[idx] && cached_last_emoji[idx].emojify({tag_name: 'div', emoji_size: 20})\n            ).appendTo($last_emoticons);\n        }\n        $last_emoticons.find('.emoji-wrap').mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button) {\n                return;\n            }\n            let $target_text = $(ev.target).closest('.emoji-wrap').text();\n            this.typeEmoticon($target_text);\n        });\n    },\n\n    submit: function (ev, forced) {\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            mentions = [],\n            markup_references = [],\n            blockquotes = [],\n            link_references = this.link_references,\n            attached_files = this.attached_files,\n            text = $rich_textarea.getTextFromRichTextarea(),\n            dfd = new $.Deferred();\n\n\n        if (this.model.get('encrypted') && this.view.$('.chat-notification').hasClass('encryption-warning') && !forced){\n            let unverified_counter = this.view.$('.encryption-warning').attr('data-unverified-device-count');\n            utils.dialogs.ask_extended(xabber.getQuantityString(\"dialog_unverified_devices__header\", unverified_counter || 1), xabber.getQuantityString(\"dialog_unverified_devices__text\", unverified_counter || 1),\n                {modal_class: 'modal-unverified-devices', no_dialog_options: true},\n                { ok_button_text: xabber.getString(\"omemo__alert_new_device__button_manage_devices\"), optional_button: 'send-anyway', optional_button_text: xabber.getString(\"dialog_unverified_devices__send\")})\n                .done((result) => {\n                if (result) {\n                    if (result === 'send-anyway'){\n                        this.submit(ev, true);\n                    }\n                    else{\n                        this.openDevicesWindow();\n                    }\n                }\n            });\n            return;\n        }\n\n        dfd.done(() => {\n            this.$('.mentions-list').html(\"\").hide();\n            $rich_textarea.find('.emoji').each((idx, emoji_item) => {\n                let emoji = emoji_item.innerText;\n                this.account.chat_settings.updateLastEmoji(emoji);\n            });\n            let content_concat = [];\n            if (text.length >= constants.STANZA_MAX_SIZE) {\n                utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n                $rich_textarea.flushRichTextarea();\n                return;\n            }\n            if (text.length) {\n                this.quill.getContents().forEach((content) => {\n                    if (content.attributes) {\n                        let content_attrs = [],\n                            start_idx = content_concat.length,\n                            end_idx = start_idx + ((content.insert && content.insert.emoji) ? 1 : _.escape(content.insert).length);\n                        for (let attr in content.attributes)\n                            (attr !== 'alt' && attr !== 'blockquote') && content_attrs.push(attr);\n                        if (content_attrs.indexOf('mention') > -1) {\n                            let mention_idx = content_attrs.indexOf('mention'),\n                                is_gc = this.contact.get('group_chat'),\n                                target = $($rich_textarea.find('mention')[mentions.length]).attr('data-target');\n                            content_attrs.splice(mention_idx, mention_idx + 1);\n                            target = is_gc ? ('xmpp:' + this.contact.get('jid') + target) : ('xmpp:' + target);\n                            mentions.push({\n                                start: start_idx,\n                                end: end_idx,\n                                target: target,\n                                is_gc: is_gc\n                            });\n                        }\n                        if (content.attributes.blockquote) {\n                            if (content_concat.length) {\n                                Array.from(content.insert).forEach((ins) => {\n                                    let quote_start_idx = (content_concat.lastIndexOf('\\n') < 0) ? 0 : (content_concat.lastIndexOf('\\n') + 1),\n                                        quote_end_idx = content_concat.length;\n                                    blockquotes.push({\n                                        marker: constants.QUOTE_MARKER,\n                                        start: quote_start_idx,\n                                        end: quote_end_idx + constants.QUOTE_MARKER.length\n                                    });\n                                    text = Array.from(_.escape(text));\n\n                                    if (quote_start_idx === quote_end_idx) {\n                                        text[quote_start_idx - 1] += constants.QUOTE_MARKER;\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER;\n                                    }\n                                    else {\n                                        text[quote_start_idx] = constants.QUOTE_MARKER + text[quote_start_idx];\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER + content_concat[quote_start_idx];\n                                    }\n                                    (quote_end_idx > text.length) && (quote_end_idx = text.length);\n                                    text[quote_end_idx - 1] += '\\n';\n\n                                    text = _.unescape(text.join(\"\"));\n                                    content_concat = Array.from(content_concat.join(\"\"));\n\n                                    markup_references.forEach((markup_ref) => {\n                                        if (markup_ref.start >= quote_start_idx) {\n                                            markup_ref.start += constants.QUOTE_MARKER.length;\n                                            markup_ref.end += constants.QUOTE_MARKER.length;\n                                        }\n                                    });\n\n                                    content_concat = content_concat.concat(Array.from(_.escape(ins)));\n                                })\n                            }\n                        }\n                        content_attrs.length && markup_references.push({\n                            start: start_idx,\n                            end: end_idx,\n                            markup: content_attrs\n                        });\n                    }\n                    if (content.insert && content.insert.emoji) {\n                        content_concat = content_concat.concat(Array.from($(content.insert.emoji).data('emoji')));\n                    }\n                    else if (content.attributes && content.attributes.blockquote) {\n                    }\n                    else\n                        content_concat = content_concat.concat(Array.from(_.escape(content.insert)));\n                });\n            }\n            let start_length = text.length;\n            text = text.trimStart();\n            if (start_length > text.length) {\n                let delta = start_length - text.length;\n                mentions.forEach((mention) => {\n                    mention.start -= delta;\n                    mention.end -= delta;\n                });\n                markup_references.forEach((markup_reference) => {\n                    markup_reference.start -= delta;\n                    markup_reference.end -= delta;\n                });\n                blockquotes.forEach((blockquote) => {\n                    blockquote.start -= delta;\n                    blockquote.end -= delta;\n                });\n            }\n            if (link_references && link_references.length) {\n                link_references = link_references.filter(item => item.original_text);\n                link_references.forEach((link_reference) => {\n                    if (link_reference && link_reference.original_text) {\n                        link_reference.start = text.indexOf(link_reference.original_text);\n                        if (link_reference.start != -1) {\n                            link_reference.start = 0;\n                            link_reference.end = 0;\n                        }\n                    }\n                });\n            }\n            this.removeAllLinkReferences();\n            this.link_reference_exempted = [];\n            this.removeAllFileSnippets();\n            text = text.trimEnd();\n            $rich_textarea.flushRichTextarea();\n            this.quill.focus();\n            this.displayMicrophone();\n            if (this.edit_message) {\n                this.editMessage(text, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n                $rich_textarea.placeCaretAtEnd();\n                return;\n            }\n            if (text || this.fwd_messages.length || (attached_files && attached_files.length) || (link_references && link_references.length)) {\n                if (this.model.get('saved') && this.fwd_messages.length && !text)\n                    this.fwd_messages.forEach((message) => {\n                        this.view.onSubmit(\"\", [message]);\n                    });\n                else\n                    this.view.onSubmit(text, this.fwd_messages, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n            }\n            this.unsetForwardedMessages();\n            xabber.chats_view.clearSearch();\n            if (this.model.messages_view)\n                if (this.model.messages_view.data.get('visible'))\n                    xabber.chats_view.openChat(this.model.item_view, {right_contact_save: true, clear_search: true, screen: xabber.body.screen.get('name')});\n            $rich_textarea.placeCaretAtEnd();\n        });\n        if (attached_files && attached_files.length) {\n            let failed_files = [],\n                files_count = 0,\n                file_check_dfd = new $.Deferred();\n            file_check_dfd.done(() => {\n                if (failed_files.length){\n                    failed_files.forEach((file) => {\n                        this.$(`.message-reference-preview-item-file[data-id=\"${file.uid}\"]`).remove();\n                        this.removeFileSnippetById(file.uid);\n                    });\n                    utils.dialogs.error(\n                        '' + _.pluck(failed_files, 'name').join(` — ${xabber.getString(\"message__file_was_deleted__file_label\")}. \\n`) + ` — ${xabber.getString(\"message__file_was_deleted__file_label\")}.`,\n                        {},\n                        xabber.getQuantityString(\"message__file_was_deleted\", failed_files.length)\n                    );\n                    dfd.reject();\n                } else {\n                    dfd.resolve();\n                }\n            });\n            if (!this.edit_message) {\n                attached_files.forEach((file) => {\n                    utils.tryReadingFile(file).then(()=> {\n                        files_count++;\n                        if (attached_files.length === files_count) {\n                            file_check_dfd.resolve();\n                        }\n                    }, ()=> {\n                        failed_files = failed_files.concat([file]);\n                        files_count++;\n                        if (attached_files.length === files_count) {\n                            file_check_dfd.resolve();\n                        }\n                    });\n                });\n            } else {\n                file_check_dfd.resolve();\n            }\n        } else {\n            dfd.resolve();\n        }\n    },\n\n    setEditedMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.$('.fwd-messages-preview').showIf(this.edit_message);\n        this.$('.fwd-messages-preview .msg-author').text(xabber.getString(\"edit_message__header\"));\n        this.$('.fwd-messages-preview .msg-text').html(Strophe.xmlescape(msg_text));\n        this.$('.fwd-messages-preview').emojify('.msg-text', {emoji_size: 18});\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setRedactedUploadMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setForwardedMessages: function (messages) {\n        this.fwd_messages = messages || [];\n        this.$('.fwd-messages-preview').showIf(messages.length);\n        if (messages.length) {\n            let msg = messages[0],\n                msg_author, msg_text, image_preview, $img_html_preview;\n            if (messages.length > 1) {\n                msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n            } else {\n                if (msg.get('forwarded_message')) {\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n                }\n                else {\n                    msg_text = (msg.get('message') || msg.get('original_message')).emojify();\n                    let fwd_images = msg.get('images') || [],\n                        fwd_files = msg.get('files') || [],\n                        fwd_locations = msg.get('locations');\n                    msg.get('videos') && msg.get('videos').length && (fwd_files = fwd_files.concat(msg.get('videos')));\n                    if ((fwd_images && fwd_images.length) && (fwd_files && fwd_files.length)) {\n                        msg_text = fwd_images.length + fwd_files.length + ' attachments';\n                    }\n                    else {\n                        if (fwd_images && fwd_images.length) {\n                            if (fwd_images.length > 1) {\n                                msg_text =xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_images.length);\n                            }\n                            else {\n                                image_preview = _.clone(msg.get('images')[0]);\n                                $img_html_preview = this.createPreviewImage(image_preview);\n                            }\n                        }\n                        if (fwd_files && fwd_files.length) {\n                            if (fwd_files.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_files.length);\n                            }\n                            else {\n                                let filesize = fwd_files[0].size;\n                                msg_text = filesize ? fwd_files[0].name + \",   \" + filesize : fwd_files[0].name;\n                            }\n                        }\n                        if (fwd_locations && fwd_locations.length) {\n                            if (fwd_locations.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_locations.length);\n                            }\n                            else {\n                                msg_text = xabber.getString(\"recent_chat__last_message__locations_plural_0\");\n                            }\n                        }\n                    }\n                }\n            }\n            let from_jid = msg.get('from_jid');\n            if (msg.isSenderMe()) {\n                msg_author = this.account.get('name');\n            } else {\n                msg_author = (msg.get('user_info') && msg.get('user_info').nickname) || (this.account.contacts.get(from_jid) ? this.account.contacts.get(from_jid).get('name') : from_jid);\n            }\n            this.$('.fwd-messages-preview .msg-author').text(msg_author);\n            if (_.isUndefined(image_preview)) {\n                this.$('.fwd-messages-preview .msg-text').html(msg_text);\n            }\n            else {\n                this.$('.fwd-messages-preview .msg-text').html($img_html_preview);\n            }\n        }\n        xabber.chat_body.updateHeight();\n        this.displaySend();\n    },\n\n    onShowMarkupPanel: function (ev) {\n        let $clicked_icon = $(ev.target),\n            is_panel_opened = $clicked_icon.hasClass('opened');\n        this.$('.last-emoticons').showIf(is_panel_opened);\n        this.$('.markup-panel').showIf(!is_panel_opened);\n        $clicked_icon.switchClass('opened', !is_panel_opened);\n    },\n\n    createPreviewImage: function(image) {\n        let imgContent = new Image();\n            imgContent.src = image.sources[0];\n        $(imgContent).addClass('fwd-img-preview');\n        return imgContent;\n    },\n\n    unsetForwardedMessages: function (ev) {\n        ev && ev.preventDefault && ev.preventDefault();\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        this.fwd_messages = [];\n        if (this.edit_message) {\n            this.removeAllFileSnippets();\n            this.removeAllLinkReferences();\n            this.$('.attach-file input').attr('disabled', false);\n            $rich_textarea.flushRichTextarea();\n        }\n        this.edit_message = null;\n        this.$('.fwd-messages-preview').addClass('hidden');\n        let text = $rich_textarea.getTextFromRichTextarea();\n        if (!text || text == \"\\n\")\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        xabber.chat_body.updateHeight();\n        this.focusOnInput();\n    },\n\n    resetSelectedMessages: function () {\n        this.content_view.$('.chat-message.selected').removeClass('selected');\n        this.manageSelectedMessages();\n    },\n\n    manageSelectedMessages: function () {\n        let $selected_msgs = this.content_view.$('.chat-message.selected'),\n            $input_panel = this.$('.message-input-panel'),\n            $message_actions = this.$('.message-actions-panel');\n            length = $selected_msgs.length;\n        $input_panel.hideIf(this.model.get('blocked') || length);\n        $message_actions.showIf(length);\n        this.model.get('blocked') && this.$('.blocked-msg').hideIf(length);\n        if (length) {\n            this.setButtonsWidth();\n            let my_msg = false;\n            if (length === 1) {\n                if ($selected_msgs.first().data('from') === this.account.get('jid'))\n                    my_msg = true;\n                if (this.contact && this.contact.my_info)\n                    if ($selected_msgs.first().data('from') === this.contact.my_info.get('id'))\n                        my_msg = true;\n                if ($selected_msgs.first().find('.mdi-play').length)\n                    my_msg = false;\n            }\n            $message_actions.find('.pin-message-wrap').showIf(this.model.get('group_chat')).switchClass('non-active', ((length !== 1) && this.model.get('group_chat')));\n            $message_actions.find('.reply-message-wrap').switchClass('non-active', this.model.get('blocked'));\n            $message_actions.find('.forward-message-wrap').switchClass('non-active', this.model.get('encrypted'));\n            $message_actions.find('.edit-message-wrap').switchClass('non-active', !((length === 1) && my_msg) || this.content_view.$('.chat-message.saved-main.selected').length || this.model.get('blocked'));\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').removeClass('hidden').addClass('msgs-counter').text(xabber.getQuantityString(\"chat_screen__bottom_panel__selected_messages__text\", length));\n        } else {\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('msgs-counter').text(\"\");\n            this.focusOnInput();\n        }\n    },\n\n    pinMessage: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.pin-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            pinned_msg = this.messages_arr.get($msg.data('uniqueid')),\n            msg_id = pinned_msg.get('stanza_id');\n        this.resetSelectedMessages();\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message').t(msg_id);\n        this.account.sendIQFast(iq, () => {},\n            (error) => {\n                if ($(error).find('not-allowed').length)\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            });\n    },\n\n    copyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n        });\n        this.resetSelectedMessages();\n        this.pushMessagesToClipboard(msgs);\n    },\n\n    editMessage: function (text, text_markups) {\n        let original_body = Array.from(Strophe.xmlescape(this.edit_message.get('original_message') || \"\")),\n            forwarded_body = \"\",\n            mutable_refs = this.edit_message.get('mutable_content') || [],\n            groupchat_ref = mutable_refs && mutable_refs.find(item => item.type === 'groupchat'),\n            stanza_id = this.edit_message.get('stanza_id'),\n            forward_ref = mutable_refs && mutable_refs.filter(item => item.type === 'forward'),\n            markups = text_markups.markup_references || [],\n            files = text_markups.attached_files || [],\n            link_references = text_markups.link_references || [],\n            blockquotes = text_markups.blockquotes || [],\n            mentions = text_markups.mentions || [],\n            iq = $iq({type: 'set', to: (this.contact && this.contact.get('group_chat')) ? this.contact.get('jid') : this.account.get('jid')}).c('replace', {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model),\n                id: stanza_id\n            }),\n            $message = $build('message').attrs({xmlns: undefined});\n        forward_ref && forward_ref.forEach((fwd, idx) => {\n            let fwd_msg = this.edit_message.get('forwarded_message')[idx],\n                gc_length = groupchat_ref && (groupchat_ref.start + groupchat_ref.end);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: (groupchat_ref ? (fwd.start - gc_length) : fwd.start), end: (groupchat_ref ? (fwd.end - gc_length) : fwd.end), type: 'mutable'})\n                .c('forwarded', {xmlns: Strophe.NS.FORWARD})\n                .c('delay', {\n                    xmlns: 'urn:xmpp:delay',\n                    stamp: fwd_msg.get('time')\n                }).up().cnode(fwd_msg.get('xml')).up().up().up();\n            forwarded_body += original_body.slice(fwd.start, fwd.end).join('');\n        });\n        markups.forEach((markup) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: markup.start + Array.from(forwarded_body).length, end: markup.end + Array.from(forwarded_body).length, type: 'decoration'});\n            for (let idx in markup.markup)\n                $message.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n            $message.up();\n        });\n        blockquotes.forEach((blockquote) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: blockquote.start + Array.from(forwarded_body).length, end: blockquote.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n        });\n        mentions.forEach((mention) => {\n            let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n            mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: mention.start + Array.from(forwarded_body).length, end: mention.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('mention', mention_attrs).t(mention.target).up().up();\n        });\n\n        if (files && files.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'file')\n            files.forEach((file, idx) => {\n                (idx === 0) && (text += '\\n');\n                let legacy_body = file.sources[0] + ((idx != files.length - 1) ? '\\n' : \"\"),\n                    start_idx = Array.from(_.escape(text)).length + Array.from(forwarded_body).length,\n                    end_idx = start_idx + legacy_body.length;\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && $message.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                $message.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && $message.c('media-type').t(file.type).up();\n                file['id'] && $message.c('gallery-id').t(file['id']).up();\n                file.thumbnail && $message.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && $message.c('created').t(file.created).up();\n                file.name && $message.c('name').t(file.name).up();\n                file.size && $message.c('size').t(file.size).up();\n                file.height && $message.c('height').t(file.height).up();\n                file.width && $message.c('width').t(file.width).up();\n                file.duration && $message.c('duration').t(file.duration).up();\n                file.description && $message.c('desc').t(file.description).up();\n                $message.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    $message.c('uri').t(u).up();\n                });\n                $message.up().up().up();\n                file.voice && $message.up();\n                text += legacy_body;\n                mutable_refs.push({start: start_idx, end: end_idx});\n            });\n        }\n\n        if (link_references && link_references.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'link_reference')\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(text)).length + Array.from(forwarded_body).length;\n                    text = text + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && $message.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && $message.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && $message.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && $message.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && $message.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && $message.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && $message.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && $message.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && $message.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                $message.up().up();\n                mutable_refs.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n        mutable_refs && mutable_refs.length && this.edit_message.set({mutable_content: mutable_refs});\n        if (!(Strophe.xmlunescape(forwarded_body) + text)){\n            this.deleteMessages(null, [this.edit_message]);\n            return;\n        }\n        $message.c('body').t(Strophe.xmlunescape(forwarded_body) + text).up();\n        this.unsetForwardedMessages();\n        if (this.model.get('encrypted')) {\n            let decrypted_msg = $message.tree().innerHTML;\n            $message.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($($message.tree()).children('body').length) {\n                $message.cnode($($message.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $($message.tree()).children('body').detach()\n            }\n            if ($($message.tree()).children('reference').length) {\n                $($message.tree()).children('reference').each((idx, reference) => {\n                    $message.cnode($($message.tree()).children('reference')[idx]).up()\n                });\n                $($message.tree()).children('reference').detach()\n            }\n            $message.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            $message.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, $message).then((msg) => {\n                iq.cnode(msg.message.tree());\n                this.account.omemo.cached_messages.putMessage(this.contact, stanza_id, decrypted_msg);\n                this.account.sendIQFast(iq);\n            });\n        } else {\n            iq.cnode($message.tree());\n            this.account.sendIQFast(iq);\n        }\n    },\n\n    showEditPanel: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.edit-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n        this.edit_message = edit_msg;\n        this.resetSelectedMessages();\n        this.setEditedMessageAttachments(edit_msg);\n        this.setEditedMessage(edit_msg);\n    },\n\n    deleteMessages: function (ev, messages) {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [],\n            my_msgs = 0,\n            dialog_options = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n            msg.isSenderMe() && my_msgs++;\n        });\n        messages && messages.forEach((item, idx) => {\n            msgs.push(item);\n            item.isSenderMe() && my_msgs++;\n        });\n        if (this.account.server_features.get(Strophe.NS.REWRITE) || this.model.get('group_chat')) {\n            let dfd = new $.Deferred();\n            dfd.done(() => {\n                utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), xabber.getQuantityString(\"delete_message_question\", msgs.length),\n                    dialog_options, {ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n                    if (!res) {\n                        this._clearing_history = false;\n                        messages && messages.length && this.focusOnInput();\n                        return;\n                    }\n                    let symmetric = (this.model.get('group_chat')) ? true : (res.symmetric_deletion ? true : false);\n                    this.resetSelectedMessages();\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                        this.deleteFilesFromMessages(msgs);\n                    this.model.retractMessages(msgs, this.model.get('group_chat'), symmetric);\n                    messages && messages.length && this.unsetForwardedMessages();\n                });\n            });\n            if (!this.model.get('group_chat') && !this.model.get('saved') && my_msgs == $msgs.length && this.contact && this.contact.domain){\n                if (this.contact.get('server_has_rewrite')){\n                    dialog_options = [{\n                        name: 'symmetric_deletion',\n                        checked: false,\n                        text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                    }];\n                    dfd.resolve();\n                } else {\n                    this.account.connection.disco.info(this.contact.domain, null, (iq) => {\n                        let $rewrite = $(iq).find('feature[var=\"' + Strophe.NS.REWRITE + '\"]');\n                        if ($rewrite.length) {\n                            dialog_options = [{\n                                name: 'symmetric_deletion',\n                                checked: false,\n                                text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                            }];\n                            this.contact.set('server_has_rewrite', true);\n                            dfd.resolve();\n                        } else {\n                            dfd.resolve();\n                        }\n                    });\n                }\n            } else\n                dfd.resolve();\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), `${xabber.getQuantityString(\"delete_message_question\", msgs.length)}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`,\n                dialog_options, {ok_button_text: xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    messages && messages.length && this.focusOnInput();\n                    return;\n                }\n                this.resetSelectedMessages();\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.deleteFilesFromMessages(msgs);\n                msgs.forEach((item) => { this.view.removeMessage(item); })\n                messages && messages.length && this.unsetForwardedMessages();\n            });\n        }\n    },\n\n    deleteFilesFromMessages: function (messages) {\n        messages.forEach((item) => {\n            if (!item.isSenderMe())\n                return;\n            item.get('files') && _.isArray(item.get('files')) && item.get('files').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('images') && _.isArray(item.get('images')) && item.get('images').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('videos') && _.isArray(item.get('videos')) && item.get('videos').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n        });\n    },\n\n    pushMessagesToClipboard: function (messages) {\n        let fwd_msg_indicator = \"\",\n            copied_messages = this.createTextMessage(messages, fwd_msg_indicator);\n        utils.copyTextToClipboard(_.unescape(copied_messages));\n    },\n\n    createTextMessage: function (messages, fwd_msg_indicator) {\n        let text_message = \"\";\n        for (let i = 0; i < messages.length; i++) {\n            let $msg = messages[i];\n            if (this.model.get('saved') && $msg.get('forwarded_message') && $msg.get('forwarded_message').length === 1 && !$msg.get('message'))\n                $msg = $msg.get('forwarded_message')[0];\n            let current_date = moment($msg.get('timestamp')).startOf('day'),\n                prev_date = (i) ? moment(messages[i - 1].get('timestamp')).startOf('day') : moment(0),\n                msg_sender = \"\";\n                if (prev_date.format('x') != current_date.format('x')) {\n                    text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + pretty_date(current_date) + '\\n';\n                }\n                msg_sender = $msg.isSenderMe() ? this.account.get('name') : ($msg.get('user_info') && $msg.get('user_info').nickname || (this.account.contacts.get($msg.get('from_jid')) ? this.account.contacts.get($msg.get('from_jid')).get('name') : $msg.get('from_jid')));\n                text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + \"[\" + utils.pretty_time($msg.get('timestamp')) + \"] \" + msg_sender + \":\\n\";\n                fwd_msg_indicator.length && (text_message += fwd_msg_indicator);\n                let original_message = _.unescape(($msg.get('mutable_content') && $msg.get('mutable_content').find(ref => ref.type === 'groupchat')) ? $msg.get('original_message').slice($msg.get('mutable_content').find(ref => ref.type === 'groupchat').end) : $msg.get('original_message'));\n                fwd_msg_indicator.length && (original_message = original_message.replace(/\\n/g, '\\n&gt; '));\n                (fwd_msg_indicator.length && original_message.indexOf('&gt;') !== 0) && (text_message += ' ');\n                (original_message = _.unescape(original_message.replace(/\\n&gt; &gt;/g, '\\n&gt;&gt;')));\n                text_message += _.escape(original_message) + '\\n';\n        }\n        return text_message.trim();\n    },\n\n    replyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        this.setForwardedMessages(msgs);\n    },\n\n    forwardMessages: function () {\n        if (!this.model.get('active') || this.model.get('encrypted'))\n            return;\n        if (this.$('.forward-message-wrap').hasClass('non-active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        if (!xabber.forward_panel)\n            xabber.forward_panel = new xabber.ForwardPanelView({ model: xabber.opened_chats });\n        xabber.forward_panel.open(msgs, this.account);\n    },\n\n    showChatNotification: function (message, is_colored) {\n        if (!this.view.$('.chat-notification').hasClass('msgs-counter') && !this.view.$('.chat-notification').hasClass('encryption-warning')) {\n            this.view.$('.chat-notification').switchClass('hidden', !message).text(message)\n                .switchClass('text-color-300', is_colored);\n        }\n    }\n});\n\nxabber.ChatHeadContainer = xabber.Container.extend({\n    className: 'chat-head-container panel-head noselect'\n});\n\nxabber.ChatBodyContainer = xabber.Container.extend({\n    className: 'chat-body-container',\n\n    // TODO: refactor CSS and remove this\n    updateHeight: function () {\n        let bottom_height = xabber.chat_bottom.$el.height() + parseInt(xabber.chat_bottom.$el.css('bottom'));\n        if (bottom_height) {\n            let current_bottom = parseInt(this.$el.css('bottom'));\n            this.$el.css({bottom: bottom_height});\n            if (this.view) {\n                this.view.updateScrollBar();\n                (bottom_height != current_bottom) && !this.view.isScrolledToBottom() && this.view.scrollTo(this.view.ps_container[0].scrollTop + (bottom_height - current_bottom));\n            }\n        }\n    }\n});\n\nxabber.ChatBodyPlaceholderContainer = xabber.Container.extend({\n    className: 'chat-body-placeholder-container',\n});\n\nxabber.NotificationsPlaceholder = xabber.BasicView.extend({\n    className: 'notifications-placeholder',\n    events: {\n        \"click .btn-request-notifications\": \"requestNotifications\",\n        \"click .mdi-close\": \"close\"\n    },\n\n    _initialize: function (options) {\n        this.$el.html(`${xabber.getString(\"desktop_notifications__alert_enable__text\", [constants.CLIENT_NAME])} <span class=\"btn-request-notifications\">${xabber.getString(\"desktop_notifications__alert_enable__link_text\")}</span><button class=\"btn-request-notifications btn-flat btn-dark btn-main\">${xabber.getString(\"chat_allow\")}</button>`);\n        this.$el.append($('<i/>').addClass('mdi mdi-22px mdi-close'));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n    },\n\n    requestNotifications: function () {\n        window.Notification.requestPermission((permission) => {\n            xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n            this.close();\n        });\n    },\n\n    onUpdatedScreen: function () {\n        if (!xabber.notifications_placeholder)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    close: function () {\n        xabber._cache.save('ignore_notifications_warning', true);\n        this.remove();\n        xabber.notifications_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.ChatBottomContainer = xabber.Container.extend({\n    className: 'chat-bottom-container'\n});\n\nxabber.ChatPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap chat-placeholder-wrap noselect',\n    template: templates.chat_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"chat_list__placeholder\"));\n        }\n    },\n});\n\nxabber.ChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        last_emoji: [],\n        muted: [],\n        archived: [],\n        group_chat: [],\n        cached_avatars: [],\n        group_chat_members_lists: []\n    },\n\n    getLastEmoji: function () {\n        return _.clone(this.get('last_emoji'));\n    },\n\n    updateLastEmoji: function (emoji) {\n        let last_emoji_icons = _.clone(this.get('last_emoji'));\n        if (last_emoji_icons.length > 0) {\n            let index = last_emoji_icons.indexOf(emoji);\n            if (index != -1)\n                last_emoji_icons.splice(index, 1);\n            last_emoji_icons.push(emoji);\n            while (last_emoji_icons.length > 7)\n                last_emoji_icons.shift();\n        }\n        else\n            last_emoji_icons.push(emoji);\n        this.save('last_emoji', last_emoji_icons);\n    },\n\n    updateMutedList: function (jid, muted) {\n        let muted_list = _.clone(this.get('muted')),\n            index = muted_list.indexOf(jid);\n        if (muted && index < 0) {\n            muted_list.push(jid);\n        }\n        if (!muted && index >= 0) {\n            muted_list.splice(index, 1);\n        }\n        this.save('muted', muted_list);\n    },\n\n    updateArchiveChatsList: function (jid, archived) {\n        let archived_list = _.clone(this.get('archived')),\n            index = archived_list.indexOf(jid);\n        if (archived && index < 0) {\n            archived_list.push(jid);\n        }\n        if (!archived && index >= 0) {\n            archived_list.splice(index, 1);\n        }\n        this.save('archived', archived_list);\n    },\n\n    updateGroupChatsList: function (jid, group_chat) {\n        let group_chat_list = _.clone(this.get('group_chat')),\n            index = group_chat_list.indexOf(jid);\n        if (group_chat && index < 0) {\n            group_chat_list.push(jid);\n        }\n        if (!group_chat && index >= 0) {\n            group_chat_list.splice(index, 1);\n        }\n        this.save('group_chat', group_chat_list);\n    },\n\n    updateCachedAvatars: function (id, hash, avatar) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            member = avatar_list.indexOf(avatar_list.find(member => member.id === id));\n        if (member != -1) {\n            avatar_list.splice(member, 1);\n        }\n        avatar_list.push({id: id, avatar_hash: hash, avatar_b64: avatar});\n        this.save('cached_avatars', avatar_list);\n    },\n\n    getAvatarInfoById: function (id) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            result = avatar_list.find(member => member.id === id);\n        return result;\n    },\n\n    getB64Avatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_b64;\n        else\n            return;\n    },\n\n    getHashAvatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_hash;\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.chat_settings = new xabber.ChatSettings({id: 'chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + this.get('jid'),\n        fetch: 'after'\n    });\n    this.messages = new xabber.Messages(null, {account: this});\n    this.forwarded_messages = new xabber.Messages(null, {account: this});\n    this.pinned_messages = new xabber.Messages(null, {account: this});\n\n    this.chats = new xabber.AccountChats(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    let timestamp = this.last_msg_timestamp || this.disconnected_timestamp;\n    this.chats.registerMessageHandler();\n    this.chats.each((chat) => {\n        if (!this.connection.do_synchronization) {\n            if (chat.messages.length)\n                chat.trigger('get_missed_history', timestamp);\n            else\n                chat.trigger('load_last_history');\n        }\n    });\n\n    this.connection.deleteTimedHandler(this._get_msg_handler);\n    this._get_msg_handler = this.connection.addTimedHandler(60000, () => {\n        //readds msg handler if it somehow dissapears\n        if (this.connection && !this.connection.handlers.find(h => !h.ns && !h.options.encrypted && h.name === 'message')) {\n            let last_msg_timestamp = this.last_msg_timestamp;\n            this.chats.registerMessageHandler();\n            let options = {};\n            this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                this.roster && this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                this.roster && this.roster.getRoster();\n            });\n        }\n        return true;\n    });\n    if (_.isUndefined(this.settings.get('omemo')) && !this.omemo_enable_placeholder) {\n        this.omemo_enable_placeholder = new xabber.OMEMOEnablePlaceholder({account: this});\n    }\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.getVCard();\n    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n        this.trigger('ready_to_get_roster');\n}, true, true);\n\nxabber.once(\"start\", function () {\n    [\"keydown\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return !((e.ctrlKey || e.metaKey) && e.keyCode == constants.KEY_SHIFT || e.shiftKey && e.keyCode == constants.KEY_CTRL || e.keyCode == constants.KEY_SHIFT);\n            }\n        });\n    });\n    [\"keyup\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return true;\n            }\n        });\n    });\n    this.chats = new this.Chats;\n    this.chats.addCollection(this.opened_chats = new this.OpenedChats);\n    this.chats.addCollection(this.closed_chats = new this.ClosedChats);\n    this.chats.registerQuillEmbeddedsTags();\n\n    this.chats_view = this.left_panel.addChild('chats',\n            this.ChatsView, {model: this.opened_chats});\n    this.chat_head = this.right_panel.addChild('chat_head',\n            this.ChatHeadContainer);\n    this.chat_body = this.right_panel.addChild('chat_body',\n            this.ChatBodyContainer);\n    this.chat_body_placeholder = this.right_panel.addChild('chat_body_placeholder',\n            this.ChatBodyPlaceholderContainer);\n    this.chat_bottom = this.right_panel.addChild('chat_bottom',\n            this.ChatBottomContainer);\n    this.chat_placeholder = this.right_panel.addChild('chat_placeholder',\n            this.ChatPlaceholderView);\n\n    this.on(\"add_group_chat\", function (attrs) {\n        if (!this.add_group_chat_view)\n            this.add_group_chat_view = new this.AddGroupChatView();\n        this.add_group_chat_view.show(attrs);\n    }, this);\n\n    this.on(\"change:focused\", function () {\n        if (this.get('focused')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"change:idle\", function () {\n        if (!this.get('idle')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"show_group_chats\", function () {\n        this.chats_view.showGroupChats();\n    }, this);\n\n    this.on(\"show_chats\", function () {\n        this.chats_view.showChats();\n    }, this);\n\n    this.on(\"show_all_chats\", function (no_unread) {\n        this.chats_view.showAllChats(no_unread);\n    }, this);\n\n    this.on(\"show_archive_chats\", function (no_unread) {\n        this.chats_view.showArchiveChats(no_unread);\n    }, this);\n\n    this.on(\"show_saved_chats\", function (no_unread) {\n        this.chats_view.showSavedChats(no_unread);\n    }, this);\n\n    this.on(\"show_notification_chats\", function (no_unread) {\n        this.chats_view.showNotifications(no_unread);\n    }, this);\n\n    this.on(\"clear_search\", function () {\n        this.contacts_view.clearSearch();\n        this.chats_view.clearSearch();\n    }, this);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.searching,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images;\n\nxabber.DiscoveringView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.searching_wide,\n    ps_selector: '.chats-list-wrap',\n    ps_settings: {\n        wheelPropagation: true,\n        theme: 'existing-chats-list'\n    },\n\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-search\": \"search\",\n        \"click .existing-chat-wrap\": \"getChatProperties\",\n        \"keyup .search-input\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.data.on(\"change:color\", this.colorUpdated, this);\n        this.$('.searching-properties-field .dropdown-button').on('click', () => {\n            this.toggleProperties();\n        });\n    },\n\n    render: function (options) {\n        this.endDiscovering();\n        this.data.set('color','#9E9E9E');\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        if (accounts.length)\n            this.bindAccount(accounts[0]);\n        this.$('#select-searching-properties .account-field .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        return this;\n    },\n\n    toggleProperties: function () {\n        let is_visible = this.isPropertiesVisible();\n        this.$('#select-searching-properties').slideToggle(\"fast\");\n        this.$('.arrow').switchClass('mdi-chevron-up', !is_visible);\n        this.$('.arrow').switchClass('mdi-chevron-down', is_visible);\n    },\n\n    isPropertiesVisible: function () {\n        if (this.$('#select-searching-properties').css('display') === 'none')\n            return false;\n        else\n            return true;\n    },\n\n    discover: function () {\n        let domain = _.escape(this.$('.search-input.simple-input-field').val());\n        if (domain) {\n            if (this.isPropertiesVisible())\n                this.toggleProperties();\n            this.$('.searching-more').html(\"\");\n            let searching_title = this.$('#searching_property_title').val(),\n                searching_sort_by = this.$('#searching_property_sort_by').val();\n            this.$('.searching-result-wrap .preloader-wrapper').show();\n            this.searchExistingGroupChats(domain);\n        }\n    },\n\n    setColor: function () {\n        if (this.account) {\n            let color = this.account.settings.get('color');\n            this.data.set('color', color);\n        }\n    },\n\n    colorUpdated: function () {\n        let color = this.data.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    keyUp: function (ev) {\n        if (this.$('.search-input').val() === \"\")\n            this.$('.btn-search').addClass('none-active');\n        else\n            this.$('.btn-search').removeClass('none-active');\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.discover();\n    },\n\n    searchExistingGroupChats: function (domain) {\n        this.account.connection.disco.items((domain), null, this.getGroupchatService.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    onDiscoveringError: function (error) {\n        this.endDiscovering();\n        this.$('.chats-list').html(\"\");\n        this.$('.result-string').text(xabber.getString(\"discover__no_matches\", [$(error).attr('from')]));\n    },\n\n    endDiscovering: function () {\n        this.$('.searching-result-wrap .preloader-wrapper').hide();\n    },\n\n    getGroupchatService: function (stanza) {\n        $(stanza).find('query item').each((idx, item) => {\n            if ($(item).attr('node') === Strophe.NS.GROUP_CHAT) {\n                let jid = $(item).attr('jid');\n                this.getGroupchatFeatures(jid);\n            }\n        });\n        this.endDiscovering();\n    },\n\n    getGroupchatFeatures: function (jid) {\n        let iq = $iq({type: 'get', to: jid})\n            .c('query', {xmlns: Strophe.NS.DISCO_INFO, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, this.getServerInfo.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    getServerInfo: function (stanza) {\n        $(stanza).find('query identity').each((idx, item) => {\n            let $item = $(item);\n            if (($item.attr('category') === 'conference') && ($item.attr('type') === 'server')) {\n                let jid = $(stanza).attr('from');\n                this.getChatsFromSever(jid);\n            }\n        });\n    },\n\n    getChatsFromSever: function (jid) {\n        let iq = $iq({type: 'get', to: jid}).c('query', {xmlns: Strophe.NS.DISCO_ITEMS, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, (stanza) => {\n            this.$('.chats-list').html(\"\");\n            $(stanza).find('query item').each((idx, item) => {\n                let $item = $(item),\n                    name = $item.attr('name'),\n                    jid = $item.attr('jid'),\n                    $chat_item_html = $(templates.existing_groupchat_item({name: name, jid: jid, color: this.account.settings.get('color')})),\n                    avatar = Images.getDefaultAvatar(name);\n                $chat_item_html.find('.circle-avatar').setAvatar(avatar, 32);\n                $chat_item_html.appendTo(this.$('.searching-result-wrap .chats-list'));\n            });\n            this.$('.result-string').text(xabber.getString(\"discover__text_discovered_groups\", [$(stanza).find('query item').length, this.account.get('jid')]));\n        });\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.setColor();\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.searching_account_item({jid: account.get('jid')}));\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    getChatProperties: function (ev) {\n        let $target = $(ev.target).closest('.existing-chat-wrap'),\n            jid = $target.data('jid'),\n            name = $target.data('name'),\n            request_iq = $iq({type: 'get', to: jid})\n                .c('query', {xmlns: Strophe.NS.DISCO_INFO});\n        this.account.sendIQFast(request_iq, (iq_response) => {\n            let $iq_response = $(iq_response),\n                description = $iq_response.find('field[var=\"description\"] value').text(),\n                privacy = $iq_response.find('field[var=\"anonymous\"] value').text(),\n                membership = $iq_response.find('field[var=\"model\"] value').text(),\n                chat_properties = {jid: jid, name: name, privacy: privacy, description: description, membership: membership};\n            this.more_info_view = this.addChild('groupchat_properties', xabber.MoreInfoView,\n                {model: this, chat_properties: chat_properties, el: this.$('.searching-more')[0]})\n        });\n    }\n});\n\nxabber.MoreInfoView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.existing_groupchat_details_view,\n\n    events: {\n        \"click .btn-join-chat\": \"joinChat\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.chat_properties = options.chat_properties;\n        this.$el.html(this.template(this.chat_properties));\n    },\n\n    render: function (options) {\n\n    },\n\n    joinChat: function () {\n        let contact = this.account.contacts.mergeContact(this.chat_properties.jid);\n        contact.set('group_chat', true);\n        contact.acceptRequest();\n        contact.pushInRoster(null, () => {\n            contact.askRequest();\n            contact.getMyInfo();\n        });\n        contact.trigger(\"open_chat\", contact);\n    }\n});\n\nxabber.Searching = Backbone.Model.extend({\n\n    initialize: function (options) {\n        this.account = options.account;\n    },\n\n    getSearchingFields: function () {\n        let this_domain = 'xabber.com',//this.account.connection && this.account.connection.domain,\n            iq_get = $iq({type: 'get', to: 'index.' + this_domain}).c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'});\n        this.account.sendIQFast(iq_get, this.parseSearchingFields);\n    },\n\n    parseSearchingFields: function (iq_result) {\n        let $result = $(iq_result),\n            $fields = $result.find(`x[xmlns = \"${Strophe.NS.XDATA}\"] field`),\n            supported_fields = [];\n        $fields.each((idx, field) => {\n            let $field = $(field);\n            if ($field.attr('type') !== 'hidden')\n                supported_fields.push({var: $field.attr('var'), label: $field.attr('label')});\n        });\n    },\n});\n\nxabber.LocalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n    }\n});\n\nxabber.GlobalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.indexed_chats = [];\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n        this.indexed_chats = [];\n        let iq_search = $iq({to:'index.xabber.com', type: 'set'})\n            .c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'})\n            .c('x', {xmlns: Strophe.NS.XDATA, type: 'form'})\n            .c('field', {var: 'FORM_TYPE', type:'hidden'})\n            .c('value').t(Strophe.NS.INDEX + '#groupchat').up().up();\n        if (query.description)\n            iq_search.c('field', {var: 'description'})\n                .c('value').t(query.description).up().up();\n        if (query.name)\n            iq_search.c('field', {var: 'name'})\n                .c('value').t(query.name).up().up();\n        if (query.model)\n            iq_search.c('field', {var: 'model'})\n                .c('value').t(query.model).up().up();\n        if (query.anywhere)\n            iq_search.c('field', {var: 'anywhere'})\n                .c('value').t(query.anywhere).up().up();\n        this.account.sendIQFast(iq_search, this.onSearched.bind(this));\n    },\n\n    onSearched: function (result) {\n        let $result = $(result),\n            $chats = $($result.find('query item groupchat'));\n        $chats.each((idx, chat) => {\n            let $chat = $(chat),\n                chat_jid = $chat.attr('jid'),\n                attrs = {jid: chat_jid},\n                $properties = $chat.children();\n            $properties.each((idx, property) => {\n                let $property = $(property),\n                    property_name = $property[0].tagName.replace(/-/g, '_'),\n                    property_value = $property.text();\n                _.extend(attrs, {[property_name]: property_value});\n            });\n            this.indexed_chats.push(attrs);\n        });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.discovering = this.wide_panel.addChild('discovering_main',\n        this.DiscoveringView);\n    /*this.local_searching = new xabber.LocalSearching;\n    this.global_searching = new xabber.GlobalSearching;*/\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.mentions,\n    utils = env.utils,\n    $ = env.$,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\nxabber.Mention = Backbone.Model.extend({\n    defaults: {\n        active: false,\n        display: false,\n        timestamp: 0\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.message = options.message;\n        this.id = this.message.get('unique_id');\n        this.set('timestamp', this.message.get('timestamp'));\n        this.account = this.contact.account;\n        this.item_view = new xabber.MentionItemView({model: this});\n        this.contact.on(\"destroy\", this.destroy, this);\n        this.message.on(\"change:last_replace_time\", this.onMessageUpdated, this);\n    },\n\n    onMessageUpdated: function () {\n        if (this.message.get('mentions') && this.message.get('mentions').length) {\n            this.message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (id) {\n                    if (this.contact.my_info) {\n                        if (mention_target === this.contact.my_info.get('id'))\n                            this.item_view.updateLastMessage();\n                        else\n                            this.destroy();\n                    }\n                    else if (this.contact.get('group_chat')) {\n                        if (this._pending_my_info) {\n                            this._pending_my_info.done(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info = null;\n                            });\n                        }\n                        else {\n                            this._pending_my_info = new $.Deferred();\n                            this.contact.getMyInfo(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info.resolve();\n                            });\n                        }\n                    }\n                } else if (jid && mention_target === this.account.get('jid')) {\n                    this.item_view.updateLastMessage();\n                }\n                else\n                    this.destroy();\n            });\n        } else\n            this.destroy();\n    }\n});\n\nxabber.MentionsBase = Backbone.Collection.extend({\n    model: xabber.Mention\n});\n\nxabber.AccountMentions = xabber.MentionsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"add\", this.onMentionAdded, this)\n    },\n\n    onMentionAdded: function (mention) {\n        xabber.mentions.add(mention);\n    }\n});\n\nxabber.Mentions = xabber.MentionsBase.extend({\n    comparator: 'timestamp',\n    initialize: function () {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.MentionsView = xabber.SearchPanelView.extend({\n    className: 'mentions-container container',\n    ps_selector: '.mentions-list-wrap',\n    main_container: '.mentions-list',\n    ps_settings: {theme: 'item-list'},\n    template: templates.mentions_panel,\n\n    _initialize: function () {\n        this.active_mention = null;\n        this.keyup_timeout = null;\n        this.model.on(\"add\", this.onMentionAdded, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"destroy\", this.onMentionRemoved, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (!options.right && this.active_mention) {\n            this.active_mention.model.set('active', false);\n            this.active_mention = null;\n        }\n        (options.right !== 'chat' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    onMentionAdded: function (mention) {\n        this.addChild(mention.id, mention.item_view);\n        this.updateMentionPosition(mention);\n    },\n\n    onMentionRemoved: function (mention, options) {\n        options = options || {};\n        if (this.active_mention === this.child(mention.id)) {\n            this.active_mention = null;\n        }\n        this.removeChild(mention.id, options);\n        this.updateScrollBar();\n    },\n\n    selectItem: function (id) {\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        $selection.find('.mention-info-wrap').addClass('selected');\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n        this.$('.list-item .selected').removeClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            selection.find('.mention-info-wrap').click();\n        }\n    },\n\n    replaceMentionItem: function (item, mentions) {\n        let view = this.child(item.id);\n        if (view && item.get('timestamp')) {\n            view.$el.detach();\n            let index = mentions.indexOf(item);\n            if (index === 0) {\n                this.$('.mentions-list').append(view.$el);\n            } else {\n                this.$('.mention-item').eq(-index).before(view.$el);\n            }\n            let $prev_el = view.$el.prev('.mention-item'),\n                $next_el = view.$el.next('.mention-item'),\n                contact_jid = view.$el.data('contact-jid');\n                if ($prev_el.length) {\n                    let prev_contact_jid = $prev_el.data('contact-jid');\n                    if (prev_contact_jid !== contact_jid)\n                        view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                if ($next_el.length) {\n                    let next_contact_jid = $next_el.data('contact-jid');\n                    if (next_contact_jid === contact_jid) {\n                        $next_el.find('.group-chat-title-wrap').addClass('hidden');\n                    }\n                    else\n                        $next_el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n        }\n    },\n\n    readAllMentions: function () {\n        xabber.accounts.connected.forEach((account) => {\n            let mentions = _.clone(account.unread_mentions.models);\n            _.each(mentions, ((mention) => {\n                let msgid = mention.message.get('msgid'),\n                    archive_id = mention.message.get('archive_id'),\n                    contact_archive_id = mention.message.get('contact_archive_id'),\n                    chat = account.chats.getChat(mention.contact);\n                mention.message.set('is_unread', false);\n                chat.sendMarker(msgid, 'displayed', archive_id, contact_archive_id);\n            }));\n        });\n    },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    updateMentionPosition: function (item) {\n        let view = this.child(item.id);\n        if (!view)\n            return;\n        this.replaceMentionItem(item, this.model);\n    },\n\n    onChangedActiveStatus: function (mention) {\n        if (mention.get('active')) {\n            let previous_mention = this.active_mention;\n            this.active_mention = this.child(mention.id);\n            previous_mention && previous_mention.model.set('active', false);\n        }\n    }\n});\n\nxabber.MentionItemView = xabber.BasicView.extend({\n    className: 'mention-item list-item',\n    template: templates.mention_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click .mention-info-wrap': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.$el.attr('data-id', this.model.id);\n        this.$el.attr('data-contact-jid', this.contact.get('jid'));\n        this.updateContactName();\n        this.updateGroupChat();\n        this.updateName();\n        this.updateLastMessage();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateCounter();\n        this.updateIcon();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.contact.on(\"change:name\", this.updateContactName, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n        this.model.message.on(\"change:is_unread\", this.updateCounter, this);\n    },\n\n    updateName: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            contact_name = this.contact.get('name');\n        if (user_info)\n            contact_name = user_info.nickname || user_info.jid || user_info.id || this.model.message.get('from_jid');\n        this.$('.chat-title').text(contact_name);\n    },\n\n    updateIcon: function () {\n        this.$('.contact-icon .group-chat-icon').hideIf(!this.contact.get('group_chat') && this.contact.get('jid') === this.account.domain);\n        this.$('.contact-icon .server-icon').hideIf(this.contact.get('jid') !== this.account.domain);\n    },\n\n    updateContactName: function () {\n        let contact_name = this.contact.get('name');\n        this.$('.group-chat-name').text(contact_name);\n        if (!this.contact.get('group_chat')) {\n            this.updateName();\n            if (!this.contact.get('photo_hash')) {\n                let default_avatar = Images.getDefaultAvatar(contact_name);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n    },\n\n    updateGroupChat: function () {\n        this.updateIcon();\n    },\n\n    updateCounter:function () {\n        let unread = this.model.message.get('is_unread');\n        this.$('.msg-counter').switchClass('hidden', !unread);\n        if (unread)\n            this.account.unread_mentions.add(this.model);\n        else\n            this.account.unread_mentions.remove(this.model);\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    updateLastMessage: function () {\n        let msg = this.model.message;\n        if (!msg)\n            return;\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'),\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = (forwarded_message) ? (msg.get('message') || xabber.getString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText();\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').text(\"\").append(msg_text);\n        }\n        else {\n            this.$('.last-msg').text(msg_text);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateActiveStatus: function () {\n        this.$el.find('.mention-info-wrap').switchClass('active', this.model.get('active'));\n    },\n\n    updateAvatar: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            image;\n        if (user_info) {\n            if (user_info.avatar) {\n                image = user_info.b64_avatar || this.account.chat_settings.getB64Avatar(user_info.id);\n                if (image) {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + user_info.id;\n                    this.contact.getAvatar(user_info.avatar, node, (data_avatar) => {\n                        image = data_avatar;\n                        this.account.chat_settings.updateCachedAvatars(user_info.id, user_info.avatar, data_avatar);\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    }, () => {\n                        let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                        this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n                    });\n                }\n            }\n            else {\n                let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n        else {\n            image = this.contact.cached_image;\n            this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n        }\n    },\n\n    openByClick: function () {\n        let message = this.model.message,\n            chat = this.account.chats.getChat(this.contact);\n        this.model.message.set('is_unread', false);\n        chat.sendMarker(message.get('origin_id'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n        this.model.set('active', true);\n        this.contact.trigger(\"open_mention\", this.contact, message.get('unique_id'));\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    }\n\n});\n\nxabber.MentionsPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap mentions-placeholder-wrap noselect',\n    template: templates.mentions_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"mentions_list__placeholder\"));\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n   this.mentions = new xabber.AccountMentions(null, {account: this});\n   this.unread_mentions = new xabber.Mentions(null, {account: this});\n});\n\nxabber.once(\"start\", function () {\n    this.mentions = new this.Mentions;\n    this.mentions_view = this.left_panel.addChild('mentions',\n        this.MentionsView, {model: this.mentions});\n    this.mentions_placeholder = this.right_panel.addChild('mentions_placeholder',\n        this.MentionsPlaceholderView);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    $ = env.$;\n\nxabber.once(\"start\", function () {\n    $(window).on(\"keydown\", (ev) => {\n        if ((ev.ctrlKey || ev.metaKey) && ev.keyCode == constants.KEY_SHIFT || ev.shiftKey && ev.keyCode == constants.KEY_CTRL) {\n            this.shift_pressed = null;\n            this.shiftctrl_pressed = true;\n            ev.preventDefault();\n        } else if (ev.keyCode == constants.KEY_SHIFT) {\n            this.shift_pressed = true;\n            ev.preventDefault();\n        }\n        let attrs = xabber.body.screen.attributes;\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            if (xabber.body.$el.siblings('#modals').children('.open').length)\n                return;\n        }\n        if (attrs.chat_item && (attrs.name === 'mentions' || attrs.name === 'contacts' || attrs.name === 'all-chats') && (attrs.right === 'chat' || attrs.right === 'participant_messages' || attrs.right === 'message_context' || attrs.right === 'searched_messages')) {\n            if (window.$('.message-actions-panel').length && !window.$('.message-actions-panel').hasClass('hidden')) {\n                if (!ev.ctrlKey && !ev.metaKey) {\n                    switch (ev.keyCode) {\n                        case 67:\n                            attrs.chat_item.model.trigger('copy_selected_messages');\n                            break;\n                        case 68:\n                            attrs.chat_item.model.trigger('delete_selected_messages');\n                            break;\n                        case 69:\n                            attrs.chat_item.model.trigger('edit_selected_message');\n                            break;\n                        case 70:\n                            attrs.chat_item.model.trigger('forward_selected_messages');\n                            break;\n                        case 80:\n                            attrs.chat_item.model.trigger('pin_selected_message');\n                            break;\n                        case 82:\n                            attrs.chat_item.model.trigger('reply_selected_messages');\n                            break;\n                        case constants.KEY_ESCAPE:\n                            if (!xabber.body.screen.get('right_contact'))\n                                attrs.chat_item.model.trigger('reset_selected_messages');\n                            break;\n                    }\n                    ev.preventDefault();\n                }\n            }\n        }\n        });\n    $(window).on(\"keyup\", (ev) => {\n        if (!(ev.shiftKey && ev.ctrlKey))\n            this.shiftctrl_pressed = null;\n        if (ev.shiftKey && !ev.ctrlKey)\n            this.shift_pressed = true;\n        if (!ev.shiftKey)\n            this.shift_pressed = null;\n    });\n\n    this.updateLayout = function (options) {\n        options || (options = {});\n        this.updateContainersLayout();\n        xabber.trigger('update_css', options);\n        this.body.$('.ps-container').perfectScrollbar('update');\n    };\n\n    this.updateContainersLayout = function () {\n        let width = this.body.$el.width(),\n            height = this.body.$el.height(),\n            is_wide = width >= constants.WIDTH_MEDIUM,\n            is_narrow = width < constants.WIDTH_MEDIUM;\n        let panel_width,\n            left_panel_width,\n            right_panel_width,\n            right_contact_panel_width,\n            chat_bottom_panel_width,\n            toolbar_width = 64,\n            toolbar_accounts_heigth = height - 506,\n            right_contact_panel_styles = {};\n        if (is_wide || !(is_narrow)) {\n            panel_width = 1536;\n        } else if (is_narrow) {\n            panel_width = width - toolbar_width - 20 - 44;\n        } else {\n            panel_width = (width - toolbar_width - 20) * 7 / 9;\n        }\n        left_panel_width = right_contact_panel_width = 384;\n        right_panel_width = panel_width - (left_panel_width + right_contact_panel_width);\n        chat_bottom_panel_width = '100%';\n        if (is_narrow){\n            right_contact_panel_width = left_panel_width = (panel_width * 0.264) < 288 ? 288 : panel_width * 0.264;\n\n        }\n        if (right_panel_width < 512 ){\n            right_panel_width = panel_width - left_panel_width;\n            this.right_contact_panel_saveable = false;\n            right_contact_panel_styles = {\n                position : 'absolute',\n                right : 0,\n                'z-index' : 499,\n            };\n            if ((right_panel_width - 384) < 128) {\n                right_contact_panel_width = right_panel_width;\n                this.right_contact_panel.$el.removeClass('background-click')\n            }\n            else {\n                right_contact_panel_width = 384\n                this.right_contact_panel.$el.addClass('background-click')\n            }\n        }\n        else {\n            this.right_contact_panel_saveable = true;\n            right_contact_panel_styles = {\n                position : 'static',\n                'z-index' : 0,\n            };\n            this.right_contact_panel.$el.removeClass('background-click')\n\n        }\n        this.right_contact_panel_width = right_contact_panel_width;\n\n        if (!this.body.screen.get('right_contact')) {\n            right_contact_panel_width = 0;\n            right_panel_width = panel_width - left_panel_width;\n        }\n        if (right_panel_width < 768) {\n            chat_bottom_panel_width = right_panel_width;\n        }\n\n        right_contact_panel_styles.width = right_contact_panel_width;\n        this.chat_head.$el.switchClass('chat-head-ultra-narrow', right_panel_width <= 650);\n        this.chat_head.$el.switchClass('chat-head-narrow', right_panel_width < 750);\n        this.chat_head.$el.switchClass('chat-head-normal', (right_panel_width < 850 && right_panel_width >= 750));\n        this.chat_head.$el.switchClass('chat-head-normal-wide', (right_panel_width < 1000 && right_panel_width >= 850));\n        this.chat_head.$el.switchClass('chat-head-wide', right_panel_width > 1000);\n        this.main_panel.setCustomCss({\n            width: panel_width,\n        });\n        this.left_panel.setCustomCss({\n            width: left_panel_width,\n        });\n        this.right_panel.setCustomCss({\n            width: right_panel_width,\n        });\n        this.right_contact_panel.setCustomCss(right_contact_panel_styles);\n        this.chat_bottom.setCustomCss({\n            width: chat_bottom_panel_width,\n        });\n        this.toolbar_view.$el.find('.toolbar-bottom .accounts-wrap .accounts').css({\n            'max-height': toolbar_accounts_heigth,\n        });\n    };\n\n    this.on(\"update_layout\", this.updateLayout, this);\n\n    this.body.addScreen('blank', {});\n\n    this.body.addScreen('login', {\n        login: { xmpp_login: null }\n    });\n\n    this.body.addScreen('settings-modal', {\n        main_overlay: {\n            settings_modal: null,\n        },\n    });\n\n    this.body.addScreen('add_account', {\n        blur_overlay: null,\n        toolbar: null,\n        login: null\n    });\n\n    this.body.addScreen('about', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { about: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    let path_acc_settings_modal = new this.ViewPath('account.settings_account_modal');\n\n    this.body.addScreen('account_settings_modal', {\n        main_overlay: {\n            account_settings_modal: path_acc_settings_modal\n        },\n    });\n\n\n    let path_chat_head = new this.ViewPath('chat_item.content.head'),\n        path_chat_body = new this.ViewPath('chat_item.content'),\n        path_chat_body_placeholder = new this.ViewPath('chat_item.content_placeholder'),\n        path_chat_bottom = new this.ViewPath('chat_item.content.bottom'),\n        path_group_invitation = new this.ViewPath('contact.invitation'),\n        path_enable_view = new this.ViewPath('omemo_item.account.omemo_enable_view'),\n        path_contact_details_right = new this.ViewPath('contact.details_view_right'),\n        path_contact_details_right_encrypted = new this.ViewPath('contact.details_view_right_encrypted'),\n        path_participant_messages = new this.ViewPath('model.messages_view'),\n        path_details_participants = new this.ViewPath('contact.details_view.participants');\n\n    this.body.addScreen('contacts', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { contacts: null },\n            right: { contact_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('search', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { discovering_main: null},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('mentions', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { mentions: null },\n            right: { mentions_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('all-chats', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { chats: null },\n            right: { chat_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n\n    this.right_panel.patchTree = function (tree, options) {\n        if (options.right === undefined)\n            return;\n        if (options.show_placeholder) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: null,\n                chat_body_placeholder: path_chat_body_placeholder,\n                chat_bottom: null\n            };\n        }\n        if ((options.right === 'message_context') || (options.right === 'participant_messages') || (options.right === 'searched_messages')) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_participant_messages,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'group_invitation') {\n            return { details: path_group_invitation };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n        if (options.chat_item) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_chat_body,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'enable_encryption' || options.omemo_item) {\n            return { details: path_enable_view };\n        }\n    };\n\n\n    this.right_contact_panel.patchTree = function (tree, options) {\n        if (options.right_contact === undefined)\n            return;\n        if (options.right_contact === 'contact_details') {\n            return { details: path_contact_details_right };\n        }\n        if (options.right_contact === 'contact_details_encrypted') {\n            return { details: path_contact_details_right_encrypted };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n    };\n\n    this.body.setScreen('blank');\n\n    // initial synchronization\n    if (!this.accounts.length)\n        this.body.setScreen('login');\n    else if (this.body.isScreen('blank'))\n        this.body.setScreen('all-chats');\n    xabber.trigger(\"start_accounts\");\n\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    utils = env.utils,\n    $ = env.$,\n    templates = env.templates.base,\n    Strophe = env.Strophe,\n    _ = env._,\n    KeyHelper = env.libsignal.KeyHelper,\n    SignalProtocolAddress = env.libsignal.SignalProtocolAddress,\n    SessionBuilder = env.libsignal.SessionBuilder,\n    SessionCipher = env.libsignal.SessionCipher;\n\nxabber.Peer = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    initialize: function (attrs, options) {\n        attrs = attrs || {};\n        this.account = options.account;\n        this.devices = {};\n        this.store = this.account.omemo.store;\n        this.fingerprints = new xabber.Fingerprints({model: this});\n        this.updateDevices(attrs.devices);\n        this.set({\n            jid: attrs.jid\n        });\n    },\n\n    updateDevices: function (devices) {\n        if (!devices)\n            return;\n        for (let d in this.devices) {\n            if (!devices[d]) {\n                this.account.omemo.removeSession('session' + this.devices[d].address.toString());\n                delete this.devices[d];\n            }\n        }\n        for (let d in devices) {\n            let device = this.getDevice(d),\n                label = devices[d].label;\n            label && device.set('label', label);\n        }\n    },\n\n    getDevicesNode: async function () {\n        if (!this._pending_devices) {\n            this._pending_devices = true;\n            this._dfd_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getDevicesNode(this.get('jid'), (cb) => {\n                    this.updateDevices(this.account.getConnectionForIQ().omemo.parseUserDevices($(cb)));\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                }, () => {\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    encrypt: async function (message) {\n        let enc_promises = [],\n            aes = await utils.AES.encrypt(message),\n            is_trusted = true;\n\n        if (!_.keys(this.devices).length)\n            await this.getDevicesNode();\n        for (let device in this.devices) {\n            enc_promises.push(this.devices[device].encrypt(aes.keydata));\n        }\n\n        for (let device in this.account.omemo.own_devices) {\n            enc_promises.push(this.account.omemo.own_devices[device].encrypt(aes.keydata));\n        }\n\n        let keys = await Promise.all(enc_promises);\n\n        keys = keys.filter(key => key !== null);\n\n        for (let device_id in this.devices) {\n            let device = this.devices[device_id];\n            if (device.get('ik') === null)\n                continue;\n            if (device.get('trusted') === null)\n                is_trusted = 'error';\n            if (is_trusted && device.get('trusted') === undefined)\n                is_trusted = 'none';\n        }\n\n        return {\n            keys: keys,\n            payload: aes.payload,\n            is_trusted: is_trusted\n        };\n    },\n\n    decrypt: async function (deviceId, ciphertext, preKey) {\n        let device = this.getDevice(deviceId);\n\n        return device.decrypt(ciphertext, preKey);\n    },\n\n    getDevice: function (id) {\n        if (!this.devices[id]) {\n            this.devices[id] = new xabber.Device({jid: this.get('jid'), id: id }, { account: this.account, store: this.store});\n        }\n\n        return this.devices[id];\n    }\n});\n\nxabber.Peers = Backbone.Collection.extend({\n    model: xabber.Peer,\n\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.Fingerprints = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-wrap',\n    template: templates.fingerprints,\n    ps_selector: '.fingerprints-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-delete': \"deleteDevice\",\n        \"click .set-label + div\": \"editLabel\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        if (this.model.own_devices) {\n            this.account = this.model.account;\n            this.omemo = this.model;\n            this.jid = this.account.get('jid');\n            this.is_own_devices = true;\n        } else {\n            this.account = this.model.account;\n            this.omemo = this.account.omemo;\n            this.jid = this.model.get('jid');\n        }\n    },\n\n    open: function () {\n        this.omemo = this.account.omemo;\n        let name = \"\";\n        if (this.is_own_devices)\n            name = this.account.get('name');\n        else {\n            let contact = this.account.contacts.get(this.jid);\n            name = contact ? contact.get('name') : this.jid;\n        }\n        this.$('.header').text(xabber.getString('omemo__dialog_fingerprints__header', [name]));\n        this.data.set('visible', true);\n        this.show();\n        this.$('div.fingerprints-content').html(env.templates.contacts.preloader());\n        if (this.is_own_devices)\n            this.renderOwnDevices();\n        else\n            this.renderDevices();\n    },\n\n    renderDevices: function () {\n        this.model.getDevicesNode().then(() => {\n            let devices_count = _.keys(this.model.devices).length;\n            this.updateFingerprints(this.model.devices);\n        });\n        this.updateOwnFingerprint();\n    },\n\n    renderOwnDevices: function () {\n        this.omemo.getMyDevices().then(() => {\n            let devices_count = _.keys(this.model.own_devices).length;\n            this.updateFingerprints(this.model.own_devices);\n            this.updateOwnFingerprint();\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    editLabel: function () {\n        this.$('.set-label').removeClass('hidden');\n        this.$('.set-label').focus();\n        let saveLabel = (ev) => {\n            let label = ev.target.value.trim();\n            this.saveLabel(label);\n        };\n        this.$('.set-label')[0].onblur = saveLabel;\n        this.$('input.set-label')[0].onkeydown = (ev) => {\n            if (ev.keyCode == constants.KEY_ENTER)\n                saveLabel(ev);\n        };\n    },\n\n    saveLabel: function (label) {\n        this.$('.set-label').addClass('hidden');\n        if (label == this.account.settings.get('device_label_text'))\n            return;\n        this.account.settings.save('device_label_text', label);\n        this.account.getConnectionForIQ().omemo.publishDevice(this.omemo.get('device_id'), label, () => {\n            this.updateOwnFingerprint();\n        });\n    },\n\n    updateFingerprints: async function (devices) {\n        let counter = 0,\n            devices_count = _.keys(devices).length,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content');\n        dfd.done((f_count) => {\n            if (!f_count)\n                $container.html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n            else\n                this.$('.dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    container: this.$('.fingerprints-content')[0],\n                    alignment: 'left'\n                });\n            this.jid == this.account.get('jid') && f_count++;\n            this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n            $container.find('.preloader-wrapper').detach();\n        });\n        for (let device_id in devices) {\n            if (device_id == this.omemo.get('device_id')) {\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n                continue;\n            }\n            let device = devices[device_id];\n            if (device.get('ik')) {\n                let options = {},\n                    f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let options = {},\n                            f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                        $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                    }\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                }, () => {\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                });\n            }\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').append(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'trust').text(xabber.getString('omemo__dialog_fingerprints__button_trust'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, true);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n            this.account.trigger('device_trusted', device.id, this.jid);\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'ignore').text(xabber.getString('omemo__dialog_fingerprints__button_ignore'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, false);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let delete_button = this.is_own_devices ? true : false,\n            edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            error;\n        if (fingerprint.match(/.{1,8}/g))\n            fingerprint = fingerprint.match(/.{1,8}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.is_own_devices ? this.account.omemo.own_devices[id] : this.model.devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,8}/g).join(\" \"));\n        let $row = templates.fingerprint_item({id,label,trust,fingerprint, delete_button, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            device_id = Number($target.find('div.device-id').text());\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                $target.detach();\n                let f_count = this.$('div.fingerprints-content').find('div.row').length;\n                if (!f_count)\n                    this.$('div.fingerprints-content').html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                this.jid == this.account.get('jid') && f_count++;\n                this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n                delete this.model.own_devices[device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        $target.detach();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                }\n            }\n        });\n    },\n});\n\nxabber.FingerprintsOwnDevices = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-devices-wrap',\n    template: templates.fingerprints_devices,\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.omemo = this.model;\n        this.jid = this.account.get('jid');\n        this.is_own_devices = true;\n    },\n\n    open: function (device_id, is_own) {\n        this.omemo = this.account.omemo;\n        this.data.set('visible', true);\n        this.updateColorScheme();\n        this.show();\n        this.renderOwnDevices(device_id, is_own);\n    },\n\n    updateTrustDevice: function (device_id, $container, context, callback) {\n        this.omemo.getMyDevices().then(() => {\n            let device = this.model.own_devices[device_id];\n            if (!device)\n                return;\n            if (device.get('ik')) {\n                let f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                this.renderTrustOnFingerprint(is_trusted, $container, context, callback);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        this.renderTrustOnFingerprint(is_trusted, $container, context, callback);\n                    }\n                }, () => {\n                });\n            }\n        });\n    },\n\n    renderTrustOnFingerprint: function (is_trusted, $container, context, callback) {\n        $container.find('.device-encryption').attr('data-trust', is_trusted).addClass('active');\n        $container.attr('data-trust', is_trusted);\n        if (is_trusted === 'unknown'){\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__unverified_device\"));\n        } else if (is_trusted === 'trust') {\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__trusted_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__trusted_device\"));\n        } else if (is_trusted === 'ignore') {\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__ignored_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__ignored_device\"));\n        }\n        if (is_trusted !== 'trust' && is_trusted !== 'ignore'){\n            let $warning_container = $container.closest('.devices-wrap').find('.device-encryption-warning'),\n                untrusted_count = parseInt($warning_container.attr('data-not-trusted-count')) + 1;\n            $warning_container.removeClass('hidden').attr('data-not-trusted-count', untrusted_count);\n            $warning_container.find('.device-encryption-warning-label').html(xabber.getString(\"settings_account__encryption_warning_text\", [untrusted_count]));\n        }\n        $container.find('.device-encryption .mdi-lock').removeClass('hidden');\n        context && context.updateHeight && context.updateHeight();\n        callback && callback();\n    },\n\n    renderOwnDevices: function (device_id, is_own) {\n        this.omemo.getMyDevices().then(() => {\n            this.device_id = device_id;\n            this.fingerprint = null;\n            if (is_own)\n                this.updateOwnFingerprint(device_id);\n            else{\n                this.updateOwnFingerprint(device_id);\n                this.updateFingerprints(device_id);\n            }\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateFingerprints: async function (device_id) {\n        let counter = 0,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content .other-device-content'),\n            device = this.model.own_devices[device_id];\n        $container.html('');\n        dfd.done((is_error) => {\n            console.log(is_error);\n            this.$('.dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                container: this.$('.fingerprints-content .other-device-content')[0],\n                alignment: 'left'\n            });\n        });\n        if (device.get('ik')) {\n            let options = {},\n                f = device.generateFingerprint(),\n                fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n            is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n            this.fingerprint = f;\n            $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n            dfd.resolve();\n        }\n        else {\n            this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                let $iq = $(iq),\n                    $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                    ik = $bundle.find(`ik`).text();\n                if (ik) {\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    let options = {},\n                        f = device.generateFingerprint(),\n                        fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                        is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                    is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                    this.fingerprint = f;\n                    $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                }\n                dfd.resolve();\n            }, () => {\n                dfd.resolve(true);\n            });\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').html(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, true);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, false);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            device_icons = [\n                'device-cellphone',\n                'device-console',\n                'device-desktop',\n                'device-tablet',\n                'device-web',\n            ],\n            error, svg_icon;\n        if (fingerprint.match(/.{1,4}/g))\n            fingerprint = fingerprint.match(/.{1,4}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.account.omemo.own_devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,4}/g).join(\" \"));\n        svg_icon = edit_setting ? 'device-web' : device_icons[Math.floor(Math.random()*device_icons.length)]\n        let $row = templates.fingerprint_devices_item({id,label,trust, svg_icon, fingerprint, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content');\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [this.device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                delete this.model.own_devices[this.device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[this.device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        this.account.trigger('trusting_updated');\n                        this.close();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, this.device_id);\n                }\n            }\n        });\n    },\n\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.Bundle = Backbone.Model.extend({\n    initialize: async function (attrs, options) {\n        this.preKeys = [];\n        this.model = options.model;\n        this.store = options.store;\n        if (this.model.get('identityKey'))\n            this.getIdentity();\n        else\n            await this.generateIdentity();\n       await this.getPreKeys();\n       if (this.model.get('resend_bundle')) {\n           this.model.publishBundle(this.model.get('device_attrs'));\n           this.model.set('resend_bundle', false);\n           this.model.set('device_attrs', null);\n       }\n    },\n\n    generateIdentity: function () {\n        return Promise.all([\n            KeyHelper.generateIdentityKeyPair(),\n            KeyHelper.generateRegistrationId(),\n        ]).then((result) => {\n            let identityKey = result[0],\n                registrationId = result[1];\n            this.store.put('identityKey', identityKey);\n            this.store.put('registrationId', registrationId);\n            this.model.account.trigger('update_omemo_devices');\n            this.cacheIdentity(identityKey, registrationId);\n        });\n    },\n\n    getIdentity: function () {\n        let identityKey = JSON.parse(this.model.get('identityKey')),\n            registrationId = this.model.get('registrationId'),\n            pubKey = utils.fromBase64toArrayBuffer(identityKey.pubKey),\n            privKey = utils.fromBase64toArrayBuffer(identityKey.privKey);\n        this.store.put('identityKey', {pubKey: pubKey, privKey: privKey});\n        this.store.put('registrationId', registrationId);\n    },\n\n    cacheIdentity: function (identityKey, registrationId) {\n        let pubKey = utils.ArrayBuffertoBase64(identityKey.pubKey),\n            privKey = utils.ArrayBuffertoBase64(identityKey.privKey);\n        this.model.save('identityKey', JSON.stringify({pubKey: pubKey, privKey: privKey}));\n        this.model.save('registrationId', registrationId);\n    },\n\n    generatePreKeys: async function () {\n        let preKeysPromises = [];\n        for (let i = 1; i <= constants.PREKEYS_COUNT; i++) {\n            preKeysPromises.push(this.generatePreKey(i));\n        }\n\n        preKeysPromises.push(this.generateSignedPreKey(1));\n\n        return await Promise.all(preKeysPromises);\n    },\n\n    getSignedPreKey: async function () {\n        let spk = this.model.get('signedPreKey');\n        if (spk) {\n            let pubKey = utils.fromBase64toArrayBuffer(spk.keyPair.pubKey),\n                privKey = utils.fromBase64toArrayBuffer(spk.keyPair.privKey),\n                signature = utils.fromBase64toArrayBuffer(spk.signature),\n                keyPair = {pubKey, privKey},\n                keyId = spk.keyId;\n            return {keyPair, keyId, signature};\n        }\n        else {\n            return await this.generateSignedPreKey(this.preKeys[0].keyId || 1);\n        }\n    },\n\n    getPreKeys: async function () {\n        let prekeys = this.model.prekeys.getAll();\n        if (Object.keys(prekeys).length >= constants.MIN_PREKEYS_COUNT) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    priv_pk = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pub_pk = utils.fromBase64toArrayBuffer(prekey.pubKey),\n                    key_pair = {pubKey: pub_pk, privKey: priv_pk};\n                this.preKeys.push({keyId: id, keyPair: key_pair});\n                this.store.storePreKey(id, key_pair);\n            }\n            this.getUsedPreKeys();\n            let spk = await this.getSignedPreKey();\n            this.preKeys.push(spk);\n            this.store.storeSignedPreKey(spk.keyId, spk.keyPair);\n        }\n        else {\n            await this.generatePreKeys().then((prekeys) => {\n                this.preKeys = prekeys;\n                this.getUsedPreKeys();\n            });\n        }\n    },\n\n    getUsedPreKeys: function () {\n        let prekeys = this.model.own_used_prekeys.getAll();\n        if (Object.keys(prekeys).length) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    privKey = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pubKey = utils.fromBase64toArrayBuffer(prekey.pubKey);\n                this.store.storePreKey(id, {pubKey, privKey});\n            }\n        }\n    },\n\n    generatePreKey: async function (id) {\n        let preKey = await KeyHelper.generatePreKey(id);\n        this.store.storePreKey(id, preKey.keyPair);\n\n        return preKey;\n    },\n\n    generateSignedPreKey: async function (id) {\n        let identity = await this.store.getIdentityKeyPair();\n        let signedPreKey = await KeyHelper.generateSignedPreKey(identity, id);\n\n        this.store.storeSignedPreKey(id, signedPreKey.keyPair);\n        this.cacheSignedPreKey(signedPreKey);\n\n        return signedPreKey;\n    },\n\n    cacheSignedPreKey: function (spk) {\n        let pubKey = utils.ArrayBuffertoBase64(spk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(spk.keyPair.privKey),\n            signature = utils.ArrayBuffertoBase64(spk.signature),\n            keyPair = {pubKey, privKey},\n            keyId = spk.keyId,\n            converted_spk = {keyPair, keyId, signature};\n        this.model.save('signedPreKey', converted_spk);\n    }\n\n});\n\nxabber.Prekeys = Backbone.Model.extend({\n    initialize: function (options) {\n        this.name = options.name;\n        this.model = options.model;\n    },\n\n    get: function (id) {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys[id];\n    },\n\n    put: function (prekey) {\n        if (!prekey.id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        prekeys[prekey.id] = prekey;\n        this.model.save(this.name, prekeys);\n    },\n\n    getAll: function () {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys;\n    },\n\n    remove: function (id) {\n        if (!id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        delete prekeys[id];\n        this.model.save(this.name, prekeys);\n    }\n});\n\nxabber.Device = Backbone.Model.extend({\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        this.id = attrs.id;\n        this.jid = attrs.jid;\n        this.store = options.store;\n        this.preKeys = null;\n        this.address = new SignalProtocolAddress(attrs.jid, attrs.id);\n    },\n\n    generateFingerprint: function () {\n        let identityKey = this.get('ik');\n        if (!identityKey)\n            return;\n        if (identityKey.byteLength == 33)\n            identityKey = identityKey.slice(1);\n        return Array.from(new Uint8Array(identityKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n    },\n\n    closeSession: function (reason) {\n        this.account.getConnectionForIQ().omemo.sendOptOut({\n            to: this.jid,\n            reason: reason\n        }, () => {});\n    },\n\n    getBundle: async function () {\n        if (!this._pending_bundle) {\n            this._pending_bundle = true;\n            this._dfd_bundle = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.jid, id: this.id}, (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${this.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        $spk = $bundle.find('spk'),\n                        spk = {id: $spk.attr('id'), key: $spk.text(), signature: $bundle.find('spks').text()},\n                        ik = $bundle.find(`ik`).text();\n                    this.preKeys = [];\n                    if (!ik)\n                        this.set('ik', null);\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        this.preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    this._pending_bundle = false;\n                    let pk = this.getRandomPreKey();\n                    if (!pk) {\n                        this._dfd_bundle.reject();\n                        reject();\n                    }\n                    else {\n                        this._dfd_bundle.resolve({pk, spk, ik});\n                        resolve({pk, spk, ik});\n                    }\n                }, () => {\n                    this.set('ik', null);\n                    this.preKeys = [];\n                    this._dfd_bundle.reject();\n                    this._pending_bundle = false;\n                    reject();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_bundle.done(({pk, spk, ik}) => {\n                    resolve({pk, spk, ik});\n                });\n                this._dfd_bundle.fail(() => {\n                    reject();\n                });\n            });\n        }\n    },\n\n    getRandomPreKey: function () {\n        let min = 0,\n            max = this.preKeys.length - 1,\n            i = Math.floor(min + Math.random() * (max + 1 - min));\n        return this.preKeys[i];\n    },\n\n    decrypt: async function (cipherText, preKey) {\n        try {\n            let sessionCipher = new SessionCipher(this.store, this.address), plainText;\n\n            if (preKey){\n                plainText = await sessionCipher.decryptPreKeyWhisperMessage(cipherText, 'binary');\n            }\n            else {\n                if (!this.store.hasSession(this.address.toString())) {\n                    let session = this.getCachedSession();\n                    if (session)\n                        await this.store.storeSession(this.address.toString(), session);\n                }\n                plainText = await sessionCipher.decryptWhisperMessage(cipherText, 'binary');\n            }\n\n            return plainText;\n        }\n        catch (e) {\n            throw e;\n        }\n    },\n\n    getPreKey: function () {\n        let pk = this.account.omemo.used_prekeys.get(String(this.id));\n        return pk;\n    },\n\n    getCachedSession: function () {\n        return this.account.omemo.getSession('session' + this.address.toString());\n    },\n\n    encrypt: async function (plainText) {\n        try {\n            if (this.get('trusted') === false && (this.id != this.account.omemo.get('device_id')))\n                return null;\n            if (!this.store.hasSession(this.address.toString()) || !this.is_session_initiated) { // this.preKeys ??\n                if (this.preKeys && !this.preKeys.length)\n                    return null;\n                this.is_session_initiated = true;\n                let s = await this.initSession();\n                if (!s)\n                    return null;\n            }\n\n            let session = this.getSession(),\n                ciphertext = await session.encrypt(plainText);\n\n            return {\n                preKey: ciphertext.type === 3,\n                ciphertext: ciphertext,\n                deviceId: this.address.getDeviceId()\n            };\n        } catch (e) {\n            console.log('Error:', e);\n            console.warn('Could not encrypt data for device with id ' + this.address.getDeviceId());\n\n            return null;\n        }\n    },\n\n    initSession: async function () {\n        let {pk, spk, ik} = await this.getBundle(),\n            cached_pk = this.getPreKey(),\n            id = this.id;\n        if (cached_pk) {\n            if (!spk || spk && JSON.stringify(spk) == JSON.stringify(cached_pk.spk) && JSON.stringify(ik) == JSON.stringify(cached_pk.ik))\n                pk = cached_pk.pk;\n            else\n                this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        }\n        else\n            this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        this.set({'pk': utils.fromBase64toArrayBuffer(pk.key), 'ik': utils.fromBase64toArrayBuffer(ik)});\n        this.fingerprint = this.generateFingerprint();\n        let trusted = this.account.omemo.isTrusted(this.jid, id, this.fingerprint);\n        this.set('trusted', trusted);\n        if ((this.id != this.account.omemo.get('device_id')) && trusted === false)\n            return false;\n        this.processPreKey({\n            registrationId: Number(id),\n            identityKey: utils.fromBase64toArrayBuffer(ik),\n            signedPreKey: {\n                keyId: Number(spk.id),\n                publicKey: utils.fromBase64toArrayBuffer(spk.key),\n                signature: utils.fromBase64toArrayBuffer(spk.signature)\n            },\n            preKey: {\n                keyId: Number(pk.id),\n                publicKey: utils.fromBase64toArrayBuffer(pk.key)\n            }\n        });\n        return true;\n    },\n\n    processPreKey: function (preKeyBundle) {\n        this.session = new SessionBuilder(this.store, this.address);\n        return this.session.processPreKey(preKeyBundle);\n    },\n\n    removeSession: function () {\n        this.store.removeSession(this.address.toString());\n        this.sessionCipher = null;\n    },\n\n    getSession: function () {\n        if (!this.sessionCipher) {\n            this.sessionCipher = new SessionCipher(this.store, this.address);\n        }\n        return this.sessionCipher;\n    }\n});\n\nxabber.Omemo = Backbone.ModelWithStorage.extend({\n    defaults: {\n        sessions: {},\n        fingerprints: {},\n        prekeys: {},\n        retract_version: 0,\n        used_prekeys: {},\n        own_used_prekeys: {},\n        device_id: \"\"\n    },\n\n    _initialize: function (attrs, options) {\n        this.on(\"change:device_id\", this.onDeviceIdUpdated, this);\n        this.on(\"destroy\", this.onOmemoDestroyed, this);\n        this.own_devices = {};\n        this.account = options.account;\n        this.peers = new xabber.Peers();\n        if (!this.get('device_id'))\n            this.set('device_id', this.generateDeviceId());\n        this.store = new xabber.SignalProtocolStore();\n        this.account.on(\"devices_updated\", this.onOwnDevicesUpdated, this);\n        this.store.on('prekey_removed', this.removePreKey, this);\n        this.store.on('session_stored', this.cacheSession, this);\n    },\n\n    storeSessions: function () {\n        let sessions = this.get('sessions');\n        for (let session_id in sessions) {\n            let session = sessions[session_id];\n            session && this.store.put(session_id, session);\n        }\n    },\n\n    onOmemoDestroyed: function () {\n        if (this.own_devices && Object.keys(this.own_devices).length != 0)\n            this.deleteOwnDevice();\n        this.cached_messages && this.cached_messages.destroy();\n        this.account.connection.deleteHandler(this._msg_handler);\n    },\n\n    deleteOwnDevice: function () {\n        let device_id = this.get('device_id');\n        delete this.own_devices[device_id];\n        let conn = this.account.getConnectionForIQ();\n        if (conn && conn.omemo) {\n            delete conn.omemo.devices[device_id];\n            conn.omemo.publishDevice(null, null, () => {});\n            conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n        }\n    },\n\n    onConnected: function () {\n        this.prekeys = new xabber.Prekeys({name: 'prekeys', model: this});\n        this.used_prekeys = new xabber.Prekeys({name: 'used_prekeys', model: this});\n        this.own_used_prekeys = new xabber.Prekeys({name: 'own_used_prekeys', model: this});\n        this.cached_messages = new xabber.DecryptedMessages({id: 'decrypted-messages'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-decrypted-messages-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        this.bundle = new xabber.Bundle(null, {store: this.store, model: this});\n        this.connection = this.account.connection;\n        this.registerMessageHandler();\n        this.addDevice();\n    },\n\n    getMyDevices: async function () {\n        if (!this._pending_own_devices) {\n            this._pending_own_devices = true;\n            this._dfd_own_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                let conn = this.account.getConnectionForIQ();\n                if (conn) {\n                    if (conn.omemo) {\n                        conn.omemo.getDevicesNode(null, (cb) => {\n                            conn.omemo.devices = conn.omemo.parseUserDevices($(cb));\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        }, function () {\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        });\n                    } else\n                        this._pending_own_devices = false;\n                } else\n                    this._pending_own_devices = false;\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_own_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    updateFingerprints: function (contact, device_id, fingerprint, trusted) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[contact])\n            fingerprints[contact] = {};\n        let contact_fingerprints = fingerprints[contact];\n        if (_.isArray(contact_fingerprints))\n            contact_fingerprints = {};\n        contact_fingerprints[device_id] = {fingerprint, trusted};\n        fingerprints[contact] = contact_fingerprints;\n        this.save('fingerprints', fingerprints);\n    },\n\n    isTrusted: function (jid, device_id, fingerprint) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[jid])\n            return;\n        if (!fingerprints[jid][device_id])\n            return;\n        let fing = fingerprints[jid][device_id];\n        if (fing) {\n            if (fing.fingerprint == fingerprint) {\n                if (fing.trusted === undefined)\n                    return;\n                else\n                    return fing.trusted;\n            }\n            else\n                return null;\n        }\n    },\n\n    cacheRetractVersion: function (version) {\n        console.log('version ' + version)\n        this.save('retract_version', version);\n    },\n\n    getRetractVersion: function () {\n        return this.get('retract_version');\n    },\n\n    addDevice: function () {\n        let device_id = this.get('device_id');\n        if (this.connection) {\n            let omemo = this.account.getConnectionForIQ().omemo;\n            if (Object.keys(omemo.devices).length) {\n                let device = omemo.devices[device_id];\n                if (!device) {\n                    let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                    this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                }\n                else {\n                    this.publishBundle();\n                }\n            }\n            else\n                omemo.getDevicesNode(null, (cb) => {\n                    this.account.getConnectionForIQ().omemo.devices = omemo.parseUserDevices($(cb));\n                    for (let dev_id in this.account.getConnectionForIQ().omemo.devices) {\n                        if (!this.own_devices[dev_id])\n                            this.own_devices[dev_id] = new xabber.Device({jid: this.account.get('jid'), id: dev_id}, { account: this.account, store: this.store});\n                    }\n                    let device = omemo.devices[device_id];\n                    if (!device) {\n                        let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                        this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                    }\n                    else {\n                        this.publishBundle();\n                    }\n                });\n        }\n    },\n\n    onDeviceIdUpdated: function () {\n        this.save('device_id', this.get('device_id'));\n    },\n\n    generateDeviceId: function () {\n        if (this.account.get('x_token') && this.account.get('x_token').token_uid && this.account.get('x_token').token_uid.length >= 8 && Number(this.account.get('x_token').token_uid.slice(0,8)))\n            return Number(this.account.get('x_token').token_uid.slice(0,8));\n        let min = 1,\n            max = Math.pow(2, 31) - 1,\n            rand = min + Math.random() * (max + 1 - min);\n        return Math.floor(rand);\n    },\n\n    updateMessage: function (attrs, contact) {\n        if (!this.cached_messages)\n            return;\n        this.cached_messages.updateMessage(attrs, contact);\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message', null, null, null, {'encrypted': true});\n    },\n\n    encrypt: function (contact, message) {\n        let peer = this.getPeer(contact.get('jid')),\n            $msg = $(message.tree()),\n            origin_id = $msg.children('origin-id').attr('id'),\n            plaintext = Strophe.serialize($msg.children('envelope')[0]) || \"\";\n\n        origin_id && this.cached_messages.putMessage(contact, origin_id, plaintext);\n\n        return peer.encrypt(plaintext).then((encryptedMessage) => {\n\n            let encryptedElement = $build('encrypted', {xmlns: Strophe.NS.OMEMO})\n                .c('header', {\n                    sid: this.get('device_id'),\n                    label: this.account.settings.get('device_label_text')\n                }),\n                myKeys = $build('keys', {jid: this.account.get('jid')});\n\n            encryptedElement.c('keys', { jid: contact.get('jid')});\n\n            for (let key of encryptedMessage.keys) {\n                let attrs = {\n                    rid: key.deviceId,\n                    kex: undefined\n                };\n                if (key.preKey) {\n                    attrs.kex = true;\n                }\n\n                if (peer.devices[key.deviceId])\n                    encryptedElement.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n                else\n                    myKeys.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n\n            }\n            encryptedElement.up().cnode(myKeys.tree());\n\n            encryptedElement.up().up()\n                .c('payload').t(utils.ArrayBuffertoBase64(encryptedMessage.payload));\n\n            $(message.tree()).find('envelope').remove();\n\n            message.cnode(encryptedElement.tree());\n            message.up().c('encryption', {\n                xmlns: Strophe.NS.EXPLICIT_MESSAGE_ENCRYPTION,\n                namespace: Strophe.NS.OMEMO\n            });\n            message.up().c('store', {\n                xmlns: 'urn:xmpp:hints'\n            }).up()\n                .c('body').t('This message is encrypted using OMEMO end-to-end encryption.').up();\n\n            return {message: message, is_trusted: encryptedMessage.is_trusted};\n        }).catch((msg) => {\n        });\n    },\n\n    hasChanges: function (o1, o2) {\n        let obj1 = _.clone(o1), obj2 = _.clone(o2);\n        for (let d in obj1) {\n            delete obj2[d];\n        }\n        for (let d in obj2) {\n            delete obj1[d];\n        }\n        return Object.keys(obj1).length || Object.keys(obj2).length;\n    },\n\n    receiveHeadlineMessage: function (message) {\n        if (!this.account.omemo || (this.account.omemo && this.cid != this.account.omemo.cid))\n            return;\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if ($message.find('event[xmlns=\"' + Strophe.NS.PUBSUB + '#event\"]').length) {\n            if (node == `${Strophe.NS.OMEMO}:devices`) {\n                let devices = this.account.getConnectionForIQ().omemo.parseUserDevices($message);\n                if (from_jid === this.account.get('jid')) {\n                    let has_devices = this.own_devices && Object.keys(this.own_devices).length,\n                        has_changes = this.hasChanges(this.own_devices, devices);\n                    this.account.getConnectionForIQ().omemo.devices = devices;\n                    let device_id = this.get('device_id'),\n                        device = this.account.getConnectionForIQ().omemo.devices[device_id];\n                    if (has_changes) {\n                        this.account.trigger(\"devices_updated\");\n                    }\n                    if (has_devices && has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                else {\n                    let peer = this.getPeer(from_jid),\n                        has_devices = peer.devices && Object.keys(peer.devices).length,\n                        has_changes = this.hasChanges(peer.devices, devices);\n                    peer.updateDevices(devices);\n                    if (has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                return;\n            }\n            if (node == `${Strophe.NS.OMEMO}:bundles`) {\n                let $item = $message.find('items item').first(),\n                    device_id = $item.attr('id'),\n                    $bundle = $item.children(`bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`), device;\n                if (from_jid === this.account.get('jid')) {\n                    let devices = this.account.getConnectionForIQ().omemo.devices\n                    if (devices && devices[device_id]) {\n                        if (!this.own_devices[device_id])\n                            this.own_devices[device_id] = new xabber.Device({jid: this.account.get('jid'), id: device_id}, { account: this.account, store: this.store});\n                        device = this.own_devices[device_id];\n                    }\n                } else {\n                    let peer = this.peers.get(from_jid);\n                    if (peer) {\n                        device = peer.devices[device_id];\n                    }\n                }\n                if (device) {\n                    let ik = $bundle.find(`ik`).text(),\n                        device_ik = device.get(`ik`), preKeys = [];\n                    if (!ik) {\n                        device.set('ik', null);\n                        return;\n                    }\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    device.preKeys = preKeys;\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    device.set('fingerprint', device.generateFingerprint());\n                    device_ik && (device_ik = utils.ArrayBuffertoBase64(device_ik));\n                    if (!_.isUndefined(device_ik) && device_ik != ik)\n                        this.account.trigger('trusting_updated');\n                }\n            }\n        }\n    },\n\n    receiveChatMessage: function (message, options, deferred) {\n        options = options || {};\n        let $message = $(message);\n        if ($message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length) {\n            if ($message.find('result[xmlns=\"' + Strophe.NS.MAM + '\"]').length)\n                _.extend(options, {\n                    is_mam: true,\n                    is_archived: true\n                });\n            if ($message.find('[xmlns=\"' + Strophe.NS.CARBONS + '\"]').length)\n                options.carbon_copied = true;\n\n            let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n                jid = (Strophe.getBareJidFromJid($msg.attr('from')) === this.account.get('jid') ? Strophe.getBareJidFromJid($msg.attr('to')) : Strophe.getBareJidFromJid($msg.attr('from'))) || options.from_jid,\n                contact = this.account.contacts.get(options.conversation ? options.conversation : jid),\n                stanza_id = $msg.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n                cached_msg = stanza_id && this.cached_messages && this.cached_messages.getMessage(contact, stanza_id);\n\n            if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid') && options.carbon_copied && options.carbon_direction && options.carbon_direction === 'sent')\n                return;\n\n            let device_id = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid');\n            options.device_id = device_id;\n\n            if (cached_msg) {\n                if (!options.replaced) {\n                    options.encrypted = true;\n                    this.getTrusted($message).then((is_trusted) => {\n                        options.is_trusted = is_trusted;\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                        if (options.gallery && deferred)\n                            deferred.resolve($message, options);\n\n                        if (!options.not_verified_device){\n                            let peer = this.getPeer(contact.get('jid')),\n                                device = peer.devices[device_id];\n                            if (device && device.get('fingerprint')) {\n                                let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                                if (_.isUndefined(trusted)){\n                                    options.not_verified_device = device_id;\n                                    options.not_verified_device_no_device = false;\n                                }\n                            } else if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid')){\n                                options.not_verified_device = device_id;\n                                options.not_verified_device_no_device = true;\n                            }\n                        }\n                        this.account.chats.receiveChatMessage($message[0], options);\n                    });\n                    return;\n                }\n                else if (options.replaced && $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid') == this.get('device_id')) {\n                    options.encrypted = true;\n                    $message.find('body').remove();\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                    let chat = this.account.chats.getChat(contact, 'encrypted');\n                    chat && chat.messages.createFromStanza($message, options);\n                    let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                    if (msg_item) {\n                        msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                        chat && chat.item_view.updateLastMessage(chat.last_message);\n                    }\n                    return;\n                }\n            }\n\n            if (options.replaced) {\n                this.decrypt(message.children('replace').children('message'), options).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                        let chat = this.account.chats.getChat(contact, 'encrypted');\n                        chat && chat.messages.createFromStanza($message, options);\n                        let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                        if (msg_item) {\n                            msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                            chat && chat.item_view.updateLastMessage(chat.last_message);\n                        }\n                    }\n                });\n            } else {\n                this.getTrusted($message).then((is_trusted) => {\n                    options.is_trusted = is_trusted;\n                    return this.decrypt(message);\n                }).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                    }\n                    else {\n                        if (decrypted_msg === null) {\n                            this.account.chats.getChat(contact, 'encrypted').item_view.updateLastMessage();\n                            return;\n                        }\n                        options.not_encrypted = true;\n                        delete options.is_trusted;\n                    }\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                    if (options.gallery && decrypted_msg && deferred)\n                        deferred.resolve($message, options);\n                    else if (options.gallery && deferred)\n                        deferred.reject();\n\n                    if (!options.not_verified_device){\n                        let peer = this.getPeer(contact.get('jid')),\n                            device = peer.devices[device_id];\n                        if (device && device.get('fingerprint')) {\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (_.isUndefined(trusted)){\n                                options.not_verified_device = device_id;\n                                options.not_verified_device_no_device = false;\n                            }\n                        } else if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid')){\n                            options.not_verified_device = device_id;\n                            options.not_verified_device_no_device = true;\n                        }\n                    }\n                    this.account.chats.receiveChatMessage($message[0], options);\n                }).catch((e) => {\n                    if (e.name === 'MessageCounterError')//for capturing double decryption of same message\n                        return;\n                    if (options.synced_msg && !options.decryption_retry) {\n                        this.receiveChatMessage($message[0], _.extend(options, {decryption_retry: true}));\n                        return;\n                    }\n                    options.not_encrypted = true;\n                    delete options.is_trusted;\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).remove();\n                    if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                });\n            }\n            if (options.gallery && deferred)\n                deferred.reject();\n        }\n        if (options.gallery && deferred)\n            deferred.reject();\n    },\n\n    checkOwnFingerprints: async function () {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                dfd = new $.Deferred(), counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                resolve(trust);\n            });\n            if (Object.keys(this.own_devices).length) {\n                counter = Object.keys(this.own_devices).length;\n                for (let device_id in this.own_devices) {\n                    let device = this.own_devices[device_id];\n                    if (device_id == this.get('device_id')) {\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                        continue;\n                    }\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null)\n                                is_trusted = null;\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        });\n                    }\n                }\n            }\n            else {\n                this.getMyDevices().then(() => {\n                    this.onOwnDevicesUpdated().then(() => {\n                        counter = Object.keys(this.own_devices).length;\n                        for (let device_id in this.own_devices) {\n                            if (device_id == this.get('device_id')) {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                                continue;\n                            }\n                            let device = this.own_devices[device_id];\n                            if (device.get('fingerprint')) {\n                                let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                                if (trusted === undefined && is_trusted !== null)\n                                    is_trusted = undefined;\n                                if (trusted === null)\n                                    is_trusted = null;\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            } else {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            }\n                        }\n                    });\n                });\n            }\n        });\n    },\n\n    checkContactFingerprints: function (contact) {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                peer = this.getPeer(contact.get('jid')),\n                dfd = new $.Deferred(), counter = 0, unverified_counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                contact.trigger('update_trusted', trust, peer);\n                resolve({trust: trust, unverified_counter: unverified_counter});\n            });\n            if (Object.keys(peer.devices).length) {\n                counter = Object.keys(peer.devices).length;\n                for (let device_id in peer.devices) {\n                    let device = peer.devices[device_id];\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null){\n                            is_trusted = undefined;\n                            unverified_counter++;\n                        }\n                        if (trusted === null){\n                            is_trusted = null;\n                            unverified_counter++;\n                        }\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null){\n                            is_trusted = undefined;\n                            unverified_counter++;\n                        }\n                        if (trusted === null){\n                            is_trusted = null;\n                            unverified_counter++;\n                        }\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null){\n                                is_trusted = undefined;\n                                unverified_counter++;\n                            }\n                            if (trusted === null){\n                                is_trusted = null;\n                                unverified_counter++;\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                }\n            } else {\n                peer.getDevicesNode().then(() => {\n                    counter = Object.keys(peer.devices).length;\n                    !counter && dfd.resolve('nil');\n                    for (let device_id in peer.devices) {\n                        let device = peer.devices[device_id];\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null){\n                                is_trusted = undefined;\n                                unverified_counter++;\n                            }\n                            if (trusted === null) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                else{\n                                    is_trusted = null;\n                                    unverified_counter++;\n                                }\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                });\n\n            }\n        });\n    },\n\n    getTrusted: async function ($message) {\n        let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n            from_jid = Strophe.getBareJidFromJid($msg.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($msg.attr('to')),\n            contact = this.account.contacts.mergeContact(from_jid === this.account.get('jid') ? to_jid : from_jid);\n\n        let own_trusted = await this.checkOwnFingerprints(),\n            contact_trusted = await this.checkContactFingerprints(contact);\n        contact_trusted = contact_trusted.trust;\n        if (own_trusted === 'error' || (own_trusted === 'none' && contact_trusted !== 'error')) {\n            return own_trusted;\n        } else if (contact_trusted === 'error' || contact_trusted === 'none') {\n            return contact_trusted;\n        } else {\n            let device_id = $message.find('encrypted header').attr('sid'),\n                peer = this.getPeer(contact.get('jid')),\n                device = peer.devices[device_id];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                    if (trusted === false) {\n                        return 'untrusted';\n                    }\n                }\n            }\n            return true;\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type');\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n    },\n\n    parseEncrypted: function ($encrypted) {\n        let $payload = $encrypted.children(`payload`),\n            $header = $encrypted.children('header'),\n            payload = utils.fromBase64toArrayBuffer($payload.text()),\n            sid = Number($header.attr('sid'));\n\n        let keys = $header.find(`key`).get().map(function(keyElement) {\n            return {\n                preKey: $(keyElement).attr('kex') === 'true' || $(keyElement).attr('kex') === '1',\n                ciphertext: utils.fromBase64toArrayBuffer($(keyElement).text()),\n                deviceId: parseInt($(keyElement).attr('rid'))\n            };\n        });\n\n        return {sid, keys, payload};\n    },\n\n    getPeer: function (jid) {\n        if (!this.peers.get(jid))\n            this.peers.create({jid}, {account:this.account});\n        return this.peers.get(jid);\n    },\n\n    decrypt: async function (message, options) {\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')) || options.from_jid,\n            $encrypted;\n\n        if ($message.find('result[xmlns=\"'+Strophe.NS.MAM+'\"]').length) {\n            let $m = $message.find('message').first();\n            from_jid = Strophe.getBareJidFromJid($m.attr('from'));\n            $encrypted = $message.children(`result`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else if ($message.find('[xmlns=\"'+Strophe.NS.CARBONS+'\"]').length){\n            $encrypted = $message.children(`[xmlns=\"${Strophe.NS.CARBONS}\"]`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else\n            $encrypted = $message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n\n        let encryptedData = this.parseEncrypted($encrypted),\n            deviceId = this.get('device_id'),\n            ownPreKeysArr =  encryptedData.keys.filter(preKey => preKey.deviceId == deviceId),\n            ownPreKey = ownPreKeysArr[0];\n        if (!ownPreKey)\n            return null;\n        let peer = this.getPeer(from_jid),\n            exportedKey;\n        try {\n            exportedKey = await peer.decrypt(encryptedData.sid, ownPreKey.ciphertext, ownPreKey.preKey);\n        }\n        catch (e) {\n            throw e;\n        }\n        if (!exportedKey)\n            return;\n        let exportedMasterKey = exportedKey.slice(0, 32),\n            HMACData = exportedKey.slice(32);\n\n        return utils.AES.decrypt(exportedMasterKey, HMACData, encryptedData.payload);\n    },\n\n    toBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    publish: function (spk, ik, pks, callback) {\n        if (!this.account.connection)\n            return;\n        let conn_omemo = this.account.getConnectionForIQ().omemo,\n            prekeys = [];\n        pks.forEach((pk) => {\n            let id = pk.keyId,\n                pubKey = utils.ArrayBuffertoBase64(pk.keyPair.pubKey),\n                privKey = utils.ArrayBuffertoBase64(pk.keyPair.privKey),\n                key = JSON.stringify({pubKey, privKey});\n            if (!pk.signature) {\n                prekeys.push({id: id, key: pubKey});\n                this.prekeys.put({id, key});\n            }\n        });\n        conn_omemo.configNode(() => {\n            conn_omemo.publishBundle({\n                spk: {id: spk.keyId, key: utils.ArrayBuffertoBase64(spk.keyPair.pubKey)},\n                spks: utils.ArrayBuffertoBase64(spk.signature),\n                ik:  utils.ArrayBuffertoBase64(ik),\n                pks: prekeys,\n                device_id: this.get('device_id')\n            }, callback);\n        });\n    },\n\n    removePreKey: async function (id) {\n        if (!this.account)\n            return;\n        let bundle = this.bundle,\n            removed_pk = this.bundle.preKeys.find(p => p && p.keyId === id && !p.signature);\n        if (!removed_pk)\n            return;\n        let pubKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.privKey),\n            key = JSON.stringify({pubKey, privKey}),\n            idx = this.bundle.preKeys.indexOf(removed_pk);\n        bundle.preKeys.splice(idx, 1);\n        this.own_used_prekeys.put({id, key});\n        this.prekeys.remove(id);\n\n        let prekeys_id_list = Object.keys(this.prekeys.getAll()),\n            prekeys_length = prekeys_id_list.length;\n\n        if (prekeys_length && prekeys_length < constants.MIN_PREKEYS_COUNT) {\n            let missing_keys = constants.PREKEYS_COUNT - prekeys_length,\n                last_id,\n                counter = 0,\n                used_last_id = 0;\n\n            last_id = Number(prekeys_id_list[prekeys_length - 1]);\n            if (last_id === NaN)\n                xabber.error('last_id is NaN!')\n\n            if (!_.isEmpty(this.own_used_prekeys.getAll())){\n                let used_prekeys_id_list = Object.keys(this.own_used_prekeys.getAll());\n\n                used_last_id = used_prekeys_id_list[used_prekeys_id_list.length - 1];\n                used_last_id = Number(used_last_id);\n\n                if (used_last_id && (used_last_id > last_id)){\n                    last_id = used_last_id;\n                }\n            }\n            for (let i = ++last_id; i < (last_id + missing_keys); i++){\n                xabber.error(i);\n                await this.bundle.generatePreKey(i).then((prekey) => {\n                    bundle.preKeys.push(prekey);\n                    counter++;\n                    if (counter === missing_keys)\n                        this.account.omemo.publishBundle();\n                });\n            }\n            if (missing_keys === 0)\n                this.account.omemo.publishBundle();\n        }\n        else\n            this.account.omemo.publishBundle();\n    },\n\n    cacheSession: function (attrs) {\n        let id = attrs.id,\n            session = attrs.rec,\n            sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        sessions[id] = session;\n        this.save('sessions', sessions);\n    },\n\n    removeSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        delete sessions[id];\n        this.save('sessions', sessions);\n    },\n\n    getSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        return sessions[id];\n    },\n\n    publishBundle: async function (device_attrs) {\n        if (!this.bundle)\n            return;\n        let spk = this.bundle.preKeys.find(pk => pk.signature),\n            ik = await this.store.getIdentityKeyPair(),\n            pks = this.bundle.preKeys;\n        xabber.error(pks);\n        if (!spk || !ik) {\n            this.set('resend_bundle', true);\n            this.set('device_attrs', device_attrs);\n            return;\n        }\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (device_attrs){\n                device_attrs.omemo.publishDevice(device_attrs.device_id, device_attrs.label);\n            }\n        });\n        this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.account.get('jid'), id: this.get('device_id')}, (res) => {\n            this.publish(spk, ik.pubKey, pks, () => {\n                dfd.resolve();\n            });\n        }, (err) => {\n            if (($(err).find('error').attr('code') == 404)){\n                this.account.getConnectionForIQ().omemo.createBundleNode(() => {\n                    this.publish(spk, ik.pubKey, pks, () => {\n                        dfd.resolve();\n                    });\n                });\n            }\n        });\n    },\n\n    onOwnDevicesUpdated: async function () {\n        return new Promise((resolve, reject) => {\n            let conn = this.account.getConnectionForIQ();\n            if (conn && conn.omemo && conn.omemo.devices) {\n                for (let d in this.own_devices) {\n                    if (!conn.omemo.devices[d]) {\n                        this.account.omemo.removeSession('session' + this.own_devices[d].address.toString());\n                        delete this.own_devices[d];\n                    }\n                }\n                let counter = Object.keys(conn.omemo.devices).length;\n                for (let device_id in conn.omemo.devices) {\n                    if (!this.own_devices[device_id])\n                        this.own_devices[device_id] = new xabber.Device({\n                            jid: this.account.get('jid'),\n                            id: device_id\n                        }, {account: this.account, store: this.store});\n                    let device = this.own_devices[device_id],\n                        label = conn.omemo.devices[device_id].label;\n                    if (!device.get('ik')) {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && resolve();\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            let fingerprint = device.generateFingerprint();\n                            if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                                device.set('fingerprint', fingerprint);\n                            counter--;\n                            !counter && resolve();\n                        }).catch(() => {\n                            counter--;\n                            !counter && resolve();\n                        });\n                    } else if (!device.get('fingerprint')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        counter--;\n                        !counter && resolve();\n                    } else {\n                        counter--;\n                        !counter && resolve();\n                    }\n                    label && device.set('label', label);\n                }\n            }\n        });\n    }\n});\n\nxabber.DecryptedMessages = Backbone.ModelWithStorage.extend({\n    defaults: {\n        messages: {}\n    },\n\n    getMessage: function (contact, stanza_id) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages[stanza_id];\n    },\n\n    getMessages: function (contact) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages;\n    },\n\n    putMessage: function (contact, stanza_id, message) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        contact_messages[stanza_id] = message;\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    removeMessage: function (attrs, contact) {\n        let origin_id = attrs.origin_id;\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        delete contact_messages[origin_id];\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    updateMessage: function (attrs, contact) {\n        let stanza_id = attrs.stanza_id,\n            origin_id = attrs.origin_id,\n            messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {},\n            message = contact_messages[origin_id];\n        if (origin_id)\n            this.removeMessage({origin_id}, contact);\n        if (stanza_id)\n            this.putMessage(contact, stanza_id, message);\n    }\n});\n\nxabber.SignalProtocolStore = Backbone.Model.extend({\n    initialize: function () {\n        this.Direction = {\n            SENDING: 1,\n            RECEIVING: 2\n        };\n        this.store = {};\n    },\n\n    getIdentityKeyPair: function () {\n        return Promise.resolve(this.get('identityKey'));\n    },\n\n    getLocalRegistrationId: function () {\n        return Promise.resolve(this.get('registrationId'));\n    },\n\n    put: function (key, value) {\n        if (key === undefined || value === undefined || key === null || value === null)\n            throw new Error(\"Tried to store undefined/null\");\n        this.store[key] = value;\n    },\n\n    get: function (key, defaultValue) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to get value for undefined/null key\");\n        if (key in this.store) {\n            return this.store[key];\n        } else {\n            return defaultValue;\n        }\n    },\n\n    remove: function (key) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to remove value for undefined/null key\");\n        delete this.store[key];\n    },\n\n    isTrustedIdentity: function (identifier, identityKey, direction) {\n        if (identifier === null || identifier === undefined) {\n            throw new Error(\"tried to check identity key for undefined/null key\");\n        }\n        if (!(identityKey instanceof ArrayBuffer)) {\n            throw new Error(\"Expected identityKey to be an ArrayBuffer\");\n        }\n        let trusted = this.get('identityKey' + identifier);\n        if (trusted === undefined) {\n            return Promise.resolve(true);\n        }\n        return Promise.resolve(util.toString(identityKey) === util.toString(trusted));\n    },\n\n    loadIdentityKey: function (identifier) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to get identity key for undefined/null key\");\n        return Promise.resolve(this.get('identityKey' + identifier));\n    },\n\n    saveIdentity: function (identifier, identityKey) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to put identity key for undefined/null key\");\n\n        let address = new SignalProtocolAddress.fromString(identifier);\n\n        let existing = this.get('identityKey' + address.getName());\n        this.put('identityKey' + address.getName(), identityKey);\n\n        if (existing && libsignal.toString(identityKey) !== libsignal.toString(existing)) {\n            return Promise.resolve(true);\n        } else {\n            return Promise.resolve(false);\n        }\n\n    },\n\n    /* Returns a prekeypair object or undefined */\n    loadPreKey: function (keyId) {\n        let res = this.get('25519KeypreKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storePreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeypreKey' + keyId, keyPair));\n    },\n\n    removePreKey: function (keyId) {\n        this.trigger('prekey_removed', keyId);\n        // return Promise.resolve(this.remove('25519KeypreKey' + keyId));\n    },\n\n    /* Returns a signed keypair object or undefined */\n    loadSignedPreKey: function (keyId) {\n        let res = this.get('25519KeysignedKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storeSignedPreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeysignedKey' + keyId, keyPair));\n    },\n\n    removeSignedPreKey: function (keyId) {\n        return Promise.resolve(this.remove('25519KeysignedKey' + keyId));\n    },\n\n    loadSession: function (identifier) {\n        return Promise.resolve(this.get('session' + identifier));\n    },\n\n    hasSession: function (identifier) {\n        return !!this.get('session' + identifier)\n    },\n\n    storeSession: function (identifier, record) {\n        this.trigger('session_stored', {id: 'session' + identifier, rec: record});\n        return Promise.resolve(this.put('session' + identifier, record));\n    },\n\n    removeSession: function (identifier) {\n        return Promise.resolve(this.remove('session' + identifier));\n    },\n\n    getAllSessions: function (identifier) {\n        let sessions = [];\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                sessions.push({id: id, session: this.store[id]});\n            }\n        }\n        return Promise.resolve(sessions);\n    },\n\n    removeAllSessions: function (identifier) {\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                delete this.store[id];\n            }\n        }\n        return Promise.resolve();\n    }\n});\n\nxabber.OMEMOEnablePlaceholder = xabber.BasicView.extend({\n    className: 'omemo-enable-placeholder',\n\n    events: {\n        'click .btn-enable': 'enableOmemo',\n        'click .btn-escape': 'closeOmemoPlaceholder'\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.updateColorScheme();\n        this.$el.html(templates.omemo_enable({jid: this.account.get('jid')}));\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.account.session.on(\"change:connected\", this.updateConnected, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.account.settings.on(\"change:omemo\", this.onOmemoChange, this);\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onUpdatedScreen: function () {\n        if (!this.account.omemo_enable_placeholder || this.account.omemo_enable_placeholder.cid !== this.cid)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    updateConnected: function () {\n        if (!this.account.isConnected())\n            this.close();\n    },\n\n    enableOmemo: function () {\n        this.account.settings.save('omemo', true);\n        this.close();\n        this.account.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.account.omemo.onConnected();\n        }, 2000);\n    },\n\n    closeOmemoPlaceholder: function () {\n        this.account.settings.save('omemo', false);\n        this.close();\n    },\n\n    onOmemoChange: function () {\n        if (this.account.settings.get('omemo'))\n            this.close();\n    },\n\n    close: function () {\n        this.trigger('remove') && this.remove();\n        this.account.omemo_enable_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo = new xabber.Omemo({id: 'omemo'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.get('jid'),\n        fetch: 'before'\n    });\n});\n\nxabber.Account.addConnPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo.onConnected();\n}, true, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nimport views from \"xabber-views\";\nimport api_service from \"xabber-api-service\";\nimport strophe from \"xabber-strophe\";\nimport vcard from \"xabber-vcard\";\nimport accounts from \"xabber-accounts\";\nimport discovery from \"xabber-discovery\";\nimport contacts from \"xabber-contacts\";\nimport chats from \"xabber-chats\";\nimport searching from \"xabber-searching\";\nimport mentions from \"xabber-mentions\";\nimport ui from \"xabber-ui\";\nimport omemo from \"xabber-omemo\";\n\nxabber.extendWith(views, api_service, strophe, vcard,\n    accounts, discovery, contacts, chats, searching, mentions, ui, omemo);\nglobal.xabber = xabber;\n\nexport default xabber;\n","var map = {\n\t\"./accounts/emojis.json\": 85304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 92444;","var map = {\n\t\"./accounts/account_settings_modal.html\": 59166,\n\t\"./accounts/add_account.html\": 24109,\n\t\"./accounts/audio_file_waveform.html\": 56949,\n\t\"./accounts/avatars_gallery.html\": 47837,\n\t\"./accounts/change_account_password.html\": 15415,\n\t\"./accounts/change_password.html\": 34999,\n\t\"./accounts/change_status.html\": 33999,\n\t\"./accounts/current_token_item_modal.html\": 5766,\n\t\"./accounts/delete_files_media_gallery.html\": 72971,\n\t\"./accounts/emoji_panel.html\": 90231,\n\t\"./accounts/emoji_picker.html\": 25482,\n\t\"./accounts/emoji_picker_tabs.html\": 20458,\n\t\"./accounts/existing_groupchat_item.html\": 4870,\n\t\"./accounts/global_settings_item_modal.html\": 56001,\n\t\"./accounts/media_gallery_account.html\": 57872,\n\t\"./accounts/media_gallery_account_file.html\": 39440,\n\t\"./accounts/resource.html\": 75216,\n\t\"./accounts/resource_right.html\": 255,\n\t\"./accounts/single_account_settings_modal.html\": 86572,\n\t\"./accounts/status_message_input_widget.html\": 71326,\n\t\"./accounts/token_item_modal.html\": 84377,\n\t\"./accounts/toolbar_item.html\": 54810,\n\t\"./accounts/unregister_account.html\": 49485,\n\t\"./accounts/webcam_panel.html\": 92797,\n\t\"./accounts/xmpp_login.html\": 64630,\n\t\"./base/about.html\": 99288,\n\t\"./base/backgrounds_gallery.html\": 77428,\n\t\"./base/color_picker.html\": 51462,\n\t\"./base/color_scheme.html\": 83430,\n\t\"./base/dialog.html\": 62985,\n\t\"./base/fingerprint_devices_item.html\": 16969,\n\t\"./base/fingerprint_item.html\": 75551,\n\t\"./base/fingerprints.html\": 5822,\n\t\"./base/fingerprints_devices.html\": 26376,\n\t\"./base/input_widget.html\": 10596,\n\t\"./base/jingle_message_calling.html\": 62077,\n\t\"./base/omemo_enable.html\": 17661,\n\t\"./base/plyr_player_popup.html\": 14197,\n\t\"./base/setting_emoji_font_radio_input.html\": 73122,\n\t\"./base/setting_language_radio_input.html\": 49707,\n\t\"./base/setting_radio_input.html\": 94944,\n\t\"./base/settings.html\": 15887,\n\t\"./base/settings_modal.html\": 81012,\n\t\"./base/toolbar.html\": 45459,\n\t\"./chats/add_chat_account_item.html\": 56468,\n\t\"./chats/chat_bottom.html\": 74335,\n\t\"./chats/chat_content.html\": 10224,\n\t\"./chats/chat_content_contact.html\": 9031,\n\t\"./chats/chat_content_placeholder.html\": 36209,\n\t\"./chats/chat_head.html\": 29317,\n\t\"./chats/chat_item.html\": 95370,\n\t\"./chats/chat_placeholder.html\": 5696,\n\t\"./chats/chats_panel.html\": 80026,\n\t\"./chats/checkbox.html\": 40433,\n\t\"./chats/content_encryption_warning.html\": 96249,\n\t\"./chats/encryption_warning.html\": 53318,\n\t\"./chats/forward_panel.html\": 83176,\n\t\"./chats/group_chats/add_group_chat.html\": 23118,\n\t\"./chats/group_chats/invitation_panel_view.html\": 1015,\n\t\"./chats/group_chats/mention_item.html\": 79011,\n\t\"./chats/group_chats/pinned_message_panel.html\": 68096,\n\t\"./chats/location_popup.html\": 21732,\n\t\"./chats/message_item.html\": 59170,\n\t\"./chats/messages/attached_file.html\": 97042,\n\t\"./chats/messages/audio_file.html\": 94382,\n\t\"./chats/messages/audio_file_waveform.html\": 74211,\n\t\"./chats/messages/auth_request.html\": 63576,\n\t\"./chats/messages/file.html\": 89256,\n\t\"./chats/messages/file_loading.html\": 83034,\n\t\"./chats/messages/file_upload.html\": 46311,\n\t\"./chats/messages/forwarded.html\": 19038,\n\t\"./chats/messages/group_request.html\": 29794,\n\t\"./chats/messages/hidden-template-for-2.html\": 15867,\n\t\"./chats/messages/hidden-template-for-3.html\": 87486,\n\t\"./chats/messages/hidden-template-for-4.html\": 19761,\n\t\"./chats/messages/hidden-template-for-5.html\": 20365,\n\t\"./chats/messages/hidden-template-for-6.html\": 57344,\n\t\"./chats/messages/images_details.html\": 13786,\n\t\"./chats/messages/link_reference.html\": 59840,\n\t\"./chats/messages/link_reference_chat.html\": 39475,\n\t\"./chats/messages/loading_circle.html\": 54301,\n\t\"./chats/messages/location.html\": 55127,\n\t\"./chats/messages/main.html\": 76510,\n\t\"./chats/messages/saved_main.html\": 18479,\n\t\"./chats/messages/searched.html\": 83228,\n\t\"./chats/messages/system.html\": 85046,\n\t\"./chats/messages/template-for-2.html\": 2861,\n\t\"./chats/messages/template-for-3.html\": 70423,\n\t\"./chats/messages/template-for-4.html\": 90719,\n\t\"./chats/messages/template-for-5.html\": 39125,\n\t\"./chats/messages/template-for-6.html\": 20129,\n\t\"./chats/messages/video.html\": 87795,\n\t\"./chats/messages/voice_message.html\": 43795,\n\t\"./chats/saved_chat_head.html\": 21385,\n\t\"./chats/send_media.html\": 34054,\n\t\"./chats/subscription_buttons.html\": 47725,\n\t\"./chats/unread_marker.html\": 98875,\n\t\"./contacts/account_roster_left.html\": 69006,\n\t\"./contacts/account_roster_right.html\": 23643,\n\t\"./contacts/add_contact.html\": 24718,\n\t\"./contacts/add_contact_account_item.html\": 31238,\n\t\"./contacts/audio_file_waveform.html\": 49820,\n\t\"./contacts/contact_blocked_item.html\": 73253,\n\t\"./contacts/contact_details_right.html\": 38624,\n\t\"./contacts/contact_left_item.html\": 24958,\n\t\"./contacts/contact_placeholder.html\": 19768,\n\t\"./contacts/contact_right_item.html\": 72055,\n\t\"./contacts/edit_contact.html\": 45078,\n\t\"./contacts/edit_group.html\": 4679,\n\t\"./contacts/group_chats/add_blocked_participant_form.html\": 37639,\n\t\"./contacts/group_chats/badge_edit_view.html\": 11868,\n\t\"./contacts/group_chats/default_restrictions.html\": 87004,\n\t\"./contacts/group_chats/default_restrictions_right.html\": 59115,\n\t\"./contacts/group_chats/description_input_widget.html\": 49080,\n\t\"./contacts/group_chats/file_item.html\": 79481,\n\t\"./contacts/group_chats/group_chat_details.html\": 69426,\n\t\"./contacts/group_chats/group_chat_details_right.html\": 18939,\n\t\"./contacts/group_chats/group_chat_properties.html\": 15159,\n\t\"./contacts/group_chats/group_chat_properties_edit.html\": 20904,\n\t\"./contacts/group_chats/group_chat_properties_right.html\": 69849,\n\t\"./contacts/group_chats/group_member_item.html\": 38114,\n\t\"./contacts/group_chats/group_member_item_right.html\": 53119,\n\t\"./contacts/group_chats/group_name_input_widget.html\": 82703,\n\t\"./contacts/group_chats/group_status.html\": 70569,\n\t\"./contacts/group_chats/group_status_right.html\": 27157,\n\t\"./contacts/group_chats/invitation.html\": 53464,\n\t\"./contacts/group_chats/invited_member_item.html\": 87824,\n\t\"./contacts/group_chats/participant_badge_input_widget.html\": 84939,\n\t\"./contacts/group_chats/participant_details_item.html\": 66493,\n\t\"./contacts/group_chats/participant_details_item_right.html\": 83326,\n\t\"./contacts/group_chats/participant_details_right.html\": 1593,\n\t\"./contacts/group_chats/participant_rights.html\": 76252,\n\t\"./contacts/group_chats/participants.html\": 93172,\n\t\"./contacts/group_chats/participants_right_panel.html\": 19295,\n\t\"./contacts/group_chats/pinned_message.html\": 54630,\n\t\"./contacts/group_chats/private_participant_details.html\": 15369,\n\t\"./contacts/group_chats/private_participant_details_item_right.html\": 79983,\n\t\"./contacts/group_chats/restriction_item.html\": 87050,\n\t\"./contacts/group_chats/right_expire_variants.html\": 54338,\n\t\"./contacts/group_chats/set_status.html\": 67065,\n\t\"./contacts/group_chats/status_item.html\": 27893,\n\t\"./contacts/group_left.html\": 57973,\n\t\"./contacts/group_right.html\": 95561,\n\t\"./contacts/group_settings.html\": 21612,\n\t\"./contacts/groups.html\": 62605,\n\t\"./contacts/groups_checkbox_list.html\": 54515,\n\t\"./contacts/groups_checkbox_list_contact.html\": 52661,\n\t\"./contacts/groups_list.html\": 58114,\n\t\"./contacts/groups_new_group.html\": 57713,\n\t\"./contacts/media_item.html\": 17905,\n\t\"./contacts/media_items_empty.html\": 23546,\n\t\"./contacts/preloader.html\": 4142,\n\t\"./contacts/roster_left.html\": 50869,\n\t\"./contacts/roster_right.html\": 22136,\n\t\"./contacts/roster_settings.html\": 54186,\n\t\"./mentions/mention_item.html\": 19253,\n\t\"./mentions/mentions_panel.html\": 50291,\n\t\"./mentions/mentions_placeholder.html\": 20103,\n\t\"./searching/existing_groupchat_details_view.html\": 31897,\n\t\"./searching/existing_groupchat_item.html\": 71655,\n\t\"./searching/searching_account_item.html\": 3103,\n\t\"./searching/searching_wide.html\": 43143,\n\t\"./svg/account-cancel.html\": 53283,\n\t\"./svg/account-outline.html\": 20865,\n\t\"./svg/account.html\": 32721,\n\t\"./svg/address-outline.html\": 66656,\n\t\"./svg/address.html\": 94429,\n\t\"./svg/alarm-bell.html\": 47158,\n\t\"./svg/alert-circle.html\": 55133,\n\t\"./svg/bell-off.html\": 14759,\n\t\"./svg/bell-sleep.html\": 11713,\n\t\"./svg/bell.html\": 55155,\n\t\"./svg/birthday-outline.html\": 23977,\n\t\"./svg/birthday.html\": 74741,\n\t\"./svg/blocked-add.html\": 89768,\n\t\"./svg/blocked.html\": 33574,\n\t\"./svg/bot-variant.html\": 94862,\n\t\"./svg/bot.html\": 29568,\n\t\"./svg/bug.html\": 89965,\n\t\"./svg/call-outline.html\": 16938,\n\t\"./svg/call.html\": 9530,\n\t\"./svg/camera-retake.html\": 25430,\n\t\"./svg/camera.html\": 26716,\n\t\"./svg/cancel.html\": 80595,\n\t\"./svg/channel.html\": 40203,\n\t\"./svg/chat.html\": 71714,\n\t\"./svg/check-circle.html\": 62633,\n\t\"./svg/check.html\": 26446,\n\t\"./svg/chevron-down.html\": 79353,\n\t\"./svg/chevron-left-variant.html\": 32011,\n\t\"./svg/chevron-right-variant.html\": 19297,\n\t\"./svg/circle-slice-1.html\": 45013,\n\t\"./svg/circle-slice-2.html\": 15460,\n\t\"./svg/circle-slice-3.html\": 56377,\n\t\"./svg/circle-slice-4.html\": 63363,\n\t\"./svg/circle-slice-5.html\": 53161,\n\t\"./svg/circle-slice-6.html\": 90100,\n\t\"./svg/circle-slice-7.html\": 47263,\n\t\"./svg/circle-slice-8.html\": 16472,\n\t\"./svg/circles-outline.html\": 47033,\n\t\"./svg/circles.html\": 61265,\n\t\"./svg/client-outline.html\": 52773,\n\t\"./svg/client.html\": 6625,\n\t\"./svg/clock-outline.html\": 93813,\n\t\"./svg/close.html\": 70874,\n\t\"./svg/cloud.html\": 55696,\n\t\"./svg/contact-add.html\": 63272,\n\t\"./svg/crosshairs-gps.html\": 57197,\n\t\"./svg/crosshairs-question.html\": 40765,\n\t\"./svg/crosshairs.html\": 82823,\n\t\"./svg/database-lock.html\": 17338,\n\t\"./svg/database.html\": 41473,\n\t\"./svg/description-outline.html\": 23373,\n\t\"./svg/description.html\": 63993,\n\t\"./svg/device-cellphone.html\": 79824,\n\t\"./svg/device-console.html\": 32111,\n\t\"./svg/device-desktop.html\": 5772,\n\t\"./svg/device-tablet.html\": 18955,\n\t\"./svg/device-web.html\": 16919,\n\t\"./svg/devices.html\": 50832,\n\t\"./svg/download.html\": 58712,\n\t\"./svg/edit-outline.html\": 96840,\n\t\"./svg/edit.html\": 22845,\n\t\"./svg/email-outline.html\": 66206,\n\t\"./svg/email.html\": 22505,\n\t\"./svg/expires.html\": 21321,\n\t\"./svg/file-audio.html\": 3643,\n\t\"./svg/file-document.html\": 88700,\n\t\"./svg/file-pdf.html\": 3468,\n\t\"./svg/file-presentation.html\": 34417,\n\t\"./svg/file-video.html\": 98587,\n\t\"./svg/file-zip.html\": 89193,\n\t\"./svg/file.html\": 34058,\n\t\"./svg/fullname-outline.html\": 16109,\n\t\"./svg/fullname.html\": 12784,\n\t\"./svg/group-incognito.html\": 49703,\n\t\"./svg/group-invite.html\": 89411,\n\t\"./svg/group-private.html\": 81044,\n\t\"./svg/group-public.html\": 56403,\n\t\"./svg/history.html\": 35726,\n\t\"./svg/ic-at.html\": 81363,\n\t\"./svg/ic-jabber.html\": 9140,\n\t\"./svg/ic-searching.html\": 46476,\n\t\"./svg/id-outline.html\": 19324,\n\t\"./svg/id.html\": 50807,\n\t\"./svg/image.html\": 90226,\n\t\"./svg/index.html\": 2612,\n\t\"./svg/information-outline.html\": 52973,\n\t\"./svg/information.html\": 66035,\n\t\"./svg/invite-outline.html\": 34289,\n\t\"./svg/invite.html\": 75917,\n\t\"./svg/job-outline.html\": 31802,\n\t\"./svg/job.html\": 97579,\n\t\"./svg/key-variant.html\": 76499,\n\t\"./svg/key.html\": 46753,\n\t\"./svg/link.html\": 16205,\n\t\"./svg/lock-alert.html\": 63234,\n\t\"./svg/lock-check.html\": 14833,\n\t\"./svg/lock-cross.html\": 8513,\n\t\"./svg/lock-open.html\": 1652,\n\t\"./svg/lock-question.html\": 67160,\n\t\"./svg/lock.html\": 6258,\n\t\"./svg/map-marker-outline.html\": 83740,\n\t\"./svg/map-marker.html\": 70776,\n\t\"./svg/membership-outline.html\": 8872,\n\t\"./svg/message-bookmark-outline.html\": 6278,\n\t\"./svg/message-group.html\": 35529,\n\t\"./svg/minus.html\": 79092,\n\t\"./svg/mobile.html\": 33767,\n\t\"./svg/palette.html\": 43710,\n\t\"./svg/pause.html\": 58080,\n\t\"./svg/picture-in-picture-bottom-right.html\": 91421,\n\t\"./svg/picture-in-picture-minimize.html\": 42173,\n\t\"./svg/picture-in-picture-top-right.html\": 74578,\n\t\"./svg/pinned-circle-small.html\": 54052,\n\t\"./svg/pinned.html\": 9443,\n\t\"./svg/play.html\": 43069,\n\t\"./svg/player-float.html\": 30030,\n\t\"./svg/player-full.html\": 60259,\n\t\"./svg/player-mini-variant.html\": 70099,\n\t\"./svg/player-mini.html\": 77531,\n\t\"./svg/plus.html\": 85123,\n\t\"./svg/plyr.html\": 10410,\n\t\"./svg/qrcode.html\": 17943,\n\t\"./svg/restrictions-outline.html\": 89701,\n\t\"./svg/rss-variant.html\": 89657,\n\t\"./svg/rss.html\": 15645,\n\t\"./svg/saved-messages.html\": 11797,\n\t\"./svg/search.html\": 11146,\n\t\"./svg/security.html\": 91467,\n\t\"./svg/server.html\": 71188,\n\t\"./svg/star-face.html\": 1866,\n\t\"./svg/status-outline.html\": 52555,\n\t\"./svg/status.html\": 5000,\n\t\"./svg/subscription-from.html\": 5414,\n\t\"./svg/subscription-to.html\": 8020,\n\t\"./svg/task.html\": 41835,\n\t\"./svg/translate.html\": 98431,\n\t\"./svg/trash.html\": 61686,\n\t\"./svg/video.html\": 98070,\n\t\"./svg/volume-high.html\": 87658,\n\t\"./svg/volume-off-variant.html\": 7962,\n\t\"./svg/volume-off.html\": 14032,\n\t\"./svg/web-cancel.html\": 26330,\n\t\"./svg/web.html\": 7094,\n\t\"./svg/xabber-offline.html\": 50033,\n\t\"./svg/xabber-online.html\": 74922,\n\t\"./svg/xmpp.html\": 92052,\n\t\"./vcard/vcard.html\": 73889,\n\t\"./vcard/vcard_edit_modal.html\": 43918,\n\t\"./vcard/vcard_modal.html\": 59265,\n\t\"./vcard/vcard_right.html\": 93047\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 89293;","let client_translation_progress = {\"en\":100,\"ar\":25,\"az\":2,\"be\":12,\"bg\":58,\"bs\":0,\"ca\":23,\"cs\":99,\"cy\":0,\"da\":0,\"de\":44,\"el\":27,\"es-ES\":31,\"es-latin\":61,\"et\":0,\"fa\":4,\"fi\":9,\"fil\":13,\"fr\":32,\"ga-IE\":0,\"he\":19,\"hi\":0,\"hr\":0,\"hu\":13,\"hy-AM\":8,\"id\":99,\"is\":0,\"it\":64,\"ja\":18,\"ka\":0,\"kmr\":0,\"ko\":1,\"ku\":2,\"ky\":5,\"la-LA\":0,\"lb\":0,\"lt\":3,\"me\":0,\"mk\":0,\"mn\":0,\"mr\":0,\"ms\":6,\"nb\":19,\"ne-NP\":0,\"nl\":18,\"no\":0,\"oc\":12,\"pa-IN\":0,\"pl\":59,\"pt-BR\":63,\"pt-PT\":13,\"qya-AA\":0,\"ro\":15,\"ru\":62,\"sat\":1,\"sco\":0,\"si-LK\":33,\"sk\":18,\"sl\":25,\"sq\":3,\"sr\":12,\"sr-Cyrl-ME\":0,\"sv-SE\":34,\"sw\":1,\"ta\":1,\"te\":0,\"tg\":0,\"tk\":0,\"tlh-AA\":0,\"tr\":62,\"uk\":25,\"uz\":0,\"vi\":12,\"yo\":0,\"zh-CN\":99,\"zh-TW\":10,\"zu\":0}; typeof define === \"function\" && define(() => { return client_translation_progress;});","var map = {\n\t\"./ar-rSA.js\": [\n\t\t53591,\n\t\t5629\n\t],\n\t\"./az-rAZ.js\": [\n\t\t81101,\n\t\t1101\n\t],\n\t\"./be-rBY.js\": [\n\t\t86953,\n\t\t6953\n\t],\n\t\"./bg-rBG.js\": [\n\t\t41428,\n\t\t1428\n\t],\n\t\"./bs-rBA.js\": [\n\t\t76101,\n\t\t6101\n\t],\n\t\"./ca-rES.js\": [\n\t\t80049,\n\t\t49\n\t],\n\t\"./cs-rCZ.js\": [\n\t\t30011,\n\t\t11\n\t],\n\t\"./cy-rGB.js\": [\n\t\t98146,\n\t\t8146\n\t],\n\t\"./da-rDK.js\": [\n\t\t22348,\n\t\t2348\n\t],\n\t\"./de-rDE.js\": [\n\t\t78961,\n\t\t8961\n\t],\n\t\"./el-rGR.js\": [\n\t\t292,\n\t\t292\n\t],\n\t\"./en.js\": [\n\t\t53832,\n\t\t3832\n\t],\n\t\"./es-rES.js\": [\n\t\t85895,\n\t\t5895\n\t],\n\t\"./es419.js\": [\n\t\t93575,\n\t\t3575\n\t],\n\t\"./et-rEE.js\": [\n\t\t14103,\n\t\t4103\n\t],\n\t\"./fa-rIR.js\": [\n\t\t15729,\n\t\t5729\n\t],\n\t\"./fi-rFI.js\": [\n\t\t35069,\n\t\t5069\n\t],\n\t\"./fil-rPH.js\": [\n\t\t43250,\n\t\t3250\n\t],\n\t\"./fr-rFR.js\": [\n\t\t52716,\n\t\t2716\n\t],\n\t\"./ga-rIE.js\": [\n\t\t17872,\n\t\t7872\n\t],\n\t\"./hi-rIN.js\": [\n\t\t11361,\n\t\t1361\n\t],\n\t\"./hr-rHR.js\": [\n\t\t42324,\n\t\t2324\n\t],\n\t\"./hu-rHU.js\": [\n\t\t70833,\n\t\t833\n\t],\n\t\"./hy-rAM.js\": [\n\t\t63000,\n\t\t3000\n\t],\n\t\"./in-rID.js\": [\n\t\t31879,\n\t\t1879\n\t],\n\t\"./is-rIS.js\": [\n\t\t55298,\n\t\t5298\n\t],\n\t\"./it-rIT.js\": [\n\t\t8182,\n\t\t8182\n\t],\n\t\"./iw-rIL.js\": [\n\t\t5945,\n\t\t5945\n\t],\n\t\"./ja-rJP.js\": [\n\t\t91587,\n\t\t1587\n\t],\n\t\"./ka-rGE.js\": [\n\t\t21337,\n\t\t1337\n\t],\n\t\"./kmr-rTR.js\": [\n\t\t57057,\n\t\t7057\n\t],\n\t\"./ko-rKR.js\": [\n\t\t88756,\n\t\t8756\n\t],\n\t\"./ku-rTR.js\": [\n\t\t33678,\n\t\t3678\n\t],\n\t\"./ky-rKG.js\": [\n\t\t28404,\n\t\t8404\n\t],\n\t\"./la-rLA.js\": [\n\t\t27089,\n\t\t7089\n\t],\n\t\"./lb-rLU.js\": [\n\t\t85752,\n\t\t5752\n\t],\n\t\"./lt-rLT.js\": [\n\t\t23097,\n\t\t3097\n\t],\n\t\"./me-rME.js\": [\n\t\t59023,\n\t\t9023\n\t],\n\t\"./mk-rMK.js\": [\n\t\t52499,\n\t\t2499\n\t],\n\t\"./mn-rMN.js\": [\n\t\t68721,\n\t\t8721\n\t],\n\t\"./mr-rIN.js\": [\n\t\t33591,\n\t\t3591\n\t],\n\t\"./ms-rMY.js\": [\n\t\t10922,\n\t\t922\n\t],\n\t\"./nb-rNO.js\": [\n\t\t54778,\n\t\t4778\n\t],\n\t\"./ne-rNP.js\": [\n\t\t4463,\n\t\t4463\n\t],\n\t\"./nl-rNL.js\": [\n\t\t36447,\n\t\t6447\n\t],\n\t\"./no-rNO.js\": [\n\t\t16813,\n\t\t6813\n\t],\n\t\"./oc-rFR.js\": [\n\t\t76102,\n\t\t6102\n\t],\n\t\"./pa-rIN.js\": [\n\t\t49081,\n\t\t9081\n\t],\n\t\"./pl-rPL.js\": [\n\t\t60419,\n\t\t419\n\t],\n\t\"./pt-rBR.js\": [\n\t\t9226,\n\t\t9226\n\t],\n\t\"./pt-rPT.js\": [\n\t\t10201,\n\t\t201\n\t],\n\t\"./qya-rAA.js\": [\n\t\t39460,\n\t\t9460\n\t],\n\t\"./ro-rRO.js\": [\n\t\t16292,\n\t\t6292\n\t],\n\t\"./ru-rRU.js\": [\n\t\t74391,\n\t\t4391\n\t],\n\t\"./sat-rIN.js\": [\n\t\t1905,\n\t\t1905\n\t],\n\t\"./sco-rGB.js\": [\n\t\t52323,\n\t\t2323\n\t],\n\t\"./si-rLK.js\": [\n\t\t79773,\n\t\t9773\n\t],\n\t\"./sk-rSK.js\": [\n\t\t51874,\n\t\t1874\n\t],\n\t\"./sl-rSI.js\": [\n\t\t97658,\n\t\t7658\n\t],\n\t\"./sq-rAL.js\": [\n\t\t80596,\n\t\t596\n\t],\n\t\"./sr-rCyrl-rME.js\": [\n\t\t33343,\n\t\t3343\n\t],\n\t\"./sr-rSP.js\": [\n\t\t75384,\n\t\t5384\n\t],\n\t\"./sv-rSE.js\": [\n\t\t50608,\n\t\t608\n\t],\n\t\"./sw-rKE.js\": [\n\t\t6802,\n\t\t6802\n\t],\n\t\"./ta-rIN.js\": [\n\t\t51796,\n\t\t1796\n\t],\n\t\"./te-rIN.js\": [\n\t\t49782,\n\t\t9782\n\t],\n\t\"./tg-rTJ.js\": [\n\t\t33689,\n\t\t3689\n\t],\n\t\"./tk-rTM.js\": [\n\t\t60130,\n\t\t130\n\t],\n\t\"./tlh-rAA.js\": [\n\t\t73739,\n\t\t3739\n\t],\n\t\"./tr-rTR.js\": [\n\t\t4961,\n\t\t4961\n\t],\n\t\"./translation_progress.js\": [\n\t\t23297\n\t],\n\t\"./uk-rUA.js\": [\n\t\t88109,\n\t\t8109\n\t],\n\t\"./uz-rUZ.js\": [\n\t\t96886,\n\t\t6886\n\t],\n\t\"./vi-rVN.js\": [\n\t\t37216,\n\t\t7216\n\t],\n\t\"./yo-rNG.js\": [\n\t\t97045,\n\t\t7045\n\t],\n\t\"./zh-rCN.js\": [\n\t\t16806,\n\t\t6806\n\t],\n\t\"./zh-rTW.js\": [\n\t\t58545,\n\t\t8545\n\t],\n\t\"./zu-rZA.js\": [\n\t\t58810,\n\t\t8810\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8946;\nmodule.exports = webpackAsyncContext;","define(function () { return JSON.parse(\n'{\"version_number\":\"2.3.4.91\",\"version_description\":\"added radio button checking when font is loading and settings are rerendered, fixed loading font settings rerendering when current font is system\"}'\n)});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"xabber.\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkxabber_web\"] = self[\"webpackChunkxabber_web\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [1216], () => (__webpack_require__(51008)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","constants","ASSETS_URL_PREFIX","STORAGE_NAME","STORAGE_VERSION","CONTAINER_ELEMENT","FAVICON_DEFAULT","FAVICON_DEFAULT_GREY","FAVICON_MESSAGE","BACKGROUND_IMAGE","WIDTH_MEDIUM","WIDTH_NARROW","WIDTH_TINY","LOG_LEVEL_NONE","LOG_LEVEL_ERROR","LOG_LEVEL_WARN","LOG_LEVEL_INFO","LOG_LEVEL_DEBUG","LOG_LEVEL","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_CTRL","KEY_ESCAPE","KEY_SPACE","KEY_ARROW_LEFT","KEY_ARROW_UP","KEY_ARROW_RIGHT","KEY_ARROW_DOWN","KEY_DELETE","KEY_FORWARD_SLASH","KEY_AT","VOICE_MSG_TIME","PASSWORD_DOT","String","fromCharCode","CONNECTION_URL","CONN_STATUSES","PREKEYS_COUNT","MIN_PREKEYS_COUNT","AES_KEY_LENGTH","AES_TAG_LENGTH","AES_EXTRACTABLE","BAD_CONN_STATUSES","RECONNECTION_TIMEOUTS","DOWNTIME_RECONNECTION_TIMEOUT","PING_SENDING_INTERVAL","IDLING_MINIMAL_TIMEOUT","IDLING_MAXIMUM_TIMEOUT","IDLING_DEFAULT_TIMEOUT","STATUS_WEIGHTS","chat","online","away","xa","dnd","offline","unavailable","PRESENT_INTERVAL","CHATSTATE_INTERVAL_COMPOSING_AUDIO","CHATSTATE_TIMEOUT_PAUSED","CHATSTATE_TIMEOUT_STOPPED","CHATSTATE_TIMEOUT_PAUSED_AUDIO","JINGLE_WAITING_TIME","SYNCHRONIZATION_RSM_MAX","REGISTRATION_DOMAINS","LOGIN_DOMAINS","TRUSTED_DOMAINS","RECOMMENDED_DOMAIN","REGISTRATION_BUTTON","REGISTRATION_CUSTOM_DOMAIN","LOGIN_CUSTOM_DOMAIN","TURN_SERVERS_LIST","urls","credential","username","JINGLE_MSG_PROPOSE","JINGLE_MSG_REJECT","JINGLE_MSG_ACCEPT","MSG_BLOCKED","MSG_ERROR","MSG_PENDING","MSG_SENT","MSG_DELIVERED","MSG_DISPLAYED","MSG_ARCHIVED","MSG_SAVED","RSM_ATTRIBUTES","MAM_ATTRIBUTES","GENERAL_GROUP_ID","NON_ROSTER_GROUP_ID","MATERIAL_COLORS","MAX_AVATAR_FILE_SIZE","AVATAR_PRIORITIES","VCARD_AVATAR","PUBSUB_AVATAR","EMAIL_FOR_JOIN_TRANSLATION","AVATAR_SIZES","TOOLBAR_ACCOUNT_ITEM","SETTINGS_ACCOUNT_ITEM","XABBER_ACCOUNT","SYNCHRONIZE_ACCOUNT_ITEM","MENTION_ITEM","ACCOUNT_SETTINGS_LEFT","ACCOUNT_VCARD_EDIT","ROSTER_RIGHT_ACCOUNT_ITEM","ROSTER_LEFT_ACCOUNT_ITEM","PARTICIPANT_DETAILS_ITEM","CONTACT_RIGHT_ITEM","GROUPCHAT_MEMBER_ITEM","CONTACT_LEFT_ITEM","CONTACT_BLOCKED_ITEM","CONTACT_DETAILS","GROUP_SETTINGS","CHAT_ITEM","CHAT_HEAD","CHAT_MESSAGE","CHAT_BOTTOM","XABBER_VOICE_CALL_VIEW","OMEMO_ENABLE_SETTING","SYNC_WAY_DATA","no","tip","icon","from_server","to_server","delete","off_local","off_remote","SYNCED_STATUS_DATA","off","yes","EMOJI_LIST_NAME","emoji_list","QUOTE_MARKER","MARKUP_TAGS","BLANK_VIDEO","OGG","MP4","WEBM","MIME_TYPES","image","audio","video","document","pdf","table","archive","presentation","languages","languages_another_locales","PERSONAL_AREA_URL","XABBER_ACCOUNT_URL","USE_SOCIAL_AUTH","REGISTER_XMPP_ACCOUNT","REGISTER_XMPP_ACCOUNT_URL","CHECK_VERSION","DEFAULT_LOGIN_SCREEN","GCM_SENDER_ID","GCM_API_KEY","MESSAGE_ARCHIVE_DB_NAME","STANZA_MAX_SIZE","Math","pow","BLUR_VALUE","VIGNETTING_VALUE","TRANSPARENCY_VALUE","MAIN_COLOR","CLIENT_NAME","SHORT_CLIENT_NAME","SHORT_CLIENT_DESCRIPTION","CLIENT_LOGO","TOOLBAR_LOGO","ENABLE_XABBER_ACCOUNT","SCREEN_ABOUT","BACKGROUND_IMAGES_XML_URL","BACKGROUND_PATTERNS_XML_URL","DEVELOPER_URL","CLIENT_GITHUB_URL","PROJECT_CROWDIN_URL","CLIENT_LICENSE_GITHUB_URL","DEFAULT_EMOJI_FONT","EMOJI_FONTS_LIST","notoColor","name","value","url","hint","attribution_text","order","JINGLE_MSG_STATE","MSG_STATE","MSG_VERBOSE_STATE","$","_","moment","WaveSurfer","Plyr","plyr","Quill","libsignal","slug","sha1","idleJs","opusRecorder","opusRecorderEncoderPath","xabber_i18next","xabber_i18next_sprintf","sha256","VanillaQR","magnificPopup","backgroundImagesXml","backgroundPatternsXml","Strophe","evaluate","interpolate","templates","_addTemplate","options","path","split","tpl","join","default","tpl_name","pop","res","attr","is_svg","data","html","$html","find","each","$el","this","svg_name","removeClass","addClass","svg","insertSvg","addTemplate","addSvgTemplate","addJSONTemplate","attention_json","attention","forEach","item","attention_sound","file_name","not_selectable","push","ringtones_json","ringtones","ringtone","dialtones_json","dialtones","dialtone","notifications_json","notifications","notification","system_json","system_sound_list","system_item","system","all_sounds","concat","raw_data","x","y","getEmoji","offset","lead","trail","emoji_data","emoji","emoji_regexp","prototype","emojify","emoji_size","title","replace","removeEmoji","replaceEmoji","selector","text","length","all","get","getByIndex","idx","hasher","_image_cache","COLORS","MAX_IMG_SIZE","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","Blob","type","CachedImage","window","URL","createObjectURL","getCachedImage","isString","indexOf","isObject","getAccountColor","_name","trim","color_index","floor","getImageSize","size","max_size","width","height","fn","setAvatar","image_el","cached_image","img_size","$image_el","css","backgroundImage","backgroundSize","backgroundColor","setCss","getBlobImage","getDefaultAvatar","color","font","first_name","last_name","first_letter","second_letter","canvas","createElement","ctx","getContext","splitted_name","rect","fillStyle","fill","textAlign","textBaseline","fillText","toUpperCase","toDataURL","getAvatarFromFile","file","image_obj","Image","src","Deferred","onload","b64_image","hash","naturalWidth","naturalHeight","new_size","drawImage","revokeObjectURL","toBlob","blob","reader","FileReader","result","binary_file","bytes","bind","readAsDataURL","onerror","promise","getDefaultColor","getCachedBackground","base64","compressImage","file_type","includes","File","lastModified","Date","now","modal_queue","appendTo","Modal","modal_constructor","$modal","Function","closed","getString","params","postProcess","sprintf","extend","open","use_queue","throw","setTimeout","addEventListener","clickHandler","prop","modal_options","omit","is_default_complete","complete_data","one","ev","detach","shift","_openModal","close","complete","isUndefined","_closeModal","removeEventListener","trigger","keyCode","click","preventDefault","openModal","closeModal","modal","clear_queue","dialogs","common","header","buttons","dialog_options","flag","modal_class","dialog","isArray","ok_button","cancel_button","optional_buttons","reverse","no_dialog_options","quoted_text","append","cancel_button_main","inverted_buttons","img_details","xabber","switchClass","hasClass","blob_image_from_clipboard","appendChild","bottom_text","escape_button","input_placeholder_value","input_value","val","option","target","$options","user_value_input","$item","user_value","warning","error","ask","ok_text","cancel_text","ok_button_text","cancel_button_text","ask_extended","optional_button","optional_button_text","ask_enter_value","resend_button","resend_to","resend_button_text","notify","placeCaretAtEnd","el","focus","getSelection","createRange","body","createTextRange","textRange","moveToElementText","collapse","select","range","selectNodeContents","sel","removeAllRanges","addRange","updateRichTextarea","getTextFromRichTextarea","flushRichTextarea","pasteHtmlAtCaret","getRangeAt","rangeCount","deleteContents","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","insertNode","cloneRange","setStartAfter","selection","pasteHTML","$div","replaceWith","$this","remove","klass","condition","arguments","showIf","hideIf","isVisibleInViewport","elementTop","top","elementBottom","outerHeight","viewportTop","scrollTop","viewportBottom","isVisibleInContainer","container","eleTop","offsetTop","eleBottom","clientHeight","containerTop","containerBottom","isFullyVisibleInContainer","isBottomVisibleInContainer","getHyperLink","prot","escaped_url","encodeURI","decodeURI","escape","hyperlinkify","obj","$obj","html_concat","url_regexp","childNodes","$node","outerHTML","tagName","nodeName","list","match","from","Set","decode_uri","replaceAll","RegExp","utils","uuid","c","r","random","toString","utoa","str","btoa","unescape","encodeURIComponent","atou","decodeURIComponent","pretty_time","timestamp","format","pretty_date","pretty_datetime","pretty_short_datetime_recent_chat","Number","startOf","isSame","subtract","pretty_short_datetime","datetime","day","year","pretty_short_month_date","isImageType","tryReadingFile","Promise","reject","console","log","getDomainFromUrl","a","test","href","hostname","isVideoType","file_type_icon","mime_type","filetype","pretty_file_type","file_type_icon_svg","pretty_file_type_with_article","pretty_size","isNaN","toFixed","pretty_duration","duration","trunc","pretty_name","substr","toLowerCase","getKeyByValue","object","key","slice_string","to","isNumber","slice_pretty_body","mutable_refs","filter","m","pretty_body","ref","start","end","markupBodyMessage","message","mention_tag","attrs","clone","attributes","mentions","markups","mutable_content","blockquotes","markup_body","original_message","muted","mention","start_idx","end_idx","is_gc","jid","me","markup","start_tags","end_tags","mark_up_style","uri","quote","child_idx","getOS","platform","navigator","os","isOverflownWidth","element","scrollWidth","clientWidth","isOverflownHeight","scrollHeight","render_data_form","data_form","$data_form","fields","field","$fixed_field","label","values","$input","var","copyTextToClipboard","callback_msg","errback_msg","clipboard","writeText","then","info_msg","callback_popup_message","time","$body","$popup_msg","count","openWindow","errback","win","clearSelection","empty","getCookie","matches","cookie","undefined","isMobile","Android","userAgent","BlackBerry","iOS","Opera","Windows","any","fromBase64toArrayBuffer","b64_string","buffer","ArrayBuffertoBase64","arrayBuffer","generateHOTPKey","async","secret","counter","Crypto","crypto","subtle","counterArray","padCounter","importKey","sign","ArrayBuffer","bView","DataView","bCounter","repeat","byte","byteValue","parseInt","setUint8","DT","HS","truncate","uKey","Sbits","generateHOTP","hmacSha256","stringToArrayBuffer","string","AES","ALGO_NAME","decoder","TextDecoder","encoder","TextEncoder","decrypt","masterKey","HMACData","payload","masterObj","hkdfCtrParams","salt","info","deriveBits","encryptionKey","authenticationKey","iv","generatedHMAC","byteLength","decryptedBuffer","decode","encrypt","plaintext","getRandomValues","encrypted","generateAESencryptedMessage","keydata","encryptOptions","encodedPlaintext","encode","arrayBufferConcat","joined","set","generateAESKey","algo","generateKey","getBrowser","userAgentString","chromeAgent","IExplorerAgent","firefoxAgent","safariAgent","operaAgent","images","modals","sounds","client_translation_progress","bc","BroadcastChannel","onmessage","event","disabled_client","postMessage","Backbone","Model","defaults","version_number","actual_version_number","client_id","substring","client_name","initialize","env","fetchURLParams","cleanUpStorage","initDefaultLanguage","detectMediaDevices","mediaDevices","ondevicechange","check_config","_settings","Settings","storage_name","getStorageName","fetch","settings","location","host","pathname","_cache","ModelWithStorage","cache","save","extendFunction","plyr_players","current_plyr_player","on","throwNewVersion","onQuit","_version_interval","setInterval","readActualVersion","ononline","disconnectWhenConnecting","lang","language","loadTranslations","default_translation","translation","setLocale","translations","default_lang","_translations","use","init","lng","debug","pluralSeparator","resources","changeLanguage","locale","getFixedT","getOneLiners","exists","t","getQuantityString","services","pluralResolver","getRule","_count","compatibilityJSON","suffix","getSuffix","msg","warn","pretty_last_seen","seconds","calendar","rawFile","XMLHttpRequest","onreadystatechange","readyState","status","json","responseText","JSON","parse","version_description","send","trimStart","trimEnd","indexedDB","databases","db","deleteDatabase","accounts","acc","cached_roster","database","cached_sync_conversations","cached_server_features","full_storage_name","localStorage","startsWith","removeItem","cacheFavicons","getMediaDevices","media_devices","callback","enumerateDevices","devices","device","kind","catch","err","done","reload","max_connection_retries","idling","idling_time","notifications_private","notifications_group","jingle_calls","notifications_volume_enabled","notifications_volume","message_preview_private","message_preview_group","private_sound","group_sound","background","side_panel","theme","blur","transparency","appearance","vignetting","main_color","emoji_font","sound_on_private_message","sound_on_group_message","call_attention","load_media","typing_notifications","mapping_service","sound_on_call","sound_on_dialtone","sound_on_connection","sound_on_attention","sound_on_auth_request","sound_on_call_busy","hotkeys","avatar_shape","load_history","mam_requests_limit","mam_messages_limit_start","mam_messages_limit","configure","config","pick","log_level","PRIVACY_LOAD_MEDIA","PRIVACY_TYPING_NOTIFICATIONS","PRIVACY_MAPPING_SERVICE","self","useLocalStorage","ignore_localstorage_warning","ignore","requestNotifications","granted","emoji_dfd","emoji_url","emoji_obj","loadEmojiFont","splitted_url","splitted_url_anchor","url_params","param","history","pushState","STORAGE_NAME_ENDING","Notification","permission","ignore_notifications_warning","notifications_placeholder","NotificationsPlaceholder","updateFaviconConnected","is_disconnected","account","isConnected","session","updateAllMessageCounterOnDisconnect","is_fast","connection","activate","extendWith","reduce","instance","base","applyTo","View","template","parent","vname","children","classlist","view","ps_selector","ps_container","perfectScrollbar","ps_settings","visible","onChangedVisibility","updateCSS","size_changed","windowResized","_initialize","__initialize","isVisible","show","onShow","apply","updateScrollBar","hide","onHide","render","child","addChild","constructor","removeChild","soft","removeChildren","view_id","setCustomCss","styles","removeCustomCss","removeAttr","saveScrollBarOffset","getScrollTop","scroll_top","scrollTo","scrollToTop","scrollToBottom","offsetHeight","scrollToChild","$child","prevAll","sum","getScrollBottom","getPercentScrolled","isScrolledToTop","isScrolledToBottom","tree","close_settings","main_overlay","patchTree","has","className","isNull","new_view","events","keyUpOnSearch","stopPropagation","ids","toArray","$selection","getSelectedItem","selectNextItem","selectPreviousItem","onEnterPressed","clearSearch","updateSearch","selection_id","selectItem","arrow","clearSearchSelection","first","_update_search_timeout","query","search","onEmptyQuery","searchAll","keyUpOnSearchWithQuery","onClickItem","updateSearchWithMessages","search_messages","onScrollY","queryid","_loading_messages","_messages_loaded","query_id","first_message","searched_msgs_loaded","before","MAMRequest","query_text","messages","$message_item_view","message_from_stanza","chats","receiveChatMessage","is_searched","msg_idx","model","insertBefore","eq","onScroll","getSelectedItemWithQuery","selectNextItemWithQuery","selectPreviousItemWithQuery","selectItemWithQuery","main_container","clearTimeout","keyup_timeout","query_transliterated","saved_chat","getSavedChat","item_view","updateLastMessage","query_chats","comparator","sort","contact","searched_by","chat_item","prepend","screen","contacts","hash_id","chat_id","item_list","getChat","clear_search","searchMessages","preloader","max","iq","$iq","xmlns","NS","MAM","DATAFORM","up","cnode","RSM","toXML","handler","addHandler","sendIQFast","deleteHandler","$fin","field_type","input_widget","field_name","placeholder","$value","$btn","updateValue","input_mode","onChangedInputMode","bindModelEvents","model_field","showInput","keyDown","getValue","changeValue","keyUp","setValue","new_value","screen_map","update","onScreenMapChanged","updateBackground","updateMainColor","updateAvatarShape","insertAfter","addScreen","siblings","shape","background_settings","updateBoxShadow","updateBlur","setScreen","unbind","chat_item_view","new_attrs","stamp","uniqueId","isScreen","show_placeholder","right","right_force_close","right_contact","content","_prev_scrolltop","_scrolltop","previous_screen","changed","showChatPlaceholder","screen_changed","toolbar","state","setAttribute","getAttribute","removeAttribute","onUpdatedScreen","onChangedAllMessageCounter","onChangedGroupMessageCounter","onChangedMentionsCounter","onChangedMessageCounter","msg_counter","group_msg_counter","all_msg_counter","mentions_counter","dropdown","inDuration","outDuration","constrainWidth","hover","alignment","updateColor","contains","clickAllChats","showAllChats","no_unread","closest","is_active","showArchive","showSavedChats","right_contact_save","scroll_to_chat","once","showNotifications","showChatsByAccount","showContacts","showMentions","showSettings","account_block_name","showSettingsModal","showPlaceholder","screen_name","showAddContactView","showAddAccountView","showAddIncognitoGroupChatView","incognito","showAddPublicGroupChatView","public","setAllMessageCounter","count_msg","count_all_msg","count_group_msg","isMuted","incoming_subscriptions","unread_mentions","msgs","all_msgs","group_msgs","recountAllMessageCounter","unread_messages","jingle_message_calling","avatar_size","onDestroy","updateCallingStatus","updateButtons","updateCollapsedWindow","updateName","updateStatusText","updateAccountJid","dismissible","ready","updateAvatar","pos1","pos2","pos3","pos4","mousedown","clientX","clientY","didDrag","onmouseup","onmousemove","left","setFullScreen","fullscreenElement","exitFullscreen","requestFullscreen","cancelFullScreen","mozCancelFullScreen","mozFullScreenElement","webkitExitFullscreen","webkitCurrentFullScreenElement","msExitFullscreen","msFullscreenElement","shareScreen","isFullScreen","webkitFullscreenElement","accept","initSession","clickOnWindow","toggle","toggleClass","toggleMicrophone","status_text","videoCall","toggleVolume","cancel","plyr_player_popup","onVisibilityChange","updatePlyrControls","player","controls","youtube","disablekb","iv_load_policy","modestbranding","rel","showinfo","other","$audio_elem","voice_message","stopTime","detail","minimizePopup","showNewVideo","xPercent","innerWidth","yPercent","innerHeight","dfd","provider","updateColorScheme","player_item","message_unique_id","video_sources","video_src","source","sources","$minimize_element_float","$minimize_element_full","$show_message_element_full","play","video_file","video_decrypted","decryptFile","closePopup","visibility_state","hidePopup","floatPopup","fullPopup","nextPlyr","player_index","next_item","f_url","previousPlyr","prev_item","openMessage","showDetailsRight","right_saved","getMessageContext","togglePlay","renderVoiceMessage","toggleMute","settings_modal","updateLanguage","updateEmojiFontLabel","updateAvatarLabel","updateSoundsLabel","closeSettings","updateAccounts","updateSounds","updateLanguages","updateEmojiFonts","checked","sound_private_value","sound_group_value","updateDescription","updateBackgroundSetting","belowOrigin","updateHeight","updateSliders","block_name","$elem","jumpToBlock","settings_single_account_modal","first_account","single_account_has_rendered","forced_ps_container","single_account_modal","blur_switched","vignetting_switched","material_color","variations","v","hex","tone","weight","$tab","range_min","range_max","range_value","setting_radio_input","input_name","input_id","cid","group_element","element_no_sound","group_element_no_sound","default_element","setting_language_radio_input","progress","second_prog","second_prog_text","second_lang","second_locale","second_element","progress_text","emoji_fonts_list","system_element","setting_emoji_font_radio_input","b","item_name","current_sound","pause","backToMenu","backToSubMenu","elem_parent","goToWebNotifications","setIdling","setIdlingTimeout","$target","setNotificationsVolumeEnabled","setNotifications","requestPermission","setPrivateNotifications","setGroupNotifications","setJingleCalls","setPrivateMessagePreview","setGroupMessagePreview","setCallAttention","setLoadMedia","setTypingNotifications","setMappingService","setPrivateSound","setGroupSound","setCallSound","setDialtoneSound","setAttentionSound","setBackground","changeBackgroundImage","openColorPicker","colorPicker","chooseMainColor","changeBlur","changeNotificationsVolume","volume","sound","changeVignetting","switchVignetting","is_switched","switchBlur","setHotkeys","setAvatarShape","deleteAllAccounts","platform_text","modal_classes","changeEmojiFont","current_time","load_emoji_external_dfd","font_load_dfd","currently_loaded_font_value","response","emoji_load_date","is_outside_url","loadExternalEmojiFont","label_text","sound_private_text","sound_group_text","sound_on_attention_text","color_scheme","min","setColor","materialColors","color_picker","$color_hex","updateInputField","keyUpInput","focusoutInputField","selectColor","color_name","backgrounds_gallery","onpaste","onPaste","createLibrary","draggable","ondragenter","ondragover","ondragleave","relatedTarget","ondrop","files","dataTransfer","addFile","loadMoreImages","getImagesFromXML","patterns_library","img_library","onGetPatternsCallback","onGetImagesCallback","thumbnail","fs_img","clipboardData","getData","updateActiveButton","updateActiveMenu","updateScreen","$active_screen","non_active","current_count","img","img_sources","setActiveImage","onFileInputChanged","image_prev","onInputChanged","addBackground","request","headers","dataType","success","ajax","about","onmousedown","onMouseDown","onMouseMove","onMouseUp","which","draghandle_elem","elem","resetElem","downX","pageX","downY","pageY","avatar","abs","createAvatar","coords","getCoords","shiftX","shiftY","startDrag","style","drop_elem","findDropElem","updateDropElem","querySelector","finishDrag","box","getBoundingClientRect","pageYOffset","pageXOffset","$avatar","old","parentNode","nextSibling","position","zIndex","avatar_cursor","cursor","draghandle_elem_cursor","rollback","hidden","elementFromPoint","old_drop_elem","modal_settings","in_duration","out_duration","opacity","minScrollbarLength","suppressScrollX","wheelSpeed","startBlinkingFavicon","_blink_interval","clearInterval","$icon","favicon","favicon_gray","favicon_message","stopBlinkingFavicon","FontFace","load","loaded_face","fonts","add","resetMessageCounter","onChangedFocusState","popupNotification","playAudio","loop","filename","Audio","stopAudio","registerDOMEvents","initIdleJS","stop","idle","onIdle","onActive","keepTracking","startAtIdle","focused","hasFocus","Materialize","modalSettings","drag_manager","DragManager","Body","login_page","NodeView","toolbar_view","ToolbarView","blur_overlay","main_panel","main_overlay_panel","left_panel","right_panel","right_contact_panel","wide_panel","placeholders_wrap","settings_modal_view","SettingsModalView","idAttribute","to_sync","synced","deleted","update_timestamp","update_settings","request_data","CollectionWithStorage","account_settings_list","AccountSettingsList","order_timestamp","AccountsOrderTimestamp","LogLevel","WARN","ERROR","addConnectionPlugin","_connection","conn","Status","addNamespace","REGIFAIL","REGISTER","REGISTERED","CONFLICT","NOTACCEPTABLE","disco","addFeature","addNode","items","reset","instructions","registered","connect_cb","_connect_cb","raw","_registering","_check_user","_register_cb_check_user","processed_features","_connect_cb_data","_register_cb","xmlInput","Connection","rawInput","auth_old","authenticate","matched","domain","password","authzid","getBareJidFromJid","authcid","getNodeFromJid","pass","connect_callback","connect","wait","hold","route","getDomainFromJid","connect_check_user","connect_change_password","registerSASLMechanisms","SASLAnonymous","SASLExternal","SASLMD5","SASLPlain","SASLSHA1","_callback","connected","bodyWrap","_proto","_reqToData","strip","serialize","CONNFAIL","register","getElementsByTagName","mechanisms","_no_auth_received","_changeConnectStatus","_addSysHandler","_get_register_cb","stanza","getText","submit","_submit_cb","error_text","submit_unregister","_submit_unregister_cb","SASLHOTP","SASLMechanism","onChallenge","out","len","charAt","utf16to8","hotp_pass","ConnectionManager","auth_type","registerSASLMechanism","_sasl_data","SASLXOAuth2","reconnect","_attemptSASLAuth","sortMechanismsByPriority","mechanism_found","_sasl_success_handler","_sasl_success_cb","_sasl_failure_handler","_sasl_failure_cb","_sasl_challenge_handler","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","$build","SASL","mechanism","isClientFirst","hotp_counter","_sasl_auth1_cb","features","do_bind","do_session","namespaceURI","AUTH_DEVICES","x_token_auth","SYNCHRONIZATION","server_features","create","do_synchronization","SUBSCRIPTION_PREAPPROVAL","x_token","expire","getXToken","token","expires_at","token_uid","_send_auth_bind","AUTHFAIL","_sasl_bind_cb","resource","getResourceFromJid","BIND","old_token","uniq_id","iqtype","Websocket","_onIdle","_conn","_data","paused","rawStanza","_buildStream","xmlOutput","rawOutput","socket","_pending_stanzas","xmlunescape","reg_exp","testRegexp","replaceRegexp","vcard","xmlToObject","$vcard","nickname","fullname","middle_name","birthday","job_title","role","description","jabber_id","org","photo","phone","address","email","group_info","anonymous","searchable","status_msg","members_num","$org","unit","$photo","number","work","home","mobile","pobox","extadd","street","locality","region","pcode","country","VCARD","sendIQ","objectToXml","getBlank","updateRefreshButton","getVCard","$info","$addr_info","show_addr_block","addr","onClickIcon","$target_value","copied_text","value_text","refresh","vcard_right","vcard_edit_modal","pickadate","selectMonths","selectYears","autoOk","allowKeyboardControl","today","onClose","activeElement","weekday_display","date_display","navPrev","navNext","selected","buttonClear","buttonClose","evt","updateSaveButton","setData","updateTextFields","changePlaceholder","nickname_placeholder","setVCard","$pres","Images","enabled","status_message","priority","auto_login_xa","account_unique_id","groupchat_servers_list","_attrs","retraction_version","is_new","auth_view","is_invalid","last_msg_timestamp","collection","getLastOrder","deleteAccount","photo_hash","reconnected","ready_to_send","conn_retries","conn_feedback","_waiting_code","code_requests","gallery_code_requests","xabber_auth","onChangedConnected","websocket_connection_url","conn_manager","_added_pres_handlers","_pending_messages","dfd_presence","password_view","_init_plugins","plugin","call","xml","isOnline","getPassword","isReconnecting","sendMsg","authenticated","disconnecting","sendMsgPending","sendMsgFast","getConnectionForIQ","fast_connection","sendFast","nodeTree","is","pubAvatar","removeAvatar","http_avatar","avatar_hash","iq_pub_metadata","PUBSUB","PUBSUB_AVATAR_METADATA","thumbnails","PUBSUB_AVATAR_METADATA_THUMBNAIL","data_error","iq_pub_data","PUBSUB_AVATAR_DATA","uploaded","generated","uploadAvatar","getAvatar","iq_request_avatar","pubsub_avatar","is_iq","parseDataForm","$dataform","$field","field_var","field_label","field_value","field_options","$option","lbl","addDataFormToStanza","$stanza","field_attrs","sendPres","createFastConnection","login","token_invalidated","fast_conn_manager","disconnect","onFastConnected","reconnecting","auth_failed","restoreStatus","connectionCallback","timeout","connFeedback","reconnectionCallback","loginCallback","conn_status","conn_condition","onAuthFailed","CONNECTED","onTokenRevoked","DISCONNECTED","flush","_main_interval_worker","terminate","onConnectionConflict","max_retries","registerCallback","$nickname_input","errorRegistrationFeedback","changePasswordCallback","change_password_view","successFeedback","errorFeedback","old_password","change_password_connection","$password_input","change_password_connection_manager","unregisterAccountCallback","unregister_account_view","unregister_account_connection","unregister_account_connection_manager","CONNECTING","stepped_auth","resetAuthStepper","authStepperStart","endAuth","stepper_auth_error","CONNTIMEOUT","authStepperError","destroy","no_reconnect","deactivate","old_device_token","getAllXTokens","tokens_list","tokens","$token","client","omemo_id","last_auth","ip_address","ip","x_tokens_list","on_token_revoked","onReconnected","onConnected","onDisconnected","afterConnected","_after_connected_plugins","_after_fast_connected_plugins","_fast_interval_worker","_after_reconnected_plugins","sendPendingStanzas","sendPendingMessages","registerPresenceHandler","enableCarbons","getAllMessageRetractions","query_options","REWRITE","version","retractions_query","Builder","is_msg","msg_iq","unique_id","DELIVERY","disconnected_timestamp","last_stanza_timestamp","CARBONS","is_callback","isFunction","vcard_updated","avatar_priority","vcardPhotoUpdated","getStatusMessage","setStatus","status_updated","status_prev","sendPresence","getAvatarHash","from_avatar","decoded_raw","bin","VCARD_UPDATE","caps","createCapsNode","has_modal_settings","settings_account_modal","revokeXToken","token_num","revokeAllXTokens","show_settings","dont_change_screen","show_settings_after_delete","dont_change_screen_after_delete","omemo","groups_settings","clearStorage","groupchat_settings","chat_settings","deleteDataBase","registerIQHandler","_stanza_handler","onGetIQ","registerSyncedIQHandler","_synced_stanza_handler","onSyncedIQ","_pres_handler","presence","onPresence","onSetIQResult","roster","syncConversations","request_code","$incoming_iq","$confirm","HTTP_AUTH","$session_availability","JINGLE_MSG","from_jid","onAuthCode","$session_availability_response","session_id","testGalleryTokenExpire","currentTime","tokenExpireTime","initGalleryAuth","testGalleryFileSlot","onloadend","b64","responseJSON","gallery_feature","gallery_iq_answered","stringify","request_id","gallery_auth_errback","verifying_code","verifying_mess","handleCommonGalleryErrors","confirm_code","expires","prepareFiles","testFile","err_text","getStorageStats","uploadFile","formData","FormData","metadata","voice","processData","deleteFile","file_id","getOpenGraphData","site","ogp","image_height","image_width","video_url","createMessageFromIQ","mergeContact","$presence","bare_jid","$vcard_update","VCAD_UPDATE","resource_obj","$device","addInitPlugin","func","addConnPlugin","reconn","addFastConnPlugin","acc1","acc2","models","settings_list","getEnabledList","getConnectedList","onAdd","onUpdatedOrder","onListChanged","onAccountDisconnected","onQuitAccounts","onSettingsAdded","last","used_colors","colors","moveBefore","index2","prev_order","at","_updateOrder","moveToBottom","index","toolbar_item","updateConnected","updateAuthState","updateStatus","setActive","filterChats","updateList","updateOneInList","onAccountRemoved","after","resource_right","Collection","r1","r2","p1","p2","requestInfo","$identity","attention_supported","isFeatureSupported","ATTENTION","ns","is_supported","renderByInit","onResourceAdded","onResourceRemoved","onReset","onPriorityChanged","updatePosition","vcard_modal","showEditView","media_gallery_account","onUpdateAvatars","updateStorage","loading_files","current_page","total_pages","current_options","page","getAvatars","getFiles","after_deletion","after_avatar_update","used_storage","total","used","quota","videos","voices","filterType","sorting","order_by","onTabClick","tab_header","backToMain","showDeleteFilesView","gallery_view","sortFiles","sort_type","onClickFile","prev_audio_message","file_url","not_expanded_msg","$msg_element","audio_file_waveform","waveform_id","aud","createAudio","round","getDuration","unAll","timerId","cur_time","getCurrentTime","isPlaying","onchange","setVolume","scrollParent","barWidth","barHeight","cursorColor","autoCenter","normalize","hideScrollBar","progressColor","assign","obj_per_page","current_rendered_type","renderFiles","$gallery_file","media_gallery_account_file","svg_icon","media_type","filesize","created_at","download_only","closeOnContentClick","fixedContentPos","mainClass","verticalFit","titleSrc","zoom","deleteAvatar","enableFilesSelect","onSelectFile","disableFilesSelect","selectFile","$target_input","selected_header","selected_count","deleteSelectedFiles","openStoragePanel","wheelPropagation","delete_files_media_gallery","onRender","deletePercent","percent","current_page_preview","getFilesForDeletion","renderForDeletion","date_lte_for_deletion","dropdown_settings","deleteFilesFiltered","date_lte","account_settings_modal","status_field","updateBlocks","updateGallery","vcard_view","updateView","showConnectionStatus","updateSynchronizationBlock","updateXTokens","groups","updateGroupsLabel","updateReconnectButton","updateSyncOption","updateDelSettingsButton","updateSyncState","updateEnabled","updateOmemoDevices","updateEnabledOmemo","updateEncryptedChatstates","updateBlockedLabel","blocklist","blocked_count","jumpToBlockHandler","tabs","updateDeviceInformation","backToMenuHandler","backToSubMenuHandler","deselectBlocked","updateNameCSS","$name","wrap_width","font_size","chooseAvatar","openEmojiPanel","openWebcamPanel","changeAvatar","openChangeStatus","unregisterAccount","store","showResources","resource_id","hideResources","renderAllXTokens","sortBy","pretty_token","findWhere","toJSON","is_omemo","$cur_token_html","current_token_item_modal","$token_html","token_item_modal","omemo_own_devices","omemo_device_id","updateTrustDevice","_single_account","own_devices","fing","$this_device","generateFingerprint","getBundle","pk","spk","ik","fingerprint","openFingerprint","is_own","openFingerprintDevice","groups_count","mdiclass","$sync_icon","omemo_enable_view","setEnabled","setEnabledOmemo","initOmemo","destroyOmemo","setTypingNotification","openDevicesWindow","omemo_devices","purgeKeys","device_id","bundle","preKeys","removeItemFromNode","OMEMO","showPasswordView","changeSyncSetting","deleteSettings","delete_account","changeColor","showQRCode","qrcode","noBorder","domElement","openBlockWindow","block","blockContact","unblockSelected","single_account_settings_modal","args","status_message_input_widget","global_settings_item_modal","updateNickname","onDragTo","onMoveAccount","onMoveAccountToBottom","updateHtml","change_status","highlightStatus","restoreStatusMessageInput","changeStatus","do_change","clearStatusMessageInput","verbose_status","apply_to_all","changeApplyToAll","avatars_gallery","participant","current_items","current_file","addAvatarSelecter","addNotOwnAvatar","addAvatar","img_from_gallery","createFileFromURL","participant_node","updateMemberAvatar","webcam_panel","registration","registration_view","streaming","startbutton","startupStream","srcObject","getTracks","track","getUserMedia","stream","takePicture","clearPhoto","context","fillRect","globalCompositeOperation","beginPath","arc","PI","closePath","saveNotOwnAvatar","saveAvatar","member_details_avatar_size","emoji_panel","emoji_panel_view","openEmojiPicker","emoji_picker","readEmojisJSON","emojis","emoji_picker_tabs","pickEmojiTab","tab","pickEmoji","change_password","is_login","authFeedback","getActionName","setPassword","authentication","change_account_password","$old_password_input","$password_confirm_input","password_confirm","password_not_error","$jid_input","updateOptions","at_idx","registerFeedback","registration_success","authStepperShow","getWebsocketURL","DISABLE_LOOKUP_WS","protocol","socket_url","socialAuth","origin","xmpp_login","$domain_input","handleRegistrationStep","stepped_auth_complete","updateDomains","updateAuthDomains","openButtonsMenu","keyUpNickname","openNextStep","keyUpJid","_check_user_timeout","setCustomDomainRegistration","regexp_local_part","regexp_domain","_registration_username","_registration_domain","auth_connection","handleRegisterStanza","auth_conn_manager","checkUserCallback","keyUpPassword","keyUpDomain","keyUpLogin","focusoutDomain","username_taken","_supports_check_user","class","user_success","_check_user_connection_timeout","_no_response","openPreviousStep","step","checkFeaturesStepper","successRegistrationFeedback","registerWithoutAvatar","logoutAndRegister","openRegisterForm","openLoginForm","all_servers","splice","setCustomDomainAuth","$property_value","changePropertyValueRegistration","$property_item","changePropertyValueAuth","timeout_timer","HTTP_UPLOAD","first_features_received","auth_error","add_account","logout","unregister_account","checked_count","submitUnregister","xmpp_login_panel","XmppLoginPanel","Container","Accounts","ToolbarAccountsBlockView","SettingsAccountsModalBlockView","add_account_view","AddAccountView","UnregisterAccountView","change_account_password_view","ChangeAccountPasswordView","delete_files_view","DeleteFilesFromGalleryView","onbeforeunload","login_screen","xabber_login","single_account","supports","renderSingleAccount","addIdentity","LAST","CHATSTATES","BLOCKING","PING","CHAT_MARKERS","ARCHIVE","GROUP_CHAT","namespace","verbose_name","feature","onFeatureAdded","getAllFromCachedFeatures","is_cached","onInfo","onItems","addItem","form_type_val","URLDISCO","media_gallery_url","MEDIAGALLERY","_var","client_feature","client_features","putInCachedFeatures","_last_stanza_handler","_pong_handler","ping","addPingHandler","pong","Worker","downtime","onLine","last_fast_stanza_timestamp","_last_fast_stanza_handler","_fast_pong_handler","_onDiscoInfo","DISCO_INFO","_onDiscoItems","DISCO_ITEMS","Emoji","subscription","subscription_request_in","subscription_request_out","group_chat","onChangedGroupchat","full_jid","server","roster_name","isBlocked","blocked","b64_sha1","updateCachedInfo","is_deleted","out_request","online_members_num","getSubscriptionStatuses","subscription_preapproved","in_request","status_description","status_out_color","status_in_color","status_out_text","status_in_text","status_out","status_in","getIcon","getFromRoster","cached_info","roster_info","in_roster","putInRoster","updateCounters","participants","resetParticipantsList","getBlockedParticipants","getLastSeen","last_seen","getLastSeenStatus","getMyInfo","participantsRequest","properties","cached_avatar","getAvatarInfoById","createFromStanza","my_info","avatar_b64","my_rights","message_time","pres","pushInRoster","ROSTER","group","removeFromRoster","acceptRequest","askRequest","blockRequest","declineRequest","declineSubscription","declineSubscribe","deleteWithDialog","is_group","msg_text","bold","localpart","delete_history","retractAllMessages","deleteFromSynchronization","blockWithDialog","unblockWithDialog","unblock","setActiveStateSendInterval","$msg","_sending_active_chatstate_timeout","_sending_active_chatstate_interval","handlePresence","$group_chat_info","updateGroupChatsList","group_chat_info","parseGroupInfo","prev_group_info","sync_deleted","$status_message","_reset_status_timeout","$group_chat","$model","privacy","$index","$description","pinned_message","prev_pinned_message","private_chat","$online_members_num","pinned_msg_elem","$pinned_message","getMessageByStanzaId","$message","parsePinnedMessage","getAllRights","iq_get_rights","iq_all_rights","all_permissions","all_restrictions","all_rights","permissions","restrictions","stanza_id","receiver","XABBER_CHAT","fast","is_groupchat","filter_image","filter_video","filter_voice","filter_files","opt_var","onStartedMAMRequest","callb","onCompletedMAMRequest","rsm","errb","getFilesFromStanza","cached_stanza_id","references","cached_message","REFERENCE","reference","$reference","$file_sharing","FILES","VOICE_MESSAGE","$file","file_attrs","HASH","uniqueid","has_encrypted_files","renderPinnedMessage","locations","fwd_message","fwd_msg_author","user_info","participant_info","participant_nickname","chat_content","is_scrolled","pinned_msg","author","fwd_author","pinned_msg_html","group_chats","height_pinned_msg","resetStatus","searchByParticipants","participants_list","showDetails","details_view","scrolled_top_chats_view","scrolled_top_chat","details_view_right","details_view_right_encrypted","contact_searched_messages_view","hideSearch","showSearchMessages","set_status","getStatuses","updateIcons","ic_name","iq_get_properties","renderStatuses","f","$status_item","status_item","iq_set_status","interval_last","selectView","updateGroupChat","updateIcon","onBlocked","updateStatusMsg","lastSeenUpdated","new_status","is_group_chat","contact_right_item","showJid","hideJid","clickOnItem","contact_left_item","updateDisplayStatus","updateBlockedState","updateMutedState","onResourceUpdated","showVCard","hideVCard","contact_details_right","name_field","contact_edit_view","edit_groups_view","updateNotifications","updateJingleButtons","updateChilds","updateSubscriptions","setButtonsWidth","updateIndicator","keydownHandler","hideEdit","isOpen","openChat","scrollToTopSmooth","animate","widths","button","bottom_block_scroll","is_blocked","is_server","$label_outcoming","$label_incoming","prev","showEdit","voiceCall","initCall","initJingleMessage","deleteContact","unblockContact","muteChat","muted_seconds","mute_type","unmuteChat","$search_form","addContact","changeList","list_name","scrollLeft","addList","_render","constructor_func","requestAuthorization","group_chat_details_right","member_avatar_size","group_chat_properties","group_chat_status","group_chat_properties_edit","default_restrictions_edit_right","hideRestrictions","showRestrictions","is_owner","change_group","clearHistory","head","editProperties","leaveGroupChat","inviteUser","edit_view","getInvitations","deleteGroup","makeSelfie","makeEmojiAvatar","group_status","group_status_right","$target_info","label_name","group_chat_properties_right","hideMoreDescription","all_fixed","saveChanges","has_changes","checked_inp","text_inp","textarea","field_idx","$result","$error","updateInvitations","user","$item_view","invited_member_item","showInviteButton","revokeInvitation","$member_item","member_jid","updateRemoveParticipantButton","revokeInvitationByElement","temporary_items","all_messages_loaded","getMediaFromDecryptedMessages","messagesFileRequest","updateMedia","active","last_rsm_message","loading_messages","loadMoreFiles","block_height","updateForParticipant","delegateEvents","filter_type","fail","cached_messages","getMessages","entries","msg_items","filtered_items","items_count","filterEncryptedFiles","encryptedFilesHandler","files_count","updateEncryptedMedia","is_loaded","true_voice","media_item","is_encrypted","media_items_empty","messages_count","searched_message","gallery","parents","searched_messages","updateBlockedParticipants","showBlockButton","unblockUser","tag","unblockUserByElement","blockId","onParticipantsUpdated","updateParticipantsList","participant_properties_panel","updateParticipants","setParticipantsListVersion","updateVersion","renderParticipants","renderMemberItem","blockParticipant","kickParticipant","kick","removeParticipantFromList","badge","is_me","pretty_present","present","isValid","fromNow","group_member_item","prependTo","member","getB64Avatar","getHashAvatar","avatar_url","updateCachedAvatars","showParticipantProperties","participant_item","participant_id","keyUpSearch","searchParticipant","participants_right_panel","onParticipantsChanged","kickParticipantDialog","group_member_item_right","showParticipantPropertiesEdit","showNamePanel","changeBackButton","participant_rights","onBadgeUpdated","new_avatar","$member_info_view","is_myself","is_blocked_contact","incognito_chat","private_participant_details","participant_details_item","participant_messages","actual_rights","setActualRights","new_nickname","updateRightsView","messages_view","messagesRequest","changeTimerValue","$input_item","updateBadge","$member_item_nickname","xmlescape","editNickname","editBadge","edit_badge_panel","checkKeydown","checkKeyup","retractUserMessages","retractMessagesByUser","restriction_expire","restriction_item","right_expire_variants","right_name","expire_options","getPrivateChat","participant_jid","participant_in_roster","iq_response","group_jid","createSystemMessage","private_chat_jid","changeRights","$right_item","saveRights","member_id","$participant_avatar","nickname_value","changed_avatar","rights_changed","iq_changes","right_item","right_expire","iq_rights_changes","participant_details_right","private_participant_details_item_right","participant_details_item_right","participant_name_field","participant_badge_field","hidePanel","resetPanel","changeName","changeBadge","clickAvatarInput","url_forced","setVisibility","$current_restriction","new_badge","badge_edit_view","typeEmoticon","_timeout","$insert_emoticon","$emoji_panel_wrap","$emoji_panel","$emoji_list_wrap","sprite","tag_name","saveNewBadge","emoji_node","checkKey","default_restrictions","actual_default_restrictions","showDefaultRestrictions","restriction_name","restriction_expires","restriction","changeRestriction","changePropertyValue","iq_change_default_rights","has_new_default_restrictions","changeExpiresTime","expire_time_item","new_expire_time","$restriction_item","default_restrictions_right","getBase64Avatar","getParticipantsListVersion","getCachedParticipants","getParticipantsList","mergeParticipant","resetParticipants","getRights","rights","pretty_rights","issued_time","expires_time","updatePinnedMessage","$response","photo_url","updateParticipant","participants_lists","all_participants_lists","participants_list_idx","chat_participants","participant_idx","setParticipantsList","updated_participants_list","invitation","closeChat","readMessages","blockInvitation","contact_jid","iq_get_blocking","iq_unblocking","iq_set_blocking","iq_blocking_items","item_jid","getDefaultName","group_name_input_widget","force_reset","description_input_widget","changeDescription","onUpdate","all_groups","notSpecial","groups_checkbox_list","groups_list","groups_new_group","on_add","_update_template","removeGroup","group_name","removeLastGroup","editGroup","_hide_timeout","checkNewGroup","keyupAddNewGroup","addNewGroup","keydownAddNewGroup","focusinAddNewGroup","focusoutAddNewGroup","edit_contact","updateStatuses","statuses","status_out_class","status_in_class","requestSubscription","allowSubscription","cancelSubscriptionRequest","handleSubscriptionRequest","cancelSubscriptionOut","cancelSubscriptionIn","edit_group","group_name_field","group_description_field","restrictions_count","showMembershipProperty","showIndexProperty","showDescriptionProperty","hideProperty","invitations","actionSelectedParticipants","deselectParticipants","selectParticipant","is_selected","inv_count","showPanel","original_data_form_values","data_form_index","findIndex","changeMembership","membership_text","membership","changeIndex","index_text","onContactChanged","contact1","contact2","s1","s2","sw1","sw2","sw1_offline","name1","name2","settings_view","updateCounter","onContactRemoved","onChangedRosterSettings","isSpecial","where","renameGroup","new_name","removeContact","updateGroupIcon","updateMembersCounter","onContactAdded","updateContactItem","onChangedOfflineSetting","onChangedSortingSetting","updateExpanded","expanded","mdi_icon","show_offline","roster_settings","group_settings","is_default_show_offline","is_offline","showSettingsIcon","showGroupSettings","group_right","group_left","setOffline","validateName","applySettings","name_error","onGroupAdded","acc_view","onGroupAddedSingleAccount","rendered_once","removeAllContacts","collections","updateInCollections","addCollection","hasOwnProperty","registerHandler","onBlockingIQ","getFromServer","roster_version","addContactToGroup","known_changed","in_roster_changed","groups_changed","groups_to_remove","getGroup","onRosterIQ","syncFromServer","synchronization_with_stamp","is_first_sync","request_attrs","cached_conversations_exclude","onSyncIQ","last_version_sync","syncCachedConversations","request_with_stamp","cached_conversations","syncConversation","conversation","parseXML","saved","conv","account_conversation_type","removeFromCachedConversations","SYNCHRONIZATION_OLD_OMEMO","$sync_metadata","$group_metadata","is_incognito","is_private","SYNCHRONIZATION_OMEMO","current_call","$unread_messages","chat_timestamp","last_read_msg","last_delivered_msg","last_displayed_msg","unread_msgs_count","is_invite","msg_retraction_version","synced_msg","current_chat_timestamp","retracted_msg_id_list","putInCachedConversations","last_message","updateEncryptedChat","updateMutedList","$jingle_message","getCallingAvailability","reason","sendReject","initIncomingCall","sync_update","updateEmptyChat","is_unread","delay","messages_unread","isSenderMe","is_last_sync","sync_timestamp","sync_rsm_after","last_chat_msg_id","conversations_loaded","last_sync_timestamp","getAllFromCachedConversations","retract_version","sync_options","getRoster","request_ver","getAllFromRoster","roster_items","ver","new_roster_version","onRosterItem","is_version","known","onGroupRenamed","onGroupRemoved","updateGroupPosition","group_view","old_name","account_roster_right","updateGlobalCounter","account_roster_left","hashes","updateTabsLabel","selectUnblock","updateUnblockButton","unblockContactByJid","hideEmptyContainers","rendered","tmp","contact_blocked_item","domains","contact_label_text","domains_label_text","invitations_label_text","updateOneRosterView","updateRosterViews","removeRosterView","account_roster_view","roster_left","updateLeftIndicator","getContactForItem","account_jid","roster_view","setOfflineSetting","setSortingSetting","$parent_el","contact_placeholder","onPlaceholderUpdate","add_contact","group_data","updateGroups","renderAccountItem","bindAccount","renderGroupsForAccount","stepForward","add_contact_account_item","silent","groups_checkbox_list_contact","selectAccount","checkJid","force_opened_state","custom_notifications","message_preview","pinned","general_group_name","non_roster_group_name","ModelWithDataBase","put","response_value","get_all","clearDataBase","clear_database","delete_database","getFromCachedConversations","getFromCachedFeatures","removeFromCachedFeatures","objStoreName","primKey","roster_item","Boolean","_roster_settings","RosterSettings","contacts_view","RosterLeftView","contact_container","details_container","ContactPlaceholderView","add_contact_view","AddContactView","msgid","updateUniqueId","destroyOnEcho","removeMessage","forwarded_message","getState","getVerboseState","createInvitationFromStanza","is_private_invitation","$delay","markable","archive_id","origin_id","$group_info","group_info_attributes","carbon_copied","is_archived","is_forwarded","contact_stanza_id","synced_invitation_from_server","parent_chat","auth_request","invite","private_invite","is_accepted","replaced","forwarded","sid","context_message","is_unread_archived","participant_message","echo_msg","is_between_anchors","not_encrypted","not_verified_device","not_verified_device_no_device","link_references","is_trusted","begin","MARKUP","$mention","child_ref","$geolocation","GEOLOC","loc_attrs","lat","lon","OGP","$ogp","link_reference_attrs","original_text","getFileType","x_elem","$user","user_id","user_jid","groupchat_jid","is_sender","participants_version","WEBCHAT","addresses","ADDRESS","$address","only_emoji","synced_from_server","missed_history","missed_msg","pinned_messages","searched_in_contact_messages","context_messages","msg_contact","filereader","exportedMasterKey","enc_file","readAsArrayBuffer","getFilename","url_media","lastIndexOf","full_type","contact_full_jid","volume_on","video_in","video_screen","video_live","registerIqHandler","audio_notifiation","call_initiator","modal_view","RTCPeerConnection","iceServers","sdpSemantics","$remote_video_el","$remote_audio_el","$local_video","current_timer","onconnectionstatechange","onChangeConnectionState","onChangedMediaType","ontrack","remote_stream","streams","_waiting_timeout","onicecandidate","onIceCandidate","oniceconnectionstatechange","onChangeIceConnectionState","setEnabledAudioTrack","onChangedVideoValue","setEnabledVideoTrack","setEnabledScreenShareVideoTrack","onChangedRemoteVideo","onChangedVolume","iq_handler","onIQ","updateTimer","startTimer","call_timer","peer_conn","conn_state","connectionState","_timeout_failed","restartIce","ice","candidate","sendCandidate","iceConnectionState","incoming_video","local_stream","getAudioTracks","default_video","getSenders","sender","createVideoStream","getVideoTracks","stopTracks","createScreenShareVideoStream","video_state","sendVideoStreamState","getDisplayMedia","media_stream","addTrack","replaceTrack","$iq_video","$jingle_initiate","$jingle_accept","$jingle_info","$jingle_video","$result_iq","offer_sdp","JINGLE_RTP","setRemoteDescription","RTCSessionDescription","sdp","acceptSession","answer_sdp","addIceCandidate","RTCIceCandidate","sdpMLineIndex","sdpMid","startCall","createAudioStream","propose","video_track","initVideoTrack","removeTrack","$propose_msg","media","HINTS","$accept_msg","$reject_msg","call_attrs","initiator","p","getImageData","requestAnimationFrame","draw","putImageData","captureStream","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","setLocalDescription","$iq_offer_sdp","JINGLE","action","creator","JINGLE_SECURITY_STUB","$iq_candidate","JINGLE_TRANSPORTS_ICE","createAnswer","answer","$iq_answer_sdp","opened","display","displayed_sent","last_displayed_id","last_delivered_id","unread","const_unread","sync_created","onContactDestroyed","onChangedContact","onChangedTimestamp","onChangedLastReadMsg","_no_scrolling_event","is_first","requestHistoryBetweenAnchors","read_count","message_item","_long_reading_timeout","scrollToUnread","recountUnread","resetUnread","sendDataForm","variable","setStanzaId","updateMessage","msg_to","endCall","receiveMessage","from_bare_jid","$marker","$receipt_request","RECEIPTS","$receipt_response","$jingle_msg_propose","$jingle_msg_accept","$jingle_msg_reject","receiveNoTextMessage","iq_to","jingle_start","reject_contact_stanza_id","busy_audio","$stanza_id","$contact_stanza_id","marker_tag","is_mam","sendMarker","receiveMarker","receiveCarbonsMarker","sendDeliveryReceipt","receiveDeliveryReceipt","last_blocking_timestamp","current_timestamp","has_blocking","blocking_timestamp","mention_context","stanza_id_context","omemo_dfd","msg_options","$delivery_msg","msg_id","by","$displayed","$received","marked_msg_id","marked_stanza_id","msg_state","delivered_time","setMessagesDelivered","setMessagesDisplayed","enc_chat","undelivered_messages","last_read_msg_id","second_deferred","new_last_read_msg","unread_msg","delivered_origin_id","delivered_stanza_id","onRosterPush","retractMessages","symmetric","msgs_responses","num","iq_retraction","getConversationType","user_msgs","retract_attrs","all_messages","showBlockedRequestMessage","muted_value","conversation_options","mute","SYNCHRONIZATION_REGULAR_CHAT","message_counter","content_placeholder","updatePinned","updateArchivedState","updateGroupChats","updateEncrypted","updateChatError","updateActiveStatus","onClosed","updateChatCard","onMessageRemoved","onChangedMessageState","updateIncomingSubscription","updateAcceptedStatus","removeInvite","updateEncryptedColor","new_message","updateTextClipping","error_msgs","indicators_count","is_pinned","archived","deletePlayersFromMessage","players","msg_time","is_empty","italics","bottom","draft_message","msg_from","msg_files","msg_images","msg_locations","msg_user_info","$colored_span","is_audio","total_size","first_forwarded_msg","fwd_msg_files","fwd_msg_images","fwd_msg_locations","fwd_msg_txt","openByClick","click_counter","setDefaultPlaceholder","onChatRemoved","loading_history","history_loaded","first_msg_id","last_msg_id","wheel_ev","defineMouseWheelEvent","onMouseWheel","backToBottom","onwheel","onmousewheel","keyupSearch","renderSearchPanel","onClickMessage","onClickLink","onClickLocationLink","onClickLocation","onHoverLocation","emptyChat","addMessageHTML","last_index","scrolled_from_top","scrolled_from_bottom","$next_message","nextAll","updateMessageInChat","initPopup","$history_feedback","addMessage","onChangedReadState","onUpdatePlyr","originalEvent","deltaY","first_history_loaded","last_history_loaded","_scrollbottom","showHistoryFeedback","hideHistoryFeedback","_onscroll_read_messages_timeout","readVisibleMessages","msg_item","buildMessageHtml","findLastIndex","slideToggle","chat_content_contact","timer","loading_timestamp","loaded_messages","message_count","showMessageAuthor","member_nickname","subscription_buttons","hideElement","sendAndAskSubscription","current_day_indicator","_pending_avatars","updateContentColorScheme","onMessage","_is_scrolled_bottom","onChangedActiveStatus","onChangedIdleStatus","loadLastHistory","requestMissedMessages","onChangedMessageTimestamp","onTrustedChanged","onSubscriptionChange","updateMsgsMissingDevices","updateMyInfo","updateMsgsDeviceTrusting","cancelSearch","updateContactStatus","updateWaveforms","getPeer","fingerprints","updateMyName","updateMyStatus","updateMyAvatar","trust","peer","trusted","_loading_history","loadPreviousHistory","backend","drawBuffer","sendChatState","showChatNotification","is_context","last_visible_unread_msg","readMessage","hideMessagesAfterSkipping","synced_message","$synced_message","last_visible_msg","$last_visible_msg","_read_last_message_timeout","unread_context_messages","showUnreadMarker","unread_marker","$last_read_msg","mam_query","getMessageArchive","unread_history","scrollToUnreadWithButton","showDayIndicator","is_focused","indicator_idx","opacity_value","$chatday_indicator","$messages","marker","indicator","scroll_read_timer","removeAllMessagesExceptLast","_interval","is_saved","sendMAMRequest","func_conn","_delete_handler_timeout","send_counter","previous_history","_load_history_timeout","unread_history_first","first_unread_msg_stanza_id","unread_history_before","last_history","_wait_load_unread_history","last_archive_id","loadUnreadHistory","is_error","_load_history_feedback_timeout","showPinnedMessage","unpinMessage","pinned_msg_modal","imageOnload","$image_container","$copy_link_icon","videoOnload","initPlyrEmbedPlayer","OGPLinkOnload","locationOnload","$copy_location_div","loadLocationInChat","ol","$map_element","Map","center","proj","transform","interactions","interaction_defaults","altShiftDragRotate","doubleClickZoom","keyboard","mouseWheelZoom","shiftDragZoom","dragPan","pinchRotate","pinchZoom","layers","layer","Tile","OSM","mapCanvas","getSize","mapContext","querySelectorAll","globalAlpha","matrix","CanvasRenderingContext2D","setTransform","Path2D","getComputedStyle","translate","msSaveBlob","msToBlob","getElementById","dataURL","setTarget","$chat_state","$subtype","showChatState","_chatstate_show_timeout","_current_composing_msg","updateMentions","mention_target","is_scrolled_to_bottom","startGalleryUploadFile","startUploadFile","notifyMessage","archiveChat","is_scrolling_needed","attentionMessage","_pending_my_info","decryptImages","force","fwd_msg","$prev_message","$one_image","$collage_image","initMagnificPopup","initZoomGallery","getImagesInformation","servers","delegate","closeBtnInside","opener","$new_message","short_datetime","new_title","messages_to_save","$message_in_chat","content_view","removeMessageFromDOM","next","manageSelectedMessages","_clearing_history","dialog_message","fontcolor","hideShowCursor","is_popup","createImageGrid","template_for_images","hidden_images","is_video","is_image","is_location","is_file","avatar_id","from_id","audio_player_list","verbose_state","short_time","classes","matching_markup","exec","saved_main","searched","file_upload","main","is_contact_trusted","$img_html","createImage","img_content","createImageContainer","video_content","createVideoContainer","video_el","createVideo","template_for_file_content","copied_attrs","mdi_icon_class","audio_file","audio_player","contact_avatar","file_","upload_id","loading_circle","maxHeight","maxWidth","imgHeight","imgWidth","file_loading","template_for_location_content","location_attrs","template_for_link_reference_content","link_references_attrs","youtube_url_regexp","vimeo_url_regexp","link","site_name","link_reference_chat","$img_html_forward","is_image_forward","images_forward","is_forward_video","is_forward_file","is_forward_location","fwd_markup_body","$f_message","is_fwd_voice_message","fwd_messages_count","fwd_messages_link","img_content_forward","embed_video","getDateIndicator","date","day_date","msg_players","msg_videos","existing_player","message_id","video_id","hideMessageAuthor","pending_avatar","data_avatar","hideFwdMessageAuthor","showFwdMessageAuthor","$fwd_message","msg_elem","$prev_msg","fwd_msg_item","is_system","is_same_sender","is_same_date","$fwd_msg_item","$prev_fwd_message","notification_text","onclick","sendMessage","legacy_body","legacy_fwd_msg","createTextMessage","idx_begin","fwd","idx_end","mention_attrs","blockquote","all_files","created","u","link_reference","property","chat_hash_id","SCE","CLIENT","msg_sending_timestamp","msgCallback","was_reconnecting","_pending_time","saveForwardedMessage","forwarded_messages","onSubmit","fwd_messages","markup_references","attached_files","submitted_here","_dfd_info","new_fwd_messages","upload_service","checkContactFingerprints","addFileMessage","is_voice","new_files","file_counter","http_upload_service","deferred_all","addFileSnippets","encrypted_file","encryptFile","new_file","$slot","get_url","put_url","onFileNotUploaded","xhr","abort","onabort","upload","onprogress","percentage","loaded","onFileUploaded","cancelled_files_count","xhr_requests","msg_files_count","is_errored","arrayIndex","is_uploading","setEditedMessageAttachments","setRedactedUploadMessage","is_cancelled","oncancel","xhr_status","fakeStatus","fakeResponse","slot_response","setRequestHeader","response_text","error_status","statusText","err_status","files_","file_new_format","imgContent","video_attrs","$video_wrap_template","error_type","deleteFilesFromMessages","_chatstate_timeout","_chatstate_send_timeout","chat_state","EXTENDED_CHATSTATES","$next_msg","$old_prev_msg","is_synced","is_missed_msg","onTouchMessage","fwd_link_references","files_links","location_links","download","$plyr","no_select_message","expanded_fwd_message","quill","caret_position","participant_attrs","insertMention","img_information","images_details","$imgs","processClick","$prev_selected","$all_msgs","nextUntil","location_name","display_name","retrySendMessage","removeFileErrorMessage","chat_content_placeholder","pinned_message_panel","onClickPinnedMessage","onClickExpandedMessageLocation","expandFwdMessage","registerQuillEmbeddedsTags","Inline","import","Mention","static","paramValue","super","on_format","classList","blotName","optimize","item1","item2","t1","t2","mam_requests","deferred_mam_requests","openMention","identifier","registerMessageHandler","_msg_handler","runMAMRequests","parsePubSubNode","is_member_id","receivePubsubMessage","photo_id","member_node","b64_avatar","avatar_attrs","$mam","receiveHeadlineMessage","receiveErrorMessage","$stanza_received","$echo_msg","origin_msg_id","pending_message","$token_revoke","token_idx","settings_right","participant_version","active_right_screen","participant_msg_item","$retracted_msg","retracted_msg_id","retracted_user_id","receiveStanzaId","GROUP_CHAT_INVITE_HTTP","GROUP_CHAT_INVITE","$forwarded","to_jid","to_bare_jid","to_resource","stanza_ids","$carbons","carbon_direction","forwarded_msgs","FORWARD","forwarded_msg","$forwarded_msg","$forwarded_message","$forwarded_delay","add_group_chat","ACCOUNT_ITEM","setDefaultSettings","$global_wrap","default_global_value","$membership_wrap","default_membership_value","setCustomDomain","add_chat_account_item","updateGroupJid","lower","textarea_is_empty","fixJid","createGroupChat","chat_jid","addGroupChat","xmpp_server","group_chats_support","chats_panel","active_chat","onChatAdded","onChangedReadStatus","updateChatPosition","readAllMessages","onWindowResized","active_toolbar","hideChatsFeedback","_load_chats_timeout","previous_chat","replaceChatItem","pinned_chats","$chat_item","scrolled_top","updateScreenAllChats","force_bottom","current_scrolling","scrolled_to_bottom","showGroupChats","group_chats_pinned","showChats","private_chats","private_chats_pinned","account_chats","account_chats_pinned","showArchiveChats","archive_chats","saved_chats","notificatons_chats","all_chats","all_chats_pinned","forward_panel","$cloned_item","is_match","has_matches_chats","has_matches_contacts","contact_list_item","forwardTo","setForwardedMessages","invitation_panel_view","registerClickEvents","selected_contacts","clearPanel","group_node","list_item","toggleContacts","selectAllGroup","addSelectedUsers","selected_users_count","_dfd_invitations","invitations_count","toast_text","sendInvite","showReasonWrap","addUser","itemIdx","reason_text","sendInviteMessage","onInviteError","jid_to","hide_clone","is_visible","group_roster","selected_counter","saved_chat_head","_update_oneliner_interval","updateOneLiner","hideChat","updatePlyrTitle","updatePlyrTime","updateJingleButton","tooltip","rand_idx","one_liner","deleteChat","rewrite_support","pinSavedChat","pinned_value","visible_view","playPausePlyr","stopPlyr","popupPlyr","poster","$title_elem","voip_status","openJingleMessage","chat_head","resources_view","updateArchived","pinChat","onChangedBlocked","updateGroupChatHead","updateMenu","showContactDetailsRight","showContactResources","showMembersDetails","callAttention","updateArchiveChatsList","no_iq","is_archived_status","sendJingleMessage","getActiveScreen","active_screen","inviteUsers","exportHistory","showFingerprints","startEncryptedChat","openEncryptedChat","openRegularChat","send_media","addMedia","resolved_file","location_popup","initMap","coordinates","placemark","Overlay","Placemark","contentColor","autoPan","anchor","autoPanAnimation","placemark_my_location","overlays","enableHighAccuracy","maximumAge","pos","crd","getView","setCenter","longitude","latitude","setZoom","button_geoposition","geolocation","getCurrentPosition","custom_element_position","geoposition","control","Control","addControl","getPlacemarkPositionControl","button_placemark_position","custom_element_placemark_position","placemark_position","custom_element_show_location_name","show_location_name","send_buttom","send_address_div","send_div","custom_element_send","sLayer","Vector","Style","Circle","radius","stroke","Stroke","Fill","addLayer","SearchNominatim","polygon","reverseGeocode","house_number","road","neighbourhood","allotments","village","city","final_text","getSource","clear","geojson","GeoJSON","readFeature","dataProjection","featureProjection","getProjection","resolution","getResolutionForExtent","getGeometry","getExtent","getZoomForResolution","extent","getCenter","coordinate","getZoom","updateSize","sendLocation","closeLocationName","initializeScrollbar","destroyScrollbar","chat_bottom","mention_avatar_size","rich_textarea_wrap","bindings","enter","insertText","arrow_up","active_item","$prev_elem","arrow_down","$next_elem","arrow_left","arrow_right","modules","formats","scrollingContainer","edit_message","stopped_loading_link_reference","link_reference_exempted","currently_loaded_link_references","loading_link_reference","onChangedText","onBlockedUpdate","updateInfoInBottom","replyMessages","forwardMessages","copyMessages","deleteMessages","showEditPanel","pinMessage","resetSelectedMessages","$rich_textarea","rich_textarea","$rich_textarea_wrap","$placeholder","oncut","onCut","window_onclick","$target_emoji","renderLastEmoticons","http_upload","messages_arr","focusOnInput","checkOwnFingerprints","is_scrolled_bottom","encryption_warning","unverified_counter","content_encryption_warning","onClickBottom","setOneLiner","disable","enable","moveCursorToEnd","root","lastElementChild","lastChild","send_on_enter","shiftKey","ctrlKey","displayMicrophone","displaySend","updateMarkupPanel","$ic_markup","updatePlaceholder","changeEncryption","current_height","quill_textarea","quill_current_height","text_input_height","quill_content","getContents","ops","insert","trimmed_text","setContents","bottom_height","_timeout_textchange","updateOpenGraphReference","updateMentionsList","mention_text","mention_item","mention_all","onMentionButtonClick","getLength","setSelection","inputMention","$participant_item","lastRange","to_caret_text","mentions_at","matchAll","mentions_plus","at_position","plus_position","mention_position","deleteText","insertEmbed","showAccountSettings","edit_msg","setEditedMessage","mention_at_regexp","mention_plus_regexp","getLeaf","domNode","unsetForwardedMessages","removeLinkReferenceByUrl","removeFileSnippetById","clipboard_data","image_from_clipboard","getAsFile","arr_text","difference","request_count","link_reference_request_timestamp","request_timestamp","removeAttachments","removeAllFileSnippets","removeAllLinkReferences","stopLoadingLinkReference","removeLinkReference","uid","attached_file","typeicon","removeFileSnippet","is_upload","showLocationPopup","showMediaPopup","stopWritingVoiceMessage","$bottom_panel","writeVoiceMessage","initAudio","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","constraints","channelCount","chunks","$mic","onSuccess","start_time","end_time","mediaRecorder","encoderPath","encoderSampleRate","numberOfChannels","mic_hover","onstart","$timer_elem","$status_msg","$voice_visualizer","timerIdDot","onstop","audio_name","audio_type","ondataavailable","onError","caret_idx","savedRange","getFormat","formatText","cached_last_emoji","getLastEmoji","$last_emoticons","updateLastEmoji","$target_text","forced","emoji_item","innerText","content_concat","content_attrs","mention_idx","ins","quote_start_idx","quote_end_idx","markup_ref","start_length","delta","markup_reference","editMessage","failed_files","file_check_dfd","pluck","setText","msg_author","image_preview","$img_html_preview","fwd_images","fwd_files","fwd_locations","createPreviewImage","onShowMarkupPanel","$clicked_icon","is_panel_opened","$selected_msgs","$input_panel","$message_actions","my_msg","$msgs","dataset","pushMessagesToClipboard","text_markups","original_body","forwarded_body","groupchat_ref","forward_ref","gc_length","decrypted_msg","putMessage","my_msgs","symmetric_deletion","copied_messages","fwd_msg_indicator","text_message","current_date","msg_sender","is_colored","current_bottom","chat_placeholder","last_emoji","cached_avatars","group_chat_members_lists","last_emoji_icons","muted_list","archived_list","group_chat_list","avatar_list","deleteTimedHandler","_get_msg_handler","addTimedHandler","handlers","h","omemo_enable_placeholder","onselectstart","metaKey","Chats","opened_chats","OpenedChats","closed_chats","ClosedChats","chats_view","ChatsView","ChatHeadContainer","chat_body","ChatBodyContainer","chat_body_placeholder","ChatBodyPlaceholderContainer","ChatBottomContainer","ChatPlaceholderView","add_group_chat_view","AddGroupChatView","searching","searching_wide","colorUpdated","toggleProperties","endDiscovering","isPropertiesVisible","discover","searchExistingGroupChats","getGroupchatService","onDiscoveringError","getGroupchatFeatures","getServerInfo","getChatsFromSever","$chat_item_html","existing_groupchat_item","searching_account_item","getChatProperties","request_iq","$iq_response","chat_properties","more_info_view","existing_groupchat_details_view","joinChat","getSearchingFields","iq_get","INDEX","parseSearchingFields","iq_result","$fields","XDATA","supported_fields","indexed_chats","iq_search","anywhere","onSearched","$chat","$property","property_name","property_value","discovering","DiscoveringView","onMessageUpdated","onMentionAdded","mentions_panel","active_mention","onMentionRemoved","updateMentionPosition","replaceMentionItem","$prev_el","$next_el","readAllMentions","contact_archive_id","previous_mention","updateContactName","contact_name","default_avatar","mentions_placeholder","Mentions","mentions_view","MentionsView","MentionsPlaceholderView","shift_pressed","shiftctrl_pressed","updateLayout","updateContainersLayout","panel_width","left_panel_width","right_panel_width","right_contact_panel_width","chat_bottom_panel_width","is_wide","is_narrow","toolbar_accounts_heigth","right_contact_panel_styles","right_contact_panel_saveable","wide","placeholders","path_acc_settings_modal","ViewPath","path_chat_head","path_chat_body","path_chat_body_placeholder","path_chat_bottom","path_group_invitation","path_enable_view","path_contact_details_right","path_contact_details_right_encrypted","path_participant_messages","path_details_participants","discovering_main","details","details_content","omemo_item","KeyHelper","SignalProtocolAddress","SessionBuilder","SessionCipher","updateDevices","d","removeSession","getDevice","getDevicesNode","_pending_devices","_dfd_devices","cb","parseUserDevices","enc_promises","aes","deviceId","ciphertext","preKey","is_own_devices","renderOwnDevices","renderDevices","updateFingerprints","updateOwnFingerprint","getMyDevices","editLabel","saveLabel","onblur","onkeydown","publishDevice","devices_count","$container","f_count","old_fingerprint","addRow","getBundleInfo","getIdentityKeyPair","pubKey","padStart","trustDevice","is_session_initiated","ignoreDevice","delete_button","edit_setting","fingerprint_item","deleteDevice","fingerprints_devices","renderTrustOnFingerprint","$warning_container","untrusted_count","device_icons","fingerprint_devices_item","getIdentity","generateIdentity","getPreKeys","publishBundle","generateIdentityKeyPair","generateRegistrationId","identityKey","registrationId","cacheIdentity","privKey","generatePreKeys","preKeysPromises","generatePreKey","generateSignedPreKey","getSignedPreKey","keyPair","signature","keyId","prekeys","getAll","prekey","priv_pk","key_pair","storePreKey","getUsedPreKeys","storeSignedPreKey","own_used_prekeys","identity","signedPreKey","cacheSignedPreKey","converted_spk","closeSession","sendOptOut","_pending_bundle","_dfd_bundle","$bundle","$spk","$pk","getRandomPreKey","cipherText","plainText","sessionCipher","decryptPreKeyWhisperMessage","hasSession","getCachedSession","storeSession","decryptWhisperMessage","getPreKey","used_prekeys","getSession","getDeviceId","cached_pk","isTrusted","processPreKey","publicKey","preKeyBundle","sessions","onDeviceIdUpdated","onOmemoDestroyed","peers","generateDeviceId","onOwnDevicesUpdated","removePreKey","cacheSession","storeSessions","deleteOwnDevice","addDevice","_pending_own_devices","_dfd_own_devices","contact_fingerprints","cacheRetractVersion","getRetractVersion","dev_id","rand","encryptedMessage","encryptedElement","myKeys","rid","kex","EXPLICIT_MESSAGE_ENCRYPTION","hasChanges","o1","o2","obj1","obj2","has_devices","device_ik","cached_msg","getMessage","getTrusted","decryption_retry","own_trusted","contact_trusted","parseEncrypted","$encrypted","$payload","$header","keyElement","$m","encryptedData","ownPreKey","exportedKey","toBase64","publish","pks","conn_omemo","configNode","spks","removed_pk","prekeys_id_list","prekeys_length","last_id","missing_keys","used_last_id","NaN","isEmpty","used_prekeys_id_list","rec","device_attrs","createBundleNode","contact_messages","Direction","SENDING","RECEIVING","getLocalRegistrationId","defaultValue","isTrustedIdentity","direction","util","loadIdentityKey","saveIdentity","fromString","existing","getName","loadPreKey","loadSignedPreKey","removeSignedPreKey","loadSession","record","getAllSessions","removeAllSessions","omemo_enable","onOmemoChange","enableOmemo","closeOmemoPlaceholder","views","api_service","discovery","ui","g","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","amdO","O","chunkIds","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","getPrototypeOf","mode","def","current","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","promises","miniCssF","globalThis","hmd","l","script","needAttach","scripts","s","charset","nc","onScriptComplete","doneFns","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","baseURI","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}